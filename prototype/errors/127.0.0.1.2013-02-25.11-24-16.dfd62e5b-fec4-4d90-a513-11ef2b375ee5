(dp1
S'output'
p2
S"<class 'sqlite3.IntegrityError'> column name is not unique"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"edit",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(replica="replicate")\n        db.sample.insert(**db.sample._filter_fields(rec))\n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(duplicate)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of IntegrityError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.IntegrityError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of IntegrityError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of IntegrityError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p45
sS'args'
p46
S"('column name is not unique',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of IntegrityError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of IntegrityError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of IntegrityError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of IntegrityError object>"
p57
ssS'evalue'
p58
S'column name is not unique'
p59
sS'request'
p60
ccopy_reg
_reconstructor
p61
(cgluon.html
BEAUTIFY
p62
c__builtin__
object
p63
NtRp64
(dp65
S'attributes'
p66
(dp67
sS'components'
p68
(lp69
g61
(cgluon.html
TABLE
p70
g63
NtRp71
(dp72
g66
(dp73
S'level'
p74
I5
ssS'parent'
p75
Nsg68
(lp76
g61
(cgluon.html
TR
p77
g63
NtRp78
(dp79
g66
(dp80
sg75
g71
sg68
(lp81
g61
(cgluon.html
TD
p82
g63
NtRp83
(dp84
g66
(dp85
S'_style'
p86
S'font-weight:bold;vertical-align:top'
p87
ssg75
g78
sg68
(lp88
S'ajax'
p89
asbag61
(g82
g63
NtRp90
(dp91
g66
(dp92
S'_valign'
p93
S'top'
p94
ssg75
g78
sg68
(lp95
S':'
asbag61
(g82
g63
NtRp96
(dp97
g66
(dp98
sg75
g78
sg68
(lp99
g61
(g62
g63
NtRp100
(dp101
g66
(dp102
g74
I5
ssg75
g96
sg68
(lp103
S'False'
p104
asbasbasbag61
(g77
g63
NtRp105
(dp106
g66
(dp107
sg75
g71
sg68
(lp108
g61
(g82
g63
NtRp109
(dp110
g66
(dp111
g86
g87
ssg75
g105
sg68
(lp112
S'application'
p113
asbag61
(g82
g63
NtRp114
(dp115
g66
(dp116
g93
g94
ssg75
g105
sg68
(lp117
S':'
asbag61
(g82
g63
NtRp118
(dp119
g66
(dp120
sg75
g105
sg68
(lp121
g61
(g62
g63
NtRp122
(dp123
g66
(dp124
g74
I5
ssg75
g118
sg68
(lp125
S'DEV_bootstrap_ch'
p126
asbasbasbag61
(g77
g63
NtRp127
(dp128
g66
(dp129
sg75
g71
sg68
(lp130
g61
(g82
g63
NtRp131
(dp132
g66
(dp133
g86
g87
ssg75
g127
sg68
(lp134
g46
asbag61
(g82
g63
NtRp135
(dp136
g66
(dp137
g93
g94
ssg75
g127
sg68
(lp138
S':'
asbag61
(g82
g63
NtRp139
(dp140
g66
(dp141
sg75
g127
sg68
(lp142
g61
(g62
g63
NtRp143
(dp144
g66
(dp145
g74
I5
ssg75
g139
sg68
(lp146
g61
(g70
g63
NtRp147
(dp148
g66
(dp149
g74
I4
ssg75
Nsg68
(lp150
g61
(g77
g63
NtRp151
(dp152
g66
(dp153
sg75
g147
sg68
(lp154
g61
(g82
g63
NtRp155
(dp156
g66
(dp157
sg75
g151
sg68
(lp158
g61
(g62
g63
NtRp159
(dp160
g66
(dp161
g74
I4
ssg75
g155
sg68
(lp162
S'project'
p163
asbasbasbag61
(g77
g63
NtRp164
(dp165
g66
(dp166
sg75
g147
sg68
(lp167
g61
(g82
g63
NtRp168
(dp169
g66
(dp170
sg75
g164
sg68
(lp171
g61
(g62
g63
NtRp172
(dp173
g66
(dp174
g74
I4
ssg75
g168
sg68
(lp175
S'experiment.project'
p176
asbasbasbag61
(g77
g63
NtRp177
(dp178
g66
(dp179
sg75
g147
sg68
(lp180
g61
(g82
g63
NtRp181
(dp182
g66
(dp183
sg75
g177
sg68
(lp184
g61
(g62
g63
NtRp185
(dp186
g66
(dp187
g74
I4
ssg75
g181
sg68
(lp188
S'1'
asbasbasbag61
(g77
g63
NtRp189
(dp190
g66
(dp191
sg75
g147
sg68
(lp192
g61
(g82
g63
NtRp193
(dp194
g66
(dp195
sg75
g189
sg68
(lp196
g61
(g62
g63
NtRp197
(dp198
g66
(dp199
g74
I4
ssg75
g193
sg68
(lp200
S'sample.experiment'
p201
asbasbasbag61
(g77
g63
NtRp202
(dp203
g66
(dp204
sg75
g147
sg68
(lp205
g61
(g82
g63
NtRp206
(dp207
g66
(dp208
sg75
g202
sg68
(lp209
g61
(g62
g63
NtRp210
(dp211
g66
(dp212
g74
I4
ssg75
g206
sg68
(lp213
S'1'
asbasbasbag61
(g77
g63
NtRp214
(dp215
g66
(dp216
sg75
g147
sg68
(lp217
g61
(g82
g63
NtRp218
(dp219
g66
(dp220
sg75
g214
sg68
(lp221
g61
(g62
g63
NtRp222
(dp223
g66
(dp224
g74
I4
ssg75
g218
sg68
(lp225
S'2'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp226
(dp227
g66
(dp228
sg75
g71
sg68
(lp229
g61
(g82
g63
NtRp230
(dp231
g66
(dp232
g86
g87
ssg75
g226
sg68
(lp233
S'body'
p234
asbag61
(g82
g63
NtRp235
(dp236
g66
(dp237
g93
g94
ssg75
g226
sg68
(lp238
S':'
asbag61
(g82
g63
NtRp239
(dp240
g66
(dp241
sg75
g226
sg68
(lp242
g61
(g62
g63
NtRp243
(dp244
g66
(dp245
g74
I5
ssg75
g239
sg68
(lp246
S'<cStringIO.StringO object at 0xae32cd00>'
p247
asbasbasbag61
(g77
g63
NtRp248
(dp249
g66
(dp250
sg75
g71
sg68
(lp251
g61
(g82
g63
NtRp252
(dp253
g66
(dp254
g86
g87
ssg75
g248
sg68
(lp255
S'cid'
p256
asbag61
(g82
g63
NtRp257
(dp258
g66
(dp259
g93
g94
ssg75
g248
sg68
(lp260
S':'
asbag61
(g82
g63
NtRp261
(dp262
g66
(dp263
sg75
g248
sg68
(lp264
g61
(g62
g63
NtRp265
(dp266
g66
(dp267
g74
I5
ssg75
g261
sg68
(lp268
S'None'
p269
asbasbasbag61
(g77
g63
NtRp270
(dp271
g66
(dp272
sg75
g71
sg68
(lp273
g61
(g82
g63
NtRp274
(dp275
g66
(dp276
g86
g87
ssg75
g270
sg68
(lp277
S'client'
p278
asbag61
(g82
g63
NtRp279
(dp280
g66
(dp281
g93
g94
ssg75
g270
sg68
(lp282
S':'
asbag61
(g82
g63
NtRp283
(dp284
g66
(dp285
sg75
g270
sg68
(lp286
g61
(g62
g63
NtRp287
(dp288
g66
(dp289
g74
I5
ssg75
g283
sg68
(lp290
S'127.0.0.1'
p291
asbasbasbag61
(g77
g63
NtRp292
(dp293
g66
(dp294
sg75
g71
sg68
(lp295
g61
(g82
g63
NtRp296
(dp297
g66
(dp298
g86
g87
ssg75
g292
sg68
(lp299
S'controller'
p300
asbag61
(g82
g63
NtRp301
(dp302
g66
(dp303
g93
g94
ssg75
g292
sg68
(lp304
S':'
asbag61
(g82
g63
NtRp305
(dp306
g66
(dp307
sg75
g292
sg68
(lp308
g61
(g62
g63
NtRp309
(dp310
g66
(dp311
g74
I5
ssg75
g305
sg68
(lp312
S'default'
p313
asbasbasbag61
(g77
g63
NtRp314
(dp315
g66
(dp316
sg75
g71
sg68
(lp317
g61
(g82
g63
NtRp318
(dp319
g66
(dp320
g86
g87
ssg75
g314
sg68
(lp321
S'cookies'
p322
asbag61
(g82
g63
NtRp323
(dp324
g66
(dp325
g93
g94
ssg75
g314
sg68
(lp326
S':'
asbag61
(g82
g63
NtRp327
(dp328
g66
(dp329
sg75
g314
sg68
(lp330
g61
(g62
g63
NtRp331
(dp332
g66
(dp333
g74
I5
ssg75
g327
sg68
(lp334
g61
(g70
g63
NtRp335
(dp336
g66
(dp337
g74
I4
ssg75
Nsg68
(lp338
g61
(g77
g63
NtRp339
(dp340
g66
(dp341
sg75
g335
sg68
(lp342
g61
(g82
g63
NtRp343
(dp344
g66
(dp345
g86
g87
ssg75
g339
sg68
(lp346
S'session_id_admin'
p347
asbag61
(g82
g63
NtRp348
(dp349
g66
(dp350
g93
g94
ssg75
g339
sg68
(lp351
S':'
asbag61
(g82
g63
NtRp352
(dp353
g66
(dp354
sg75
g339
sg68
(lp355
g61
(g62
g63
NtRp356
(dp357
g66
(dp358
g74
I4
ssg75
g352
sg68
(lp359
S'127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed'
p360
ag61
(g70
g63
NtRp361
(dp362
g66
(dp363
g74
I3
ssg75
Nsg68
(lp364
g61
(g77
g63
NtRp365
(dp366
g66
(dp367
sg75
g361
sg68
(lp368
g61
(g82
g63
NtRp369
(dp370
g66
(dp371
g86
g87
ssg75
g365
sg68
(lp372
S'comment'
p373
asbag61
(g82
g63
NtRp374
(dp375
g66
(dp376
g93
g94
ssg75
g365
sg68
(lp377
S':'
asbag61
(g82
g63
NtRp378
(dp379
g66
(dp380
sg75
g365
sg68
(lp381
g61
(g62
g63
NtRp382
(dp383
g66
(dp384
g74
I3
ssg75
g378
sg68
(lp385
S''
asbasbasbag61
(g77
g63
NtRp386
(dp387
g66
(dp388
sg75
g361
sg68
(lp389
g61
(g82
g63
NtRp390
(dp391
g66
(dp392
g86
g87
ssg75
g386
sg68
(lp393
S'domain'
p394
asbag61
(g82
g63
NtRp395
(dp396
g66
(dp397
g93
g94
ssg75
g386
sg68
(lp398
S':'
asbag61
(g82
g63
NtRp399
(dp400
g66
(dp401
sg75
g386
sg68
(lp402
g61
(g62
g63
NtRp403
(dp404
g66
(dp405
g74
I3
ssg75
g399
sg68
(lp406
S''
asbasbasbag61
(g77
g63
NtRp407
(dp408
g66
(dp409
sg75
g361
sg68
(lp410
g61
(g82
g63
NtRp411
(dp412
g66
(dp413
g86
g87
ssg75
g407
sg68
(lp414
S'expires'
p415
asbag61
(g82
g63
NtRp416
(dp417
g66
(dp418
g93
g94
ssg75
g407
sg68
(lp419
S':'
asbag61
(g82
g63
NtRp420
(dp421
g66
(dp422
sg75
g407
sg68
(lp423
g61
(g62
g63
NtRp424
(dp425
g66
(dp426
g74
I3
ssg75
g420
sg68
(lp427
S''
asbasbasbag61
(g77
g63
NtRp428
(dp429
g66
(dp430
sg75
g361
sg68
(lp431
g61
(g82
g63
NtRp432
(dp433
g66
(dp434
g86
g87
ssg75
g428
sg68
(lp435
S'httponly'
p436
asbag61
(g82
g63
NtRp437
(dp438
g66
(dp439
g93
g94
ssg75
g428
sg68
(lp440
S':'
asbag61
(g82
g63
NtRp441
(dp442
g66
(dp443
sg75
g428
sg68
(lp444
g61
(g62
g63
NtRp445
(dp446
g66
(dp447
g74
I3
ssg75
g441
sg68
(lp448
S''
asbasbasbag61
(g77
g63
NtRp449
(dp450
g66
(dp451
sg75
g361
sg68
(lp452
g61
(g82
g63
NtRp453
(dp454
g66
(dp455
g86
g87
ssg75
g449
sg68
(lp456
S'max-age'
p457
asbag61
(g82
g63
NtRp458
(dp459
g66
(dp460
g93
g94
ssg75
g449
sg68
(lp461
S':'
asbag61
(g82
g63
NtRp462
(dp463
g66
(dp464
sg75
g449
sg68
(lp465
g61
(g62
g63
NtRp466
(dp467
g66
(dp468
g74
I3
ssg75
g462
sg68
(lp469
S''
asbasbasbag61
(g77
g63
NtRp470
(dp471
g66
(dp472
sg75
g361
sg68
(lp473
g61
(g82
g63
NtRp474
(dp475
g66
(dp476
g86
g87
ssg75
g470
sg68
(lp477
S'path'
p478
asbag61
(g82
g63
NtRp479
(dp480
g66
(dp481
g93
g94
ssg75
g470
sg68
(lp482
S':'
asbag61
(g82
g63
NtRp483
(dp484
g66
(dp485
sg75
g470
sg68
(lp486
g61
(g62
g63
NtRp487
(dp488
g66
(dp489
g74
I3
ssg75
g483
sg68
(lp490
S''
asbasbasbag61
(g77
g63
NtRp491
(dp492
g66
(dp493
sg75
g361
sg68
(lp494
g61
(g82
g63
NtRp495
(dp496
g66
(dp497
g86
g87
ssg75
g491
sg68
(lp498
S'secure'
p499
asbag61
(g82
g63
NtRp500
(dp501
g66
(dp502
g93
g94
ssg75
g491
sg68
(lp503
S':'
asbag61
(g82
g63
NtRp504
(dp505
g66
(dp506
sg75
g491
sg68
(lp507
g61
(g62
g63
NtRp508
(dp509
g66
(dp510
g74
I3
ssg75
g504
sg68
(lp511
S''
asbasbasbag61
(g77
g63
NtRp512
(dp513
g66
(dp514
sg75
g361
sg68
(lp515
g61
(g82
g63
NtRp516
(dp517
g66
(dp518
g86
g87
ssg75
g512
sg68
(lp519
S'version'
p520
asbag61
(g82
g63
NtRp521
(dp522
g66
(dp523
g93
g94
ssg75
g512
sg68
(lp524
S':'
asbag61
(g82
g63
NtRp525
(dp526
g66
(dp527
sg75
g512
sg68
(lp528
g61
(g62
g63
NtRp529
(dp530
g66
(dp531
g74
I3
ssg75
g525
sg68
(lp532
S''
asbasbasbasbasbasbasbag61
(g77
g63
NtRp533
(dp534
g66
(dp535
sg75
g335
sg68
(lp536
g61
(g82
g63
NtRp537
(dp538
g66
(dp539
g86
g87
ssg75
g533
sg68
(lp540
S'session_id_dev_bootstrap_ch'
p541
asbag61
(g82
g63
NtRp542
(dp543
g66
(dp544
g93
g94
ssg75
g533
sg68
(lp545
S':'
asbag61
(g82
g63
NtRp546
(dp547
g66
(dp548
sg75
g533
sg68
(lp549
g61
(g62
g63
NtRp550
(dp551
g66
(dp552
g74
I4
ssg75
g546
sg68
(lp553
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p554
ag61
(g70
g63
NtRp555
(dp556
g66
(dp557
g74
I3
ssg75
Nsg68
(lp558
g61
(g77
g63
NtRp559
(dp560
g66
(dp561
sg75
g555
sg68
(lp562
g61
(g82
g63
NtRp563
(dp564
g66
(dp565
g86
g87
ssg75
g559
sg68
(lp566
g373
asbag61
(g82
g63
NtRp567
(dp568
g66
(dp569
g93
g94
ssg75
g559
sg68
(lp570
S':'
asbag61
(g82
g63
NtRp571
(dp572
g66
(dp573
sg75
g559
sg68
(lp574
g61
(g62
g63
NtRp575
(dp576
g66
(dp577
g74
I3
ssg75
g571
sg68
(lp578
S''
asbasbasbag61
(g77
g63
NtRp579
(dp580
g66
(dp581
sg75
g555
sg68
(lp582
g61
(g82
g63
NtRp583
(dp584
g66
(dp585
g86
g87
ssg75
g579
sg68
(lp586
g394
asbag61
(g82
g63
NtRp587
(dp588
g66
(dp589
g93
g94
ssg75
g579
sg68
(lp590
S':'
asbag61
(g82
g63
NtRp591
(dp592
g66
(dp593
sg75
g579
sg68
(lp594
g61
(g62
g63
NtRp595
(dp596
g66
(dp597
g74
I3
ssg75
g591
sg68
(lp598
S''
asbasbasbag61
(g77
g63
NtRp599
(dp600
g66
(dp601
sg75
g555
sg68
(lp602
g61
(g82
g63
NtRp603
(dp604
g66
(dp605
g86
g87
ssg75
g599
sg68
(lp606
g415
asbag61
(g82
g63
NtRp607
(dp608
g66
(dp609
g93
g94
ssg75
g599
sg68
(lp610
S':'
asbag61
(g82
g63
NtRp611
(dp612
g66
(dp613
sg75
g599
sg68
(lp614
g61
(g62
g63
NtRp615
(dp616
g66
(dp617
g74
I3
ssg75
g611
sg68
(lp618
S''
asbasbasbag61
(g77
g63
NtRp619
(dp620
g66
(dp621
sg75
g555
sg68
(lp622
g61
(g82
g63
NtRp623
(dp624
g66
(dp625
g86
g87
ssg75
g619
sg68
(lp626
g436
asbag61
(g82
g63
NtRp627
(dp628
g66
(dp629
g93
g94
ssg75
g619
sg68
(lp630
S':'
asbag61
(g82
g63
NtRp631
(dp632
g66
(dp633
sg75
g619
sg68
(lp634
g61
(g62
g63
NtRp635
(dp636
g66
(dp637
g74
I3
ssg75
g631
sg68
(lp638
S''
asbasbasbag61
(g77
g63
NtRp639
(dp640
g66
(dp641
sg75
g555
sg68
(lp642
g61
(g82
g63
NtRp643
(dp644
g66
(dp645
g86
g87
ssg75
g639
sg68
(lp646
g457
asbag61
(g82
g63
NtRp647
(dp648
g66
(dp649
g93
g94
ssg75
g639
sg68
(lp650
S':'
asbag61
(g82
g63
NtRp651
(dp652
g66
(dp653
sg75
g639
sg68
(lp654
g61
(g62
g63
NtRp655
(dp656
g66
(dp657
g74
I3
ssg75
g651
sg68
(lp658
S''
asbasbasbag61
(g77
g63
NtRp659
(dp660
g66
(dp661
sg75
g555
sg68
(lp662
g61
(g82
g63
NtRp663
(dp664
g66
(dp665
g86
g87
ssg75
g659
sg68
(lp666
g478
asbag61
(g82
g63
NtRp667
(dp668
g66
(dp669
g93
g94
ssg75
g659
sg68
(lp670
S':'
asbag61
(g82
g63
NtRp671
(dp672
g66
(dp673
sg75
g659
sg68
(lp674
g61
(g62
g63
NtRp675
(dp676
g66
(dp677
g74
I3
ssg75
g671
sg68
(lp678
S''
asbasbasbag61
(g77
g63
NtRp679
(dp680
g66
(dp681
sg75
g555
sg68
(lp682
g61
(g82
g63
NtRp683
(dp684
g66
(dp685
g86
g87
ssg75
g679
sg68
(lp686
g499
asbag61
(g82
g63
NtRp687
(dp688
g66
(dp689
g93
g94
ssg75
g679
sg68
(lp690
S':'
asbag61
(g82
g63
NtRp691
(dp692
g66
(dp693
sg75
g679
sg68
(lp694
g61
(g62
g63
NtRp695
(dp696
g66
(dp697
g74
I3
ssg75
g691
sg68
(lp698
S''
asbasbasbag61
(g77
g63
NtRp699
(dp700
g66
(dp701
sg75
g555
sg68
(lp702
g61
(g82
g63
NtRp703
(dp704
g66
(dp705
g86
g87
ssg75
g699
sg68
(lp706
g520
asbag61
(g82
g63
NtRp707
(dp708
g66
(dp709
g93
g94
ssg75
g699
sg68
(lp710
S':'
asbag61
(g82
g63
NtRp711
(dp712
g66
(dp713
sg75
g699
sg68
(lp714
g61
(g62
g63
NtRp715
(dp716
g66
(dp717
g74
I3
ssg75
g711
sg68
(lp718
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp719
(dp720
g66
(dp721
sg75
g71
sg68
(lp722
g61
(g82
g63
NtRp723
(dp724
g66
(dp725
g86
g87
ssg75
g719
sg68
(lp726
S'env'
p727
asbag61
(g82
g63
NtRp728
(dp729
g66
(dp730
g93
g94
ssg75
g719
sg68
(lp731
S':'
asbag61
(g82
g63
NtRp732
(dp733
g66
(dp734
sg75
g719
sg68
(lp735
g61
(g62
g63
NtRp736
(dp737
g66
(dp738
g74
I5
ssg75
g732
sg68
(lp739
g61
(g70
g63
NtRp740
(dp741
g66
(dp742
g74
I4
ssg75
Nsg68
(lp743
g61
(g77
g63
NtRp744
(dp745
g66
(dp746
sg75
g740
sg68
(lp747
g61
(g82
g63
NtRp748
(dp749
g66
(dp750
g86
g87
ssg75
g744
sg68
(lp751
S'app_folders'
p752
asbag61
(g82
g63
NtRp753
(dp754
g66
(dp755
g93
g94
ssg75
g744
sg68
(lp756
S':'
asbag61
(g82
g63
NtRp757
(dp758
g66
(dp759
sg75
g744
sg68
(lp760
g61
(g62
g63
NtRp761
(dp762
g66
(dp763
g74
I4
ssg75
g757
sg68
(lp764
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p765
asbasbasbag61
(g77
g63
NtRp766
(dp767
g66
(dp768
sg75
g740
sg68
(lp769
g61
(g82
g63
NtRp770
(dp771
g66
(dp772
g86
g87
ssg75
g766
sg68
(lp773
S'applications_parent'
p774
asbag61
(g82
g63
NtRp775
(dp776
g66
(dp777
g93
g94
ssg75
g766
sg68
(lp778
S':'
asbag61
(g82
g63
NtRp779
(dp780
g66
(dp781
sg75
g766
sg68
(lp782
g61
(g62
g63
NtRp783
(dp784
g66
(dp785
g74
I4
ssg75
g779
sg68
(lp786
S'/home/anil/bootstrap/web2py'
p787
asbasbasbag61
(g77
g63
NtRp788
(dp789
g66
(dp790
sg75
g740
sg68
(lp791
g61
(g82
g63
NtRp792
(dp793
g66
(dp794
g86
g87
ssg75
g788
sg68
(lp795
S'cmd_args'
p796
asbag61
(g82
g63
NtRp797
(dp798
g66
(dp799
g93
g94
ssg75
g788
sg68
(lp800
S':'
asbag61
(g82
g63
NtRp801
(dp802
g66
(dp803
sg75
g788
sg68
(lp804
g61
(g62
g63
NtRp805
(dp806
g66
(dp807
g74
I4
ssg75
g801
sg68
(lp808
g61
(g70
g63
NtRp809
(dp810
g66
(dp811
g74
I3
ssg75
Nsg68
(lp812
sbasbasbasbag61
(g77
g63
NtRp813
(dp814
g66
(dp815
sg75
g740
sg68
(lp816
g61
(g82
g63
NtRp817
(dp818
g66
(dp819
g86
g87
ssg75
g813
sg68
(lp820
S'cmd_options'
p821
asbag61
(g82
g63
NtRp822
(dp823
g66
(dp824
g93
g94
ssg75
g813
sg68
(lp825
S':'
asbag61
(g82
g63
NtRp826
(dp827
g66
(dp828
sg75
g813
sg68
(lp829
g61
(g62
g63
NtRp830
(dp831
g66
(dp832
g74
I4
ssg75
g826
sg68
(lp833
S"<Values at 0x8f73eac: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p834
asbasbasbag61
(g77
g63
NtRp835
(dp836
g66
(dp837
sg75
g740
sg68
(lp838
g61
(g82
g63
NtRp839
(dp840
g66
(dp841
g86
g87
ssg75
g835
sg68
(lp842
S'db_sessions'
p843
asbag61
(g82
g63
NtRp844
(dp845
g66
(dp846
g93
g94
ssg75
g835
sg68
(lp847
S':'
asbag61
(g82
g63
NtRp848
(dp849
g66
(dp850
sg75
g835
sg68
(lp851
g61
(g62
g63
NtRp852
(dp853
g66
(dp854
g74
I4
ssg75
g848
sg68
(lp855
S'set([])'
p856
asbasbasbag61
(g77
g63
NtRp857
(dp858
g66
(dp859
sg75
g740
sg68
(lp860
g61
(g82
g63
NtRp861
(dp862
g66
(dp863
g86
g87
ssg75
g857
sg68
(lp864
S'debugging'
p865
asbag61
(g82
g63
NtRp866
(dp867
g66
(dp868
g93
g94
ssg75
g857
sg68
(lp869
S':'
asbag61
(g82
g63
NtRp870
(dp871
g66
(dp872
sg75
g857
sg68
(lp873
g61
(g62
g63
NtRp874
(dp875
g66
(dp876
g74
I4
ssg75
g870
sg68
(lp877
g104
asbasbasbag61
(g77
g63
NtRp878
(dp879
g66
(dp880
sg75
g740
sg68
(lp881
g61
(g82
g63
NtRp882
(dp883
g66
(dp884
g86
g87
ssg75
g878
sg68
(lp885
S'gluon_parent'
p886
asbag61
(g82
g63
NtRp887
(dp888
g66
(dp889
g93
g94
ssg75
g878
sg68
(lp890
S':'
asbag61
(g82
g63
NtRp891
(dp892
g66
(dp893
sg75
g878
sg68
(lp894
g61
(g62
g63
NtRp895
(dp896
g66
(dp897
g74
I4
ssg75
g891
sg68
(lp898
S'/home/anil/bootstrap/web2py'
p899
asbasbasbag61
(g77
g63
NtRp900
(dp901
g66
(dp902
sg75
g740
sg68
(lp903
g61
(g82
g63
NtRp904
(dp905
g66
(dp906
g86
g87
ssg75
g900
sg68
(lp907
S'http_accept'
p908
asbag61
(g82
g63
NtRp909
(dp910
g66
(dp911
g93
g94
ssg75
g900
sg68
(lp912
S':'
asbag61
(g82
g63
NtRp913
(dp914
g66
(dp915
sg75
g900
sg68
(lp916
g61
(g62
g63
NtRp917
(dp918
g66
(dp919
g74
I4
ssg75
g913
sg68
(lp920
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p921
asbasbasbag61
(g77
g63
NtRp922
(dp923
g66
(dp924
sg75
g740
sg68
(lp925
g61
(g82
g63
NtRp926
(dp927
g66
(dp928
g86
g87
ssg75
g922
sg68
(lp929
S'http_accept_charset'
p930
asbag61
(g82
g63
NtRp931
(dp932
g66
(dp933
g93
g94
ssg75
g922
sg68
(lp934
S':'
asbag61
(g82
g63
NtRp935
(dp936
g66
(dp937
sg75
g922
sg68
(lp938
g61
(g62
g63
NtRp939
(dp940
g66
(dp941
g74
I4
ssg75
g935
sg68
(lp942
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p943
asbasbasbag61
(g77
g63
NtRp944
(dp945
g66
(dp946
sg75
g740
sg68
(lp947
g61
(g82
g63
NtRp948
(dp949
g66
(dp950
g86
g87
ssg75
g944
sg68
(lp951
S'http_accept_encoding'
p952
asbag61
(g82
g63
NtRp953
(dp954
g66
(dp955
g93
g94
ssg75
g944
sg68
(lp956
S':'
asbag61
(g82
g63
NtRp957
(dp958
g66
(dp959
sg75
g944
sg68
(lp960
g61
(g62
g63
NtRp961
(dp962
g66
(dp963
g74
I4
ssg75
g957
sg68
(lp964
S'gzip,deflate,sdch'
p965
asbasbasbag61
(g77
g63
NtRp966
(dp967
g66
(dp968
sg75
g740
sg68
(lp969
g61
(g82
g63
NtRp970
(dp971
g66
(dp972
g86
g87
ssg75
g966
sg68
(lp973
S'http_accept_language'
p974
asbag61
(g82
g63
NtRp975
(dp976
g66
(dp977
g93
g94
ssg75
g966
sg68
(lp978
S':'
asbag61
(g82
g63
NtRp979
(dp980
g66
(dp981
sg75
g966
sg68
(lp982
g61
(g62
g63
NtRp983
(dp984
g66
(dp985
g74
I4
ssg75
g979
sg68
(lp986
S'en-US,en;q=0.8'
p987
asbasbasbag61
(g77
g63
NtRp988
(dp989
g66
(dp990
sg75
g740
sg68
(lp991
g61
(g82
g63
NtRp992
(dp993
g66
(dp994
g86
g87
ssg75
g988
sg68
(lp995
S'http_connection'
p996
asbag61
(g82
g63
NtRp997
(dp998
g66
(dp999
g93
g94
ssg75
g988
sg68
(lp1000
S':'
asbag61
(g82
g63
NtRp1001
(dp1002
g66
(dp1003
sg75
g988
sg68
(lp1004
g61
(g62
g63
NtRp1005
(dp1006
g66
(dp1007
g74
I4
ssg75
g1001
sg68
(lp1008
S'keep-alive'
p1009
asbasbasbag61
(g77
g63
NtRp1010
(dp1011
g66
(dp1012
sg75
g740
sg68
(lp1013
g61
(g82
g63
NtRp1014
(dp1015
g66
(dp1016
g86
g87
ssg75
g1010
sg68
(lp1017
S'http_cookie'
p1018
asbag61
(g82
g63
NtRp1019
(dp1020
g66
(dp1021
g93
g94
ssg75
g1010
sg68
(lp1022
S':'
asbag61
(g82
g63
NtRp1023
(dp1024
g66
(dp1025
sg75
g1010
sg68
(lp1026
g61
(g62
g63
NtRp1027
(dp1028
g66
(dp1029
g74
I4
ssg75
g1023
sg68
(lp1030
S'session_id_admin=127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1031
asbasbasbag61
(g77
g63
NtRp1032
(dp1033
g66
(dp1034
sg75
g740
sg68
(lp1035
g61
(g82
g63
NtRp1036
(dp1037
g66
(dp1038
g86
g87
ssg75
g1032
sg68
(lp1039
S'http_host'
p1040
asbag61
(g82
g63
NtRp1041
(dp1042
g66
(dp1043
g93
g94
ssg75
g1032
sg68
(lp1044
S':'
asbag61
(g82
g63
NtRp1045
(dp1046
g66
(dp1047
sg75
g1032
sg68
(lp1048
g61
(g62
g63
NtRp1049
(dp1050
g66
(dp1051
g74
I4
ssg75
g1045
sg68
(lp1052
S'127.0.0.1:8000'
p1053
asbasbasbag61
(g77
g63
NtRp1054
(dp1055
g66
(dp1056
sg75
g740
sg68
(lp1057
g61
(g82
g63
NtRp1058
(dp1059
g66
(dp1060
g86
g87
ssg75
g1054
sg68
(lp1061
S'http_referer'
p1062
asbag61
(g82
g63
NtRp1063
(dp1064
g66
(dp1065
g93
g94
ssg75
g1054
sg68
(lp1066
S':'
asbag61
(g82
g63
NtRp1067
(dp1068
g66
(dp1069
sg75
g1054
sg68
(lp1070
g61
(g62
g63
NtRp1071
(dp1072
g66
(dp1073
g74
I4
ssg75
g1067
sg68
(lp1074
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1075
asbasbasbag61
(g77
g63
NtRp1076
(dp1077
g66
(dp1078
sg75
g740
sg68
(lp1079
g61
(g82
g63
NtRp1080
(dp1081
g66
(dp1082
g86
g87
ssg75
g1076
sg68
(lp1083
S'http_user_agent'
p1084
asbag61
(g82
g63
NtRp1085
(dp1086
g66
(dp1087
g93
g94
ssg75
g1076
sg68
(lp1088
S':'
asbag61
(g82
g63
NtRp1089
(dp1090
g66
(dp1091
sg75
g1076
sg68
(lp1092
g61
(g62
g63
NtRp1093
(dp1094
g66
(dp1095
g74
I4
ssg75
g1089
sg68
(lp1096
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1097
asbasbasbag61
(g77
g63
NtRp1098
(dp1099
g66
(dp1100
sg75
g740
sg68
(lp1101
g61
(g82
g63
NtRp1102
(dp1103
g66
(dp1104
g86
g87
ssg75
g1098
sg68
(lp1105
S'is_jython'
p1106
asbag61
(g82
g63
NtRp1107
(dp1108
g66
(dp1109
g93
g94
ssg75
g1098
sg68
(lp1110
S':'
asbag61
(g82
g63
NtRp1111
(dp1112
g66
(dp1113
sg75
g1098
sg68
(lp1114
g61
(g62
g63
NtRp1115
(dp1116
g66
(dp1117
g74
I4
ssg75
g1111
sg68
(lp1118
g104
asbasbasbag61
(g77
g63
NtRp1119
(dp1120
g66
(dp1121
sg75
g740
sg68
(lp1122
g61
(g82
g63
NtRp1123
(dp1124
g66
(dp1125
g86
g87
ssg75
g1119
sg68
(lp1126
S'is_pypy'
p1127
asbag61
(g82
g63
NtRp1128
(dp1129
g66
(dp1130
g93
g94
ssg75
g1119
sg68
(lp1131
S':'
asbag61
(g82
g63
NtRp1132
(dp1133
g66
(dp1134
sg75
g1119
sg68
(lp1135
g61
(g62
g63
NtRp1136
(dp1137
g66
(dp1138
g74
I4
ssg75
g1132
sg68
(lp1139
g104
asbasbasbag61
(g77
g63
NtRp1140
(dp1141
g66
(dp1142
sg75
g740
sg68
(lp1143
g61
(g82
g63
NtRp1144
(dp1145
g66
(dp1146
g86
g87
ssg75
g1140
sg68
(lp1147
S'local_hosts'
p1148
asbag61
(g82
g63
NtRp1149
(dp1150
g66
(dp1151
g93
g94
ssg75
g1140
sg68
(lp1152
S':'
asbag61
(g82
g63
NtRp1153
(dp1154
g66
(dp1155
sg75
g1140
sg68
(lp1156
g61
(g62
g63
NtRp1157
(dp1158
g66
(dp1159
g74
I4
ssg75
g1153
sg68
(lp1160
g61
(g70
g63
NtRp1161
(dp1162
g66
(dp1163
g74
I3
ssg75
Nsg68
(lp1164
g61
(g77
g63
NtRp1165
(dp1166
g66
(dp1167
sg75
g1161
sg68
(lp1168
g61
(g82
g63
NtRp1169
(dp1170
g66
(dp1171
sg75
g1165
sg68
(lp1172
g61
(g62
g63
NtRp1173
(dp1174
g66
(dp1175
g74
I3
ssg75
g1169
sg68
(lp1176
S'::1'
p1177
asbasbasbag61
(g77
g63
NtRp1178
(dp1179
g66
(dp1180
sg75
g1161
sg68
(lp1181
g61
(g82
g63
NtRp1182
(dp1183
g66
(dp1184
sg75
g1178
sg68
(lp1185
g61
(g62
g63
NtRp1186
(dp1187
g66
(dp1188
g74
I3
ssg75
g1182
sg68
(lp1189
S'127.0.1.1'
p1190
asbasbasbag61
(g77
g63
NtRp1191
(dp1192
g66
(dp1193
sg75
g1161
sg68
(lp1194
g61
(g82
g63
NtRp1195
(dp1196
g66
(dp1197
sg75
g1191
sg68
(lp1198
g61
(g62
g63
NtRp1199
(dp1200
g66
(dp1201
g74
I3
ssg75
g1195
sg68
(lp1202
S'::ffff:127.0.0.1'
p1203
asbasbasbag61
(g77
g63
NtRp1204
(dp1205
g66
(dp1206
sg75
g1161
sg68
(lp1207
g61
(g82
g63
NtRp1208
(dp1209
g66
(dp1210
sg75
g1204
sg68
(lp1211
g61
(g62
g63
NtRp1212
(dp1213
g66
(dp1214
g74
I3
ssg75
g1208
sg68
(lp1215
S'127.0.0.1'
p1216
asbasbasbag61
(g77
g63
NtRp1217
(dp1218
g66
(dp1219
sg75
g1161
sg68
(lp1220
g61
(g82
g63
NtRp1221
(dp1222
g66
(dp1223
sg75
g1217
sg68
(lp1224
g61
(g62
g63
NtRp1225
(dp1226
g66
(dp1227
g74
I3
ssg75
g1221
sg68
(lp1228
S'anil-Inspiron-1525'
p1229
asbasbasbasbasbasbasbag61
(g77
g63
NtRp1230
(dp1231
g66
(dp1232
sg75
g740
sg68
(lp1233
g61
(g82
g63
NtRp1234
(dp1235
g66
(dp1236
g86
g87
ssg75
g1230
sg68
(lp1237
S'path_info'
p1238
asbag61
(g82
g63
NtRp1239
(dp1240
g66
(dp1241
g93
g94
ssg75
g1230
sg68
(lp1242
S':'
asbag61
(g82
g63
NtRp1243
(dp1244
g66
(dp1245
sg75
g1230
sg68
(lp1246
g61
(g62
g63
NtRp1247
(dp1248
g66
(dp1249
g74
I4
ssg75
g1243
sg68
(lp1250
S'/DEV_bootstrap_ch/default/duplicate/project/experiment.project/1/sample.experiment/1/2'
p1251
asbasbasbag61
(g77
g63
NtRp1252
(dp1253
g66
(dp1254
sg75
g740
sg68
(lp1255
g61
(g82
g63
NtRp1256
(dp1257
g66
(dp1258
g86
g87
ssg75
g1252
sg68
(lp1259
S'query_string'
p1260
asbag61
(g82
g63
NtRp1261
(dp1262
g66
(dp1263
g93
g94
ssg75
g1252
sg68
(lp1264
S':'
asbag61
(g82
g63
NtRp1265
(dp1266
g66
(dp1267
sg75
g1252
sg68
(lp1268
g61
(g62
g63
NtRp1269
(dp1270
g66
(dp1271
g74
I4
ssg75
g1265
sg68
(lp1272
S''
asbasbasbag61
(g77
g63
NtRp1273
(dp1274
g66
(dp1275
sg75
g740
sg68
(lp1276
g61
(g82
g63
NtRp1277
(dp1278
g66
(dp1279
g86
g87
ssg75
g1273
sg68
(lp1280
S'remote_addr'
p1281
asbag61
(g82
g63
NtRp1282
(dp1283
g66
(dp1284
g93
g94
ssg75
g1273
sg68
(lp1285
S':'
asbag61
(g82
g63
NtRp1286
(dp1287
g66
(dp1288
sg75
g1273
sg68
(lp1289
g61
(g62
g63
NtRp1290
(dp1291
g66
(dp1292
g74
I4
ssg75
g1286
sg68
(lp1293
g291
asbasbasbag61
(g77
g63
NtRp1294
(dp1295
g66
(dp1296
sg75
g740
sg68
(lp1297
g61
(g82
g63
NtRp1298
(dp1299
g66
(dp1300
g86
g87
ssg75
g1294
sg68
(lp1301
S'remote_port'
p1302
asbag61
(g82
g63
NtRp1303
(dp1304
g66
(dp1305
g93
g94
ssg75
g1294
sg68
(lp1306
S':'
asbag61
(g82
g63
NtRp1307
(dp1308
g66
(dp1309
sg75
g1294
sg68
(lp1310
g61
(g62
g63
NtRp1311
(dp1312
g66
(dp1313
g74
I4
ssg75
g1307
sg68
(lp1314
S'58220'
p1315
asbasbasbag61
(g77
g63
NtRp1316
(dp1317
g66
(dp1318
sg75
g740
sg68
(lp1319
g61
(g82
g63
NtRp1320
(dp1321
g66
(dp1322
g86
g87
ssg75
g1316
sg68
(lp1323
S'request_method'
p1324
asbag61
(g82
g63
NtRp1325
(dp1326
g66
(dp1327
g93
g94
ssg75
g1316
sg68
(lp1328
S':'
asbag61
(g82
g63
NtRp1329
(dp1330
g66
(dp1331
sg75
g1316
sg68
(lp1332
g61
(g62
g63
NtRp1333
(dp1334
g66
(dp1335
g74
I4
ssg75
g1329
sg68
(lp1336
S'GET'
p1337
asbasbasbag61
(g77
g63
NtRp1338
(dp1339
g66
(dp1340
sg75
g740
sg68
(lp1341
g61
(g82
g63
NtRp1342
(dp1343
g66
(dp1344
g86
g87
ssg75
g1338
sg68
(lp1345
S'request_uri'
p1346
asbag61
(g82
g63
NtRp1347
(dp1348
g66
(dp1349
g93
g94
ssg75
g1338
sg68
(lp1350
S':'
asbag61
(g82
g63
NtRp1351
(dp1352
g66
(dp1353
sg75
g1338
sg68
(lp1354
g61
(g62
g63
NtRp1355
(dp1356
g66
(dp1357
g74
I4
ssg75
g1351
sg68
(lp1358
g1251
asbasbasbag61
(g77
g63
NtRp1359
(dp1360
g66
(dp1361
sg75
g740
sg68
(lp1362
g61
(g82
g63
NtRp1363
(dp1364
g66
(dp1365
g86
g87
ssg75
g1359
sg68
(lp1366
S'script_name'
p1367
asbag61
(g82
g63
NtRp1368
(dp1369
g66
(dp1370
g93
g94
ssg75
g1359
sg68
(lp1371
S':'
asbag61
(g82
g63
NtRp1372
(dp1373
g66
(dp1374
sg75
g1359
sg68
(lp1375
g61
(g62
g63
NtRp1376
(dp1377
g66
(dp1378
g74
I4
ssg75
g1372
sg68
(lp1379
S''
asbasbasbag61
(g77
g63
NtRp1380
(dp1381
g66
(dp1382
sg75
g740
sg68
(lp1383
g61
(g82
g63
NtRp1384
(dp1385
g66
(dp1386
g86
g87
ssg75
g1380
sg68
(lp1387
S'server_name'
p1388
asbag61
(g82
g63
NtRp1389
(dp1390
g66
(dp1391
g93
g94
ssg75
g1380
sg68
(lp1392
S':'
asbag61
(g82
g63
NtRp1393
(dp1394
g66
(dp1395
sg75
g1380
sg68
(lp1396
g61
(g62
g63
NtRp1397
(dp1398
g66
(dp1399
g74
I4
ssg75
g1393
sg68
(lp1400
S'anil-Inspiron-1525'
p1401
asbasbasbag61
(g77
g63
NtRp1402
(dp1403
g66
(dp1404
sg75
g740
sg68
(lp1405
g61
(g82
g63
NtRp1406
(dp1407
g66
(dp1408
g86
g87
ssg75
g1402
sg68
(lp1409
S'server_port'
p1410
asbag61
(g82
g63
NtRp1411
(dp1412
g66
(dp1413
g93
g94
ssg75
g1402
sg68
(lp1414
S':'
asbag61
(g82
g63
NtRp1415
(dp1416
g66
(dp1417
sg75
g1402
sg68
(lp1418
g61
(g62
g63
NtRp1419
(dp1420
g66
(dp1421
g74
I4
ssg75
g1415
sg68
(lp1422
S'8000'
p1423
asbasbasbag61
(g77
g63
NtRp1424
(dp1425
g66
(dp1426
sg75
g740
sg68
(lp1427
g61
(g82
g63
NtRp1428
(dp1429
g66
(dp1430
g86
g87
ssg75
g1424
sg68
(lp1431
S'server_protocol'
p1432
asbag61
(g82
g63
NtRp1433
(dp1434
g66
(dp1435
g93
g94
ssg75
g1424
sg68
(lp1436
S':'
asbag61
(g82
g63
NtRp1437
(dp1438
g66
(dp1439
sg75
g1424
sg68
(lp1440
g61
(g62
g63
NtRp1441
(dp1442
g66
(dp1443
g74
I4
ssg75
g1437
sg68
(lp1444
S'HTTP/1.1'
p1445
asbasbasbag61
(g77
g63
NtRp1446
(dp1447
g66
(dp1448
sg75
g740
sg68
(lp1449
g61
(g82
g63
NtRp1450
(dp1451
g66
(dp1452
g86
g87
ssg75
g1446
sg68
(lp1453
S'server_software'
p1454
asbag61
(g82
g63
NtRp1455
(dp1456
g66
(dp1457
g93
g94
ssg75
g1446
sg68
(lp1458
S':'
asbag61
(g82
g63
NtRp1459
(dp1460
g66
(dp1461
sg75
g1446
sg68
(lp1462
g61
(g62
g63
NtRp1463
(dp1464
g66
(dp1465
g74
I4
ssg75
g1459
sg68
(lp1466
S'Rocket 1.2.6'
p1467
asbasbasbag61
(g77
g63
NtRp1468
(dp1469
g66
(dp1470
sg75
g740
sg68
(lp1471
g61
(g82
g63
NtRp1472
(dp1473
g66
(dp1474
g86
g87
ssg75
g1468
sg68
(lp1475
S'web2py_path'
p1476
asbag61
(g82
g63
NtRp1477
(dp1478
g66
(dp1479
g93
g94
ssg75
g1468
sg68
(lp1480
S':'
asbag61
(g82
g63
NtRp1481
(dp1482
g66
(dp1483
sg75
g1468
sg68
(lp1484
g61
(g62
g63
NtRp1485
(dp1486
g66
(dp1487
g74
I4
ssg75
g1481
sg68
(lp1488
g787
asbasbasbag61
(g77
g63
NtRp1489
(dp1490
g66
(dp1491
sg75
g740
sg68
(lp1492
g61
(g82
g63
NtRp1493
(dp1494
g66
(dp1495
g86
g87
ssg75
g1489
sg68
(lp1496
S'web2py_version'
p1497
asbag61
(g82
g63
NtRp1498
(dp1499
g66
(dp1500
g93
g94
ssg75
g1489
sg68
(lp1501
S':'
asbag61
(g82
g63
NtRp1502
(dp1503
g66
(dp1504
sg75
g1489
sg68
(lp1505
g61
(g62
g63
NtRp1506
(dp1507
g66
(dp1508
g74
I4
ssg75
g1502
sg68
(lp1509
g61
(g70
g63
NtRp1510
(dp1511
g66
(dp1512
g74
I3
ssg75
Nsg68
(lp1513
g61
(g77
g63
NtRp1514
(dp1515
g66
(dp1516
sg75
g1510
sg68
(lp1517
g61
(g82
g63
NtRp1518
(dp1519
g66
(dp1520
sg75
g1514
sg68
(lp1521
g61
(g62
g63
NtRp1522
(dp1523
g66
(dp1524
g74
I3
ssg75
g1518
sg68
(lp1525
S'2'
asbasbasbag61
(g77
g63
NtRp1526
(dp1527
g66
(dp1528
sg75
g1510
sg68
(lp1529
g61
(g82
g63
NtRp1530
(dp1531
g66
(dp1532
sg75
g1526
sg68
(lp1533
g61
(g62
g63
NtRp1534
(dp1535
g66
(dp1536
g74
I3
ssg75
g1530
sg68
(lp1537
S'3'
asbasbasbag61
(g77
g63
NtRp1538
(dp1539
g66
(dp1540
sg75
g1510
sg68
(lp1541
g61
(g82
g63
NtRp1542
(dp1543
g66
(dp1544
sg75
g1538
sg68
(lp1545
g61
(g62
g63
NtRp1546
(dp1547
g66
(dp1548
g74
I3
ssg75
g1542
sg68
(lp1549
S'2'
asbasbasbag61
(g77
g63
NtRp1550
(dp1551
g66
(dp1552
sg75
g1510
sg68
(lp1553
g61
(g82
g63
NtRp1554
(dp1555
g66
(dp1556
sg75
g1550
sg68
(lp1557
g61
(g62
g63
NtRp1558
(dp1559
g66
(dp1560
g74
I3
ssg75
g1554
sg68
(lp1561
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1562
asbasbasbag61
(g77
g63
NtRp1563
(dp1564
g66
(dp1565
sg75
g1510
sg68
(lp1566
g61
(g82
g63
NtRp1567
(dp1568
g66
(dp1569
sg75
g1563
sg68
(lp1570
g61
(g62
g63
NtRp1571
(dp1572
g66
(dp1573
g74
I3
ssg75
g1567
sg68
(lp1574
S'stable'
p1575
asbasbasbasbasbasbasbag61
(g77
g63
NtRp1576
(dp1577
g66
(dp1578
sg75
g740
sg68
(lp1579
g61
(g82
g63
NtRp1580
(dp1581
g66
(dp1582
g86
g87
ssg75
g1576
sg68
(lp1583
S'wsgi_errors'
p1584
asbag61
(g82
g63
NtRp1585
(dp1586
g66
(dp1587
g93
g94
ssg75
g1576
sg68
(lp1588
S':'
asbag61
(g82
g63
NtRp1589
(dp1590
g66
(dp1591
sg75
g1576
sg68
(lp1592
g61
(g62
g63
NtRp1593
(dp1594
g66
(dp1595
g74
I4
ssg75
g1589
sg68
(lp1596
S"<open file '<stderr>', mode 'w' at 0xb72830d0>"
p1597
asbasbasbag61
(g77
g63
NtRp1598
(dp1599
g66
(dp1600
sg75
g740
sg68
(lp1601
g61
(g82
g63
NtRp1602
(dp1603
g66
(dp1604
g86
g87
ssg75
g1598
sg68
(lp1605
S'wsgi_file_wrapper'
p1606
asbag61
(g82
g63
NtRp1607
(dp1608
g66
(dp1609
g93
g94
ssg75
g1598
sg68
(lp1610
S':'
asbag61
(g82
g63
NtRp1611
(dp1612
g66
(dp1613
sg75
g1598
sg68
(lp1614
g61
(g62
g63
NtRp1615
(dp1616
g66
(dp1617
g74
I4
ssg75
g1611
sg68
(lp1618
S'<class wsgiref.util.FileWrapper at 0x8efcbcc>'
p1619
asbasbasbag61
(g77
g63
NtRp1620
(dp1621
g66
(dp1622
sg75
g740
sg68
(lp1623
g61
(g82
g63
NtRp1624
(dp1625
g66
(dp1626
g86
g87
ssg75
g1620
sg68
(lp1627
S'wsgi_input'
p1628
asbag61
(g82
g63
NtRp1629
(dp1630
g66
(dp1631
g93
g94
ssg75
g1620
sg68
(lp1632
S':'
asbag61
(g82
g63
NtRp1633
(dp1634
g66
(dp1635
sg75
g1620
sg68
(lp1636
g61
(g62
g63
NtRp1637
(dp1638
g66
(dp1639
g74
I4
ssg75
g1633
sg68
(lp1640
S'<socket._fileobject object at 0xae28156c>'
p1641
asbasbasbag61
(g77
g63
NtRp1642
(dp1643
g66
(dp1644
sg75
g740
sg68
(lp1645
g61
(g82
g63
NtRp1646
(dp1647
g66
(dp1648
g86
g87
ssg75
g1642
sg68
(lp1649
S'wsgi_multiprocess'
p1650
asbag61
(g82
g63
NtRp1651
(dp1652
g66
(dp1653
g93
g94
ssg75
g1642
sg68
(lp1654
S':'
asbag61
(g82
g63
NtRp1655
(dp1656
g66
(dp1657
sg75
g1642
sg68
(lp1658
g61
(g62
g63
NtRp1659
(dp1660
g66
(dp1661
g74
I4
ssg75
g1655
sg68
(lp1662
g104
asbasbasbag61
(g77
g63
NtRp1663
(dp1664
g66
(dp1665
sg75
g740
sg68
(lp1666
g61
(g82
g63
NtRp1667
(dp1668
g66
(dp1669
g86
g87
ssg75
g1663
sg68
(lp1670
S'wsgi_multithread'
p1671
asbag61
(g82
g63
NtRp1672
(dp1673
g66
(dp1674
g93
g94
ssg75
g1663
sg68
(lp1675
S':'
asbag61
(g82
g63
NtRp1676
(dp1677
g66
(dp1678
sg75
g1663
sg68
(lp1679
g61
(g62
g63
NtRp1680
(dp1681
g66
(dp1682
g74
I4
ssg75
g1676
sg68
(lp1683
S'True'
p1684
asbasbasbag61
(g77
g63
NtRp1685
(dp1686
g66
(dp1687
sg75
g740
sg68
(lp1688
g61
(g82
g63
NtRp1689
(dp1690
g66
(dp1691
g86
g87
ssg75
g1685
sg68
(lp1692
S'wsgi_run_once'
p1693
asbag61
(g82
g63
NtRp1694
(dp1695
g66
(dp1696
g93
g94
ssg75
g1685
sg68
(lp1697
S':'
asbag61
(g82
g63
NtRp1698
(dp1699
g66
(dp1700
sg75
g1685
sg68
(lp1701
g61
(g62
g63
NtRp1702
(dp1703
g66
(dp1704
g74
I4
ssg75
g1698
sg68
(lp1705
g104
asbasbasbag61
(g77
g63
NtRp1706
(dp1707
g66
(dp1708
sg75
g740
sg68
(lp1709
g61
(g82
g63
NtRp1710
(dp1711
g66
(dp1712
g86
g87
ssg75
g1706
sg68
(lp1713
S'wsgi_url_scheme'
p1714
asbag61
(g82
g63
NtRp1715
(dp1716
g66
(dp1717
g93
g94
ssg75
g1706
sg68
(lp1718
S':'
asbag61
(g82
g63
NtRp1719
(dp1720
g66
(dp1721
sg75
g1706
sg68
(lp1722
g61
(g62
g63
NtRp1723
(dp1724
g66
(dp1725
g74
I4
ssg75
g1719
sg68
(lp1726
S'http'
p1727
asbasbasbag61
(g77
g63
NtRp1728
(dp1729
g66
(dp1730
sg75
g740
sg68
(lp1731
g61
(g82
g63
NtRp1732
(dp1733
g66
(dp1734
g86
g87
ssg75
g1728
sg68
(lp1735
S'wsgi_version'
p1736
asbag61
(g82
g63
NtRp1737
(dp1738
g66
(dp1739
g93
g94
ssg75
g1728
sg68
(lp1740
S':'
asbag61
(g82
g63
NtRp1741
(dp1742
g66
(dp1743
sg75
g1728
sg68
(lp1744
g61
(g62
g63
NtRp1745
(dp1746
g66
(dp1747
g74
I4
ssg75
g1741
sg68
(lp1748
g61
(g70
g63
NtRp1749
(dp1750
g66
(dp1751
g74
I3
ssg75
Nsg68
(lp1752
g61
(g77
g63
NtRp1753
(dp1754
g66
(dp1755
sg75
g1749
sg68
(lp1756
g61
(g82
g63
NtRp1757
(dp1758
g66
(dp1759
sg75
g1753
sg68
(lp1760
g61
(g62
g63
NtRp1761
(dp1762
g66
(dp1763
g74
I3
ssg75
g1757
sg68
(lp1764
S'1'
asbasbasbag61
(g77
g63
NtRp1765
(dp1766
g66
(dp1767
sg75
g1749
sg68
(lp1768
g61
(g82
g63
NtRp1769
(dp1770
g66
(dp1771
sg75
g1765
sg68
(lp1772
g61
(g62
g63
NtRp1773
(dp1774
g66
(dp1775
g74
I3
ssg75
g1769
sg68
(lp1776
S'0'
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp1777
(dp1778
g66
(dp1779
sg75
g71
sg68
(lp1780
g61
(g82
g63
NtRp1781
(dp1782
g66
(dp1783
g86
g87
ssg75
g1777
sg68
(lp1784
S'extension'
p1785
asbag61
(g82
g63
NtRp1786
(dp1787
g66
(dp1788
g93
g94
ssg75
g1777
sg68
(lp1789
S':'
asbag61
(g82
g63
NtRp1790
(dp1791
g66
(dp1792
sg75
g1777
sg68
(lp1793
g61
(g62
g63
NtRp1794
(dp1795
g66
(dp1796
g74
I5
ssg75
g1790
sg68
(lp1797
S'html'
p1798
asbasbasbag61
(g77
g63
NtRp1799
(dp1800
g66
(dp1801
sg75
g71
sg68
(lp1802
g61
(g82
g63
NtRp1803
(dp1804
g66
(dp1805
g86
g87
ssg75
g1799
sg68
(lp1806
S'folder'
p1807
asbag61
(g82
g63
NtRp1808
(dp1809
g66
(dp1810
g93
g94
ssg75
g1799
sg68
(lp1811
S':'
asbag61
(g82
g63
NtRp1812
(dp1813
g66
(dp1814
sg75
g1799
sg68
(lp1815
g61
(g62
g63
NtRp1816
(dp1817
g66
(dp1818
g74
I5
ssg75
g1812
sg68
(lp1819
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1820
asbasbasbag61
(g77
g63
NtRp1821
(dp1822
g66
(dp1823
sg75
g71
sg68
(lp1824
g61
(g82
g63
NtRp1825
(dp1826
g66
(dp1827
g86
g87
ssg75
g1821
sg68
(lp1828
S'function'
p1829
asbag61
(g82
g63
NtRp1830
(dp1831
g66
(dp1832
g93
g94
ssg75
g1821
sg68
(lp1833
S':'
asbag61
(g82
g63
NtRp1834
(dp1835
g66
(dp1836
sg75
g1821
sg68
(lp1837
g61
(g62
g63
NtRp1838
(dp1839
g66
(dp1840
g74
I5
ssg75
g1834
sg68
(lp1841
S'duplicate'
p1842
asbasbasbag61
(g77
g63
NtRp1843
(dp1844
g66
(dp1845
sg75
g71
sg68
(lp1846
g61
(g82
g63
NtRp1847
(dp1848
g66
(dp1849
g86
g87
ssg75
g1843
sg68
(lp1850
S'get_vars'
p1851
asbag61
(g82
g63
NtRp1852
(dp1853
g66
(dp1854
g93
g94
ssg75
g1843
sg68
(lp1855
S':'
asbag61
(g82
g63
NtRp1856
(dp1857
g66
(dp1858
sg75
g1843
sg68
(lp1859
g61
(g62
g63
NtRp1860
(dp1861
g66
(dp1862
g74
I5
ssg75
g1856
sg68
(lp1863
g61
(g70
g63
NtRp1864
(dp1865
g66
(dp1866
g74
I4
ssg75
Nsg68
(lp1867
sbasbasbasbag61
(g77
g63
NtRp1868
(dp1869
g66
(dp1870
sg75
g71
sg68
(lp1871
g61
(g82
g63
NtRp1872
(dp1873
g66
(dp1874
g86
g87
ssg75
g1868
sg68
(lp1875
S'global_settings'
p1876
asbag61
(g82
g63
NtRp1877
(dp1878
g66
(dp1879
g93
g94
ssg75
g1868
sg68
(lp1880
S':'
asbag61
(g82
g63
NtRp1881
(dp1882
g66
(dp1883
sg75
g1868
sg68
(lp1884
g61
(g62
g63
NtRp1885
(dp1886
g66
(dp1887
g74
I5
ssg75
g1881
sg68
(lp1888
g61
(g70
g63
NtRp1889
(dp1890
g66
(dp1891
g74
I4
ssg75
Nsg68
(lp1892
g61
(g77
g63
NtRp1893
(dp1894
g66
(dp1895
sg75
g1889
sg68
(lp1896
g61
(g82
g63
NtRp1897
(dp1898
g66
(dp1899
g86
g87
ssg75
g1893
sg68
(lp1900
g752
asbag61
(g82
g63
NtRp1901
(dp1902
g66
(dp1903
g93
g94
ssg75
g1893
sg68
(lp1904
S':'
asbag61
(g82
g63
NtRp1905
(dp1906
g66
(dp1907
sg75
g1893
sg68
(lp1908
g61
(g62
g63
NtRp1909
(dp1910
g66
(dp1911
g74
I4
ssg75
g1905
sg68
(lp1912
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1913
asbasbasbag61
(g77
g63
NtRp1914
(dp1915
g66
(dp1916
sg75
g1889
sg68
(lp1917
g61
(g82
g63
NtRp1918
(dp1919
g66
(dp1920
g86
g87
ssg75
g1914
sg68
(lp1921
g774
asbag61
(g82
g63
NtRp1922
(dp1923
g66
(dp1924
g93
g94
ssg75
g1914
sg68
(lp1925
S':'
asbag61
(g82
g63
NtRp1926
(dp1927
g66
(dp1928
sg75
g1914
sg68
(lp1929
g61
(g62
g63
NtRp1930
(dp1931
g66
(dp1932
g74
I4
ssg75
g1926
sg68
(lp1933
g787
asbasbasbag61
(g77
g63
NtRp1934
(dp1935
g66
(dp1936
sg75
g1889
sg68
(lp1937
g61
(g82
g63
NtRp1938
(dp1939
g66
(dp1940
g86
g87
ssg75
g1934
sg68
(lp1941
g796
asbag61
(g82
g63
NtRp1942
(dp1943
g66
(dp1944
g93
g94
ssg75
g1934
sg68
(lp1945
S':'
asbag61
(g82
g63
NtRp1946
(dp1947
g66
(dp1948
sg75
g1934
sg68
(lp1949
g61
(g62
g63
NtRp1950
(dp1951
g66
(dp1952
g74
I4
ssg75
g1946
sg68
(lp1953
g61
(g70
g63
NtRp1954
(dp1955
g66
(dp1956
g74
I3
ssg75
Nsg68
(lp1957
sbasbasbasbag61
(g77
g63
NtRp1958
(dp1959
g66
(dp1960
sg75
g1889
sg68
(lp1961
g61
(g82
g63
NtRp1962
(dp1963
g66
(dp1964
g86
g87
ssg75
g1958
sg68
(lp1965
g821
asbag61
(g82
g63
NtRp1966
(dp1967
g66
(dp1968
g93
g94
ssg75
g1958
sg68
(lp1969
S':'
asbag61
(g82
g63
NtRp1970
(dp1971
g66
(dp1972
sg75
g1958
sg68
(lp1973
g61
(g62
g63
NtRp1974
(dp1975
g66
(dp1976
g74
I4
ssg75
g1970
sg68
(lp1977
S"<Values at 0x8f73eac: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1978
asbasbasbag61
(g77
g63
NtRp1979
(dp1980
g66
(dp1981
sg75
g1889
sg68
(lp1982
g61
(g82
g63
NtRp1983
(dp1984
g66
(dp1985
g86
g87
ssg75
g1979
sg68
(lp1986
g843
asbag61
(g82
g63
NtRp1987
(dp1988
g66
(dp1989
g93
g94
ssg75
g1979
sg68
(lp1990
S':'
asbag61
(g82
g63
NtRp1991
(dp1992
g66
(dp1993
sg75
g1979
sg68
(lp1994
g61
(g62
g63
NtRp1995
(dp1996
g66
(dp1997
g74
I4
ssg75
g1991
sg68
(lp1998
S'set([])'
p1999
asbasbasbag61
(g77
g63
NtRp2000
(dp2001
g66
(dp2002
sg75
g1889
sg68
(lp2003
g61
(g82
g63
NtRp2004
(dp2005
g66
(dp2006
g86
g87
ssg75
g2000
sg68
(lp2007
g865
asbag61
(g82
g63
NtRp2008
(dp2009
g66
(dp2010
g93
g94
ssg75
g2000
sg68
(lp2011
S':'
asbag61
(g82
g63
NtRp2012
(dp2013
g66
(dp2014
sg75
g2000
sg68
(lp2015
g61
(g62
g63
NtRp2016
(dp2017
g66
(dp2018
g74
I4
ssg75
g2012
sg68
(lp2019
g104
asbasbasbag61
(g77
g63
NtRp2020
(dp2021
g66
(dp2022
sg75
g1889
sg68
(lp2023
g61
(g82
g63
NtRp2024
(dp2025
g66
(dp2026
g86
g87
ssg75
g2020
sg68
(lp2027
g886
asbag61
(g82
g63
NtRp2028
(dp2029
g66
(dp2030
g93
g94
ssg75
g2020
sg68
(lp2031
S':'
asbag61
(g82
g63
NtRp2032
(dp2033
g66
(dp2034
sg75
g2020
sg68
(lp2035
g61
(g62
g63
NtRp2036
(dp2037
g66
(dp2038
g74
I4
ssg75
g2032
sg68
(lp2039
g899
asbasbasbag61
(g77
g63
NtRp2040
(dp2041
g66
(dp2042
sg75
g1889
sg68
(lp2043
g61
(g82
g63
NtRp2044
(dp2045
g66
(dp2046
g86
g87
ssg75
g2040
sg68
(lp2047
g1106
asbag61
(g82
g63
NtRp2048
(dp2049
g66
(dp2050
g93
g94
ssg75
g2040
sg68
(lp2051
S':'
asbag61
(g82
g63
NtRp2052
(dp2053
g66
(dp2054
sg75
g2040
sg68
(lp2055
g61
(g62
g63
NtRp2056
(dp2057
g66
(dp2058
g74
I4
ssg75
g2052
sg68
(lp2059
g104
asbasbasbag61
(g77
g63
NtRp2060
(dp2061
g66
(dp2062
sg75
g1889
sg68
(lp2063
g61
(g82
g63
NtRp2064
(dp2065
g66
(dp2066
g86
g87
ssg75
g2060
sg68
(lp2067
g1127
asbag61
(g82
g63
NtRp2068
(dp2069
g66
(dp2070
g93
g94
ssg75
g2060
sg68
(lp2071
S':'
asbag61
(g82
g63
NtRp2072
(dp2073
g66
(dp2074
sg75
g2060
sg68
(lp2075
g61
(g62
g63
NtRp2076
(dp2077
g66
(dp2078
g74
I4
ssg75
g2072
sg68
(lp2079
g104
asbasbasbag61
(g77
g63
NtRp2080
(dp2081
g66
(dp2082
sg75
g1889
sg68
(lp2083
g61
(g82
g63
NtRp2084
(dp2085
g66
(dp2086
g86
g87
ssg75
g2080
sg68
(lp2087
g1148
asbag61
(g82
g63
NtRp2088
(dp2089
g66
(dp2090
g93
g94
ssg75
g2080
sg68
(lp2091
S':'
asbag61
(g82
g63
NtRp2092
(dp2093
g66
(dp2094
sg75
g2080
sg68
(lp2095
g61
(g62
g63
NtRp2096
(dp2097
g66
(dp2098
g74
I4
ssg75
g2092
sg68
(lp2099
g61
(g70
g63
NtRp2100
(dp2101
g66
(dp2102
g74
I3
ssg75
Nsg68
(lp2103
g61
(g77
g63
NtRp2104
(dp2105
g66
(dp2106
sg75
g2100
sg68
(lp2107
g61
(g82
g63
NtRp2108
(dp2109
g66
(dp2110
sg75
g2104
sg68
(lp2111
g61
(g62
g63
NtRp2112
(dp2113
g66
(dp2114
g74
I3
ssg75
g2108
sg68
(lp2115
g1177
asbasbasbag61
(g77
g63
NtRp2116
(dp2117
g66
(dp2118
sg75
g2100
sg68
(lp2119
g61
(g82
g63
NtRp2120
(dp2121
g66
(dp2122
sg75
g2116
sg68
(lp2123
g61
(g62
g63
NtRp2124
(dp2125
g66
(dp2126
g74
I3
ssg75
g2120
sg68
(lp2127
g1190
asbasbasbag61
(g77
g63
NtRp2128
(dp2129
g66
(dp2130
sg75
g2100
sg68
(lp2131
g61
(g82
g63
NtRp2132
(dp2133
g66
(dp2134
sg75
g2128
sg68
(lp2135
g61
(g62
g63
NtRp2136
(dp2137
g66
(dp2138
g74
I3
ssg75
g2132
sg68
(lp2139
g1203
asbasbasbag61
(g77
g63
NtRp2140
(dp2141
g66
(dp2142
sg75
g2100
sg68
(lp2143
g61
(g82
g63
NtRp2144
(dp2145
g66
(dp2146
sg75
g2140
sg68
(lp2147
g61
(g62
g63
NtRp2148
(dp2149
g66
(dp2150
g74
I3
ssg75
g2144
sg68
(lp2151
g1216
asbasbasbag61
(g77
g63
NtRp2152
(dp2153
g66
(dp2154
sg75
g2100
sg68
(lp2155
g61
(g82
g63
NtRp2156
(dp2157
g66
(dp2158
sg75
g2152
sg68
(lp2159
g61
(g62
g63
NtRp2160
(dp2161
g66
(dp2162
g74
I3
ssg75
g2156
sg68
(lp2163
g1229
asbasbasbasbasbasbasbag61
(g77
g63
NtRp2164
(dp2165
g66
(dp2166
sg75
g1889
sg68
(lp2167
g61
(g82
g63
NtRp2168
(dp2169
g66
(dp2170
g86
g87
ssg75
g2164
sg68
(lp2171
g1497
asbag61
(g82
g63
NtRp2172
(dp2173
g66
(dp2174
g93
g94
ssg75
g2164
sg68
(lp2175
S':'
asbag61
(g82
g63
NtRp2176
(dp2177
g66
(dp2178
sg75
g2164
sg68
(lp2179
g61
(g62
g63
NtRp2180
(dp2181
g66
(dp2182
g74
I4
ssg75
g2176
sg68
(lp2183
g61
(g70
g63
NtRp2184
(dp2185
g66
(dp2186
g74
I3
ssg75
Nsg68
(lp2187
g61
(g77
g63
NtRp2188
(dp2189
g66
(dp2190
sg75
g2184
sg68
(lp2191
g61
(g82
g63
NtRp2192
(dp2193
g66
(dp2194
sg75
g2188
sg68
(lp2195
g61
(g62
g63
NtRp2196
(dp2197
g66
(dp2198
g74
I3
ssg75
g2192
sg68
(lp2199
S'2'
asbasbasbag61
(g77
g63
NtRp2200
(dp2201
g66
(dp2202
sg75
g2184
sg68
(lp2203
g61
(g82
g63
NtRp2204
(dp2205
g66
(dp2206
sg75
g2200
sg68
(lp2207
g61
(g62
g63
NtRp2208
(dp2209
g66
(dp2210
g74
I3
ssg75
g2204
sg68
(lp2211
S'3'
asbasbasbag61
(g77
g63
NtRp2212
(dp2213
g66
(dp2214
sg75
g2184
sg68
(lp2215
g61
(g82
g63
NtRp2216
(dp2217
g66
(dp2218
sg75
g2212
sg68
(lp2219
g61
(g62
g63
NtRp2220
(dp2221
g66
(dp2222
g74
I3
ssg75
g2216
sg68
(lp2223
S'2'
asbasbasbag61
(g77
g63
NtRp2224
(dp2225
g66
(dp2226
sg75
g2184
sg68
(lp2227
g61
(g82
g63
NtRp2228
(dp2229
g66
(dp2230
sg75
g2224
sg68
(lp2231
g61
(g62
g63
NtRp2232
(dp2233
g66
(dp2234
g74
I3
ssg75
g2228
sg68
(lp2235
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2236
asbasbasbag61
(g77
g63
NtRp2237
(dp2238
g66
(dp2239
sg75
g2184
sg68
(lp2240
g61
(g82
g63
NtRp2241
(dp2242
g66
(dp2243
sg75
g2237
sg68
(lp2244
g61
(g62
g63
NtRp2245
(dp2246
g66
(dp2247
g74
I3
ssg75
g2241
sg68
(lp2248
g1575
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp2249
(dp2250
g66
(dp2251
sg75
g71
sg68
(lp2252
g61
(g82
g63
NtRp2253
(dp2254
g66
(dp2255
g86
g87
ssg75
g2249
sg68
(lp2256
S'is_https'
p2257
asbag61
(g82
g63
NtRp2258
(dp2259
g66
(dp2260
g93
g94
ssg75
g2249
sg68
(lp2261
S':'
asbag61
(g82
g63
NtRp2262
(dp2263
g66
(dp2264
sg75
g2249
sg68
(lp2265
g61
(g62
g63
NtRp2266
(dp2267
g66
(dp2268
g74
I5
ssg75
g2262
sg68
(lp2269
g104
asbasbasbag61
(g77
g63
NtRp2270
(dp2271
g66
(dp2272
sg75
g71
sg68
(lp2273
g61
(g82
g63
NtRp2274
(dp2275
g66
(dp2276
g86
g87
ssg75
g2270
sg68
(lp2277
S'is_local'
p2278
asbag61
(g82
g63
NtRp2279
(dp2280
g66
(dp2281
g93
g94
ssg75
g2270
sg68
(lp2282
S':'
asbag61
(g82
g63
NtRp2283
(dp2284
g66
(dp2285
sg75
g2270
sg68
(lp2286
g61
(g62
g63
NtRp2287
(dp2288
g66
(dp2289
g74
I5
ssg75
g2283
sg68
(lp2290
g1684
asbasbasbag61
(g77
g63
NtRp2291
(dp2292
g66
(dp2293
sg75
g71
sg68
(lp2294
g61
(g82
g63
NtRp2295
(dp2296
g66
(dp2297
g86
g87
ssg75
g2291
sg68
(lp2298
S'is_restful'
p2299
asbag61
(g82
g63
NtRp2300
(dp2301
g66
(dp2302
g93
g94
ssg75
g2291
sg68
(lp2303
S':'
asbag61
(g82
g63
NtRp2304
(dp2305
g66
(dp2306
sg75
g2291
sg68
(lp2307
g61
(g62
g63
NtRp2308
(dp2309
g66
(dp2310
g74
I5
ssg75
g2304
sg68
(lp2311
g104
asbasbasbag61
(g77
g63
NtRp2312
(dp2313
g66
(dp2314
sg75
g71
sg68
(lp2315
g61
(g82
g63
NtRp2316
(dp2317
g66
(dp2318
g86
g87
ssg75
g2312
sg68
(lp2319
S'now'
p2320
asbag61
(g82
g63
NtRp2321
(dp2322
g66
(dp2323
g93
g94
ssg75
g2312
sg68
(lp2324
S':'
asbag61
(g82
g63
NtRp2325
(dp2326
g66
(dp2327
sg75
g2312
sg68
(lp2328
g61
(g62
g63
NtRp2329
(dp2330
g66
(dp2331
g74
I5
ssg75
g2325
sg68
(lp2332
S'datetime.datetime(2013, 2, 25, 11, 24, 16, 541644)'
p2333
asbasbasbag61
(g77
g63
NtRp2334
(dp2335
g66
(dp2336
sg75
g71
sg68
(lp2337
g61
(g82
g63
NtRp2338
(dp2339
g66
(dp2340
g86
g87
ssg75
g2334
sg68
(lp2341
S'post_vars'
p2342
asbag61
(g82
g63
NtRp2343
(dp2344
g66
(dp2345
g93
g94
ssg75
g2334
sg68
(lp2346
S':'
asbag61
(g82
g63
NtRp2347
(dp2348
g66
(dp2349
sg75
g2334
sg68
(lp2350
g61
(g62
g63
NtRp2351
(dp2352
g66
(dp2353
g74
I5
ssg75
g2347
sg68
(lp2354
g61
(g70
g63
NtRp2355
(dp2356
g66
(dp2357
g74
I4
ssg75
Nsg68
(lp2358
sbasbasbasbag61
(g77
g63
NtRp2359
(dp2360
g66
(dp2361
sg75
g71
sg68
(lp2362
g61
(g82
g63
NtRp2363
(dp2364
g66
(dp2365
g86
g87
ssg75
g2359
sg68
(lp2366
S'raw_args'
p2367
asbag61
(g82
g63
NtRp2368
(dp2369
g66
(dp2370
g93
g94
ssg75
g2359
sg68
(lp2371
S':'
asbag61
(g82
g63
NtRp2372
(dp2373
g66
(dp2374
sg75
g2359
sg68
(lp2375
g61
(g62
g63
NtRp2376
(dp2377
g66
(dp2378
g74
I5
ssg75
g2372
sg68
(lp2379
S'project/experiment.project/1/sample.experiment/1/2'
p2380
asbasbasbag61
(g77
g63
NtRp2381
(dp2382
g66
(dp2383
sg75
g71
sg68
(lp2384
g61
(g82
g63
NtRp2385
(dp2386
g66
(dp2387
g86
g87
ssg75
g2381
sg68
(lp2388
S'raw_extension'
p2389
asbag61
(g82
g63
NtRp2390
(dp2391
g66
(dp2392
g93
g94
ssg75
g2381
sg68
(lp2393
S':'
asbag61
(g82
g63
NtRp2394
(dp2395
g66
(dp2396
sg75
g2381
sg68
(lp2397
g61
(g62
g63
NtRp2398
(dp2399
g66
(dp2400
g74
I5
ssg75
g2394
sg68
(lp2401
S'None'
p2402
asbasbasbag61
(g77
g63
NtRp2403
(dp2404
g66
(dp2405
sg75
g71
sg68
(lp2406
g61
(g82
g63
NtRp2407
(dp2408
g66
(dp2409
g86
g87
ssg75
g2403
sg68
(lp2410
S'url'
p2411
asbag61
(g82
g63
NtRp2412
(dp2413
g66
(dp2414
g93
g94
ssg75
g2403
sg68
(lp2415
S':'
asbag61
(g82
g63
NtRp2416
(dp2417
g66
(dp2418
sg75
g2403
sg68
(lp2419
g61
(g62
g63
NtRp2420
(dp2421
g66
(dp2422
g74
I5
ssg75
g2416
sg68
(lp2423
g1251
asbasbasbag61
(g77
g63
NtRp2424
(dp2425
g66
(dp2426
sg75
g71
sg68
(lp2427
g61
(g82
g63
NtRp2428
(dp2429
g66
(dp2430
g86
g87
ssg75
g2424
sg68
(lp2431
S'utcnow'
p2432
asbag61
(g82
g63
NtRp2433
(dp2434
g66
(dp2435
g93
g94
ssg75
g2424
sg68
(lp2436
S':'
asbag61
(g82
g63
NtRp2437
(dp2438
g66
(dp2439
sg75
g2424
sg68
(lp2440
g61
(g62
g63
NtRp2441
(dp2442
g66
(dp2443
g74
I5
ssg75
g2437
sg68
(lp2444
S'datetime.datetime(2013, 2, 25, 5, 54, 16, 541689)'
p2445
asbasbasbag61
(g77
g63
NtRp2446
(dp2447
g66
(dp2448
sg75
g71
sg68
(lp2449
g61
(g82
g63
NtRp2450
(dp2451
g66
(dp2452
g86
g87
ssg75
g2446
sg68
(lp2453
S'uuid'
p2454
asbag61
(g82
g63
NtRp2455
(dp2456
g66
(dp2457
g93
g94
ssg75
g2446
sg68
(lp2458
S':'
asbag61
(g82
g63
NtRp2459
(dp2460
g66
(dp2461
sg75
g2446
sg68
(lp2462
g61
(g62
g63
NtRp2463
(dp2464
g66
(dp2465
g74
I5
ssg75
g2459
sg68
(lp2466
S'DEV_bootstrap_ch/127.0.0.1.2013-02-25.11-24-16.dfd62e5b-fec4-4d90-a513-11ef2b375ee5'
p2467
asbasbasbag61
(g77
g63
NtRp2468
(dp2469
g66
(dp2470
sg75
g71
sg68
(lp2471
g61
(g82
g63
NtRp2472
(dp2473
g66
(dp2474
g86
g87
ssg75
g2468
sg68
(lp2475
S'vars'
p2476
asbag61
(g82
g63
NtRp2477
(dp2478
g66
(dp2479
g93
g94
ssg75
g2468
sg68
(lp2480
S':'
asbag61
(g82
g63
NtRp2481
(dp2482
g66
(dp2483
sg75
g2468
sg68
(lp2484
g61
(g62
g63
NtRp2485
(dp2486
g66
(dp2487
g74
I5
ssg75
g2481
sg68
(lp2488
g61
(g70
g63
NtRp2489
(dp2490
g66
(dp2491
g74
I4
ssg75
Nsg68
(lp2492
sbasbasbasbag61
(g77
g63
NtRp2493
(dp2494
g66
(dp2495
sg75
g71
sg68
(lp2496
g61
(g82
g63
NtRp2497
(dp2498
g66
(dp2499
g86
g87
ssg75
g2493
sg68
(lp2500
S'wsgi'
p2501
asbag61
(g82
g63
NtRp2502
(dp2503
g66
(dp2504
g93
g94
ssg75
g2493
sg68
(lp2505
S':'
asbag61
(g82
g63
NtRp2506
(dp2507
g66
(dp2508
sg75
g2493
sg68
(lp2509
g61
(g62
g63
NtRp2510
(dp2511
g66
(dp2512
g74
I5
ssg75
g2506
sg68
(lp2513
g61
(g70
g63
NtRp2514
(dp2515
g66
(dp2516
g74
I4
ssg75
Nsg68
(lp2517
g61
(g77
g63
NtRp2518
(dp2519
g66
(dp2520
sg75
g2514
sg68
(lp2521
g61
(g82
g63
NtRp2522
(dp2523
g66
(dp2524
g86
g87
ssg75
g2518
sg68
(lp2525
S'environ'
p2526
asbag61
(g82
g63
NtRp2527
(dp2528
g66
(dp2529
g93
g94
ssg75
g2518
sg68
(lp2530
S':'
asbag61
(g82
g63
NtRp2531
(dp2532
g66
(dp2533
sg75
g2518
sg68
(lp2534
g61
(g62
g63
NtRp2535
(dp2536
g66
(dp2537
g74
I4
ssg75
g2531
sg68
(lp2538
g61
(g70
g63
NtRp2539
(dp2540
g66
(dp2541
g74
I3
ssg75
Nsg68
(lp2542
g61
(g77
g63
NtRp2543
(dp2544
g66
(dp2545
sg75
g2539
sg68
(lp2546
g61
(g82
g63
NtRp2547
(dp2548
g66
(dp2549
g86
g87
ssg75
g2543
sg68
(lp2550
S'HTTP_ACCEPT'
p2551
asbag61
(g82
g63
NtRp2552
(dp2553
g66
(dp2554
g93
g94
ssg75
g2543
sg68
(lp2555
S':'
asbag61
(g82
g63
NtRp2556
(dp2557
g66
(dp2558
sg75
g2543
sg68
(lp2559
g61
(g62
g63
NtRp2560
(dp2561
g66
(dp2562
g74
I3
ssg75
g2556
sg68
(lp2563
g921
asbasbasbag61
(g77
g63
NtRp2564
(dp2565
g66
(dp2566
sg75
g2539
sg68
(lp2567
g61
(g82
g63
NtRp2568
(dp2569
g66
(dp2570
g86
g87
ssg75
g2564
sg68
(lp2571
S'HTTP_ACCEPT_CHARSET'
p2572
asbag61
(g82
g63
NtRp2573
(dp2574
g66
(dp2575
g93
g94
ssg75
g2564
sg68
(lp2576
S':'
asbag61
(g82
g63
NtRp2577
(dp2578
g66
(dp2579
sg75
g2564
sg68
(lp2580
g61
(g62
g63
NtRp2581
(dp2582
g66
(dp2583
g74
I3
ssg75
g2577
sg68
(lp2584
g943
asbasbasbag61
(g77
g63
NtRp2585
(dp2586
g66
(dp2587
sg75
g2539
sg68
(lp2588
g61
(g82
g63
NtRp2589
(dp2590
g66
(dp2591
g86
g87
ssg75
g2585
sg68
(lp2592
S'HTTP_ACCEPT_ENCODING'
p2593
asbag61
(g82
g63
NtRp2594
(dp2595
g66
(dp2596
g93
g94
ssg75
g2585
sg68
(lp2597
S':'
asbag61
(g82
g63
NtRp2598
(dp2599
g66
(dp2600
sg75
g2585
sg68
(lp2601
g61
(g62
g63
NtRp2602
(dp2603
g66
(dp2604
g74
I3
ssg75
g2598
sg68
(lp2605
g965
asbasbasbag61
(g77
g63
NtRp2606
(dp2607
g66
(dp2608
sg75
g2539
sg68
(lp2609
g61
(g82
g63
NtRp2610
(dp2611
g66
(dp2612
g86
g87
ssg75
g2606
sg68
(lp2613
S'HTTP_ACCEPT_LANGUAGE'
p2614
asbag61
(g82
g63
NtRp2615
(dp2616
g66
(dp2617
g93
g94
ssg75
g2606
sg68
(lp2618
S':'
asbag61
(g82
g63
NtRp2619
(dp2620
g66
(dp2621
sg75
g2606
sg68
(lp2622
g61
(g62
g63
NtRp2623
(dp2624
g66
(dp2625
g74
I3
ssg75
g2619
sg68
(lp2626
g987
asbasbasbag61
(g77
g63
NtRp2627
(dp2628
g66
(dp2629
sg75
g2539
sg68
(lp2630
g61
(g82
g63
NtRp2631
(dp2632
g66
(dp2633
g86
g87
ssg75
g2627
sg68
(lp2634
S'HTTP_CONNECTION'
p2635
asbag61
(g82
g63
NtRp2636
(dp2637
g66
(dp2638
g93
g94
ssg75
g2627
sg68
(lp2639
S':'
asbag61
(g82
g63
NtRp2640
(dp2641
g66
(dp2642
sg75
g2627
sg68
(lp2643
g61
(g62
g63
NtRp2644
(dp2645
g66
(dp2646
g74
I3
ssg75
g2640
sg68
(lp2647
g1009
asbasbasbag61
(g77
g63
NtRp2648
(dp2649
g66
(dp2650
sg75
g2539
sg68
(lp2651
g61
(g82
g63
NtRp2652
(dp2653
g66
(dp2654
g86
g87
ssg75
g2648
sg68
(lp2655
S'HTTP_COOKIE'
p2656
asbag61
(g82
g63
NtRp2657
(dp2658
g66
(dp2659
g93
g94
ssg75
g2648
sg68
(lp2660
S':'
asbag61
(g82
g63
NtRp2661
(dp2662
g66
(dp2663
sg75
g2648
sg68
(lp2664
g61
(g62
g63
NtRp2665
(dp2666
g66
(dp2667
g74
I3
ssg75
g2661
sg68
(lp2668
g1031
asbasbasbag61
(g77
g63
NtRp2669
(dp2670
g66
(dp2671
sg75
g2539
sg68
(lp2672
g61
(g82
g63
NtRp2673
(dp2674
g66
(dp2675
g86
g87
ssg75
g2669
sg68
(lp2676
S'HTTP_HOST'
p2677
asbag61
(g82
g63
NtRp2678
(dp2679
g66
(dp2680
g93
g94
ssg75
g2669
sg68
(lp2681
S':'
asbag61
(g82
g63
NtRp2682
(dp2683
g66
(dp2684
sg75
g2669
sg68
(lp2685
g61
(g62
g63
NtRp2686
(dp2687
g66
(dp2688
g74
I3
ssg75
g2682
sg68
(lp2689
g1053
asbasbasbag61
(g77
g63
NtRp2690
(dp2691
g66
(dp2692
sg75
g2539
sg68
(lp2693
g61
(g82
g63
NtRp2694
(dp2695
g66
(dp2696
g86
g87
ssg75
g2690
sg68
(lp2697
S'HTTP_REFERER'
p2698
asbag61
(g82
g63
NtRp2699
(dp2700
g66
(dp2701
g93
g94
ssg75
g2690
sg68
(lp2702
S':'
asbag61
(g82
g63
NtRp2703
(dp2704
g66
(dp2705
sg75
g2690
sg68
(lp2706
g61
(g62
g63
NtRp2707
(dp2708
g66
(dp2709
g74
I3
ssg75
g2703
sg68
(lp2710
g1075
asbasbasbag61
(g77
g63
NtRp2711
(dp2712
g66
(dp2713
sg75
g2539
sg68
(lp2714
g61
(g82
g63
NtRp2715
(dp2716
g66
(dp2717
g86
g87
ssg75
g2711
sg68
(lp2718
S'HTTP_USER_AGENT'
p2719
asbag61
(g82
g63
NtRp2720
(dp2721
g66
(dp2722
g93
g94
ssg75
g2711
sg68
(lp2723
S':'
asbag61
(g82
g63
NtRp2724
(dp2725
g66
(dp2726
sg75
g2711
sg68
(lp2727
g61
(g62
g63
NtRp2728
(dp2729
g66
(dp2730
g74
I3
ssg75
g2724
sg68
(lp2731
g1097
asbasbasbag61
(g77
g63
NtRp2732
(dp2733
g66
(dp2734
sg75
g2539
sg68
(lp2735
g61
(g82
g63
NtRp2736
(dp2737
g66
(dp2738
g86
g87
ssg75
g2732
sg68
(lp2739
S'PATH_INFO'
p2740
asbag61
(g82
g63
NtRp2741
(dp2742
g66
(dp2743
g93
g94
ssg75
g2732
sg68
(lp2744
S':'
asbag61
(g82
g63
NtRp2745
(dp2746
g66
(dp2747
sg75
g2732
sg68
(lp2748
g61
(g62
g63
NtRp2749
(dp2750
g66
(dp2751
g74
I3
ssg75
g2745
sg68
(lp2752
g1251
asbasbasbag61
(g77
g63
NtRp2753
(dp2754
g66
(dp2755
sg75
g2539
sg68
(lp2756
g61
(g82
g63
NtRp2757
(dp2758
g66
(dp2759
g86
g87
ssg75
g2753
sg68
(lp2760
S'QUERY_STRING'
p2761
asbag61
(g82
g63
NtRp2762
(dp2763
g66
(dp2764
g93
g94
ssg75
g2753
sg68
(lp2765
S':'
asbag61
(g82
g63
NtRp2766
(dp2767
g66
(dp2768
sg75
g2753
sg68
(lp2769
g61
(g62
g63
NtRp2770
(dp2771
g66
(dp2772
g74
I3
ssg75
g2766
sg68
(lp2773
S''
asbasbasbag61
(g77
g63
NtRp2774
(dp2775
g66
(dp2776
sg75
g2539
sg68
(lp2777
g61
(g82
g63
NtRp2778
(dp2779
g66
(dp2780
g86
g87
ssg75
g2774
sg68
(lp2781
S'REMOTE_ADDR'
p2782
asbag61
(g82
g63
NtRp2783
(dp2784
g66
(dp2785
g93
g94
ssg75
g2774
sg68
(lp2786
S':'
asbag61
(g82
g63
NtRp2787
(dp2788
g66
(dp2789
sg75
g2774
sg68
(lp2790
g61
(g62
g63
NtRp2791
(dp2792
g66
(dp2793
g74
I3
ssg75
g2787
sg68
(lp2794
g291
asbasbasbag61
(g77
g63
NtRp2795
(dp2796
g66
(dp2797
sg75
g2539
sg68
(lp2798
g61
(g82
g63
NtRp2799
(dp2800
g66
(dp2801
g86
g87
ssg75
g2795
sg68
(lp2802
S'REMOTE_PORT'
p2803
asbag61
(g82
g63
NtRp2804
(dp2805
g66
(dp2806
g93
g94
ssg75
g2795
sg68
(lp2807
S':'
asbag61
(g82
g63
NtRp2808
(dp2809
g66
(dp2810
sg75
g2795
sg68
(lp2811
g61
(g62
g63
NtRp2812
(dp2813
g66
(dp2814
g74
I3
ssg75
g2808
sg68
(lp2815
g1315
asbasbasbag61
(g77
g63
NtRp2816
(dp2817
g66
(dp2818
sg75
g2539
sg68
(lp2819
g61
(g82
g63
NtRp2820
(dp2821
g66
(dp2822
g86
g87
ssg75
g2816
sg68
(lp2823
S'REQUEST_METHOD'
p2824
asbag61
(g82
g63
NtRp2825
(dp2826
g66
(dp2827
g93
g94
ssg75
g2816
sg68
(lp2828
S':'
asbag61
(g82
g63
NtRp2829
(dp2830
g66
(dp2831
sg75
g2816
sg68
(lp2832
g61
(g62
g63
NtRp2833
(dp2834
g66
(dp2835
g74
I3
ssg75
g2829
sg68
(lp2836
g1337
asbasbasbag61
(g77
g63
NtRp2837
(dp2838
g66
(dp2839
sg75
g2539
sg68
(lp2840
g61
(g82
g63
NtRp2841
(dp2842
g66
(dp2843
g86
g87
ssg75
g2837
sg68
(lp2844
S'REQUEST_URI'
p2845
asbag61
(g82
g63
NtRp2846
(dp2847
g66
(dp2848
g93
g94
ssg75
g2837
sg68
(lp2849
S':'
asbag61
(g82
g63
NtRp2850
(dp2851
g66
(dp2852
sg75
g2837
sg68
(lp2853
g61
(g62
g63
NtRp2854
(dp2855
g66
(dp2856
g74
I3
ssg75
g2850
sg68
(lp2857
g1251
asbasbasbag61
(g77
g63
NtRp2858
(dp2859
g66
(dp2860
sg75
g2539
sg68
(lp2861
g61
(g82
g63
NtRp2862
(dp2863
g66
(dp2864
g86
g87
ssg75
g2858
sg68
(lp2865
S'SCRIPT_NAME'
p2866
asbag61
(g82
g63
NtRp2867
(dp2868
g66
(dp2869
g93
g94
ssg75
g2858
sg68
(lp2870
S':'
asbag61
(g82
g63
NtRp2871
(dp2872
g66
(dp2873
sg75
g2858
sg68
(lp2874
g61
(g62
g63
NtRp2875
(dp2876
g66
(dp2877
g74
I3
ssg75
g2871
sg68
(lp2878
S''
asbasbasbag61
(g77
g63
NtRp2879
(dp2880
g66
(dp2881
sg75
g2539
sg68
(lp2882
g61
(g82
g63
NtRp2883
(dp2884
g66
(dp2885
g86
g87
ssg75
g2879
sg68
(lp2886
S'SERVER_NAME'
p2887
asbag61
(g82
g63
NtRp2888
(dp2889
g66
(dp2890
g93
g94
ssg75
g2879
sg68
(lp2891
S':'
asbag61
(g82
g63
NtRp2892
(dp2893
g66
(dp2894
sg75
g2879
sg68
(lp2895
g61
(g62
g63
NtRp2896
(dp2897
g66
(dp2898
g74
I3
ssg75
g2892
sg68
(lp2899
g1401
asbasbasbag61
(g77
g63
NtRp2900
(dp2901
g66
(dp2902
sg75
g2539
sg68
(lp2903
g61
(g82
g63
NtRp2904
(dp2905
g66
(dp2906
g86
g87
ssg75
g2900
sg68
(lp2907
S'SERVER_PORT'
p2908
asbag61
(g82
g63
NtRp2909
(dp2910
g66
(dp2911
g93
g94
ssg75
g2900
sg68
(lp2912
S':'
asbag61
(g82
g63
NtRp2913
(dp2914
g66
(dp2915
sg75
g2900
sg68
(lp2916
g61
(g62
g63
NtRp2917
(dp2918
g66
(dp2919
g74
I3
ssg75
g2913
sg68
(lp2920
g1423
asbasbasbag61
(g77
g63
NtRp2921
(dp2922
g66
(dp2923
sg75
g2539
sg68
(lp2924
g61
(g82
g63
NtRp2925
(dp2926
g66
(dp2927
g86
g87
ssg75
g2921
sg68
(lp2928
S'SERVER_PROTOCOL'
p2929
asbag61
(g82
g63
NtRp2930
(dp2931
g66
(dp2932
g93
g94
ssg75
g2921
sg68
(lp2933
S':'
asbag61
(g82
g63
NtRp2934
(dp2935
g66
(dp2936
sg75
g2921
sg68
(lp2937
g61
(g62
g63
NtRp2938
(dp2939
g66
(dp2940
g74
I3
ssg75
g2934
sg68
(lp2941
g1445
asbasbasbag61
(g77
g63
NtRp2942
(dp2943
g66
(dp2944
sg75
g2539
sg68
(lp2945
g61
(g82
g63
NtRp2946
(dp2947
g66
(dp2948
g86
g87
ssg75
g2942
sg68
(lp2949
S'SERVER_SOFTWARE'
p2950
asbag61
(g82
g63
NtRp2951
(dp2952
g66
(dp2953
g93
g94
ssg75
g2942
sg68
(lp2954
S':'
asbag61
(g82
g63
NtRp2955
(dp2956
g66
(dp2957
sg75
g2942
sg68
(lp2958
g61
(g62
g63
NtRp2959
(dp2960
g66
(dp2961
g74
I3
ssg75
g2955
sg68
(lp2962
g1467
asbasbasbag61
(g77
g63
NtRp2963
(dp2964
g66
(dp2965
sg75
g2539
sg68
(lp2966
g61
(g82
g63
NtRp2967
(dp2968
g66
(dp2969
g86
g87
ssg75
g2963
sg68
(lp2970
S'wsgi.errors'
p2971
asbag61
(g82
g63
NtRp2972
(dp2973
g66
(dp2974
g93
g94
ssg75
g2963
sg68
(lp2975
S':'
asbag61
(g82
g63
NtRp2976
(dp2977
g66
(dp2978
sg75
g2963
sg68
(lp2979
g61
(g62
g63
NtRp2980
(dp2981
g66
(dp2982
g74
I3
ssg75
g2976
sg68
(lp2983
S"<open file '<stderr>', mode 'w' at 0xb72830d0>"
p2984
asbasbasbag61
(g77
g63
NtRp2985
(dp2986
g66
(dp2987
sg75
g2539
sg68
(lp2988
g61
(g82
g63
NtRp2989
(dp2990
g66
(dp2991
g86
g87
ssg75
g2985
sg68
(lp2992
S'wsgi.file_wrapper'
p2993
asbag61
(g82
g63
NtRp2994
(dp2995
g66
(dp2996
g93
g94
ssg75
g2985
sg68
(lp2997
S':'
asbag61
(g82
g63
NtRp2998
(dp2999
g66
(dp3000
sg75
g2985
sg68
(lp3001
g61
(g62
g63
NtRp3002
(dp3003
g66
(dp3004
g74
I3
ssg75
g2998
sg68
(lp3005
S'<class wsgiref.util.FileWrapper at 0x8efcbcc>'
p3006
asbasbasbag61
(g77
g63
NtRp3007
(dp3008
g66
(dp3009
sg75
g2539
sg68
(lp3010
g61
(g82
g63
NtRp3011
(dp3012
g66
(dp3013
g86
g87
ssg75
g3007
sg68
(lp3014
S'wsgi.input'
p3015
asbag61
(g82
g63
NtRp3016
(dp3017
g66
(dp3018
g93
g94
ssg75
g3007
sg68
(lp3019
S':'
asbag61
(g82
g63
NtRp3020
(dp3021
g66
(dp3022
sg75
g3007
sg68
(lp3023
g61
(g62
g63
NtRp3024
(dp3025
g66
(dp3026
g74
I3
ssg75
g3020
sg68
(lp3027
S'<cStringIO.StringO object at 0xae32cd00>'
p3028
asbasbasbag61
(g77
g63
NtRp3029
(dp3030
g66
(dp3031
sg75
g2539
sg68
(lp3032
g61
(g82
g63
NtRp3033
(dp3034
g66
(dp3035
g86
g87
ssg75
g3029
sg68
(lp3036
S'wsgi.multiprocess'
p3037
asbag61
(g82
g63
NtRp3038
(dp3039
g66
(dp3040
g93
g94
ssg75
g3029
sg68
(lp3041
S':'
asbag61
(g82
g63
NtRp3042
(dp3043
g66
(dp3044
sg75
g3029
sg68
(lp3045
g61
(g62
g63
NtRp3046
(dp3047
g66
(dp3048
g74
I3
ssg75
g3042
sg68
(lp3049
g104
asbasbasbag61
(g77
g63
NtRp3050
(dp3051
g66
(dp3052
sg75
g2539
sg68
(lp3053
g61
(g82
g63
NtRp3054
(dp3055
g66
(dp3056
g86
g87
ssg75
g3050
sg68
(lp3057
S'wsgi.multithread'
p3058
asbag61
(g82
g63
NtRp3059
(dp3060
g66
(dp3061
g93
g94
ssg75
g3050
sg68
(lp3062
S':'
asbag61
(g82
g63
NtRp3063
(dp3064
g66
(dp3065
sg75
g3050
sg68
(lp3066
g61
(g62
g63
NtRp3067
(dp3068
g66
(dp3069
g74
I3
ssg75
g3063
sg68
(lp3070
g1684
asbasbasbag61
(g77
g63
NtRp3071
(dp3072
g66
(dp3073
sg75
g2539
sg68
(lp3074
g61
(g82
g63
NtRp3075
(dp3076
g66
(dp3077
g86
g87
ssg75
g3071
sg68
(lp3078
S'wsgi.run_once'
p3079
asbag61
(g82
g63
NtRp3080
(dp3081
g66
(dp3082
g93
g94
ssg75
g3071
sg68
(lp3083
S':'
asbag61
(g82
g63
NtRp3084
(dp3085
g66
(dp3086
sg75
g3071
sg68
(lp3087
g61
(g62
g63
NtRp3088
(dp3089
g66
(dp3090
g74
I3
ssg75
g3084
sg68
(lp3091
g104
asbasbasbag61
(g77
g63
NtRp3092
(dp3093
g66
(dp3094
sg75
g2539
sg68
(lp3095
g61
(g82
g63
NtRp3096
(dp3097
g66
(dp3098
g86
g87
ssg75
g3092
sg68
(lp3099
S'wsgi.url_scheme'
p3100
asbag61
(g82
g63
NtRp3101
(dp3102
g66
(dp3103
g93
g94
ssg75
g3092
sg68
(lp3104
S':'
asbag61
(g82
g63
NtRp3105
(dp3106
g66
(dp3107
sg75
g3092
sg68
(lp3108
g61
(g62
g63
NtRp3109
(dp3110
g66
(dp3111
g74
I3
ssg75
g3105
sg68
(lp3112
g1727
asbasbasbag61
(g77
g63
NtRp3113
(dp3114
g66
(dp3115
sg75
g2539
sg68
(lp3116
g61
(g82
g63
NtRp3117
(dp3118
g66
(dp3119
g86
g87
ssg75
g3113
sg68
(lp3120
S'wsgi.version'
p3121
asbag61
(g82
g63
NtRp3122
(dp3123
g66
(dp3124
g93
g94
ssg75
g3113
sg68
(lp3125
S':'
asbag61
(g82
g63
NtRp3126
(dp3127
g66
(dp3128
sg75
g3113
sg68
(lp3129
g61
(g62
g63
NtRp3130
(dp3131
g66
(dp3132
g74
I3
ssg75
g3126
sg68
(lp3133
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3134
(lp3135
(dp3136
S'file'
p3137
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3138
sS'dump'
p3139
(dp3140
S'environment'
p3141
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3142
sS'ccode'
p3143
S'<code object <module> at 0xae2958d8, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3144
ssS'lnum'
p3145
I212
sS'lines'
p3146
(dp3147
I207
S'    try:'
p3148
sI208
S'        if isinstance(code, types.CodeType):'
p3149
sI209
S'            ccode = code'
p3150
sI210
S'        else:'
p3151
sI211
S'            ccode = compile2(code, layer)'
p3152
sI212
S'        exec ccode in environment'
p3153
sI213
S'    except HTTP:'
p3154
sI214
S'        raise'
p3155
sI215
S'    except RestrictedError:'
p3156
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3157
ssS'call'
p3158
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...()\\n\\n\\n\\nresponse._vars=response._caller(duplicate)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3159
sS'func'
p3160
S'restricted'
p3161
sa(dp3162
g3137
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3163
sg3139
(dp3164
sg3145
I1135
sg3146
(dp3165
I1124
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3166
sI1125
S'   """ per sample . takes id of the sample as the input """'
p3167
sI1126
S'   sid = request.args(0)'
p3168
sI1127
S'   sample = db(db.sample.id == sid).select().first()'
p3169
sI1128
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3170
sI1129
S'   form = SQLFORM(db.sample_files)'
p3171
sI1130
S'   form.vars.sample = sid'
p3172
sI1131
S'   return locals()'
p3173
sI1132
S''
sI1133
S''
ssg3158
S'()'
p3174
sg3160
S'<module>'
p3175
sa(dp3176
g3137
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3177
sg3139
(dp3178
S'self'
p3179
S'undefined'
p3180
sS'f'
S'<function duplicate>'
p3181
ssg3145
I193
sg3146
(dp3182
I192
S'        self._vars = None'
p3183
sI193
S'        self._caller = lambda f: f()'
p3184
sI194
S'        self._view_environment = None'
p3185
sI195
S'        self._custom_commit = None'
p3186
sI196
S'        self._custom_rollback = None'
p3187
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3188
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3189
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3190
sI191
S"        self.delimiters = ('{{', '}}')"
p3191
ssg3158
S'(f=<function duplicate>)'
p3192
sg3160
S'<lambda>'
p3193
sa(dp3194
g3137
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3195
sg3139
(dp3196
S'global db'
p3197
S'<DAL uri="sqlite://storage.sqlite">'
p3198
sS'rec'
p3199
S"<Row {'code': '32', 'replica': 'replicate', 'wor...eriment': 1, 'experimentalist': 2, 'name': '12'}>"
p3200
sS'db.sample'
p3201
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3202
sS'db.sample._filter_fields'
p3203
S'<bound method Table._filter_fields of <Table sam...ment,working_status,replica,publication_status)>>'
p3204
sS'db.sample.insert'
p3205
S'<bound method Table.insert of <Table sample (id,...ment,working_status,replica,publication_status)>>'
p3206
ssg3145
I357
sg3146
(dp3207
I352
S'    return()'
p3208
sI353
S'def duplicate():'
p3209
sI354
S'    if True:'
p3210
sI355
S'        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()'
p3211
sI356
S'        rec.update(replica="replicate")'
p3212
sI357
S'        db.sample.insert(**db.sample._filter_fields(rec))'
p3213
sI358
S"        redirect(URL('list_all_dev_projects',args=request.args[0:-1]))"
p3214
sI359
S"    redirect(URL('list_all_dev_projects',args=[]))"
p3215
sI360
S''
sI361
S'def my_samples():'
p3216
ssg3158
S'()'
p3217
sg3160
S'duplicate'
p3218
sa(dp3219
g3137
S'/home/anil/bootstrap/web2py/gluon/dal.py'
p3220
sg3139
(dp3221
S'self._listify'
p3222
S'<bound method Table._listify of <Table sample (i...ment,working_status,replica,publication_status)>>'
p3223
sS'fields'
p3224
S"{'code': '32', 'description': 'saf', 'experiment': 1, 'experimentalist': 2, 'name': '12', 'publication_status': False, 'replica': 'replicate', 'scientific_name': '', 'working_status': '1'}"
p3225
sS'self'
p3226
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3227
sS'ret'
p3228
g3180
sS'self._db._adapter'
p3229
S'<gluon.dal.SQLiteAdapter object>'
p3230
sS'self._db._adapter.insert'
p3231
S'<bound method SQLiteAdapter.insert of <gluon.dal.SQLiteAdapter object>>'
p3232
sS'self._db'
p3233
S'<DAL uri="sqlite://storage.sqlite">'
p3234
ssg3145
I7918
sg3146
(dp3235
I7913
S'        return self._db._adapter._insert(self,self._listify(fields))'
p3236
sI7914
S''
sI7915
S'    def insert(self, **fields):'
p3237
sI7916
S'        self._attempt_upload(fields)'
p3238
sI7917
S'        if any(f(fields) for f in self._before_insert): return 0'
p3239
sI7918
S'        ret =  self._db._adapter.insert(self,self._listify(fields))'
p3240
sI7919
S'        if ret and self._after_insert:'
p3241
sI7920
S'            fields = Row(fields)'
p3242
sI7921
S'            [f(fields,ret) for f in self._after_insert]'
p3243
sI7922
S'        return ret'
p3244
ssg3158
S"(self=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, **fields={'code': '32', 'description': 'saf', 'experiment': 1, 'experimentalist': 2, 'name': '12', 'publication_status': False, 'replica': 'replicate', 'scientific_name': '', 'working_status': '1'})"
p3245
sg3160
S'insert'
p3246
sa(dp3247
g3137
S'/home/anil/bootstrap/web2py/gluon/dal.py'
p3248
sg3139
(dp3249
S'e'
S"IntegrityError('column name is not unique',)"
p3250
ssg3145
I1176
sg3146
(dp3251
I1171
S'            self.execute(query)'
p3252
sI1172
S'        except Exception:'
p3253
sI1173
S'            e = sys.exc_info()[1]'
p3254
sI1174
S'            if isinstance(e,self.integrity_error_class()):'
p3255
sI1175
S'                return None'
p3256
sI1176
S'            raise e'
p3257
sI1177
S"        if hasattr(table,'_primarykey'):"
p3258
sI1178
S'            return dict([(k[0].name, k[1]) for k in fields \\'
p3259
sI1179
S'                             if k[0].name in table._primarykey])'
p3260
sI1180
S'        id = self.lastrowid(table)'
p3261
ssg3158
S"(self=<gluon.dal.SQLiteAdapter object>, table=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, fields=[(<gluon.dal.Field object>, False), (<gluon.dal.Field object>, '32'), (<gluon.dal.Field object>, 'saf'), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 2), (<gluon.dal.Field object>, 1), (<gluon.dal.Field object>, '1'), (<gluon.dal.Field object>, 'replicate'), (<gluon.dal.Field object>, '12')])"
p3262
sg3160
g3246
sasS'pyver'
p3263
S'Python 2.7.3: /usr/bin/python'
p3264
sS'session'
p3265
g61
(g62
g63
NtRp3266
(dp3267
g66
(dp3268
sg68
(lp3269
g61
(g70
g63
NtRp3270
(dp3271
g66
(dp3272
g74
I5
ssg75
Nsg68
(lp3273
g61
(g77
g63
NtRp3274
(dp3275
g66
(dp3276
sg75
g3270
sg68
(lp3277
g61
(g82
g63
NtRp3278
(dp3279
g66
(dp3280
g86
g87
ssg75
g3274
sg68
(lp3281
S'auth'
p3282
asbag61
(g82
g63
NtRp3283
(dp3284
g66
(dp3285
g93
g94
ssg75
g3274
sg68
(lp3286
S':'
asbag61
(g82
g63
NtRp3287
(dp3288
g66
(dp3289
sg75
g3274
sg68
(lp3290
g61
(g62
g63
NtRp3291
(dp3292
g66
(dp3293
g74
I5
ssg75
g3287
sg68
(lp3294
g61
(g70
g63
NtRp3295
(dp3296
g66
(dp3297
g74
I4
ssg75
Nsg68
(lp3298
g61
(g77
g63
NtRp3299
(dp3300
g66
(dp3301
sg75
g3295
sg68
(lp3302
g61
(g82
g63
NtRp3303
(dp3304
g66
(dp3305
g86
g87
ssg75
g3299
sg68
(lp3306
S'expiration'
p3307
asbag61
(g82
g63
NtRp3308
(dp3309
g66
(dp3310
g93
g94
ssg75
g3299
sg68
(lp3311
S':'
asbag61
(g82
g63
NtRp3312
(dp3313
g66
(dp3314
sg75
g3299
sg68
(lp3315
g61
(g62
g63
NtRp3316
(dp3317
g66
(dp3318
g74
I4
ssg75
g3312
sg68
(lp3319
S'2592000'
p3320
asbasbasbag61
(g77
g63
NtRp3321
(dp3322
g66
(dp3323
sg75
g3295
sg68
(lp3324
g61
(g82
g63
NtRp3325
(dp3326
g66
(dp3327
g86
g87
ssg75
g3321
sg68
(lp3328
S'hmac_key'
p3329
asbag61
(g82
g63
NtRp3330
(dp3331
g66
(dp3332
g93
g94
ssg75
g3321
sg68
(lp3333
S':'
asbag61
(g82
g63
NtRp3334
(dp3335
g66
(dp3336
sg75
g3321
sg68
(lp3337
g61
(g62
g63
NtRp3338
(dp3339
g66
(dp3340
g74
I4
ssg75
g3334
sg68
(lp3341
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3342
asbasbasbag61
(g77
g63
NtRp3343
(dp3344
g66
(dp3345
sg75
g3295
sg68
(lp3346
g61
(g82
g63
NtRp3347
(dp3348
g66
(dp3349
g86
g87
ssg75
g3343
sg68
(lp3350
S'last_visit'
p3351
asbag61
(g82
g63
NtRp3352
(dp3353
g66
(dp3354
g93
g94
ssg75
g3343
sg68
(lp3355
S':'
asbag61
(g82
g63
NtRp3356
(dp3357
g66
(dp3358
sg75
g3343
sg68
(lp3359
g61
(g62
g63
NtRp3360
(dp3361
g66
(dp3362
g74
I4
ssg75
g3356
sg68
(lp3363
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3364
asbasbasbag61
(g77
g63
NtRp3365
(dp3366
g66
(dp3367
sg75
g3295
sg68
(lp3368
g61
(g82
g63
NtRp3369
(dp3370
g66
(dp3371
g86
g87
ssg75
g3365
sg68
(lp3372
S'remember'
p3373
asbag61
(g82
g63
NtRp3374
(dp3375
g66
(dp3376
g93
g94
ssg75
g3365
sg68
(lp3377
S':'
asbag61
(g82
g63
NtRp3378
(dp3379
g66
(dp3380
sg75
g3365
sg68
(lp3381
g61
(g62
g63
NtRp3382
(dp3383
g66
(dp3384
g74
I4
ssg75
g3378
sg68
(lp3385
g1684
asbasbasbag61
(g77
g63
NtRp3386
(dp3387
g66
(dp3388
sg75
g3295
sg68
(lp3389
g61
(g82
g63
NtRp3390
(dp3391
g66
(dp3392
g86
g87
ssg75
g3386
sg68
(lp3393
S'user'
p3394
asbag61
(g82
g63
NtRp3395
(dp3396
g66
(dp3397
g93
g94
ssg75
g3386
sg68
(lp3398
S':'
asbag61
(g82
g63
NtRp3399
(dp3400
g66
(dp3401
sg75
g3386
sg68
(lp3402
g61
(g62
g63
NtRp3403
(dp3404
g66
(dp3405
g74
I4
ssg75
g3399
sg68
(lp3406
g61
(g70
g63
NtRp3407
(dp3408
g66
(dp3409
g74
I3
ssg75
Nsg68
(lp3410
g61
(g77
g63
NtRp3411
(dp3412
g66
(dp3413
sg75
g3407
sg68
(lp3414
g61
(g82
g63
NtRp3415
(dp3416
g66
(dp3417
g86
g87
ssg75
g3411
sg68
(lp3418
S'address'
p3419
asbag61
(g82
g63
NtRp3420
(dp3421
g66
(dp3422
g93
g94
ssg75
g3411
sg68
(lp3423
S':'
asbag61
(g82
g63
NtRp3424
(dp3425
g66
(dp3426
sg75
g3411
sg68
(lp3427
g61
(g62
g63
NtRp3428
(dp3429
g66
(dp3430
g74
I3
ssg75
g3424
sg68
(lp3431
S'a'
asbasbasbag61
(g77
g63
NtRp3432
(dp3433
g66
(dp3434
sg75
g3407
sg68
(lp3435
g61
(g82
g63
NtRp3436
(dp3437
g66
(dp3438
g86
g87
ssg75
g3432
sg68
(lp3439
S'affiliated_to'
p3440
asbag61
(g82
g63
NtRp3441
(dp3442
g66
(dp3443
g93
g94
ssg75
g3432
sg68
(lp3444
S':'
asbag61
(g82
g63
NtRp3445
(dp3446
g66
(dp3447
sg75
g3432
sg68
(lp3448
g61
(g62
g63
NtRp3449
(dp3450
g66
(dp3451
g74
I3
ssg75
g3445
sg68
(lp3452
S'a'
asbasbasbag61
(g77
g63
NtRp3453
(dp3454
g66
(dp3455
sg75
g3407
sg68
(lp3456
g61
(g82
g63
NtRp3457
(dp3458
g66
(dp3459
g86
g87
ssg75
g3453
sg68
(lp3460
S'city'
p3461
asbag61
(g82
g63
NtRp3462
(dp3463
g66
(dp3464
g93
g94
ssg75
g3453
sg68
(lp3465
S':'
asbag61
(g82
g63
NtRp3466
(dp3467
g66
(dp3468
sg75
g3453
sg68
(lp3469
g61
(g62
g63
NtRp3470
(dp3471
g66
(dp3472
g74
I3
ssg75
g3466
sg68
(lp3473
S'a'
asbasbasbag61
(g77
g63
NtRp3474
(dp3475
g66
(dp3476
sg75
g3407
sg68
(lp3477
g61
(g82
g63
NtRp3478
(dp3479
g66
(dp3480
g86
g87
ssg75
g3474
sg68
(lp3481
S'country'
p3482
asbag61
(g82
g63
NtRp3483
(dp3484
g66
(dp3485
g93
g94
ssg75
g3474
sg68
(lp3486
S':'
asbag61
(g82
g63
NtRp3487
(dp3488
g66
(dp3489
sg75
g3474
sg68
(lp3490
g61
(g62
g63
NtRp3491
(dp3492
g66
(dp3493
g74
I3
ssg75
g3487
sg68
(lp3494
S'India'
p3495
asbasbasbag61
(g77
g63
NtRp3496
(dp3497
g66
(dp3498
sg75
g3407
sg68
(lp3499
g61
(g82
g63
NtRp3500
(dp3501
g66
(dp3502
g86
g87
ssg75
g3496
sg68
(lp3503
S'email'
p3504
asbag61
(g82
g63
NtRp3505
(dp3506
g66
(dp3507
g93
g94
ssg75
g3496
sg68
(lp3508
S':'
asbag61
(g82
g63
NtRp3509
(dp3510
g66
(dp3511
sg75
g3496
sg68
(lp3512
g61
(g62
g63
NtRp3513
(dp3514
g66
(dp3515
g74
I3
ssg75
g3509
sg68
(lp3516
S'anil.iiith@gmail.com'
p3517
asbasbasbag61
(g77
g63
NtRp3518
(dp3519
g66
(dp3520
sg75
g3407
sg68
(lp3521
g61
(g82
g63
NtRp3522
(dp3523
g66
(dp3524
g86
g87
ssg75
g3518
sg68
(lp3525
S'first_name'
p3526
asbag61
(g82
g63
NtRp3527
(dp3528
g66
(dp3529
g93
g94
ssg75
g3518
sg68
(lp3530
S':'
asbag61
(g82
g63
NtRp3531
(dp3532
g66
(dp3533
sg75
g3518
sg68
(lp3534
g61
(g62
g63
NtRp3535
(dp3536
g66
(dp3537
g74
I3
ssg75
g3531
sg68
(lp3538
S'anil'
p3539
asbasbasbag61
(g77
g63
NtRp3540
(dp3541
g66
(dp3542
sg75
g3407
sg68
(lp3543
g61
(g82
g63
NtRp3544
(dp3545
g66
(dp3546
g86
g87
ssg75
g3540
sg68
(lp3547
S'id'
p3548
asbag61
(g82
g63
NtRp3549
(dp3550
g66
(dp3551
g93
g94
ssg75
g3540
sg68
(lp3552
S':'
asbag61
(g82
g63
NtRp3553
(dp3554
g66
(dp3555
sg75
g3540
sg68
(lp3556
g61
(g62
g63
NtRp3557
(dp3558
g66
(dp3559
g74
I3
ssg75
g3553
sg68
(lp3560
S'2'
asbasbasbag61
(g77
g63
NtRp3561
(dp3562
g66
(dp3563
sg75
g3407
sg68
(lp3564
g61
(g82
g63
NtRp3565
(dp3566
g66
(dp3567
g86
g87
ssg75
g3561
sg68
(lp3568
S'last_name'
p3569
asbag61
(g82
g63
NtRp3570
(dp3571
g66
(dp3572
g93
g94
ssg75
g3561
sg68
(lp3573
S':'
asbag61
(g82
g63
NtRp3574
(dp3575
g66
(dp3576
sg75
g3561
sg68
(lp3577
g61
(g62
g63
NtRp3578
(dp3579
g66
(dp3580
g74
I3
ssg75
g3574
sg68
(lp3581
S'n'
asbasbasbag61
(g77
g63
NtRp3582
(dp3583
g66
(dp3584
sg75
g3407
sg68
(lp3585
g61
(g82
g63
NtRp3586
(dp3587
g66
(dp3588
g86
g87
ssg75
g3582
sg68
(lp3589
S'mobile'
p3590
asbag61
(g82
g63
NtRp3591
(dp3592
g66
(dp3593
g93
g94
ssg75
g3582
sg68
(lp3594
S':'
asbag61
(g82
g63
NtRp3595
(dp3596
g66
(dp3597
sg75
g3582
sg68
(lp3598
g61
(g62
g63
NtRp3599
(dp3600
g66
(dp3601
g74
I3
ssg75
g3595
sg68
(lp3602
S'1233'
p3603
asbasbasbag61
(g77
g63
NtRp3604
(dp3605
g66
(dp3606
sg75
g3407
sg68
(lp3607
g61
(g82
g63
NtRp3608
(dp3609
g66
(dp3610
g86
g87
ssg75
g3604
sg68
(lp3611
S'phone'
p3612
asbag61
(g82
g63
NtRp3613
(dp3614
g66
(dp3615
g93
g94
ssg75
g3604
sg68
(lp3616
S':'
asbag61
(g82
g63
NtRp3617
(dp3618
g66
(dp3619
sg75
g3604
sg68
(lp3620
g61
(g62
g63
NtRp3621
(dp3622
g66
(dp3623
g74
I3
ssg75
g3617
sg68
(lp3624
S'123'
p3625
asbasbasbag61
(g77
g63
NtRp3626
(dp3627
g66
(dp3628
sg75
g3407
sg68
(lp3629
g61
(g82
g63
NtRp3630
(dp3631
g66
(dp3632
g86
g87
ssg75
g3626
sg68
(lp3633
S'position'
p3634
asbag61
(g82
g63
NtRp3635
(dp3636
g66
(dp3637
g93
g94
ssg75
g3626
sg68
(lp3638
S':'
asbag61
(g82
g63
NtRp3639
(dp3640
g66
(dp3641
sg75
g3626
sg68
(lp3642
g61
(g62
g63
NtRp3643
(dp3644
g66
(dp3645
g74
I3
ssg75
g3639
sg68
(lp3646
S'0'
asbasbasbag61
(g77
g63
NtRp3647
(dp3648
g66
(dp3649
sg75
g3407
sg68
(lp3650
g61
(g82
g63
NtRp3651
(dp3652
g66
(dp3653
g86
g87
ssg75
g3647
sg68
(lp3654
S'postal_code'
p3655
asbag61
(g82
g63
NtRp3656
(dp3657
g66
(dp3658
g93
g94
ssg75
g3647
sg68
(lp3659
S':'
asbag61
(g82
g63
NtRp3660
(dp3661
g66
(dp3662
sg75
g3647
sg68
(lp3663
g61
(g62
g63
NtRp3664
(dp3665
g66
(dp3666
g74
I3
ssg75
g3660
sg68
(lp3667
S'123'
p3668
asbasbasbag61
(g77
g63
NtRp3669
(dp3670
g66
(dp3671
sg75
g3407
sg68
(lp3672
g61
(g82
g63
NtRp3673
(dp3674
g66
(dp3675
g86
g87
ssg75
g3669
sg68
(lp3676
S'registration_at'
p3677
asbag61
(g82
g63
NtRp3678
(dp3679
g66
(dp3680
g93
g94
ssg75
g3669
sg68
(lp3681
S':'
asbag61
(g82
g63
NtRp3682
(dp3683
g66
(dp3684
sg75
g3669
sg68
(lp3685
g61
(g62
g63
NtRp3686
(dp3687
g66
(dp3688
g74
I3
ssg75
g3682
sg68
(lp3689
S'0'
asbasbasbag61
(g77
g63
NtRp3690
(dp3691
g66
(dp3692
sg75
g3407
sg68
(lp3693
g61
(g82
g63
NtRp3694
(dp3695
g66
(dp3696
g86
g87
ssg75
g3690
sg68
(lp3697
S'registration_id'
p3698
asbag61
(g82
g63
NtRp3699
(dp3700
g66
(dp3701
g93
g94
ssg75
g3690
sg68
(lp3702
S':'
asbag61
(g82
g63
NtRp3703
(dp3704
g66
(dp3705
sg75
g3690
sg68
(lp3706
g61
(g62
g63
NtRp3707
(dp3708
g66
(dp3709
g74
I3
ssg75
g3703
sg68
(lp3710
S''
asbasbasbag61
(g77
g63
NtRp3711
(dp3712
g66
(dp3713
sg75
g3407
sg68
(lp3714
g61
(g82
g63
NtRp3715
(dp3716
g66
(dp3717
g86
g87
ssg75
g3711
sg68
(lp3718
S'registration_key'
p3719
asbag61
(g82
g63
NtRp3720
(dp3721
g66
(dp3722
g93
g94
ssg75
g3711
sg68
(lp3723
S':'
asbag61
(g82
g63
NtRp3724
(dp3725
g66
(dp3726
sg75
g3711
sg68
(lp3727
g61
(g62
g63
NtRp3728
(dp3729
g66
(dp3730
g74
I3
ssg75
g3724
sg68
(lp3731
S''
asbasbasbag61
(g77
g63
NtRp3732
(dp3733
g66
(dp3734
sg75
g3407
sg68
(lp3735
g61
(g82
g63
NtRp3736
(dp3737
g66
(dp3738
g86
g87
ssg75
g3732
sg68
(lp3739
S'reset_password_key'
p3740
asbag61
(g82
g63
NtRp3741
(dp3742
g66
(dp3743
g93
g94
ssg75
g3732
sg68
(lp3744
S':'
asbag61
(g82
g63
NtRp3745
(dp3746
g66
(dp3747
sg75
g3732
sg68
(lp3748
g61
(g62
g63
NtRp3749
(dp3750
g66
(dp3751
g74
I3
ssg75
g3745
sg68
(lp3752
S''
asbasbasbag61
(g77
g63
NtRp3753
(dp3754
g66
(dp3755
sg75
g3407
sg68
(lp3756
g61
(g82
g63
NtRp3757
(dp3758
g66
(dp3759
g86
g87
ssg75
g3753
sg68
(lp3760
S'title'
p3761
asbag61
(g82
g63
NtRp3762
(dp3763
g66
(dp3764
g93
g94
ssg75
g3753
sg68
(lp3765
S':'
asbag61
(g82
g63
NtRp3766
(dp3767
g66
(dp3768
sg75
g3753
sg68
(lp3769
g61
(g62
g63
NtRp3770
(dp3771
g66
(dp3772
g74
I3
ssg75
g3766
sg68
(lp3773
S'0'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3774
(dp3775
g66
(dp3776
sg75
g3295
sg68
(lp3777
g61
(g82
g63
NtRp3778
(dp3779
g66
(dp3780
g86
g87
ssg75
g3774
sg68
(lp3781
S'user_groups'
p3782
asbag61
(g82
g63
NtRp3783
(dp3784
g66
(dp3785
g93
g94
ssg75
g3774
sg68
(lp3786
S':'
asbag61
(g82
g63
NtRp3787
(dp3788
g66
(dp3789
sg75
g3774
sg68
(lp3790
g61
(g62
g63
NtRp3791
(dp3792
g66
(dp3793
g74
I4
ssg75
g3787
sg68
(lp3794
g61
(g70
g63
NtRp3795
(dp3796
g66
(dp3797
g74
I3
ssg75
Nsg68
(lp3798
g61
(g77
g63
NtRp3799
(dp3800
g66
(dp3801
sg75
g3795
sg68
(lp3802
g61
(g82
g63
NtRp3803
(dp3804
g66
(dp3805
g86
g87
ssg75
g3799
sg68
(lp3806
S'9'
asbag61
(g82
g63
NtRp3807
(dp3808
g66
(dp3809
g93
g94
ssg75
g3799
sg68
(lp3810
S':'
asbag61
(g82
g63
NtRp3811
(dp3812
g66
(dp3813
sg75
g3799
sg68
(lp3814
g61
(g62
g63
NtRp3815
(dp3816
g66
(dp3817
g74
I3
ssg75
g3811
sg68
(lp3818
S'user_2'
p3819
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp3820
(dp3821
g66
(dp3822
sg75
g3270
sg68
(lp3823
g61
(g82
g63
NtRp3824
(dp3825
g66
(dp3826
g86
g87
ssg75
g3820
sg68
(lp3827
S'flash'
p3828
asbag61
(g82
g63
NtRp3829
(dp3830
g66
(dp3831
g93
g94
ssg75
g3820
sg68
(lp3832
S':'
asbag61
(g82
g63
NtRp3833
(dp3834
g66
(dp3835
sg75
g3820
sg68
(lp3836
g61
(g62
g63
NtRp3837
(dp3838
g66
(dp3839
g74
I5
ssg75
g3833
sg68
(lp3840
S'None'
p3841
asbasbasbag61
(g77
g63
NtRp3842
(dp3843
g66
(dp3844
sg75
g3270
sg68
(lp3845
g61
(g82
g63
NtRp3846
(dp3847
g66
(dp3848
g86
g87
ssg75
g3842
sg68
(lp3849
S'last_orderby'
p3850
asbag61
(g82
g63
NtRp3851
(dp3852
g66
(dp3853
g93
g94
ssg75
g3842
sg68
(lp3854
S':'
asbag61
(g82
g63
NtRp3855
(dp3856
g66
(dp3857
sg75
g3842
sg68
(lp3858
g61
(g62
g63
NtRp3859
(dp3860
g66
(dp3861
g74
I5
ssg75
g3855
sg68
(lp3862
S'None'
p3863
asbasbasbag61
(g77
g63
NtRp3864
(dp3865
g66
(dp3866
sg75
g3270
sg68
(lp3867
g61
(g82
g63
NtRp3868
(dp3869
g66
(dp3870
g86
g87
ssg75
g3864
sg68
(lp3871
S'last_query'
p3872
asbag61
(g82
g63
NtRp3873
(dp3874
g66
(dp3875
g93
g94
ssg75
g3864
sg68
(lp3876
S':'
asbag61
(g82
g63
NtRp3877
(dp3878
g66
(dp3879
sg75
g3864
sg68
(lp3880
g61
(g62
g63
NtRp3881
(dp3882
g66
(dp3883
g74
I5
ssg75
g3877
sg68
(lp3884
S'db.project.id>0'
p3885
asbasbasbasbasbsS'etype'
p3886
S"<class 'sqlite3.IntegrityError'>"
p3887
sS'date'
p3888
S'Mon Feb 25 11:24:16 2013'
p3889
sS'response'
p3890
g61
(g62
g63
NtRp3891
(dp3892
g66
(dp3893
sg68
(lp3894
g61
(g70
g63
NtRp3895
(dp3896
g66
(dp3897
g74
I5
ssg75
Nsg68
(lp3898
g61
(g77
g63
NtRp3899
(dp3900
g66
(dp3901
sg75
g3895
sg68
(lp3902
g61
(g82
g63
NtRp3903
(dp3904
g66
(dp3905
g86
g87
ssg75
g3899
sg68
(lp3906
g234
asbag61
(g82
g63
NtRp3907
(dp3908
g66
(dp3909
g93
g94
ssg75
g3899
sg68
(lp3910
S':'
asbag61
(g82
g63
NtRp3911
(dp3912
g66
(dp3913
sg75
g3899
sg68
(lp3914
g61
(g62
g63
NtRp3915
(dp3916
g66
(dp3917
g74
I5
ssg75
g3911
sg68
(lp3918
S'<cStringIO.StringO object at 0xae6877a0>'
p3919
asbasbasbag61
(g77
g63
NtRp3920
(dp3921
g66
(dp3922
sg75
g3895
sg68
(lp3923
g61
(g82
g63
NtRp3924
(dp3925
g66
(dp3926
g86
g87
ssg75
g3920
sg68
(lp3927
g322
asbag61
(g82
g63
NtRp3928
(dp3929
g66
(dp3930
g93
g94
ssg75
g3920
sg68
(lp3931
S':'
asbag61
(g82
g63
NtRp3932
(dp3933
g66
(dp3934
sg75
g3920
sg68
(lp3935
g61
(g62
g63
NtRp3936
(dp3937
g66
(dp3938
g74
I5
ssg75
g3932
sg68
(lp3939
g61
(g70
g63
NtRp3940
(dp3941
g66
(dp3942
g74
I4
ssg75
Nsg68
(lp3943
g61
(g77
g63
NtRp3944
(dp3945
g66
(dp3946
sg75
g3940
sg68
(lp3947
g61
(g82
g63
NtRp3948
(dp3949
g66
(dp3950
g86
g87
ssg75
g3944
sg68
(lp3951
S'session_id_dev_bootstrap_ch'
p3952
asbag61
(g82
g63
NtRp3953
(dp3954
g66
(dp3955
g93
g94
ssg75
g3944
sg68
(lp3956
S':'
asbag61
(g82
g63
NtRp3957
(dp3958
g66
(dp3959
sg75
g3944
sg68
(lp3960
g61
(g62
g63
NtRp3961
(dp3962
g66
(dp3963
g74
I4
ssg75
g3957
sg68
(lp3964
g554
ag61
(g70
g63
NtRp3965
(dp3966
g66
(dp3967
g74
I3
ssg75
Nsg68
(lp3968
g61
(g77
g63
NtRp3969
(dp3970
g66
(dp3971
sg75
g3965
sg68
(lp3972
g61
(g82
g63
NtRp3973
(dp3974
g66
(dp3975
g86
g87
ssg75
g3969
sg68
(lp3976
g373
asbag61
(g82
g63
NtRp3977
(dp3978
g66
(dp3979
g93
g94
ssg75
g3969
sg68
(lp3980
S':'
asbag61
(g82
g63
NtRp3981
(dp3982
g66
(dp3983
sg75
g3969
sg68
(lp3984
g61
(g62
g63
NtRp3985
(dp3986
g66
(dp3987
g74
I3
ssg75
g3981
sg68
(lp3988
S''
asbasbasbag61
(g77
g63
NtRp3989
(dp3990
g66
(dp3991
sg75
g3965
sg68
(lp3992
g61
(g82
g63
NtRp3993
(dp3994
g66
(dp3995
g86
g87
ssg75
g3989
sg68
(lp3996
g394
asbag61
(g82
g63
NtRp3997
(dp3998
g66
(dp3999
g93
g94
ssg75
g3989
sg68
(lp4000
S':'
asbag61
(g82
g63
NtRp4001
(dp4002
g66
(dp4003
sg75
g3989
sg68
(lp4004
g61
(g62
g63
NtRp4005
(dp4006
g66
(dp4007
g74
I3
ssg75
g4001
sg68
(lp4008
S''
asbasbasbag61
(g77
g63
NtRp4009
(dp4010
g66
(dp4011
sg75
g3965
sg68
(lp4012
g61
(g82
g63
NtRp4013
(dp4014
g66
(dp4015
g86
g87
ssg75
g4009
sg68
(lp4016
g415
asbag61
(g82
g63
NtRp4017
(dp4018
g66
(dp4019
g93
g94
ssg75
g4009
sg68
(lp4020
S':'
asbag61
(g82
g63
NtRp4021
(dp4022
g66
(dp4023
sg75
g4009
sg68
(lp4024
g61
(g62
g63
NtRp4025
(dp4026
g66
(dp4027
g74
I3
ssg75
g4021
sg68
(lp4028
S'2592000'
p4029
asbasbasbag61
(g77
g63
NtRp4030
(dp4031
g66
(dp4032
sg75
g3965
sg68
(lp4033
g61
(g82
g63
NtRp4034
(dp4035
g66
(dp4036
g86
g87
ssg75
g4030
sg68
(lp4037
g436
asbag61
(g82
g63
NtRp4038
(dp4039
g66
(dp4040
g93
g94
ssg75
g4030
sg68
(lp4041
S':'
asbag61
(g82
g63
NtRp4042
(dp4043
g66
(dp4044
sg75
g4030
sg68
(lp4045
g61
(g62
g63
NtRp4046
(dp4047
g66
(dp4048
g74
I3
ssg75
g4042
sg68
(lp4049
S''
asbasbasbag61
(g77
g63
NtRp4050
(dp4051
g66
(dp4052
sg75
g3965
sg68
(lp4053
g61
(g82
g63
NtRp4054
(dp4055
g66
(dp4056
g86
g87
ssg75
g4050
sg68
(lp4057
g457
asbag61
(g82
g63
NtRp4058
(dp4059
g66
(dp4060
g93
g94
ssg75
g4050
sg68
(lp4061
S':'
asbag61
(g82
g63
NtRp4062
(dp4063
g66
(dp4064
sg75
g4050
sg68
(lp4065
g61
(g62
g63
NtRp4066
(dp4067
g66
(dp4068
g74
I3
ssg75
g4062
sg68
(lp4069
S''
asbasbasbag61
(g77
g63
NtRp4070
(dp4071
g66
(dp4072
sg75
g3965
sg68
(lp4073
g61
(g82
g63
NtRp4074
(dp4075
g66
(dp4076
g86
g87
ssg75
g4070
sg68
(lp4077
g478
asbag61
(g82
g63
NtRp4078
(dp4079
g66
(dp4080
g93
g94
ssg75
g4070
sg68
(lp4081
S':'
asbag61
(g82
g63
NtRp4082
(dp4083
g66
(dp4084
sg75
g4070
sg68
(lp4085
g61
(g62
g63
NtRp4086
(dp4087
g66
(dp4088
g74
I3
ssg75
g4082
sg68
(lp4089
S'/'
asbasbasbag61
(g77
g63
NtRp4090
(dp4091
g66
(dp4092
sg75
g3965
sg68
(lp4093
g61
(g82
g63
NtRp4094
(dp4095
g66
(dp4096
g86
g87
ssg75
g4090
sg68
(lp4097
g499
asbag61
(g82
g63
NtRp4098
(dp4099
g66
(dp4100
g93
g94
ssg75
g4090
sg68
(lp4101
S':'
asbag61
(g82
g63
NtRp4102
(dp4103
g66
(dp4104
sg75
g4090
sg68
(lp4105
g61
(g62
g63
NtRp4106
(dp4107
g66
(dp4108
g74
I3
ssg75
g4102
sg68
(lp4109
S''
asbasbasbag61
(g77
g63
NtRp4110
(dp4111
g66
(dp4112
sg75
g3965
sg68
(lp4113
g61
(g82
g63
NtRp4114
(dp4115
g66
(dp4116
g86
g87
ssg75
g4110
sg68
(lp4117
g520
asbag61
(g82
g63
NtRp4118
(dp4119
g66
(dp4120
g93
g94
ssg75
g4110
sg68
(lp4121
S':'
asbag61
(g82
g63
NtRp4122
(dp4123
g66
(dp4124
sg75
g4110
sg68
(lp4125
g61
(g62
g63
NtRp4126
(dp4127
g66
(dp4128
g74
I3
ssg75
g4122
sg68
(lp4129
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4130
(dp4131
g66
(dp4132
sg75
g3895
sg68
(lp4133
g61
(g82
g63
NtRp4134
(dp4135
g66
(dp4136
g86
g87
ssg75
g4130
sg68
(lp4137
S'delimiters'
p4138
asbag61
(g82
g63
NtRp4139
(dp4140
g66
(dp4141
g93
g94
ssg75
g4130
sg68
(lp4142
S':'
asbag61
(g82
g63
NtRp4143
(dp4144
g66
(dp4145
sg75
g4130
sg68
(lp4146
g61
(g62
g63
NtRp4147
(dp4148
g66
(dp4149
g74
I5
ssg75
g4143
sg68
(lp4150
g61
(g70
g63
NtRp4151
(dp4152
g66
(dp4153
g74
I4
ssg75
Nsg68
(lp4154
g61
(g77
g63
NtRp4155
(dp4156
g66
(dp4157
sg75
g4151
sg68
(lp4158
g61
(g82
g63
NtRp4159
(dp4160
g66
(dp4161
sg75
g4155
sg68
(lp4162
g61
(g62
g63
NtRp4163
(dp4164
g66
(dp4165
g74
I4
ssg75
g4159
sg68
(lp4166
S'{{'
p4167
asbasbasbag61
(g77
g63
NtRp4168
(dp4169
g66
(dp4170
sg75
g4151
sg68
(lp4171
g61
(g82
g63
NtRp4172
(dp4173
g66
(dp4174
sg75
g4168
sg68
(lp4175
g61
(g62
g63
NtRp4176
(dp4177
g66
(dp4178
g74
I4
ssg75
g4172
sg68
(lp4179
S'}}'
p4180
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4181
(dp4182
g66
(dp4183
sg75
g3895
sg68
(lp4184
g61
(g82
g63
NtRp4185
(dp4186
g66
(dp4187
g86
g87
ssg75
g4181
sg68
(lp4188
S'files'
p4189
asbag61
(g82
g63
NtRp4190
(dp4191
g66
(dp4192
g93
g94
ssg75
g4181
sg68
(lp4193
S':'
asbag61
(g82
g63
NtRp4194
(dp4195
g66
(dp4196
sg75
g4181
sg68
(lp4197
g61
(g62
g63
NtRp4198
(dp4199
g66
(dp4200
g74
I5
ssg75
g4194
sg68
(lp4201
g61
(g70
g63
NtRp4202
(dp4203
g66
(dp4204
g74
I4
ssg75
Nsg68
(lp4205
g61
(g77
g63
NtRp4206
(dp4207
g66
(dp4208
sg75
g4202
sg68
(lp4209
g61
(g82
g63
NtRp4210
(dp4211
g66
(dp4212
sg75
g4206
sg68
(lp4213
g61
(g62
g63
NtRp4214
(dp4215
g66
(dp4216
g74
I4
ssg75
g4210
sg68
(lp4217
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4218
asbasbasbag61
(g77
g63
NtRp4219
(dp4220
g66
(dp4221
sg75
g4202
sg68
(lp4222
g61
(g82
g63
NtRp4223
(dp4224
g66
(dp4225
sg75
g4219
sg68
(lp4226
g61
(g62
g63
NtRp4227
(dp4228
g66
(dp4229
g74
I4
ssg75
g4223
sg68
(lp4230
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4231
asbasbasbag61
(g77
g63
NtRp4232
(dp4233
g66
(dp4234
sg75
g4202
sg68
(lp4235
g61
(g82
g63
NtRp4236
(dp4237
g66
(dp4238
sg75
g4232
sg68
(lp4239
g61
(g62
g63
NtRp4240
(dp4241
g66
(dp4242
g74
I4
ssg75
g4236
sg68
(lp4243
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4244
asbasbasbag61
(g77
g63
NtRp4245
(dp4246
g66
(dp4247
sg75
g4202
sg68
(lp4248
g61
(g82
g63
NtRp4249
(dp4250
g66
(dp4251
sg75
g4245
sg68
(lp4252
g61
(g62
g63
NtRp4253
(dp4254
g66
(dp4255
g74
I4
ssg75
g4249
sg68
(lp4256
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4257
asbasbasbag61
(g77
g63
NtRp4258
(dp4259
g66
(dp4260
sg75
g4202
sg68
(lp4261
g61
(g82
g63
NtRp4262
(dp4263
g66
(dp4264
sg75
g4258
sg68
(lp4265
g61
(g62
g63
NtRp4266
(dp4267
g66
(dp4268
g74
I4
ssg75
g4262
sg68
(lp4269
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4270
asbasbasbag61
(g77
g63
NtRp4271
(dp4272
g66
(dp4273
sg75
g4202
sg68
(lp4274
g61
(g82
g63
NtRp4275
(dp4276
g66
(dp4277
sg75
g4271
sg68
(lp4278
g61
(g62
g63
NtRp4279
(dp4280
g66
(dp4281
g74
I4
ssg75
g4275
sg68
(lp4282
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4283
asbasbasbag61
(g77
g63
NtRp4284
(dp4285
g66
(dp4286
sg75
g4202
sg68
(lp4287
g61
(g82
g63
NtRp4288
(dp4289
g66
(dp4290
sg75
g4284
sg68
(lp4291
g61
(g62
g63
NtRp4292
(dp4293
g66
(dp4294
g74
I4
ssg75
g4288
sg68
(lp4295
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4296
asbasbasbag61
(g77
g63
NtRp4297
(dp4298
g66
(dp4299
sg75
g4202
sg68
(lp4300
g61
(g82
g63
NtRp4301
(dp4302
g66
(dp4303
sg75
g4297
sg68
(lp4304
g61
(g62
g63
NtRp4305
(dp4306
g66
(dp4307
g74
I4
ssg75
g4301
sg68
(lp4308
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4309
asbasbasbag61
(g77
g63
NtRp4310
(dp4311
g66
(dp4312
sg75
g4202
sg68
(lp4313
g61
(g82
g63
NtRp4314
(dp4315
g66
(dp4316
sg75
g4310
sg68
(lp4317
g61
(g62
g63
NtRp4318
(dp4319
g66
(dp4320
g74
I4
ssg75
g4314
sg68
(lp4321
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4322
asbasbasbag61
(g77
g63
NtRp4323
(dp4324
g66
(dp4325
sg75
g4202
sg68
(lp4326
g61
(g82
g63
NtRp4327
(dp4328
g66
(dp4329
sg75
g4323
sg68
(lp4330
g61
(g62
g63
NtRp4331
(dp4332
g66
(dp4333
g74
I4
ssg75
g4327
sg68
(lp4334
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4335
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4336
(dp4337
g66
(dp4338
sg75
g3895
sg68
(lp4339
g61
(g82
g63
NtRp4340
(dp4341
g66
(dp4342
g86
g87
ssg75
g4336
sg68
(lp4343
S'flash'
p4344
asbag61
(g82
g63
NtRp4345
(dp4346
g66
(dp4347
g93
g94
ssg75
g4336
sg68
(lp4348
S':'
asbag61
(g82
g63
NtRp4349
(dp4350
g66
(dp4351
sg75
g4336
sg68
(lp4352
g61
(g62
g63
NtRp4353
(dp4354
g66
(dp4355
g74
I5
ssg75
g4349
sg68
(lp4356
S''
asbasbasbag61
(g77
g63
NtRp4357
(dp4358
g66
(dp4359
sg75
g3895
sg68
(lp4360
g61
(g82
g63
NtRp4361
(dp4362
g66
(dp4363
g86
g87
ssg75
g4357
sg68
(lp4364
S'generic_patterns'
p4365
asbag61
(g82
g63
NtRp4366
(dp4367
g66
(dp4368
g93
g94
ssg75
g4357
sg68
(lp4369
S':'
asbag61
(g82
g63
NtRp4370
(dp4371
g66
(dp4372
sg75
g4357
sg68
(lp4373
g61
(g62
g63
NtRp4374
(dp4375
g66
(dp4376
g74
I5
ssg75
g4370
sg68
(lp4377
g61
(g70
g63
NtRp4378
(dp4379
g66
(dp4380
g74
I4
ssg75
Nsg68
(lp4381
g61
(g77
g63
NtRp4382
(dp4383
g66
(dp4384
sg75
g4378
sg68
(lp4385
g61
(g82
g63
NtRp4386
(dp4387
g66
(dp4388
sg75
g4382
sg68
(lp4389
g61
(g62
g63
NtRp4390
(dp4391
g66
(dp4392
g74
I4
ssg75
g4386
sg68
(lp4393
S'*'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4394
(dp4395
g66
(dp4396
sg75
g3895
sg68
(lp4397
g61
(g82
g63
NtRp4398
(dp4399
g66
(dp4400
g86
g87
ssg75
g4394
sg68
(lp4401
S'google_analytics_id'
p4402
asbag61
(g82
g63
NtRp4403
(dp4404
g66
(dp4405
g93
g94
ssg75
g4394
sg68
(lp4406
S':'
asbag61
(g82
g63
NtRp4407
(dp4408
g66
(dp4409
sg75
g4394
sg68
(lp4410
g61
(g62
g63
NtRp4411
(dp4412
g66
(dp4413
g74
I5
ssg75
g4407
sg68
(lp4414
S'None'
p4415
asbasbasbag61
(g77
g63
NtRp4416
(dp4417
g66
(dp4418
sg75
g3895
sg68
(lp4419
g61
(g82
g63
NtRp4420
(dp4421
g66
(dp4422
g86
g87
ssg75
g4416
sg68
(lp4423
S'headers'
p4424
asbag61
(g82
g63
NtRp4425
(dp4426
g66
(dp4427
g93
g94
ssg75
g4416
sg68
(lp4428
S':'
asbag61
(g82
g63
NtRp4429
(dp4430
g66
(dp4431
sg75
g4416
sg68
(lp4432
g61
(g62
g63
NtRp4433
(dp4434
g66
(dp4435
g74
I5
ssg75
g4429
sg68
(lp4436
g61
(g70
g63
NtRp4437
(dp4438
g66
(dp4439
g74
I4
ssg75
Nsg68
(lp4440
g61
(g77
g63
NtRp4441
(dp4442
g66
(dp4443
sg75
g4437
sg68
(lp4444
g61
(g82
g63
NtRp4445
(dp4446
g66
(dp4447
g86
g87
ssg75
g4441
sg68
(lp4448
S'X-Powered-By'
p4449
asbag61
(g82
g63
NtRp4450
(dp4451
g66
(dp4452
g93
g94
ssg75
g4441
sg68
(lp4453
S':'
asbag61
(g82
g63
NtRp4454
(dp4455
g66
(dp4456
sg75
g4441
sg68
(lp4457
g61
(g62
g63
NtRp4458
(dp4459
g66
(dp4460
g74
I4
ssg75
g4454
sg68
(lp4461
S'web2py'
p4462
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4463
(dp4464
g66
(dp4465
sg75
g3895
sg68
(lp4466
g61
(g82
g63
NtRp4467
(dp4468
g66
(dp4469
g86
g87
ssg75
g4463
sg68
(lp4470
S'menu'
p4471
asbag61
(g82
g63
NtRp4472
(dp4473
g66
(dp4474
g93
g94
ssg75
g4463
sg68
(lp4475
S':'
asbag61
(g82
g63
NtRp4476
(dp4477
g66
(dp4478
sg75
g4463
sg68
(lp4479
g61
(g62
g63
NtRp4480
(dp4481
g66
(dp4482
g74
I5
ssg75
g4476
sg68
(lp4483
g61
(g70
g63
NtRp4484
(dp4485
g66
(dp4486
g74
I4
ssg75
Nsg68
(lp4487
g61
(g77
g63
NtRp4488
(dp4489
g66
(dp4490
sg75
g4484
sg68
(lp4491
g61
(g82
g63
NtRp4492
(dp4493
g66
(dp4494
sg75
g4488
sg68
(lp4495
g61
(g62
g63
NtRp4496
(dp4497
g66
(dp4498
g74
I4
ssg75
g4492
sg68
(lp4499
g61
(g70
g63
NtRp4500
(dp4501
g66
(dp4502
g74
I3
ssg75
Nsg68
(lp4503
g61
(g77
g63
NtRp4504
(dp4505
g66
(dp4506
sg75
g4500
sg68
(lp4507
g61
(g82
g63
NtRp4508
(dp4509
g66
(dp4510
sg75
g4504
sg68
(lp4511
g61
(g62
g63
NtRp4512
(dp4513
g66
(dp4514
g74
I3
ssg75
g4508
sg68
(lp4515
cgluon.languages
lazyT_unpickle
p4516
(S't\x04\x00\x00\x00Home'
tRp4517
asbasbasbag61
(g77
g63
NtRp4518
(dp4519
g66
(dp4520
sg75
g4500
sg68
(lp4521
g61
(g82
g63
NtRp4522
(dp4523
g66
(dp4524
sg75
g4518
sg68
(lp4525
g61
(g62
g63
NtRp4526
(dp4527
g66
(dp4528
g74
I3
ssg75
g4522
sg68
(lp4529
g104
asbasbasbag61
(g77
g63
NtRp4530
(dp4531
g66
(dp4532
sg75
g4500
sg68
(lp4533
g61
(g82
g63
NtRp4534
(dp4535
g66
(dp4536
sg75
g4530
sg68
(lp4537
g61
(g62
g63
NtRp4538
(dp4539
g66
(dp4540
g74
I3
ssg75
g4534
sg68
(lp4541
S'/DEV_bootstrap_ch/default/list_all_projects'
p4542
asbasbasbag61
(g77
g63
NtRp4543
(dp4544
g66
(dp4545
sg75
g4500
sg68
(lp4546
g61
(g82
g63
NtRp4547
(dp4548
g66
(dp4549
sg75
g4543
sg68
(lp4550
g61
(g62
g63
NtRp4551
(dp4552
g66
(dp4553
g74
I3
ssg75
g4547
sg68
(lp4554
g61
(g70
g63
NtRp4555
(dp4556
g66
(dp4557
g74
I2
ssg75
Nsg68
(lp4558
sbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4559
(dp4560
g66
(dp4561
sg75
g4484
sg68
(lp4562
g61
(g82
g63
NtRp4563
(dp4564
g66
(dp4565
sg75
g4559
sg68
(lp4566
g61
(g62
g63
NtRp4567
(dp4568
g66
(dp4569
g74
I4
ssg75
g4563
sg68
(lp4570
g61
(g70
g63
NtRp4571
(dp4572
g66
(dp4573
g74
I3
ssg75
Nsg68
(lp4574
g61
(g77
g63
NtRp4575
(dp4576
g66
(dp4577
sg75
g4571
sg68
(lp4578
g61
(g82
g63
NtRp4579
(dp4580
g66
(dp4581
sg75
g4575
sg68
(lp4582
g61
(g62
g63
NtRp4583
(dp4584
g66
(dp4585
g74
I3
ssg75
g4579
sg68
(lp4586
g4516
(S's\x08\x00\x00\x00Projects'
tRp4587
asbasbasbag61
(g77
g63
NtRp4588
(dp4589
g66
(dp4590
sg75
g4571
sg68
(lp4591
g61
(g82
g63
NtRp4592
(dp4593
g66
(dp4594
sg75
g4588
sg68
(lp4595
g61
(g62
g63
NtRp4596
(dp4597
g66
(dp4598
g74
I3
ssg75
g4592
sg68
(lp4599
g104
asbasbasbag61
(g77
g63
NtRp4600
(dp4601
g66
(dp4602
sg75
g4571
sg68
(lp4603
g61
(g82
g63
NtRp4604
(dp4605
g66
(dp4606
sg75
g4600
sg68
(lp4607
g61
(g62
g63
NtRp4608
(dp4609
g66
(dp4610
g74
I3
ssg75
g4604
sg68
(lp4611
S'/DEV_bootstrap_ch/default/list_all_projects'
p4612
asbasbasbag61
(g77
g63
NtRp4613
(dp4614
g66
(dp4615
sg75
g4571
sg68
(lp4616
g61
(g82
g63
NtRp4617
(dp4618
g66
(dp4619
sg75
g4613
sg68
(lp4620
g61
(g62
g63
NtRp4621
(dp4622
g66
(dp4623
g74
I3
ssg75
g4617
sg68
(lp4624
g61
(g70
g63
NtRp4625
(dp4626
g66
(dp4627
g74
I2
ssg75
Nsg68
(lp4628
sbasbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4629
(dp4630
g66
(dp4631
sg75
g3895
sg68
(lp4632
g61
(g82
g63
NtRp4633
(dp4634
g66
(dp4635
g86
g87
ssg75
g4629
sg68
(lp4636
S'meta'
p4637
asbag61
(g82
g63
NtRp4638
(dp4639
g66
(dp4640
g93
g94
ssg75
g4629
sg68
(lp4641
S':'
asbag61
(g82
g63
NtRp4642
(dp4643
g66
(dp4644
sg75
g4629
sg68
(lp4645
g61
(g62
g63
NtRp4646
(dp4647
g66
(dp4648
g74
I5
ssg75
g4642
sg68
(lp4649
g61
(g70
g63
NtRp4650
(dp4651
g66
(dp4652
g74
I4
ssg75
Nsg68
(lp4653
g61
(g77
g63
NtRp4654
(dp4655
g66
(dp4656
sg75
g4650
sg68
(lp4657
g61
(g82
g63
NtRp4658
(dp4659
g66
(dp4660
g86
g87
ssg75
g4654
sg68
(lp4661
S'author'
p4662
asbag61
(g82
g63
NtRp4663
(dp4664
g66
(dp4665
g93
g94
ssg75
g4654
sg68
(lp4666
S':'
asbag61
(g82
g63
NtRp4667
(dp4668
g66
(dp4669
sg75
g4654
sg68
(lp4670
g61
(g62
g63
NtRp4671
(dp4672
g66
(dp4673
g74
I4
ssg75
g4667
sg68
(lp4674
S'Vikram Pudi <vikram@iiit.ac.in>'
p4675
asbasbasbag61
(g77
g63
NtRp4676
(dp4677
g66
(dp4678
sg75
g4650
sg68
(lp4679
g61
(g82
g63
NtRp4680
(dp4681
g66
(dp4682
g86
g87
ssg75
g4676
sg68
(lp4683
S'copyright'
p4684
asbag61
(g82
g63
NtRp4685
(dp4686
g66
(dp4687
g93
g94
ssg75
g4676
sg68
(lp4688
S':'
asbag61
(g82
g63
NtRp4689
(dp4690
g66
(dp4691
sg75
g4676
sg68
(lp4692
g61
(g62
g63
NtRp4693
(dp4694
g66
(dp4695
g74
I4
ssg75
g4689
sg68
(lp4696
S'Copyright 2011'
p4697
asbasbasbag61
(g77
g63
NtRp4698
(dp4699
g66
(dp4700
sg75
g4650
sg68
(lp4701
g61
(g82
g63
NtRp4702
(dp4703
g66
(dp4704
g86
g87
ssg75
g4698
sg68
(lp4705
S'description'
p4706
asbag61
(g82
g63
NtRp4707
(dp4708
g66
(dp4709
g93
g94
ssg75
g4698
sg68
(lp4710
S':'
asbag61
(g82
g63
NtRp4711
(dp4712
g66
(dp4713
sg75
g4698
sg68
(lp4714
g61
(g62
g63
NtRp4715
(dp4716
g66
(dp4717
g74
I4
ssg75
g4711
sg68
(lp4718
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4719
asbasbasbag61
(g77
g63
NtRp4720
(dp4721
g66
(dp4722
sg75
g4650
sg68
(lp4723
g61
(g82
g63
NtRp4724
(dp4725
g66
(dp4726
g86
g87
ssg75
g4720
sg68
(lp4727
S'generator'
p4728
asbag61
(g82
g63
NtRp4729
(dp4730
g66
(dp4731
g93
g94
ssg75
g4720
sg68
(lp4732
S':'
asbag61
(g82
g63
NtRp4733
(dp4734
g66
(dp4735
sg75
g4720
sg68
(lp4736
g61
(g62
g63
NtRp4737
(dp4738
g66
(dp4739
g74
I4
ssg75
g4733
sg68
(lp4740
S'Web2py Web Framework'
p4741
asbasbasbag61
(g77
g63
NtRp4742
(dp4743
g66
(dp4744
sg75
g4650
sg68
(lp4745
g61
(g82
g63
NtRp4746
(dp4747
g66
(dp4748
g86
g87
ssg75
g4742
sg68
(lp4749
S'keywords'
p4750
asbag61
(g82
g63
NtRp4751
(dp4752
g66
(dp4753
g93
g94
ssg75
g4742
sg68
(lp4754
S':'
asbag61
(g82
g63
NtRp4755
(dp4756
g66
(dp4757
sg75
g4742
sg68
(lp4758
g61
(g62
g63
NtRp4759
(dp4760
g66
(dp4761
g74
I4
ssg75
g4755
sg68
(lp4762
S'web2py, python, metabolome, metabolomics'
p4763
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4764
(dp4765
g66
(dp4766
sg75
g3895
sg68
(lp4767
g61
(g82
g63
NtRp4768
(dp4769
g66
(dp4770
g86
g87
ssg75
g4764
sg68
(lp4771
S'models_to_run'
p4772
asbag61
(g82
g63
NtRp4773
(dp4774
g66
(dp4775
g93
g94
ssg75
g4764
sg68
(lp4776
S':'
asbag61
(g82
g63
NtRp4777
(dp4778
g66
(dp4779
sg75
g4764
sg68
(lp4780
g61
(g62
g63
NtRp4781
(dp4782
g66
(dp4783
g74
I5
ssg75
g4777
sg68
(lp4784
g61
(g70
g63
NtRp4785
(dp4786
g66
(dp4787
g74
I4
ssg75
Nsg68
(lp4788
g61
(g77
g63
NtRp4789
(dp4790
g66
(dp4791
sg75
g4785
sg68
(lp4792
g61
(g82
g63
NtRp4793
(dp4794
g66
(dp4795
sg75
g4789
sg68
(lp4796
g61
(g62
g63
NtRp4797
(dp4798
g66
(dp4799
g74
I4
ssg75
g4793
sg68
(lp4800
S'^\\w+\\.py$'
p4801
asbasbasbag61
(g77
g63
NtRp4802
(dp4803
g66
(dp4804
sg75
g4785
sg68
(lp4805
g61
(g82
g63
NtRp4806
(dp4807
g66
(dp4808
sg75
g4802
sg68
(lp4809
g61
(g62
g63
NtRp4810
(dp4811
g66
(dp4812
g74
I4
ssg75
g4806
sg68
(lp4813
S'^default/\\w+\\.py$'
p4814
asbasbasbag61
(g77
g63
NtRp4815
(dp4816
g66
(dp4817
sg75
g4785
sg68
(lp4818
g61
(g82
g63
NtRp4819
(dp4820
g66
(dp4821
sg75
g4815
sg68
(lp4822
g61
(g62
g63
NtRp4823
(dp4824
g66
(dp4825
g74
I4
ssg75
g4819
sg68
(lp4826
S'^default/duplicate/\\w+\\.py$'
p4827
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4828
(dp4829
g66
(dp4830
sg75
g3895
sg68
(lp4831
g61
(g82
g63
NtRp4832
(dp4833
g66
(dp4834
g86
g87
ssg75
g4828
sg68
(lp4835
S'postprocessing'
p4836
asbag61
(g82
g63
NtRp4837
(dp4838
g66
(dp4839
g93
g94
ssg75
g4828
sg68
(lp4840
S':'
asbag61
(g82
g63
NtRp4841
(dp4842
g66
(dp4843
sg75
g4828
sg68
(lp4844
g61
(g62
g63
NtRp4845
(dp4846
g66
(dp4847
g74
I5
ssg75
g4841
sg68
(lp4848
g61
(g70
g63
NtRp4849
(dp4850
g66
(dp4851
g74
I4
ssg75
Nsg68
(lp4852
sbasbasbasbag61
(g77
g63
NtRp4853
(dp4854
g66
(dp4855
sg75
g3895
sg68
(lp4856
g61
(g82
g63
NtRp4857
(dp4858
g66
(dp4859
g86
g87
ssg75
g4853
sg68
(lp4860
S'session_cookie_expires'
p4861
asbag61
(g82
g63
NtRp4862
(dp4863
g66
(dp4864
g93
g94
ssg75
g4853
sg68
(lp4865
S':'
asbag61
(g82
g63
NtRp4866
(dp4867
g66
(dp4868
sg75
g4853
sg68
(lp4869
g61
(g62
g63
NtRp4870
(dp4871
g66
(dp4872
g74
I5
ssg75
g4866
sg68
(lp4873
S'None'
p4874
asbasbasbag61
(g77
g63
NtRp4875
(dp4876
g66
(dp4877
sg75
g3895
sg68
(lp4878
g61
(g82
g63
NtRp4879
(dp4880
g66
(dp4881
g86
g87
ssg75
g4875
sg68
(lp4882
S'session_data_name'
p4883
asbag61
(g82
g63
NtRp4884
(dp4885
g66
(dp4886
g93
g94
ssg75
g4875
sg68
(lp4887
S':'
asbag61
(g82
g63
NtRp4888
(dp4889
g66
(dp4890
sg75
g4875
sg68
(lp4891
g61
(g62
g63
NtRp4892
(dp4893
g66
(dp4894
g74
I5
ssg75
g4888
sg68
(lp4895
S'session_data_dev_bootstrap_ch'
p4896
asbasbasbag61
(g77
g63
NtRp4897
(dp4898
g66
(dp4899
sg75
g3895
sg68
(lp4900
g61
(g82
g63
NtRp4901
(dp4902
g66
(dp4903
g86
g87
ssg75
g4897
sg68
(lp4904
S'session_file'
p4905
asbag61
(g82
g63
NtRp4906
(dp4907
g66
(dp4908
g93
g94
ssg75
g4897
sg68
(lp4909
S':'
asbag61
(g82
g63
NtRp4910
(dp4911
g66
(dp4912
sg75
g4897
sg68
(lp4913
g61
(g62
g63
NtRp4914
(dp4915
g66
(dp4916
g74
I5
ssg75
g4910
sg68
(lp4917
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xb018ea70>"
p4918
asbasbasbag61
(g77
g63
NtRp4919
(dp4920
g66
(dp4921
sg75
g3895
sg68
(lp4922
g61
(g82
g63
NtRp4923
(dp4924
g66
(dp4925
g86
g87
ssg75
g4919
sg68
(lp4926
S'session_filename'
p4927
asbag61
(g82
g63
NtRp4928
(dp4929
g66
(dp4930
g93
g94
ssg75
g4919
sg68
(lp4931
S':'
asbag61
(g82
g63
NtRp4932
(dp4933
g66
(dp4934
sg75
g4919
sg68
(lp4935
g61
(g62
g63
NtRp4936
(dp4937
g66
(dp4938
g74
I5
ssg75
g4932
sg68
(lp4939
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4940
asbasbasbag61
(g77
g63
NtRp4941
(dp4942
g66
(dp4943
sg75
g3895
sg68
(lp4944
g61
(g82
g63
NtRp4945
(dp4946
g66
(dp4947
g86
g87
ssg75
g4941
sg68
(lp4948
S'session_id'
p4949
asbag61
(g82
g63
NtRp4950
(dp4951
g66
(dp4952
g93
g94
ssg75
g4941
sg68
(lp4953
S':'
asbag61
(g82
g63
NtRp4954
(dp4955
g66
(dp4956
sg75
g4941
sg68
(lp4957
g61
(g62
g63
NtRp4958
(dp4959
g66
(dp4960
g74
I5
ssg75
g4954
sg68
(lp4961
g554
asbasbasbag61
(g77
g63
NtRp4962
(dp4963
g66
(dp4964
sg75
g3895
sg68
(lp4965
g61
(g82
g63
NtRp4966
(dp4967
g66
(dp4968
g86
g87
ssg75
g4962
sg68
(lp4969
S'session_id_name'
p4970
asbag61
(g82
g63
NtRp4971
(dp4972
g66
(dp4973
g93
g94
ssg75
g4962
sg68
(lp4974
S':'
asbag61
(g82
g63
NtRp4975
(dp4976
g66
(dp4977
sg75
g4962
sg68
(lp4978
g61
(g62
g63
NtRp4979
(dp4980
g66
(dp4981
g74
I5
ssg75
g4975
sg68
(lp4982
g3952
asbasbasbag61
(g77
g63
NtRp4983
(dp4984
g66
(dp4985
sg75
g3895
sg68
(lp4986
g61
(g82
g63
NtRp4987
(dp4988
g66
(dp4989
g86
g87
ssg75
g4983
sg68
(lp4990
S'session_locked'
p4991
asbag61
(g82
g63
NtRp4992
(dp4993
g66
(dp4994
g93
g94
ssg75
g4983
sg68
(lp4995
S':'
asbag61
(g82
g63
NtRp4996
(dp4997
g66
(dp4998
sg75
g4983
sg68
(lp4999
g61
(g62
g63
NtRp5000
(dp5001
g66
(dp5002
g74
I5
ssg75
g4996
sg68
(lp5003
g1684
asbasbasbag61
(g77
g63
NtRp5004
(dp5005
g66
(dp5006
sg75
g3895
sg68
(lp5007
g61
(g82
g63
NtRp5008
(dp5009
g66
(dp5010
g86
g87
ssg75
g5004
sg68
(lp5011
S'session_new'
p5012
asbag61
(g82
g63
NtRp5013
(dp5014
g66
(dp5015
g93
g94
ssg75
g5004
sg68
(lp5016
S':'
asbag61
(g82
g63
NtRp5017
(dp5018
g66
(dp5019
sg75
g5004
sg68
(lp5020
g61
(g62
g63
NtRp5021
(dp5022
g66
(dp5023
g74
I5
ssg75
g5017
sg68
(lp5024
g104
asbasbasbag61
(g77
g63
NtRp5025
(dp5026
g66
(dp5027
sg75
g3895
sg68
(lp5028
g61
(g82
g63
NtRp5029
(dp5030
g66
(dp5031
g86
g87
ssg75
g5025
sg68
(lp5032
S'session_storage_type'
p5033
asbag61
(g82
g63
NtRp5034
(dp5035
g66
(dp5036
g93
g94
ssg75
g5025
sg68
(lp5037
S':'
asbag61
(g82
g63
NtRp5038
(dp5039
g66
(dp5040
sg75
g5025
sg68
(lp5041
g61
(g62
g63
NtRp5042
(dp5043
g66
(dp5044
g74
I5
ssg75
g5038
sg68
(lp5045
g3137
asbasbasbag61
(g77
g63
NtRp5046
(dp5047
g66
(dp5048
sg75
g3895
sg68
(lp5049
g61
(g82
g63
NtRp5050
(dp5051
g66
(dp5052
g86
g87
ssg75
g5046
sg68
(lp5053
S'status'
p5054
asbag61
(g82
g63
NtRp5055
(dp5056
g66
(dp5057
g93
g94
ssg75
g5046
sg68
(lp5058
S':'
asbag61
(g82
g63
NtRp5059
(dp5060
g66
(dp5061
sg75
g5046
sg68
(lp5062
g61
(g62
g63
NtRp5063
(dp5064
g66
(dp5065
g74
I5
ssg75
g5059
sg68
(lp5066
S'200'
p5067
asbasbasbag61
(g77
g63
NtRp5068
(dp5069
g66
(dp5070
sg75
g3895
sg68
(lp5071
g61
(g82
g63
NtRp5072
(dp5073
g66
(dp5074
g86
g87
ssg75
g5068
sg68
(lp5075
S'subtitle'
p5076
asbag61
(g82
g63
NtRp5077
(dp5078
g66
(dp5079
g93
g94
ssg75
g5068
sg68
(lp5080
S':'
asbag61
(g82
g63
NtRp5081
(dp5082
g66
(dp5083
sg75
g5068
sg68
(lp5084
g61
(g62
g63
NtRp5085
(dp5086
g66
(dp5087
g74
I5
ssg75
g5081
sg68
(lp5088
g4516
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5089
asbasbasbag61
(g77
g63
NtRp5090
(dp5091
g66
(dp5092
sg75
g3895
sg68
(lp5093
g61
(g82
g63
NtRp5094
(dp5095
g66
(dp5096
g86
g87
ssg75
g5090
sg68
(lp5097
g3761
asbag61
(g82
g63
NtRp5098
(dp5099
g66
(dp5100
g93
g94
ssg75
g5090
sg68
(lp5101
S':'
asbag61
(g82
g63
NtRp5102
(dp5103
g66
(dp5104
sg75
g5090
sg68
(lp5105
g61
(g62
g63
NtRp5106
(dp5107
g66
(dp5108
g74
I5
ssg75
g5102
sg68
(lp5109
g126
asbasbasbag61
(g77
g63
NtRp5110
(dp5111
g66
(dp5112
sg75
g3895
sg68
(lp5113
g61
(g82
g63
NtRp5114
(dp5115
g66
(dp5116
g86
g87
ssg75
g5110
sg68
(lp5117
S'view'
p5118
asbag61
(g82
g63
NtRp5119
(dp5120
g66
(dp5121
g93
g94
ssg75
g5110
sg68
(lp5122
S':'
asbag61
(g82
g63
NtRp5123
(dp5124
g66
(dp5125
sg75
g5110
sg68
(lp5126
g61
(g62
g63
NtRp5127
(dp5128
g66
(dp5129
g74
I5
ssg75
g5123
sg68
(lp5130
S'default/duplicate.html'
p5131
asbasbasbasbasbsS'locals'
p5132
(dp5133
S'query'
p5134
S'"INSERT INTO sample(publication_status,code,descr...UES (\'F\',\'32\',\'saf\',\'\',2,1,\'1\',\'replicate\',\'12\');"'
p5135
sS'self'
p5136
S'<gluon.dal.SQLiteAdapter object>'
p5137
sS'e'
S"IntegrityError('column name is not unique',)"
p5138
sS'fields'
p5139
S"[(<gluon.dal.Field object>, False), (<gluon.dal.Field object>, '32'), (<gluon.dal.Field object>, 'saf'), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 2), (<gluon.dal.Field object>, 1), (<gluon.dal.Field object>, '1'), (<gluon.dal.Field object>, 'replicate'), (<gluon.dal.Field object>, '12')]"
p5140
sS'table'
p5141
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p5142
sssS'traceback'
p5143
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1135, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 357, in duplicate\n    db.sample.insert(**db.sample._filter_fields(rec))\n  File "/home/anil/bootstrap/web2py/gluon/dal.py", line 7918, in insert\n    ret =  self._db._adapter.insert(self,self._listify(fields))\n  File "/home/anil/bootstrap/web2py/gluon/dal.py", line 1176, in insert\n    raise e\nIntegrityError: column name is not unique\n'
p5144
s.