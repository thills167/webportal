(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n#           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))) \\\n        ]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'id\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'id'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'3'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'2'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g67
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
g82
g83
ssg71
g210
sg64
(lp217
S'body'
p218
asbag57
(g78
g59
NtRp219
(dp220
g62
(dp221
g89
g90
ssg71
g210
sg64
(lp222
S':'
asbag57
(g78
g59
NtRp223
(dp224
g62
(dp225
sg71
g210
sg64
(lp226
g57
(g58
g59
NtRp227
(dp228
g62
(dp229
g70
I5
ssg71
g223
sg64
(lp230
S'<cStringIO.StringO object at 0xad793700>'
p231
asbasbasbag57
(g73
g59
NtRp232
(dp233
g62
(dp234
sg71
g67
sg64
(lp235
g57
(g78
g59
NtRp236
(dp237
g62
(dp238
g82
g83
ssg71
g232
sg64
(lp239
S'cid'
p240
asbag57
(g78
g59
NtRp241
(dp242
g62
(dp243
g89
g90
ssg71
g232
sg64
(lp244
S':'
asbag57
(g78
g59
NtRp245
(dp246
g62
(dp247
sg71
g232
sg64
(lp248
g57
(g58
g59
NtRp249
(dp250
g62
(dp251
g70
I5
ssg71
g245
sg64
(lp252
S'None'
p253
asbasbasbag57
(g73
g59
NtRp254
(dp255
g62
(dp256
sg71
g67
sg64
(lp257
g57
(g78
g59
NtRp258
(dp259
g62
(dp260
g82
g83
ssg71
g254
sg64
(lp261
S'client'
p262
asbag57
(g78
g59
NtRp263
(dp264
g62
(dp265
g89
g90
ssg71
g254
sg64
(lp266
S':'
asbag57
(g78
g59
NtRp267
(dp268
g62
(dp269
sg71
g254
sg64
(lp270
g57
(g58
g59
NtRp271
(dp272
g62
(dp273
g70
I5
ssg71
g267
sg64
(lp274
S'127.0.0.1'
p275
asbasbasbag57
(g73
g59
NtRp276
(dp277
g62
(dp278
sg71
g67
sg64
(lp279
g57
(g78
g59
NtRp280
(dp281
g62
(dp282
g82
g83
ssg71
g276
sg64
(lp283
S'controller'
p284
asbag57
(g78
g59
NtRp285
(dp286
g62
(dp287
g89
g90
ssg71
g276
sg64
(lp288
S':'
asbag57
(g78
g59
NtRp289
(dp290
g62
(dp291
sg71
g276
sg64
(lp292
g57
(g58
g59
NtRp293
(dp294
g62
(dp295
g70
I5
ssg71
g289
sg64
(lp296
S'default'
p297
asbasbasbag57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g67
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'cookies'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I5
ssg71
g311
sg64
(lp318
g57
(g66
g59
NtRp319
(dp320
g62
(dp321
g70
I4
ssg71
Nsg64
(lp322
g57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g319
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'session_id_admin'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I4
ssg71
g336
sg64
(lp343
S'127.0.0.1-3b0dba09-bdae-46c4-bcf0-1e7fbef14605'
p344
ag57
(g66
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
Nsg64
(lp348
g57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g345
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'comment'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g345
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'domain'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g345
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'expires'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g345
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'httponly'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g345
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'max-age'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g345
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'path'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g345
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'secure'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g345
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'version'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g319
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'session_id_dev_bootstrap_ch'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I4
ssg71
g530
sg64
(lp537
S'127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p538
ag57
(g66
g59
NtRp539
(dp540
g62
(dp541
g70
I3
ssg71
Nsg64
(lp542
g57
(g73
g59
NtRp543
(dp544
g62
(dp545
sg71
g539
sg64
(lp546
g57
(g78
g59
NtRp547
(dp548
g62
(dp549
g82
g83
ssg71
g543
sg64
(lp550
g357
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g543
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g543
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I3
ssg71
g555
sg64
(lp562
S''
asbasbasbag57
(g73
g59
NtRp563
(dp564
g62
(dp565
sg71
g539
sg64
(lp566
g57
(g78
g59
NtRp567
(dp568
g62
(dp569
g82
g83
ssg71
g563
sg64
(lp570
g378
asbag57
(g78
g59
NtRp571
(dp572
g62
(dp573
g89
g90
ssg71
g563
sg64
(lp574
S':'
asbag57
(g78
g59
NtRp575
(dp576
g62
(dp577
sg71
g563
sg64
(lp578
g57
(g58
g59
NtRp579
(dp580
g62
(dp581
g70
I3
ssg71
g575
sg64
(lp582
S''
asbasbasbag57
(g73
g59
NtRp583
(dp584
g62
(dp585
sg71
g539
sg64
(lp586
g57
(g78
g59
NtRp587
(dp588
g62
(dp589
g82
g83
ssg71
g583
sg64
(lp590
g399
asbag57
(g78
g59
NtRp591
(dp592
g62
(dp593
g89
g90
ssg71
g583
sg64
(lp594
S':'
asbag57
(g78
g59
NtRp595
(dp596
g62
(dp597
sg71
g583
sg64
(lp598
g57
(g58
g59
NtRp599
(dp600
g62
(dp601
g70
I3
ssg71
g595
sg64
(lp602
S''
asbasbasbag57
(g73
g59
NtRp603
(dp604
g62
(dp605
sg71
g539
sg64
(lp606
g57
(g78
g59
NtRp607
(dp608
g62
(dp609
g82
g83
ssg71
g603
sg64
(lp610
g420
asbag57
(g78
g59
NtRp611
(dp612
g62
(dp613
g89
g90
ssg71
g603
sg64
(lp614
S':'
asbag57
(g78
g59
NtRp615
(dp616
g62
(dp617
sg71
g603
sg64
(lp618
g57
(g58
g59
NtRp619
(dp620
g62
(dp621
g70
I3
ssg71
g615
sg64
(lp622
S''
asbasbasbag57
(g73
g59
NtRp623
(dp624
g62
(dp625
sg71
g539
sg64
(lp626
g57
(g78
g59
NtRp627
(dp628
g62
(dp629
g82
g83
ssg71
g623
sg64
(lp630
g441
asbag57
(g78
g59
NtRp631
(dp632
g62
(dp633
g89
g90
ssg71
g623
sg64
(lp634
S':'
asbag57
(g78
g59
NtRp635
(dp636
g62
(dp637
sg71
g623
sg64
(lp638
g57
(g58
g59
NtRp639
(dp640
g62
(dp641
g70
I3
ssg71
g635
sg64
(lp642
S''
asbasbasbag57
(g73
g59
NtRp643
(dp644
g62
(dp645
sg71
g539
sg64
(lp646
g57
(g78
g59
NtRp647
(dp648
g62
(dp649
g82
g83
ssg71
g643
sg64
(lp650
g462
asbag57
(g78
g59
NtRp651
(dp652
g62
(dp653
g89
g90
ssg71
g643
sg64
(lp654
S':'
asbag57
(g78
g59
NtRp655
(dp656
g62
(dp657
sg71
g643
sg64
(lp658
g57
(g58
g59
NtRp659
(dp660
g62
(dp661
g70
I3
ssg71
g655
sg64
(lp662
S''
asbasbasbag57
(g73
g59
NtRp663
(dp664
g62
(dp665
sg71
g539
sg64
(lp666
g57
(g78
g59
NtRp667
(dp668
g62
(dp669
g82
g83
ssg71
g663
sg64
(lp670
g483
asbag57
(g78
g59
NtRp671
(dp672
g62
(dp673
g89
g90
ssg71
g663
sg64
(lp674
S':'
asbag57
(g78
g59
NtRp675
(dp676
g62
(dp677
sg71
g663
sg64
(lp678
g57
(g58
g59
NtRp679
(dp680
g62
(dp681
g70
I3
ssg71
g675
sg64
(lp682
S''
asbasbasbag57
(g73
g59
NtRp683
(dp684
g62
(dp685
sg71
g539
sg64
(lp686
g57
(g78
g59
NtRp687
(dp688
g62
(dp689
g82
g83
ssg71
g683
sg64
(lp690
g504
asbag57
(g78
g59
NtRp691
(dp692
g62
(dp693
g89
g90
ssg71
g683
sg64
(lp694
S':'
asbag57
(g78
g59
NtRp695
(dp696
g62
(dp697
sg71
g683
sg64
(lp698
g57
(g58
g59
NtRp699
(dp700
g62
(dp701
g70
I3
ssg71
g695
sg64
(lp702
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp703
(dp704
g62
(dp705
sg71
g67
sg64
(lp706
g57
(g78
g59
NtRp707
(dp708
g62
(dp709
g82
g83
ssg71
g703
sg64
(lp710
S'env'
p711
asbag57
(g78
g59
NtRp712
(dp713
g62
(dp714
g89
g90
ssg71
g703
sg64
(lp715
S':'
asbag57
(g78
g59
NtRp716
(dp717
g62
(dp718
sg71
g703
sg64
(lp719
g57
(g58
g59
NtRp720
(dp721
g62
(dp722
g70
I5
ssg71
g716
sg64
(lp723
g57
(g66
g59
NtRp724
(dp725
g62
(dp726
g70
I4
ssg71
Nsg64
(lp727
g57
(g73
g59
NtRp728
(dp729
g62
(dp730
sg71
g724
sg64
(lp731
g57
(g78
g59
NtRp732
(dp733
g62
(dp734
g82
g83
ssg71
g728
sg64
(lp735
S'app_folders'
p736
asbag57
(g78
g59
NtRp737
(dp738
g62
(dp739
g89
g90
ssg71
g728
sg64
(lp740
S':'
asbag57
(g78
g59
NtRp741
(dp742
g62
(dp743
sg71
g728
sg64
(lp744
g57
(g58
g59
NtRp745
(dp746
g62
(dp747
g70
I4
ssg71
g741
sg64
(lp748
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p749
asbasbasbag57
(g73
g59
NtRp750
(dp751
g62
(dp752
sg71
g724
sg64
(lp753
g57
(g78
g59
NtRp754
(dp755
g62
(dp756
g82
g83
ssg71
g750
sg64
(lp757
S'applications_parent'
p758
asbag57
(g78
g59
NtRp759
(dp760
g62
(dp761
g89
g90
ssg71
g750
sg64
(lp762
S':'
asbag57
(g78
g59
NtRp763
(dp764
g62
(dp765
sg71
g750
sg64
(lp766
g57
(g58
g59
NtRp767
(dp768
g62
(dp769
g70
I4
ssg71
g763
sg64
(lp770
S'/home/anil/bootstrap/web2py'
p771
asbasbasbag57
(g73
g59
NtRp772
(dp773
g62
(dp774
sg71
g724
sg64
(lp775
g57
(g78
g59
NtRp776
(dp777
g62
(dp778
g82
g83
ssg71
g772
sg64
(lp779
S'cmd_args'
p780
asbag57
(g78
g59
NtRp781
(dp782
g62
(dp783
g89
g90
ssg71
g772
sg64
(lp784
S':'
asbag57
(g78
g59
NtRp785
(dp786
g62
(dp787
sg71
g772
sg64
(lp788
g57
(g58
g59
NtRp789
(dp790
g62
(dp791
g70
I4
ssg71
g785
sg64
(lp792
g57
(g66
g59
NtRp793
(dp794
g62
(dp795
g70
I3
ssg71
Nsg64
(lp796
sbasbasbasbag57
(g73
g59
NtRp797
(dp798
g62
(dp799
sg71
g724
sg64
(lp800
g57
(g78
g59
NtRp801
(dp802
g62
(dp803
g82
g83
ssg71
g797
sg64
(lp804
S'cmd_options'
p805
asbag57
(g78
g59
NtRp806
(dp807
g62
(dp808
g89
g90
ssg71
g797
sg64
(lp809
S':'
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
sg71
g797
sg64
(lp813
g57
(g58
g59
NtRp814
(dp815
g62
(dp816
g70
I4
ssg71
g810
sg64
(lp817
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p818
asbasbasbag57
(g73
g59
NtRp819
(dp820
g62
(dp821
sg71
g724
sg64
(lp822
g57
(g78
g59
NtRp823
(dp824
g62
(dp825
g82
g83
ssg71
g819
sg64
(lp826
S'db_sessions'
p827
asbag57
(g78
g59
NtRp828
(dp829
g62
(dp830
g89
g90
ssg71
g819
sg64
(lp831
S':'
asbag57
(g78
g59
NtRp832
(dp833
g62
(dp834
sg71
g819
sg64
(lp835
g57
(g58
g59
NtRp836
(dp837
g62
(dp838
g70
I4
ssg71
g832
sg64
(lp839
S'set([])'
p840
asbasbasbag57
(g73
g59
NtRp841
(dp842
g62
(dp843
sg71
g724
sg64
(lp844
g57
(g78
g59
NtRp845
(dp846
g62
(dp847
g82
g83
ssg71
g841
sg64
(lp848
S'debugging'
p849
asbag57
(g78
g59
NtRp850
(dp851
g62
(dp852
g89
g90
ssg71
g841
sg64
(lp853
S':'
asbag57
(g78
g59
NtRp854
(dp855
g62
(dp856
sg71
g841
sg64
(lp857
g57
(g58
g59
NtRp858
(dp859
g62
(dp860
g70
I4
ssg71
g854
sg64
(lp861
g100
asbasbasbag57
(g73
g59
NtRp862
(dp863
g62
(dp864
sg71
g724
sg64
(lp865
g57
(g78
g59
NtRp866
(dp867
g62
(dp868
g82
g83
ssg71
g862
sg64
(lp869
S'gluon_parent'
p870
asbag57
(g78
g59
NtRp871
(dp872
g62
(dp873
g89
g90
ssg71
g862
sg64
(lp874
S':'
asbag57
(g78
g59
NtRp875
(dp876
g62
(dp877
sg71
g862
sg64
(lp878
g57
(g58
g59
NtRp879
(dp880
g62
(dp881
g70
I4
ssg71
g875
sg64
(lp882
S'/home/anil/bootstrap/web2py'
p883
asbasbasbag57
(g73
g59
NtRp884
(dp885
g62
(dp886
sg71
g724
sg64
(lp887
g57
(g78
g59
NtRp888
(dp889
g62
(dp890
g82
g83
ssg71
g884
sg64
(lp891
S'http_accept'
p892
asbag57
(g78
g59
NtRp893
(dp894
g62
(dp895
g89
g90
ssg71
g884
sg64
(lp896
S':'
asbag57
(g78
g59
NtRp897
(dp898
g62
(dp899
sg71
g884
sg64
(lp900
g57
(g58
g59
NtRp901
(dp902
g62
(dp903
g70
I4
ssg71
g897
sg64
(lp904
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p905
asbasbasbag57
(g73
g59
NtRp906
(dp907
g62
(dp908
sg71
g724
sg64
(lp909
g57
(g78
g59
NtRp910
(dp911
g62
(dp912
g82
g83
ssg71
g906
sg64
(lp913
S'http_accept_charset'
p914
asbag57
(g78
g59
NtRp915
(dp916
g62
(dp917
g89
g90
ssg71
g906
sg64
(lp918
S':'
asbag57
(g78
g59
NtRp919
(dp920
g62
(dp921
sg71
g906
sg64
(lp922
g57
(g58
g59
NtRp923
(dp924
g62
(dp925
g70
I4
ssg71
g919
sg64
(lp926
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p927
asbasbasbag57
(g73
g59
NtRp928
(dp929
g62
(dp930
sg71
g724
sg64
(lp931
g57
(g78
g59
NtRp932
(dp933
g62
(dp934
g82
g83
ssg71
g928
sg64
(lp935
S'http_accept_encoding'
p936
asbag57
(g78
g59
NtRp937
(dp938
g62
(dp939
g89
g90
ssg71
g928
sg64
(lp940
S':'
asbag57
(g78
g59
NtRp941
(dp942
g62
(dp943
sg71
g928
sg64
(lp944
g57
(g58
g59
NtRp945
(dp946
g62
(dp947
g70
I4
ssg71
g941
sg64
(lp948
S'gzip,deflate,sdch'
p949
asbasbasbag57
(g73
g59
NtRp950
(dp951
g62
(dp952
sg71
g724
sg64
(lp953
g57
(g78
g59
NtRp954
(dp955
g62
(dp956
g82
g83
ssg71
g950
sg64
(lp957
S'http_accept_language'
p958
asbag57
(g78
g59
NtRp959
(dp960
g62
(dp961
g89
g90
ssg71
g950
sg64
(lp962
S':'
asbag57
(g78
g59
NtRp963
(dp964
g62
(dp965
sg71
g950
sg64
(lp966
g57
(g58
g59
NtRp967
(dp968
g62
(dp969
g70
I4
ssg71
g963
sg64
(lp970
S'en-US,en;q=0.8'
p971
asbasbasbag57
(g73
g59
NtRp972
(dp973
g62
(dp974
sg71
g724
sg64
(lp975
g57
(g78
g59
NtRp976
(dp977
g62
(dp978
g82
g83
ssg71
g972
sg64
(lp979
S'http_connection'
p980
asbag57
(g78
g59
NtRp981
(dp982
g62
(dp983
g89
g90
ssg71
g972
sg64
(lp984
S':'
asbag57
(g78
g59
NtRp985
(dp986
g62
(dp987
sg71
g972
sg64
(lp988
g57
(g58
g59
NtRp989
(dp990
g62
(dp991
g70
I4
ssg71
g985
sg64
(lp992
S'keep-alive'
p993
asbasbasbag57
(g73
g59
NtRp994
(dp995
g62
(dp996
sg71
g724
sg64
(lp997
g57
(g78
g59
NtRp998
(dp999
g62
(dp1000
g82
g83
ssg71
g994
sg64
(lp1001
S'http_cookie'
p1002
asbag57
(g78
g59
NtRp1003
(dp1004
g62
(dp1005
g89
g90
ssg71
g994
sg64
(lp1006
S':'
asbag57
(g78
g59
NtRp1007
(dp1008
g62
(dp1009
sg71
g994
sg64
(lp1010
g57
(g58
g59
NtRp1011
(dp1012
g62
(dp1013
g70
I4
ssg71
g1007
sg64
(lp1014
S'session_id_dev_bootstrap_ch=127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c; session_id_admin=127.0.0.1-3b0dba09-bdae-46c4-bcf0-1e7fbef14605'
p1015
asbasbasbag57
(g73
g59
NtRp1016
(dp1017
g62
(dp1018
sg71
g724
sg64
(lp1019
g57
(g78
g59
NtRp1020
(dp1021
g62
(dp1022
g82
g83
ssg71
g1016
sg64
(lp1023
S'http_host'
p1024
asbag57
(g78
g59
NtRp1025
(dp1026
g62
(dp1027
g89
g90
ssg71
g1016
sg64
(lp1028
S':'
asbag57
(g78
g59
NtRp1029
(dp1030
g62
(dp1031
sg71
g1016
sg64
(lp1032
g57
(g58
g59
NtRp1033
(dp1034
g62
(dp1035
g70
I4
ssg71
g1029
sg64
(lp1036
S'127.0.0.1:8000'
p1037
asbasbasbag57
(g73
g59
NtRp1038
(dp1039
g62
(dp1040
sg71
g724
sg64
(lp1041
g57
(g78
g59
NtRp1042
(dp1043
g62
(dp1044
g82
g83
ssg71
g1038
sg64
(lp1045
S'http_referer'
p1046
asbag57
(g78
g59
NtRp1047
(dp1048
g62
(dp1049
g89
g90
ssg71
g1038
sg64
(lp1050
S':'
asbag57
(g78
g59
NtRp1051
(dp1052
g62
(dp1053
sg71
g1038
sg64
(lp1054
g57
(g58
g59
NtRp1055
(dp1056
g62
(dp1057
g70
I4
ssg71
g1051
sg64
(lp1058
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3'
p1059
asbasbasbag57
(g73
g59
NtRp1060
(dp1061
g62
(dp1062
sg71
g724
sg64
(lp1063
g57
(g78
g59
NtRp1064
(dp1065
g62
(dp1066
g82
g83
ssg71
g1060
sg64
(lp1067
S'http_user_agent'
p1068
asbag57
(g78
g59
NtRp1069
(dp1070
g62
(dp1071
g89
g90
ssg71
g1060
sg64
(lp1072
S':'
asbag57
(g78
g59
NtRp1073
(dp1074
g62
(dp1075
sg71
g1060
sg64
(lp1076
g57
(g58
g59
NtRp1077
(dp1078
g62
(dp1079
g70
I4
ssg71
g1073
sg64
(lp1080
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1081
asbasbasbag57
(g73
g59
NtRp1082
(dp1083
g62
(dp1084
sg71
g724
sg64
(lp1085
g57
(g78
g59
NtRp1086
(dp1087
g62
(dp1088
g82
g83
ssg71
g1082
sg64
(lp1089
S'is_jython'
p1090
asbag57
(g78
g59
NtRp1091
(dp1092
g62
(dp1093
g89
g90
ssg71
g1082
sg64
(lp1094
S':'
asbag57
(g78
g59
NtRp1095
(dp1096
g62
(dp1097
sg71
g1082
sg64
(lp1098
g57
(g58
g59
NtRp1099
(dp1100
g62
(dp1101
g70
I4
ssg71
g1095
sg64
(lp1102
g100
asbasbasbag57
(g73
g59
NtRp1103
(dp1104
g62
(dp1105
sg71
g724
sg64
(lp1106
g57
(g78
g59
NtRp1107
(dp1108
g62
(dp1109
g82
g83
ssg71
g1103
sg64
(lp1110
S'is_pypy'
p1111
asbag57
(g78
g59
NtRp1112
(dp1113
g62
(dp1114
g89
g90
ssg71
g1103
sg64
(lp1115
S':'
asbag57
(g78
g59
NtRp1116
(dp1117
g62
(dp1118
sg71
g1103
sg64
(lp1119
g57
(g58
g59
NtRp1120
(dp1121
g62
(dp1122
g70
I4
ssg71
g1116
sg64
(lp1123
g100
asbasbasbag57
(g73
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g724
sg64
(lp1127
g57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
g82
g83
ssg71
g1124
sg64
(lp1131
S'local_hosts'
p1132
asbag57
(g78
g59
NtRp1133
(dp1134
g62
(dp1135
g89
g90
ssg71
g1124
sg64
(lp1136
S':'
asbag57
(g78
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1124
sg64
(lp1140
g57
(g58
g59
NtRp1141
(dp1142
g62
(dp1143
g70
I4
ssg71
g1137
sg64
(lp1144
g57
(g66
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I3
ssg71
Nsg64
(lp1148
g57
(g73
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1145
sg64
(lp1152
g57
(g78
g59
NtRp1153
(dp1154
g62
(dp1155
sg71
g1149
sg64
(lp1156
g57
(g58
g59
NtRp1157
(dp1158
g62
(dp1159
g70
I3
ssg71
g1153
sg64
(lp1160
S'::1'
p1161
asbasbasbag57
(g73
g59
NtRp1162
(dp1163
g62
(dp1164
sg71
g1145
sg64
(lp1165
g57
(g78
g59
NtRp1166
(dp1167
g62
(dp1168
sg71
g1162
sg64
(lp1169
g57
(g58
g59
NtRp1170
(dp1171
g62
(dp1172
g70
I3
ssg71
g1166
sg64
(lp1173
S'127.0.1.1'
p1174
asbasbasbag57
(g73
g59
NtRp1175
(dp1176
g62
(dp1177
sg71
g1145
sg64
(lp1178
g57
(g78
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g1175
sg64
(lp1182
g57
(g58
g59
NtRp1183
(dp1184
g62
(dp1185
g70
I3
ssg71
g1179
sg64
(lp1186
S'::ffff:127.0.0.1'
p1187
asbasbasbag57
(g73
g59
NtRp1188
(dp1189
g62
(dp1190
sg71
g1145
sg64
(lp1191
g57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1188
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I3
ssg71
g1192
sg64
(lp1199
S'127.0.0.1'
p1200
asbasbasbag57
(g73
g59
NtRp1201
(dp1202
g62
(dp1203
sg71
g1145
sg64
(lp1204
g57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
sg71
g1201
sg64
(lp1208
g57
(g58
g59
NtRp1209
(dp1210
g62
(dp1211
g70
I3
ssg71
g1205
sg64
(lp1212
S'anil-Inspiron-1525'
p1213
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1214
(dp1215
g62
(dp1216
sg71
g724
sg64
(lp1217
g57
(g78
g59
NtRp1218
(dp1219
g62
(dp1220
g82
g83
ssg71
g1214
sg64
(lp1221
S'path_info'
p1222
asbag57
(g78
g59
NtRp1223
(dp1224
g62
(dp1225
g89
g90
ssg71
g1214
sg64
(lp1226
S':'
asbag57
(g78
g59
NtRp1227
(dp1228
g62
(dp1229
sg71
g1214
sg64
(lp1230
g57
(g58
g59
NtRp1231
(dp1232
g62
(dp1233
g70
I4
ssg71
g1227
sg64
(lp1234
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3/sample.experiment/2'
p1235
asbasbasbag57
(g73
g59
NtRp1236
(dp1237
g62
(dp1238
sg71
g724
sg64
(lp1239
g57
(g78
g59
NtRp1240
(dp1241
g62
(dp1242
g82
g83
ssg71
g1236
sg64
(lp1243
S'query_string'
p1244
asbag57
(g78
g59
NtRp1245
(dp1246
g62
(dp1247
g89
g90
ssg71
g1236
sg64
(lp1248
S':'
asbag57
(g78
g59
NtRp1249
(dp1250
g62
(dp1251
sg71
g1236
sg64
(lp1252
g57
(g58
g59
NtRp1253
(dp1254
g62
(dp1255
g70
I4
ssg71
g1249
sg64
(lp1256
S'_signature=a9459577c015179aefc5482d1b8a4833cc765d43'
p1257
asbasbasbag57
(g73
g59
NtRp1258
(dp1259
g62
(dp1260
sg71
g724
sg64
(lp1261
g57
(g78
g59
NtRp1262
(dp1263
g62
(dp1264
g82
g83
ssg71
g1258
sg64
(lp1265
S'remote_addr'
p1266
asbag57
(g78
g59
NtRp1267
(dp1268
g62
(dp1269
g89
g90
ssg71
g1258
sg64
(lp1270
S':'
asbag57
(g78
g59
NtRp1271
(dp1272
g62
(dp1273
sg71
g1258
sg64
(lp1274
g57
(g58
g59
NtRp1275
(dp1276
g62
(dp1277
g70
I4
ssg71
g1271
sg64
(lp1278
g275
asbasbasbag57
(g73
g59
NtRp1279
(dp1280
g62
(dp1281
sg71
g724
sg64
(lp1282
g57
(g78
g59
NtRp1283
(dp1284
g62
(dp1285
g82
g83
ssg71
g1279
sg64
(lp1286
S'remote_port'
p1287
asbag57
(g78
g59
NtRp1288
(dp1289
g62
(dp1290
g89
g90
ssg71
g1279
sg64
(lp1291
S':'
asbag57
(g78
g59
NtRp1292
(dp1293
g62
(dp1294
sg71
g1279
sg64
(lp1295
g57
(g58
g59
NtRp1296
(dp1297
g62
(dp1298
g70
I4
ssg71
g1292
sg64
(lp1299
S'37952'
p1300
asbasbasbag57
(g73
g59
NtRp1301
(dp1302
g62
(dp1303
sg71
g724
sg64
(lp1304
g57
(g78
g59
NtRp1305
(dp1306
g62
(dp1307
g82
g83
ssg71
g1301
sg64
(lp1308
S'request_method'
p1309
asbag57
(g78
g59
NtRp1310
(dp1311
g62
(dp1312
g89
g90
ssg71
g1301
sg64
(lp1313
S':'
asbag57
(g78
g59
NtRp1314
(dp1315
g62
(dp1316
sg71
g1301
sg64
(lp1317
g57
(g58
g59
NtRp1318
(dp1319
g62
(dp1320
g70
I4
ssg71
g1314
sg64
(lp1321
S'GET'
p1322
asbasbasbag57
(g73
g59
NtRp1323
(dp1324
g62
(dp1325
sg71
g724
sg64
(lp1326
g57
(g78
g59
NtRp1327
(dp1328
g62
(dp1329
g82
g83
ssg71
g1323
sg64
(lp1330
S'request_uri'
p1331
asbag57
(g78
g59
NtRp1332
(dp1333
g62
(dp1334
g89
g90
ssg71
g1323
sg64
(lp1335
S':'
asbag57
(g78
g59
NtRp1336
(dp1337
g62
(dp1338
sg71
g1323
sg64
(lp1339
g57
(g58
g59
NtRp1340
(dp1341
g62
(dp1342
g70
I4
ssg71
g1336
sg64
(lp1343
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3/sample.experiment/2?_signature=a9459577c015179aefc5482d1b8a4833cc765d43'
p1344
asbasbasbag57
(g73
g59
NtRp1345
(dp1346
g62
(dp1347
sg71
g724
sg64
(lp1348
g57
(g78
g59
NtRp1349
(dp1350
g62
(dp1351
g82
g83
ssg71
g1345
sg64
(lp1352
S'script_name'
p1353
asbag57
(g78
g59
NtRp1354
(dp1355
g62
(dp1356
g89
g90
ssg71
g1345
sg64
(lp1357
S':'
asbag57
(g78
g59
NtRp1358
(dp1359
g62
(dp1360
sg71
g1345
sg64
(lp1361
g57
(g58
g59
NtRp1362
(dp1363
g62
(dp1364
g70
I4
ssg71
g1358
sg64
(lp1365
S''
asbasbasbag57
(g73
g59
NtRp1366
(dp1367
g62
(dp1368
sg71
g724
sg64
(lp1369
g57
(g78
g59
NtRp1370
(dp1371
g62
(dp1372
g82
g83
ssg71
g1366
sg64
(lp1373
S'server_name'
p1374
asbag57
(g78
g59
NtRp1375
(dp1376
g62
(dp1377
g89
g90
ssg71
g1366
sg64
(lp1378
S':'
asbag57
(g78
g59
NtRp1379
(dp1380
g62
(dp1381
sg71
g1366
sg64
(lp1382
g57
(g58
g59
NtRp1383
(dp1384
g62
(dp1385
g70
I4
ssg71
g1379
sg64
(lp1386
S'anil-Inspiron-1525'
p1387
asbasbasbag57
(g73
g59
NtRp1388
(dp1389
g62
(dp1390
sg71
g724
sg64
(lp1391
g57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
g82
g83
ssg71
g1388
sg64
(lp1395
S'server_port'
p1396
asbag57
(g78
g59
NtRp1397
(dp1398
g62
(dp1399
g89
g90
ssg71
g1388
sg64
(lp1400
S':'
asbag57
(g78
g59
NtRp1401
(dp1402
g62
(dp1403
sg71
g1388
sg64
(lp1404
g57
(g58
g59
NtRp1405
(dp1406
g62
(dp1407
g70
I4
ssg71
g1401
sg64
(lp1408
S'8000'
p1409
asbasbasbag57
(g73
g59
NtRp1410
(dp1411
g62
(dp1412
sg71
g724
sg64
(lp1413
g57
(g78
g59
NtRp1414
(dp1415
g62
(dp1416
g82
g83
ssg71
g1410
sg64
(lp1417
S'server_protocol'
p1418
asbag57
(g78
g59
NtRp1419
(dp1420
g62
(dp1421
g89
g90
ssg71
g1410
sg64
(lp1422
S':'
asbag57
(g78
g59
NtRp1423
(dp1424
g62
(dp1425
sg71
g1410
sg64
(lp1426
g57
(g58
g59
NtRp1427
(dp1428
g62
(dp1429
g70
I4
ssg71
g1423
sg64
(lp1430
S'HTTP/1.1'
p1431
asbasbasbag57
(g73
g59
NtRp1432
(dp1433
g62
(dp1434
sg71
g724
sg64
(lp1435
g57
(g78
g59
NtRp1436
(dp1437
g62
(dp1438
g82
g83
ssg71
g1432
sg64
(lp1439
S'server_software'
p1440
asbag57
(g78
g59
NtRp1441
(dp1442
g62
(dp1443
g89
g90
ssg71
g1432
sg64
(lp1444
S':'
asbag57
(g78
g59
NtRp1445
(dp1446
g62
(dp1447
sg71
g1432
sg64
(lp1448
g57
(g58
g59
NtRp1449
(dp1450
g62
(dp1451
g70
I4
ssg71
g1445
sg64
(lp1452
S'Rocket 1.2.6'
p1453
asbasbasbag57
(g73
g59
NtRp1454
(dp1455
g62
(dp1456
sg71
g724
sg64
(lp1457
g57
(g78
g59
NtRp1458
(dp1459
g62
(dp1460
g82
g83
ssg71
g1454
sg64
(lp1461
S'web2py_path'
p1462
asbag57
(g78
g59
NtRp1463
(dp1464
g62
(dp1465
g89
g90
ssg71
g1454
sg64
(lp1466
S':'
asbag57
(g78
g59
NtRp1467
(dp1468
g62
(dp1469
sg71
g1454
sg64
(lp1470
g57
(g58
g59
NtRp1471
(dp1472
g62
(dp1473
g70
I4
ssg71
g1467
sg64
(lp1474
g771
asbasbasbag57
(g73
g59
NtRp1475
(dp1476
g62
(dp1477
sg71
g724
sg64
(lp1478
g57
(g78
g59
NtRp1479
(dp1480
g62
(dp1481
g82
g83
ssg71
g1475
sg64
(lp1482
S'web2py_version'
p1483
asbag57
(g78
g59
NtRp1484
(dp1485
g62
(dp1486
g89
g90
ssg71
g1475
sg64
(lp1487
S':'
asbag57
(g78
g59
NtRp1488
(dp1489
g62
(dp1490
sg71
g1475
sg64
(lp1491
g57
(g58
g59
NtRp1492
(dp1493
g62
(dp1494
g70
I4
ssg71
g1488
sg64
(lp1495
g57
(g66
g59
NtRp1496
(dp1497
g62
(dp1498
g70
I3
ssg71
Nsg64
(lp1499
g57
(g73
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1496
sg64
(lp1503
g57
(g78
g59
NtRp1504
(dp1505
g62
(dp1506
sg71
g1500
sg64
(lp1507
g57
(g58
g59
NtRp1508
(dp1509
g62
(dp1510
g70
I3
ssg71
g1504
sg64
(lp1511
S'2'
asbasbasbag57
(g73
g59
NtRp1512
(dp1513
g62
(dp1514
sg71
g1496
sg64
(lp1515
g57
(g78
g59
NtRp1516
(dp1517
g62
(dp1518
sg71
g1512
sg64
(lp1519
g57
(g58
g59
NtRp1520
(dp1521
g62
(dp1522
g70
I3
ssg71
g1516
sg64
(lp1523
S'3'
asbasbasbag57
(g73
g59
NtRp1524
(dp1525
g62
(dp1526
sg71
g1496
sg64
(lp1527
g57
(g78
g59
NtRp1528
(dp1529
g62
(dp1530
sg71
g1524
sg64
(lp1531
g57
(g58
g59
NtRp1532
(dp1533
g62
(dp1534
g70
I3
ssg71
g1528
sg64
(lp1535
S'2'
asbasbasbag57
(g73
g59
NtRp1536
(dp1537
g62
(dp1538
sg71
g1496
sg64
(lp1539
g57
(g78
g59
NtRp1540
(dp1541
g62
(dp1542
sg71
g1536
sg64
(lp1543
g57
(g58
g59
NtRp1544
(dp1545
g62
(dp1546
g70
I3
ssg71
g1540
sg64
(lp1547
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1548
asbasbasbag57
(g73
g59
NtRp1549
(dp1550
g62
(dp1551
sg71
g1496
sg64
(lp1552
g57
(g78
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g1549
sg64
(lp1556
g57
(g58
g59
NtRp1557
(dp1558
g62
(dp1559
g70
I3
ssg71
g1553
sg64
(lp1560
S'stable'
p1561
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1562
(dp1563
g62
(dp1564
sg71
g724
sg64
(lp1565
g57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
g82
g83
ssg71
g1562
sg64
(lp1569
S'wsgi_errors'
p1570
asbag57
(g78
g59
NtRp1571
(dp1572
g62
(dp1573
g89
g90
ssg71
g1562
sg64
(lp1574
S':'
asbag57
(g78
g59
NtRp1575
(dp1576
g62
(dp1577
sg71
g1562
sg64
(lp1578
g57
(g58
g59
NtRp1579
(dp1580
g62
(dp1581
g70
I4
ssg71
g1575
sg64
(lp1582
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p1583
asbasbasbag57
(g73
g59
NtRp1584
(dp1585
g62
(dp1586
sg71
g724
sg64
(lp1587
g57
(g78
g59
NtRp1588
(dp1589
g62
(dp1590
g82
g83
ssg71
g1584
sg64
(lp1591
S'wsgi_file_wrapper'
p1592
asbag57
(g78
g59
NtRp1593
(dp1594
g62
(dp1595
g89
g90
ssg71
g1584
sg64
(lp1596
S':'
asbag57
(g78
g59
NtRp1597
(dp1598
g62
(dp1599
sg71
g1584
sg64
(lp1600
g57
(g58
g59
NtRp1601
(dp1602
g62
(dp1603
g70
I4
ssg71
g1597
sg64
(lp1604
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p1605
asbasbasbag57
(g73
g59
NtRp1606
(dp1607
g62
(dp1608
sg71
g724
sg64
(lp1609
g57
(g78
g59
NtRp1610
(dp1611
g62
(dp1612
g82
g83
ssg71
g1606
sg64
(lp1613
S'wsgi_input'
p1614
asbag57
(g78
g59
NtRp1615
(dp1616
g62
(dp1617
g89
g90
ssg71
g1606
sg64
(lp1618
S':'
asbag57
(g78
g59
NtRp1619
(dp1620
g62
(dp1621
sg71
g1606
sg64
(lp1622
g57
(g58
g59
NtRp1623
(dp1624
g62
(dp1625
g70
I4
ssg71
g1619
sg64
(lp1626
S'<socket._fileobject object at 0xad7b4aec>'
p1627
asbasbasbag57
(g73
g59
NtRp1628
(dp1629
g62
(dp1630
sg71
g724
sg64
(lp1631
g57
(g78
g59
NtRp1632
(dp1633
g62
(dp1634
g82
g83
ssg71
g1628
sg64
(lp1635
S'wsgi_multiprocess'
p1636
asbag57
(g78
g59
NtRp1637
(dp1638
g62
(dp1639
g89
g90
ssg71
g1628
sg64
(lp1640
S':'
asbag57
(g78
g59
NtRp1641
(dp1642
g62
(dp1643
sg71
g1628
sg64
(lp1644
g57
(g58
g59
NtRp1645
(dp1646
g62
(dp1647
g70
I4
ssg71
g1641
sg64
(lp1648
g100
asbasbasbag57
(g73
g59
NtRp1649
(dp1650
g62
(dp1651
sg71
g724
sg64
(lp1652
g57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
g82
g83
ssg71
g1649
sg64
(lp1656
S'wsgi_multithread'
p1657
asbag57
(g78
g59
NtRp1658
(dp1659
g62
(dp1660
g89
g90
ssg71
g1649
sg64
(lp1661
S':'
asbag57
(g78
g59
NtRp1662
(dp1663
g62
(dp1664
sg71
g1649
sg64
(lp1665
g57
(g58
g59
NtRp1666
(dp1667
g62
(dp1668
g70
I4
ssg71
g1662
sg64
(lp1669
S'True'
p1670
asbasbasbag57
(g73
g59
NtRp1671
(dp1672
g62
(dp1673
sg71
g724
sg64
(lp1674
g57
(g78
g59
NtRp1675
(dp1676
g62
(dp1677
g82
g83
ssg71
g1671
sg64
(lp1678
S'wsgi_run_once'
p1679
asbag57
(g78
g59
NtRp1680
(dp1681
g62
(dp1682
g89
g90
ssg71
g1671
sg64
(lp1683
S':'
asbag57
(g78
g59
NtRp1684
(dp1685
g62
(dp1686
sg71
g1671
sg64
(lp1687
g57
(g58
g59
NtRp1688
(dp1689
g62
(dp1690
g70
I4
ssg71
g1684
sg64
(lp1691
g100
asbasbasbag57
(g73
g59
NtRp1692
(dp1693
g62
(dp1694
sg71
g724
sg64
(lp1695
g57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
g82
g83
ssg71
g1692
sg64
(lp1699
S'wsgi_url_scheme'
p1700
asbag57
(g78
g59
NtRp1701
(dp1702
g62
(dp1703
g89
g90
ssg71
g1692
sg64
(lp1704
S':'
asbag57
(g78
g59
NtRp1705
(dp1706
g62
(dp1707
sg71
g1692
sg64
(lp1708
g57
(g58
g59
NtRp1709
(dp1710
g62
(dp1711
g70
I4
ssg71
g1705
sg64
(lp1712
S'http'
p1713
asbasbasbag57
(g73
g59
NtRp1714
(dp1715
g62
(dp1716
sg71
g724
sg64
(lp1717
g57
(g78
g59
NtRp1718
(dp1719
g62
(dp1720
g82
g83
ssg71
g1714
sg64
(lp1721
S'wsgi_version'
p1722
asbag57
(g78
g59
NtRp1723
(dp1724
g62
(dp1725
g89
g90
ssg71
g1714
sg64
(lp1726
S':'
asbag57
(g78
g59
NtRp1727
(dp1728
g62
(dp1729
sg71
g1714
sg64
(lp1730
g57
(g58
g59
NtRp1731
(dp1732
g62
(dp1733
g70
I4
ssg71
g1727
sg64
(lp1734
g57
(g66
g59
NtRp1735
(dp1736
g62
(dp1737
g70
I3
ssg71
Nsg64
(lp1738
g57
(g73
g59
NtRp1739
(dp1740
g62
(dp1741
sg71
g1735
sg64
(lp1742
g57
(g78
g59
NtRp1743
(dp1744
g62
(dp1745
sg71
g1739
sg64
(lp1746
g57
(g58
g59
NtRp1747
(dp1748
g62
(dp1749
g70
I3
ssg71
g1743
sg64
(lp1750
S'1'
asbasbasbag57
(g73
g59
NtRp1751
(dp1752
g62
(dp1753
sg71
g1735
sg64
(lp1754
g57
(g78
g59
NtRp1755
(dp1756
g62
(dp1757
sg71
g1751
sg64
(lp1758
g57
(g58
g59
NtRp1759
(dp1760
g62
(dp1761
g70
I3
ssg71
g1755
sg64
(lp1762
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1763
(dp1764
g62
(dp1765
sg71
g67
sg64
(lp1766
g57
(g78
g59
NtRp1767
(dp1768
g62
(dp1769
g82
g83
ssg71
g1763
sg64
(lp1770
S'extension'
p1771
asbag57
(g78
g59
NtRp1772
(dp1773
g62
(dp1774
g89
g90
ssg71
g1763
sg64
(lp1775
S':'
asbag57
(g78
g59
NtRp1776
(dp1777
g62
(dp1778
sg71
g1763
sg64
(lp1779
g57
(g58
g59
NtRp1780
(dp1781
g62
(dp1782
g70
I5
ssg71
g1776
sg64
(lp1783
S'html'
p1784
asbasbasbag57
(g73
g59
NtRp1785
(dp1786
g62
(dp1787
sg71
g67
sg64
(lp1788
g57
(g78
g59
NtRp1789
(dp1790
g62
(dp1791
g82
g83
ssg71
g1785
sg64
(lp1792
S'folder'
p1793
asbag57
(g78
g59
NtRp1794
(dp1795
g62
(dp1796
g89
g90
ssg71
g1785
sg64
(lp1797
S':'
asbag57
(g78
g59
NtRp1798
(dp1799
g62
(dp1800
sg71
g1785
sg64
(lp1801
g57
(g58
g59
NtRp1802
(dp1803
g62
(dp1804
g70
I5
ssg71
g1798
sg64
(lp1805
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1806
asbasbasbag57
(g73
g59
NtRp1807
(dp1808
g62
(dp1809
sg71
g67
sg64
(lp1810
g57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
g82
g83
ssg71
g1807
sg64
(lp1814
S'function'
p1815
asbag57
(g78
g59
NtRp1816
(dp1817
g62
(dp1818
g89
g90
ssg71
g1807
sg64
(lp1819
S':'
asbag57
(g78
g59
NtRp1820
(dp1821
g62
(dp1822
sg71
g1807
sg64
(lp1823
g57
(g58
g59
NtRp1824
(dp1825
g62
(dp1826
g70
I5
ssg71
g1820
sg64
(lp1827
S'list_all_dev_projects'
p1828
asbasbasbag57
(g73
g59
NtRp1829
(dp1830
g62
(dp1831
sg71
g67
sg64
(lp1832
g57
(g78
g59
NtRp1833
(dp1834
g62
(dp1835
g82
g83
ssg71
g1829
sg64
(lp1836
S'get_vars'
p1837
asbag57
(g78
g59
NtRp1838
(dp1839
g62
(dp1840
g89
g90
ssg71
g1829
sg64
(lp1841
S':'
asbag57
(g78
g59
NtRp1842
(dp1843
g62
(dp1844
sg71
g1829
sg64
(lp1845
g57
(g58
g59
NtRp1846
(dp1847
g62
(dp1848
g70
I5
ssg71
g1842
sg64
(lp1849
g57
(g66
g59
NtRp1850
(dp1851
g62
(dp1852
g70
I4
ssg71
Nsg64
(lp1853
sbasbasbasbag57
(g73
g59
NtRp1854
(dp1855
g62
(dp1856
sg71
g67
sg64
(lp1857
g57
(g78
g59
NtRp1858
(dp1859
g62
(dp1860
g82
g83
ssg71
g1854
sg64
(lp1861
S'global_settings'
p1862
asbag57
(g78
g59
NtRp1863
(dp1864
g62
(dp1865
g89
g90
ssg71
g1854
sg64
(lp1866
S':'
asbag57
(g78
g59
NtRp1867
(dp1868
g62
(dp1869
sg71
g1854
sg64
(lp1870
g57
(g58
g59
NtRp1871
(dp1872
g62
(dp1873
g70
I5
ssg71
g1867
sg64
(lp1874
g57
(g66
g59
NtRp1875
(dp1876
g62
(dp1877
g70
I4
ssg71
Nsg64
(lp1878
g57
(g73
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g1875
sg64
(lp1882
g57
(g78
g59
NtRp1883
(dp1884
g62
(dp1885
g82
g83
ssg71
g1879
sg64
(lp1886
g736
asbag57
(g78
g59
NtRp1887
(dp1888
g62
(dp1889
g89
g90
ssg71
g1879
sg64
(lp1890
S':'
asbag57
(g78
g59
NtRp1891
(dp1892
g62
(dp1893
sg71
g1879
sg64
(lp1894
g57
(g58
g59
NtRp1895
(dp1896
g62
(dp1897
g70
I4
ssg71
g1891
sg64
(lp1898
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1899
asbasbasbag57
(g73
g59
NtRp1900
(dp1901
g62
(dp1902
sg71
g1875
sg64
(lp1903
g57
(g78
g59
NtRp1904
(dp1905
g62
(dp1906
g82
g83
ssg71
g1900
sg64
(lp1907
g758
asbag57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
g89
g90
ssg71
g1900
sg64
(lp1911
S':'
asbag57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
sg71
g1900
sg64
(lp1915
g57
(g58
g59
NtRp1916
(dp1917
g62
(dp1918
g70
I4
ssg71
g1912
sg64
(lp1919
g771
asbasbasbag57
(g73
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1875
sg64
(lp1923
g57
(g78
g59
NtRp1924
(dp1925
g62
(dp1926
g82
g83
ssg71
g1920
sg64
(lp1927
g780
asbag57
(g78
g59
NtRp1928
(dp1929
g62
(dp1930
g89
g90
ssg71
g1920
sg64
(lp1931
S':'
asbag57
(g78
g59
NtRp1932
(dp1933
g62
(dp1934
sg71
g1920
sg64
(lp1935
g57
(g58
g59
NtRp1936
(dp1937
g62
(dp1938
g70
I4
ssg71
g1932
sg64
(lp1939
g57
(g66
g59
NtRp1940
(dp1941
g62
(dp1942
g70
I3
ssg71
Nsg64
(lp1943
sbasbasbasbag57
(g73
g59
NtRp1944
(dp1945
g62
(dp1946
sg71
g1875
sg64
(lp1947
g57
(g78
g59
NtRp1948
(dp1949
g62
(dp1950
g82
g83
ssg71
g1944
sg64
(lp1951
g805
asbag57
(g78
g59
NtRp1952
(dp1953
g62
(dp1954
g89
g90
ssg71
g1944
sg64
(lp1955
S':'
asbag57
(g78
g59
NtRp1956
(dp1957
g62
(dp1958
sg71
g1944
sg64
(lp1959
g57
(g58
g59
NtRp1960
(dp1961
g62
(dp1962
g70
I4
ssg71
g1956
sg64
(lp1963
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1964
asbasbasbag57
(g73
g59
NtRp1965
(dp1966
g62
(dp1967
sg71
g1875
sg64
(lp1968
g57
(g78
g59
NtRp1969
(dp1970
g62
(dp1971
g82
g83
ssg71
g1965
sg64
(lp1972
g827
asbag57
(g78
g59
NtRp1973
(dp1974
g62
(dp1975
g89
g90
ssg71
g1965
sg64
(lp1976
S':'
asbag57
(g78
g59
NtRp1977
(dp1978
g62
(dp1979
sg71
g1965
sg64
(lp1980
g57
(g58
g59
NtRp1981
(dp1982
g62
(dp1983
g70
I4
ssg71
g1977
sg64
(lp1984
S'set([])'
p1985
asbasbasbag57
(g73
g59
NtRp1986
(dp1987
g62
(dp1988
sg71
g1875
sg64
(lp1989
g57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
g82
g83
ssg71
g1986
sg64
(lp1993
g849
asbag57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
g89
g90
ssg71
g1986
sg64
(lp1997
S':'
asbag57
(g78
g59
NtRp1998
(dp1999
g62
(dp2000
sg71
g1986
sg64
(lp2001
g57
(g58
g59
NtRp2002
(dp2003
g62
(dp2004
g70
I4
ssg71
g1998
sg64
(lp2005
g100
asbasbasbag57
(g73
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1875
sg64
(lp2009
g57
(g78
g59
NtRp2010
(dp2011
g62
(dp2012
g82
g83
ssg71
g2006
sg64
(lp2013
g870
asbag57
(g78
g59
NtRp2014
(dp2015
g62
(dp2016
g89
g90
ssg71
g2006
sg64
(lp2017
S':'
asbag57
(g78
g59
NtRp2018
(dp2019
g62
(dp2020
sg71
g2006
sg64
(lp2021
g57
(g58
g59
NtRp2022
(dp2023
g62
(dp2024
g70
I4
ssg71
g2018
sg64
(lp2025
g883
asbasbasbag57
(g73
g59
NtRp2026
(dp2027
g62
(dp2028
sg71
g1875
sg64
(lp2029
g57
(g78
g59
NtRp2030
(dp2031
g62
(dp2032
g82
g83
ssg71
g2026
sg64
(lp2033
g1090
asbag57
(g78
g59
NtRp2034
(dp2035
g62
(dp2036
g89
g90
ssg71
g2026
sg64
(lp2037
S':'
asbag57
(g78
g59
NtRp2038
(dp2039
g62
(dp2040
sg71
g2026
sg64
(lp2041
g57
(g58
g59
NtRp2042
(dp2043
g62
(dp2044
g70
I4
ssg71
g2038
sg64
(lp2045
g100
asbasbasbag57
(g73
g59
NtRp2046
(dp2047
g62
(dp2048
sg71
g1875
sg64
(lp2049
g57
(g78
g59
NtRp2050
(dp2051
g62
(dp2052
g82
g83
ssg71
g2046
sg64
(lp2053
g1111
asbag57
(g78
g59
NtRp2054
(dp2055
g62
(dp2056
g89
g90
ssg71
g2046
sg64
(lp2057
S':'
asbag57
(g78
g59
NtRp2058
(dp2059
g62
(dp2060
sg71
g2046
sg64
(lp2061
g57
(g58
g59
NtRp2062
(dp2063
g62
(dp2064
g70
I4
ssg71
g2058
sg64
(lp2065
g100
asbasbasbag57
(g73
g59
NtRp2066
(dp2067
g62
(dp2068
sg71
g1875
sg64
(lp2069
g57
(g78
g59
NtRp2070
(dp2071
g62
(dp2072
g82
g83
ssg71
g2066
sg64
(lp2073
g1132
asbag57
(g78
g59
NtRp2074
(dp2075
g62
(dp2076
g89
g90
ssg71
g2066
sg64
(lp2077
S':'
asbag57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
sg71
g2066
sg64
(lp2081
g57
(g58
g59
NtRp2082
(dp2083
g62
(dp2084
g70
I4
ssg71
g2078
sg64
(lp2085
g57
(g66
g59
NtRp2086
(dp2087
g62
(dp2088
g70
I3
ssg71
Nsg64
(lp2089
g57
(g73
g59
NtRp2090
(dp2091
g62
(dp2092
sg71
g2086
sg64
(lp2093
g57
(g78
g59
NtRp2094
(dp2095
g62
(dp2096
sg71
g2090
sg64
(lp2097
g57
(g58
g59
NtRp2098
(dp2099
g62
(dp2100
g70
I3
ssg71
g2094
sg64
(lp2101
g1161
asbasbasbag57
(g73
g59
NtRp2102
(dp2103
g62
(dp2104
sg71
g2086
sg64
(lp2105
g57
(g78
g59
NtRp2106
(dp2107
g62
(dp2108
sg71
g2102
sg64
(lp2109
g57
(g58
g59
NtRp2110
(dp2111
g62
(dp2112
g70
I3
ssg71
g2106
sg64
(lp2113
g1174
asbasbasbag57
(g73
g59
NtRp2114
(dp2115
g62
(dp2116
sg71
g2086
sg64
(lp2117
g57
(g78
g59
NtRp2118
(dp2119
g62
(dp2120
sg71
g2114
sg64
(lp2121
g57
(g58
g59
NtRp2122
(dp2123
g62
(dp2124
g70
I3
ssg71
g2118
sg64
(lp2125
g1187
asbasbasbag57
(g73
g59
NtRp2126
(dp2127
g62
(dp2128
sg71
g2086
sg64
(lp2129
g57
(g78
g59
NtRp2130
(dp2131
g62
(dp2132
sg71
g2126
sg64
(lp2133
g57
(g58
g59
NtRp2134
(dp2135
g62
(dp2136
g70
I3
ssg71
g2130
sg64
(lp2137
g1200
asbasbasbag57
(g73
g59
NtRp2138
(dp2139
g62
(dp2140
sg71
g2086
sg64
(lp2141
g57
(g78
g59
NtRp2142
(dp2143
g62
(dp2144
sg71
g2138
sg64
(lp2145
g57
(g58
g59
NtRp2146
(dp2147
g62
(dp2148
g70
I3
ssg71
g2142
sg64
(lp2149
g1213
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g1875
sg64
(lp2153
g57
(g78
g59
NtRp2154
(dp2155
g62
(dp2156
g82
g83
ssg71
g2150
sg64
(lp2157
g1483
asbag57
(g78
g59
NtRp2158
(dp2159
g62
(dp2160
g89
g90
ssg71
g2150
sg64
(lp2161
S':'
asbag57
(g78
g59
NtRp2162
(dp2163
g62
(dp2164
sg71
g2150
sg64
(lp2165
g57
(g58
g59
NtRp2166
(dp2167
g62
(dp2168
g70
I4
ssg71
g2162
sg64
(lp2169
g57
(g66
g59
NtRp2170
(dp2171
g62
(dp2172
g70
I3
ssg71
Nsg64
(lp2173
g57
(g73
g59
NtRp2174
(dp2175
g62
(dp2176
sg71
g2170
sg64
(lp2177
g57
(g78
g59
NtRp2178
(dp2179
g62
(dp2180
sg71
g2174
sg64
(lp2181
g57
(g58
g59
NtRp2182
(dp2183
g62
(dp2184
g70
I3
ssg71
g2178
sg64
(lp2185
S'2'
asbasbasbag57
(g73
g59
NtRp2186
(dp2187
g62
(dp2188
sg71
g2170
sg64
(lp2189
g57
(g78
g59
NtRp2190
(dp2191
g62
(dp2192
sg71
g2186
sg64
(lp2193
g57
(g58
g59
NtRp2194
(dp2195
g62
(dp2196
g70
I3
ssg71
g2190
sg64
(lp2197
S'3'
asbasbasbag57
(g73
g59
NtRp2198
(dp2199
g62
(dp2200
sg71
g2170
sg64
(lp2201
g57
(g78
g59
NtRp2202
(dp2203
g62
(dp2204
sg71
g2198
sg64
(lp2205
g57
(g58
g59
NtRp2206
(dp2207
g62
(dp2208
g70
I3
ssg71
g2202
sg64
(lp2209
S'2'
asbasbasbag57
(g73
g59
NtRp2210
(dp2211
g62
(dp2212
sg71
g2170
sg64
(lp2213
g57
(g78
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2210
sg64
(lp2217
g57
(g58
g59
NtRp2218
(dp2219
g62
(dp2220
g70
I3
ssg71
g2214
sg64
(lp2221
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2222
asbasbasbag57
(g73
g59
NtRp2223
(dp2224
g62
(dp2225
sg71
g2170
sg64
(lp2226
g57
(g78
g59
NtRp2227
(dp2228
g62
(dp2229
sg71
g2223
sg64
(lp2230
g57
(g58
g59
NtRp2231
(dp2232
g62
(dp2233
g70
I3
ssg71
g2227
sg64
(lp2234
g1561
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2235
(dp2236
g62
(dp2237
sg71
g67
sg64
(lp2238
g57
(g78
g59
NtRp2239
(dp2240
g62
(dp2241
g82
g83
ssg71
g2235
sg64
(lp2242
S'is_https'
p2243
asbag57
(g78
g59
NtRp2244
(dp2245
g62
(dp2246
g89
g90
ssg71
g2235
sg64
(lp2247
S':'
asbag57
(g78
g59
NtRp2248
(dp2249
g62
(dp2250
sg71
g2235
sg64
(lp2251
g57
(g58
g59
NtRp2252
(dp2253
g62
(dp2254
g70
I5
ssg71
g2248
sg64
(lp2255
g100
asbasbasbag57
(g73
g59
NtRp2256
(dp2257
g62
(dp2258
sg71
g67
sg64
(lp2259
g57
(g78
g59
NtRp2260
(dp2261
g62
(dp2262
g82
g83
ssg71
g2256
sg64
(lp2263
S'is_local'
p2264
asbag57
(g78
g59
NtRp2265
(dp2266
g62
(dp2267
g89
g90
ssg71
g2256
sg64
(lp2268
S':'
asbag57
(g78
g59
NtRp2269
(dp2270
g62
(dp2271
sg71
g2256
sg64
(lp2272
g57
(g58
g59
NtRp2273
(dp2274
g62
(dp2275
g70
I5
ssg71
g2269
sg64
(lp2276
g1670
asbasbasbag57
(g73
g59
NtRp2277
(dp2278
g62
(dp2279
sg71
g67
sg64
(lp2280
g57
(g78
g59
NtRp2281
(dp2282
g62
(dp2283
g82
g83
ssg71
g2277
sg64
(lp2284
S'is_restful'
p2285
asbag57
(g78
g59
NtRp2286
(dp2287
g62
(dp2288
g89
g90
ssg71
g2277
sg64
(lp2289
S':'
asbag57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g2277
sg64
(lp2293
g57
(g58
g59
NtRp2294
(dp2295
g62
(dp2296
g70
I5
ssg71
g2290
sg64
(lp2297
g100
asbasbasbag57
(g73
g59
NtRp2298
(dp2299
g62
(dp2300
sg71
g67
sg64
(lp2301
g57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
g82
g83
ssg71
g2298
sg64
(lp2305
S'now'
p2306
asbag57
(g78
g59
NtRp2307
(dp2308
g62
(dp2309
g89
g90
ssg71
g2298
sg64
(lp2310
S':'
asbag57
(g78
g59
NtRp2311
(dp2312
g62
(dp2313
sg71
g2298
sg64
(lp2314
g57
(g58
g59
NtRp2315
(dp2316
g62
(dp2317
g70
I5
ssg71
g2311
sg64
(lp2318
S'datetime.datetime(2013, 2, 26, 0, 22, 41, 861240)'
p2319
asbasbasbag57
(g73
g59
NtRp2320
(dp2321
g62
(dp2322
sg71
g67
sg64
(lp2323
g57
(g78
g59
NtRp2324
(dp2325
g62
(dp2326
g82
g83
ssg71
g2320
sg64
(lp2327
S'post_vars'
p2328
asbag57
(g78
g59
NtRp2329
(dp2330
g62
(dp2331
g89
g90
ssg71
g2320
sg64
(lp2332
S':'
asbag57
(g78
g59
NtRp2333
(dp2334
g62
(dp2335
sg71
g2320
sg64
(lp2336
g57
(g58
g59
NtRp2337
(dp2338
g62
(dp2339
g70
I5
ssg71
g2333
sg64
(lp2340
g57
(g66
g59
NtRp2341
(dp2342
g62
(dp2343
g70
I4
ssg71
Nsg64
(lp2344
sbasbasbasbag57
(g73
g59
NtRp2345
(dp2346
g62
(dp2347
sg71
g67
sg64
(lp2348
g57
(g78
g59
NtRp2349
(dp2350
g62
(dp2351
g82
g83
ssg71
g2345
sg64
(lp2352
S'raw_args'
p2353
asbag57
(g78
g59
NtRp2354
(dp2355
g62
(dp2356
g89
g90
ssg71
g2345
sg64
(lp2357
S':'
asbag57
(g78
g59
NtRp2358
(dp2359
g62
(dp2360
sg71
g2345
sg64
(lp2361
g57
(g58
g59
NtRp2362
(dp2363
g62
(dp2364
g70
I5
ssg71
g2358
sg64
(lp2365
S'project/experiment.project/3/sample.experiment/2'
p2366
asbasbasbag57
(g73
g59
NtRp2367
(dp2368
g62
(dp2369
sg71
g67
sg64
(lp2370
g57
(g78
g59
NtRp2371
(dp2372
g62
(dp2373
g82
g83
ssg71
g2367
sg64
(lp2374
S'raw_extension'
p2375
asbag57
(g78
g59
NtRp2376
(dp2377
g62
(dp2378
g89
g90
ssg71
g2367
sg64
(lp2379
S':'
asbag57
(g78
g59
NtRp2380
(dp2381
g62
(dp2382
sg71
g2367
sg64
(lp2383
g57
(g58
g59
NtRp2384
(dp2385
g62
(dp2386
g70
I5
ssg71
g2380
sg64
(lp2387
S'None'
p2388
asbasbasbag57
(g73
g59
NtRp2389
(dp2390
g62
(dp2391
sg71
g67
sg64
(lp2392
g57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g82
g83
ssg71
g2389
sg64
(lp2396
S'url'
p2397
asbag57
(g78
g59
NtRp2398
(dp2399
g62
(dp2400
g89
g90
ssg71
g2389
sg64
(lp2401
S':'
asbag57
(g78
g59
NtRp2402
(dp2403
g62
(dp2404
sg71
g2389
sg64
(lp2405
g57
(g58
g59
NtRp2406
(dp2407
g62
(dp2408
g70
I5
ssg71
g2402
sg64
(lp2409
g1235
asbasbasbag57
(g73
g59
NtRp2410
(dp2411
g62
(dp2412
sg71
g67
sg64
(lp2413
g57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g82
g83
ssg71
g2410
sg64
(lp2417
S'utcnow'
p2418
asbag57
(g78
g59
NtRp2419
(dp2420
g62
(dp2421
g89
g90
ssg71
g2410
sg64
(lp2422
S':'
asbag57
(g78
g59
NtRp2423
(dp2424
g62
(dp2425
sg71
g2410
sg64
(lp2426
g57
(g58
g59
NtRp2427
(dp2428
g62
(dp2429
g70
I5
ssg71
g2423
sg64
(lp2430
S'datetime.datetime(2013, 2, 25, 18, 52, 41, 861306)'
p2431
asbasbasbag57
(g73
g59
NtRp2432
(dp2433
g62
(dp2434
sg71
g67
sg64
(lp2435
g57
(g78
g59
NtRp2436
(dp2437
g62
(dp2438
g82
g83
ssg71
g2432
sg64
(lp2439
S'uuid'
p2440
asbag57
(g78
g59
NtRp2441
(dp2442
g62
(dp2443
g89
g90
ssg71
g2432
sg64
(lp2444
S':'
asbag57
(g78
g59
NtRp2445
(dp2446
g62
(dp2447
sg71
g2432
sg64
(lp2448
g57
(g58
g59
NtRp2449
(dp2450
g62
(dp2451
g70
I5
ssg71
g2445
sg64
(lp2452
S'DEV_bootstrap_ch/127.0.0.1.2013-02-26.00-22-41.7930c629-e003-4d81-ad21-012eaaf9b5e5'
p2453
asbasbasbag57
(g73
g59
NtRp2454
(dp2455
g62
(dp2456
sg71
g67
sg64
(lp2457
g57
(g78
g59
NtRp2458
(dp2459
g62
(dp2460
g82
g83
ssg71
g2454
sg64
(lp2461
S'vars'
p2462
asbag57
(g78
g59
NtRp2463
(dp2464
g62
(dp2465
g89
g90
ssg71
g2454
sg64
(lp2466
S':'
asbag57
(g78
g59
NtRp2467
(dp2468
g62
(dp2469
sg71
g2454
sg64
(lp2470
g57
(g58
g59
NtRp2471
(dp2472
g62
(dp2473
g70
I5
ssg71
g2467
sg64
(lp2474
g57
(g66
g59
NtRp2475
(dp2476
g62
(dp2477
g70
I4
ssg71
Nsg64
(lp2478
sbasbasbasbag57
(g73
g59
NtRp2479
(dp2480
g62
(dp2481
sg71
g67
sg64
(lp2482
g57
(g78
g59
NtRp2483
(dp2484
g62
(dp2485
g82
g83
ssg71
g2479
sg64
(lp2486
S'wsgi'
p2487
asbag57
(g78
g59
NtRp2488
(dp2489
g62
(dp2490
g89
g90
ssg71
g2479
sg64
(lp2491
S':'
asbag57
(g78
g59
NtRp2492
(dp2493
g62
(dp2494
sg71
g2479
sg64
(lp2495
g57
(g58
g59
NtRp2496
(dp2497
g62
(dp2498
g70
I5
ssg71
g2492
sg64
(lp2499
g57
(g66
g59
NtRp2500
(dp2501
g62
(dp2502
g70
I4
ssg71
Nsg64
(lp2503
g57
(g73
g59
NtRp2504
(dp2505
g62
(dp2506
sg71
g2500
sg64
(lp2507
g57
(g78
g59
NtRp2508
(dp2509
g62
(dp2510
g82
g83
ssg71
g2504
sg64
(lp2511
S'environ'
p2512
asbag57
(g78
g59
NtRp2513
(dp2514
g62
(dp2515
g89
g90
ssg71
g2504
sg64
(lp2516
S':'
asbag57
(g78
g59
NtRp2517
(dp2518
g62
(dp2519
sg71
g2504
sg64
(lp2520
g57
(g58
g59
NtRp2521
(dp2522
g62
(dp2523
g70
I4
ssg71
g2517
sg64
(lp2524
g57
(g66
g59
NtRp2525
(dp2526
g62
(dp2527
g70
I3
ssg71
Nsg64
(lp2528
g57
(g73
g59
NtRp2529
(dp2530
g62
(dp2531
sg71
g2525
sg64
(lp2532
g57
(g78
g59
NtRp2533
(dp2534
g62
(dp2535
g82
g83
ssg71
g2529
sg64
(lp2536
S'HTTP_ACCEPT'
p2537
asbag57
(g78
g59
NtRp2538
(dp2539
g62
(dp2540
g89
g90
ssg71
g2529
sg64
(lp2541
S':'
asbag57
(g78
g59
NtRp2542
(dp2543
g62
(dp2544
sg71
g2529
sg64
(lp2545
g57
(g58
g59
NtRp2546
(dp2547
g62
(dp2548
g70
I3
ssg71
g2542
sg64
(lp2549
g905
asbasbasbag57
(g73
g59
NtRp2550
(dp2551
g62
(dp2552
sg71
g2525
sg64
(lp2553
g57
(g78
g59
NtRp2554
(dp2555
g62
(dp2556
g82
g83
ssg71
g2550
sg64
(lp2557
S'HTTP_ACCEPT_CHARSET'
p2558
asbag57
(g78
g59
NtRp2559
(dp2560
g62
(dp2561
g89
g90
ssg71
g2550
sg64
(lp2562
S':'
asbag57
(g78
g59
NtRp2563
(dp2564
g62
(dp2565
sg71
g2550
sg64
(lp2566
g57
(g58
g59
NtRp2567
(dp2568
g62
(dp2569
g70
I3
ssg71
g2563
sg64
(lp2570
g927
asbasbasbag57
(g73
g59
NtRp2571
(dp2572
g62
(dp2573
sg71
g2525
sg64
(lp2574
g57
(g78
g59
NtRp2575
(dp2576
g62
(dp2577
g82
g83
ssg71
g2571
sg64
(lp2578
S'HTTP_ACCEPT_ENCODING'
p2579
asbag57
(g78
g59
NtRp2580
(dp2581
g62
(dp2582
g89
g90
ssg71
g2571
sg64
(lp2583
S':'
asbag57
(g78
g59
NtRp2584
(dp2585
g62
(dp2586
sg71
g2571
sg64
(lp2587
g57
(g58
g59
NtRp2588
(dp2589
g62
(dp2590
g70
I3
ssg71
g2584
sg64
(lp2591
g949
asbasbasbag57
(g73
g59
NtRp2592
(dp2593
g62
(dp2594
sg71
g2525
sg64
(lp2595
g57
(g78
g59
NtRp2596
(dp2597
g62
(dp2598
g82
g83
ssg71
g2592
sg64
(lp2599
S'HTTP_ACCEPT_LANGUAGE'
p2600
asbag57
(g78
g59
NtRp2601
(dp2602
g62
(dp2603
g89
g90
ssg71
g2592
sg64
(lp2604
S':'
asbag57
(g78
g59
NtRp2605
(dp2606
g62
(dp2607
sg71
g2592
sg64
(lp2608
g57
(g58
g59
NtRp2609
(dp2610
g62
(dp2611
g70
I3
ssg71
g2605
sg64
(lp2612
g971
asbasbasbag57
(g73
g59
NtRp2613
(dp2614
g62
(dp2615
sg71
g2525
sg64
(lp2616
g57
(g78
g59
NtRp2617
(dp2618
g62
(dp2619
g82
g83
ssg71
g2613
sg64
(lp2620
S'HTTP_CONNECTION'
p2621
asbag57
(g78
g59
NtRp2622
(dp2623
g62
(dp2624
g89
g90
ssg71
g2613
sg64
(lp2625
S':'
asbag57
(g78
g59
NtRp2626
(dp2627
g62
(dp2628
sg71
g2613
sg64
(lp2629
g57
(g58
g59
NtRp2630
(dp2631
g62
(dp2632
g70
I3
ssg71
g2626
sg64
(lp2633
g993
asbasbasbag57
(g73
g59
NtRp2634
(dp2635
g62
(dp2636
sg71
g2525
sg64
(lp2637
g57
(g78
g59
NtRp2638
(dp2639
g62
(dp2640
g82
g83
ssg71
g2634
sg64
(lp2641
S'HTTP_COOKIE'
p2642
asbag57
(g78
g59
NtRp2643
(dp2644
g62
(dp2645
g89
g90
ssg71
g2634
sg64
(lp2646
S':'
asbag57
(g78
g59
NtRp2647
(dp2648
g62
(dp2649
sg71
g2634
sg64
(lp2650
g57
(g58
g59
NtRp2651
(dp2652
g62
(dp2653
g70
I3
ssg71
g2647
sg64
(lp2654
g1015
asbasbasbag57
(g73
g59
NtRp2655
(dp2656
g62
(dp2657
sg71
g2525
sg64
(lp2658
g57
(g78
g59
NtRp2659
(dp2660
g62
(dp2661
g82
g83
ssg71
g2655
sg64
(lp2662
S'HTTP_HOST'
p2663
asbag57
(g78
g59
NtRp2664
(dp2665
g62
(dp2666
g89
g90
ssg71
g2655
sg64
(lp2667
S':'
asbag57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
sg71
g2655
sg64
(lp2671
g57
(g58
g59
NtRp2672
(dp2673
g62
(dp2674
g70
I3
ssg71
g2668
sg64
(lp2675
g1037
asbasbasbag57
(g73
g59
NtRp2676
(dp2677
g62
(dp2678
sg71
g2525
sg64
(lp2679
g57
(g78
g59
NtRp2680
(dp2681
g62
(dp2682
g82
g83
ssg71
g2676
sg64
(lp2683
S'HTTP_REFERER'
p2684
asbag57
(g78
g59
NtRp2685
(dp2686
g62
(dp2687
g89
g90
ssg71
g2676
sg64
(lp2688
S':'
asbag57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
sg71
g2676
sg64
(lp2692
g57
(g58
g59
NtRp2693
(dp2694
g62
(dp2695
g70
I3
ssg71
g2689
sg64
(lp2696
g1059
asbasbasbag57
(g73
g59
NtRp2697
(dp2698
g62
(dp2699
sg71
g2525
sg64
(lp2700
g57
(g78
g59
NtRp2701
(dp2702
g62
(dp2703
g82
g83
ssg71
g2697
sg64
(lp2704
S'HTTP_USER_AGENT'
p2705
asbag57
(g78
g59
NtRp2706
(dp2707
g62
(dp2708
g89
g90
ssg71
g2697
sg64
(lp2709
S':'
asbag57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
sg71
g2697
sg64
(lp2713
g57
(g58
g59
NtRp2714
(dp2715
g62
(dp2716
g70
I3
ssg71
g2710
sg64
(lp2717
g1081
asbasbasbag57
(g73
g59
NtRp2718
(dp2719
g62
(dp2720
sg71
g2525
sg64
(lp2721
g57
(g78
g59
NtRp2722
(dp2723
g62
(dp2724
g82
g83
ssg71
g2718
sg64
(lp2725
S'PATH_INFO'
p2726
asbag57
(g78
g59
NtRp2727
(dp2728
g62
(dp2729
g89
g90
ssg71
g2718
sg64
(lp2730
S':'
asbag57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
sg71
g2718
sg64
(lp2734
g57
(g58
g59
NtRp2735
(dp2736
g62
(dp2737
g70
I3
ssg71
g2731
sg64
(lp2738
g1235
asbasbasbag57
(g73
g59
NtRp2739
(dp2740
g62
(dp2741
sg71
g2525
sg64
(lp2742
g57
(g78
g59
NtRp2743
(dp2744
g62
(dp2745
g82
g83
ssg71
g2739
sg64
(lp2746
S'QUERY_STRING'
p2747
asbag57
(g78
g59
NtRp2748
(dp2749
g62
(dp2750
g89
g90
ssg71
g2739
sg64
(lp2751
S':'
asbag57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
sg71
g2739
sg64
(lp2755
g57
(g58
g59
NtRp2756
(dp2757
g62
(dp2758
g70
I3
ssg71
g2752
sg64
(lp2759
g1257
asbasbasbag57
(g73
g59
NtRp2760
(dp2761
g62
(dp2762
sg71
g2525
sg64
(lp2763
g57
(g78
g59
NtRp2764
(dp2765
g62
(dp2766
g82
g83
ssg71
g2760
sg64
(lp2767
S'REMOTE_ADDR'
p2768
asbag57
(g78
g59
NtRp2769
(dp2770
g62
(dp2771
g89
g90
ssg71
g2760
sg64
(lp2772
S':'
asbag57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
sg71
g2760
sg64
(lp2776
g57
(g58
g59
NtRp2777
(dp2778
g62
(dp2779
g70
I3
ssg71
g2773
sg64
(lp2780
g275
asbasbasbag57
(g73
g59
NtRp2781
(dp2782
g62
(dp2783
sg71
g2525
sg64
(lp2784
g57
(g78
g59
NtRp2785
(dp2786
g62
(dp2787
g82
g83
ssg71
g2781
sg64
(lp2788
S'REMOTE_PORT'
p2789
asbag57
(g78
g59
NtRp2790
(dp2791
g62
(dp2792
g89
g90
ssg71
g2781
sg64
(lp2793
S':'
asbag57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
sg71
g2781
sg64
(lp2797
g57
(g58
g59
NtRp2798
(dp2799
g62
(dp2800
g70
I3
ssg71
g2794
sg64
(lp2801
g1300
asbasbasbag57
(g73
g59
NtRp2802
(dp2803
g62
(dp2804
sg71
g2525
sg64
(lp2805
g57
(g78
g59
NtRp2806
(dp2807
g62
(dp2808
g82
g83
ssg71
g2802
sg64
(lp2809
S'REQUEST_METHOD'
p2810
asbag57
(g78
g59
NtRp2811
(dp2812
g62
(dp2813
g89
g90
ssg71
g2802
sg64
(lp2814
S':'
asbag57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
sg71
g2802
sg64
(lp2818
g57
(g58
g59
NtRp2819
(dp2820
g62
(dp2821
g70
I3
ssg71
g2815
sg64
(lp2822
g1322
asbasbasbag57
(g73
g59
NtRp2823
(dp2824
g62
(dp2825
sg71
g2525
sg64
(lp2826
g57
(g78
g59
NtRp2827
(dp2828
g62
(dp2829
g82
g83
ssg71
g2823
sg64
(lp2830
S'REQUEST_URI'
p2831
asbag57
(g78
g59
NtRp2832
(dp2833
g62
(dp2834
g89
g90
ssg71
g2823
sg64
(lp2835
S':'
asbag57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
sg71
g2823
sg64
(lp2839
g57
(g58
g59
NtRp2840
(dp2841
g62
(dp2842
g70
I3
ssg71
g2836
sg64
(lp2843
g1344
asbasbasbag57
(g73
g59
NtRp2844
(dp2845
g62
(dp2846
sg71
g2525
sg64
(lp2847
g57
(g78
g59
NtRp2848
(dp2849
g62
(dp2850
g82
g83
ssg71
g2844
sg64
(lp2851
S'SCRIPT_NAME'
p2852
asbag57
(g78
g59
NtRp2853
(dp2854
g62
(dp2855
g89
g90
ssg71
g2844
sg64
(lp2856
S':'
asbag57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
sg71
g2844
sg64
(lp2860
g57
(g58
g59
NtRp2861
(dp2862
g62
(dp2863
g70
I3
ssg71
g2857
sg64
(lp2864
S''
asbasbasbag57
(g73
g59
NtRp2865
(dp2866
g62
(dp2867
sg71
g2525
sg64
(lp2868
g57
(g78
g59
NtRp2869
(dp2870
g62
(dp2871
g82
g83
ssg71
g2865
sg64
(lp2872
S'SERVER_NAME'
p2873
asbag57
(g78
g59
NtRp2874
(dp2875
g62
(dp2876
g89
g90
ssg71
g2865
sg64
(lp2877
S':'
asbag57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
sg71
g2865
sg64
(lp2881
g57
(g58
g59
NtRp2882
(dp2883
g62
(dp2884
g70
I3
ssg71
g2878
sg64
(lp2885
g1387
asbasbasbag57
(g73
g59
NtRp2886
(dp2887
g62
(dp2888
sg71
g2525
sg64
(lp2889
g57
(g78
g59
NtRp2890
(dp2891
g62
(dp2892
g82
g83
ssg71
g2886
sg64
(lp2893
S'SERVER_PORT'
p2894
asbag57
(g78
g59
NtRp2895
(dp2896
g62
(dp2897
g89
g90
ssg71
g2886
sg64
(lp2898
S':'
asbag57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
sg71
g2886
sg64
(lp2902
g57
(g58
g59
NtRp2903
(dp2904
g62
(dp2905
g70
I3
ssg71
g2899
sg64
(lp2906
g1409
asbasbasbag57
(g73
g59
NtRp2907
(dp2908
g62
(dp2909
sg71
g2525
sg64
(lp2910
g57
(g78
g59
NtRp2911
(dp2912
g62
(dp2913
g82
g83
ssg71
g2907
sg64
(lp2914
S'SERVER_PROTOCOL'
p2915
asbag57
(g78
g59
NtRp2916
(dp2917
g62
(dp2918
g89
g90
ssg71
g2907
sg64
(lp2919
S':'
asbag57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
sg71
g2907
sg64
(lp2923
g57
(g58
g59
NtRp2924
(dp2925
g62
(dp2926
g70
I3
ssg71
g2920
sg64
(lp2927
g1431
asbasbasbag57
(g73
g59
NtRp2928
(dp2929
g62
(dp2930
sg71
g2525
sg64
(lp2931
g57
(g78
g59
NtRp2932
(dp2933
g62
(dp2934
g82
g83
ssg71
g2928
sg64
(lp2935
S'SERVER_SOFTWARE'
p2936
asbag57
(g78
g59
NtRp2937
(dp2938
g62
(dp2939
g89
g90
ssg71
g2928
sg64
(lp2940
S':'
asbag57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
sg71
g2928
sg64
(lp2944
g57
(g58
g59
NtRp2945
(dp2946
g62
(dp2947
g70
I3
ssg71
g2941
sg64
(lp2948
g1453
asbasbasbag57
(g73
g59
NtRp2949
(dp2950
g62
(dp2951
sg71
g2525
sg64
(lp2952
g57
(g78
g59
NtRp2953
(dp2954
g62
(dp2955
g82
g83
ssg71
g2949
sg64
(lp2956
S'wsgi.errors'
p2957
asbag57
(g78
g59
NtRp2958
(dp2959
g62
(dp2960
g89
g90
ssg71
g2949
sg64
(lp2961
S':'
asbag57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
sg71
g2949
sg64
(lp2965
g57
(g58
g59
NtRp2966
(dp2967
g62
(dp2968
g70
I3
ssg71
g2962
sg64
(lp2969
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p2970
asbasbasbag57
(g73
g59
NtRp2971
(dp2972
g62
(dp2973
sg71
g2525
sg64
(lp2974
g57
(g78
g59
NtRp2975
(dp2976
g62
(dp2977
g82
g83
ssg71
g2971
sg64
(lp2978
S'wsgi.file_wrapper'
p2979
asbag57
(g78
g59
NtRp2980
(dp2981
g62
(dp2982
g89
g90
ssg71
g2971
sg64
(lp2983
S':'
asbag57
(g78
g59
NtRp2984
(dp2985
g62
(dp2986
sg71
g2971
sg64
(lp2987
g57
(g58
g59
NtRp2988
(dp2989
g62
(dp2990
g70
I3
ssg71
g2984
sg64
(lp2991
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p2992
asbasbasbag57
(g73
g59
NtRp2993
(dp2994
g62
(dp2995
sg71
g2525
sg64
(lp2996
g57
(g78
g59
NtRp2997
(dp2998
g62
(dp2999
g82
g83
ssg71
g2993
sg64
(lp3000
S'wsgi.input'
p3001
asbag57
(g78
g59
NtRp3002
(dp3003
g62
(dp3004
g89
g90
ssg71
g2993
sg64
(lp3005
S':'
asbag57
(g78
g59
NtRp3006
(dp3007
g62
(dp3008
sg71
g2993
sg64
(lp3009
g57
(g58
g59
NtRp3010
(dp3011
g62
(dp3012
g70
I3
ssg71
g3006
sg64
(lp3013
S'<cStringIO.StringO object at 0xad793700>'
p3014
asbasbasbag57
(g73
g59
NtRp3015
(dp3016
g62
(dp3017
sg71
g2525
sg64
(lp3018
g57
(g78
g59
NtRp3019
(dp3020
g62
(dp3021
g82
g83
ssg71
g3015
sg64
(lp3022
S'wsgi.multiprocess'
p3023
asbag57
(g78
g59
NtRp3024
(dp3025
g62
(dp3026
g89
g90
ssg71
g3015
sg64
(lp3027
S':'
asbag57
(g78
g59
NtRp3028
(dp3029
g62
(dp3030
sg71
g3015
sg64
(lp3031
g57
(g58
g59
NtRp3032
(dp3033
g62
(dp3034
g70
I3
ssg71
g3028
sg64
(lp3035
g100
asbasbasbag57
(g73
g59
NtRp3036
(dp3037
g62
(dp3038
sg71
g2525
sg64
(lp3039
g57
(g78
g59
NtRp3040
(dp3041
g62
(dp3042
g82
g83
ssg71
g3036
sg64
(lp3043
S'wsgi.multithread'
p3044
asbag57
(g78
g59
NtRp3045
(dp3046
g62
(dp3047
g89
g90
ssg71
g3036
sg64
(lp3048
S':'
asbag57
(g78
g59
NtRp3049
(dp3050
g62
(dp3051
sg71
g3036
sg64
(lp3052
g57
(g58
g59
NtRp3053
(dp3054
g62
(dp3055
g70
I3
ssg71
g3049
sg64
(lp3056
g1670
asbasbasbag57
(g73
g59
NtRp3057
(dp3058
g62
(dp3059
sg71
g2525
sg64
(lp3060
g57
(g78
g59
NtRp3061
(dp3062
g62
(dp3063
g82
g83
ssg71
g3057
sg64
(lp3064
S'wsgi.run_once'
p3065
asbag57
(g78
g59
NtRp3066
(dp3067
g62
(dp3068
g89
g90
ssg71
g3057
sg64
(lp3069
S':'
asbag57
(g78
g59
NtRp3070
(dp3071
g62
(dp3072
sg71
g3057
sg64
(lp3073
g57
(g58
g59
NtRp3074
(dp3075
g62
(dp3076
g70
I3
ssg71
g3070
sg64
(lp3077
g100
asbasbasbag57
(g73
g59
NtRp3078
(dp3079
g62
(dp3080
sg71
g2525
sg64
(lp3081
g57
(g78
g59
NtRp3082
(dp3083
g62
(dp3084
g82
g83
ssg71
g3078
sg64
(lp3085
S'wsgi.url_scheme'
p3086
asbag57
(g78
g59
NtRp3087
(dp3088
g62
(dp3089
g89
g90
ssg71
g3078
sg64
(lp3090
S':'
asbag57
(g78
g59
NtRp3091
(dp3092
g62
(dp3093
sg71
g3078
sg64
(lp3094
g57
(g58
g59
NtRp3095
(dp3096
g62
(dp3097
g70
I3
ssg71
g3091
sg64
(lp3098
g1713
asbasbasbag57
(g73
g59
NtRp3099
(dp3100
g62
(dp3101
sg71
g2525
sg64
(lp3102
g57
(g78
g59
NtRp3103
(dp3104
g62
(dp3105
g82
g83
ssg71
g3099
sg64
(lp3106
S'wsgi.version'
p3107
asbag57
(g78
g59
NtRp3108
(dp3109
g62
(dp3110
g89
g90
ssg71
g3099
sg64
(lp3111
S':'
asbag57
(g78
g59
NtRp3112
(dp3113
g62
(dp3114
sg71
g3099
sg64
(lp3115
g57
(g58
g59
NtRp3116
(dp3117
g62
(dp3118
g70
I3
ssg71
g3112
sg64
(lp3119
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3120
(lp3121
(dp3122
S'file'
p3123
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3124
sS'dump'
p3125
(dp3126
S'environment'
p3127
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3128
sS'ccode'
p3129
S'<code object <module> at 0xad7b89b0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3130
ssS'lnum'
p3131
I212
sS'lines'
p3132
(dp3133
I207
S'    try:'
p3134
sI208
S'        if isinstance(code, types.CodeType):'
p3135
sI209
S'            ccode = code'
p3136
sI210
S'        else:'
p3137
sI211
S'            ccode = compile2(code, layer)'
p3138
sI212
S'        exec ccode in environment'
p3139
sI213
S'    except HTTP:'
p3140
sI214
S'        raise'
p3141
sI215
S'    except RestrictedError:'
p3142
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3143
ssS'call'
p3144
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3145
sS'func'
p3146
S'restricted'
p3147
sa(dp3148
g3123
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3149
sg3125
(dp3150
sg3131
I1141
sg3132
(dp3151
I1130
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3152
sI1131
S'   """ per sample . takes id of the sample as the input """'
p3153
sI1132
S'   sid = request.args(0)'
p3154
sI1133
S'   sample = db(db.sample.id == sid).select().first()'
p3155
sI1134
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3156
sI1135
S'   form = SQLFORM(db.sample_files)'
p3157
sI1136
S'   form.vars.sample = sid'
p3158
sI1137
S'   return locals()'
p3159
sI1138
S''
sI1139
S''
ssg3144
S'()'
p3160
sg3146
S'<module>'
p3161
sa(dp3162
g3123
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3163
sg3125
(dp3164
S'self'
p3165
S'undefined'
p3166
sS'f'
S'<function list_all_dev_projects>'
p3167
ssg3131
I193
sg3132
(dp3168
I192
S'        self._vars = None'
p3169
sI193
S'        self._caller = lambda f: f()'
p3170
sI194
S'        self._view_environment = None'
p3171
sI195
S'        self._custom_commit = None'
p3172
sI196
S'        self._custom_rollback = None'
p3173
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3174
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3175
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3176
sI191
S"        self.delimiters = ('{{', '}}')"
p3177
ssg3144
S'(f=<function list_all_dev_projects>)'
p3178
sg3146
S'<lambda>'
p3179
sa(dp3180
g3123
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3181
sg3125
(dp3182
S'auth.user.id'
p3183
g3166
sS'auth.user'
p3184
S'None'
p3185
sS'global auth'
p3186
S'<gluon.tools.Auth object>'
p3187
sS'db.sample.experimentalist.default'
p3188
S'None'
p3189
sS'global db'
p3190
S'<DAL uri="sqlite://storage.sqlite">'
p3191
sS'db.sample'
p3192
S'<Table sample (id,parent,experimentalist,name,co...iment,working_status,replica,publication_status)>'
p3193
sS'db.sample.experimentalist'
p3194
S'<gluon.dal.Field object>'
p3195
ssg3131
I294
sg3132
(dp3196
I289
S''
sI290
S'def list_all_dev_projects():'
p3197
sI291
S'    response.menu = ['
p3198
sI292
S"    (T('Home'), False, URL('default','list_all_projects'), [])"
p3199
sI293
S'    ]'
p3200
sI294
S'    db.sample.experimentalist.default=auth.user.id'
p3201
sI295
S'    db.sample.experiment.writable = False'
p3202
sI296
S'    q1 = (db.project.project_status ==  0)'
p3203
sI297
S'    q2 = (db.sample.experimentalist == auth.user.id)'
p3204
sI298
S"    ck = {'project':q1,'sample':q2}"
p3205
ssg3144
S'()'
p3206
sg3146
S'list_all_dev_projects'
p3207
sasS'pyver'
p3208
S'Python 2.7.3: /usr/bin/python'
p3209
sS'session'
p3210
g57
(g58
g59
NtRp3211
(dp3212
g62
(dp3213
sg64
(lp3214
g57
(g66
g59
NtRp3215
(dp3216
g62
(dp3217
g70
I5
ssg71
Nsg64
(lp3218
g57
(g73
g59
NtRp3219
(dp3220
g62
(dp3221
sg71
g3215
sg64
(lp3222
g57
(g78
g59
NtRp3223
(dp3224
g62
(dp3225
g82
g83
ssg71
g3219
sg64
(lp3226
S'flash'
p3227
asbag57
(g78
g59
NtRp3228
(dp3229
g62
(dp3230
g89
g90
ssg71
g3219
sg64
(lp3231
S':'
asbag57
(g78
g59
NtRp3232
(dp3233
g62
(dp3234
sg71
g3219
sg64
(lp3235
g57
(g58
g59
NtRp3236
(dp3237
g62
(dp3238
g70
I5
ssg71
g3232
sg64
(lp3239
S'None'
p3240
asbasbasbasbasbsS'etype'
p3241
S"<type 'exceptions.AttributeError'>"
p3242
sS'date'
p3243
S'Tue Feb 26 00:22:42 2013'
p3244
sS'response'
p3245
g57
(g58
g59
NtRp3246
(dp3247
g62
(dp3248
sg64
(lp3249
g57
(g66
g59
NtRp3250
(dp3251
g62
(dp3252
g70
I5
ssg71
Nsg64
(lp3253
g57
(g73
g59
NtRp3254
(dp3255
g62
(dp3256
sg71
g3250
sg64
(lp3257
g57
(g78
g59
NtRp3258
(dp3259
g62
(dp3260
g82
g83
ssg71
g3254
sg64
(lp3261
g218
asbag57
(g78
g59
NtRp3262
(dp3263
g62
(dp3264
g89
g90
ssg71
g3254
sg64
(lp3265
S':'
asbag57
(g78
g59
NtRp3266
(dp3267
g62
(dp3268
sg71
g3254
sg64
(lp3269
g57
(g58
g59
NtRp3270
(dp3271
g62
(dp3272
g70
I5
ssg71
g3266
sg64
(lp3273
S'<cStringIO.StringO object at 0xade765c0>'
p3274
asbasbasbag57
(g73
g59
NtRp3275
(dp3276
g62
(dp3277
sg71
g3250
sg64
(lp3278
g57
(g78
g59
NtRp3279
(dp3280
g62
(dp3281
g82
g83
ssg71
g3275
sg64
(lp3282
g306
asbag57
(g78
g59
NtRp3283
(dp3284
g62
(dp3285
g89
g90
ssg71
g3275
sg64
(lp3286
S':'
asbag57
(g78
g59
NtRp3287
(dp3288
g62
(dp3289
sg71
g3275
sg64
(lp3290
g57
(g58
g59
NtRp3291
(dp3292
g62
(dp3293
g70
I5
ssg71
g3287
sg64
(lp3294
g57
(g66
g59
NtRp3295
(dp3296
g62
(dp3297
g70
I4
ssg71
Nsg64
(lp3298
g57
(g73
g59
NtRp3299
(dp3300
g62
(dp3301
sg71
g3295
sg64
(lp3302
g57
(g78
g59
NtRp3303
(dp3304
g62
(dp3305
g82
g83
ssg71
g3299
sg64
(lp3306
S'session_id_dev_bootstrap_ch'
p3307
asbag57
(g78
g59
NtRp3308
(dp3309
g62
(dp3310
g89
g90
ssg71
g3299
sg64
(lp3311
S':'
asbag57
(g78
g59
NtRp3312
(dp3313
g62
(dp3314
sg71
g3299
sg64
(lp3315
g57
(g58
g59
NtRp3316
(dp3317
g62
(dp3318
g70
I4
ssg71
g3312
sg64
(lp3319
g538
ag57
(g66
g59
NtRp3320
(dp3321
g62
(dp3322
g70
I3
ssg71
Nsg64
(lp3323
g57
(g73
g59
NtRp3324
(dp3325
g62
(dp3326
sg71
g3320
sg64
(lp3327
g57
(g78
g59
NtRp3328
(dp3329
g62
(dp3330
g82
g83
ssg71
g3324
sg64
(lp3331
g357
asbag57
(g78
g59
NtRp3332
(dp3333
g62
(dp3334
g89
g90
ssg71
g3324
sg64
(lp3335
S':'
asbag57
(g78
g59
NtRp3336
(dp3337
g62
(dp3338
sg71
g3324
sg64
(lp3339
g57
(g58
g59
NtRp3340
(dp3341
g62
(dp3342
g70
I3
ssg71
g3336
sg64
(lp3343
S''
asbasbasbag57
(g73
g59
NtRp3344
(dp3345
g62
(dp3346
sg71
g3320
sg64
(lp3347
g57
(g78
g59
NtRp3348
(dp3349
g62
(dp3350
g82
g83
ssg71
g3344
sg64
(lp3351
g378
asbag57
(g78
g59
NtRp3352
(dp3353
g62
(dp3354
g89
g90
ssg71
g3344
sg64
(lp3355
S':'
asbag57
(g78
g59
NtRp3356
(dp3357
g62
(dp3358
sg71
g3344
sg64
(lp3359
g57
(g58
g59
NtRp3360
(dp3361
g62
(dp3362
g70
I3
ssg71
g3356
sg64
(lp3363
S''
asbasbasbag57
(g73
g59
NtRp3364
(dp3365
g62
(dp3366
sg71
g3320
sg64
(lp3367
g57
(g78
g59
NtRp3368
(dp3369
g62
(dp3370
g82
g83
ssg71
g3364
sg64
(lp3371
g399
asbag57
(g78
g59
NtRp3372
(dp3373
g62
(dp3374
g89
g90
ssg71
g3364
sg64
(lp3375
S':'
asbag57
(g78
g59
NtRp3376
(dp3377
g62
(dp3378
sg71
g3364
sg64
(lp3379
g57
(g58
g59
NtRp3380
(dp3381
g62
(dp3382
g70
I3
ssg71
g3376
sg64
(lp3383
S''
asbasbasbag57
(g73
g59
NtRp3384
(dp3385
g62
(dp3386
sg71
g3320
sg64
(lp3387
g57
(g78
g59
NtRp3388
(dp3389
g62
(dp3390
g82
g83
ssg71
g3384
sg64
(lp3391
g420
asbag57
(g78
g59
NtRp3392
(dp3393
g62
(dp3394
g89
g90
ssg71
g3384
sg64
(lp3395
S':'
asbag57
(g78
g59
NtRp3396
(dp3397
g62
(dp3398
sg71
g3384
sg64
(lp3399
g57
(g58
g59
NtRp3400
(dp3401
g62
(dp3402
g70
I3
ssg71
g3396
sg64
(lp3403
S''
asbasbasbag57
(g73
g59
NtRp3404
(dp3405
g62
(dp3406
sg71
g3320
sg64
(lp3407
g57
(g78
g59
NtRp3408
(dp3409
g62
(dp3410
g82
g83
ssg71
g3404
sg64
(lp3411
g441
asbag57
(g78
g59
NtRp3412
(dp3413
g62
(dp3414
g89
g90
ssg71
g3404
sg64
(lp3415
S':'
asbag57
(g78
g59
NtRp3416
(dp3417
g62
(dp3418
sg71
g3404
sg64
(lp3419
g57
(g58
g59
NtRp3420
(dp3421
g62
(dp3422
g70
I3
ssg71
g3416
sg64
(lp3423
S''
asbasbasbag57
(g73
g59
NtRp3424
(dp3425
g62
(dp3426
sg71
g3320
sg64
(lp3427
g57
(g78
g59
NtRp3428
(dp3429
g62
(dp3430
g82
g83
ssg71
g3424
sg64
(lp3431
g462
asbag57
(g78
g59
NtRp3432
(dp3433
g62
(dp3434
g89
g90
ssg71
g3424
sg64
(lp3435
S':'
asbag57
(g78
g59
NtRp3436
(dp3437
g62
(dp3438
sg71
g3424
sg64
(lp3439
g57
(g58
g59
NtRp3440
(dp3441
g62
(dp3442
g70
I3
ssg71
g3436
sg64
(lp3443
S'/'
asbasbasbag57
(g73
g59
NtRp3444
(dp3445
g62
(dp3446
sg71
g3320
sg64
(lp3447
g57
(g78
g59
NtRp3448
(dp3449
g62
(dp3450
g82
g83
ssg71
g3444
sg64
(lp3451
g483
asbag57
(g78
g59
NtRp3452
(dp3453
g62
(dp3454
g89
g90
ssg71
g3444
sg64
(lp3455
S':'
asbag57
(g78
g59
NtRp3456
(dp3457
g62
(dp3458
sg71
g3444
sg64
(lp3459
g57
(g58
g59
NtRp3460
(dp3461
g62
(dp3462
g70
I3
ssg71
g3456
sg64
(lp3463
S''
asbasbasbag57
(g73
g59
NtRp3464
(dp3465
g62
(dp3466
sg71
g3320
sg64
(lp3467
g57
(g78
g59
NtRp3468
(dp3469
g62
(dp3470
g82
g83
ssg71
g3464
sg64
(lp3471
g504
asbag57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g89
g90
ssg71
g3464
sg64
(lp3475
S':'
asbag57
(g78
g59
NtRp3476
(dp3477
g62
(dp3478
sg71
g3464
sg64
(lp3479
g57
(g58
g59
NtRp3480
(dp3481
g62
(dp3482
g70
I3
ssg71
g3476
sg64
(lp3483
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3484
(dp3485
g62
(dp3486
sg71
g3250
sg64
(lp3487
g57
(g78
g59
NtRp3488
(dp3489
g62
(dp3490
g82
g83
ssg71
g3484
sg64
(lp3491
S'delimiters'
p3492
asbag57
(g78
g59
NtRp3493
(dp3494
g62
(dp3495
g89
g90
ssg71
g3484
sg64
(lp3496
S':'
asbag57
(g78
g59
NtRp3497
(dp3498
g62
(dp3499
sg71
g3484
sg64
(lp3500
g57
(g58
g59
NtRp3501
(dp3502
g62
(dp3503
g70
I5
ssg71
g3497
sg64
(lp3504
g57
(g66
g59
NtRp3505
(dp3506
g62
(dp3507
g70
I4
ssg71
Nsg64
(lp3508
g57
(g73
g59
NtRp3509
(dp3510
g62
(dp3511
sg71
g3505
sg64
(lp3512
g57
(g78
g59
NtRp3513
(dp3514
g62
(dp3515
sg71
g3509
sg64
(lp3516
g57
(g58
g59
NtRp3517
(dp3518
g62
(dp3519
g70
I4
ssg71
g3513
sg64
(lp3520
S'{{'
p3521
asbasbasbag57
(g73
g59
NtRp3522
(dp3523
g62
(dp3524
sg71
g3505
sg64
(lp3525
g57
(g78
g59
NtRp3526
(dp3527
g62
(dp3528
sg71
g3522
sg64
(lp3529
g57
(g58
g59
NtRp3530
(dp3531
g62
(dp3532
g70
I4
ssg71
g3526
sg64
(lp3533
S'}}'
p3534
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3535
(dp3536
g62
(dp3537
sg71
g3250
sg64
(lp3538
g57
(g78
g59
NtRp3539
(dp3540
g62
(dp3541
g82
g83
ssg71
g3535
sg64
(lp3542
S'files'
p3543
asbag57
(g78
g59
NtRp3544
(dp3545
g62
(dp3546
g89
g90
ssg71
g3535
sg64
(lp3547
S':'
asbag57
(g78
g59
NtRp3548
(dp3549
g62
(dp3550
sg71
g3535
sg64
(lp3551
g57
(g58
g59
NtRp3552
(dp3553
g62
(dp3554
g70
I5
ssg71
g3548
sg64
(lp3555
g57
(g66
g59
NtRp3556
(dp3557
g62
(dp3558
g70
I4
ssg71
Nsg64
(lp3559
g57
(g73
g59
NtRp3560
(dp3561
g62
(dp3562
sg71
g3556
sg64
(lp3563
g57
(g78
g59
NtRp3564
(dp3565
g62
(dp3566
sg71
g3560
sg64
(lp3567
g57
(g58
g59
NtRp3568
(dp3569
g62
(dp3570
g70
I4
ssg71
g3564
sg64
(lp3571
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3572
asbasbasbag57
(g73
g59
NtRp3573
(dp3574
g62
(dp3575
sg71
g3556
sg64
(lp3576
g57
(g78
g59
NtRp3577
(dp3578
g62
(dp3579
sg71
g3573
sg64
(lp3580
g57
(g58
g59
NtRp3581
(dp3582
g62
(dp3583
g70
I4
ssg71
g3577
sg64
(lp3584
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3585
asbasbasbag57
(g73
g59
NtRp3586
(dp3587
g62
(dp3588
sg71
g3556
sg64
(lp3589
g57
(g78
g59
NtRp3590
(dp3591
g62
(dp3592
sg71
g3586
sg64
(lp3593
g57
(g58
g59
NtRp3594
(dp3595
g62
(dp3596
g70
I4
ssg71
g3590
sg64
(lp3597
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3598
asbasbasbag57
(g73
g59
NtRp3599
(dp3600
g62
(dp3601
sg71
g3556
sg64
(lp3602
g57
(g78
g59
NtRp3603
(dp3604
g62
(dp3605
sg71
g3599
sg64
(lp3606
g57
(g58
g59
NtRp3607
(dp3608
g62
(dp3609
g70
I4
ssg71
g3603
sg64
(lp3610
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3611
asbasbasbag57
(g73
g59
NtRp3612
(dp3613
g62
(dp3614
sg71
g3556
sg64
(lp3615
g57
(g78
g59
NtRp3616
(dp3617
g62
(dp3618
sg71
g3612
sg64
(lp3619
g57
(g58
g59
NtRp3620
(dp3621
g62
(dp3622
g70
I4
ssg71
g3616
sg64
(lp3623
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3624
asbasbasbag57
(g73
g59
NtRp3625
(dp3626
g62
(dp3627
sg71
g3556
sg64
(lp3628
g57
(g78
g59
NtRp3629
(dp3630
g62
(dp3631
sg71
g3625
sg64
(lp3632
g57
(g58
g59
NtRp3633
(dp3634
g62
(dp3635
g70
I4
ssg71
g3629
sg64
(lp3636
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3637
asbasbasbag57
(g73
g59
NtRp3638
(dp3639
g62
(dp3640
sg71
g3556
sg64
(lp3641
g57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
sg71
g3638
sg64
(lp3645
g57
(g58
g59
NtRp3646
(dp3647
g62
(dp3648
g70
I4
ssg71
g3642
sg64
(lp3649
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3650
asbasbasbag57
(g73
g59
NtRp3651
(dp3652
g62
(dp3653
sg71
g3556
sg64
(lp3654
g57
(g78
g59
NtRp3655
(dp3656
g62
(dp3657
sg71
g3651
sg64
(lp3658
g57
(g58
g59
NtRp3659
(dp3660
g62
(dp3661
g70
I4
ssg71
g3655
sg64
(lp3662
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3663
asbasbasbag57
(g73
g59
NtRp3664
(dp3665
g62
(dp3666
sg71
g3556
sg64
(lp3667
g57
(g78
g59
NtRp3668
(dp3669
g62
(dp3670
sg71
g3664
sg64
(lp3671
g57
(g58
g59
NtRp3672
(dp3673
g62
(dp3674
g70
I4
ssg71
g3668
sg64
(lp3675
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3676
asbasbasbag57
(g73
g59
NtRp3677
(dp3678
g62
(dp3679
sg71
g3556
sg64
(lp3680
g57
(g78
g59
NtRp3681
(dp3682
g62
(dp3683
sg71
g3677
sg64
(lp3684
g57
(g58
g59
NtRp3685
(dp3686
g62
(dp3687
g70
I4
ssg71
g3681
sg64
(lp3688
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3689
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3690
(dp3691
g62
(dp3692
sg71
g3250
sg64
(lp3693
g57
(g78
g59
NtRp3694
(dp3695
g62
(dp3696
g82
g83
ssg71
g3690
sg64
(lp3697
S'flash'
p3698
asbag57
(g78
g59
NtRp3699
(dp3700
g62
(dp3701
g89
g90
ssg71
g3690
sg64
(lp3702
S':'
asbag57
(g78
g59
NtRp3703
(dp3704
g62
(dp3705
sg71
g3690
sg64
(lp3706
g57
(g58
g59
NtRp3707
(dp3708
g62
(dp3709
g70
I5
ssg71
g3703
sg64
(lp3710
S''
asbasbasbag57
(g73
g59
NtRp3711
(dp3712
g62
(dp3713
sg71
g3250
sg64
(lp3714
g57
(g78
g59
NtRp3715
(dp3716
g62
(dp3717
g82
g83
ssg71
g3711
sg64
(lp3718
S'generic_patterns'
p3719
asbag57
(g78
g59
NtRp3720
(dp3721
g62
(dp3722
g89
g90
ssg71
g3711
sg64
(lp3723
S':'
asbag57
(g78
g59
NtRp3724
(dp3725
g62
(dp3726
sg71
g3711
sg64
(lp3727
g57
(g58
g59
NtRp3728
(dp3729
g62
(dp3730
g70
I5
ssg71
g3724
sg64
(lp3731
g57
(g66
g59
NtRp3732
(dp3733
g62
(dp3734
g70
I4
ssg71
Nsg64
(lp3735
g57
(g73
g59
NtRp3736
(dp3737
g62
(dp3738
sg71
g3732
sg64
(lp3739
g57
(g78
g59
NtRp3740
(dp3741
g62
(dp3742
sg71
g3736
sg64
(lp3743
g57
(g58
g59
NtRp3744
(dp3745
g62
(dp3746
g70
I4
ssg71
g3740
sg64
(lp3747
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3748
(dp3749
g62
(dp3750
sg71
g3250
sg64
(lp3751
g57
(g78
g59
NtRp3752
(dp3753
g62
(dp3754
g82
g83
ssg71
g3748
sg64
(lp3755
S'google_analytics_id'
p3756
asbag57
(g78
g59
NtRp3757
(dp3758
g62
(dp3759
g89
g90
ssg71
g3748
sg64
(lp3760
S':'
asbag57
(g78
g59
NtRp3761
(dp3762
g62
(dp3763
sg71
g3748
sg64
(lp3764
g57
(g58
g59
NtRp3765
(dp3766
g62
(dp3767
g70
I5
ssg71
g3761
sg64
(lp3768
S'None'
p3769
asbasbasbag57
(g73
g59
NtRp3770
(dp3771
g62
(dp3772
sg71
g3250
sg64
(lp3773
g57
(g78
g59
NtRp3774
(dp3775
g62
(dp3776
g82
g83
ssg71
g3770
sg64
(lp3777
S'headers'
p3778
asbag57
(g78
g59
NtRp3779
(dp3780
g62
(dp3781
g89
g90
ssg71
g3770
sg64
(lp3782
S':'
asbag57
(g78
g59
NtRp3783
(dp3784
g62
(dp3785
sg71
g3770
sg64
(lp3786
g57
(g58
g59
NtRp3787
(dp3788
g62
(dp3789
g70
I5
ssg71
g3783
sg64
(lp3790
g57
(g66
g59
NtRp3791
(dp3792
g62
(dp3793
g70
I4
ssg71
Nsg64
(lp3794
g57
(g73
g59
NtRp3795
(dp3796
g62
(dp3797
sg71
g3791
sg64
(lp3798
g57
(g78
g59
NtRp3799
(dp3800
g62
(dp3801
g82
g83
ssg71
g3795
sg64
(lp3802
S'X-Powered-By'
p3803
asbag57
(g78
g59
NtRp3804
(dp3805
g62
(dp3806
g89
g90
ssg71
g3795
sg64
(lp3807
S':'
asbag57
(g78
g59
NtRp3808
(dp3809
g62
(dp3810
sg71
g3795
sg64
(lp3811
g57
(g58
g59
NtRp3812
(dp3813
g62
(dp3814
g70
I4
ssg71
g3808
sg64
(lp3815
S'web2py'
p3816
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3817
(dp3818
g62
(dp3819
sg71
g3250
sg64
(lp3820
g57
(g78
g59
NtRp3821
(dp3822
g62
(dp3823
g82
g83
ssg71
g3817
sg64
(lp3824
S'menu'
p3825
asbag57
(g78
g59
NtRp3826
(dp3827
g62
(dp3828
g89
g90
ssg71
g3817
sg64
(lp3829
S':'
asbag57
(g78
g59
NtRp3830
(dp3831
g62
(dp3832
sg71
g3817
sg64
(lp3833
g57
(g58
g59
NtRp3834
(dp3835
g62
(dp3836
g70
I5
ssg71
g3830
sg64
(lp3837
g57
(g66
g59
NtRp3838
(dp3839
g62
(dp3840
g70
I4
ssg71
Nsg64
(lp3841
g57
(g73
g59
NtRp3842
(dp3843
g62
(dp3844
sg71
g3838
sg64
(lp3845
g57
(g78
g59
NtRp3846
(dp3847
g62
(dp3848
sg71
g3842
sg64
(lp3849
g57
(g58
g59
NtRp3850
(dp3851
g62
(dp3852
g70
I4
ssg71
g3846
sg64
(lp3853
g57
(g66
g59
NtRp3854
(dp3855
g62
(dp3856
g70
I3
ssg71
Nsg64
(lp3857
g57
(g73
g59
NtRp3858
(dp3859
g62
(dp3860
sg71
g3854
sg64
(lp3861
g57
(g78
g59
NtRp3862
(dp3863
g62
(dp3864
sg71
g3858
sg64
(lp3865
g57
(g58
g59
NtRp3866
(dp3867
g62
(dp3868
g70
I3
ssg71
g3862
sg64
(lp3869
cgluon.languages
lazyT_unpickle
p3870
(S't\x04\x00\x00\x00Home'
tRp3871
asbasbasbag57
(g73
g59
NtRp3872
(dp3873
g62
(dp3874
sg71
g3854
sg64
(lp3875
g57
(g78
g59
NtRp3876
(dp3877
g62
(dp3878
sg71
g3872
sg64
(lp3879
g57
(g58
g59
NtRp3880
(dp3881
g62
(dp3882
g70
I3
ssg71
g3876
sg64
(lp3883
g100
asbasbasbag57
(g73
g59
NtRp3884
(dp3885
g62
(dp3886
sg71
g3854
sg64
(lp3887
g57
(g78
g59
NtRp3888
(dp3889
g62
(dp3890
sg71
g3884
sg64
(lp3891
g57
(g58
g59
NtRp3892
(dp3893
g62
(dp3894
g70
I3
ssg71
g3888
sg64
(lp3895
S'/DEV_bootstrap_ch/default/list_all_projects'
p3896
asbasbasbag57
(g73
g59
NtRp3897
(dp3898
g62
(dp3899
sg71
g3854
sg64
(lp3900
g57
(g78
g59
NtRp3901
(dp3902
g62
(dp3903
sg71
g3897
sg64
(lp3904
g57
(g58
g59
NtRp3905
(dp3906
g62
(dp3907
g70
I3
ssg71
g3901
sg64
(lp3908
g57
(g66
g59
NtRp3909
(dp3910
g62
(dp3911
g70
I2
ssg71
Nsg64
(lp3912
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3913
(dp3914
g62
(dp3915
sg71
g3250
sg64
(lp3916
g57
(g78
g59
NtRp3917
(dp3918
g62
(dp3919
g82
g83
ssg71
g3913
sg64
(lp3920
S'meta'
p3921
asbag57
(g78
g59
NtRp3922
(dp3923
g62
(dp3924
g89
g90
ssg71
g3913
sg64
(lp3925
S':'
asbag57
(g78
g59
NtRp3926
(dp3927
g62
(dp3928
sg71
g3913
sg64
(lp3929
g57
(g58
g59
NtRp3930
(dp3931
g62
(dp3932
g70
I5
ssg71
g3926
sg64
(lp3933
g57
(g66
g59
NtRp3934
(dp3935
g62
(dp3936
g70
I4
ssg71
Nsg64
(lp3937
g57
(g73
g59
NtRp3938
(dp3939
g62
(dp3940
sg71
g3934
sg64
(lp3941
g57
(g78
g59
NtRp3942
(dp3943
g62
(dp3944
g82
g83
ssg71
g3938
sg64
(lp3945
S'author'
p3946
asbag57
(g78
g59
NtRp3947
(dp3948
g62
(dp3949
g89
g90
ssg71
g3938
sg64
(lp3950
S':'
asbag57
(g78
g59
NtRp3951
(dp3952
g62
(dp3953
sg71
g3938
sg64
(lp3954
g57
(g58
g59
NtRp3955
(dp3956
g62
(dp3957
g70
I4
ssg71
g3951
sg64
(lp3958
S'Vikram Pudi <vikram@iiit.ac.in>'
p3959
asbasbasbag57
(g73
g59
NtRp3960
(dp3961
g62
(dp3962
sg71
g3934
sg64
(lp3963
g57
(g78
g59
NtRp3964
(dp3965
g62
(dp3966
g82
g83
ssg71
g3960
sg64
(lp3967
S'copyright'
p3968
asbag57
(g78
g59
NtRp3969
(dp3970
g62
(dp3971
g89
g90
ssg71
g3960
sg64
(lp3972
S':'
asbag57
(g78
g59
NtRp3973
(dp3974
g62
(dp3975
sg71
g3960
sg64
(lp3976
g57
(g58
g59
NtRp3977
(dp3978
g62
(dp3979
g70
I4
ssg71
g3973
sg64
(lp3980
S'Copyright 2011'
p3981
asbasbasbag57
(g73
g59
NtRp3982
(dp3983
g62
(dp3984
sg71
g3934
sg64
(lp3985
g57
(g78
g59
NtRp3986
(dp3987
g62
(dp3988
g82
g83
ssg71
g3982
sg64
(lp3989
S'description'
p3990
asbag57
(g78
g59
NtRp3991
(dp3992
g62
(dp3993
g89
g90
ssg71
g3982
sg64
(lp3994
S':'
asbag57
(g78
g59
NtRp3995
(dp3996
g62
(dp3997
sg71
g3982
sg64
(lp3998
g57
(g58
g59
NtRp3999
(dp4000
g62
(dp4001
g70
I4
ssg71
g3995
sg64
(lp4002
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4003
asbasbasbag57
(g73
g59
NtRp4004
(dp4005
g62
(dp4006
sg71
g3934
sg64
(lp4007
g57
(g78
g59
NtRp4008
(dp4009
g62
(dp4010
g82
g83
ssg71
g4004
sg64
(lp4011
S'generator'
p4012
asbag57
(g78
g59
NtRp4013
(dp4014
g62
(dp4015
g89
g90
ssg71
g4004
sg64
(lp4016
S':'
asbag57
(g78
g59
NtRp4017
(dp4018
g62
(dp4019
sg71
g4004
sg64
(lp4020
g57
(g58
g59
NtRp4021
(dp4022
g62
(dp4023
g70
I4
ssg71
g4017
sg64
(lp4024
S'Web2py Web Framework'
p4025
asbasbasbag57
(g73
g59
NtRp4026
(dp4027
g62
(dp4028
sg71
g3934
sg64
(lp4029
g57
(g78
g59
NtRp4030
(dp4031
g62
(dp4032
g82
g83
ssg71
g4026
sg64
(lp4033
S'keywords'
p4034
asbag57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
g89
g90
ssg71
g4026
sg64
(lp4038
S':'
asbag57
(g78
g59
NtRp4039
(dp4040
g62
(dp4041
sg71
g4026
sg64
(lp4042
g57
(g58
g59
NtRp4043
(dp4044
g62
(dp4045
g70
I4
ssg71
g4039
sg64
(lp4046
S'web2py, python, metabolome, metabolomics'
p4047
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g3250
sg64
(lp4051
g57
(g78
g59
NtRp4052
(dp4053
g62
(dp4054
g82
g83
ssg71
g4048
sg64
(lp4055
S'models_to_run'
p4056
asbag57
(g78
g59
NtRp4057
(dp4058
g62
(dp4059
g89
g90
ssg71
g4048
sg64
(lp4060
S':'
asbag57
(g78
g59
NtRp4061
(dp4062
g62
(dp4063
sg71
g4048
sg64
(lp4064
g57
(g58
g59
NtRp4065
(dp4066
g62
(dp4067
g70
I5
ssg71
g4061
sg64
(lp4068
g57
(g66
g59
NtRp4069
(dp4070
g62
(dp4071
g70
I4
ssg71
Nsg64
(lp4072
g57
(g73
g59
NtRp4073
(dp4074
g62
(dp4075
sg71
g4069
sg64
(lp4076
g57
(g78
g59
NtRp4077
(dp4078
g62
(dp4079
sg71
g4073
sg64
(lp4080
g57
(g58
g59
NtRp4081
(dp4082
g62
(dp4083
g70
I4
ssg71
g4077
sg64
(lp4084
S'^\\w+\\.py$'
p4085
asbasbasbag57
(g73
g59
NtRp4086
(dp4087
g62
(dp4088
sg71
g4069
sg64
(lp4089
g57
(g78
g59
NtRp4090
(dp4091
g62
(dp4092
sg71
g4086
sg64
(lp4093
g57
(g58
g59
NtRp4094
(dp4095
g62
(dp4096
g70
I4
ssg71
g4090
sg64
(lp4097
S'^default/\\w+\\.py$'
p4098
asbasbasbag57
(g73
g59
NtRp4099
(dp4100
g62
(dp4101
sg71
g4069
sg64
(lp4102
g57
(g78
g59
NtRp4103
(dp4104
g62
(dp4105
sg71
g4099
sg64
(lp4106
g57
(g58
g59
NtRp4107
(dp4108
g62
(dp4109
g70
I4
ssg71
g4103
sg64
(lp4110
S'^default/list_all_dev_projects/\\w+\\.py$'
p4111
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4112
(dp4113
g62
(dp4114
sg71
g3250
sg64
(lp4115
g57
(g78
g59
NtRp4116
(dp4117
g62
(dp4118
g82
g83
ssg71
g4112
sg64
(lp4119
S'postprocessing'
p4120
asbag57
(g78
g59
NtRp4121
(dp4122
g62
(dp4123
g89
g90
ssg71
g4112
sg64
(lp4124
S':'
asbag57
(g78
g59
NtRp4125
(dp4126
g62
(dp4127
sg71
g4112
sg64
(lp4128
g57
(g58
g59
NtRp4129
(dp4130
g62
(dp4131
g70
I5
ssg71
g4125
sg64
(lp4132
g57
(g66
g59
NtRp4133
(dp4134
g62
(dp4135
g70
I4
ssg71
Nsg64
(lp4136
sbasbasbasbag57
(g73
g59
NtRp4137
(dp4138
g62
(dp4139
sg71
g3250
sg64
(lp4140
g57
(g78
g59
NtRp4141
(dp4142
g62
(dp4143
g82
g83
ssg71
g4137
sg64
(lp4144
S'session_cookie_expires'
p4145
asbag57
(g78
g59
NtRp4146
(dp4147
g62
(dp4148
g89
g90
ssg71
g4137
sg64
(lp4149
S':'
asbag57
(g78
g59
NtRp4150
(dp4151
g62
(dp4152
sg71
g4137
sg64
(lp4153
g57
(g58
g59
NtRp4154
(dp4155
g62
(dp4156
g70
I5
ssg71
g4150
sg64
(lp4157
S'None'
p4158
asbasbasbag57
(g73
g59
NtRp4159
(dp4160
g62
(dp4161
sg71
g3250
sg64
(lp4162
g57
(g78
g59
NtRp4163
(dp4164
g62
(dp4165
g82
g83
ssg71
g4159
sg64
(lp4166
S'session_data_name'
p4167
asbag57
(g78
g59
NtRp4168
(dp4169
g62
(dp4170
g89
g90
ssg71
g4159
sg64
(lp4171
S':'
asbag57
(g78
g59
NtRp4172
(dp4173
g62
(dp4174
sg71
g4159
sg64
(lp4175
g57
(g58
g59
NtRp4176
(dp4177
g62
(dp4178
g70
I5
ssg71
g4172
sg64
(lp4179
S'session_data_dev_bootstrap_ch'
p4180
asbasbasbag57
(g73
g59
NtRp4181
(dp4182
g62
(dp4183
sg71
g3250
sg64
(lp4184
g57
(g78
g59
NtRp4185
(dp4186
g62
(dp4187
g82
g83
ssg71
g4181
sg64
(lp4188
S'session_file'
p4189
asbag57
(g78
g59
NtRp4190
(dp4191
g62
(dp4192
g89
g90
ssg71
g4181
sg64
(lp4193
S':'
asbag57
(g78
g59
NtRp4194
(dp4195
g62
(dp4196
sg71
g4181
sg64
(lp4197
g57
(g58
g59
NtRp4198
(dp4199
g62
(dp4200
g70
I5
ssg71
g4194
sg64
(lp4201
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c', mode 'rb+' at 0xade59910>"
p4202
asbasbasbag57
(g73
g59
NtRp4203
(dp4204
g62
(dp4205
sg71
g3250
sg64
(lp4206
g57
(g78
g59
NtRp4207
(dp4208
g62
(dp4209
g82
g83
ssg71
g4203
sg64
(lp4210
S'session_filename'
p4211
asbag57
(g78
g59
NtRp4212
(dp4213
g62
(dp4214
g89
g90
ssg71
g4203
sg64
(lp4215
S':'
asbag57
(g78
g59
NtRp4216
(dp4217
g62
(dp4218
sg71
g4203
sg64
(lp4219
g57
(g58
g59
NtRp4220
(dp4221
g62
(dp4222
g70
I5
ssg71
g4216
sg64
(lp4223
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p4224
asbasbasbag57
(g73
g59
NtRp4225
(dp4226
g62
(dp4227
sg71
g3250
sg64
(lp4228
g57
(g78
g59
NtRp4229
(dp4230
g62
(dp4231
g82
g83
ssg71
g4225
sg64
(lp4232
S'session_id'
p4233
asbag57
(g78
g59
NtRp4234
(dp4235
g62
(dp4236
g89
g90
ssg71
g4225
sg64
(lp4237
S':'
asbag57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4225
sg64
(lp4241
g57
(g58
g59
NtRp4242
(dp4243
g62
(dp4244
g70
I5
ssg71
g4238
sg64
(lp4245
g538
asbasbasbag57
(g73
g59
NtRp4246
(dp4247
g62
(dp4248
sg71
g3250
sg64
(lp4249
g57
(g78
g59
NtRp4250
(dp4251
g62
(dp4252
g82
g83
ssg71
g4246
sg64
(lp4253
S'session_id_name'
p4254
asbag57
(g78
g59
NtRp4255
(dp4256
g62
(dp4257
g89
g90
ssg71
g4246
sg64
(lp4258
S':'
asbag57
(g78
g59
NtRp4259
(dp4260
g62
(dp4261
sg71
g4246
sg64
(lp4262
g57
(g58
g59
NtRp4263
(dp4264
g62
(dp4265
g70
I5
ssg71
g4259
sg64
(lp4266
g3307
asbasbasbag57
(g73
g59
NtRp4267
(dp4268
g62
(dp4269
sg71
g3250
sg64
(lp4270
g57
(g78
g59
NtRp4271
(dp4272
g62
(dp4273
g82
g83
ssg71
g4267
sg64
(lp4274
S'session_locked'
p4275
asbag57
(g78
g59
NtRp4276
(dp4277
g62
(dp4278
g89
g90
ssg71
g4267
sg64
(lp4279
S':'
asbag57
(g78
g59
NtRp4280
(dp4281
g62
(dp4282
sg71
g4267
sg64
(lp4283
g57
(g58
g59
NtRp4284
(dp4285
g62
(dp4286
g70
I5
ssg71
g4280
sg64
(lp4287
g1670
asbasbasbag57
(g73
g59
NtRp4288
(dp4289
g62
(dp4290
sg71
g3250
sg64
(lp4291
g57
(g78
g59
NtRp4292
(dp4293
g62
(dp4294
g82
g83
ssg71
g4288
sg64
(lp4295
S'session_new'
p4296
asbag57
(g78
g59
NtRp4297
(dp4298
g62
(dp4299
g89
g90
ssg71
g4288
sg64
(lp4300
S':'
asbag57
(g78
g59
NtRp4301
(dp4302
g62
(dp4303
sg71
g4288
sg64
(lp4304
g57
(g58
g59
NtRp4305
(dp4306
g62
(dp4307
g70
I5
ssg71
g4301
sg64
(lp4308
g100
asbasbasbag57
(g73
g59
NtRp4309
(dp4310
g62
(dp4311
sg71
g3250
sg64
(lp4312
g57
(g78
g59
NtRp4313
(dp4314
g62
(dp4315
g82
g83
ssg71
g4309
sg64
(lp4316
S'session_storage_type'
p4317
asbag57
(g78
g59
NtRp4318
(dp4319
g62
(dp4320
g89
g90
ssg71
g4309
sg64
(lp4321
S':'
asbag57
(g78
g59
NtRp4322
(dp4323
g62
(dp4324
sg71
g4309
sg64
(lp4325
g57
(g58
g59
NtRp4326
(dp4327
g62
(dp4328
g70
I5
ssg71
g4322
sg64
(lp4329
g3123
asbasbasbag57
(g73
g59
NtRp4330
(dp4331
g62
(dp4332
sg71
g3250
sg64
(lp4333
g57
(g78
g59
NtRp4334
(dp4335
g62
(dp4336
g82
g83
ssg71
g4330
sg64
(lp4337
S'status'
p4338
asbag57
(g78
g59
NtRp4339
(dp4340
g62
(dp4341
g89
g90
ssg71
g4330
sg64
(lp4342
S':'
asbag57
(g78
g59
NtRp4343
(dp4344
g62
(dp4345
sg71
g4330
sg64
(lp4346
g57
(g58
g59
NtRp4347
(dp4348
g62
(dp4349
g70
I5
ssg71
g4343
sg64
(lp4350
S'200'
p4351
asbasbasbag57
(g73
g59
NtRp4352
(dp4353
g62
(dp4354
sg71
g3250
sg64
(lp4355
g57
(g78
g59
NtRp4356
(dp4357
g62
(dp4358
g82
g83
ssg71
g4352
sg64
(lp4359
S'subtitle'
p4360
asbag57
(g78
g59
NtRp4361
(dp4362
g62
(dp4363
g89
g90
ssg71
g4352
sg64
(lp4364
S':'
asbag57
(g78
g59
NtRp4365
(dp4366
g62
(dp4367
sg71
g4352
sg64
(lp4368
g57
(g58
g59
NtRp4369
(dp4370
g62
(dp4371
g70
I5
ssg71
g4365
sg64
(lp4372
g3870
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4373
asbasbasbag57
(g73
g59
NtRp4374
(dp4375
g62
(dp4376
sg71
g3250
sg64
(lp4377
g57
(g78
g59
NtRp4378
(dp4379
g62
(dp4380
g82
g83
ssg71
g4374
sg64
(lp4381
S'title'
p4382
asbag57
(g78
g59
NtRp4383
(dp4384
g62
(dp4385
g89
g90
ssg71
g4374
sg64
(lp4386
S':'
asbag57
(g78
g59
NtRp4387
(dp4388
g62
(dp4389
sg71
g4374
sg64
(lp4390
g57
(g58
g59
NtRp4391
(dp4392
g62
(dp4393
g70
I5
ssg71
g4387
sg64
(lp4394
g122
asbasbasbag57
(g73
g59
NtRp4395
(dp4396
g62
(dp4397
sg71
g3250
sg64
(lp4398
g57
(g78
g59
NtRp4399
(dp4400
g62
(dp4401
g82
g83
ssg71
g4395
sg64
(lp4402
S'view'
p4403
asbag57
(g78
g59
NtRp4404
(dp4405
g62
(dp4406
g89
g90
ssg71
g4395
sg64
(lp4407
S':'
asbag57
(g78
g59
NtRp4408
(dp4409
g62
(dp4410
sg71
g4395
sg64
(lp4411
g57
(g58
g59
NtRp4412
(dp4413
g62
(dp4414
g70
I5
ssg71
g4408
sg64
(lp4415
S'default/list_all_dev_projects.html'
p4416
asbasbasbasbasbsS'locals'
p4417
(dp4418
ssS'traceback'
p4419
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1141, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 294, in list_all_dev_projects\n    db.sample.experimentalist.default=auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p4420
s.