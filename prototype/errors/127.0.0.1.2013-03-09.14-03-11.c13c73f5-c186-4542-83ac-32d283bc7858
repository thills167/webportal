(dp1
S'output'
p2
S"<type 'exceptions.UnboundLocalError'> local variable 'sam' referenced before assignment"
p3
sS'layer'
p4
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.approval_status==1)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\n@auth.requires_login()\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\n@auth.requires_login()\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n    if len(request.args) == 2:\n        response.flash = \'Project Succesfully \' + request.args[-2]\n       \n    users=db(db.role.approval_status==1)(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\n@auth.requires_login()\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    dev_projects = db(db.project.project_status == 0)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter()\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\n@auth.requires_login()\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.experiment.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    db.sample.parent.readable = False\n    db.sample.experiment.readable = False\n    db.experiment.experimentalist.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n    orderby_dict ={\'sample\':db.sample.name} \n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n\t      # lambda row: A(\'copy\',_href=URL("default","replicate",args=request.args[:]+[row.id])),\\\n\t       lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n\t       lambda row: A(\'biosource_\'+tes(row.id,\'biosource\'),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n\t       lambda row: A(\'PGC_\'+tes(row.id,\'plant_growth_condition\'),_href=URL("default","router",args=getargs(row.id,args,"plant_growth_condition"))), \\\n\t       lambda row: A(\'treatment_\'+tes(row.id,\'treatments\'),_href=URL("default","router",args=getargs(row.id,args,"treatments"))), \\\n\t       lambda row: A(\'harvest_\'+tes(row.id,\'harvests\'),_href=URL("default","router",args=getargs(row.id,args,"harvests"))), \\\n\t       lambda row: A(\'Ext_\'+tes(row.id,\'extraction_preparation\'),_href=URL("default","router",args=getargs(row.id,args,"extraction_preparation"))), \\\n\t       lambda row: A(\'GC_\'+tes(row.id,\'gas_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"gas_chromatography"))), \\\n\t       lambda row: A(\'LC_\'+tes(row.id,\'liquid_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"liquid_chromatography"))), \\\n\t       lambda row: A(\'MS_\'+tes(row.id,\'mass_spectroscopy\'),_href=URL("default","router",args=getargs(row.id,args,"mass_spectroscopy"))), \\\n\t       lambda row: A(\'spectrophotometry_\'+tes(row.id,\'spectrophotometry\'),_href=URL("default","router",args=getargs(row.id,args,"spectrophotometry")))]\n    links={\'sample\':l1}    \n    \n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    \n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,orderby=orderby_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a,table):\n    if db(db[table].sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef copy(sid):\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=sid)\n    else:   \n       db(db.template.user == auth.user.id).update(sample=sid)\n    #redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                sam=db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]+[\'edit\',\'sample\',sam.id]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'spectrophotometry\' in l:\n          redirect(URL(\'insert_spectrophotometry\',args = l))\n    elif \'sample\' in l and \'new\' in l:\n          samp = db(db.sample.experimentalist==auth.user.id).select().last()\n          if samp:\n           copy(samp.id)\n           return()\n          else: \n           return() \n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    elif \'project\' in l and \'view\' in l and \'experiment\' not in l:\n        redirect(URL(\'project_viewer\',args=l[-1]))\n        \n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'wait for Coordinator\\\'s approval\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1",project_publication_date = now)\n     redirect(URL(\'project_viewer\',args = [\'Published\',eid]))\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0",project_publication_date= None)\n     redirect(URL(\'project_viewer\',args = [\'Unpublished\',eid]))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  if False:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n      rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n      count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n      if count1 > 0:\n       row = rows[0]\n       for fieldname in db.raw_data_storage_information.fields:\n        if fieldname!=\'id\': \n         db.raw_data_storage_information[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  if \'clear\' not in request.args and \'new\' in request.args:    \n   trows = db(db.template.user==auth.user.id).select()\n   count = db(db.template.user==auth.user.id).count()\n   if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  elif \'clear\' in request.args: \n    request.args.pop()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(duplicate)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.UnboundLocalError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.UnboundLocalError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.UnboundLocalError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.UnboundLocalError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.UnboundLocalError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.UnboundLocalError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.UnboundLocalError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.UnboundLocalError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.UnboundLocalError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.UnboundLocalError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.UnboundLocalError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.UnboundLocalError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.UnboundLocalError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.UnboundLocalError object>"
p41
sS'args'
p42
S'("local variable \'sam\' referenced before assignment",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.UnboundLocalError object>'
p47
sS'__doc__'
p48
S"'Local name referenced but not bound to a value.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.UnboundLocalError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"local variable 'sam' referenced before assignment"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g143
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
sg71
g210
sg64
(lp217
g57
(g58
g59
NtRp218
(dp219
g62
(dp220
g70
I4
ssg71
g214
sg64
(lp221
S'replicate'
p222
asbasbasbag57
(g73
g59
NtRp223
(dp224
g62
(dp225
sg71
g143
sg64
(lp226
g57
(g78
g59
NtRp227
(dp228
g62
(dp229
sg71
g223
sg64
(lp230
g57
(g58
g59
NtRp231
(dp232
g62
(dp233
g70
I4
ssg71
g227
sg64
(lp234
S'3'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp235
(dp236
g62
(dp237
sg71
g67
sg64
(lp238
g57
(g78
g59
NtRp239
(dp240
g62
(dp241
g82
g83
ssg71
g235
sg64
(lp242
S'body'
p243
asbag57
(g78
g59
NtRp244
(dp245
g62
(dp246
g89
g90
ssg71
g235
sg64
(lp247
S':'
asbag57
(g78
g59
NtRp248
(dp249
g62
(dp250
sg71
g235
sg64
(lp251
g57
(g58
g59
NtRp252
(dp253
g62
(dp254
g70
I5
ssg71
g248
sg64
(lp255
S'<cStringIO.StringO object at 0xaf9ba1a0>'
p256
asbasbasbag57
(g73
g59
NtRp257
(dp258
g62
(dp259
sg71
g67
sg64
(lp260
g57
(g78
g59
NtRp261
(dp262
g62
(dp263
g82
g83
ssg71
g257
sg64
(lp264
S'cid'
p265
asbag57
(g78
g59
NtRp266
(dp267
g62
(dp268
g89
g90
ssg71
g257
sg64
(lp269
S':'
asbag57
(g78
g59
NtRp270
(dp271
g62
(dp272
sg71
g257
sg64
(lp273
g57
(g58
g59
NtRp274
(dp275
g62
(dp276
g70
I5
ssg71
g270
sg64
(lp277
S'None'
p278
asbasbasbag57
(g73
g59
NtRp279
(dp280
g62
(dp281
sg71
g67
sg64
(lp282
g57
(g78
g59
NtRp283
(dp284
g62
(dp285
g82
g83
ssg71
g279
sg64
(lp286
S'client'
p287
asbag57
(g78
g59
NtRp288
(dp289
g62
(dp290
g89
g90
ssg71
g279
sg64
(lp291
S':'
asbag57
(g78
g59
NtRp292
(dp293
g62
(dp294
sg71
g279
sg64
(lp295
g57
(g58
g59
NtRp296
(dp297
g62
(dp298
g70
I5
ssg71
g292
sg64
(lp299
S'127.0.0.1'
p300
asbasbasbag57
(g73
g59
NtRp301
(dp302
g62
(dp303
sg71
g67
sg64
(lp304
g57
(g78
g59
NtRp305
(dp306
g62
(dp307
g82
g83
ssg71
g301
sg64
(lp308
S'controller'
p309
asbag57
(g78
g59
NtRp310
(dp311
g62
(dp312
g89
g90
ssg71
g301
sg64
(lp313
S':'
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
sg71
g301
sg64
(lp317
g57
(g58
g59
NtRp318
(dp319
g62
(dp320
g70
I5
ssg71
g314
sg64
(lp321
S'default'
p322
asbasbasbag57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g67
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'cookies'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I5
ssg71
g336
sg64
(lp343
g57
(g66
g59
NtRp344
(dp345
g62
(dp346
g70
I4
ssg71
Nsg64
(lp347
g57
(g73
g59
NtRp348
(dp349
g62
(dp350
sg71
g344
sg64
(lp351
g57
(g78
g59
NtRp352
(dp353
g62
(dp354
g82
g83
ssg71
g348
sg64
(lp355
S'session_id_admin'
p356
asbag57
(g78
g59
NtRp357
(dp358
g62
(dp359
g89
g90
ssg71
g348
sg64
(lp360
S':'
asbag57
(g78
g59
NtRp361
(dp362
g62
(dp363
sg71
g348
sg64
(lp364
g57
(g58
g59
NtRp365
(dp366
g62
(dp367
g70
I4
ssg71
g361
sg64
(lp368
S'127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3'
p369
ag57
(g66
g59
NtRp370
(dp371
g62
(dp372
g70
I3
ssg71
Nsg64
(lp373
g57
(g73
g59
NtRp374
(dp375
g62
(dp376
sg71
g370
sg64
(lp377
g57
(g78
g59
NtRp378
(dp379
g62
(dp380
g82
g83
ssg71
g374
sg64
(lp381
S'comment'
p382
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
g89
g90
ssg71
g374
sg64
(lp386
S':'
asbag57
(g78
g59
NtRp387
(dp388
g62
(dp389
sg71
g374
sg64
(lp390
g57
(g58
g59
NtRp391
(dp392
g62
(dp393
g70
I3
ssg71
g387
sg64
(lp394
S''
asbasbasbag57
(g73
g59
NtRp395
(dp396
g62
(dp397
sg71
g370
sg64
(lp398
g57
(g78
g59
NtRp399
(dp400
g62
(dp401
g82
g83
ssg71
g395
sg64
(lp402
S'domain'
p403
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
g89
g90
ssg71
g395
sg64
(lp407
S':'
asbag57
(g78
g59
NtRp408
(dp409
g62
(dp410
sg71
g395
sg64
(lp411
g57
(g58
g59
NtRp412
(dp413
g62
(dp414
g70
I3
ssg71
g408
sg64
(lp415
S''
asbasbasbag57
(g73
g59
NtRp416
(dp417
g62
(dp418
sg71
g370
sg64
(lp419
g57
(g78
g59
NtRp420
(dp421
g62
(dp422
g82
g83
ssg71
g416
sg64
(lp423
S'expires'
p424
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
g89
g90
ssg71
g416
sg64
(lp428
S':'
asbag57
(g78
g59
NtRp429
(dp430
g62
(dp431
sg71
g416
sg64
(lp432
g57
(g58
g59
NtRp433
(dp434
g62
(dp435
g70
I3
ssg71
g429
sg64
(lp436
S''
asbasbasbag57
(g73
g59
NtRp437
(dp438
g62
(dp439
sg71
g370
sg64
(lp440
g57
(g78
g59
NtRp441
(dp442
g62
(dp443
g82
g83
ssg71
g437
sg64
(lp444
S'httponly'
p445
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
g89
g90
ssg71
g437
sg64
(lp449
S':'
asbag57
(g78
g59
NtRp450
(dp451
g62
(dp452
sg71
g437
sg64
(lp453
g57
(g58
g59
NtRp454
(dp455
g62
(dp456
g70
I3
ssg71
g450
sg64
(lp457
S''
asbasbasbag57
(g73
g59
NtRp458
(dp459
g62
(dp460
sg71
g370
sg64
(lp461
g57
(g78
g59
NtRp462
(dp463
g62
(dp464
g82
g83
ssg71
g458
sg64
(lp465
S'max-age'
p466
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
g89
g90
ssg71
g458
sg64
(lp470
S':'
asbag57
(g78
g59
NtRp471
(dp472
g62
(dp473
sg71
g458
sg64
(lp474
g57
(g58
g59
NtRp475
(dp476
g62
(dp477
g70
I3
ssg71
g471
sg64
(lp478
S''
asbasbasbag57
(g73
g59
NtRp479
(dp480
g62
(dp481
sg71
g370
sg64
(lp482
g57
(g78
g59
NtRp483
(dp484
g62
(dp485
g82
g83
ssg71
g479
sg64
(lp486
S'path'
p487
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
g89
g90
ssg71
g479
sg64
(lp491
S':'
asbag57
(g78
g59
NtRp492
(dp493
g62
(dp494
sg71
g479
sg64
(lp495
g57
(g58
g59
NtRp496
(dp497
g62
(dp498
g70
I3
ssg71
g492
sg64
(lp499
S''
asbasbasbag57
(g73
g59
NtRp500
(dp501
g62
(dp502
sg71
g370
sg64
(lp503
g57
(g78
g59
NtRp504
(dp505
g62
(dp506
g82
g83
ssg71
g500
sg64
(lp507
S'secure'
p508
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
g89
g90
ssg71
g500
sg64
(lp512
S':'
asbag57
(g78
g59
NtRp513
(dp514
g62
(dp515
sg71
g500
sg64
(lp516
g57
(g58
g59
NtRp517
(dp518
g62
(dp519
g70
I3
ssg71
g513
sg64
(lp520
S''
asbasbasbag57
(g73
g59
NtRp521
(dp522
g62
(dp523
sg71
g370
sg64
(lp524
g57
(g78
g59
NtRp525
(dp526
g62
(dp527
g82
g83
ssg71
g521
sg64
(lp528
S'version'
p529
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
g89
g90
ssg71
g521
sg64
(lp533
S':'
asbag57
(g78
g59
NtRp534
(dp535
g62
(dp536
sg71
g521
sg64
(lp537
g57
(g58
g59
NtRp538
(dp539
g62
(dp540
g70
I3
ssg71
g534
sg64
(lp541
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp542
(dp543
g62
(dp544
sg71
g344
sg64
(lp545
g57
(g78
g59
NtRp546
(dp547
g62
(dp548
g82
g83
ssg71
g542
sg64
(lp549
S'session_id_dev_bootstrap_ch'
p550
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g542
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g542
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I4
ssg71
g555
sg64
(lp562
S'127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p563
ag57
(g66
g59
NtRp564
(dp565
g62
(dp566
g70
I3
ssg71
Nsg64
(lp567
g57
(g73
g59
NtRp568
(dp569
g62
(dp570
sg71
g564
sg64
(lp571
g57
(g78
g59
NtRp572
(dp573
g62
(dp574
g82
g83
ssg71
g568
sg64
(lp575
g382
asbag57
(g78
g59
NtRp576
(dp577
g62
(dp578
g89
g90
ssg71
g568
sg64
(lp579
S':'
asbag57
(g78
g59
NtRp580
(dp581
g62
(dp582
sg71
g568
sg64
(lp583
g57
(g58
g59
NtRp584
(dp585
g62
(dp586
g70
I3
ssg71
g580
sg64
(lp587
S''
asbasbasbag57
(g73
g59
NtRp588
(dp589
g62
(dp590
sg71
g564
sg64
(lp591
g57
(g78
g59
NtRp592
(dp593
g62
(dp594
g82
g83
ssg71
g588
sg64
(lp595
g403
asbag57
(g78
g59
NtRp596
(dp597
g62
(dp598
g89
g90
ssg71
g588
sg64
(lp599
S':'
asbag57
(g78
g59
NtRp600
(dp601
g62
(dp602
sg71
g588
sg64
(lp603
g57
(g58
g59
NtRp604
(dp605
g62
(dp606
g70
I3
ssg71
g600
sg64
(lp607
S''
asbasbasbag57
(g73
g59
NtRp608
(dp609
g62
(dp610
sg71
g564
sg64
(lp611
g57
(g78
g59
NtRp612
(dp613
g62
(dp614
g82
g83
ssg71
g608
sg64
(lp615
g424
asbag57
(g78
g59
NtRp616
(dp617
g62
(dp618
g89
g90
ssg71
g608
sg64
(lp619
S':'
asbag57
(g78
g59
NtRp620
(dp621
g62
(dp622
sg71
g608
sg64
(lp623
g57
(g58
g59
NtRp624
(dp625
g62
(dp626
g70
I3
ssg71
g620
sg64
(lp627
S''
asbasbasbag57
(g73
g59
NtRp628
(dp629
g62
(dp630
sg71
g564
sg64
(lp631
g57
(g78
g59
NtRp632
(dp633
g62
(dp634
g82
g83
ssg71
g628
sg64
(lp635
g445
asbag57
(g78
g59
NtRp636
(dp637
g62
(dp638
g89
g90
ssg71
g628
sg64
(lp639
S':'
asbag57
(g78
g59
NtRp640
(dp641
g62
(dp642
sg71
g628
sg64
(lp643
g57
(g58
g59
NtRp644
(dp645
g62
(dp646
g70
I3
ssg71
g640
sg64
(lp647
S''
asbasbasbag57
(g73
g59
NtRp648
(dp649
g62
(dp650
sg71
g564
sg64
(lp651
g57
(g78
g59
NtRp652
(dp653
g62
(dp654
g82
g83
ssg71
g648
sg64
(lp655
g466
asbag57
(g78
g59
NtRp656
(dp657
g62
(dp658
g89
g90
ssg71
g648
sg64
(lp659
S':'
asbag57
(g78
g59
NtRp660
(dp661
g62
(dp662
sg71
g648
sg64
(lp663
g57
(g58
g59
NtRp664
(dp665
g62
(dp666
g70
I3
ssg71
g660
sg64
(lp667
S''
asbasbasbag57
(g73
g59
NtRp668
(dp669
g62
(dp670
sg71
g564
sg64
(lp671
g57
(g78
g59
NtRp672
(dp673
g62
(dp674
g82
g83
ssg71
g668
sg64
(lp675
g487
asbag57
(g78
g59
NtRp676
(dp677
g62
(dp678
g89
g90
ssg71
g668
sg64
(lp679
S':'
asbag57
(g78
g59
NtRp680
(dp681
g62
(dp682
sg71
g668
sg64
(lp683
g57
(g58
g59
NtRp684
(dp685
g62
(dp686
g70
I3
ssg71
g680
sg64
(lp687
S''
asbasbasbag57
(g73
g59
NtRp688
(dp689
g62
(dp690
sg71
g564
sg64
(lp691
g57
(g78
g59
NtRp692
(dp693
g62
(dp694
g82
g83
ssg71
g688
sg64
(lp695
g508
asbag57
(g78
g59
NtRp696
(dp697
g62
(dp698
g89
g90
ssg71
g688
sg64
(lp699
S':'
asbag57
(g78
g59
NtRp700
(dp701
g62
(dp702
sg71
g688
sg64
(lp703
g57
(g58
g59
NtRp704
(dp705
g62
(dp706
g70
I3
ssg71
g700
sg64
(lp707
S''
asbasbasbag57
(g73
g59
NtRp708
(dp709
g62
(dp710
sg71
g564
sg64
(lp711
g57
(g78
g59
NtRp712
(dp713
g62
(dp714
g82
g83
ssg71
g708
sg64
(lp715
g529
asbag57
(g78
g59
NtRp716
(dp717
g62
(dp718
g89
g90
ssg71
g708
sg64
(lp719
S':'
asbag57
(g78
g59
NtRp720
(dp721
g62
(dp722
sg71
g708
sg64
(lp723
g57
(g58
g59
NtRp724
(dp725
g62
(dp726
g70
I3
ssg71
g720
sg64
(lp727
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp728
(dp729
g62
(dp730
sg71
g67
sg64
(lp731
g57
(g78
g59
NtRp732
(dp733
g62
(dp734
g82
g83
ssg71
g728
sg64
(lp735
S'env'
p736
asbag57
(g78
g59
NtRp737
(dp738
g62
(dp739
g89
g90
ssg71
g728
sg64
(lp740
S':'
asbag57
(g78
g59
NtRp741
(dp742
g62
(dp743
sg71
g728
sg64
(lp744
g57
(g58
g59
NtRp745
(dp746
g62
(dp747
g70
I5
ssg71
g741
sg64
(lp748
g57
(g66
g59
NtRp749
(dp750
g62
(dp751
g70
I4
ssg71
Nsg64
(lp752
g57
(g73
g59
NtRp753
(dp754
g62
(dp755
sg71
g749
sg64
(lp756
g57
(g78
g59
NtRp757
(dp758
g62
(dp759
g82
g83
ssg71
g753
sg64
(lp760
S'app_folders'
p761
asbag57
(g78
g59
NtRp762
(dp763
g62
(dp764
g89
g90
ssg71
g753
sg64
(lp765
S':'
asbag57
(g78
g59
NtRp766
(dp767
g62
(dp768
sg71
g753
sg64
(lp769
g57
(g58
g59
NtRp770
(dp771
g62
(dp772
g70
I4
ssg71
g766
sg64
(lp773
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p774
asbasbasbag57
(g73
g59
NtRp775
(dp776
g62
(dp777
sg71
g749
sg64
(lp778
g57
(g78
g59
NtRp779
(dp780
g62
(dp781
g82
g83
ssg71
g775
sg64
(lp782
S'applications_parent'
p783
asbag57
(g78
g59
NtRp784
(dp785
g62
(dp786
g89
g90
ssg71
g775
sg64
(lp787
S':'
asbag57
(g78
g59
NtRp788
(dp789
g62
(dp790
sg71
g775
sg64
(lp791
g57
(g58
g59
NtRp792
(dp793
g62
(dp794
g70
I4
ssg71
g788
sg64
(lp795
S'/home/anil/Downloads/web2py'
p796
asbasbasbag57
(g73
g59
NtRp797
(dp798
g62
(dp799
sg71
g749
sg64
(lp800
g57
(g78
g59
NtRp801
(dp802
g62
(dp803
g82
g83
ssg71
g797
sg64
(lp804
S'cmd_args'
p805
asbag57
(g78
g59
NtRp806
(dp807
g62
(dp808
g89
g90
ssg71
g797
sg64
(lp809
S':'
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
sg71
g797
sg64
(lp813
g57
(g58
g59
NtRp814
(dp815
g62
(dp816
g70
I4
ssg71
g810
sg64
(lp817
g57
(g66
g59
NtRp818
(dp819
g62
(dp820
g70
I3
ssg71
Nsg64
(lp821
sbasbasbasbag57
(g73
g59
NtRp822
(dp823
g62
(dp824
sg71
g749
sg64
(lp825
g57
(g78
g59
NtRp826
(dp827
g62
(dp828
g82
g83
ssg71
g822
sg64
(lp829
S'cmd_options'
p830
asbag57
(g78
g59
NtRp831
(dp832
g62
(dp833
g89
g90
ssg71
g822
sg64
(lp834
S':'
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
sg71
g822
sg64
(lp838
g57
(g58
g59
NtRp839
(dp840
g62
(dp841
g70
I4
ssg71
g835
sg64
(lp842
S"<Values at 0x9e1a0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p843
asbasbasbag57
(g73
g59
NtRp844
(dp845
g62
(dp846
sg71
g749
sg64
(lp847
g57
(g78
g59
NtRp848
(dp849
g62
(dp850
g82
g83
ssg71
g844
sg64
(lp851
S'db_sessions'
p852
asbag57
(g78
g59
NtRp853
(dp854
g62
(dp855
g89
g90
ssg71
g844
sg64
(lp856
S':'
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
sg71
g844
sg64
(lp860
g57
(g58
g59
NtRp861
(dp862
g62
(dp863
g70
I4
ssg71
g857
sg64
(lp864
S'set([])'
p865
asbasbasbag57
(g73
g59
NtRp866
(dp867
g62
(dp868
sg71
g749
sg64
(lp869
g57
(g78
g59
NtRp870
(dp871
g62
(dp872
g82
g83
ssg71
g866
sg64
(lp873
S'debugging'
p874
asbag57
(g78
g59
NtRp875
(dp876
g62
(dp877
g89
g90
ssg71
g866
sg64
(lp878
S':'
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
sg71
g866
sg64
(lp882
g57
(g58
g59
NtRp883
(dp884
g62
(dp885
g70
I4
ssg71
g879
sg64
(lp886
g100
asbasbasbag57
(g73
g59
NtRp887
(dp888
g62
(dp889
sg71
g749
sg64
(lp890
g57
(g78
g59
NtRp891
(dp892
g62
(dp893
g82
g83
ssg71
g887
sg64
(lp894
S'gluon_parent'
p895
asbag57
(g78
g59
NtRp896
(dp897
g62
(dp898
g89
g90
ssg71
g887
sg64
(lp899
S':'
asbag57
(g78
g59
NtRp900
(dp901
g62
(dp902
sg71
g887
sg64
(lp903
g57
(g58
g59
NtRp904
(dp905
g62
(dp906
g70
I4
ssg71
g900
sg64
(lp907
S'/home/anil/Downloads/web2py'
p908
asbasbasbag57
(g73
g59
NtRp909
(dp910
g62
(dp911
sg71
g749
sg64
(lp912
g57
(g78
g59
NtRp913
(dp914
g62
(dp915
g82
g83
ssg71
g909
sg64
(lp916
S'http_accept'
p917
asbag57
(g78
g59
NtRp918
(dp919
g62
(dp920
g89
g90
ssg71
g909
sg64
(lp921
S':'
asbag57
(g78
g59
NtRp922
(dp923
g62
(dp924
sg71
g909
sg64
(lp925
g57
(g58
g59
NtRp926
(dp927
g62
(dp928
g70
I4
ssg71
g922
sg64
(lp929
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p930
asbasbasbag57
(g73
g59
NtRp931
(dp932
g62
(dp933
sg71
g749
sg64
(lp934
g57
(g78
g59
NtRp935
(dp936
g62
(dp937
g82
g83
ssg71
g931
sg64
(lp938
S'http_accept_charset'
p939
asbag57
(g78
g59
NtRp940
(dp941
g62
(dp942
g89
g90
ssg71
g931
sg64
(lp943
S':'
asbag57
(g78
g59
NtRp944
(dp945
g62
(dp946
sg71
g931
sg64
(lp947
g57
(g58
g59
NtRp948
(dp949
g62
(dp950
g70
I4
ssg71
g944
sg64
(lp951
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p952
asbasbasbag57
(g73
g59
NtRp953
(dp954
g62
(dp955
sg71
g749
sg64
(lp956
g57
(g78
g59
NtRp957
(dp958
g62
(dp959
g82
g83
ssg71
g953
sg64
(lp960
S'http_accept_encoding'
p961
asbag57
(g78
g59
NtRp962
(dp963
g62
(dp964
g89
g90
ssg71
g953
sg64
(lp965
S':'
asbag57
(g78
g59
NtRp966
(dp967
g62
(dp968
sg71
g953
sg64
(lp969
g57
(g58
g59
NtRp970
(dp971
g62
(dp972
g70
I4
ssg71
g966
sg64
(lp973
S'gzip,deflate,sdch'
p974
asbasbasbag57
(g73
g59
NtRp975
(dp976
g62
(dp977
sg71
g749
sg64
(lp978
g57
(g78
g59
NtRp979
(dp980
g62
(dp981
g82
g83
ssg71
g975
sg64
(lp982
S'http_accept_language'
p983
asbag57
(g78
g59
NtRp984
(dp985
g62
(dp986
g89
g90
ssg71
g975
sg64
(lp987
S':'
asbag57
(g78
g59
NtRp988
(dp989
g62
(dp990
sg71
g975
sg64
(lp991
g57
(g58
g59
NtRp992
(dp993
g62
(dp994
g70
I4
ssg71
g988
sg64
(lp995
S'en-US,en;q=0.8'
p996
asbasbasbag57
(g73
g59
NtRp997
(dp998
g62
(dp999
sg71
g749
sg64
(lp1000
g57
(g78
g59
NtRp1001
(dp1002
g62
(dp1003
g82
g83
ssg71
g997
sg64
(lp1004
S'http_connection'
p1005
asbag57
(g78
g59
NtRp1006
(dp1007
g62
(dp1008
g89
g90
ssg71
g997
sg64
(lp1009
S':'
asbag57
(g78
g59
NtRp1010
(dp1011
g62
(dp1012
sg71
g997
sg64
(lp1013
g57
(g58
g59
NtRp1014
(dp1015
g62
(dp1016
g70
I4
ssg71
g1010
sg64
(lp1017
S'keep-alive'
p1018
asbasbasbag57
(g73
g59
NtRp1019
(dp1020
g62
(dp1021
sg71
g749
sg64
(lp1022
g57
(g78
g59
NtRp1023
(dp1024
g62
(dp1025
g82
g83
ssg71
g1019
sg64
(lp1026
S'http_cookie'
p1027
asbag57
(g78
g59
NtRp1028
(dp1029
g62
(dp1030
g89
g90
ssg71
g1019
sg64
(lp1031
S':'
asbag57
(g78
g59
NtRp1032
(dp1033
g62
(dp1034
sg71
g1019
sg64
(lp1035
g57
(g58
g59
NtRp1036
(dp1037
g62
(dp1038
g70
I4
ssg71
g1032
sg64
(lp1039
S'session_id_admin=127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3; session_id_dev_bootstrap_ch=127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p1040
asbasbasbag57
(g73
g59
NtRp1041
(dp1042
g62
(dp1043
sg71
g749
sg64
(lp1044
g57
(g78
g59
NtRp1045
(dp1046
g62
(dp1047
g82
g83
ssg71
g1041
sg64
(lp1048
S'http_host'
p1049
asbag57
(g78
g59
NtRp1050
(dp1051
g62
(dp1052
g89
g90
ssg71
g1041
sg64
(lp1053
S':'
asbag57
(g78
g59
NtRp1054
(dp1055
g62
(dp1056
sg71
g1041
sg64
(lp1057
g57
(g58
g59
NtRp1058
(dp1059
g62
(dp1060
g70
I4
ssg71
g1054
sg64
(lp1061
S'127.0.0.1:8000'
p1062
asbasbasbag57
(g73
g59
NtRp1063
(dp1064
g62
(dp1065
sg71
g749
sg64
(lp1066
g57
(g78
g59
NtRp1067
(dp1068
g62
(dp1069
g82
g83
ssg71
g1063
sg64
(lp1070
S'http_referer'
p1071
asbag57
(g78
g59
NtRp1072
(dp1073
g62
(dp1074
g89
g90
ssg71
g1063
sg64
(lp1075
S':'
asbag57
(g78
g59
NtRp1076
(dp1077
g62
(dp1078
sg71
g1063
sg64
(lp1079
g57
(g58
g59
NtRp1080
(dp1081
g62
(dp1082
g70
I4
ssg71
g1076
sg64
(lp1083
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=512e42a0ea76bb073b57e06237341a7165d4cfa1'
p1084
asbasbasbag57
(g73
g59
NtRp1085
(dp1086
g62
(dp1087
sg71
g749
sg64
(lp1088
g57
(g78
g59
NtRp1089
(dp1090
g62
(dp1091
g82
g83
ssg71
g1085
sg64
(lp1092
S'http_user_agent'
p1093
asbag57
(g78
g59
NtRp1094
(dp1095
g62
(dp1096
g89
g90
ssg71
g1085
sg64
(lp1097
S':'
asbag57
(g78
g59
NtRp1098
(dp1099
g62
(dp1100
sg71
g1085
sg64
(lp1101
g57
(g58
g59
NtRp1102
(dp1103
g62
(dp1104
g70
I4
ssg71
g1098
sg64
(lp1105
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1106
asbasbasbag57
(g73
g59
NtRp1107
(dp1108
g62
(dp1109
sg71
g749
sg64
(lp1110
g57
(g78
g59
NtRp1111
(dp1112
g62
(dp1113
g82
g83
ssg71
g1107
sg64
(lp1114
S'is_jython'
p1115
asbag57
(g78
g59
NtRp1116
(dp1117
g62
(dp1118
g89
g90
ssg71
g1107
sg64
(lp1119
S':'
asbag57
(g78
g59
NtRp1120
(dp1121
g62
(dp1122
sg71
g1107
sg64
(lp1123
g57
(g58
g59
NtRp1124
(dp1125
g62
(dp1126
g70
I4
ssg71
g1120
sg64
(lp1127
g100
asbasbasbag57
(g73
g59
NtRp1128
(dp1129
g62
(dp1130
sg71
g749
sg64
(lp1131
g57
(g78
g59
NtRp1132
(dp1133
g62
(dp1134
g82
g83
ssg71
g1128
sg64
(lp1135
S'is_pypy'
p1136
asbag57
(g78
g59
NtRp1137
(dp1138
g62
(dp1139
g89
g90
ssg71
g1128
sg64
(lp1140
S':'
asbag57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
sg71
g1128
sg64
(lp1144
g57
(g58
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I4
ssg71
g1141
sg64
(lp1148
g100
asbasbasbag57
(g73
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g749
sg64
(lp1152
g57
(g78
g59
NtRp1153
(dp1154
g62
(dp1155
g82
g83
ssg71
g1149
sg64
(lp1156
S'local_hosts'
p1157
asbag57
(g78
g59
NtRp1158
(dp1159
g62
(dp1160
g89
g90
ssg71
g1149
sg64
(lp1161
S':'
asbag57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
sg71
g1149
sg64
(lp1165
g57
(g58
g59
NtRp1166
(dp1167
g62
(dp1168
g70
I4
ssg71
g1162
sg64
(lp1169
g57
(g66
g59
NtRp1170
(dp1171
g62
(dp1172
g70
I3
ssg71
Nsg64
(lp1173
g57
(g73
g59
NtRp1174
(dp1175
g62
(dp1176
sg71
g1170
sg64
(lp1177
g57
(g78
g59
NtRp1178
(dp1179
g62
(dp1180
sg71
g1174
sg64
(lp1181
g57
(g58
g59
NtRp1182
(dp1183
g62
(dp1184
g70
I3
ssg71
g1178
sg64
(lp1185
S'::1'
p1186
asbasbasbag57
(g73
g59
NtRp1187
(dp1188
g62
(dp1189
sg71
g1170
sg64
(lp1190
g57
(g78
g59
NtRp1191
(dp1192
g62
(dp1193
sg71
g1187
sg64
(lp1194
g57
(g58
g59
NtRp1195
(dp1196
g62
(dp1197
g70
I3
ssg71
g1191
sg64
(lp1198
S'127.0.1.1'
p1199
asbasbasbag57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g1170
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
sg71
g1200
sg64
(lp1207
g57
(g58
g59
NtRp1208
(dp1209
g62
(dp1210
g70
I3
ssg71
g1204
sg64
(lp1211
S'::ffff:127.0.0.1'
p1212
asbasbasbag57
(g73
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1170
sg64
(lp1216
g57
(g78
g59
NtRp1217
(dp1218
g62
(dp1219
sg71
g1213
sg64
(lp1220
g57
(g58
g59
NtRp1221
(dp1222
g62
(dp1223
g70
I3
ssg71
g1217
sg64
(lp1224
S'127.0.0.1'
p1225
asbasbasbag57
(g73
g59
NtRp1226
(dp1227
g62
(dp1228
sg71
g1170
sg64
(lp1229
g57
(g78
g59
NtRp1230
(dp1231
g62
(dp1232
sg71
g1226
sg64
(lp1233
g57
(g58
g59
NtRp1234
(dp1235
g62
(dp1236
g70
I3
ssg71
g1230
sg64
(lp1237
S'anil-Inspiron-1525'
p1238
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1239
(dp1240
g62
(dp1241
sg71
g749
sg64
(lp1242
g57
(g78
g59
NtRp1243
(dp1244
g62
(dp1245
g82
g83
ssg71
g1239
sg64
(lp1246
S'path_info'
p1247
asbag57
(g78
g59
NtRp1248
(dp1249
g62
(dp1250
g89
g90
ssg71
g1239
sg64
(lp1251
S':'
asbag57
(g78
g59
NtRp1252
(dp1253
g62
(dp1254
sg71
g1239
sg64
(lp1255
g57
(g58
g59
NtRp1256
(dp1257
g62
(dp1258
g70
I4
ssg71
g1252
sg64
(lp1259
S'/DEV_bootstrap_ch/default/duplicate/project/experiment.project/1/sample.experiment/1/replicate/3'
p1260
asbasbasbag57
(g73
g59
NtRp1261
(dp1262
g62
(dp1263
sg71
g749
sg64
(lp1264
g57
(g78
g59
NtRp1265
(dp1266
g62
(dp1267
g82
g83
ssg71
g1261
sg64
(lp1268
S'query_string'
p1269
asbag57
(g78
g59
NtRp1270
(dp1271
g62
(dp1272
g89
g90
ssg71
g1261
sg64
(lp1273
S':'
asbag57
(g78
g59
NtRp1274
(dp1275
g62
(dp1276
sg71
g1261
sg64
(lp1277
g57
(g58
g59
NtRp1278
(dp1279
g62
(dp1280
g70
I4
ssg71
g1274
sg64
(lp1281
S''
asbasbasbag57
(g73
g59
NtRp1282
(dp1283
g62
(dp1284
sg71
g749
sg64
(lp1285
g57
(g78
g59
NtRp1286
(dp1287
g62
(dp1288
g82
g83
ssg71
g1282
sg64
(lp1289
S'remote_addr'
p1290
asbag57
(g78
g59
NtRp1291
(dp1292
g62
(dp1293
g89
g90
ssg71
g1282
sg64
(lp1294
S':'
asbag57
(g78
g59
NtRp1295
(dp1296
g62
(dp1297
sg71
g1282
sg64
(lp1298
g57
(g58
g59
NtRp1299
(dp1300
g62
(dp1301
g70
I4
ssg71
g1295
sg64
(lp1302
g300
asbasbasbag57
(g73
g59
NtRp1303
(dp1304
g62
(dp1305
sg71
g749
sg64
(lp1306
g57
(g78
g59
NtRp1307
(dp1308
g62
(dp1309
g82
g83
ssg71
g1303
sg64
(lp1310
S'remote_port'
p1311
asbag57
(g78
g59
NtRp1312
(dp1313
g62
(dp1314
g89
g90
ssg71
g1303
sg64
(lp1315
S':'
asbag57
(g78
g59
NtRp1316
(dp1317
g62
(dp1318
sg71
g1303
sg64
(lp1319
g57
(g58
g59
NtRp1320
(dp1321
g62
(dp1322
g70
I4
ssg71
g1316
sg64
(lp1323
S'51729'
p1324
asbasbasbag57
(g73
g59
NtRp1325
(dp1326
g62
(dp1327
sg71
g749
sg64
(lp1328
g57
(g78
g59
NtRp1329
(dp1330
g62
(dp1331
g82
g83
ssg71
g1325
sg64
(lp1332
S'request_method'
p1333
asbag57
(g78
g59
NtRp1334
(dp1335
g62
(dp1336
g89
g90
ssg71
g1325
sg64
(lp1337
S':'
asbag57
(g78
g59
NtRp1338
(dp1339
g62
(dp1340
sg71
g1325
sg64
(lp1341
g57
(g58
g59
NtRp1342
(dp1343
g62
(dp1344
g70
I4
ssg71
g1338
sg64
(lp1345
S'GET'
p1346
asbasbasbag57
(g73
g59
NtRp1347
(dp1348
g62
(dp1349
sg71
g749
sg64
(lp1350
g57
(g78
g59
NtRp1351
(dp1352
g62
(dp1353
g82
g83
ssg71
g1347
sg64
(lp1354
S'request_uri'
p1355
asbag57
(g78
g59
NtRp1356
(dp1357
g62
(dp1358
g89
g90
ssg71
g1347
sg64
(lp1359
S':'
asbag57
(g78
g59
NtRp1360
(dp1361
g62
(dp1362
sg71
g1347
sg64
(lp1363
g57
(g58
g59
NtRp1364
(dp1365
g62
(dp1366
g70
I4
ssg71
g1360
sg64
(lp1367
g1260
asbasbasbag57
(g73
g59
NtRp1368
(dp1369
g62
(dp1370
sg71
g749
sg64
(lp1371
g57
(g78
g59
NtRp1372
(dp1373
g62
(dp1374
g82
g83
ssg71
g1368
sg64
(lp1375
S'script_name'
p1376
asbag57
(g78
g59
NtRp1377
(dp1378
g62
(dp1379
g89
g90
ssg71
g1368
sg64
(lp1380
S':'
asbag57
(g78
g59
NtRp1381
(dp1382
g62
(dp1383
sg71
g1368
sg64
(lp1384
g57
(g58
g59
NtRp1385
(dp1386
g62
(dp1387
g70
I4
ssg71
g1381
sg64
(lp1388
S''
asbasbasbag57
(g73
g59
NtRp1389
(dp1390
g62
(dp1391
sg71
g749
sg64
(lp1392
g57
(g78
g59
NtRp1393
(dp1394
g62
(dp1395
g82
g83
ssg71
g1389
sg64
(lp1396
S'server_name'
p1397
asbag57
(g78
g59
NtRp1398
(dp1399
g62
(dp1400
g89
g90
ssg71
g1389
sg64
(lp1401
S':'
asbag57
(g78
g59
NtRp1402
(dp1403
g62
(dp1404
sg71
g1389
sg64
(lp1405
g57
(g58
g59
NtRp1406
(dp1407
g62
(dp1408
g70
I4
ssg71
g1402
sg64
(lp1409
S'anil-Inspiron-1525'
p1410
asbasbasbag57
(g73
g59
NtRp1411
(dp1412
g62
(dp1413
sg71
g749
sg64
(lp1414
g57
(g78
g59
NtRp1415
(dp1416
g62
(dp1417
g82
g83
ssg71
g1411
sg64
(lp1418
S'server_port'
p1419
asbag57
(g78
g59
NtRp1420
(dp1421
g62
(dp1422
g89
g90
ssg71
g1411
sg64
(lp1423
S':'
asbag57
(g78
g59
NtRp1424
(dp1425
g62
(dp1426
sg71
g1411
sg64
(lp1427
g57
(g58
g59
NtRp1428
(dp1429
g62
(dp1430
g70
I4
ssg71
g1424
sg64
(lp1431
S'8000'
p1432
asbasbasbag57
(g73
g59
NtRp1433
(dp1434
g62
(dp1435
sg71
g749
sg64
(lp1436
g57
(g78
g59
NtRp1437
(dp1438
g62
(dp1439
g82
g83
ssg71
g1433
sg64
(lp1440
S'server_protocol'
p1441
asbag57
(g78
g59
NtRp1442
(dp1443
g62
(dp1444
g89
g90
ssg71
g1433
sg64
(lp1445
S':'
asbag57
(g78
g59
NtRp1446
(dp1447
g62
(dp1448
sg71
g1433
sg64
(lp1449
g57
(g58
g59
NtRp1450
(dp1451
g62
(dp1452
g70
I4
ssg71
g1446
sg64
(lp1453
S'HTTP/1.1'
p1454
asbasbasbag57
(g73
g59
NtRp1455
(dp1456
g62
(dp1457
sg71
g749
sg64
(lp1458
g57
(g78
g59
NtRp1459
(dp1460
g62
(dp1461
g82
g83
ssg71
g1455
sg64
(lp1462
S'server_software'
p1463
asbag57
(g78
g59
NtRp1464
(dp1465
g62
(dp1466
g89
g90
ssg71
g1455
sg64
(lp1467
S':'
asbag57
(g78
g59
NtRp1468
(dp1469
g62
(dp1470
sg71
g1455
sg64
(lp1471
g57
(g58
g59
NtRp1472
(dp1473
g62
(dp1474
g70
I4
ssg71
g1468
sg64
(lp1475
S'Rocket 1.2.6'
p1476
asbasbasbag57
(g73
g59
NtRp1477
(dp1478
g62
(dp1479
sg71
g749
sg64
(lp1480
g57
(g78
g59
NtRp1481
(dp1482
g62
(dp1483
g82
g83
ssg71
g1477
sg64
(lp1484
S'web2py_path'
p1485
asbag57
(g78
g59
NtRp1486
(dp1487
g62
(dp1488
g89
g90
ssg71
g1477
sg64
(lp1489
S':'
asbag57
(g78
g59
NtRp1490
(dp1491
g62
(dp1492
sg71
g1477
sg64
(lp1493
g57
(g58
g59
NtRp1494
(dp1495
g62
(dp1496
g70
I4
ssg71
g1490
sg64
(lp1497
g796
asbasbasbag57
(g73
g59
NtRp1498
(dp1499
g62
(dp1500
sg71
g749
sg64
(lp1501
g57
(g78
g59
NtRp1502
(dp1503
g62
(dp1504
g82
g83
ssg71
g1498
sg64
(lp1505
S'web2py_version'
p1506
asbag57
(g78
g59
NtRp1507
(dp1508
g62
(dp1509
g89
g90
ssg71
g1498
sg64
(lp1510
S':'
asbag57
(g78
g59
NtRp1511
(dp1512
g62
(dp1513
sg71
g1498
sg64
(lp1514
g57
(g58
g59
NtRp1515
(dp1516
g62
(dp1517
g70
I4
ssg71
g1511
sg64
(lp1518
g57
(g66
g59
NtRp1519
(dp1520
g62
(dp1521
g70
I3
ssg71
Nsg64
(lp1522
g57
(g73
g59
NtRp1523
(dp1524
g62
(dp1525
sg71
g1519
sg64
(lp1526
g57
(g78
g59
NtRp1527
(dp1528
g62
(dp1529
sg71
g1523
sg64
(lp1530
g57
(g58
g59
NtRp1531
(dp1532
g62
(dp1533
g70
I3
ssg71
g1527
sg64
(lp1534
S'2'
asbasbasbag57
(g73
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g1519
sg64
(lp1538
g57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1535
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I3
ssg71
g1539
sg64
(lp1546
S'3'
asbasbasbag57
(g73
g59
NtRp1547
(dp1548
g62
(dp1549
sg71
g1519
sg64
(lp1550
g57
(g78
g59
NtRp1551
(dp1552
g62
(dp1553
sg71
g1547
sg64
(lp1554
g57
(g58
g59
NtRp1555
(dp1556
g62
(dp1557
g70
I3
ssg71
g1551
sg64
(lp1558
S'2'
asbasbasbag57
(g73
g59
NtRp1559
(dp1560
g62
(dp1561
sg71
g1519
sg64
(lp1562
g57
(g78
g59
NtRp1563
(dp1564
g62
(dp1565
sg71
g1559
sg64
(lp1566
g57
(g58
g59
NtRp1567
(dp1568
g62
(dp1569
g70
I3
ssg71
g1563
sg64
(lp1570
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1571
asbasbasbag57
(g73
g59
NtRp1572
(dp1573
g62
(dp1574
sg71
g1519
sg64
(lp1575
g57
(g78
g59
NtRp1576
(dp1577
g62
(dp1578
sg71
g1572
sg64
(lp1579
g57
(g58
g59
NtRp1580
(dp1581
g62
(dp1582
g70
I3
ssg71
g1576
sg64
(lp1583
S'stable'
p1584
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1585
(dp1586
g62
(dp1587
sg71
g749
sg64
(lp1588
g57
(g78
g59
NtRp1589
(dp1590
g62
(dp1591
g82
g83
ssg71
g1585
sg64
(lp1592
S'wsgi_errors'
p1593
asbag57
(g78
g59
NtRp1594
(dp1595
g62
(dp1596
g89
g90
ssg71
g1585
sg64
(lp1597
S':'
asbag57
(g78
g59
NtRp1598
(dp1599
g62
(dp1600
sg71
g1585
sg64
(lp1601
g57
(g58
g59
NtRp1602
(dp1603
g62
(dp1604
g70
I4
ssg71
g1598
sg64
(lp1605
S"<open file '<stderr>', mode 'w' at 0xb73110d0>"
p1606
asbasbasbag57
(g73
g59
NtRp1607
(dp1608
g62
(dp1609
sg71
g749
sg64
(lp1610
g57
(g78
g59
NtRp1611
(dp1612
g62
(dp1613
g82
g83
ssg71
g1607
sg64
(lp1614
S'wsgi_file_wrapper'
p1615
asbag57
(g78
g59
NtRp1616
(dp1617
g62
(dp1618
g89
g90
ssg71
g1607
sg64
(lp1619
S':'
asbag57
(g78
g59
NtRp1620
(dp1621
g62
(dp1622
sg71
g1607
sg64
(lp1623
g57
(g58
g59
NtRp1624
(dp1625
g62
(dp1626
g70
I4
ssg71
g1620
sg64
(lp1627
S'<class wsgiref.util.FileWrapper at 0x9da3b9c>'
p1628
asbasbasbag57
(g73
g59
NtRp1629
(dp1630
g62
(dp1631
sg71
g749
sg64
(lp1632
g57
(g78
g59
NtRp1633
(dp1634
g62
(dp1635
g82
g83
ssg71
g1629
sg64
(lp1636
S'wsgi_input'
p1637
asbag57
(g78
g59
NtRp1638
(dp1639
g62
(dp1640
g89
g90
ssg71
g1629
sg64
(lp1641
S':'
asbag57
(g78
g59
NtRp1642
(dp1643
g62
(dp1644
sg71
g1629
sg64
(lp1645
g57
(g58
g59
NtRp1646
(dp1647
g62
(dp1648
g70
I4
ssg71
g1642
sg64
(lp1649
S'<socket._fileobject object at 0xafa9e52c>'
p1650
asbasbasbag57
(g73
g59
NtRp1651
(dp1652
g62
(dp1653
sg71
g749
sg64
(lp1654
g57
(g78
g59
NtRp1655
(dp1656
g62
(dp1657
g82
g83
ssg71
g1651
sg64
(lp1658
S'wsgi_multiprocess'
p1659
asbag57
(g78
g59
NtRp1660
(dp1661
g62
(dp1662
g89
g90
ssg71
g1651
sg64
(lp1663
S':'
asbag57
(g78
g59
NtRp1664
(dp1665
g62
(dp1666
sg71
g1651
sg64
(lp1667
g57
(g58
g59
NtRp1668
(dp1669
g62
(dp1670
g70
I4
ssg71
g1664
sg64
(lp1671
g100
asbasbasbag57
(g73
g59
NtRp1672
(dp1673
g62
(dp1674
sg71
g749
sg64
(lp1675
g57
(g78
g59
NtRp1676
(dp1677
g62
(dp1678
g82
g83
ssg71
g1672
sg64
(lp1679
S'wsgi_multithread'
p1680
asbag57
(g78
g59
NtRp1681
(dp1682
g62
(dp1683
g89
g90
ssg71
g1672
sg64
(lp1684
S':'
asbag57
(g78
g59
NtRp1685
(dp1686
g62
(dp1687
sg71
g1672
sg64
(lp1688
g57
(g58
g59
NtRp1689
(dp1690
g62
(dp1691
g70
I4
ssg71
g1685
sg64
(lp1692
S'True'
p1693
asbasbasbag57
(g73
g59
NtRp1694
(dp1695
g62
(dp1696
sg71
g749
sg64
(lp1697
g57
(g78
g59
NtRp1698
(dp1699
g62
(dp1700
g82
g83
ssg71
g1694
sg64
(lp1701
S'wsgi_run_once'
p1702
asbag57
(g78
g59
NtRp1703
(dp1704
g62
(dp1705
g89
g90
ssg71
g1694
sg64
(lp1706
S':'
asbag57
(g78
g59
NtRp1707
(dp1708
g62
(dp1709
sg71
g1694
sg64
(lp1710
g57
(g58
g59
NtRp1711
(dp1712
g62
(dp1713
g70
I4
ssg71
g1707
sg64
(lp1714
g100
asbasbasbag57
(g73
g59
NtRp1715
(dp1716
g62
(dp1717
sg71
g749
sg64
(lp1718
g57
(g78
g59
NtRp1719
(dp1720
g62
(dp1721
g82
g83
ssg71
g1715
sg64
(lp1722
S'wsgi_url_scheme'
p1723
asbag57
(g78
g59
NtRp1724
(dp1725
g62
(dp1726
g89
g90
ssg71
g1715
sg64
(lp1727
S':'
asbag57
(g78
g59
NtRp1728
(dp1729
g62
(dp1730
sg71
g1715
sg64
(lp1731
g57
(g58
g59
NtRp1732
(dp1733
g62
(dp1734
g70
I4
ssg71
g1728
sg64
(lp1735
S'http'
p1736
asbasbasbag57
(g73
g59
NtRp1737
(dp1738
g62
(dp1739
sg71
g749
sg64
(lp1740
g57
(g78
g59
NtRp1741
(dp1742
g62
(dp1743
g82
g83
ssg71
g1737
sg64
(lp1744
S'wsgi_version'
p1745
asbag57
(g78
g59
NtRp1746
(dp1747
g62
(dp1748
g89
g90
ssg71
g1737
sg64
(lp1749
S':'
asbag57
(g78
g59
NtRp1750
(dp1751
g62
(dp1752
sg71
g1737
sg64
(lp1753
g57
(g58
g59
NtRp1754
(dp1755
g62
(dp1756
g70
I4
ssg71
g1750
sg64
(lp1757
g57
(g66
g59
NtRp1758
(dp1759
g62
(dp1760
g70
I3
ssg71
Nsg64
(lp1761
g57
(g73
g59
NtRp1762
(dp1763
g62
(dp1764
sg71
g1758
sg64
(lp1765
g57
(g78
g59
NtRp1766
(dp1767
g62
(dp1768
sg71
g1762
sg64
(lp1769
g57
(g58
g59
NtRp1770
(dp1771
g62
(dp1772
g70
I3
ssg71
g1766
sg64
(lp1773
S'1'
asbasbasbag57
(g73
g59
NtRp1774
(dp1775
g62
(dp1776
sg71
g1758
sg64
(lp1777
g57
(g78
g59
NtRp1778
(dp1779
g62
(dp1780
sg71
g1774
sg64
(lp1781
g57
(g58
g59
NtRp1782
(dp1783
g62
(dp1784
g70
I3
ssg71
g1778
sg64
(lp1785
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1786
(dp1787
g62
(dp1788
sg71
g67
sg64
(lp1789
g57
(g78
g59
NtRp1790
(dp1791
g62
(dp1792
g82
g83
ssg71
g1786
sg64
(lp1793
S'extension'
p1794
asbag57
(g78
g59
NtRp1795
(dp1796
g62
(dp1797
g89
g90
ssg71
g1786
sg64
(lp1798
S':'
asbag57
(g78
g59
NtRp1799
(dp1800
g62
(dp1801
sg71
g1786
sg64
(lp1802
g57
(g58
g59
NtRp1803
(dp1804
g62
(dp1805
g70
I5
ssg71
g1799
sg64
(lp1806
S'html'
p1807
asbasbasbag57
(g73
g59
NtRp1808
(dp1809
g62
(dp1810
sg71
g67
sg64
(lp1811
g57
(g78
g59
NtRp1812
(dp1813
g62
(dp1814
g82
g83
ssg71
g1808
sg64
(lp1815
S'folder'
p1816
asbag57
(g78
g59
NtRp1817
(dp1818
g62
(dp1819
g89
g90
ssg71
g1808
sg64
(lp1820
S':'
asbag57
(g78
g59
NtRp1821
(dp1822
g62
(dp1823
sg71
g1808
sg64
(lp1824
g57
(g58
g59
NtRp1825
(dp1826
g62
(dp1827
g70
I5
ssg71
g1821
sg64
(lp1828
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/'
p1829
asbasbasbag57
(g73
g59
NtRp1830
(dp1831
g62
(dp1832
sg71
g67
sg64
(lp1833
g57
(g78
g59
NtRp1834
(dp1835
g62
(dp1836
g82
g83
ssg71
g1830
sg64
(lp1837
S'function'
p1838
asbag57
(g78
g59
NtRp1839
(dp1840
g62
(dp1841
g89
g90
ssg71
g1830
sg64
(lp1842
S':'
asbag57
(g78
g59
NtRp1843
(dp1844
g62
(dp1845
sg71
g1830
sg64
(lp1846
g57
(g58
g59
NtRp1847
(dp1848
g62
(dp1849
g70
I5
ssg71
g1843
sg64
(lp1850
S'duplicate'
p1851
asbasbasbag57
(g73
g59
NtRp1852
(dp1853
g62
(dp1854
sg71
g67
sg64
(lp1855
g57
(g78
g59
NtRp1856
(dp1857
g62
(dp1858
g82
g83
ssg71
g1852
sg64
(lp1859
S'get_vars'
p1860
asbag57
(g78
g59
NtRp1861
(dp1862
g62
(dp1863
g89
g90
ssg71
g1852
sg64
(lp1864
S':'
asbag57
(g78
g59
NtRp1865
(dp1866
g62
(dp1867
sg71
g1852
sg64
(lp1868
g57
(g58
g59
NtRp1869
(dp1870
g62
(dp1871
g70
I5
ssg71
g1865
sg64
(lp1872
g57
(g66
g59
NtRp1873
(dp1874
g62
(dp1875
g70
I4
ssg71
Nsg64
(lp1876
sbasbasbasbag57
(g73
g59
NtRp1877
(dp1878
g62
(dp1879
sg71
g67
sg64
(lp1880
g57
(g78
g59
NtRp1881
(dp1882
g62
(dp1883
g82
g83
ssg71
g1877
sg64
(lp1884
S'global_settings'
p1885
asbag57
(g78
g59
NtRp1886
(dp1887
g62
(dp1888
g89
g90
ssg71
g1877
sg64
(lp1889
S':'
asbag57
(g78
g59
NtRp1890
(dp1891
g62
(dp1892
sg71
g1877
sg64
(lp1893
g57
(g58
g59
NtRp1894
(dp1895
g62
(dp1896
g70
I5
ssg71
g1890
sg64
(lp1897
g57
(g66
g59
NtRp1898
(dp1899
g62
(dp1900
g70
I4
ssg71
Nsg64
(lp1901
g57
(g73
g59
NtRp1902
(dp1903
g62
(dp1904
sg71
g1898
sg64
(lp1905
g57
(g78
g59
NtRp1906
(dp1907
g62
(dp1908
g82
g83
ssg71
g1902
sg64
(lp1909
g761
asbag57
(g78
g59
NtRp1910
(dp1911
g62
(dp1912
g89
g90
ssg71
g1902
sg64
(lp1913
S':'
asbag57
(g78
g59
NtRp1914
(dp1915
g62
(dp1916
sg71
g1902
sg64
(lp1917
g57
(g58
g59
NtRp1918
(dp1919
g62
(dp1920
g70
I4
ssg71
g1914
sg64
(lp1921
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p1922
asbasbasbag57
(g73
g59
NtRp1923
(dp1924
g62
(dp1925
sg71
g1898
sg64
(lp1926
g57
(g78
g59
NtRp1927
(dp1928
g62
(dp1929
g82
g83
ssg71
g1923
sg64
(lp1930
g783
asbag57
(g78
g59
NtRp1931
(dp1932
g62
(dp1933
g89
g90
ssg71
g1923
sg64
(lp1934
S':'
asbag57
(g78
g59
NtRp1935
(dp1936
g62
(dp1937
sg71
g1923
sg64
(lp1938
g57
(g58
g59
NtRp1939
(dp1940
g62
(dp1941
g70
I4
ssg71
g1935
sg64
(lp1942
g796
asbasbasbag57
(g73
g59
NtRp1943
(dp1944
g62
(dp1945
sg71
g1898
sg64
(lp1946
g57
(g78
g59
NtRp1947
(dp1948
g62
(dp1949
g82
g83
ssg71
g1943
sg64
(lp1950
g805
asbag57
(g78
g59
NtRp1951
(dp1952
g62
(dp1953
g89
g90
ssg71
g1943
sg64
(lp1954
S':'
asbag57
(g78
g59
NtRp1955
(dp1956
g62
(dp1957
sg71
g1943
sg64
(lp1958
g57
(g58
g59
NtRp1959
(dp1960
g62
(dp1961
g70
I4
ssg71
g1955
sg64
(lp1962
g57
(g66
g59
NtRp1963
(dp1964
g62
(dp1965
g70
I3
ssg71
Nsg64
(lp1966
sbasbasbasbag57
(g73
g59
NtRp1967
(dp1968
g62
(dp1969
sg71
g1898
sg64
(lp1970
g57
(g78
g59
NtRp1971
(dp1972
g62
(dp1973
g82
g83
ssg71
g1967
sg64
(lp1974
g830
asbag57
(g78
g59
NtRp1975
(dp1976
g62
(dp1977
g89
g90
ssg71
g1967
sg64
(lp1978
S':'
asbag57
(g78
g59
NtRp1979
(dp1980
g62
(dp1981
sg71
g1967
sg64
(lp1982
g57
(g58
g59
NtRp1983
(dp1984
g62
(dp1985
g70
I4
ssg71
g1979
sg64
(lp1986
S"<Values at 0x9e1a0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1987
asbasbasbag57
(g73
g59
NtRp1988
(dp1989
g62
(dp1990
sg71
g1898
sg64
(lp1991
g57
(g78
g59
NtRp1992
(dp1993
g62
(dp1994
g82
g83
ssg71
g1988
sg64
(lp1995
g852
asbag57
(g78
g59
NtRp1996
(dp1997
g62
(dp1998
g89
g90
ssg71
g1988
sg64
(lp1999
S':'
asbag57
(g78
g59
NtRp2000
(dp2001
g62
(dp2002
sg71
g1988
sg64
(lp2003
g57
(g58
g59
NtRp2004
(dp2005
g62
(dp2006
g70
I4
ssg71
g2000
sg64
(lp2007
S'set([])'
p2008
asbasbasbag57
(g73
g59
NtRp2009
(dp2010
g62
(dp2011
sg71
g1898
sg64
(lp2012
g57
(g78
g59
NtRp2013
(dp2014
g62
(dp2015
g82
g83
ssg71
g2009
sg64
(lp2016
g874
asbag57
(g78
g59
NtRp2017
(dp2018
g62
(dp2019
g89
g90
ssg71
g2009
sg64
(lp2020
S':'
asbag57
(g78
g59
NtRp2021
(dp2022
g62
(dp2023
sg71
g2009
sg64
(lp2024
g57
(g58
g59
NtRp2025
(dp2026
g62
(dp2027
g70
I4
ssg71
g2021
sg64
(lp2028
g100
asbasbasbag57
(g73
g59
NtRp2029
(dp2030
g62
(dp2031
sg71
g1898
sg64
(lp2032
g57
(g78
g59
NtRp2033
(dp2034
g62
(dp2035
g82
g83
ssg71
g2029
sg64
(lp2036
g895
asbag57
(g78
g59
NtRp2037
(dp2038
g62
(dp2039
g89
g90
ssg71
g2029
sg64
(lp2040
S':'
asbag57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
sg71
g2029
sg64
(lp2044
g57
(g58
g59
NtRp2045
(dp2046
g62
(dp2047
g70
I4
ssg71
g2041
sg64
(lp2048
g908
asbasbasbag57
(g73
g59
NtRp2049
(dp2050
g62
(dp2051
sg71
g1898
sg64
(lp2052
g57
(g78
g59
NtRp2053
(dp2054
g62
(dp2055
g82
g83
ssg71
g2049
sg64
(lp2056
g1115
asbag57
(g78
g59
NtRp2057
(dp2058
g62
(dp2059
g89
g90
ssg71
g2049
sg64
(lp2060
S':'
asbag57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
sg71
g2049
sg64
(lp2064
g57
(g58
g59
NtRp2065
(dp2066
g62
(dp2067
g70
I4
ssg71
g2061
sg64
(lp2068
g100
asbasbasbag57
(g73
g59
NtRp2069
(dp2070
g62
(dp2071
sg71
g1898
sg64
(lp2072
g57
(g78
g59
NtRp2073
(dp2074
g62
(dp2075
g82
g83
ssg71
g2069
sg64
(lp2076
g1136
asbag57
(g78
g59
NtRp2077
(dp2078
g62
(dp2079
g89
g90
ssg71
g2069
sg64
(lp2080
S':'
asbag57
(g78
g59
NtRp2081
(dp2082
g62
(dp2083
sg71
g2069
sg64
(lp2084
g57
(g58
g59
NtRp2085
(dp2086
g62
(dp2087
g70
I4
ssg71
g2081
sg64
(lp2088
g100
asbasbasbag57
(g73
g59
NtRp2089
(dp2090
g62
(dp2091
sg71
g1898
sg64
(lp2092
g57
(g78
g59
NtRp2093
(dp2094
g62
(dp2095
g82
g83
ssg71
g2089
sg64
(lp2096
g1157
asbag57
(g78
g59
NtRp2097
(dp2098
g62
(dp2099
g89
g90
ssg71
g2089
sg64
(lp2100
S':'
asbag57
(g78
g59
NtRp2101
(dp2102
g62
(dp2103
sg71
g2089
sg64
(lp2104
g57
(g58
g59
NtRp2105
(dp2106
g62
(dp2107
g70
I4
ssg71
g2101
sg64
(lp2108
g57
(g66
g59
NtRp2109
(dp2110
g62
(dp2111
g70
I3
ssg71
Nsg64
(lp2112
g57
(g73
g59
NtRp2113
(dp2114
g62
(dp2115
sg71
g2109
sg64
(lp2116
g57
(g78
g59
NtRp2117
(dp2118
g62
(dp2119
sg71
g2113
sg64
(lp2120
g57
(g58
g59
NtRp2121
(dp2122
g62
(dp2123
g70
I3
ssg71
g2117
sg64
(lp2124
g1186
asbasbasbag57
(g73
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g2109
sg64
(lp2128
g57
(g78
g59
NtRp2129
(dp2130
g62
(dp2131
sg71
g2125
sg64
(lp2132
g57
(g58
g59
NtRp2133
(dp2134
g62
(dp2135
g70
I3
ssg71
g2129
sg64
(lp2136
g1199
asbasbasbag57
(g73
g59
NtRp2137
(dp2138
g62
(dp2139
sg71
g2109
sg64
(lp2140
g57
(g78
g59
NtRp2141
(dp2142
g62
(dp2143
sg71
g2137
sg64
(lp2144
g57
(g58
g59
NtRp2145
(dp2146
g62
(dp2147
g70
I3
ssg71
g2141
sg64
(lp2148
g1212
asbasbasbag57
(g73
g59
NtRp2149
(dp2150
g62
(dp2151
sg71
g2109
sg64
(lp2152
g57
(g78
g59
NtRp2153
(dp2154
g62
(dp2155
sg71
g2149
sg64
(lp2156
g57
(g58
g59
NtRp2157
(dp2158
g62
(dp2159
g70
I3
ssg71
g2153
sg64
(lp2160
g1225
asbasbasbag57
(g73
g59
NtRp2161
(dp2162
g62
(dp2163
sg71
g2109
sg64
(lp2164
g57
(g78
g59
NtRp2165
(dp2166
g62
(dp2167
sg71
g2161
sg64
(lp2168
g57
(g58
g59
NtRp2169
(dp2170
g62
(dp2171
g70
I3
ssg71
g2165
sg64
(lp2172
g1238
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2173
(dp2174
g62
(dp2175
sg71
g1898
sg64
(lp2176
g57
(g78
g59
NtRp2177
(dp2178
g62
(dp2179
g82
g83
ssg71
g2173
sg64
(lp2180
g1506
asbag57
(g78
g59
NtRp2181
(dp2182
g62
(dp2183
g89
g90
ssg71
g2173
sg64
(lp2184
S':'
asbag57
(g78
g59
NtRp2185
(dp2186
g62
(dp2187
sg71
g2173
sg64
(lp2188
g57
(g58
g59
NtRp2189
(dp2190
g62
(dp2191
g70
I4
ssg71
g2185
sg64
(lp2192
g57
(g66
g59
NtRp2193
(dp2194
g62
(dp2195
g70
I3
ssg71
Nsg64
(lp2196
g57
(g73
g59
NtRp2197
(dp2198
g62
(dp2199
sg71
g2193
sg64
(lp2200
g57
(g78
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g2197
sg64
(lp2204
g57
(g58
g59
NtRp2205
(dp2206
g62
(dp2207
g70
I3
ssg71
g2201
sg64
(lp2208
S'2'
asbasbasbag57
(g73
g59
NtRp2209
(dp2210
g62
(dp2211
sg71
g2193
sg64
(lp2212
g57
(g78
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2209
sg64
(lp2216
g57
(g58
g59
NtRp2217
(dp2218
g62
(dp2219
g70
I3
ssg71
g2213
sg64
(lp2220
S'3'
asbasbasbag57
(g73
g59
NtRp2221
(dp2222
g62
(dp2223
sg71
g2193
sg64
(lp2224
g57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g2221
sg64
(lp2228
g57
(g58
g59
NtRp2229
(dp2230
g62
(dp2231
g70
I3
ssg71
g2225
sg64
(lp2232
S'2'
asbasbasbag57
(g73
g59
NtRp2233
(dp2234
g62
(dp2235
sg71
g2193
sg64
(lp2236
g57
(g78
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2233
sg64
(lp2240
g57
(g58
g59
NtRp2241
(dp2242
g62
(dp2243
g70
I3
ssg71
g2237
sg64
(lp2244
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2245
asbasbasbag57
(g73
g59
NtRp2246
(dp2247
g62
(dp2248
sg71
g2193
sg64
(lp2249
g57
(g78
g59
NtRp2250
(dp2251
g62
(dp2252
sg71
g2246
sg64
(lp2253
g57
(g58
g59
NtRp2254
(dp2255
g62
(dp2256
g70
I3
ssg71
g2250
sg64
(lp2257
g1584
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2258
(dp2259
g62
(dp2260
sg71
g67
sg64
(lp2261
g57
(g78
g59
NtRp2262
(dp2263
g62
(dp2264
g82
g83
ssg71
g2258
sg64
(lp2265
S'is_https'
p2266
asbag57
(g78
g59
NtRp2267
(dp2268
g62
(dp2269
g89
g90
ssg71
g2258
sg64
(lp2270
S':'
asbag57
(g78
g59
NtRp2271
(dp2272
g62
(dp2273
sg71
g2258
sg64
(lp2274
g57
(g58
g59
NtRp2275
(dp2276
g62
(dp2277
g70
I5
ssg71
g2271
sg64
(lp2278
g100
asbasbasbag57
(g73
g59
NtRp2279
(dp2280
g62
(dp2281
sg71
g67
sg64
(lp2282
g57
(g78
g59
NtRp2283
(dp2284
g62
(dp2285
g82
g83
ssg71
g2279
sg64
(lp2286
S'is_local'
p2287
asbag57
(g78
g59
NtRp2288
(dp2289
g62
(dp2290
g89
g90
ssg71
g2279
sg64
(lp2291
S':'
asbag57
(g78
g59
NtRp2292
(dp2293
g62
(dp2294
sg71
g2279
sg64
(lp2295
g57
(g58
g59
NtRp2296
(dp2297
g62
(dp2298
g70
I5
ssg71
g2292
sg64
(lp2299
g1693
asbasbasbag57
(g73
g59
NtRp2300
(dp2301
g62
(dp2302
sg71
g67
sg64
(lp2303
g57
(g78
g59
NtRp2304
(dp2305
g62
(dp2306
g82
g83
ssg71
g2300
sg64
(lp2307
S'is_restful'
p2308
asbag57
(g78
g59
NtRp2309
(dp2310
g62
(dp2311
g89
g90
ssg71
g2300
sg64
(lp2312
S':'
asbag57
(g78
g59
NtRp2313
(dp2314
g62
(dp2315
sg71
g2300
sg64
(lp2316
g57
(g58
g59
NtRp2317
(dp2318
g62
(dp2319
g70
I5
ssg71
g2313
sg64
(lp2320
g100
asbasbasbag57
(g73
g59
NtRp2321
(dp2322
g62
(dp2323
sg71
g67
sg64
(lp2324
g57
(g78
g59
NtRp2325
(dp2326
g62
(dp2327
g82
g83
ssg71
g2321
sg64
(lp2328
S'now'
p2329
asbag57
(g78
g59
NtRp2330
(dp2331
g62
(dp2332
g89
g90
ssg71
g2321
sg64
(lp2333
S':'
asbag57
(g78
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g2321
sg64
(lp2337
g57
(g58
g59
NtRp2338
(dp2339
g62
(dp2340
g70
I5
ssg71
g2334
sg64
(lp2341
S'datetime.datetime(2013, 3, 9, 14, 3, 11, 150162)'
p2342
asbasbasbag57
(g73
g59
NtRp2343
(dp2344
g62
(dp2345
sg71
g67
sg64
(lp2346
g57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
g82
g83
ssg71
g2343
sg64
(lp2350
S'post_vars'
p2351
asbag57
(g78
g59
NtRp2352
(dp2353
g62
(dp2354
g89
g90
ssg71
g2343
sg64
(lp2355
S':'
asbag57
(g78
g59
NtRp2356
(dp2357
g62
(dp2358
sg71
g2343
sg64
(lp2359
g57
(g58
g59
NtRp2360
(dp2361
g62
(dp2362
g70
I5
ssg71
g2356
sg64
(lp2363
g57
(g66
g59
NtRp2364
(dp2365
g62
(dp2366
g70
I4
ssg71
Nsg64
(lp2367
sbasbasbasbag57
(g73
g59
NtRp2368
(dp2369
g62
(dp2370
sg71
g67
sg64
(lp2371
g57
(g78
g59
NtRp2372
(dp2373
g62
(dp2374
g82
g83
ssg71
g2368
sg64
(lp2375
S'raw_args'
p2376
asbag57
(g78
g59
NtRp2377
(dp2378
g62
(dp2379
g89
g90
ssg71
g2368
sg64
(lp2380
S':'
asbag57
(g78
g59
NtRp2381
(dp2382
g62
(dp2383
sg71
g2368
sg64
(lp2384
g57
(g58
g59
NtRp2385
(dp2386
g62
(dp2387
g70
I5
ssg71
g2381
sg64
(lp2388
S'project/experiment.project/1/sample.experiment/1/replicate/3'
p2389
asbasbasbag57
(g73
g59
NtRp2390
(dp2391
g62
(dp2392
sg71
g67
sg64
(lp2393
g57
(g78
g59
NtRp2394
(dp2395
g62
(dp2396
g82
g83
ssg71
g2390
sg64
(lp2397
S'raw_extension'
p2398
asbag57
(g78
g59
NtRp2399
(dp2400
g62
(dp2401
g89
g90
ssg71
g2390
sg64
(lp2402
S':'
asbag57
(g78
g59
NtRp2403
(dp2404
g62
(dp2405
sg71
g2390
sg64
(lp2406
g57
(g58
g59
NtRp2407
(dp2408
g62
(dp2409
g70
I5
ssg71
g2403
sg64
(lp2410
S'None'
p2411
asbasbasbag57
(g73
g59
NtRp2412
(dp2413
g62
(dp2414
sg71
g67
sg64
(lp2415
g57
(g78
g59
NtRp2416
(dp2417
g62
(dp2418
g82
g83
ssg71
g2412
sg64
(lp2419
S'url'
p2420
asbag57
(g78
g59
NtRp2421
(dp2422
g62
(dp2423
g89
g90
ssg71
g2412
sg64
(lp2424
S':'
asbag57
(g78
g59
NtRp2425
(dp2426
g62
(dp2427
sg71
g2412
sg64
(lp2428
g57
(g58
g59
NtRp2429
(dp2430
g62
(dp2431
g70
I5
ssg71
g2425
sg64
(lp2432
g1260
asbasbasbag57
(g73
g59
NtRp2433
(dp2434
g62
(dp2435
sg71
g67
sg64
(lp2436
g57
(g78
g59
NtRp2437
(dp2438
g62
(dp2439
g82
g83
ssg71
g2433
sg64
(lp2440
S'utcnow'
p2441
asbag57
(g78
g59
NtRp2442
(dp2443
g62
(dp2444
g89
g90
ssg71
g2433
sg64
(lp2445
S':'
asbag57
(g78
g59
NtRp2446
(dp2447
g62
(dp2448
sg71
g2433
sg64
(lp2449
g57
(g58
g59
NtRp2450
(dp2451
g62
(dp2452
g70
I5
ssg71
g2446
sg64
(lp2453
S'datetime.datetime(2013, 3, 9, 8, 33, 11, 150230)'
p2454
asbasbasbag57
(g73
g59
NtRp2455
(dp2456
g62
(dp2457
sg71
g67
sg64
(lp2458
g57
(g78
g59
NtRp2459
(dp2460
g62
(dp2461
g82
g83
ssg71
g2455
sg64
(lp2462
S'uuid'
p2463
asbag57
(g78
g59
NtRp2464
(dp2465
g62
(dp2466
g89
g90
ssg71
g2455
sg64
(lp2467
S':'
asbag57
(g78
g59
NtRp2468
(dp2469
g62
(dp2470
sg71
g2455
sg64
(lp2471
g57
(g58
g59
NtRp2472
(dp2473
g62
(dp2474
g70
I5
ssg71
g2468
sg64
(lp2475
S'DEV_bootstrap_ch/127.0.0.1.2013-03-09.14-03-11.c13c73f5-c186-4542-83ac-32d283bc7858'
p2476
asbasbasbag57
(g73
g59
NtRp2477
(dp2478
g62
(dp2479
sg71
g67
sg64
(lp2480
g57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
g82
g83
ssg71
g2477
sg64
(lp2484
S'vars'
p2485
asbag57
(g78
g59
NtRp2486
(dp2487
g62
(dp2488
g89
g90
ssg71
g2477
sg64
(lp2489
S':'
asbag57
(g78
g59
NtRp2490
(dp2491
g62
(dp2492
sg71
g2477
sg64
(lp2493
g57
(g58
g59
NtRp2494
(dp2495
g62
(dp2496
g70
I5
ssg71
g2490
sg64
(lp2497
g57
(g66
g59
NtRp2498
(dp2499
g62
(dp2500
g70
I4
ssg71
Nsg64
(lp2501
sbasbasbasbag57
(g73
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g67
sg64
(lp2505
g57
(g78
g59
NtRp2506
(dp2507
g62
(dp2508
g82
g83
ssg71
g2502
sg64
(lp2509
S'wsgi'
p2510
asbag57
(g78
g59
NtRp2511
(dp2512
g62
(dp2513
g89
g90
ssg71
g2502
sg64
(lp2514
S':'
asbag57
(g78
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2502
sg64
(lp2518
g57
(g58
g59
NtRp2519
(dp2520
g62
(dp2521
g70
I5
ssg71
g2515
sg64
(lp2522
g57
(g66
g59
NtRp2523
(dp2524
g62
(dp2525
g70
I4
ssg71
Nsg64
(lp2526
g57
(g73
g59
NtRp2527
(dp2528
g62
(dp2529
sg71
g2523
sg64
(lp2530
g57
(g78
g59
NtRp2531
(dp2532
g62
(dp2533
g82
g83
ssg71
g2527
sg64
(lp2534
S'environ'
p2535
asbag57
(g78
g59
NtRp2536
(dp2537
g62
(dp2538
g89
g90
ssg71
g2527
sg64
(lp2539
S':'
asbag57
(g78
g59
NtRp2540
(dp2541
g62
(dp2542
sg71
g2527
sg64
(lp2543
g57
(g58
g59
NtRp2544
(dp2545
g62
(dp2546
g70
I4
ssg71
g2540
sg64
(lp2547
g57
(g66
g59
NtRp2548
(dp2549
g62
(dp2550
g70
I3
ssg71
Nsg64
(lp2551
g57
(g73
g59
NtRp2552
(dp2553
g62
(dp2554
sg71
g2548
sg64
(lp2555
g57
(g78
g59
NtRp2556
(dp2557
g62
(dp2558
g82
g83
ssg71
g2552
sg64
(lp2559
S'HTTP_ACCEPT'
p2560
asbag57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g89
g90
ssg71
g2552
sg64
(lp2564
S':'
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
sg71
g2552
sg64
(lp2568
g57
(g58
g59
NtRp2569
(dp2570
g62
(dp2571
g70
I3
ssg71
g2565
sg64
(lp2572
g930
asbasbasbag57
(g73
g59
NtRp2573
(dp2574
g62
(dp2575
sg71
g2548
sg64
(lp2576
g57
(g78
g59
NtRp2577
(dp2578
g62
(dp2579
g82
g83
ssg71
g2573
sg64
(lp2580
S'HTTP_ACCEPT_CHARSET'
p2581
asbag57
(g78
g59
NtRp2582
(dp2583
g62
(dp2584
g89
g90
ssg71
g2573
sg64
(lp2585
S':'
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
sg71
g2573
sg64
(lp2589
g57
(g58
g59
NtRp2590
(dp2591
g62
(dp2592
g70
I3
ssg71
g2586
sg64
(lp2593
g952
asbasbasbag57
(g73
g59
NtRp2594
(dp2595
g62
(dp2596
sg71
g2548
sg64
(lp2597
g57
(g78
g59
NtRp2598
(dp2599
g62
(dp2600
g82
g83
ssg71
g2594
sg64
(lp2601
S'HTTP_ACCEPT_ENCODING'
p2602
asbag57
(g78
g59
NtRp2603
(dp2604
g62
(dp2605
g89
g90
ssg71
g2594
sg64
(lp2606
S':'
asbag57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
sg71
g2594
sg64
(lp2610
g57
(g58
g59
NtRp2611
(dp2612
g62
(dp2613
g70
I3
ssg71
g2607
sg64
(lp2614
g974
asbasbasbag57
(g73
g59
NtRp2615
(dp2616
g62
(dp2617
sg71
g2548
sg64
(lp2618
g57
(g78
g59
NtRp2619
(dp2620
g62
(dp2621
g82
g83
ssg71
g2615
sg64
(lp2622
S'HTTP_ACCEPT_LANGUAGE'
p2623
asbag57
(g78
g59
NtRp2624
(dp2625
g62
(dp2626
g89
g90
ssg71
g2615
sg64
(lp2627
S':'
asbag57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
sg71
g2615
sg64
(lp2631
g57
(g58
g59
NtRp2632
(dp2633
g62
(dp2634
g70
I3
ssg71
g2628
sg64
(lp2635
g996
asbasbasbag57
(g73
g59
NtRp2636
(dp2637
g62
(dp2638
sg71
g2548
sg64
(lp2639
g57
(g78
g59
NtRp2640
(dp2641
g62
(dp2642
g82
g83
ssg71
g2636
sg64
(lp2643
S'HTTP_CONNECTION'
p2644
asbag57
(g78
g59
NtRp2645
(dp2646
g62
(dp2647
g89
g90
ssg71
g2636
sg64
(lp2648
S':'
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
sg71
g2636
sg64
(lp2652
g57
(g58
g59
NtRp2653
(dp2654
g62
(dp2655
g70
I3
ssg71
g2649
sg64
(lp2656
g1018
asbasbasbag57
(g73
g59
NtRp2657
(dp2658
g62
(dp2659
sg71
g2548
sg64
(lp2660
g57
(g78
g59
NtRp2661
(dp2662
g62
(dp2663
g82
g83
ssg71
g2657
sg64
(lp2664
S'HTTP_COOKIE'
p2665
asbag57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g89
g90
ssg71
g2657
sg64
(lp2669
S':'
asbag57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
sg71
g2657
sg64
(lp2673
g57
(g58
g59
NtRp2674
(dp2675
g62
(dp2676
g70
I3
ssg71
g2670
sg64
(lp2677
g1040
asbasbasbag57
(g73
g59
NtRp2678
(dp2679
g62
(dp2680
sg71
g2548
sg64
(lp2681
g57
(g78
g59
NtRp2682
(dp2683
g62
(dp2684
g82
g83
ssg71
g2678
sg64
(lp2685
S'HTTP_HOST'
p2686
asbag57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g89
g90
ssg71
g2678
sg64
(lp2690
S':'
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
sg71
g2678
sg64
(lp2694
g57
(g58
g59
NtRp2695
(dp2696
g62
(dp2697
g70
I3
ssg71
g2691
sg64
(lp2698
g1062
asbasbasbag57
(g73
g59
NtRp2699
(dp2700
g62
(dp2701
sg71
g2548
sg64
(lp2702
g57
(g78
g59
NtRp2703
(dp2704
g62
(dp2705
g82
g83
ssg71
g2699
sg64
(lp2706
S'HTTP_REFERER'
p2707
asbag57
(g78
g59
NtRp2708
(dp2709
g62
(dp2710
g89
g90
ssg71
g2699
sg64
(lp2711
S':'
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
sg71
g2699
sg64
(lp2715
g57
(g58
g59
NtRp2716
(dp2717
g62
(dp2718
g70
I3
ssg71
g2712
sg64
(lp2719
g1084
asbasbasbag57
(g73
g59
NtRp2720
(dp2721
g62
(dp2722
sg71
g2548
sg64
(lp2723
g57
(g78
g59
NtRp2724
(dp2725
g62
(dp2726
g82
g83
ssg71
g2720
sg64
(lp2727
S'HTTP_USER_AGENT'
p2728
asbag57
(g78
g59
NtRp2729
(dp2730
g62
(dp2731
g89
g90
ssg71
g2720
sg64
(lp2732
S':'
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
sg71
g2720
sg64
(lp2736
g57
(g58
g59
NtRp2737
(dp2738
g62
(dp2739
g70
I3
ssg71
g2733
sg64
(lp2740
g1106
asbasbasbag57
(g73
g59
NtRp2741
(dp2742
g62
(dp2743
sg71
g2548
sg64
(lp2744
g57
(g78
g59
NtRp2745
(dp2746
g62
(dp2747
g82
g83
ssg71
g2741
sg64
(lp2748
S'PATH_INFO'
p2749
asbag57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
g89
g90
ssg71
g2741
sg64
(lp2753
S':'
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
sg71
g2741
sg64
(lp2757
g57
(g58
g59
NtRp2758
(dp2759
g62
(dp2760
g70
I3
ssg71
g2754
sg64
(lp2761
g1260
asbasbasbag57
(g73
g59
NtRp2762
(dp2763
g62
(dp2764
sg71
g2548
sg64
(lp2765
g57
(g78
g59
NtRp2766
(dp2767
g62
(dp2768
g82
g83
ssg71
g2762
sg64
(lp2769
S'QUERY_STRING'
p2770
asbag57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
g89
g90
ssg71
g2762
sg64
(lp2774
S':'
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
sg71
g2762
sg64
(lp2778
g57
(g58
g59
NtRp2779
(dp2780
g62
(dp2781
g70
I3
ssg71
g2775
sg64
(lp2782
S''
asbasbasbag57
(g73
g59
NtRp2783
(dp2784
g62
(dp2785
sg71
g2548
sg64
(lp2786
g57
(g78
g59
NtRp2787
(dp2788
g62
(dp2789
g82
g83
ssg71
g2783
sg64
(lp2790
S'REMOTE_ADDR'
p2791
asbag57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
g89
g90
ssg71
g2783
sg64
(lp2795
S':'
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
sg71
g2783
sg64
(lp2799
g57
(g58
g59
NtRp2800
(dp2801
g62
(dp2802
g70
I3
ssg71
g2796
sg64
(lp2803
g300
asbasbasbag57
(g73
g59
NtRp2804
(dp2805
g62
(dp2806
sg71
g2548
sg64
(lp2807
g57
(g78
g59
NtRp2808
(dp2809
g62
(dp2810
g82
g83
ssg71
g2804
sg64
(lp2811
S'REMOTE_PORT'
p2812
asbag57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g89
g90
ssg71
g2804
sg64
(lp2816
S':'
asbag57
(g78
g59
NtRp2817
(dp2818
g62
(dp2819
sg71
g2804
sg64
(lp2820
g57
(g58
g59
NtRp2821
(dp2822
g62
(dp2823
g70
I3
ssg71
g2817
sg64
(lp2824
g1324
asbasbasbag57
(g73
g59
NtRp2825
(dp2826
g62
(dp2827
sg71
g2548
sg64
(lp2828
g57
(g78
g59
NtRp2829
(dp2830
g62
(dp2831
g82
g83
ssg71
g2825
sg64
(lp2832
S'REQUEST_METHOD'
p2833
asbag57
(g78
g59
NtRp2834
(dp2835
g62
(dp2836
g89
g90
ssg71
g2825
sg64
(lp2837
S':'
asbag57
(g78
g59
NtRp2838
(dp2839
g62
(dp2840
sg71
g2825
sg64
(lp2841
g57
(g58
g59
NtRp2842
(dp2843
g62
(dp2844
g70
I3
ssg71
g2838
sg64
(lp2845
g1346
asbasbasbag57
(g73
g59
NtRp2846
(dp2847
g62
(dp2848
sg71
g2548
sg64
(lp2849
g57
(g78
g59
NtRp2850
(dp2851
g62
(dp2852
g82
g83
ssg71
g2846
sg64
(lp2853
S'REQUEST_URI'
p2854
asbag57
(g78
g59
NtRp2855
(dp2856
g62
(dp2857
g89
g90
ssg71
g2846
sg64
(lp2858
S':'
asbag57
(g78
g59
NtRp2859
(dp2860
g62
(dp2861
sg71
g2846
sg64
(lp2862
g57
(g58
g59
NtRp2863
(dp2864
g62
(dp2865
g70
I3
ssg71
g2859
sg64
(lp2866
g1260
asbasbasbag57
(g73
g59
NtRp2867
(dp2868
g62
(dp2869
sg71
g2548
sg64
(lp2870
g57
(g78
g59
NtRp2871
(dp2872
g62
(dp2873
g82
g83
ssg71
g2867
sg64
(lp2874
S'SCRIPT_NAME'
p2875
asbag57
(g78
g59
NtRp2876
(dp2877
g62
(dp2878
g89
g90
ssg71
g2867
sg64
(lp2879
S':'
asbag57
(g78
g59
NtRp2880
(dp2881
g62
(dp2882
sg71
g2867
sg64
(lp2883
g57
(g58
g59
NtRp2884
(dp2885
g62
(dp2886
g70
I3
ssg71
g2880
sg64
(lp2887
S''
asbasbasbag57
(g73
g59
NtRp2888
(dp2889
g62
(dp2890
sg71
g2548
sg64
(lp2891
g57
(g78
g59
NtRp2892
(dp2893
g62
(dp2894
g82
g83
ssg71
g2888
sg64
(lp2895
S'SERVER_NAME'
p2896
asbag57
(g78
g59
NtRp2897
(dp2898
g62
(dp2899
g89
g90
ssg71
g2888
sg64
(lp2900
S':'
asbag57
(g78
g59
NtRp2901
(dp2902
g62
(dp2903
sg71
g2888
sg64
(lp2904
g57
(g58
g59
NtRp2905
(dp2906
g62
(dp2907
g70
I3
ssg71
g2901
sg64
(lp2908
g1410
asbasbasbag57
(g73
g59
NtRp2909
(dp2910
g62
(dp2911
sg71
g2548
sg64
(lp2912
g57
(g78
g59
NtRp2913
(dp2914
g62
(dp2915
g82
g83
ssg71
g2909
sg64
(lp2916
S'SERVER_PORT'
p2917
asbag57
(g78
g59
NtRp2918
(dp2919
g62
(dp2920
g89
g90
ssg71
g2909
sg64
(lp2921
S':'
asbag57
(g78
g59
NtRp2922
(dp2923
g62
(dp2924
sg71
g2909
sg64
(lp2925
g57
(g58
g59
NtRp2926
(dp2927
g62
(dp2928
g70
I3
ssg71
g2922
sg64
(lp2929
g1432
asbasbasbag57
(g73
g59
NtRp2930
(dp2931
g62
(dp2932
sg71
g2548
sg64
(lp2933
g57
(g78
g59
NtRp2934
(dp2935
g62
(dp2936
g82
g83
ssg71
g2930
sg64
(lp2937
S'SERVER_PROTOCOL'
p2938
asbag57
(g78
g59
NtRp2939
(dp2940
g62
(dp2941
g89
g90
ssg71
g2930
sg64
(lp2942
S':'
asbag57
(g78
g59
NtRp2943
(dp2944
g62
(dp2945
sg71
g2930
sg64
(lp2946
g57
(g58
g59
NtRp2947
(dp2948
g62
(dp2949
g70
I3
ssg71
g2943
sg64
(lp2950
g1454
asbasbasbag57
(g73
g59
NtRp2951
(dp2952
g62
(dp2953
sg71
g2548
sg64
(lp2954
g57
(g78
g59
NtRp2955
(dp2956
g62
(dp2957
g82
g83
ssg71
g2951
sg64
(lp2958
S'SERVER_SOFTWARE'
p2959
asbag57
(g78
g59
NtRp2960
(dp2961
g62
(dp2962
g89
g90
ssg71
g2951
sg64
(lp2963
S':'
asbag57
(g78
g59
NtRp2964
(dp2965
g62
(dp2966
sg71
g2951
sg64
(lp2967
g57
(g58
g59
NtRp2968
(dp2969
g62
(dp2970
g70
I3
ssg71
g2964
sg64
(lp2971
g1476
asbasbasbag57
(g73
g59
NtRp2972
(dp2973
g62
(dp2974
sg71
g2548
sg64
(lp2975
g57
(g78
g59
NtRp2976
(dp2977
g62
(dp2978
g82
g83
ssg71
g2972
sg64
(lp2979
S'wsgi.errors'
p2980
asbag57
(g78
g59
NtRp2981
(dp2982
g62
(dp2983
g89
g90
ssg71
g2972
sg64
(lp2984
S':'
asbag57
(g78
g59
NtRp2985
(dp2986
g62
(dp2987
sg71
g2972
sg64
(lp2988
g57
(g58
g59
NtRp2989
(dp2990
g62
(dp2991
g70
I3
ssg71
g2985
sg64
(lp2992
S"<open file '<stderr>', mode 'w' at 0xb73110d0>"
p2993
asbasbasbag57
(g73
g59
NtRp2994
(dp2995
g62
(dp2996
sg71
g2548
sg64
(lp2997
g57
(g78
g59
NtRp2998
(dp2999
g62
(dp3000
g82
g83
ssg71
g2994
sg64
(lp3001
S'wsgi.file_wrapper'
p3002
asbag57
(g78
g59
NtRp3003
(dp3004
g62
(dp3005
g89
g90
ssg71
g2994
sg64
(lp3006
S':'
asbag57
(g78
g59
NtRp3007
(dp3008
g62
(dp3009
sg71
g2994
sg64
(lp3010
g57
(g58
g59
NtRp3011
(dp3012
g62
(dp3013
g70
I3
ssg71
g3007
sg64
(lp3014
S'<class wsgiref.util.FileWrapper at 0x9da3b9c>'
p3015
asbasbasbag57
(g73
g59
NtRp3016
(dp3017
g62
(dp3018
sg71
g2548
sg64
(lp3019
g57
(g78
g59
NtRp3020
(dp3021
g62
(dp3022
g82
g83
ssg71
g3016
sg64
(lp3023
S'wsgi.input'
p3024
asbag57
(g78
g59
NtRp3025
(dp3026
g62
(dp3027
g89
g90
ssg71
g3016
sg64
(lp3028
S':'
asbag57
(g78
g59
NtRp3029
(dp3030
g62
(dp3031
sg71
g3016
sg64
(lp3032
g57
(g58
g59
NtRp3033
(dp3034
g62
(dp3035
g70
I3
ssg71
g3029
sg64
(lp3036
S'<cStringIO.StringO object at 0xaf9ba1a0>'
p3037
asbasbasbag57
(g73
g59
NtRp3038
(dp3039
g62
(dp3040
sg71
g2548
sg64
(lp3041
g57
(g78
g59
NtRp3042
(dp3043
g62
(dp3044
g82
g83
ssg71
g3038
sg64
(lp3045
S'wsgi.multiprocess'
p3046
asbag57
(g78
g59
NtRp3047
(dp3048
g62
(dp3049
g89
g90
ssg71
g3038
sg64
(lp3050
S':'
asbag57
(g78
g59
NtRp3051
(dp3052
g62
(dp3053
sg71
g3038
sg64
(lp3054
g57
(g58
g59
NtRp3055
(dp3056
g62
(dp3057
g70
I3
ssg71
g3051
sg64
(lp3058
g100
asbasbasbag57
(g73
g59
NtRp3059
(dp3060
g62
(dp3061
sg71
g2548
sg64
(lp3062
g57
(g78
g59
NtRp3063
(dp3064
g62
(dp3065
g82
g83
ssg71
g3059
sg64
(lp3066
S'wsgi.multithread'
p3067
asbag57
(g78
g59
NtRp3068
(dp3069
g62
(dp3070
g89
g90
ssg71
g3059
sg64
(lp3071
S':'
asbag57
(g78
g59
NtRp3072
(dp3073
g62
(dp3074
sg71
g3059
sg64
(lp3075
g57
(g58
g59
NtRp3076
(dp3077
g62
(dp3078
g70
I3
ssg71
g3072
sg64
(lp3079
g1693
asbasbasbag57
(g73
g59
NtRp3080
(dp3081
g62
(dp3082
sg71
g2548
sg64
(lp3083
g57
(g78
g59
NtRp3084
(dp3085
g62
(dp3086
g82
g83
ssg71
g3080
sg64
(lp3087
S'wsgi.run_once'
p3088
asbag57
(g78
g59
NtRp3089
(dp3090
g62
(dp3091
g89
g90
ssg71
g3080
sg64
(lp3092
S':'
asbag57
(g78
g59
NtRp3093
(dp3094
g62
(dp3095
sg71
g3080
sg64
(lp3096
g57
(g58
g59
NtRp3097
(dp3098
g62
(dp3099
g70
I3
ssg71
g3093
sg64
(lp3100
g100
asbasbasbag57
(g73
g59
NtRp3101
(dp3102
g62
(dp3103
sg71
g2548
sg64
(lp3104
g57
(g78
g59
NtRp3105
(dp3106
g62
(dp3107
g82
g83
ssg71
g3101
sg64
(lp3108
S'wsgi.url_scheme'
p3109
asbag57
(g78
g59
NtRp3110
(dp3111
g62
(dp3112
g89
g90
ssg71
g3101
sg64
(lp3113
S':'
asbag57
(g78
g59
NtRp3114
(dp3115
g62
(dp3116
sg71
g3101
sg64
(lp3117
g57
(g58
g59
NtRp3118
(dp3119
g62
(dp3120
g70
I3
ssg71
g3114
sg64
(lp3121
g1736
asbasbasbag57
(g73
g59
NtRp3122
(dp3123
g62
(dp3124
sg71
g2548
sg64
(lp3125
g57
(g78
g59
NtRp3126
(dp3127
g62
(dp3128
g82
g83
ssg71
g3122
sg64
(lp3129
S'wsgi.version'
p3130
asbag57
(g78
g59
NtRp3131
(dp3132
g62
(dp3133
g89
g90
ssg71
g3122
sg64
(lp3134
S':'
asbag57
(g78
g59
NtRp3135
(dp3136
g62
(dp3137
sg71
g3122
sg64
(lp3138
g57
(g58
g59
NtRp3139
(dp3140
g62
(dp3141
g70
I3
ssg71
g3135
sg64
(lp3142
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3143
(lp3144
(dp3145
S'file'
p3146
S'/home/anil/Downloads/web2py/gluon/restricted.py'
p3147
sS'dump'
p3148
(dp3149
S'environment'
p3150
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3151
sS'ccode'
p3152
S'<code object <module> at 0xaff25698, file "/home...EV_bootstrap_ch/controllers/default.py", line 16>'
p3153
ssS'lnum'
p3154
I212
sS'lines'
p3155
(dp3156
I207
S'    try:'
p3157
sI208
S'        if isinstance(code, types.CodeType):'
p3158
sI209
S'            ccode = code'
p3159
sI210
S'        else:'
p3160
sI211
S'            ccode = compile2(code, layer)'
p3161
sI212
S'        exec ccode in environment'
p3162
sI213
S'    except HTTP:'
p3163
sI214
S'        raise'
p3164
sI215
S'    except RestrictedError:'
p3165
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3166
ssS'call'
p3167
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...()\\n\\n\\n\\nresponse._vars=response._caller(duplicate)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3168
sS'func'
p3169
S'restricted'
p3170
sa(dp3171
g3146
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3172
sg3148
(dp3173
sg3154
I1201
sg3155
(dp3174
I1190
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3175
sI1191
S'   """ per sample . takes id of the sample as the input """'
p3176
sI1192
S'   sid = request.args(0)'
p3177
sI1193
S'   sample = db(db.sample.id == sid).select().first()'
p3178
sI1194
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3179
sI1195
S'   form = SQLFORM(db.sample_files)'
p3180
sI1196
S'   form.vars.sample = sid'
p3181
sI1197
S'   return locals()'
p3182
sI1198
S''
sI1199
S''
ssg3167
S'()'
p3183
sg3169
S'<module>'
p3184
sa(dp3185
g3146
S'/home/anil/Downloads/web2py/gluon/globals.py'
p3186
sg3148
(dp3187
S'self'
p3188
S'undefined'
p3189
sS'f'
S'<function duplicate>'
p3190
ssg3154
I193
sg3155
(dp3191
I192
S'        self._vars = None'
p3192
sI193
S'        self._caller = lambda f: f()'
p3193
sI194
S'        self._view_environment = None'
p3194
sI195
S'        self._custom_commit = None'
p3195
sI196
S'        self._custom_rollback = None'
p3196
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3197
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3198
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3199
sI191
S"        self.delimiters = ('{{', '}}')"
p3200
ssg3167
S'(f=<function duplicate>)'
p3201
sg3169
S'<lambda>'
p3202
sa(dp3203
g3146
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3204
sg3148
(dp3205
S'request.args'
p3206
S"['project', 'experiment.project', '1', 'sample.experiment', '1', 'replicate', '3']"
p3207
sS'sam'
p3208
g3189
sS'global request'
p3209
S"<Storage {'function': 'duplicate', 'body': <cStr...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3210
sS'args'
p3211
g3189
sS'global URL'
p3212
S'<function URL>'
p3213
sS'global redirect'
p3214
S'<function redirect>'
p3215
ssg3154
I383
sg3155
(dp3216
I384
S"    redirect(URL('list_all_dev_projects',args=[]))"
p3217
sI385
S''
sI386
S''
sI387
S'def my_samples():'
p3218
sI378
S"        for tb in ['biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry']:"
p3219
sI379
S'            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()'
p3220
sI380
S'            if row:'
p3221
sI381
S'                row.update(sample_name = in_row.id)'
p3222
sI382
S'                sam=db[tb].insert(**db[tb]._filter_fields(row))'
p3223
sI383
S"        redirect(URL('list_all_dev_projects',args=request.args[0:-2]+['edit','sample',sam.id]))"
p3224
ssg3167
S'()'
p3225
sg3169
S'duplicate'
p3226
sasS'pyver'
p3227
S'Python 2.7.3: /usr/bin/python'
p3228
sS'session'
p3229
g57
(g58
g59
NtRp3230
(dp3231
g62
(dp3232
sg64
(lp3233
g57
(g66
g59
NtRp3234
(dp3235
g62
(dp3236
g70
I5
ssg71
Nsg64
(lp3237
g57
(g73
g59
NtRp3238
(dp3239
g62
(dp3240
sg71
g3234
sg64
(lp3241
g57
(g78
g59
NtRp3242
(dp3243
g62
(dp3244
g82
g83
ssg71
g3238
sg64
(lp3245
S'auth'
p3246
asbag57
(g78
g59
NtRp3247
(dp3248
g62
(dp3249
g89
g90
ssg71
g3238
sg64
(lp3250
S':'
asbag57
(g78
g59
NtRp3251
(dp3252
g62
(dp3253
sg71
g3238
sg64
(lp3254
g57
(g58
g59
NtRp3255
(dp3256
g62
(dp3257
g70
I5
ssg71
g3251
sg64
(lp3258
g57
(g66
g59
NtRp3259
(dp3260
g62
(dp3261
g70
I4
ssg71
Nsg64
(lp3262
g57
(g73
g59
NtRp3263
(dp3264
g62
(dp3265
sg71
g3259
sg64
(lp3266
g57
(g78
g59
NtRp3267
(dp3268
g62
(dp3269
g82
g83
ssg71
g3263
sg64
(lp3270
S'expiration'
p3271
asbag57
(g78
g59
NtRp3272
(dp3273
g62
(dp3274
g89
g90
ssg71
g3263
sg64
(lp3275
S':'
asbag57
(g78
g59
NtRp3276
(dp3277
g62
(dp3278
sg71
g3263
sg64
(lp3279
g57
(g58
g59
NtRp3280
(dp3281
g62
(dp3282
g70
I4
ssg71
g3276
sg64
(lp3283
S'3600'
p3284
asbasbasbag57
(g73
g59
NtRp3285
(dp3286
g62
(dp3287
sg71
g3259
sg64
(lp3288
g57
(g78
g59
NtRp3289
(dp3290
g62
(dp3291
g82
g83
ssg71
g3285
sg64
(lp3292
S'hmac_key'
p3293
asbag57
(g78
g59
NtRp3294
(dp3295
g62
(dp3296
g89
g90
ssg71
g3285
sg64
(lp3297
S':'
asbag57
(g78
g59
NtRp3298
(dp3299
g62
(dp3300
sg71
g3285
sg64
(lp3301
g57
(g58
g59
NtRp3302
(dp3303
g62
(dp3304
g70
I4
ssg71
g3298
sg64
(lp3305
S'815fe132-3de7-4f91-aebc-0bcd01c4dde2'
p3306
asbasbasbag57
(g73
g59
NtRp3307
(dp3308
g62
(dp3309
sg71
g3259
sg64
(lp3310
g57
(g78
g59
NtRp3311
(dp3312
g62
(dp3313
g82
g83
ssg71
g3307
sg64
(lp3314
S'last_visit'
p3315
asbag57
(g78
g59
NtRp3316
(dp3317
g62
(dp3318
g89
g90
ssg71
g3307
sg64
(lp3319
S':'
asbag57
(g78
g59
NtRp3320
(dp3321
g62
(dp3322
sg71
g3307
sg64
(lp3323
g57
(g58
g59
NtRp3324
(dp3325
g62
(dp3326
g70
I4
ssg71
g3320
sg64
(lp3327
S'datetime.datetime(2013, 3, 9, 14, 1, 21, 515046)'
p3328
asbasbasbag57
(g73
g59
NtRp3329
(dp3330
g62
(dp3331
sg71
g3259
sg64
(lp3332
g57
(g78
g59
NtRp3333
(dp3334
g62
(dp3335
g82
g83
ssg71
g3329
sg64
(lp3336
S'remember'
p3337
asbag57
(g78
g59
NtRp3338
(dp3339
g62
(dp3340
g89
g90
ssg71
g3329
sg64
(lp3341
S':'
asbag57
(g78
g59
NtRp3342
(dp3343
g62
(dp3344
sg71
g3329
sg64
(lp3345
g57
(g58
g59
NtRp3346
(dp3347
g62
(dp3348
g70
I4
ssg71
g3342
sg64
(lp3349
g100
asbasbasbag57
(g73
g59
NtRp3350
(dp3351
g62
(dp3352
sg71
g3259
sg64
(lp3353
g57
(g78
g59
NtRp3354
(dp3355
g62
(dp3356
g82
g83
ssg71
g3350
sg64
(lp3357
S'user'
p3358
asbag57
(g78
g59
NtRp3359
(dp3360
g62
(dp3361
g89
g90
ssg71
g3350
sg64
(lp3362
S':'
asbag57
(g78
g59
NtRp3363
(dp3364
g62
(dp3365
sg71
g3350
sg64
(lp3366
g57
(g58
g59
NtRp3367
(dp3368
g62
(dp3369
g70
I4
ssg71
g3363
sg64
(lp3370
g57
(g66
g59
NtRp3371
(dp3372
g62
(dp3373
g70
I3
ssg71
Nsg64
(lp3374
g57
(g73
g59
NtRp3375
(dp3376
g62
(dp3377
sg71
g3371
sg64
(lp3378
g57
(g78
g59
NtRp3379
(dp3380
g62
(dp3381
g82
g83
ssg71
g3375
sg64
(lp3382
S'address'
p3383
asbag57
(g78
g59
NtRp3384
(dp3385
g62
(dp3386
g89
g90
ssg71
g3375
sg64
(lp3387
S':'
asbag57
(g78
g59
NtRp3388
(dp3389
g62
(dp3390
sg71
g3375
sg64
(lp3391
g57
(g58
g59
NtRp3392
(dp3393
g62
(dp3394
g70
I3
ssg71
g3388
sg64
(lp3395
S'dsaf'
p3396
asbasbasbag57
(g73
g59
NtRp3397
(dp3398
g62
(dp3399
sg71
g3371
sg64
(lp3400
g57
(g78
g59
NtRp3401
(dp3402
g62
(dp3403
g82
g83
ssg71
g3397
sg64
(lp3404
S'affiliated_to'
p3405
asbag57
(g78
g59
NtRp3406
(dp3407
g62
(dp3408
g89
g90
ssg71
g3397
sg64
(lp3409
S':'
asbag57
(g78
g59
NtRp3410
(dp3411
g62
(dp3412
sg71
g3397
sg64
(lp3413
g57
(g58
g59
NtRp3414
(dp3415
g62
(dp3416
g70
I3
ssg71
g3410
sg64
(lp3417
S'fdsa'
p3418
asbasbasbag57
(g73
g59
NtRp3419
(dp3420
g62
(dp3421
sg71
g3371
sg64
(lp3422
g57
(g78
g59
NtRp3423
(dp3424
g62
(dp3425
g82
g83
ssg71
g3419
sg64
(lp3426
S'city'
p3427
asbag57
(g78
g59
NtRp3428
(dp3429
g62
(dp3430
g89
g90
ssg71
g3419
sg64
(lp3431
S':'
asbag57
(g78
g59
NtRp3432
(dp3433
g62
(dp3434
sg71
g3419
sg64
(lp3435
g57
(g58
g59
NtRp3436
(dp3437
g62
(dp3438
g70
I3
ssg71
g3432
sg64
(lp3439
S'ongole'
p3440
asbasbasbag57
(g73
g59
NtRp3441
(dp3442
g62
(dp3443
sg71
g3371
sg64
(lp3444
g57
(g78
g59
NtRp3445
(dp3446
g62
(dp3447
g82
g83
ssg71
g3441
sg64
(lp3448
S'country'
p3449
asbag57
(g78
g59
NtRp3450
(dp3451
g62
(dp3452
g89
g90
ssg71
g3441
sg64
(lp3453
S':'
asbag57
(g78
g59
NtRp3454
(dp3455
g62
(dp3456
sg71
g3441
sg64
(lp3457
g57
(g58
g59
NtRp3458
(dp3459
g62
(dp3460
g70
I3
ssg71
g3454
sg64
(lp3461
S'India'
p3462
asbasbasbag57
(g73
g59
NtRp3463
(dp3464
g62
(dp3465
sg71
g3371
sg64
(lp3466
g57
(g78
g59
NtRp3467
(dp3468
g62
(dp3469
g82
g83
ssg71
g3463
sg64
(lp3470
S'email'
p3471
asbag57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g89
g90
ssg71
g3463
sg64
(lp3475
S':'
asbag57
(g78
g59
NtRp3476
(dp3477
g62
(dp3478
sg71
g3463
sg64
(lp3479
g57
(g58
g59
NtRp3480
(dp3481
g62
(dp3482
g70
I3
ssg71
g3476
sg64
(lp3483
S'anil1in7@gmail.com'
p3484
asbasbasbag57
(g73
g59
NtRp3485
(dp3486
g62
(dp3487
sg71
g3371
sg64
(lp3488
g57
(g78
g59
NtRp3489
(dp3490
g62
(dp3491
g82
g83
ssg71
g3485
sg64
(lp3492
S'first_name'
p3493
asbag57
(g78
g59
NtRp3494
(dp3495
g62
(dp3496
g89
g90
ssg71
g3485
sg64
(lp3497
S':'
asbag57
(g78
g59
NtRp3498
(dp3499
g62
(dp3500
sg71
g3485
sg64
(lp3501
g57
(g58
g59
NtRp3502
(dp3503
g62
(dp3504
g70
I3
ssg71
g3498
sg64
(lp3505
S'Anil Kumar'
p3506
asbasbasbag57
(g73
g59
NtRp3507
(dp3508
g62
(dp3509
sg71
g3371
sg64
(lp3510
g57
(g78
g59
NtRp3511
(dp3512
g62
(dp3513
g82
g83
ssg71
g3507
sg64
(lp3514
S'id'
p3515
asbag57
(g78
g59
NtRp3516
(dp3517
g62
(dp3518
g89
g90
ssg71
g3507
sg64
(lp3519
S':'
asbag57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
sg71
g3507
sg64
(lp3523
g57
(g58
g59
NtRp3524
(dp3525
g62
(dp3526
g70
I3
ssg71
g3520
sg64
(lp3527
S'1'
asbasbasbag57
(g73
g59
NtRp3528
(dp3529
g62
(dp3530
sg71
g3371
sg64
(lp3531
g57
(g78
g59
NtRp3532
(dp3533
g62
(dp3534
g82
g83
ssg71
g3528
sg64
(lp3535
S'last_name'
p3536
asbag57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
g89
g90
ssg71
g3528
sg64
(lp3540
S':'
asbag57
(g78
g59
NtRp3541
(dp3542
g62
(dp3543
sg71
g3528
sg64
(lp3544
g57
(g58
g59
NtRp3545
(dp3546
g62
(dp3547
g70
I3
ssg71
g3541
sg64
(lp3548
S'Nalamalapu'
p3549
asbasbasbag57
(g73
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3371
sg64
(lp3553
g57
(g78
g59
NtRp3554
(dp3555
g62
(dp3556
g82
g83
ssg71
g3550
sg64
(lp3557
S'mobile'
p3558
asbag57
(g78
g59
NtRp3559
(dp3560
g62
(dp3561
g89
g90
ssg71
g3550
sg64
(lp3562
S':'
asbag57
(g78
g59
NtRp3563
(dp3564
g62
(dp3565
sg71
g3550
sg64
(lp3566
g57
(g58
g59
NtRp3567
(dp3568
g62
(dp3569
g70
I3
ssg71
g3563
sg64
(lp3570
S'918885334113'
p3571
asbasbasbag57
(g73
g59
NtRp3572
(dp3573
g62
(dp3574
sg71
g3371
sg64
(lp3575
g57
(g78
g59
NtRp3576
(dp3577
g62
(dp3578
g82
g83
ssg71
g3572
sg64
(lp3579
S'phone'
p3580
asbag57
(g78
g59
NtRp3581
(dp3582
g62
(dp3583
g89
g90
ssg71
g3572
sg64
(lp3584
S':'
asbag57
(g78
g59
NtRp3585
(dp3586
g62
(dp3587
sg71
g3572
sg64
(lp3588
g57
(g58
g59
NtRp3589
(dp3590
g62
(dp3591
g70
I3
ssg71
g3585
sg64
(lp3592
S'918885334113'
p3593
asbasbasbag57
(g73
g59
NtRp3594
(dp3595
g62
(dp3596
sg71
g3371
sg64
(lp3597
g57
(g78
g59
NtRp3598
(dp3599
g62
(dp3600
g82
g83
ssg71
g3594
sg64
(lp3601
S'position'
p3602
asbag57
(g78
g59
NtRp3603
(dp3604
g62
(dp3605
g89
g90
ssg71
g3594
sg64
(lp3606
S':'
asbag57
(g78
g59
NtRp3607
(dp3608
g62
(dp3609
sg71
g3594
sg64
(lp3610
g57
(g58
g59
NtRp3611
(dp3612
g62
(dp3613
g70
I3
ssg71
g3607
sg64
(lp3614
S'2'
asbasbasbag57
(g73
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3371
sg64
(lp3618
g57
(g78
g59
NtRp3619
(dp3620
g62
(dp3621
g82
g83
ssg71
g3615
sg64
(lp3622
S'postal_code'
p3623
asbag57
(g78
g59
NtRp3624
(dp3625
g62
(dp3626
g89
g90
ssg71
g3615
sg64
(lp3627
S':'
asbag57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
sg71
g3615
sg64
(lp3631
g57
(g58
g59
NtRp3632
(dp3633
g62
(dp3634
g70
I3
ssg71
g3628
sg64
(lp3635
S'523182'
p3636
asbasbasbag57
(g73
g59
NtRp3637
(dp3638
g62
(dp3639
sg71
g3371
sg64
(lp3640
g57
(g78
g59
NtRp3641
(dp3642
g62
(dp3643
g82
g83
ssg71
g3637
sg64
(lp3644
S'registration_id'
p3645
asbag57
(g78
g59
NtRp3646
(dp3647
g62
(dp3648
g89
g90
ssg71
g3637
sg64
(lp3649
S':'
asbag57
(g78
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3637
sg64
(lp3653
g57
(g58
g59
NtRp3654
(dp3655
g62
(dp3656
g70
I3
ssg71
g3650
sg64
(lp3657
S''
asbasbasbag57
(g73
g59
NtRp3658
(dp3659
g62
(dp3660
sg71
g3371
sg64
(lp3661
g57
(g78
g59
NtRp3662
(dp3663
g62
(dp3664
g82
g83
ssg71
g3658
sg64
(lp3665
S'registration_key'
p3666
asbag57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g89
g90
ssg71
g3658
sg64
(lp3670
S':'
asbag57
(g78
g59
NtRp3671
(dp3672
g62
(dp3673
sg71
g3658
sg64
(lp3674
g57
(g58
g59
NtRp3675
(dp3676
g62
(dp3677
g70
I3
ssg71
g3671
sg64
(lp3678
S''
asbasbasbag57
(g73
g59
NtRp3679
(dp3680
g62
(dp3681
sg71
g3371
sg64
(lp3682
g57
(g78
g59
NtRp3683
(dp3684
g62
(dp3685
g82
g83
ssg71
g3679
sg64
(lp3686
S'reset_password_key'
p3687
asbag57
(g78
g59
NtRp3688
(dp3689
g62
(dp3690
g89
g90
ssg71
g3679
sg64
(lp3691
S':'
asbag57
(g78
g59
NtRp3692
(dp3693
g62
(dp3694
sg71
g3679
sg64
(lp3695
g57
(g58
g59
NtRp3696
(dp3697
g62
(dp3698
g70
I3
ssg71
g3692
sg64
(lp3699
S''
asbasbasbag57
(g73
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3371
sg64
(lp3703
g57
(g78
g59
NtRp3704
(dp3705
g62
(dp3706
g82
g83
ssg71
g3700
sg64
(lp3707
S'title'
p3708
asbag57
(g78
g59
NtRp3709
(dp3710
g62
(dp3711
g89
g90
ssg71
g3700
sg64
(lp3712
S':'
asbag57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
sg71
g3700
sg64
(lp3716
g57
(g58
g59
NtRp3717
(dp3718
g62
(dp3719
g70
I3
ssg71
g3713
sg64
(lp3720
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3259
sg64
(lp3724
g57
(g78
g59
NtRp3725
(dp3726
g62
(dp3727
g82
g83
ssg71
g3721
sg64
(lp3728
S'user_groups'
p3729
asbag57
(g78
g59
NtRp3730
(dp3731
g62
(dp3732
g89
g90
ssg71
g3721
sg64
(lp3733
S':'
asbag57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3721
sg64
(lp3737
g57
(g58
g59
NtRp3738
(dp3739
g62
(dp3740
g70
I4
ssg71
g3734
sg64
(lp3741
g57
(g66
g59
NtRp3742
(dp3743
g62
(dp3744
g70
I3
ssg71
Nsg64
(lp3745
g57
(g73
g59
NtRp3746
(dp3747
g62
(dp3748
sg71
g3742
sg64
(lp3749
g57
(g78
g59
NtRp3750
(dp3751
g62
(dp3752
g82
g83
ssg71
g3746
sg64
(lp3753
S'1'
asbag57
(g78
g59
NtRp3754
(dp3755
g62
(dp3756
g89
g90
ssg71
g3746
sg64
(lp3757
S':'
asbag57
(g78
g59
NtRp3758
(dp3759
g62
(dp3760
sg71
g3746
sg64
(lp3761
g57
(g58
g59
NtRp3762
(dp3763
g62
(dp3764
g70
I3
ssg71
g3758
sg64
(lp3765
S'user_1'
p3766
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3767
(dp3768
g62
(dp3769
sg71
g3234
sg64
(lp3770
g57
(g78
g59
NtRp3771
(dp3772
g62
(dp3773
g82
g83
ssg71
g3767
sg64
(lp3774
S'flash'
p3775
asbag57
(g78
g59
NtRp3776
(dp3777
g62
(dp3778
g89
g90
ssg71
g3767
sg64
(lp3779
S':'
asbag57
(g78
g59
NtRp3780
(dp3781
g62
(dp3782
sg71
g3767
sg64
(lp3783
g57
(g58
g59
NtRp3784
(dp3785
g62
(dp3786
g70
I5
ssg71
g3780
sg64
(lp3787
S'None'
p3788
asbasbasbag57
(g73
g59
NtRp3789
(dp3790
g62
(dp3791
sg71
g3234
sg64
(lp3792
g57
(g78
g59
NtRp3793
(dp3794
g62
(dp3795
g82
g83
ssg71
g3789
sg64
(lp3796
S'last_orderby'
p3797
asbag57
(g78
g59
NtRp3798
(dp3799
g62
(dp3800
g89
g90
ssg71
g3789
sg64
(lp3801
S':'
asbag57
(g78
g59
NtRp3802
(dp3803
g62
(dp3804
sg71
g3789
sg64
(lp3805
g57
(g58
g59
NtRp3806
(dp3807
g62
(dp3808
g70
I5
ssg71
g3802
sg64
(lp3809
S'None'
p3810
asbasbasbag57
(g73
g59
NtRp3811
(dp3812
g62
(dp3813
sg71
g3234
sg64
(lp3814
g57
(g78
g59
NtRp3815
(dp3816
g62
(dp3817
g82
g83
ssg71
g3811
sg64
(lp3818
S'last_query'
p3819
asbag57
(g78
g59
NtRp3820
(dp3821
g62
(dp3822
g89
g90
ssg71
g3811
sg64
(lp3823
S':'
asbag57
(g78
g59
NtRp3824
(dp3825
g62
(dp3826
sg71
g3811
sg64
(lp3827
g57
(g58
g59
NtRp3828
(dp3829
g62
(dp3830
g70
I5
ssg71
g3824
sg64
(lp3831
S'db.project.id>0'
p3832
asbasbasbasbasbsS'etype'
p3833
S"<type 'exceptions.UnboundLocalError'>"
p3834
sS'date'
p3835
S'Sat Mar  9 14:03:11 2013'
p3836
sS'response'
p3837
g57
(g58
g59
NtRp3838
(dp3839
g62
(dp3840
sg64
(lp3841
g57
(g66
g59
NtRp3842
(dp3843
g62
(dp3844
g70
I5
ssg71
Nsg64
(lp3845
g57
(g73
g59
NtRp3846
(dp3847
g62
(dp3848
sg71
g3842
sg64
(lp3849
g57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
g82
g83
ssg71
g3846
sg64
(lp3853
g243
asbag57
(g78
g59
NtRp3854
(dp3855
g62
(dp3856
g89
g90
ssg71
g3846
sg64
(lp3857
S':'
asbag57
(g78
g59
NtRp3858
(dp3859
g62
(dp3860
sg71
g3846
sg64
(lp3861
g57
(g58
g59
NtRp3862
(dp3863
g62
(dp3864
g70
I5
ssg71
g3858
sg64
(lp3865
S'<cStringIO.StringO object at 0xb032b9c0>'
p3866
asbasbasbag57
(g73
g59
NtRp3867
(dp3868
g62
(dp3869
sg71
g3842
sg64
(lp3870
g57
(g78
g59
NtRp3871
(dp3872
g62
(dp3873
g82
g83
ssg71
g3867
sg64
(lp3874
g331
asbag57
(g78
g59
NtRp3875
(dp3876
g62
(dp3877
g89
g90
ssg71
g3867
sg64
(lp3878
S':'
asbag57
(g78
g59
NtRp3879
(dp3880
g62
(dp3881
sg71
g3867
sg64
(lp3882
g57
(g58
g59
NtRp3883
(dp3884
g62
(dp3885
g70
I5
ssg71
g3879
sg64
(lp3886
g57
(g66
g59
NtRp3887
(dp3888
g62
(dp3889
g70
I4
ssg71
Nsg64
(lp3890
g57
(g73
g59
NtRp3891
(dp3892
g62
(dp3893
sg71
g3887
sg64
(lp3894
g57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
g82
g83
ssg71
g3891
sg64
(lp3898
S'session_id_dev_bootstrap_ch'
p3899
asbag57
(g78
g59
NtRp3900
(dp3901
g62
(dp3902
g89
g90
ssg71
g3891
sg64
(lp3903
S':'
asbag57
(g78
g59
NtRp3904
(dp3905
g62
(dp3906
sg71
g3891
sg64
(lp3907
g57
(g58
g59
NtRp3908
(dp3909
g62
(dp3910
g70
I4
ssg71
g3904
sg64
(lp3911
g563
ag57
(g66
g59
NtRp3912
(dp3913
g62
(dp3914
g70
I3
ssg71
Nsg64
(lp3915
g57
(g73
g59
NtRp3916
(dp3917
g62
(dp3918
sg71
g3912
sg64
(lp3919
g57
(g78
g59
NtRp3920
(dp3921
g62
(dp3922
g82
g83
ssg71
g3916
sg64
(lp3923
g382
asbag57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
g89
g90
ssg71
g3916
sg64
(lp3927
S':'
asbag57
(g78
g59
NtRp3928
(dp3929
g62
(dp3930
sg71
g3916
sg64
(lp3931
g57
(g58
g59
NtRp3932
(dp3933
g62
(dp3934
g70
I3
ssg71
g3928
sg64
(lp3935
S''
asbasbasbag57
(g73
g59
NtRp3936
(dp3937
g62
(dp3938
sg71
g3912
sg64
(lp3939
g57
(g78
g59
NtRp3940
(dp3941
g62
(dp3942
g82
g83
ssg71
g3936
sg64
(lp3943
g403
asbag57
(g78
g59
NtRp3944
(dp3945
g62
(dp3946
g89
g90
ssg71
g3936
sg64
(lp3947
S':'
asbag57
(g78
g59
NtRp3948
(dp3949
g62
(dp3950
sg71
g3936
sg64
(lp3951
g57
(g58
g59
NtRp3952
(dp3953
g62
(dp3954
g70
I3
ssg71
g3948
sg64
(lp3955
S''
asbasbasbag57
(g73
g59
NtRp3956
(dp3957
g62
(dp3958
sg71
g3912
sg64
(lp3959
g57
(g78
g59
NtRp3960
(dp3961
g62
(dp3962
g82
g83
ssg71
g3956
sg64
(lp3963
g424
asbag57
(g78
g59
NtRp3964
(dp3965
g62
(dp3966
g89
g90
ssg71
g3956
sg64
(lp3967
S':'
asbag57
(g78
g59
NtRp3968
(dp3969
g62
(dp3970
sg71
g3956
sg64
(lp3971
g57
(g58
g59
NtRp3972
(dp3973
g62
(dp3974
g70
I3
ssg71
g3968
sg64
(lp3975
S''
asbasbasbag57
(g73
g59
NtRp3976
(dp3977
g62
(dp3978
sg71
g3912
sg64
(lp3979
g57
(g78
g59
NtRp3980
(dp3981
g62
(dp3982
g82
g83
ssg71
g3976
sg64
(lp3983
g445
asbag57
(g78
g59
NtRp3984
(dp3985
g62
(dp3986
g89
g90
ssg71
g3976
sg64
(lp3987
S':'
asbag57
(g78
g59
NtRp3988
(dp3989
g62
(dp3990
sg71
g3976
sg64
(lp3991
g57
(g58
g59
NtRp3992
(dp3993
g62
(dp3994
g70
I3
ssg71
g3988
sg64
(lp3995
S''
asbasbasbag57
(g73
g59
NtRp3996
(dp3997
g62
(dp3998
sg71
g3912
sg64
(lp3999
g57
(g78
g59
NtRp4000
(dp4001
g62
(dp4002
g82
g83
ssg71
g3996
sg64
(lp4003
g466
asbag57
(g78
g59
NtRp4004
(dp4005
g62
(dp4006
g89
g90
ssg71
g3996
sg64
(lp4007
S':'
asbag57
(g78
g59
NtRp4008
(dp4009
g62
(dp4010
sg71
g3996
sg64
(lp4011
g57
(g58
g59
NtRp4012
(dp4013
g62
(dp4014
g70
I3
ssg71
g4008
sg64
(lp4015
S''
asbasbasbag57
(g73
g59
NtRp4016
(dp4017
g62
(dp4018
sg71
g3912
sg64
(lp4019
g57
(g78
g59
NtRp4020
(dp4021
g62
(dp4022
g82
g83
ssg71
g4016
sg64
(lp4023
g487
asbag57
(g78
g59
NtRp4024
(dp4025
g62
(dp4026
g89
g90
ssg71
g4016
sg64
(lp4027
S':'
asbag57
(g78
g59
NtRp4028
(dp4029
g62
(dp4030
sg71
g4016
sg64
(lp4031
g57
(g58
g59
NtRp4032
(dp4033
g62
(dp4034
g70
I3
ssg71
g4028
sg64
(lp4035
S'/'
asbasbasbag57
(g73
g59
NtRp4036
(dp4037
g62
(dp4038
sg71
g3912
sg64
(lp4039
g57
(g78
g59
NtRp4040
(dp4041
g62
(dp4042
g82
g83
ssg71
g4036
sg64
(lp4043
g508
asbag57
(g78
g59
NtRp4044
(dp4045
g62
(dp4046
g89
g90
ssg71
g4036
sg64
(lp4047
S':'
asbag57
(g78
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g4036
sg64
(lp4051
g57
(g58
g59
NtRp4052
(dp4053
g62
(dp4054
g70
I3
ssg71
g4048
sg64
(lp4055
S''
asbasbasbag57
(g73
g59
NtRp4056
(dp4057
g62
(dp4058
sg71
g3912
sg64
(lp4059
g57
(g78
g59
NtRp4060
(dp4061
g62
(dp4062
g82
g83
ssg71
g4056
sg64
(lp4063
g529
asbag57
(g78
g59
NtRp4064
(dp4065
g62
(dp4066
g89
g90
ssg71
g4056
sg64
(lp4067
S':'
asbag57
(g78
g59
NtRp4068
(dp4069
g62
(dp4070
sg71
g4056
sg64
(lp4071
g57
(g58
g59
NtRp4072
(dp4073
g62
(dp4074
g70
I3
ssg71
g4068
sg64
(lp4075
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4076
(dp4077
g62
(dp4078
sg71
g3842
sg64
(lp4079
g57
(g78
g59
NtRp4080
(dp4081
g62
(dp4082
g82
g83
ssg71
g4076
sg64
(lp4083
S'delimiters'
p4084
asbag57
(g78
g59
NtRp4085
(dp4086
g62
(dp4087
g89
g90
ssg71
g4076
sg64
(lp4088
S':'
asbag57
(g78
g59
NtRp4089
(dp4090
g62
(dp4091
sg71
g4076
sg64
(lp4092
g57
(g58
g59
NtRp4093
(dp4094
g62
(dp4095
g70
I5
ssg71
g4089
sg64
(lp4096
g57
(g66
g59
NtRp4097
(dp4098
g62
(dp4099
g70
I4
ssg71
Nsg64
(lp4100
g57
(g73
g59
NtRp4101
(dp4102
g62
(dp4103
sg71
g4097
sg64
(lp4104
g57
(g78
g59
NtRp4105
(dp4106
g62
(dp4107
sg71
g4101
sg64
(lp4108
g57
(g58
g59
NtRp4109
(dp4110
g62
(dp4111
g70
I4
ssg71
g4105
sg64
(lp4112
S'{{'
p4113
asbasbasbag57
(g73
g59
NtRp4114
(dp4115
g62
(dp4116
sg71
g4097
sg64
(lp4117
g57
(g78
g59
NtRp4118
(dp4119
g62
(dp4120
sg71
g4114
sg64
(lp4121
g57
(g58
g59
NtRp4122
(dp4123
g62
(dp4124
g70
I4
ssg71
g4118
sg64
(lp4125
S'}}'
p4126
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4127
(dp4128
g62
(dp4129
sg71
g3842
sg64
(lp4130
g57
(g78
g59
NtRp4131
(dp4132
g62
(dp4133
g82
g83
ssg71
g4127
sg64
(lp4134
S'files'
p4135
asbag57
(g78
g59
NtRp4136
(dp4137
g62
(dp4138
g89
g90
ssg71
g4127
sg64
(lp4139
S':'
asbag57
(g78
g59
NtRp4140
(dp4141
g62
(dp4142
sg71
g4127
sg64
(lp4143
g57
(g58
g59
NtRp4144
(dp4145
g62
(dp4146
g70
I5
ssg71
g4140
sg64
(lp4147
g57
(g66
g59
NtRp4148
(dp4149
g62
(dp4150
g70
I4
ssg71
Nsg64
(lp4151
g57
(g73
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g4148
sg64
(lp4155
g57
(g78
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4152
sg64
(lp4159
g57
(g58
g59
NtRp4160
(dp4161
g62
(dp4162
g70
I4
ssg71
g4156
sg64
(lp4163
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4164
asbasbasbag57
(g73
g59
NtRp4165
(dp4166
g62
(dp4167
sg71
g4148
sg64
(lp4168
g57
(g78
g59
NtRp4169
(dp4170
g62
(dp4171
sg71
g4165
sg64
(lp4172
g57
(g58
g59
NtRp4173
(dp4174
g62
(dp4175
g70
I4
ssg71
g4169
sg64
(lp4176
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4177
asbasbasbag57
(g73
g59
NtRp4178
(dp4179
g62
(dp4180
sg71
g4148
sg64
(lp4181
g57
(g78
g59
NtRp4182
(dp4183
g62
(dp4184
sg71
g4178
sg64
(lp4185
g57
(g58
g59
NtRp4186
(dp4187
g62
(dp4188
g70
I4
ssg71
g4182
sg64
(lp4189
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4190
asbasbasbag57
(g73
g59
NtRp4191
(dp4192
g62
(dp4193
sg71
g4148
sg64
(lp4194
g57
(g78
g59
NtRp4195
(dp4196
g62
(dp4197
sg71
g4191
sg64
(lp4198
g57
(g58
g59
NtRp4199
(dp4200
g62
(dp4201
g70
I4
ssg71
g4195
sg64
(lp4202
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4203
asbasbasbag57
(g73
g59
NtRp4204
(dp4205
g62
(dp4206
sg71
g4148
sg64
(lp4207
g57
(g78
g59
NtRp4208
(dp4209
g62
(dp4210
sg71
g4204
sg64
(lp4211
g57
(g58
g59
NtRp4212
(dp4213
g62
(dp4214
g70
I4
ssg71
g4208
sg64
(lp4215
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4216
asbasbasbag57
(g73
g59
NtRp4217
(dp4218
g62
(dp4219
sg71
g4148
sg64
(lp4220
g57
(g78
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4217
sg64
(lp4224
g57
(g58
g59
NtRp4225
(dp4226
g62
(dp4227
g70
I4
ssg71
g4221
sg64
(lp4228
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4229
asbasbasbag57
(g73
g59
NtRp4230
(dp4231
g62
(dp4232
sg71
g4148
sg64
(lp4233
g57
(g78
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4230
sg64
(lp4237
g57
(g58
g59
NtRp4238
(dp4239
g62
(dp4240
g70
I4
ssg71
g4234
sg64
(lp4241
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4242
asbasbasbag57
(g73
g59
NtRp4243
(dp4244
g62
(dp4245
sg71
g4148
sg64
(lp4246
g57
(g78
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g4243
sg64
(lp4250
g57
(g58
g59
NtRp4251
(dp4252
g62
(dp4253
g70
I4
ssg71
g4247
sg64
(lp4254
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4255
asbasbasbag57
(g73
g59
NtRp4256
(dp4257
g62
(dp4258
sg71
g4148
sg64
(lp4259
g57
(g78
g59
NtRp4260
(dp4261
g62
(dp4262
sg71
g4256
sg64
(lp4263
g57
(g58
g59
NtRp4264
(dp4265
g62
(dp4266
g70
I4
ssg71
g4260
sg64
(lp4267
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4268
asbasbasbag57
(g73
g59
NtRp4269
(dp4270
g62
(dp4271
sg71
g4148
sg64
(lp4272
g57
(g78
g59
NtRp4273
(dp4274
g62
(dp4275
sg71
g4269
sg64
(lp4276
g57
(g58
g59
NtRp4277
(dp4278
g62
(dp4279
g70
I4
ssg71
g4273
sg64
(lp4280
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4281
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4282
(dp4283
g62
(dp4284
sg71
g3842
sg64
(lp4285
g57
(g78
g59
NtRp4286
(dp4287
g62
(dp4288
g82
g83
ssg71
g4282
sg64
(lp4289
S'flash'
p4290
asbag57
(g78
g59
NtRp4291
(dp4292
g62
(dp4293
g89
g90
ssg71
g4282
sg64
(lp4294
S':'
asbag57
(g78
g59
NtRp4295
(dp4296
g62
(dp4297
sg71
g4282
sg64
(lp4298
g57
(g58
g59
NtRp4299
(dp4300
g62
(dp4301
g70
I5
ssg71
g4295
sg64
(lp4302
S''
asbasbasbag57
(g73
g59
NtRp4303
(dp4304
g62
(dp4305
sg71
g3842
sg64
(lp4306
g57
(g78
g59
NtRp4307
(dp4308
g62
(dp4309
g82
g83
ssg71
g4303
sg64
(lp4310
S'generic_patterns'
p4311
asbag57
(g78
g59
NtRp4312
(dp4313
g62
(dp4314
g89
g90
ssg71
g4303
sg64
(lp4315
S':'
asbag57
(g78
g59
NtRp4316
(dp4317
g62
(dp4318
sg71
g4303
sg64
(lp4319
g57
(g58
g59
NtRp4320
(dp4321
g62
(dp4322
g70
I5
ssg71
g4316
sg64
(lp4323
g57
(g66
g59
NtRp4324
(dp4325
g62
(dp4326
g70
I4
ssg71
Nsg64
(lp4327
g57
(g73
g59
NtRp4328
(dp4329
g62
(dp4330
sg71
g4324
sg64
(lp4331
g57
(g78
g59
NtRp4332
(dp4333
g62
(dp4334
sg71
g4328
sg64
(lp4335
g57
(g58
g59
NtRp4336
(dp4337
g62
(dp4338
g70
I4
ssg71
g4332
sg64
(lp4339
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4340
(dp4341
g62
(dp4342
sg71
g3842
sg64
(lp4343
g57
(g78
g59
NtRp4344
(dp4345
g62
(dp4346
g82
g83
ssg71
g4340
sg64
(lp4347
S'google_analytics_id'
p4348
asbag57
(g78
g59
NtRp4349
(dp4350
g62
(dp4351
g89
g90
ssg71
g4340
sg64
(lp4352
S':'
asbag57
(g78
g59
NtRp4353
(dp4354
g62
(dp4355
sg71
g4340
sg64
(lp4356
g57
(g58
g59
NtRp4357
(dp4358
g62
(dp4359
g70
I5
ssg71
g4353
sg64
(lp4360
S'None'
p4361
asbasbasbag57
(g73
g59
NtRp4362
(dp4363
g62
(dp4364
sg71
g3842
sg64
(lp4365
g57
(g78
g59
NtRp4366
(dp4367
g62
(dp4368
g82
g83
ssg71
g4362
sg64
(lp4369
S'headers'
p4370
asbag57
(g78
g59
NtRp4371
(dp4372
g62
(dp4373
g89
g90
ssg71
g4362
sg64
(lp4374
S':'
asbag57
(g78
g59
NtRp4375
(dp4376
g62
(dp4377
sg71
g4362
sg64
(lp4378
g57
(g58
g59
NtRp4379
(dp4380
g62
(dp4381
g70
I5
ssg71
g4375
sg64
(lp4382
g57
(g66
g59
NtRp4383
(dp4384
g62
(dp4385
g70
I4
ssg71
Nsg64
(lp4386
g57
(g73
g59
NtRp4387
(dp4388
g62
(dp4389
sg71
g4383
sg64
(lp4390
g57
(g78
g59
NtRp4391
(dp4392
g62
(dp4393
g82
g83
ssg71
g4387
sg64
(lp4394
S'X-Powered-By'
p4395
asbag57
(g78
g59
NtRp4396
(dp4397
g62
(dp4398
g89
g90
ssg71
g4387
sg64
(lp4399
S':'
asbag57
(g78
g59
NtRp4400
(dp4401
g62
(dp4402
sg71
g4387
sg64
(lp4403
g57
(g58
g59
NtRp4404
(dp4405
g62
(dp4406
g70
I4
ssg71
g4400
sg64
(lp4407
S'web2py'
p4408
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4409
(dp4410
g62
(dp4411
sg71
g3842
sg64
(lp4412
g57
(g78
g59
NtRp4413
(dp4414
g62
(dp4415
g82
g83
ssg71
g4409
sg64
(lp4416
S'menu'
p4417
asbag57
(g78
g59
NtRp4418
(dp4419
g62
(dp4420
g89
g90
ssg71
g4409
sg64
(lp4421
S':'
asbag57
(g78
g59
NtRp4422
(dp4423
g62
(dp4424
sg71
g4409
sg64
(lp4425
g57
(g58
g59
NtRp4426
(dp4427
g62
(dp4428
g70
I5
ssg71
g4422
sg64
(lp4429
g57
(g66
g59
NtRp4430
(dp4431
g62
(dp4432
g70
I4
ssg71
Nsg64
(lp4433
g57
(g73
g59
NtRp4434
(dp4435
g62
(dp4436
sg71
g4430
sg64
(lp4437
g57
(g78
g59
NtRp4438
(dp4439
g62
(dp4440
sg71
g4434
sg64
(lp4441
g57
(g58
g59
NtRp4442
(dp4443
g62
(dp4444
g70
I4
ssg71
g4438
sg64
(lp4445
g57
(g66
g59
NtRp4446
(dp4447
g62
(dp4448
g70
I3
ssg71
Nsg64
(lp4449
g57
(g73
g59
NtRp4450
(dp4451
g62
(dp4452
sg71
g4446
sg64
(lp4453
g57
(g78
g59
NtRp4454
(dp4455
g62
(dp4456
sg71
g4450
sg64
(lp4457
g57
(g58
g59
NtRp4458
(dp4459
g62
(dp4460
g70
I3
ssg71
g4454
sg64
(lp4461
cgluon.languages
lazyT_unpickle
p4462
(S't\x04\x00\x00\x00Home'
tRp4463
asbasbasbag57
(g73
g59
NtRp4464
(dp4465
g62
(dp4466
sg71
g4446
sg64
(lp4467
g57
(g78
g59
NtRp4468
(dp4469
g62
(dp4470
sg71
g4464
sg64
(lp4471
g57
(g58
g59
NtRp4472
(dp4473
g62
(dp4474
g70
I3
ssg71
g4468
sg64
(lp4475
g100
asbasbasbag57
(g73
g59
NtRp4476
(dp4477
g62
(dp4478
sg71
g4446
sg64
(lp4479
g57
(g78
g59
NtRp4480
(dp4481
g62
(dp4482
sg71
g4476
sg64
(lp4483
g57
(g58
g59
NtRp4484
(dp4485
g62
(dp4486
g70
I3
ssg71
g4480
sg64
(lp4487
S'/DEV_bootstrap_ch/default/list_all_projects'
p4488
asbasbasbag57
(g73
g59
NtRp4489
(dp4490
g62
(dp4491
sg71
g4446
sg64
(lp4492
g57
(g78
g59
NtRp4493
(dp4494
g62
(dp4495
sg71
g4489
sg64
(lp4496
g57
(g58
g59
NtRp4497
(dp4498
g62
(dp4499
g70
I3
ssg71
g4493
sg64
(lp4500
g57
(g66
g59
NtRp4501
(dp4502
g62
(dp4503
g70
I2
ssg71
Nsg64
(lp4504
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4505
(dp4506
g62
(dp4507
sg71
g4430
sg64
(lp4508
g57
(g78
g59
NtRp4509
(dp4510
g62
(dp4511
sg71
g4505
sg64
(lp4512
g57
(g58
g59
NtRp4513
(dp4514
g62
(dp4515
g70
I4
ssg71
g4509
sg64
(lp4516
g57
(g66
g59
NtRp4517
(dp4518
g62
(dp4519
g70
I3
ssg71
Nsg64
(lp4520
g57
(g73
g59
NtRp4521
(dp4522
g62
(dp4523
sg71
g4517
sg64
(lp4524
g57
(g78
g59
NtRp4525
(dp4526
g62
(dp4527
sg71
g4521
sg64
(lp4528
g57
(g58
g59
NtRp4529
(dp4530
g62
(dp4531
g70
I3
ssg71
g4525
sg64
(lp4532
g4462
(S't\x08\x00\x00\x00Projects'
tRp4533
asbasbasbag57
(g73
g59
NtRp4534
(dp4535
g62
(dp4536
sg71
g4517
sg64
(lp4537
g57
(g78
g59
NtRp4538
(dp4539
g62
(dp4540
sg71
g4534
sg64
(lp4541
g57
(g58
g59
NtRp4542
(dp4543
g62
(dp4544
g70
I3
ssg71
g4538
sg64
(lp4545
g100
asbasbasbag57
(g73
g59
NtRp4546
(dp4547
g62
(dp4548
sg71
g4517
sg64
(lp4549
g57
(g78
g59
NtRp4550
(dp4551
g62
(dp4552
sg71
g4546
sg64
(lp4553
g57
(g58
g59
NtRp4554
(dp4555
g62
(dp4556
g70
I3
ssg71
g4550
sg64
(lp4557
S'/DEV_bootstrap_ch/default/list_all_projects'
p4558
asbasbasbag57
(g73
g59
NtRp4559
(dp4560
g62
(dp4561
sg71
g4517
sg64
(lp4562
g57
(g78
g59
NtRp4563
(dp4564
g62
(dp4565
sg71
g4559
sg64
(lp4566
g57
(g58
g59
NtRp4567
(dp4568
g62
(dp4569
g70
I3
ssg71
g4563
sg64
(lp4570
g57
(g66
g59
NtRp4571
(dp4572
g62
(dp4573
g70
I2
ssg71
Nsg64
(lp4574
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4575
(dp4576
g62
(dp4577
sg71
g4430
sg64
(lp4578
g57
(g78
g59
NtRp4579
(dp4580
g62
(dp4581
sg71
g4575
sg64
(lp4582
g57
(g58
g59
NtRp4583
(dp4584
g62
(dp4585
g70
I4
ssg71
g4579
sg64
(lp4586
g57
(g66
g59
NtRp4587
(dp4588
g62
(dp4589
g70
I3
ssg71
Nsg64
(lp4590
g57
(g73
g59
NtRp4591
(dp4592
g62
(dp4593
sg71
g4587
sg64
(lp4594
g57
(g78
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4591
sg64
(lp4598
g57
(g58
g59
NtRp4599
(dp4600
g62
(dp4601
g70
I3
ssg71
g4595
sg64
(lp4602
S'Pages'
p4603
asbasbasbag57
(g73
g59
NtRp4604
(dp4605
g62
(dp4606
sg71
g4587
sg64
(lp4607
g57
(g78
g59
NtRp4608
(dp4609
g62
(dp4610
sg71
g4604
sg64
(lp4611
g57
(g58
g59
NtRp4612
(dp4613
g62
(dp4614
g70
I3
ssg71
g4608
sg64
(lp4615
g100
asbasbasbag57
(g73
g59
NtRp4616
(dp4617
g62
(dp4618
sg71
g4587
sg64
(lp4619
g57
(g78
g59
NtRp4620
(dp4621
g62
(dp4622
sg71
g4616
sg64
(lp4623
g57
(g58
g59
NtRp4624
(dp4625
g62
(dp4626
g70
I3
ssg71
g4620
sg64
(lp4627
S'/DEV_bootstrap_ch/plugin_wiki/index'
p4628
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4629
(dp4630
g62
(dp4631
sg71
g3842
sg64
(lp4632
g57
(g78
g59
NtRp4633
(dp4634
g62
(dp4635
g82
g83
ssg71
g4629
sg64
(lp4636
S'meta'
p4637
asbag57
(g78
g59
NtRp4638
(dp4639
g62
(dp4640
g89
g90
ssg71
g4629
sg64
(lp4641
S':'
asbag57
(g78
g59
NtRp4642
(dp4643
g62
(dp4644
sg71
g4629
sg64
(lp4645
g57
(g58
g59
NtRp4646
(dp4647
g62
(dp4648
g70
I5
ssg71
g4642
sg64
(lp4649
g57
(g66
g59
NtRp4650
(dp4651
g62
(dp4652
g70
I4
ssg71
Nsg64
(lp4653
g57
(g73
g59
NtRp4654
(dp4655
g62
(dp4656
sg71
g4650
sg64
(lp4657
g57
(g78
g59
NtRp4658
(dp4659
g62
(dp4660
g82
g83
ssg71
g4654
sg64
(lp4661
S'author'
p4662
asbag57
(g78
g59
NtRp4663
(dp4664
g62
(dp4665
g89
g90
ssg71
g4654
sg64
(lp4666
S':'
asbag57
(g78
g59
NtRp4667
(dp4668
g62
(dp4669
sg71
g4654
sg64
(lp4670
g57
(g58
g59
NtRp4671
(dp4672
g62
(dp4673
g70
I4
ssg71
g4667
sg64
(lp4674
S'Vikram Pudi <vikram@iiit.ac.in>'
p4675
asbasbasbag57
(g73
g59
NtRp4676
(dp4677
g62
(dp4678
sg71
g4650
sg64
(lp4679
g57
(g78
g59
NtRp4680
(dp4681
g62
(dp4682
g82
g83
ssg71
g4676
sg64
(lp4683
S'copyright'
p4684
asbag57
(g78
g59
NtRp4685
(dp4686
g62
(dp4687
g89
g90
ssg71
g4676
sg64
(lp4688
S':'
asbag57
(g78
g59
NtRp4689
(dp4690
g62
(dp4691
sg71
g4676
sg64
(lp4692
g57
(g58
g59
NtRp4693
(dp4694
g62
(dp4695
g70
I4
ssg71
g4689
sg64
(lp4696
S'Copyright 2011'
p4697
asbasbasbag57
(g73
g59
NtRp4698
(dp4699
g62
(dp4700
sg71
g4650
sg64
(lp4701
g57
(g78
g59
NtRp4702
(dp4703
g62
(dp4704
g82
g83
ssg71
g4698
sg64
(lp4705
S'description'
p4706
asbag57
(g78
g59
NtRp4707
(dp4708
g62
(dp4709
g89
g90
ssg71
g4698
sg64
(lp4710
S':'
asbag57
(g78
g59
NtRp4711
(dp4712
g62
(dp4713
sg71
g4698
sg64
(lp4714
g57
(g58
g59
NtRp4715
(dp4716
g62
(dp4717
g70
I4
ssg71
g4711
sg64
(lp4718
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4719
asbasbasbag57
(g73
g59
NtRp4720
(dp4721
g62
(dp4722
sg71
g4650
sg64
(lp4723
g57
(g78
g59
NtRp4724
(dp4725
g62
(dp4726
g82
g83
ssg71
g4720
sg64
(lp4727
S'generator'
p4728
asbag57
(g78
g59
NtRp4729
(dp4730
g62
(dp4731
g89
g90
ssg71
g4720
sg64
(lp4732
S':'
asbag57
(g78
g59
NtRp4733
(dp4734
g62
(dp4735
sg71
g4720
sg64
(lp4736
g57
(g58
g59
NtRp4737
(dp4738
g62
(dp4739
g70
I4
ssg71
g4733
sg64
(lp4740
S'Web2py Web Framework'
p4741
asbasbasbag57
(g73
g59
NtRp4742
(dp4743
g62
(dp4744
sg71
g4650
sg64
(lp4745
g57
(g78
g59
NtRp4746
(dp4747
g62
(dp4748
g82
g83
ssg71
g4742
sg64
(lp4749
S'keywords'
p4750
asbag57
(g78
g59
NtRp4751
(dp4752
g62
(dp4753
g89
g90
ssg71
g4742
sg64
(lp4754
S':'
asbag57
(g78
g59
NtRp4755
(dp4756
g62
(dp4757
sg71
g4742
sg64
(lp4758
g57
(g58
g59
NtRp4759
(dp4760
g62
(dp4761
g70
I4
ssg71
g4755
sg64
(lp4762
S'web2py, python, metabolome, metabolomics'
p4763
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4764
(dp4765
g62
(dp4766
sg71
g3842
sg64
(lp4767
g57
(g78
g59
NtRp4768
(dp4769
g62
(dp4770
g82
g83
ssg71
g4764
sg64
(lp4771
S'models_to_run'
p4772
asbag57
(g78
g59
NtRp4773
(dp4774
g62
(dp4775
g89
g90
ssg71
g4764
sg64
(lp4776
S':'
asbag57
(g78
g59
NtRp4777
(dp4778
g62
(dp4779
sg71
g4764
sg64
(lp4780
g57
(g58
g59
NtRp4781
(dp4782
g62
(dp4783
g70
I5
ssg71
g4777
sg64
(lp4784
g57
(g66
g59
NtRp4785
(dp4786
g62
(dp4787
g70
I4
ssg71
Nsg64
(lp4788
g57
(g73
g59
NtRp4789
(dp4790
g62
(dp4791
sg71
g4785
sg64
(lp4792
g57
(g78
g59
NtRp4793
(dp4794
g62
(dp4795
sg71
g4789
sg64
(lp4796
g57
(g58
g59
NtRp4797
(dp4798
g62
(dp4799
g70
I4
ssg71
g4793
sg64
(lp4800
S'^\\w+\\.py$'
p4801
asbasbasbag57
(g73
g59
NtRp4802
(dp4803
g62
(dp4804
sg71
g4785
sg64
(lp4805
g57
(g78
g59
NtRp4806
(dp4807
g62
(dp4808
sg71
g4802
sg64
(lp4809
g57
(g58
g59
NtRp4810
(dp4811
g62
(dp4812
g70
I4
ssg71
g4806
sg64
(lp4813
S'^default/\\w+\\.py$'
p4814
asbasbasbag57
(g73
g59
NtRp4815
(dp4816
g62
(dp4817
sg71
g4785
sg64
(lp4818
g57
(g78
g59
NtRp4819
(dp4820
g62
(dp4821
sg71
g4815
sg64
(lp4822
g57
(g58
g59
NtRp4823
(dp4824
g62
(dp4825
g70
I4
ssg71
g4819
sg64
(lp4826
S'^default/duplicate/\\w+\\.py$'
p4827
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4828
(dp4829
g62
(dp4830
sg71
g3842
sg64
(lp4831
g57
(g78
g59
NtRp4832
(dp4833
g62
(dp4834
g82
g83
ssg71
g4828
sg64
(lp4835
S'postprocessing'
p4836
asbag57
(g78
g59
NtRp4837
(dp4838
g62
(dp4839
g89
g90
ssg71
g4828
sg64
(lp4840
S':'
asbag57
(g78
g59
NtRp4841
(dp4842
g62
(dp4843
sg71
g4828
sg64
(lp4844
g57
(g58
g59
NtRp4845
(dp4846
g62
(dp4847
g70
I5
ssg71
g4841
sg64
(lp4848
g57
(g66
g59
NtRp4849
(dp4850
g62
(dp4851
g70
I4
ssg71
Nsg64
(lp4852
sbasbasbasbag57
(g73
g59
NtRp4853
(dp4854
g62
(dp4855
sg71
g3842
sg64
(lp4856
g57
(g78
g59
NtRp4857
(dp4858
g62
(dp4859
g82
g83
ssg71
g4853
sg64
(lp4860
S'session_cookie_expires'
p4861
asbag57
(g78
g59
NtRp4862
(dp4863
g62
(dp4864
g89
g90
ssg71
g4853
sg64
(lp4865
S':'
asbag57
(g78
g59
NtRp4866
(dp4867
g62
(dp4868
sg71
g4853
sg64
(lp4869
g57
(g58
g59
NtRp4870
(dp4871
g62
(dp4872
g70
I5
ssg71
g4866
sg64
(lp4873
S'None'
p4874
asbasbasbag57
(g73
g59
NtRp4875
(dp4876
g62
(dp4877
sg71
g3842
sg64
(lp4878
g57
(g78
g59
NtRp4879
(dp4880
g62
(dp4881
g82
g83
ssg71
g4875
sg64
(lp4882
S'session_data_name'
p4883
asbag57
(g78
g59
NtRp4884
(dp4885
g62
(dp4886
g89
g90
ssg71
g4875
sg64
(lp4887
S':'
asbag57
(g78
g59
NtRp4888
(dp4889
g62
(dp4890
sg71
g4875
sg64
(lp4891
g57
(g58
g59
NtRp4892
(dp4893
g62
(dp4894
g70
I5
ssg71
g4888
sg64
(lp4895
S'session_data_dev_bootstrap_ch'
p4896
asbasbasbag57
(g73
g59
NtRp4897
(dp4898
g62
(dp4899
sg71
g3842
sg64
(lp4900
g57
(g78
g59
NtRp4901
(dp4902
g62
(dp4903
g82
g83
ssg71
g4897
sg64
(lp4904
S'session_file'
p4905
asbag57
(g78
g59
NtRp4906
(dp4907
g62
(dp4908
g89
g90
ssg71
g4897
sg64
(lp4909
S':'
asbag57
(g78
g59
NtRp4910
(dp4911
g62
(dp4912
sg71
g4897
sg64
(lp4913
g57
(g58
g59
NtRp4914
(dp4915
g62
(dp4916
g70
I5
ssg71
g4910
sg64
(lp4917
S"<open file '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480', mode 'rb+' at 0xafabc758>"
p4918
asbasbasbag57
(g73
g59
NtRp4919
(dp4920
g62
(dp4921
sg71
g3842
sg64
(lp4922
g57
(g78
g59
NtRp4923
(dp4924
g62
(dp4925
g82
g83
ssg71
g4919
sg64
(lp4926
S'session_filename'
p4927
asbag57
(g78
g59
NtRp4928
(dp4929
g62
(dp4930
g89
g90
ssg71
g4919
sg64
(lp4931
S':'
asbag57
(g78
g59
NtRp4932
(dp4933
g62
(dp4934
sg71
g4919
sg64
(lp4935
g57
(g58
g59
NtRp4936
(dp4937
g62
(dp4938
g70
I5
ssg71
g4932
sg64
(lp4939
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p4940
asbasbasbag57
(g73
g59
NtRp4941
(dp4942
g62
(dp4943
sg71
g3842
sg64
(lp4944
g57
(g78
g59
NtRp4945
(dp4946
g62
(dp4947
g82
g83
ssg71
g4941
sg64
(lp4948
S'session_id'
p4949
asbag57
(g78
g59
NtRp4950
(dp4951
g62
(dp4952
g89
g90
ssg71
g4941
sg64
(lp4953
S':'
asbag57
(g78
g59
NtRp4954
(dp4955
g62
(dp4956
sg71
g4941
sg64
(lp4957
g57
(g58
g59
NtRp4958
(dp4959
g62
(dp4960
g70
I5
ssg71
g4954
sg64
(lp4961
g563
asbasbasbag57
(g73
g59
NtRp4962
(dp4963
g62
(dp4964
sg71
g3842
sg64
(lp4965
g57
(g78
g59
NtRp4966
(dp4967
g62
(dp4968
g82
g83
ssg71
g4962
sg64
(lp4969
S'session_id_name'
p4970
asbag57
(g78
g59
NtRp4971
(dp4972
g62
(dp4973
g89
g90
ssg71
g4962
sg64
(lp4974
S':'
asbag57
(g78
g59
NtRp4975
(dp4976
g62
(dp4977
sg71
g4962
sg64
(lp4978
g57
(g58
g59
NtRp4979
(dp4980
g62
(dp4981
g70
I5
ssg71
g4975
sg64
(lp4982
g3899
asbasbasbag57
(g73
g59
NtRp4983
(dp4984
g62
(dp4985
sg71
g3842
sg64
(lp4986
g57
(g78
g59
NtRp4987
(dp4988
g62
(dp4989
g82
g83
ssg71
g4983
sg64
(lp4990
S'session_locked'
p4991
asbag57
(g78
g59
NtRp4992
(dp4993
g62
(dp4994
g89
g90
ssg71
g4983
sg64
(lp4995
S':'
asbag57
(g78
g59
NtRp4996
(dp4997
g62
(dp4998
sg71
g4983
sg64
(lp4999
g57
(g58
g59
NtRp5000
(dp5001
g62
(dp5002
g70
I5
ssg71
g4996
sg64
(lp5003
g1693
asbasbasbag57
(g73
g59
NtRp5004
(dp5005
g62
(dp5006
sg71
g3842
sg64
(lp5007
g57
(g78
g59
NtRp5008
(dp5009
g62
(dp5010
g82
g83
ssg71
g5004
sg64
(lp5011
S'session_new'
p5012
asbag57
(g78
g59
NtRp5013
(dp5014
g62
(dp5015
g89
g90
ssg71
g5004
sg64
(lp5016
S':'
asbag57
(g78
g59
NtRp5017
(dp5018
g62
(dp5019
sg71
g5004
sg64
(lp5020
g57
(g58
g59
NtRp5021
(dp5022
g62
(dp5023
g70
I5
ssg71
g5017
sg64
(lp5024
g100
asbasbasbag57
(g73
g59
NtRp5025
(dp5026
g62
(dp5027
sg71
g3842
sg64
(lp5028
g57
(g78
g59
NtRp5029
(dp5030
g62
(dp5031
g82
g83
ssg71
g5025
sg64
(lp5032
S'session_storage_type'
p5033
asbag57
(g78
g59
NtRp5034
(dp5035
g62
(dp5036
g89
g90
ssg71
g5025
sg64
(lp5037
S':'
asbag57
(g78
g59
NtRp5038
(dp5039
g62
(dp5040
sg71
g5025
sg64
(lp5041
g57
(g58
g59
NtRp5042
(dp5043
g62
(dp5044
g70
I5
ssg71
g5038
sg64
(lp5045
g3146
asbasbasbag57
(g73
g59
NtRp5046
(dp5047
g62
(dp5048
sg71
g3842
sg64
(lp5049
g57
(g78
g59
NtRp5050
(dp5051
g62
(dp5052
g82
g83
ssg71
g5046
sg64
(lp5053
S'status'
p5054
asbag57
(g78
g59
NtRp5055
(dp5056
g62
(dp5057
g89
g90
ssg71
g5046
sg64
(lp5058
S':'
asbag57
(g78
g59
NtRp5059
(dp5060
g62
(dp5061
sg71
g5046
sg64
(lp5062
g57
(g58
g59
NtRp5063
(dp5064
g62
(dp5065
g70
I5
ssg71
g5059
sg64
(lp5066
S'200'
p5067
asbasbasbag57
(g73
g59
NtRp5068
(dp5069
g62
(dp5070
sg71
g3842
sg64
(lp5071
g57
(g78
g59
NtRp5072
(dp5073
g62
(dp5074
g82
g83
ssg71
g5068
sg64
(lp5075
S'subtitle'
p5076
asbag57
(g78
g59
NtRp5077
(dp5078
g62
(dp5079
g89
g90
ssg71
g5068
sg64
(lp5080
S':'
asbag57
(g78
g59
NtRp5081
(dp5082
g62
(dp5083
sg71
g5068
sg64
(lp5084
g57
(g58
g59
NtRp5085
(dp5086
g62
(dp5087
g70
I5
ssg71
g5081
sg64
(lp5088
g4462
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5089
asbasbasbag57
(g73
g59
NtRp5090
(dp5091
g62
(dp5092
sg71
g3842
sg64
(lp5093
g57
(g78
g59
NtRp5094
(dp5095
g62
(dp5096
g82
g83
ssg71
g5090
sg64
(lp5097
g3708
asbag57
(g78
g59
NtRp5098
(dp5099
g62
(dp5100
g89
g90
ssg71
g5090
sg64
(lp5101
S':'
asbag57
(g78
g59
NtRp5102
(dp5103
g62
(dp5104
sg71
g5090
sg64
(lp5105
g57
(g58
g59
NtRp5106
(dp5107
g62
(dp5108
g70
I5
ssg71
g5102
sg64
(lp5109
g122
asbasbasbag57
(g73
g59
NtRp5110
(dp5111
g62
(dp5112
sg71
g3842
sg64
(lp5113
g57
(g78
g59
NtRp5114
(dp5115
g62
(dp5116
g82
g83
ssg71
g5110
sg64
(lp5117
S'view'
p5118
asbag57
(g78
g59
NtRp5119
(dp5120
g62
(dp5121
g89
g90
ssg71
g5110
sg64
(lp5122
S':'
asbag57
(g78
g59
NtRp5123
(dp5124
g62
(dp5125
sg71
g5110
sg64
(lp5126
g57
(g58
g59
NtRp5127
(dp5128
g62
(dp5129
g70
I5
ssg71
g5123
sg64
(lp5130
S'default/duplicate.html'
p5131
asbasbasbasbasbsS'locals'
p5132
(dp5133
S'rec'
p5134
S"<Row {'code': 'sdaf', 'replica': 'replicate', 'w...': 1, 'experimentalist': 1, 'name': 'tomatodsf'}>"
p5135
sS'in_row'
p5136
S'6'
sS'tb'
p5137
S"'spectrophotometry'"
p5138
sS'row'
p5139
S'None'
p5140
sssS'traceback'
p5141
S'Traceback (most recent call last):\n  File "/home/anil/Downloads/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1201, in <module>\n  File "/home/anil/Downloads/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 383, in duplicate\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]+[\'edit\',\'sample\',sam.id]))\nUnboundLocalError: local variable \'sam\' referenced before assignment\n'
p5142
s.