(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> append() takes exactly 2 arguments (1 given)"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args\n    l1=[lambda row: A(\'copy\'+str(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\']) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    return str(0);\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router(l):\n\tif \'biosource\' in l:\n\t  redirect(URL(\'insert_biosource\',args = l))\n\telif \'plant_growth_condition\' in l:\n\t  redirect(URL(\'insert_pgc\',args = l))\n\telif \'treatments\' in l:\n\t  redirect(URL(\'insert_treatments\',args = l))\n\telif \'harvests\' in l:\n\t  redirect(URL(\'insert_harvests\',args = l))\n\telif \'extraction_preparation\' in l:\n\t  redirect(URL(\'insert_ep\',args = l))\n\telif \'gas_chromatography\' in l:\n\t  redirect(URL(\'insert_gc\',args = l))\n\telif \'liquid_chromatography\' in l:\n\t  redirect(URL(\'insert_lc\',args = l))\n\telif \'mass_spectroscopy\' in l:\n\t  redirect(URL(\'insert_ms\',args = l))\n        elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n\telif \'sample\' in l and \'view\' in l:\t\t\n\t  redirect(URL(\'sample\',args=l))\n        else:\n          return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('append() takes exactly 2 arguments (1 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'append() takes exactly 2 arguments (1 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'view'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'project'
p185
asbasbasbag57
(g73
g59
NtRp186
(dp187
g62
(dp188
sg71
g143
sg64
(lp189
g57
(g78
g59
NtRp190
(dp191
g62
(dp192
sg71
g186
sg64
(lp193
g57
(g58
g59
NtRp194
(dp195
g62
(dp196
g70
I4
ssg71
g190
sg64
(lp197
S'1'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g67
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
g82
g83
ssg71
g198
sg64
(lp205
S'body'
p206
asbag57
(g78
g59
NtRp207
(dp208
g62
(dp209
g89
g90
ssg71
g198
sg64
(lp210
S':'
asbag57
(g78
g59
NtRp211
(dp212
g62
(dp213
sg71
g198
sg64
(lp214
g57
(g58
g59
NtRp215
(dp216
g62
(dp217
g70
I5
ssg71
g211
sg64
(lp218
S'<cStringIO.StringO object at 0xa78df20>'
p219
asbasbasbag57
(g73
g59
NtRp220
(dp221
g62
(dp222
sg71
g67
sg64
(lp223
g57
(g78
g59
NtRp224
(dp225
g62
(dp226
g82
g83
ssg71
g220
sg64
(lp227
S'cid'
p228
asbag57
(g78
g59
NtRp229
(dp230
g62
(dp231
g89
g90
ssg71
g220
sg64
(lp232
S':'
asbag57
(g78
g59
NtRp233
(dp234
g62
(dp235
sg71
g220
sg64
(lp236
g57
(g58
g59
NtRp237
(dp238
g62
(dp239
g70
I5
ssg71
g233
sg64
(lp240
S'None'
p241
asbasbasbag57
(g73
g59
NtRp242
(dp243
g62
(dp244
sg71
g67
sg64
(lp245
g57
(g78
g59
NtRp246
(dp247
g62
(dp248
g82
g83
ssg71
g242
sg64
(lp249
S'client'
p250
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
g89
g90
ssg71
g242
sg64
(lp254
S':'
asbag57
(g78
g59
NtRp255
(dp256
g62
(dp257
sg71
g242
sg64
(lp258
g57
(g58
g59
NtRp259
(dp260
g62
(dp261
g70
I5
ssg71
g255
sg64
(lp262
S'127.0.0.1'
p263
asbasbasbag57
(g73
g59
NtRp264
(dp265
g62
(dp266
sg71
g67
sg64
(lp267
g57
(g78
g59
NtRp268
(dp269
g62
(dp270
g82
g83
ssg71
g264
sg64
(lp271
S'controller'
p272
asbag57
(g78
g59
NtRp273
(dp274
g62
(dp275
g89
g90
ssg71
g264
sg64
(lp276
S':'
asbag57
(g78
g59
NtRp277
(dp278
g62
(dp279
sg71
g264
sg64
(lp280
g57
(g58
g59
NtRp281
(dp282
g62
(dp283
g70
I5
ssg71
g277
sg64
(lp284
S'default'
p285
asbasbasbag57
(g73
g59
NtRp286
(dp287
g62
(dp288
sg71
g67
sg64
(lp289
g57
(g78
g59
NtRp290
(dp291
g62
(dp292
g82
g83
ssg71
g286
sg64
(lp293
S'cookies'
p294
asbag57
(g78
g59
NtRp295
(dp296
g62
(dp297
g89
g90
ssg71
g286
sg64
(lp298
S':'
asbag57
(g78
g59
NtRp299
(dp300
g62
(dp301
sg71
g286
sg64
(lp302
g57
(g58
g59
NtRp303
(dp304
g62
(dp305
g70
I5
ssg71
g299
sg64
(lp306
g57
(g66
g59
NtRp307
(dp308
g62
(dp309
g70
I4
ssg71
Nsg64
(lp310
g57
(g73
g59
NtRp311
(dp312
g62
(dp313
sg71
g307
sg64
(lp314
g57
(g78
g59
NtRp315
(dp316
g62
(dp317
g82
g83
ssg71
g311
sg64
(lp318
S'session_id_admin'
p319
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
g89
g90
ssg71
g311
sg64
(lp323
S':'
asbag57
(g78
g59
NtRp324
(dp325
g62
(dp326
sg71
g311
sg64
(lp327
g57
(g58
g59
NtRp328
(dp329
g62
(dp330
g70
I4
ssg71
g324
sg64
(lp331
S'127.0.0.1-be75d44e-f44e-4689-a389-5ae8bf5aaa3d'
p332
ag57
(g66
g59
NtRp333
(dp334
g62
(dp335
g70
I3
ssg71
Nsg64
(lp336
g57
(g73
g59
NtRp337
(dp338
g62
(dp339
sg71
g333
sg64
(lp340
g57
(g78
g59
NtRp341
(dp342
g62
(dp343
g82
g83
ssg71
g337
sg64
(lp344
S'comment'
p345
asbag57
(g78
g59
NtRp346
(dp347
g62
(dp348
g89
g90
ssg71
g337
sg64
(lp349
S':'
asbag57
(g78
g59
NtRp350
(dp351
g62
(dp352
sg71
g337
sg64
(lp353
g57
(g58
g59
NtRp354
(dp355
g62
(dp356
g70
I3
ssg71
g350
sg64
(lp357
S''
asbasbasbag57
(g73
g59
NtRp358
(dp359
g62
(dp360
sg71
g333
sg64
(lp361
g57
(g78
g59
NtRp362
(dp363
g62
(dp364
g82
g83
ssg71
g358
sg64
(lp365
S'domain'
p366
asbag57
(g78
g59
NtRp367
(dp368
g62
(dp369
g89
g90
ssg71
g358
sg64
(lp370
S':'
asbag57
(g78
g59
NtRp371
(dp372
g62
(dp373
sg71
g358
sg64
(lp374
g57
(g58
g59
NtRp375
(dp376
g62
(dp377
g70
I3
ssg71
g371
sg64
(lp378
S''
asbasbasbag57
(g73
g59
NtRp379
(dp380
g62
(dp381
sg71
g333
sg64
(lp382
g57
(g78
g59
NtRp383
(dp384
g62
(dp385
g82
g83
ssg71
g379
sg64
(lp386
S'expires'
p387
asbag57
(g78
g59
NtRp388
(dp389
g62
(dp390
g89
g90
ssg71
g379
sg64
(lp391
S':'
asbag57
(g78
g59
NtRp392
(dp393
g62
(dp394
sg71
g379
sg64
(lp395
g57
(g58
g59
NtRp396
(dp397
g62
(dp398
g70
I3
ssg71
g392
sg64
(lp399
S''
asbasbasbag57
(g73
g59
NtRp400
(dp401
g62
(dp402
sg71
g333
sg64
(lp403
g57
(g78
g59
NtRp404
(dp405
g62
(dp406
g82
g83
ssg71
g400
sg64
(lp407
S'httponly'
p408
asbag57
(g78
g59
NtRp409
(dp410
g62
(dp411
g89
g90
ssg71
g400
sg64
(lp412
S':'
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
sg71
g400
sg64
(lp416
g57
(g58
g59
NtRp417
(dp418
g62
(dp419
g70
I3
ssg71
g413
sg64
(lp420
S''
asbasbasbag57
(g73
g59
NtRp421
(dp422
g62
(dp423
sg71
g333
sg64
(lp424
g57
(g78
g59
NtRp425
(dp426
g62
(dp427
g82
g83
ssg71
g421
sg64
(lp428
S'max-age'
p429
asbag57
(g78
g59
NtRp430
(dp431
g62
(dp432
g89
g90
ssg71
g421
sg64
(lp433
S':'
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
sg71
g421
sg64
(lp437
g57
(g58
g59
NtRp438
(dp439
g62
(dp440
g70
I3
ssg71
g434
sg64
(lp441
S''
asbasbasbag57
(g73
g59
NtRp442
(dp443
g62
(dp444
sg71
g333
sg64
(lp445
g57
(g78
g59
NtRp446
(dp447
g62
(dp448
g82
g83
ssg71
g442
sg64
(lp449
S'path'
p450
asbag57
(g78
g59
NtRp451
(dp452
g62
(dp453
g89
g90
ssg71
g442
sg64
(lp454
S':'
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
sg71
g442
sg64
(lp458
g57
(g58
g59
NtRp459
(dp460
g62
(dp461
g70
I3
ssg71
g455
sg64
(lp462
S''
asbasbasbag57
(g73
g59
NtRp463
(dp464
g62
(dp465
sg71
g333
sg64
(lp466
g57
(g78
g59
NtRp467
(dp468
g62
(dp469
g82
g83
ssg71
g463
sg64
(lp470
S'secure'
p471
asbag57
(g78
g59
NtRp472
(dp473
g62
(dp474
g89
g90
ssg71
g463
sg64
(lp475
S':'
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
sg71
g463
sg64
(lp479
g57
(g58
g59
NtRp480
(dp481
g62
(dp482
g70
I3
ssg71
g476
sg64
(lp483
S''
asbasbasbag57
(g73
g59
NtRp484
(dp485
g62
(dp486
sg71
g333
sg64
(lp487
g57
(g78
g59
NtRp488
(dp489
g62
(dp490
g82
g83
ssg71
g484
sg64
(lp491
S'version'
p492
asbag57
(g78
g59
NtRp493
(dp494
g62
(dp495
g89
g90
ssg71
g484
sg64
(lp496
S':'
asbag57
(g78
g59
NtRp497
(dp498
g62
(dp499
sg71
g484
sg64
(lp500
g57
(g58
g59
NtRp501
(dp502
g62
(dp503
g70
I3
ssg71
g497
sg64
(lp504
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp505
(dp506
g62
(dp507
sg71
g307
sg64
(lp508
g57
(g78
g59
NtRp509
(dp510
g62
(dp511
g82
g83
ssg71
g505
sg64
(lp512
S'session_id_dev_bootstrap_ch'
p513
asbag57
(g78
g59
NtRp514
(dp515
g62
(dp516
g89
g90
ssg71
g505
sg64
(lp517
S':'
asbag57
(g78
g59
NtRp518
(dp519
g62
(dp520
sg71
g505
sg64
(lp521
g57
(g58
g59
NtRp522
(dp523
g62
(dp524
g70
I4
ssg71
g518
sg64
(lp525
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p526
ag57
(g66
g59
NtRp527
(dp528
g62
(dp529
g70
I3
ssg71
Nsg64
(lp530
g57
(g73
g59
NtRp531
(dp532
g62
(dp533
sg71
g527
sg64
(lp534
g57
(g78
g59
NtRp535
(dp536
g62
(dp537
g82
g83
ssg71
g531
sg64
(lp538
g345
asbag57
(g78
g59
NtRp539
(dp540
g62
(dp541
g89
g90
ssg71
g531
sg64
(lp542
S':'
asbag57
(g78
g59
NtRp543
(dp544
g62
(dp545
sg71
g531
sg64
(lp546
g57
(g58
g59
NtRp547
(dp548
g62
(dp549
g70
I3
ssg71
g543
sg64
(lp550
S''
asbasbasbag57
(g73
g59
NtRp551
(dp552
g62
(dp553
sg71
g527
sg64
(lp554
g57
(g78
g59
NtRp555
(dp556
g62
(dp557
g82
g83
ssg71
g551
sg64
(lp558
g366
asbag57
(g78
g59
NtRp559
(dp560
g62
(dp561
g89
g90
ssg71
g551
sg64
(lp562
S':'
asbag57
(g78
g59
NtRp563
(dp564
g62
(dp565
sg71
g551
sg64
(lp566
g57
(g58
g59
NtRp567
(dp568
g62
(dp569
g70
I3
ssg71
g563
sg64
(lp570
S''
asbasbasbag57
(g73
g59
NtRp571
(dp572
g62
(dp573
sg71
g527
sg64
(lp574
g57
(g78
g59
NtRp575
(dp576
g62
(dp577
g82
g83
ssg71
g571
sg64
(lp578
g387
asbag57
(g78
g59
NtRp579
(dp580
g62
(dp581
g89
g90
ssg71
g571
sg64
(lp582
S':'
asbag57
(g78
g59
NtRp583
(dp584
g62
(dp585
sg71
g571
sg64
(lp586
g57
(g58
g59
NtRp587
(dp588
g62
(dp589
g70
I3
ssg71
g583
sg64
(lp590
S''
asbasbasbag57
(g73
g59
NtRp591
(dp592
g62
(dp593
sg71
g527
sg64
(lp594
g57
(g78
g59
NtRp595
(dp596
g62
(dp597
g82
g83
ssg71
g591
sg64
(lp598
g408
asbag57
(g78
g59
NtRp599
(dp600
g62
(dp601
g89
g90
ssg71
g591
sg64
(lp602
S':'
asbag57
(g78
g59
NtRp603
(dp604
g62
(dp605
sg71
g591
sg64
(lp606
g57
(g58
g59
NtRp607
(dp608
g62
(dp609
g70
I3
ssg71
g603
sg64
(lp610
S''
asbasbasbag57
(g73
g59
NtRp611
(dp612
g62
(dp613
sg71
g527
sg64
(lp614
g57
(g78
g59
NtRp615
(dp616
g62
(dp617
g82
g83
ssg71
g611
sg64
(lp618
g429
asbag57
(g78
g59
NtRp619
(dp620
g62
(dp621
g89
g90
ssg71
g611
sg64
(lp622
S':'
asbag57
(g78
g59
NtRp623
(dp624
g62
(dp625
sg71
g611
sg64
(lp626
g57
(g58
g59
NtRp627
(dp628
g62
(dp629
g70
I3
ssg71
g623
sg64
(lp630
S''
asbasbasbag57
(g73
g59
NtRp631
(dp632
g62
(dp633
sg71
g527
sg64
(lp634
g57
(g78
g59
NtRp635
(dp636
g62
(dp637
g82
g83
ssg71
g631
sg64
(lp638
g450
asbag57
(g78
g59
NtRp639
(dp640
g62
(dp641
g89
g90
ssg71
g631
sg64
(lp642
S':'
asbag57
(g78
g59
NtRp643
(dp644
g62
(dp645
sg71
g631
sg64
(lp646
g57
(g58
g59
NtRp647
(dp648
g62
(dp649
g70
I3
ssg71
g643
sg64
(lp650
S''
asbasbasbag57
(g73
g59
NtRp651
(dp652
g62
(dp653
sg71
g527
sg64
(lp654
g57
(g78
g59
NtRp655
(dp656
g62
(dp657
g82
g83
ssg71
g651
sg64
(lp658
g471
asbag57
(g78
g59
NtRp659
(dp660
g62
(dp661
g89
g90
ssg71
g651
sg64
(lp662
S':'
asbag57
(g78
g59
NtRp663
(dp664
g62
(dp665
sg71
g651
sg64
(lp666
g57
(g58
g59
NtRp667
(dp668
g62
(dp669
g70
I3
ssg71
g663
sg64
(lp670
S''
asbasbasbag57
(g73
g59
NtRp671
(dp672
g62
(dp673
sg71
g527
sg64
(lp674
g57
(g78
g59
NtRp675
(dp676
g62
(dp677
g82
g83
ssg71
g671
sg64
(lp678
g492
asbag57
(g78
g59
NtRp679
(dp680
g62
(dp681
g89
g90
ssg71
g671
sg64
(lp682
S':'
asbag57
(g78
g59
NtRp683
(dp684
g62
(dp685
sg71
g671
sg64
(lp686
g57
(g58
g59
NtRp687
(dp688
g62
(dp689
g70
I3
ssg71
g683
sg64
(lp690
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp691
(dp692
g62
(dp693
sg71
g67
sg64
(lp694
g57
(g78
g59
NtRp695
(dp696
g62
(dp697
g82
g83
ssg71
g691
sg64
(lp698
S'env'
p699
asbag57
(g78
g59
NtRp700
(dp701
g62
(dp702
g89
g90
ssg71
g691
sg64
(lp703
S':'
asbag57
(g78
g59
NtRp704
(dp705
g62
(dp706
sg71
g691
sg64
(lp707
g57
(g58
g59
NtRp708
(dp709
g62
(dp710
g70
I5
ssg71
g704
sg64
(lp711
g57
(g66
g59
NtRp712
(dp713
g62
(dp714
g70
I4
ssg71
Nsg64
(lp715
g57
(g73
g59
NtRp716
(dp717
g62
(dp718
sg71
g712
sg64
(lp719
g57
(g78
g59
NtRp720
(dp721
g62
(dp722
g82
g83
ssg71
g716
sg64
(lp723
S'app_folders'
p724
asbag57
(g78
g59
NtRp725
(dp726
g62
(dp727
g89
g90
ssg71
g716
sg64
(lp728
S':'
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
sg71
g716
sg64
(lp732
g57
(g58
g59
NtRp733
(dp734
g62
(dp735
g70
I4
ssg71
g729
sg64
(lp736
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p737
asbasbasbag57
(g73
g59
NtRp738
(dp739
g62
(dp740
sg71
g712
sg64
(lp741
g57
(g78
g59
NtRp742
(dp743
g62
(dp744
g82
g83
ssg71
g738
sg64
(lp745
S'applications_parent'
p746
asbag57
(g78
g59
NtRp747
(dp748
g62
(dp749
g89
g90
ssg71
g738
sg64
(lp750
S':'
asbag57
(g78
g59
NtRp751
(dp752
g62
(dp753
sg71
g738
sg64
(lp754
g57
(g58
g59
NtRp755
(dp756
g62
(dp757
g70
I4
ssg71
g751
sg64
(lp758
S'/home/anil/bootstrap/web2py'
p759
asbasbasbag57
(g73
g59
NtRp760
(dp761
g62
(dp762
sg71
g712
sg64
(lp763
g57
(g78
g59
NtRp764
(dp765
g62
(dp766
g82
g83
ssg71
g760
sg64
(lp767
S'cmd_args'
p768
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g760
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g760
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I4
ssg71
g773
sg64
(lp780
g57
(g66
g59
NtRp781
(dp782
g62
(dp783
g70
I3
ssg71
Nsg64
(lp784
sbasbasbasbag57
(g73
g59
NtRp785
(dp786
g62
(dp787
sg71
g712
sg64
(lp788
g57
(g78
g59
NtRp789
(dp790
g62
(dp791
g82
g83
ssg71
g785
sg64
(lp792
S'cmd_options'
p793
asbag57
(g78
g59
NtRp794
(dp795
g62
(dp796
g89
g90
ssg71
g785
sg64
(lp797
S':'
asbag57
(g78
g59
NtRp798
(dp799
g62
(dp800
sg71
g785
sg64
(lp801
g57
(g58
g59
NtRp802
(dp803
g62
(dp804
g70
I4
ssg71
g798
sg64
(lp805
S"<Values at 0xa3b8fcc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p806
asbasbasbag57
(g73
g59
NtRp807
(dp808
g62
(dp809
sg71
g712
sg64
(lp810
g57
(g78
g59
NtRp811
(dp812
g62
(dp813
g82
g83
ssg71
g807
sg64
(lp814
S'db_sessions'
p815
asbag57
(g78
g59
NtRp816
(dp817
g62
(dp818
g89
g90
ssg71
g807
sg64
(lp819
S':'
asbag57
(g78
g59
NtRp820
(dp821
g62
(dp822
sg71
g807
sg64
(lp823
g57
(g58
g59
NtRp824
(dp825
g62
(dp826
g70
I4
ssg71
g820
sg64
(lp827
S'set([])'
p828
asbasbasbag57
(g73
g59
NtRp829
(dp830
g62
(dp831
sg71
g712
sg64
(lp832
g57
(g78
g59
NtRp833
(dp834
g62
(dp835
g82
g83
ssg71
g829
sg64
(lp836
S'debugging'
p837
asbag57
(g78
g59
NtRp838
(dp839
g62
(dp840
g89
g90
ssg71
g829
sg64
(lp841
S':'
asbag57
(g78
g59
NtRp842
(dp843
g62
(dp844
sg71
g829
sg64
(lp845
g57
(g58
g59
NtRp846
(dp847
g62
(dp848
g70
I4
ssg71
g842
sg64
(lp849
g100
asbasbasbag57
(g73
g59
NtRp850
(dp851
g62
(dp852
sg71
g712
sg64
(lp853
g57
(g78
g59
NtRp854
(dp855
g62
(dp856
g82
g83
ssg71
g850
sg64
(lp857
S'gluon_parent'
p858
asbag57
(g78
g59
NtRp859
(dp860
g62
(dp861
g89
g90
ssg71
g850
sg64
(lp862
S':'
asbag57
(g78
g59
NtRp863
(dp864
g62
(dp865
sg71
g850
sg64
(lp866
g57
(g58
g59
NtRp867
(dp868
g62
(dp869
g70
I4
ssg71
g863
sg64
(lp870
S'/home/anil/bootstrap/web2py'
p871
asbasbasbag57
(g73
g59
NtRp872
(dp873
g62
(dp874
sg71
g712
sg64
(lp875
g57
(g78
g59
NtRp876
(dp877
g62
(dp878
g82
g83
ssg71
g872
sg64
(lp879
S'http_accept'
p880
asbag57
(g78
g59
NtRp881
(dp882
g62
(dp883
g89
g90
ssg71
g872
sg64
(lp884
S':'
asbag57
(g78
g59
NtRp885
(dp886
g62
(dp887
sg71
g872
sg64
(lp888
g57
(g58
g59
NtRp889
(dp890
g62
(dp891
g70
I4
ssg71
g885
sg64
(lp892
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p893
asbasbasbag57
(g73
g59
NtRp894
(dp895
g62
(dp896
sg71
g712
sg64
(lp897
g57
(g78
g59
NtRp898
(dp899
g62
(dp900
g82
g83
ssg71
g894
sg64
(lp901
S'http_accept_charset'
p902
asbag57
(g78
g59
NtRp903
(dp904
g62
(dp905
g89
g90
ssg71
g894
sg64
(lp906
S':'
asbag57
(g78
g59
NtRp907
(dp908
g62
(dp909
sg71
g894
sg64
(lp910
g57
(g58
g59
NtRp911
(dp912
g62
(dp913
g70
I4
ssg71
g907
sg64
(lp914
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p915
asbasbasbag57
(g73
g59
NtRp916
(dp917
g62
(dp918
sg71
g712
sg64
(lp919
g57
(g78
g59
NtRp920
(dp921
g62
(dp922
g82
g83
ssg71
g916
sg64
(lp923
S'http_accept_encoding'
p924
asbag57
(g78
g59
NtRp925
(dp926
g62
(dp927
g89
g90
ssg71
g916
sg64
(lp928
S':'
asbag57
(g78
g59
NtRp929
(dp930
g62
(dp931
sg71
g916
sg64
(lp932
g57
(g58
g59
NtRp933
(dp934
g62
(dp935
g70
I4
ssg71
g929
sg64
(lp936
S'gzip,deflate,sdch'
p937
asbasbasbag57
(g73
g59
NtRp938
(dp939
g62
(dp940
sg71
g712
sg64
(lp941
g57
(g78
g59
NtRp942
(dp943
g62
(dp944
g82
g83
ssg71
g938
sg64
(lp945
S'http_accept_language'
p946
asbag57
(g78
g59
NtRp947
(dp948
g62
(dp949
g89
g90
ssg71
g938
sg64
(lp950
S':'
asbag57
(g78
g59
NtRp951
(dp952
g62
(dp953
sg71
g938
sg64
(lp954
g57
(g58
g59
NtRp955
(dp956
g62
(dp957
g70
I4
ssg71
g951
sg64
(lp958
S'en-US,en;q=0.8'
p959
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g712
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'http_cache_control'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'max-age=0'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g712
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_connection'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'keep-alive'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g712
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_cookie'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510; session_id_admin=127.0.0.1-be75d44e-f44e-4689-a389-5ae8bf5aaa3d'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g712
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_host'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'127.0.0.1:8000'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g712
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_referer'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g712
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_user_agent'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g712
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'is_jython'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
g100
asbasbasbag57
(g73
g59
NtRp1113
(dp1114
g62
(dp1115
sg71
g712
sg64
(lp1116
g57
(g78
g59
NtRp1117
(dp1118
g62
(dp1119
g82
g83
ssg71
g1113
sg64
(lp1120
S'is_pypy'
p1121
asbag57
(g78
g59
NtRp1122
(dp1123
g62
(dp1124
g89
g90
ssg71
g1113
sg64
(lp1125
S':'
asbag57
(g78
g59
NtRp1126
(dp1127
g62
(dp1128
sg71
g1113
sg64
(lp1129
g57
(g58
g59
NtRp1130
(dp1131
g62
(dp1132
g70
I4
ssg71
g1126
sg64
(lp1133
g100
asbasbasbag57
(g73
g59
NtRp1134
(dp1135
g62
(dp1136
sg71
g712
sg64
(lp1137
g57
(g78
g59
NtRp1138
(dp1139
g62
(dp1140
g82
g83
ssg71
g1134
sg64
(lp1141
S'local_hosts'
p1142
asbag57
(g78
g59
NtRp1143
(dp1144
g62
(dp1145
g89
g90
ssg71
g1134
sg64
(lp1146
S':'
asbag57
(g78
g59
NtRp1147
(dp1148
g62
(dp1149
sg71
g1134
sg64
(lp1150
g57
(g58
g59
NtRp1151
(dp1152
g62
(dp1153
g70
I4
ssg71
g1147
sg64
(lp1154
g57
(g66
g59
NtRp1155
(dp1156
g62
(dp1157
g70
I3
ssg71
Nsg64
(lp1158
g57
(g73
g59
NtRp1159
(dp1160
g62
(dp1161
sg71
g1155
sg64
(lp1162
g57
(g78
g59
NtRp1163
(dp1164
g62
(dp1165
sg71
g1159
sg64
(lp1166
g57
(g58
g59
NtRp1167
(dp1168
g62
(dp1169
g70
I3
ssg71
g1163
sg64
(lp1170
S'::1'
p1171
asbasbasbag57
(g73
g59
NtRp1172
(dp1173
g62
(dp1174
sg71
g1155
sg64
(lp1175
g57
(g78
g59
NtRp1176
(dp1177
g62
(dp1178
sg71
g1172
sg64
(lp1179
g57
(g58
g59
NtRp1180
(dp1181
g62
(dp1182
g70
I3
ssg71
g1176
sg64
(lp1183
S'127.0.1.1'
p1184
asbasbasbag57
(g73
g59
NtRp1185
(dp1186
g62
(dp1187
sg71
g1155
sg64
(lp1188
g57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
sg71
g1185
sg64
(lp1192
g57
(g58
g59
NtRp1193
(dp1194
g62
(dp1195
g70
I3
ssg71
g1189
sg64
(lp1196
S'::ffff:127.0.0.1'
p1197
asbasbasbag57
(g73
g59
NtRp1198
(dp1199
g62
(dp1200
sg71
g1155
sg64
(lp1201
g57
(g78
g59
NtRp1202
(dp1203
g62
(dp1204
sg71
g1198
sg64
(lp1205
g57
(g58
g59
NtRp1206
(dp1207
g62
(dp1208
g70
I3
ssg71
g1202
sg64
(lp1209
S'127.0.0.1'
p1210
asbasbasbag57
(g73
g59
NtRp1211
(dp1212
g62
(dp1213
sg71
g1155
sg64
(lp1214
g57
(g78
g59
NtRp1215
(dp1216
g62
(dp1217
sg71
g1211
sg64
(lp1218
g57
(g58
g59
NtRp1219
(dp1220
g62
(dp1221
g70
I3
ssg71
g1215
sg64
(lp1222
S'anil-Inspiron-1525'
p1223
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1224
(dp1225
g62
(dp1226
sg71
g712
sg64
(lp1227
g57
(g78
g59
NtRp1228
(dp1229
g62
(dp1230
g82
g83
ssg71
g1224
sg64
(lp1231
S'path_info'
p1232
asbag57
(g78
g59
NtRp1233
(dp1234
g62
(dp1235
g89
g90
ssg71
g1224
sg64
(lp1236
S':'
asbag57
(g78
g59
NtRp1237
(dp1238
g62
(dp1239
sg71
g1224
sg64
(lp1240
g57
(g58
g59
NtRp1241
(dp1242
g62
(dp1243
g70
I4
ssg71
g1237
sg64
(lp1244
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/view/project/1'
p1245
asbasbasbag57
(g73
g59
NtRp1246
(dp1247
g62
(dp1248
sg71
g712
sg64
(lp1249
g57
(g78
g59
NtRp1250
(dp1251
g62
(dp1252
g82
g83
ssg71
g1246
sg64
(lp1253
S'query_string'
p1254
asbag57
(g78
g59
NtRp1255
(dp1256
g62
(dp1257
g89
g90
ssg71
g1246
sg64
(lp1258
S':'
asbag57
(g78
g59
NtRp1259
(dp1260
g62
(dp1261
sg71
g1246
sg64
(lp1262
g57
(g58
g59
NtRp1263
(dp1264
g62
(dp1265
g70
I4
ssg71
g1259
sg64
(lp1266
S'_signature=6906d7c4775f105ef13e65dceb80c51f938348b7'
p1267
asbasbasbag57
(g73
g59
NtRp1268
(dp1269
g62
(dp1270
sg71
g712
sg64
(lp1271
g57
(g78
g59
NtRp1272
(dp1273
g62
(dp1274
g82
g83
ssg71
g1268
sg64
(lp1275
S'remote_addr'
p1276
asbag57
(g78
g59
NtRp1277
(dp1278
g62
(dp1279
g89
g90
ssg71
g1268
sg64
(lp1280
S':'
asbag57
(g78
g59
NtRp1281
(dp1282
g62
(dp1283
sg71
g1268
sg64
(lp1284
g57
(g58
g59
NtRp1285
(dp1286
g62
(dp1287
g70
I4
ssg71
g1281
sg64
(lp1288
g263
asbasbasbag57
(g73
g59
NtRp1289
(dp1290
g62
(dp1291
sg71
g712
sg64
(lp1292
g57
(g78
g59
NtRp1293
(dp1294
g62
(dp1295
g82
g83
ssg71
g1289
sg64
(lp1296
S'remote_port'
p1297
asbag57
(g78
g59
NtRp1298
(dp1299
g62
(dp1300
g89
g90
ssg71
g1289
sg64
(lp1301
S':'
asbag57
(g78
g59
NtRp1302
(dp1303
g62
(dp1304
sg71
g1289
sg64
(lp1305
g57
(g58
g59
NtRp1306
(dp1307
g62
(dp1308
g70
I4
ssg71
g1302
sg64
(lp1309
S'55234'
p1310
asbasbasbag57
(g73
g59
NtRp1311
(dp1312
g62
(dp1313
sg71
g712
sg64
(lp1314
g57
(g78
g59
NtRp1315
(dp1316
g62
(dp1317
g82
g83
ssg71
g1311
sg64
(lp1318
S'request_method'
p1319
asbag57
(g78
g59
NtRp1320
(dp1321
g62
(dp1322
g89
g90
ssg71
g1311
sg64
(lp1323
S':'
asbag57
(g78
g59
NtRp1324
(dp1325
g62
(dp1326
sg71
g1311
sg64
(lp1327
g57
(g58
g59
NtRp1328
(dp1329
g62
(dp1330
g70
I4
ssg71
g1324
sg64
(lp1331
S'GET'
p1332
asbasbasbag57
(g73
g59
NtRp1333
(dp1334
g62
(dp1335
sg71
g712
sg64
(lp1336
g57
(g78
g59
NtRp1337
(dp1338
g62
(dp1339
g82
g83
ssg71
g1333
sg64
(lp1340
S'request_uri'
p1341
asbag57
(g78
g59
NtRp1342
(dp1343
g62
(dp1344
g89
g90
ssg71
g1333
sg64
(lp1345
S':'
asbag57
(g78
g59
NtRp1346
(dp1347
g62
(dp1348
sg71
g1333
sg64
(lp1349
g57
(g58
g59
NtRp1350
(dp1351
g62
(dp1352
g70
I4
ssg71
g1346
sg64
(lp1353
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/view/project/1?_signature=6906d7c4775f105ef13e65dceb80c51f938348b7'
p1354
asbasbasbag57
(g73
g59
NtRp1355
(dp1356
g62
(dp1357
sg71
g712
sg64
(lp1358
g57
(g78
g59
NtRp1359
(dp1360
g62
(dp1361
g82
g83
ssg71
g1355
sg64
(lp1362
S'script_name'
p1363
asbag57
(g78
g59
NtRp1364
(dp1365
g62
(dp1366
g89
g90
ssg71
g1355
sg64
(lp1367
S':'
asbag57
(g78
g59
NtRp1368
(dp1369
g62
(dp1370
sg71
g1355
sg64
(lp1371
g57
(g58
g59
NtRp1372
(dp1373
g62
(dp1374
g70
I4
ssg71
g1368
sg64
(lp1375
S''
asbasbasbag57
(g73
g59
NtRp1376
(dp1377
g62
(dp1378
sg71
g712
sg64
(lp1379
g57
(g78
g59
NtRp1380
(dp1381
g62
(dp1382
g82
g83
ssg71
g1376
sg64
(lp1383
S'server_name'
p1384
asbag57
(g78
g59
NtRp1385
(dp1386
g62
(dp1387
g89
g90
ssg71
g1376
sg64
(lp1388
S':'
asbag57
(g78
g59
NtRp1389
(dp1390
g62
(dp1391
sg71
g1376
sg64
(lp1392
g57
(g58
g59
NtRp1393
(dp1394
g62
(dp1395
g70
I4
ssg71
g1389
sg64
(lp1396
S'anil-Inspiron-1525'
p1397
asbasbasbag57
(g73
g59
NtRp1398
(dp1399
g62
(dp1400
sg71
g712
sg64
(lp1401
g57
(g78
g59
NtRp1402
(dp1403
g62
(dp1404
g82
g83
ssg71
g1398
sg64
(lp1405
S'server_port'
p1406
asbag57
(g78
g59
NtRp1407
(dp1408
g62
(dp1409
g89
g90
ssg71
g1398
sg64
(lp1410
S':'
asbag57
(g78
g59
NtRp1411
(dp1412
g62
(dp1413
sg71
g1398
sg64
(lp1414
g57
(g58
g59
NtRp1415
(dp1416
g62
(dp1417
g70
I4
ssg71
g1411
sg64
(lp1418
S'8000'
p1419
asbasbasbag57
(g73
g59
NtRp1420
(dp1421
g62
(dp1422
sg71
g712
sg64
(lp1423
g57
(g78
g59
NtRp1424
(dp1425
g62
(dp1426
g82
g83
ssg71
g1420
sg64
(lp1427
S'server_protocol'
p1428
asbag57
(g78
g59
NtRp1429
(dp1430
g62
(dp1431
g89
g90
ssg71
g1420
sg64
(lp1432
S':'
asbag57
(g78
g59
NtRp1433
(dp1434
g62
(dp1435
sg71
g1420
sg64
(lp1436
g57
(g58
g59
NtRp1437
(dp1438
g62
(dp1439
g70
I4
ssg71
g1433
sg64
(lp1440
S'HTTP/1.1'
p1441
asbasbasbag57
(g73
g59
NtRp1442
(dp1443
g62
(dp1444
sg71
g712
sg64
(lp1445
g57
(g78
g59
NtRp1446
(dp1447
g62
(dp1448
g82
g83
ssg71
g1442
sg64
(lp1449
S'server_software'
p1450
asbag57
(g78
g59
NtRp1451
(dp1452
g62
(dp1453
g89
g90
ssg71
g1442
sg64
(lp1454
S':'
asbag57
(g78
g59
NtRp1455
(dp1456
g62
(dp1457
sg71
g1442
sg64
(lp1458
g57
(g58
g59
NtRp1459
(dp1460
g62
(dp1461
g70
I4
ssg71
g1455
sg64
(lp1462
S'Rocket 1.2.6'
p1463
asbasbasbag57
(g73
g59
NtRp1464
(dp1465
g62
(dp1466
sg71
g712
sg64
(lp1467
g57
(g78
g59
NtRp1468
(dp1469
g62
(dp1470
g82
g83
ssg71
g1464
sg64
(lp1471
S'web2py_path'
p1472
asbag57
(g78
g59
NtRp1473
(dp1474
g62
(dp1475
g89
g90
ssg71
g1464
sg64
(lp1476
S':'
asbag57
(g78
g59
NtRp1477
(dp1478
g62
(dp1479
sg71
g1464
sg64
(lp1480
g57
(g58
g59
NtRp1481
(dp1482
g62
(dp1483
g70
I4
ssg71
g1477
sg64
(lp1484
g759
asbasbasbag57
(g73
g59
NtRp1485
(dp1486
g62
(dp1487
sg71
g712
sg64
(lp1488
g57
(g78
g59
NtRp1489
(dp1490
g62
(dp1491
g82
g83
ssg71
g1485
sg64
(lp1492
S'web2py_version'
p1493
asbag57
(g78
g59
NtRp1494
(dp1495
g62
(dp1496
g89
g90
ssg71
g1485
sg64
(lp1497
S':'
asbag57
(g78
g59
NtRp1498
(dp1499
g62
(dp1500
sg71
g1485
sg64
(lp1501
g57
(g58
g59
NtRp1502
(dp1503
g62
(dp1504
g70
I4
ssg71
g1498
sg64
(lp1505
g57
(g66
g59
NtRp1506
(dp1507
g62
(dp1508
g70
I3
ssg71
Nsg64
(lp1509
g57
(g73
g59
NtRp1510
(dp1511
g62
(dp1512
sg71
g1506
sg64
(lp1513
g57
(g78
g59
NtRp1514
(dp1515
g62
(dp1516
sg71
g1510
sg64
(lp1517
g57
(g58
g59
NtRp1518
(dp1519
g62
(dp1520
g70
I3
ssg71
g1514
sg64
(lp1521
S'2'
asbasbasbag57
(g73
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1506
sg64
(lp1525
g57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g1522
sg64
(lp1529
g57
(g58
g59
NtRp1530
(dp1531
g62
(dp1532
g70
I3
ssg71
g1526
sg64
(lp1533
S'3'
asbasbasbag57
(g73
g59
NtRp1534
(dp1535
g62
(dp1536
sg71
g1506
sg64
(lp1537
g57
(g78
g59
NtRp1538
(dp1539
g62
(dp1540
sg71
g1534
sg64
(lp1541
g57
(g58
g59
NtRp1542
(dp1543
g62
(dp1544
g70
I3
ssg71
g1538
sg64
(lp1545
S'2'
asbasbasbag57
(g73
g59
NtRp1546
(dp1547
g62
(dp1548
sg71
g1506
sg64
(lp1549
g57
(g78
g59
NtRp1550
(dp1551
g62
(dp1552
sg71
g1546
sg64
(lp1553
g57
(g58
g59
NtRp1554
(dp1555
g62
(dp1556
g70
I3
ssg71
g1550
sg64
(lp1557
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1558
asbasbasbag57
(g73
g59
NtRp1559
(dp1560
g62
(dp1561
sg71
g1506
sg64
(lp1562
g57
(g78
g59
NtRp1563
(dp1564
g62
(dp1565
sg71
g1559
sg64
(lp1566
g57
(g58
g59
NtRp1567
(dp1568
g62
(dp1569
g70
I3
ssg71
g1563
sg64
(lp1570
S'stable'
p1571
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1572
(dp1573
g62
(dp1574
sg71
g712
sg64
(lp1575
g57
(g78
g59
NtRp1576
(dp1577
g62
(dp1578
g82
g83
ssg71
g1572
sg64
(lp1579
S'wsgi_errors'
p1580
asbag57
(g78
g59
NtRp1581
(dp1582
g62
(dp1583
g89
g90
ssg71
g1572
sg64
(lp1584
S':'
asbag57
(g78
g59
NtRp1585
(dp1586
g62
(dp1587
sg71
g1572
sg64
(lp1588
g57
(g58
g59
NtRp1589
(dp1590
g62
(dp1591
g70
I4
ssg71
g1585
sg64
(lp1592
S"<open file '<stderr>', mode 'w' at 0xb72a30d0>"
p1593
asbasbasbag57
(g73
g59
NtRp1594
(dp1595
g62
(dp1596
sg71
g712
sg64
(lp1597
g57
(g78
g59
NtRp1598
(dp1599
g62
(dp1600
g82
g83
ssg71
g1594
sg64
(lp1601
S'wsgi_file_wrapper'
p1602
asbag57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
g89
g90
ssg71
g1594
sg64
(lp1606
S':'
asbag57
(g78
g59
NtRp1607
(dp1608
g62
(dp1609
sg71
g1594
sg64
(lp1610
g57
(g58
g59
NtRp1611
(dp1612
g62
(dp1613
g70
I4
ssg71
g1607
sg64
(lp1614
S'<class wsgiref.util.FileWrapper at 0xa405a4c>'
p1615
asbasbasbag57
(g73
g59
NtRp1616
(dp1617
g62
(dp1618
sg71
g712
sg64
(lp1619
g57
(g78
g59
NtRp1620
(dp1621
g62
(dp1622
g82
g83
ssg71
g1616
sg64
(lp1623
S'wsgi_input'
p1624
asbag57
(g78
g59
NtRp1625
(dp1626
g62
(dp1627
g89
g90
ssg71
g1616
sg64
(lp1628
S':'
asbag57
(g78
g59
NtRp1629
(dp1630
g62
(dp1631
sg71
g1616
sg64
(lp1632
g57
(g58
g59
NtRp1633
(dp1634
g62
(dp1635
g70
I4
ssg71
g1629
sg64
(lp1636
S'<socket._fileobject object at 0xadcad22c>'
p1637
asbasbasbag57
(g73
g59
NtRp1638
(dp1639
g62
(dp1640
sg71
g712
sg64
(lp1641
g57
(g78
g59
NtRp1642
(dp1643
g62
(dp1644
g82
g83
ssg71
g1638
sg64
(lp1645
S'wsgi_multiprocess'
p1646
asbag57
(g78
g59
NtRp1647
(dp1648
g62
(dp1649
g89
g90
ssg71
g1638
sg64
(lp1650
S':'
asbag57
(g78
g59
NtRp1651
(dp1652
g62
(dp1653
sg71
g1638
sg64
(lp1654
g57
(g58
g59
NtRp1655
(dp1656
g62
(dp1657
g70
I4
ssg71
g1651
sg64
(lp1658
g100
asbasbasbag57
(g73
g59
NtRp1659
(dp1660
g62
(dp1661
sg71
g712
sg64
(lp1662
g57
(g78
g59
NtRp1663
(dp1664
g62
(dp1665
g82
g83
ssg71
g1659
sg64
(lp1666
S'wsgi_multithread'
p1667
asbag57
(g78
g59
NtRp1668
(dp1669
g62
(dp1670
g89
g90
ssg71
g1659
sg64
(lp1671
S':'
asbag57
(g78
g59
NtRp1672
(dp1673
g62
(dp1674
sg71
g1659
sg64
(lp1675
g57
(g58
g59
NtRp1676
(dp1677
g62
(dp1678
g70
I4
ssg71
g1672
sg64
(lp1679
S'True'
p1680
asbasbasbag57
(g73
g59
NtRp1681
(dp1682
g62
(dp1683
sg71
g712
sg64
(lp1684
g57
(g78
g59
NtRp1685
(dp1686
g62
(dp1687
g82
g83
ssg71
g1681
sg64
(lp1688
S'wsgi_run_once'
p1689
asbag57
(g78
g59
NtRp1690
(dp1691
g62
(dp1692
g89
g90
ssg71
g1681
sg64
(lp1693
S':'
asbag57
(g78
g59
NtRp1694
(dp1695
g62
(dp1696
sg71
g1681
sg64
(lp1697
g57
(g58
g59
NtRp1698
(dp1699
g62
(dp1700
g70
I4
ssg71
g1694
sg64
(lp1701
g100
asbasbasbag57
(g73
g59
NtRp1702
(dp1703
g62
(dp1704
sg71
g712
sg64
(lp1705
g57
(g78
g59
NtRp1706
(dp1707
g62
(dp1708
g82
g83
ssg71
g1702
sg64
(lp1709
S'wsgi_url_scheme'
p1710
asbag57
(g78
g59
NtRp1711
(dp1712
g62
(dp1713
g89
g90
ssg71
g1702
sg64
(lp1714
S':'
asbag57
(g78
g59
NtRp1715
(dp1716
g62
(dp1717
sg71
g1702
sg64
(lp1718
g57
(g58
g59
NtRp1719
(dp1720
g62
(dp1721
g70
I4
ssg71
g1715
sg64
(lp1722
S'http'
p1723
asbasbasbag57
(g73
g59
NtRp1724
(dp1725
g62
(dp1726
sg71
g712
sg64
(lp1727
g57
(g78
g59
NtRp1728
(dp1729
g62
(dp1730
g82
g83
ssg71
g1724
sg64
(lp1731
S'wsgi_version'
p1732
asbag57
(g78
g59
NtRp1733
(dp1734
g62
(dp1735
g89
g90
ssg71
g1724
sg64
(lp1736
S':'
asbag57
(g78
g59
NtRp1737
(dp1738
g62
(dp1739
sg71
g1724
sg64
(lp1740
g57
(g58
g59
NtRp1741
(dp1742
g62
(dp1743
g70
I4
ssg71
g1737
sg64
(lp1744
g57
(g66
g59
NtRp1745
(dp1746
g62
(dp1747
g70
I3
ssg71
Nsg64
(lp1748
g57
(g73
g59
NtRp1749
(dp1750
g62
(dp1751
sg71
g1745
sg64
(lp1752
g57
(g78
g59
NtRp1753
(dp1754
g62
(dp1755
sg71
g1749
sg64
(lp1756
g57
(g58
g59
NtRp1757
(dp1758
g62
(dp1759
g70
I3
ssg71
g1753
sg64
(lp1760
S'1'
asbasbasbag57
(g73
g59
NtRp1761
(dp1762
g62
(dp1763
sg71
g1745
sg64
(lp1764
g57
(g78
g59
NtRp1765
(dp1766
g62
(dp1767
sg71
g1761
sg64
(lp1768
g57
(g58
g59
NtRp1769
(dp1770
g62
(dp1771
g70
I3
ssg71
g1765
sg64
(lp1772
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1773
(dp1774
g62
(dp1775
sg71
g67
sg64
(lp1776
g57
(g78
g59
NtRp1777
(dp1778
g62
(dp1779
g82
g83
ssg71
g1773
sg64
(lp1780
S'extension'
p1781
asbag57
(g78
g59
NtRp1782
(dp1783
g62
(dp1784
g89
g90
ssg71
g1773
sg64
(lp1785
S':'
asbag57
(g78
g59
NtRp1786
(dp1787
g62
(dp1788
sg71
g1773
sg64
(lp1789
g57
(g58
g59
NtRp1790
(dp1791
g62
(dp1792
g70
I5
ssg71
g1786
sg64
(lp1793
S'html'
p1794
asbasbasbag57
(g73
g59
NtRp1795
(dp1796
g62
(dp1797
sg71
g67
sg64
(lp1798
g57
(g78
g59
NtRp1799
(dp1800
g62
(dp1801
g82
g83
ssg71
g1795
sg64
(lp1802
S'folder'
p1803
asbag57
(g78
g59
NtRp1804
(dp1805
g62
(dp1806
g89
g90
ssg71
g1795
sg64
(lp1807
S':'
asbag57
(g78
g59
NtRp1808
(dp1809
g62
(dp1810
sg71
g1795
sg64
(lp1811
g57
(g58
g59
NtRp1812
(dp1813
g62
(dp1814
g70
I5
ssg71
g1808
sg64
(lp1815
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1816
asbasbasbag57
(g73
g59
NtRp1817
(dp1818
g62
(dp1819
sg71
g67
sg64
(lp1820
g57
(g78
g59
NtRp1821
(dp1822
g62
(dp1823
g82
g83
ssg71
g1817
sg64
(lp1824
S'function'
p1825
asbag57
(g78
g59
NtRp1826
(dp1827
g62
(dp1828
g89
g90
ssg71
g1817
sg64
(lp1829
S':'
asbag57
(g78
g59
NtRp1830
(dp1831
g62
(dp1832
sg71
g1817
sg64
(lp1833
g57
(g58
g59
NtRp1834
(dp1835
g62
(dp1836
g70
I5
ssg71
g1830
sg64
(lp1837
S'list_all_dev_projects'
p1838
asbasbasbag57
(g73
g59
NtRp1839
(dp1840
g62
(dp1841
sg71
g67
sg64
(lp1842
g57
(g78
g59
NtRp1843
(dp1844
g62
(dp1845
g82
g83
ssg71
g1839
sg64
(lp1846
S'get_vars'
p1847
asbag57
(g78
g59
NtRp1848
(dp1849
g62
(dp1850
g89
g90
ssg71
g1839
sg64
(lp1851
S':'
asbag57
(g78
g59
NtRp1852
(dp1853
g62
(dp1854
sg71
g1839
sg64
(lp1855
g57
(g58
g59
NtRp1856
(dp1857
g62
(dp1858
g70
I5
ssg71
g1852
sg64
(lp1859
g57
(g66
g59
NtRp1860
(dp1861
g62
(dp1862
g70
I4
ssg71
Nsg64
(lp1863
sbasbasbasbag57
(g73
g59
NtRp1864
(dp1865
g62
(dp1866
sg71
g67
sg64
(lp1867
g57
(g78
g59
NtRp1868
(dp1869
g62
(dp1870
g82
g83
ssg71
g1864
sg64
(lp1871
S'global_settings'
p1872
asbag57
(g78
g59
NtRp1873
(dp1874
g62
(dp1875
g89
g90
ssg71
g1864
sg64
(lp1876
S':'
asbag57
(g78
g59
NtRp1877
(dp1878
g62
(dp1879
sg71
g1864
sg64
(lp1880
g57
(g58
g59
NtRp1881
(dp1882
g62
(dp1883
g70
I5
ssg71
g1877
sg64
(lp1884
g57
(g66
g59
NtRp1885
(dp1886
g62
(dp1887
g70
I4
ssg71
Nsg64
(lp1888
g57
(g73
g59
NtRp1889
(dp1890
g62
(dp1891
sg71
g1885
sg64
(lp1892
g57
(g78
g59
NtRp1893
(dp1894
g62
(dp1895
g82
g83
ssg71
g1889
sg64
(lp1896
g724
asbag57
(g78
g59
NtRp1897
(dp1898
g62
(dp1899
g89
g90
ssg71
g1889
sg64
(lp1900
S':'
asbag57
(g78
g59
NtRp1901
(dp1902
g62
(dp1903
sg71
g1889
sg64
(lp1904
g57
(g58
g59
NtRp1905
(dp1906
g62
(dp1907
g70
I4
ssg71
g1901
sg64
(lp1908
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1909
asbasbasbag57
(g73
g59
NtRp1910
(dp1911
g62
(dp1912
sg71
g1885
sg64
(lp1913
g57
(g78
g59
NtRp1914
(dp1915
g62
(dp1916
g82
g83
ssg71
g1910
sg64
(lp1917
g746
asbag57
(g78
g59
NtRp1918
(dp1919
g62
(dp1920
g89
g90
ssg71
g1910
sg64
(lp1921
S':'
asbag57
(g78
g59
NtRp1922
(dp1923
g62
(dp1924
sg71
g1910
sg64
(lp1925
g57
(g58
g59
NtRp1926
(dp1927
g62
(dp1928
g70
I4
ssg71
g1922
sg64
(lp1929
g759
asbasbasbag57
(g73
g59
NtRp1930
(dp1931
g62
(dp1932
sg71
g1885
sg64
(lp1933
g57
(g78
g59
NtRp1934
(dp1935
g62
(dp1936
g82
g83
ssg71
g1930
sg64
(lp1937
g768
asbag57
(g78
g59
NtRp1938
(dp1939
g62
(dp1940
g89
g90
ssg71
g1930
sg64
(lp1941
S':'
asbag57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
sg71
g1930
sg64
(lp1945
g57
(g58
g59
NtRp1946
(dp1947
g62
(dp1948
g70
I4
ssg71
g1942
sg64
(lp1949
g57
(g66
g59
NtRp1950
(dp1951
g62
(dp1952
g70
I3
ssg71
Nsg64
(lp1953
sbasbasbasbag57
(g73
g59
NtRp1954
(dp1955
g62
(dp1956
sg71
g1885
sg64
(lp1957
g57
(g78
g59
NtRp1958
(dp1959
g62
(dp1960
g82
g83
ssg71
g1954
sg64
(lp1961
g793
asbag57
(g78
g59
NtRp1962
(dp1963
g62
(dp1964
g89
g90
ssg71
g1954
sg64
(lp1965
S':'
asbag57
(g78
g59
NtRp1966
(dp1967
g62
(dp1968
sg71
g1954
sg64
(lp1969
g57
(g58
g59
NtRp1970
(dp1971
g62
(dp1972
g70
I4
ssg71
g1966
sg64
(lp1973
S"<Values at 0xa3b8fcc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1974
asbasbasbag57
(g73
g59
NtRp1975
(dp1976
g62
(dp1977
sg71
g1885
sg64
(lp1978
g57
(g78
g59
NtRp1979
(dp1980
g62
(dp1981
g82
g83
ssg71
g1975
sg64
(lp1982
g815
asbag57
(g78
g59
NtRp1983
(dp1984
g62
(dp1985
g89
g90
ssg71
g1975
sg64
(lp1986
S':'
asbag57
(g78
g59
NtRp1987
(dp1988
g62
(dp1989
sg71
g1975
sg64
(lp1990
g57
(g58
g59
NtRp1991
(dp1992
g62
(dp1993
g70
I4
ssg71
g1987
sg64
(lp1994
S'set([])'
p1995
asbasbasbag57
(g73
g59
NtRp1996
(dp1997
g62
(dp1998
sg71
g1885
sg64
(lp1999
g57
(g78
g59
NtRp2000
(dp2001
g62
(dp2002
g82
g83
ssg71
g1996
sg64
(lp2003
g837
asbag57
(g78
g59
NtRp2004
(dp2005
g62
(dp2006
g89
g90
ssg71
g1996
sg64
(lp2007
S':'
asbag57
(g78
g59
NtRp2008
(dp2009
g62
(dp2010
sg71
g1996
sg64
(lp2011
g57
(g58
g59
NtRp2012
(dp2013
g62
(dp2014
g70
I4
ssg71
g2008
sg64
(lp2015
g100
asbasbasbag57
(g73
g59
NtRp2016
(dp2017
g62
(dp2018
sg71
g1885
sg64
(lp2019
g57
(g78
g59
NtRp2020
(dp2021
g62
(dp2022
g82
g83
ssg71
g2016
sg64
(lp2023
g858
asbag57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
g89
g90
ssg71
g2016
sg64
(lp2027
S':'
asbag57
(g78
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g2016
sg64
(lp2031
g57
(g58
g59
NtRp2032
(dp2033
g62
(dp2034
g70
I4
ssg71
g2028
sg64
(lp2035
g871
asbasbasbag57
(g73
g59
NtRp2036
(dp2037
g62
(dp2038
sg71
g1885
sg64
(lp2039
g57
(g78
g59
NtRp2040
(dp2041
g62
(dp2042
g82
g83
ssg71
g2036
sg64
(lp2043
g1100
asbag57
(g78
g59
NtRp2044
(dp2045
g62
(dp2046
g89
g90
ssg71
g2036
sg64
(lp2047
S':'
asbag57
(g78
g59
NtRp2048
(dp2049
g62
(dp2050
sg71
g2036
sg64
(lp2051
g57
(g58
g59
NtRp2052
(dp2053
g62
(dp2054
g70
I4
ssg71
g2048
sg64
(lp2055
g100
asbasbasbag57
(g73
g59
NtRp2056
(dp2057
g62
(dp2058
sg71
g1885
sg64
(lp2059
g57
(g78
g59
NtRp2060
(dp2061
g62
(dp2062
g82
g83
ssg71
g2056
sg64
(lp2063
g1121
asbag57
(g78
g59
NtRp2064
(dp2065
g62
(dp2066
g89
g90
ssg71
g2056
sg64
(lp2067
S':'
asbag57
(g78
g59
NtRp2068
(dp2069
g62
(dp2070
sg71
g2056
sg64
(lp2071
g57
(g58
g59
NtRp2072
(dp2073
g62
(dp2074
g70
I4
ssg71
g2068
sg64
(lp2075
g100
asbasbasbag57
(g73
g59
NtRp2076
(dp2077
g62
(dp2078
sg71
g1885
sg64
(lp2079
g57
(g78
g59
NtRp2080
(dp2081
g62
(dp2082
g82
g83
ssg71
g2076
sg64
(lp2083
g1142
asbag57
(g78
g59
NtRp2084
(dp2085
g62
(dp2086
g89
g90
ssg71
g2076
sg64
(lp2087
S':'
asbag57
(g78
g59
NtRp2088
(dp2089
g62
(dp2090
sg71
g2076
sg64
(lp2091
g57
(g58
g59
NtRp2092
(dp2093
g62
(dp2094
g70
I4
ssg71
g2088
sg64
(lp2095
g57
(g66
g59
NtRp2096
(dp2097
g62
(dp2098
g70
I3
ssg71
Nsg64
(lp2099
g57
(g73
g59
NtRp2100
(dp2101
g62
(dp2102
sg71
g2096
sg64
(lp2103
g57
(g78
g59
NtRp2104
(dp2105
g62
(dp2106
sg71
g2100
sg64
(lp2107
g57
(g58
g59
NtRp2108
(dp2109
g62
(dp2110
g70
I3
ssg71
g2104
sg64
(lp2111
g1171
asbasbasbag57
(g73
g59
NtRp2112
(dp2113
g62
(dp2114
sg71
g2096
sg64
(lp2115
g57
(g78
g59
NtRp2116
(dp2117
g62
(dp2118
sg71
g2112
sg64
(lp2119
g57
(g58
g59
NtRp2120
(dp2121
g62
(dp2122
g70
I3
ssg71
g2116
sg64
(lp2123
g1184
asbasbasbag57
(g73
g59
NtRp2124
(dp2125
g62
(dp2126
sg71
g2096
sg64
(lp2127
g57
(g78
g59
NtRp2128
(dp2129
g62
(dp2130
sg71
g2124
sg64
(lp2131
g57
(g58
g59
NtRp2132
(dp2133
g62
(dp2134
g70
I3
ssg71
g2128
sg64
(lp2135
g1197
asbasbasbag57
(g73
g59
NtRp2136
(dp2137
g62
(dp2138
sg71
g2096
sg64
(lp2139
g57
(g78
g59
NtRp2140
(dp2141
g62
(dp2142
sg71
g2136
sg64
(lp2143
g57
(g58
g59
NtRp2144
(dp2145
g62
(dp2146
g70
I3
ssg71
g2140
sg64
(lp2147
g1210
asbasbasbag57
(g73
g59
NtRp2148
(dp2149
g62
(dp2150
sg71
g2096
sg64
(lp2151
g57
(g78
g59
NtRp2152
(dp2153
g62
(dp2154
sg71
g2148
sg64
(lp2155
g57
(g58
g59
NtRp2156
(dp2157
g62
(dp2158
g70
I3
ssg71
g2152
sg64
(lp2159
g1223
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2160
(dp2161
g62
(dp2162
sg71
g1885
sg64
(lp2163
g57
(g78
g59
NtRp2164
(dp2165
g62
(dp2166
g82
g83
ssg71
g2160
sg64
(lp2167
g1493
asbag57
(g78
g59
NtRp2168
(dp2169
g62
(dp2170
g89
g90
ssg71
g2160
sg64
(lp2171
S':'
asbag57
(g78
g59
NtRp2172
(dp2173
g62
(dp2174
sg71
g2160
sg64
(lp2175
g57
(g58
g59
NtRp2176
(dp2177
g62
(dp2178
g70
I4
ssg71
g2172
sg64
(lp2179
g57
(g66
g59
NtRp2180
(dp2181
g62
(dp2182
g70
I3
ssg71
Nsg64
(lp2183
g57
(g73
g59
NtRp2184
(dp2185
g62
(dp2186
sg71
g2180
sg64
(lp2187
g57
(g78
g59
NtRp2188
(dp2189
g62
(dp2190
sg71
g2184
sg64
(lp2191
g57
(g58
g59
NtRp2192
(dp2193
g62
(dp2194
g70
I3
ssg71
g2188
sg64
(lp2195
S'2'
asbasbasbag57
(g73
g59
NtRp2196
(dp2197
g62
(dp2198
sg71
g2180
sg64
(lp2199
g57
(g78
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g2196
sg64
(lp2203
g57
(g58
g59
NtRp2204
(dp2205
g62
(dp2206
g70
I3
ssg71
g2200
sg64
(lp2207
S'3'
asbasbasbag57
(g73
g59
NtRp2208
(dp2209
g62
(dp2210
sg71
g2180
sg64
(lp2211
g57
(g78
g59
NtRp2212
(dp2213
g62
(dp2214
sg71
g2208
sg64
(lp2215
g57
(g58
g59
NtRp2216
(dp2217
g62
(dp2218
g70
I3
ssg71
g2212
sg64
(lp2219
S'2'
asbasbasbag57
(g73
g59
NtRp2220
(dp2221
g62
(dp2222
sg71
g2180
sg64
(lp2223
g57
(g78
g59
NtRp2224
(dp2225
g62
(dp2226
sg71
g2220
sg64
(lp2227
g57
(g58
g59
NtRp2228
(dp2229
g62
(dp2230
g70
I3
ssg71
g2224
sg64
(lp2231
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2232
asbasbasbag57
(g73
g59
NtRp2233
(dp2234
g62
(dp2235
sg71
g2180
sg64
(lp2236
g57
(g78
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2233
sg64
(lp2240
g57
(g58
g59
NtRp2241
(dp2242
g62
(dp2243
g70
I3
ssg71
g2237
sg64
(lp2244
g1571
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2245
(dp2246
g62
(dp2247
sg71
g67
sg64
(lp2248
g57
(g78
g59
NtRp2249
(dp2250
g62
(dp2251
g82
g83
ssg71
g2245
sg64
(lp2252
S'is_https'
p2253
asbag57
(g78
g59
NtRp2254
(dp2255
g62
(dp2256
g89
g90
ssg71
g2245
sg64
(lp2257
S':'
asbag57
(g78
g59
NtRp2258
(dp2259
g62
(dp2260
sg71
g2245
sg64
(lp2261
g57
(g58
g59
NtRp2262
(dp2263
g62
(dp2264
g70
I5
ssg71
g2258
sg64
(lp2265
g100
asbasbasbag57
(g73
g59
NtRp2266
(dp2267
g62
(dp2268
sg71
g67
sg64
(lp2269
g57
(g78
g59
NtRp2270
(dp2271
g62
(dp2272
g82
g83
ssg71
g2266
sg64
(lp2273
S'is_local'
p2274
asbag57
(g78
g59
NtRp2275
(dp2276
g62
(dp2277
g89
g90
ssg71
g2266
sg64
(lp2278
S':'
asbag57
(g78
g59
NtRp2279
(dp2280
g62
(dp2281
sg71
g2266
sg64
(lp2282
g57
(g58
g59
NtRp2283
(dp2284
g62
(dp2285
g70
I5
ssg71
g2279
sg64
(lp2286
g1680
asbasbasbag57
(g73
g59
NtRp2287
(dp2288
g62
(dp2289
sg71
g67
sg64
(lp2290
g57
(g78
g59
NtRp2291
(dp2292
g62
(dp2293
g82
g83
ssg71
g2287
sg64
(lp2294
S'is_restful'
p2295
asbag57
(g78
g59
NtRp2296
(dp2297
g62
(dp2298
g89
g90
ssg71
g2287
sg64
(lp2299
S':'
asbag57
(g78
g59
NtRp2300
(dp2301
g62
(dp2302
sg71
g2287
sg64
(lp2303
g57
(g58
g59
NtRp2304
(dp2305
g62
(dp2306
g70
I5
ssg71
g2300
sg64
(lp2307
g100
asbasbasbag57
(g73
g59
NtRp2308
(dp2309
g62
(dp2310
sg71
g67
sg64
(lp2311
g57
(g78
g59
NtRp2312
(dp2313
g62
(dp2314
g82
g83
ssg71
g2308
sg64
(lp2315
S'now'
p2316
asbag57
(g78
g59
NtRp2317
(dp2318
g62
(dp2319
g89
g90
ssg71
g2308
sg64
(lp2320
S':'
asbag57
(g78
g59
NtRp2321
(dp2322
g62
(dp2323
sg71
g2308
sg64
(lp2324
g57
(g58
g59
NtRp2325
(dp2326
g62
(dp2327
g70
I5
ssg71
g2321
sg64
(lp2328
S'datetime.datetime(2013, 2, 20, 22, 14, 6, 288837)'
p2329
asbasbasbag57
(g73
g59
NtRp2330
(dp2331
g62
(dp2332
sg71
g67
sg64
(lp2333
g57
(g78
g59
NtRp2334
(dp2335
g62
(dp2336
g82
g83
ssg71
g2330
sg64
(lp2337
S'post_vars'
p2338
asbag57
(g78
g59
NtRp2339
(dp2340
g62
(dp2341
g89
g90
ssg71
g2330
sg64
(lp2342
S':'
asbag57
(g78
g59
NtRp2343
(dp2344
g62
(dp2345
sg71
g2330
sg64
(lp2346
g57
(g58
g59
NtRp2347
(dp2348
g62
(dp2349
g70
I5
ssg71
g2343
sg64
(lp2350
g57
(g66
g59
NtRp2351
(dp2352
g62
(dp2353
g70
I4
ssg71
Nsg64
(lp2354
sbasbasbasbag57
(g73
g59
NtRp2355
(dp2356
g62
(dp2357
sg71
g67
sg64
(lp2358
g57
(g78
g59
NtRp2359
(dp2360
g62
(dp2361
g82
g83
ssg71
g2355
sg64
(lp2362
S'raw_args'
p2363
asbag57
(g78
g59
NtRp2364
(dp2365
g62
(dp2366
g89
g90
ssg71
g2355
sg64
(lp2367
S':'
asbag57
(g78
g59
NtRp2368
(dp2369
g62
(dp2370
sg71
g2355
sg64
(lp2371
g57
(g58
g59
NtRp2372
(dp2373
g62
(dp2374
g70
I5
ssg71
g2368
sg64
(lp2375
S'project/view/project/1'
p2376
asbasbasbag57
(g73
g59
NtRp2377
(dp2378
g62
(dp2379
sg71
g67
sg64
(lp2380
g57
(g78
g59
NtRp2381
(dp2382
g62
(dp2383
g82
g83
ssg71
g2377
sg64
(lp2384
S'raw_extension'
p2385
asbag57
(g78
g59
NtRp2386
(dp2387
g62
(dp2388
g89
g90
ssg71
g2377
sg64
(lp2389
S':'
asbag57
(g78
g59
NtRp2390
(dp2391
g62
(dp2392
sg71
g2377
sg64
(lp2393
g57
(g58
g59
NtRp2394
(dp2395
g62
(dp2396
g70
I5
ssg71
g2390
sg64
(lp2397
S'None'
p2398
asbasbasbag57
(g73
g59
NtRp2399
(dp2400
g62
(dp2401
sg71
g67
sg64
(lp2402
g57
(g78
g59
NtRp2403
(dp2404
g62
(dp2405
g82
g83
ssg71
g2399
sg64
(lp2406
S'url'
p2407
asbag57
(g78
g59
NtRp2408
(dp2409
g62
(dp2410
g89
g90
ssg71
g2399
sg64
(lp2411
S':'
asbag57
(g78
g59
NtRp2412
(dp2413
g62
(dp2414
sg71
g2399
sg64
(lp2415
g57
(g58
g59
NtRp2416
(dp2417
g62
(dp2418
g70
I5
ssg71
g2412
sg64
(lp2419
g1245
asbasbasbag57
(g73
g59
NtRp2420
(dp2421
g62
(dp2422
sg71
g67
sg64
(lp2423
g57
(g78
g59
NtRp2424
(dp2425
g62
(dp2426
g82
g83
ssg71
g2420
sg64
(lp2427
S'utcnow'
p2428
asbag57
(g78
g59
NtRp2429
(dp2430
g62
(dp2431
g89
g90
ssg71
g2420
sg64
(lp2432
S':'
asbag57
(g78
g59
NtRp2433
(dp2434
g62
(dp2435
sg71
g2420
sg64
(lp2436
g57
(g58
g59
NtRp2437
(dp2438
g62
(dp2439
g70
I5
ssg71
g2433
sg64
(lp2440
S'datetime.datetime(2013, 2, 20, 16, 44, 6, 288882)'
p2441
asbasbasbag57
(g73
g59
NtRp2442
(dp2443
g62
(dp2444
sg71
g67
sg64
(lp2445
g57
(g78
g59
NtRp2446
(dp2447
g62
(dp2448
g82
g83
ssg71
g2442
sg64
(lp2449
S'uuid'
p2450
asbag57
(g78
g59
NtRp2451
(dp2452
g62
(dp2453
g89
g90
ssg71
g2442
sg64
(lp2454
S':'
asbag57
(g78
g59
NtRp2455
(dp2456
g62
(dp2457
sg71
g2442
sg64
(lp2458
g57
(g58
g59
NtRp2459
(dp2460
g62
(dp2461
g70
I5
ssg71
g2455
sg64
(lp2462
S'DEV_bootstrap_ch/127.0.0.1.2013-02-20.22-14-06.0abd7a63-3f77-4537-b01c-b38994caf952'
p2463
asbasbasbag57
(g73
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g67
sg64
(lp2467
g57
(g78
g59
NtRp2468
(dp2469
g62
(dp2470
g82
g83
ssg71
g2464
sg64
(lp2471
S'vars'
p2472
asbag57
(g78
g59
NtRp2473
(dp2474
g62
(dp2475
g89
g90
ssg71
g2464
sg64
(lp2476
S':'
asbag57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
sg71
g2464
sg64
(lp2480
g57
(g58
g59
NtRp2481
(dp2482
g62
(dp2483
g70
I5
ssg71
g2477
sg64
(lp2484
g57
(g66
g59
NtRp2485
(dp2486
g62
(dp2487
g70
I4
ssg71
Nsg64
(lp2488
sbasbasbasbag57
(g73
g59
NtRp2489
(dp2490
g62
(dp2491
sg71
g67
sg64
(lp2492
g57
(g78
g59
NtRp2493
(dp2494
g62
(dp2495
g82
g83
ssg71
g2489
sg64
(lp2496
S'wsgi'
p2497
asbag57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g89
g90
ssg71
g2489
sg64
(lp2501
S':'
asbag57
(g78
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g2489
sg64
(lp2505
g57
(g58
g59
NtRp2506
(dp2507
g62
(dp2508
g70
I5
ssg71
g2502
sg64
(lp2509
g57
(g66
g59
NtRp2510
(dp2511
g62
(dp2512
g70
I4
ssg71
Nsg64
(lp2513
g57
(g73
g59
NtRp2514
(dp2515
g62
(dp2516
sg71
g2510
sg64
(lp2517
g57
(g78
g59
NtRp2518
(dp2519
g62
(dp2520
g82
g83
ssg71
g2514
sg64
(lp2521
S'environ'
p2522
asbag57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
g89
g90
ssg71
g2514
sg64
(lp2526
S':'
asbag57
(g78
g59
NtRp2527
(dp2528
g62
(dp2529
sg71
g2514
sg64
(lp2530
g57
(g58
g59
NtRp2531
(dp2532
g62
(dp2533
g70
I4
ssg71
g2527
sg64
(lp2534
g57
(g66
g59
NtRp2535
(dp2536
g62
(dp2537
g70
I3
ssg71
Nsg64
(lp2538
g57
(g73
g59
NtRp2539
(dp2540
g62
(dp2541
sg71
g2535
sg64
(lp2542
g57
(g78
g59
NtRp2543
(dp2544
g62
(dp2545
g82
g83
ssg71
g2539
sg64
(lp2546
S'HTTP_ACCEPT'
p2547
asbag57
(g78
g59
NtRp2548
(dp2549
g62
(dp2550
g89
g90
ssg71
g2539
sg64
(lp2551
S':'
asbag57
(g78
g59
NtRp2552
(dp2553
g62
(dp2554
sg71
g2539
sg64
(lp2555
g57
(g58
g59
NtRp2556
(dp2557
g62
(dp2558
g70
I3
ssg71
g2552
sg64
(lp2559
g893
asbasbasbag57
(g73
g59
NtRp2560
(dp2561
g62
(dp2562
sg71
g2535
sg64
(lp2563
g57
(g78
g59
NtRp2564
(dp2565
g62
(dp2566
g82
g83
ssg71
g2560
sg64
(lp2567
S'HTTP_ACCEPT_CHARSET'
p2568
asbag57
(g78
g59
NtRp2569
(dp2570
g62
(dp2571
g89
g90
ssg71
g2560
sg64
(lp2572
S':'
asbag57
(g78
g59
NtRp2573
(dp2574
g62
(dp2575
sg71
g2560
sg64
(lp2576
g57
(g58
g59
NtRp2577
(dp2578
g62
(dp2579
g70
I3
ssg71
g2573
sg64
(lp2580
g915
asbasbasbag57
(g73
g59
NtRp2581
(dp2582
g62
(dp2583
sg71
g2535
sg64
(lp2584
g57
(g78
g59
NtRp2585
(dp2586
g62
(dp2587
g82
g83
ssg71
g2581
sg64
(lp2588
S'HTTP_ACCEPT_ENCODING'
p2589
asbag57
(g78
g59
NtRp2590
(dp2591
g62
(dp2592
g89
g90
ssg71
g2581
sg64
(lp2593
S':'
asbag57
(g78
g59
NtRp2594
(dp2595
g62
(dp2596
sg71
g2581
sg64
(lp2597
g57
(g58
g59
NtRp2598
(dp2599
g62
(dp2600
g70
I3
ssg71
g2594
sg64
(lp2601
g937
asbasbasbag57
(g73
g59
NtRp2602
(dp2603
g62
(dp2604
sg71
g2535
sg64
(lp2605
g57
(g78
g59
NtRp2606
(dp2607
g62
(dp2608
g82
g83
ssg71
g2602
sg64
(lp2609
S'HTTP_ACCEPT_LANGUAGE'
p2610
asbag57
(g78
g59
NtRp2611
(dp2612
g62
(dp2613
g89
g90
ssg71
g2602
sg64
(lp2614
S':'
asbag57
(g78
g59
NtRp2615
(dp2616
g62
(dp2617
sg71
g2602
sg64
(lp2618
g57
(g58
g59
NtRp2619
(dp2620
g62
(dp2621
g70
I3
ssg71
g2615
sg64
(lp2622
g959
asbasbasbag57
(g73
g59
NtRp2623
(dp2624
g62
(dp2625
sg71
g2535
sg64
(lp2626
g57
(g78
g59
NtRp2627
(dp2628
g62
(dp2629
g82
g83
ssg71
g2623
sg64
(lp2630
S'HTTP_CACHE_CONTROL'
p2631
asbag57
(g78
g59
NtRp2632
(dp2633
g62
(dp2634
g89
g90
ssg71
g2623
sg64
(lp2635
S':'
asbag57
(g78
g59
NtRp2636
(dp2637
g62
(dp2638
sg71
g2623
sg64
(lp2639
g57
(g58
g59
NtRp2640
(dp2641
g62
(dp2642
g70
I3
ssg71
g2636
sg64
(lp2643
g981
asbasbasbag57
(g73
g59
NtRp2644
(dp2645
g62
(dp2646
sg71
g2535
sg64
(lp2647
g57
(g78
g59
NtRp2648
(dp2649
g62
(dp2650
g82
g83
ssg71
g2644
sg64
(lp2651
S'HTTP_CONNECTION'
p2652
asbag57
(g78
g59
NtRp2653
(dp2654
g62
(dp2655
g89
g90
ssg71
g2644
sg64
(lp2656
S':'
asbag57
(g78
g59
NtRp2657
(dp2658
g62
(dp2659
sg71
g2644
sg64
(lp2660
g57
(g58
g59
NtRp2661
(dp2662
g62
(dp2663
g70
I3
ssg71
g2657
sg64
(lp2664
g1003
asbasbasbag57
(g73
g59
NtRp2665
(dp2666
g62
(dp2667
sg71
g2535
sg64
(lp2668
g57
(g78
g59
NtRp2669
(dp2670
g62
(dp2671
g82
g83
ssg71
g2665
sg64
(lp2672
S'HTTP_COOKIE'
p2673
asbag57
(g78
g59
NtRp2674
(dp2675
g62
(dp2676
g89
g90
ssg71
g2665
sg64
(lp2677
S':'
asbag57
(g78
g59
NtRp2678
(dp2679
g62
(dp2680
sg71
g2665
sg64
(lp2681
g57
(g58
g59
NtRp2682
(dp2683
g62
(dp2684
g70
I3
ssg71
g2678
sg64
(lp2685
g1025
asbasbasbag57
(g73
g59
NtRp2686
(dp2687
g62
(dp2688
sg71
g2535
sg64
(lp2689
g57
(g78
g59
NtRp2690
(dp2691
g62
(dp2692
g82
g83
ssg71
g2686
sg64
(lp2693
S'HTTP_HOST'
p2694
asbag57
(g78
g59
NtRp2695
(dp2696
g62
(dp2697
g89
g90
ssg71
g2686
sg64
(lp2698
S':'
asbag57
(g78
g59
NtRp2699
(dp2700
g62
(dp2701
sg71
g2686
sg64
(lp2702
g57
(g58
g59
NtRp2703
(dp2704
g62
(dp2705
g70
I3
ssg71
g2699
sg64
(lp2706
g1047
asbasbasbag57
(g73
g59
NtRp2707
(dp2708
g62
(dp2709
sg71
g2535
sg64
(lp2710
g57
(g78
g59
NtRp2711
(dp2712
g62
(dp2713
g82
g83
ssg71
g2707
sg64
(lp2714
S'HTTP_REFERER'
p2715
asbag57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
g89
g90
ssg71
g2707
sg64
(lp2719
S':'
asbag57
(g78
g59
NtRp2720
(dp2721
g62
(dp2722
sg71
g2707
sg64
(lp2723
g57
(g58
g59
NtRp2724
(dp2725
g62
(dp2726
g70
I3
ssg71
g2720
sg64
(lp2727
g1069
asbasbasbag57
(g73
g59
NtRp2728
(dp2729
g62
(dp2730
sg71
g2535
sg64
(lp2731
g57
(g78
g59
NtRp2732
(dp2733
g62
(dp2734
g82
g83
ssg71
g2728
sg64
(lp2735
S'HTTP_USER_AGENT'
p2736
asbag57
(g78
g59
NtRp2737
(dp2738
g62
(dp2739
g89
g90
ssg71
g2728
sg64
(lp2740
S':'
asbag57
(g78
g59
NtRp2741
(dp2742
g62
(dp2743
sg71
g2728
sg64
(lp2744
g57
(g58
g59
NtRp2745
(dp2746
g62
(dp2747
g70
I3
ssg71
g2741
sg64
(lp2748
g1091
asbasbasbag57
(g73
g59
NtRp2749
(dp2750
g62
(dp2751
sg71
g2535
sg64
(lp2752
g57
(g78
g59
NtRp2753
(dp2754
g62
(dp2755
g82
g83
ssg71
g2749
sg64
(lp2756
S'PATH_INFO'
p2757
asbag57
(g78
g59
NtRp2758
(dp2759
g62
(dp2760
g89
g90
ssg71
g2749
sg64
(lp2761
S':'
asbag57
(g78
g59
NtRp2762
(dp2763
g62
(dp2764
sg71
g2749
sg64
(lp2765
g57
(g58
g59
NtRp2766
(dp2767
g62
(dp2768
g70
I3
ssg71
g2762
sg64
(lp2769
g1245
asbasbasbag57
(g73
g59
NtRp2770
(dp2771
g62
(dp2772
sg71
g2535
sg64
(lp2773
g57
(g78
g59
NtRp2774
(dp2775
g62
(dp2776
g82
g83
ssg71
g2770
sg64
(lp2777
S'QUERY_STRING'
p2778
asbag57
(g78
g59
NtRp2779
(dp2780
g62
(dp2781
g89
g90
ssg71
g2770
sg64
(lp2782
S':'
asbag57
(g78
g59
NtRp2783
(dp2784
g62
(dp2785
sg71
g2770
sg64
(lp2786
g57
(g58
g59
NtRp2787
(dp2788
g62
(dp2789
g70
I3
ssg71
g2783
sg64
(lp2790
g1267
asbasbasbag57
(g73
g59
NtRp2791
(dp2792
g62
(dp2793
sg71
g2535
sg64
(lp2794
g57
(g78
g59
NtRp2795
(dp2796
g62
(dp2797
g82
g83
ssg71
g2791
sg64
(lp2798
S'REMOTE_ADDR'
p2799
asbag57
(g78
g59
NtRp2800
(dp2801
g62
(dp2802
g89
g90
ssg71
g2791
sg64
(lp2803
S':'
asbag57
(g78
g59
NtRp2804
(dp2805
g62
(dp2806
sg71
g2791
sg64
(lp2807
g57
(g58
g59
NtRp2808
(dp2809
g62
(dp2810
g70
I3
ssg71
g2804
sg64
(lp2811
g263
asbasbasbag57
(g73
g59
NtRp2812
(dp2813
g62
(dp2814
sg71
g2535
sg64
(lp2815
g57
(g78
g59
NtRp2816
(dp2817
g62
(dp2818
g82
g83
ssg71
g2812
sg64
(lp2819
S'REMOTE_PORT'
p2820
asbag57
(g78
g59
NtRp2821
(dp2822
g62
(dp2823
g89
g90
ssg71
g2812
sg64
(lp2824
S':'
asbag57
(g78
g59
NtRp2825
(dp2826
g62
(dp2827
sg71
g2812
sg64
(lp2828
g57
(g58
g59
NtRp2829
(dp2830
g62
(dp2831
g70
I3
ssg71
g2825
sg64
(lp2832
g1310
asbasbasbag57
(g73
g59
NtRp2833
(dp2834
g62
(dp2835
sg71
g2535
sg64
(lp2836
g57
(g78
g59
NtRp2837
(dp2838
g62
(dp2839
g82
g83
ssg71
g2833
sg64
(lp2840
S'REQUEST_METHOD'
p2841
asbag57
(g78
g59
NtRp2842
(dp2843
g62
(dp2844
g89
g90
ssg71
g2833
sg64
(lp2845
S':'
asbag57
(g78
g59
NtRp2846
(dp2847
g62
(dp2848
sg71
g2833
sg64
(lp2849
g57
(g58
g59
NtRp2850
(dp2851
g62
(dp2852
g70
I3
ssg71
g2846
sg64
(lp2853
g1332
asbasbasbag57
(g73
g59
NtRp2854
(dp2855
g62
(dp2856
sg71
g2535
sg64
(lp2857
g57
(g78
g59
NtRp2858
(dp2859
g62
(dp2860
g82
g83
ssg71
g2854
sg64
(lp2861
S'REQUEST_URI'
p2862
asbag57
(g78
g59
NtRp2863
(dp2864
g62
(dp2865
g89
g90
ssg71
g2854
sg64
(lp2866
S':'
asbag57
(g78
g59
NtRp2867
(dp2868
g62
(dp2869
sg71
g2854
sg64
(lp2870
g57
(g58
g59
NtRp2871
(dp2872
g62
(dp2873
g70
I3
ssg71
g2867
sg64
(lp2874
g1354
asbasbasbag57
(g73
g59
NtRp2875
(dp2876
g62
(dp2877
sg71
g2535
sg64
(lp2878
g57
(g78
g59
NtRp2879
(dp2880
g62
(dp2881
g82
g83
ssg71
g2875
sg64
(lp2882
S'SCRIPT_NAME'
p2883
asbag57
(g78
g59
NtRp2884
(dp2885
g62
(dp2886
g89
g90
ssg71
g2875
sg64
(lp2887
S':'
asbag57
(g78
g59
NtRp2888
(dp2889
g62
(dp2890
sg71
g2875
sg64
(lp2891
g57
(g58
g59
NtRp2892
(dp2893
g62
(dp2894
g70
I3
ssg71
g2888
sg64
(lp2895
S''
asbasbasbag57
(g73
g59
NtRp2896
(dp2897
g62
(dp2898
sg71
g2535
sg64
(lp2899
g57
(g78
g59
NtRp2900
(dp2901
g62
(dp2902
g82
g83
ssg71
g2896
sg64
(lp2903
S'SERVER_NAME'
p2904
asbag57
(g78
g59
NtRp2905
(dp2906
g62
(dp2907
g89
g90
ssg71
g2896
sg64
(lp2908
S':'
asbag57
(g78
g59
NtRp2909
(dp2910
g62
(dp2911
sg71
g2896
sg64
(lp2912
g57
(g58
g59
NtRp2913
(dp2914
g62
(dp2915
g70
I3
ssg71
g2909
sg64
(lp2916
g1397
asbasbasbag57
(g73
g59
NtRp2917
(dp2918
g62
(dp2919
sg71
g2535
sg64
(lp2920
g57
(g78
g59
NtRp2921
(dp2922
g62
(dp2923
g82
g83
ssg71
g2917
sg64
(lp2924
S'SERVER_PORT'
p2925
asbag57
(g78
g59
NtRp2926
(dp2927
g62
(dp2928
g89
g90
ssg71
g2917
sg64
(lp2929
S':'
asbag57
(g78
g59
NtRp2930
(dp2931
g62
(dp2932
sg71
g2917
sg64
(lp2933
g57
(g58
g59
NtRp2934
(dp2935
g62
(dp2936
g70
I3
ssg71
g2930
sg64
(lp2937
g1419
asbasbasbag57
(g73
g59
NtRp2938
(dp2939
g62
(dp2940
sg71
g2535
sg64
(lp2941
g57
(g78
g59
NtRp2942
(dp2943
g62
(dp2944
g82
g83
ssg71
g2938
sg64
(lp2945
S'SERVER_PROTOCOL'
p2946
asbag57
(g78
g59
NtRp2947
(dp2948
g62
(dp2949
g89
g90
ssg71
g2938
sg64
(lp2950
S':'
asbag57
(g78
g59
NtRp2951
(dp2952
g62
(dp2953
sg71
g2938
sg64
(lp2954
g57
(g58
g59
NtRp2955
(dp2956
g62
(dp2957
g70
I3
ssg71
g2951
sg64
(lp2958
g1441
asbasbasbag57
(g73
g59
NtRp2959
(dp2960
g62
(dp2961
sg71
g2535
sg64
(lp2962
g57
(g78
g59
NtRp2963
(dp2964
g62
(dp2965
g82
g83
ssg71
g2959
sg64
(lp2966
S'SERVER_SOFTWARE'
p2967
asbag57
(g78
g59
NtRp2968
(dp2969
g62
(dp2970
g89
g90
ssg71
g2959
sg64
(lp2971
S':'
asbag57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
sg71
g2959
sg64
(lp2975
g57
(g58
g59
NtRp2976
(dp2977
g62
(dp2978
g70
I3
ssg71
g2972
sg64
(lp2979
g1463
asbasbasbag57
(g73
g59
NtRp2980
(dp2981
g62
(dp2982
sg71
g2535
sg64
(lp2983
g57
(g78
g59
NtRp2984
(dp2985
g62
(dp2986
g82
g83
ssg71
g2980
sg64
(lp2987
S'wsgi.errors'
p2988
asbag57
(g78
g59
NtRp2989
(dp2990
g62
(dp2991
g89
g90
ssg71
g2980
sg64
(lp2992
S':'
asbag57
(g78
g59
NtRp2993
(dp2994
g62
(dp2995
sg71
g2980
sg64
(lp2996
g57
(g58
g59
NtRp2997
(dp2998
g62
(dp2999
g70
I3
ssg71
g2993
sg64
(lp3000
S"<open file '<stderr>', mode 'w' at 0xb72a30d0>"
p3001
asbasbasbag57
(g73
g59
NtRp3002
(dp3003
g62
(dp3004
sg71
g2535
sg64
(lp3005
g57
(g78
g59
NtRp3006
(dp3007
g62
(dp3008
g82
g83
ssg71
g3002
sg64
(lp3009
S'wsgi.file_wrapper'
p3010
asbag57
(g78
g59
NtRp3011
(dp3012
g62
(dp3013
g89
g90
ssg71
g3002
sg64
(lp3014
S':'
asbag57
(g78
g59
NtRp3015
(dp3016
g62
(dp3017
sg71
g3002
sg64
(lp3018
g57
(g58
g59
NtRp3019
(dp3020
g62
(dp3021
g70
I3
ssg71
g3015
sg64
(lp3022
S'<class wsgiref.util.FileWrapper at 0xa405a4c>'
p3023
asbasbasbag57
(g73
g59
NtRp3024
(dp3025
g62
(dp3026
sg71
g2535
sg64
(lp3027
g57
(g78
g59
NtRp3028
(dp3029
g62
(dp3030
g82
g83
ssg71
g3024
sg64
(lp3031
S'wsgi.input'
p3032
asbag57
(g78
g59
NtRp3033
(dp3034
g62
(dp3035
g89
g90
ssg71
g3024
sg64
(lp3036
S':'
asbag57
(g78
g59
NtRp3037
(dp3038
g62
(dp3039
sg71
g3024
sg64
(lp3040
g57
(g58
g59
NtRp3041
(dp3042
g62
(dp3043
g70
I3
ssg71
g3037
sg64
(lp3044
S'<cStringIO.StringO object at 0xa78df20>'
p3045
asbasbasbag57
(g73
g59
NtRp3046
(dp3047
g62
(dp3048
sg71
g2535
sg64
(lp3049
g57
(g78
g59
NtRp3050
(dp3051
g62
(dp3052
g82
g83
ssg71
g3046
sg64
(lp3053
S'wsgi.multiprocess'
p3054
asbag57
(g78
g59
NtRp3055
(dp3056
g62
(dp3057
g89
g90
ssg71
g3046
sg64
(lp3058
S':'
asbag57
(g78
g59
NtRp3059
(dp3060
g62
(dp3061
sg71
g3046
sg64
(lp3062
g57
(g58
g59
NtRp3063
(dp3064
g62
(dp3065
g70
I3
ssg71
g3059
sg64
(lp3066
g100
asbasbasbag57
(g73
g59
NtRp3067
(dp3068
g62
(dp3069
sg71
g2535
sg64
(lp3070
g57
(g78
g59
NtRp3071
(dp3072
g62
(dp3073
g82
g83
ssg71
g3067
sg64
(lp3074
S'wsgi.multithread'
p3075
asbag57
(g78
g59
NtRp3076
(dp3077
g62
(dp3078
g89
g90
ssg71
g3067
sg64
(lp3079
S':'
asbag57
(g78
g59
NtRp3080
(dp3081
g62
(dp3082
sg71
g3067
sg64
(lp3083
g57
(g58
g59
NtRp3084
(dp3085
g62
(dp3086
g70
I3
ssg71
g3080
sg64
(lp3087
g1680
asbasbasbag57
(g73
g59
NtRp3088
(dp3089
g62
(dp3090
sg71
g2535
sg64
(lp3091
g57
(g78
g59
NtRp3092
(dp3093
g62
(dp3094
g82
g83
ssg71
g3088
sg64
(lp3095
S'wsgi.run_once'
p3096
asbag57
(g78
g59
NtRp3097
(dp3098
g62
(dp3099
g89
g90
ssg71
g3088
sg64
(lp3100
S':'
asbag57
(g78
g59
NtRp3101
(dp3102
g62
(dp3103
sg71
g3088
sg64
(lp3104
g57
(g58
g59
NtRp3105
(dp3106
g62
(dp3107
g70
I3
ssg71
g3101
sg64
(lp3108
g100
asbasbasbag57
(g73
g59
NtRp3109
(dp3110
g62
(dp3111
sg71
g2535
sg64
(lp3112
g57
(g78
g59
NtRp3113
(dp3114
g62
(dp3115
g82
g83
ssg71
g3109
sg64
(lp3116
S'wsgi.url_scheme'
p3117
asbag57
(g78
g59
NtRp3118
(dp3119
g62
(dp3120
g89
g90
ssg71
g3109
sg64
(lp3121
S':'
asbag57
(g78
g59
NtRp3122
(dp3123
g62
(dp3124
sg71
g3109
sg64
(lp3125
g57
(g58
g59
NtRp3126
(dp3127
g62
(dp3128
g70
I3
ssg71
g3122
sg64
(lp3129
g1723
asbasbasbag57
(g73
g59
NtRp3130
(dp3131
g62
(dp3132
sg71
g2535
sg64
(lp3133
g57
(g78
g59
NtRp3134
(dp3135
g62
(dp3136
g82
g83
ssg71
g3130
sg64
(lp3137
S'wsgi.version'
p3138
asbag57
(g78
g59
NtRp3139
(dp3140
g62
(dp3141
g89
g90
ssg71
g3130
sg64
(lp3142
S':'
asbag57
(g78
g59
NtRp3143
(dp3144
g62
(dp3145
sg71
g3130
sg64
(lp3146
g57
(g58
g59
NtRp3147
(dp3148
g62
(dp3149
g70
I3
ssg71
g3143
sg64
(lp3150
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3151
(lp3152
(dp3153
S'file'
p3154
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3155
sS'dump'
p3156
(dp3157
S'environment'
p3158
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3159
sS'ccode'
p3160
S'<code object <module> at 0xa5a94a0, file "/home/...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3161
ssS'lnum'
p3162
I212
sS'lines'
p3163
(dp3164
I207
S'    try:'
p3165
sI208
S'        if isinstance(code, types.CodeType):'
p3166
sI209
S'            ccode = code'
p3167
sI210
S'        else:'
p3168
sI211
S'            ccode = compile2(code, layer)'
p3169
sI212
S'        exec ccode in environment'
p3170
sI213
S'    except HTTP:'
p3171
sI214
S'        raise'
p3172
sI215
S'    except RestrictedError:'
p3173
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3174
ssS'call'
p3175
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3176
sS'func'
p3177
S'restricted'
p3178
sa(dp3179
g3154
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3180
sg3156
(dp3181
sg3162
I1106
sg3163
(dp3182
I1095
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3183
sI1096
S'   """ per sample . takes id of the sample as the input """'
p3184
sI1097
S'   sid = request.args(0)'
p3185
sI1098
S'   sample = db(db.sample.id == sid).select().first()'
p3186
sI1099
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3187
sI1100
S'   form = SQLFORM(db.sample_files)'
p3188
sI1101
S'   form.vars.sample = sid'
p3189
sI1102
S'   return locals()'
p3190
sI1103
S''
sI1104
S''
ssg3175
S'()'
p3191
sg3177
S'<module>'
p3192
sa(dp3193
g3154
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3194
sg3156
(dp3195
S'self'
p3196
S'undefined'
p3197
sS'f'
S'<function list_all_dev_projects>'
p3198
ssg3162
I193
sg3163
(dp3199
I192
S'        self._vars = None'
p3200
sI193
S'        self._caller = lambda f: f()'
p3201
sI194
S'        self._view_environment = None'
p3202
sI195
S'        self._custom_commit = None'
p3203
sI196
S'        self._custom_rollback = None'
p3204
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3205
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3206
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3207
sI191
S"        self.delimiters = ('{{', '}}')"
p3208
ssg3175
S'(f=<function list_all_dev_projects>)'
p3209
sg3177
S'<lambda>'
p3210
sa(dp3211
g3154
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3212
sg3156
(dp3213
S'global grid'
p3214
S'<function grid>'
p3215
sS'ck'
p3216
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p3217
sS'links'
p3218
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]}"
p3219
sS'db.project'
p3220
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p3221
sS'global SQLFORM'
p3222
S"<class 'gluon.sqlhtml.SQLFORM'>"
p3223
sS'create'
p3224
g3197
sS'editable'
p3225
g3197
sS'linked_tables'
p3226
g3197
sS'deletable'
p3227
g3197
sS'fields'
p3228
g3197
sS'global db'
p3229
S'<DAL uri="sqlite://storage.sqlite">'
p3230
sS'fi'
p3231
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p3232
sS'SQLFORM.smartgrid'
p3233
S'<function smartgrid>'
p3234
sS'create_dict'
p3235
S"{'project': False, 'sample': True}"
p3236
sS'edit_dict'
p3237
S"{'project': False}"
p3238
sS'delete_dict'
p3239
S"{'project': False}"
p3240
ssg3162
I317
sg3163
(dp3241
I320
S'#gets table name and rowid as input and creates another row with same details as rowid recod has'
p3242
sI321
S'def tes(a):'
p3243
sI312
S'    l1=[lambda row: A(\'copy\'+str(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3244
sI313
S"    links={'sample':l1}"
p3245
sI314
S'#customized Views for certain forms using router'
p3246
sI315
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3247
sI316
S'     \trouter(request.args)'
p3248
sI317
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'])"
p3249
sI318
S'    return locals()'
p3250
sI319
S''
ssg3175
S'()'
p3251
sg3177
S'list_all_dev_projects'
p3252
sa(dp3253
g3154
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3254
sg3156
(dp3255
S'user_signature'
p3256
g1680
sS'kwargs'
p3257
S"{'create': False, 'deletable': False, 'editable': False, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]}"
p3258
ssg3162
I2489
sg3163
(dp3259
I2484
S'                        A(SPAN(t), _class=trap_class(), _href=url('
p3260
sI2485
S'                          args=[args0, row[id_field_name]])))'
p3261
sI2486
S''
sI2487
S'        grid = SQLFORM.grid(query, args=request.args[:nargs], links=links,'
p3262
sI2488
S'                            links_in_grid=links_in_grid,'
p3263
sI2489
S'                            user_signature=user_signature, **kwargs)'
p3264
sI2490
S'        if isinstance(grid, DIV):'
p3265
sI2491
S"            header = table._plural + (field and ' for ' + field.name or '')"
p3266
sI2492
S'            breadcrumbs.append(LI(A(T(header), _class=trap_class(),'
p3267
sI2493
S"                                    _href=url()), _class='active w2p_grid_breadcrumb_elem'))"
p3268
ssg3175
S"(table=<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>, constraints={'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}, linked_tables=['experiment', 'sample', 'biosource', 'plant_growth_condition', 'treatments', 'harvests', 'extraction_preparation', 'gas_chromatography', 'liquid_chromatography', 'mass_spectroscopy', 'spectrophotometry', 'raw_data_storage_information'], links=[<function <lambda>>], links_in_grid=True, args=[], user_signature=True, divider='>', breadcrumbs_class='', **kwargs={'create': False, 'deletable': False, 'editable': False, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]})"
p3269
sg3177
S'smartgrid'
p3270
sa(dp3271
g3154
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3272
sg3156
(dp3273
S'formfooter'
p3274
S'<gluon.html.DIV object>'
p3275
sS'edit'
p3276
g3197
sS'res'
p3277
g3197
sS'editable'
p3278
g100
sS'buttons'
p3279
S'<function buttons>'
p3280
sS'record'
p3281
S"<Row {'code': 't21', 'name': 'test', 'project_jo...ordinator': 1, 'project_publication_date': None}>"
p3282
sS'global DIV'
p3283
S"<class 'gluon.html.DIV'>"
p3284
sS'_class'
p3285
S"'web2py_grid'"
p3286
sS'view_form'
p3287
S'<gluon.sqlhtml.SQLFORM object>'
p3288
ssg3162
I1897
sg3163
(dp3289
I1892
S'            sqlformargs.update(viewargs)'
p3290
sI1893
S'            view_form = SQLFORM('
p3291
sI1894
S'                table, record, upload=upload, ignore_rw=ignore_rw,'
p3292
sI1895
S"                formstyle=formstyle, readonly=True, _class='web2py_form',"
p3293
sI1896
S'                **sqlformargs)'
p3294
sI1897
S'            res = DIV(buttons(edit=editable, record=record), view_form,'
p3295
sI1898
S'                      formfooter, _class=_class)'
p3296
sI1899
S'            res.create_form = create_form'
p3297
sI1900
S'            res.update_form = update_form'
p3298
sI1901
S'            res.view_form = view_form'
p3299
ssg3175
S"(query=<Query ((project.id > 0) AND (project.project_status = '0'))>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], field_id=<gluon.dal.Field object>, left=None, headers={}, orderby=None, groupby=None, searchable=True, sortable=True, paginate=20, deletable=False, editable=False, details=True, selectable=None, create=False, csv=True, links=[<function <lambda>>], links_in_grid=True, upload=<function <lambda>>, args=['project'], user_signature=True, maxtextlengths={}, maxtextlength=20, onvalidation=None, oncreate=None, onupdate=None, ondelete=None, sorter_icons=(<gluon.html.XML object>, <gluon.html.XML object>), ui={'button': 'ui-button-text-icon-primary', 'buttonadd': 'ui-icon ui-icon-plusthick', 'buttonback': 'ui-icon ui-icon-arrowreturnthick-1-w', 'buttondelete': 'ui-icon ui-icon-trash', 'buttonedit': 'ui-icon ui-icon-pencil', 'buttonexport': 'ui-icon ui-icon-transferthick-e-w', 'buttontable': 'ui-icon ui-icon-triangle-1-e', 'buttontext': 'ui-button-text', 'buttonview': 'ui-icon ui-icon-zoomin', 'content': 'ui-widget-content', ...}, showbuttontext=True, _class='web2py_grid', formname='web2py_grid', search_widget='default', ignore_rw=False, formstyle='table3cols', exportclasses=None, formargs={}, createargs={}, editargs={}, viewargs={}, buttons_placement='right', links_placement='right')"
p3300
sg3177
S'grid'
p3301
sa(dp3302
g3154
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3303
sg3156
(dp3304
S'buttons'
p3305
S'<gluon.html.DIV object>'
p3306
sS'buttons.append'
p3307
S'<bound method DIV.append of <gluon.html.DIV object>>'
p3308
sS'link'
p3309
S'<function <lambda>>'
p3310
sS'record'
p3311
S"<Row {'code': 't21', 'name': 'test', 'project_jo...ordinator': 1, 'project_publication_date': None}>"
p3312
ssg3162
I1854
sg3163
(dp3313
I1856
S''
sI1857
S'        def linsert(lst, i, x):'
p3314
sI1858
S'            """'
p3315
sI1849
S'            if record and links:'
p3316
sI1850
S'                for link in links:'
p3317
sI1851
S'                    if isinstance(link, dict):'
p3318
sI1852
S"                        buttons.append(link['body'](record))"
p3319
sI1853
S'                    elif link(record):'
p3320
sI1854
S'                        buttons.append(link(record))'
p3321
sI1855
S'            return buttons'
p3322
ssg3175
S"(edit=False, view=False, record=<Row {'code': 't21', 'name': 'test', 'project_jo...ordinator': 1, 'project_publication_date': None}>)"
p3323
sg3177
S'buttons'
p3324
sasS'pyver'
p3325
S'Python 2.7.3: /usr/bin/python'
p3326
sS'session'
p3327
g57
(g58
g59
NtRp3328
(dp3329
g62
(dp3330
sg64
(lp3331
g57
(g66
g59
NtRp3332
(dp3333
g62
(dp3334
g70
I5
ssg71
Nsg64
(lp3335
g57
(g73
g59
NtRp3336
(dp3337
g62
(dp3338
sg71
g3332
sg64
(lp3339
g57
(g78
g59
NtRp3340
(dp3341
g62
(dp3342
g82
g83
ssg71
g3336
sg64
(lp3343
S'auth'
p3344
asbag57
(g78
g59
NtRp3345
(dp3346
g62
(dp3347
g89
g90
ssg71
g3336
sg64
(lp3348
S':'
asbag57
(g78
g59
NtRp3349
(dp3350
g62
(dp3351
sg71
g3336
sg64
(lp3352
g57
(g58
g59
NtRp3353
(dp3354
g62
(dp3355
g70
I5
ssg71
g3349
sg64
(lp3356
g57
(g66
g59
NtRp3357
(dp3358
g62
(dp3359
g70
I4
ssg71
Nsg64
(lp3360
g57
(g73
g59
NtRp3361
(dp3362
g62
(dp3363
sg71
g3357
sg64
(lp3364
g57
(g78
g59
NtRp3365
(dp3366
g62
(dp3367
g82
g83
ssg71
g3361
sg64
(lp3368
S'expiration'
p3369
asbag57
(g78
g59
NtRp3370
(dp3371
g62
(dp3372
g89
g90
ssg71
g3361
sg64
(lp3373
S':'
asbag57
(g78
g59
NtRp3374
(dp3375
g62
(dp3376
sg71
g3361
sg64
(lp3377
g57
(g58
g59
NtRp3378
(dp3379
g62
(dp3380
g70
I4
ssg71
g3374
sg64
(lp3381
S'2592000'
p3382
asbasbasbag57
(g73
g59
NtRp3383
(dp3384
g62
(dp3385
sg71
g3357
sg64
(lp3386
g57
(g78
g59
NtRp3387
(dp3388
g62
(dp3389
g82
g83
ssg71
g3383
sg64
(lp3390
S'hmac_key'
p3391
asbag57
(g78
g59
NtRp3392
(dp3393
g62
(dp3394
g89
g90
ssg71
g3383
sg64
(lp3395
S':'
asbag57
(g78
g59
NtRp3396
(dp3397
g62
(dp3398
sg71
g3383
sg64
(lp3399
g57
(g58
g59
NtRp3400
(dp3401
g62
(dp3402
g70
I4
ssg71
g3396
sg64
(lp3403
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3404
asbasbasbag57
(g73
g59
NtRp3405
(dp3406
g62
(dp3407
sg71
g3357
sg64
(lp3408
g57
(g78
g59
NtRp3409
(dp3410
g62
(dp3411
g82
g83
ssg71
g3405
sg64
(lp3412
S'last_visit'
p3413
asbag57
(g78
g59
NtRp3414
(dp3415
g62
(dp3416
g89
g90
ssg71
g3405
sg64
(lp3417
S':'
asbag57
(g78
g59
NtRp3418
(dp3419
g62
(dp3420
sg71
g3405
sg64
(lp3421
g57
(g58
g59
NtRp3422
(dp3423
g62
(dp3424
g70
I4
ssg71
g3418
sg64
(lp3425
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3426
asbasbasbag57
(g73
g59
NtRp3427
(dp3428
g62
(dp3429
sg71
g3357
sg64
(lp3430
g57
(g78
g59
NtRp3431
(dp3432
g62
(dp3433
g82
g83
ssg71
g3427
sg64
(lp3434
S'remember'
p3435
asbag57
(g78
g59
NtRp3436
(dp3437
g62
(dp3438
g89
g90
ssg71
g3427
sg64
(lp3439
S':'
asbag57
(g78
g59
NtRp3440
(dp3441
g62
(dp3442
sg71
g3427
sg64
(lp3443
g57
(g58
g59
NtRp3444
(dp3445
g62
(dp3446
g70
I4
ssg71
g3440
sg64
(lp3447
g1680
asbasbasbag57
(g73
g59
NtRp3448
(dp3449
g62
(dp3450
sg71
g3357
sg64
(lp3451
g57
(g78
g59
NtRp3452
(dp3453
g62
(dp3454
g82
g83
ssg71
g3448
sg64
(lp3455
S'user'
p3456
asbag57
(g78
g59
NtRp3457
(dp3458
g62
(dp3459
g89
g90
ssg71
g3448
sg64
(lp3460
S':'
asbag57
(g78
g59
NtRp3461
(dp3462
g62
(dp3463
sg71
g3448
sg64
(lp3464
g57
(g58
g59
NtRp3465
(dp3466
g62
(dp3467
g70
I4
ssg71
g3461
sg64
(lp3468
g57
(g66
g59
NtRp3469
(dp3470
g62
(dp3471
g70
I3
ssg71
Nsg64
(lp3472
g57
(g73
g59
NtRp3473
(dp3474
g62
(dp3475
sg71
g3469
sg64
(lp3476
g57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g82
g83
ssg71
g3473
sg64
(lp3480
S'address'
p3481
asbag57
(g78
g59
NtRp3482
(dp3483
g62
(dp3484
g89
g90
ssg71
g3473
sg64
(lp3485
S':'
asbag57
(g78
g59
NtRp3486
(dp3487
g62
(dp3488
sg71
g3473
sg64
(lp3489
g57
(g58
g59
NtRp3490
(dp3491
g62
(dp3492
g70
I3
ssg71
g3486
sg64
(lp3493
S'a'
asbasbasbag57
(g73
g59
NtRp3494
(dp3495
g62
(dp3496
sg71
g3469
sg64
(lp3497
g57
(g78
g59
NtRp3498
(dp3499
g62
(dp3500
g82
g83
ssg71
g3494
sg64
(lp3501
S'affiliated_to'
p3502
asbag57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
g89
g90
ssg71
g3494
sg64
(lp3506
S':'
asbag57
(g78
g59
NtRp3507
(dp3508
g62
(dp3509
sg71
g3494
sg64
(lp3510
g57
(g58
g59
NtRp3511
(dp3512
g62
(dp3513
g70
I3
ssg71
g3507
sg64
(lp3514
S'a'
asbasbasbag57
(g73
g59
NtRp3515
(dp3516
g62
(dp3517
sg71
g3469
sg64
(lp3518
g57
(g78
g59
NtRp3519
(dp3520
g62
(dp3521
g82
g83
ssg71
g3515
sg64
(lp3522
S'city'
p3523
asbag57
(g78
g59
NtRp3524
(dp3525
g62
(dp3526
g89
g90
ssg71
g3515
sg64
(lp3527
S':'
asbag57
(g78
g59
NtRp3528
(dp3529
g62
(dp3530
sg71
g3515
sg64
(lp3531
g57
(g58
g59
NtRp3532
(dp3533
g62
(dp3534
g70
I3
ssg71
g3528
sg64
(lp3535
S'a'
asbasbasbag57
(g73
g59
NtRp3536
(dp3537
g62
(dp3538
sg71
g3469
sg64
(lp3539
g57
(g78
g59
NtRp3540
(dp3541
g62
(dp3542
g82
g83
ssg71
g3536
sg64
(lp3543
S'country'
p3544
asbag57
(g78
g59
NtRp3545
(dp3546
g62
(dp3547
g89
g90
ssg71
g3536
sg64
(lp3548
S':'
asbag57
(g78
g59
NtRp3549
(dp3550
g62
(dp3551
sg71
g3536
sg64
(lp3552
g57
(g58
g59
NtRp3553
(dp3554
g62
(dp3555
g70
I3
ssg71
g3549
sg64
(lp3556
S'India'
p3557
asbasbasbag57
(g73
g59
NtRp3558
(dp3559
g62
(dp3560
sg71
g3469
sg64
(lp3561
g57
(g78
g59
NtRp3562
(dp3563
g62
(dp3564
g82
g83
ssg71
g3558
sg64
(lp3565
S'email'
p3566
asbag57
(g78
g59
NtRp3567
(dp3568
g62
(dp3569
g89
g90
ssg71
g3558
sg64
(lp3570
S':'
asbag57
(g78
g59
NtRp3571
(dp3572
g62
(dp3573
sg71
g3558
sg64
(lp3574
g57
(g58
g59
NtRp3575
(dp3576
g62
(dp3577
g70
I3
ssg71
g3571
sg64
(lp3578
S'anil.iiith@gmail.com'
p3579
asbasbasbag57
(g73
g59
NtRp3580
(dp3581
g62
(dp3582
sg71
g3469
sg64
(lp3583
g57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
g82
g83
ssg71
g3580
sg64
(lp3587
S'first_name'
p3588
asbag57
(g78
g59
NtRp3589
(dp3590
g62
(dp3591
g89
g90
ssg71
g3580
sg64
(lp3592
S':'
asbag57
(g78
g59
NtRp3593
(dp3594
g62
(dp3595
sg71
g3580
sg64
(lp3596
g57
(g58
g59
NtRp3597
(dp3598
g62
(dp3599
g70
I3
ssg71
g3593
sg64
(lp3600
S'anil'
p3601
asbasbasbag57
(g73
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3469
sg64
(lp3605
g57
(g78
g59
NtRp3606
(dp3607
g62
(dp3608
g82
g83
ssg71
g3602
sg64
(lp3609
S'id'
p3610
asbag57
(g78
g59
NtRp3611
(dp3612
g62
(dp3613
g89
g90
ssg71
g3602
sg64
(lp3614
S':'
asbag57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3602
sg64
(lp3618
g57
(g58
g59
NtRp3619
(dp3620
g62
(dp3621
g70
I3
ssg71
g3615
sg64
(lp3622
S'2'
asbasbasbag57
(g73
g59
NtRp3623
(dp3624
g62
(dp3625
sg71
g3469
sg64
(lp3626
g57
(g78
g59
NtRp3627
(dp3628
g62
(dp3629
g82
g83
ssg71
g3623
sg64
(lp3630
S'last_name'
p3631
asbag57
(g78
g59
NtRp3632
(dp3633
g62
(dp3634
g89
g90
ssg71
g3623
sg64
(lp3635
S':'
asbag57
(g78
g59
NtRp3636
(dp3637
g62
(dp3638
sg71
g3623
sg64
(lp3639
g57
(g58
g59
NtRp3640
(dp3641
g62
(dp3642
g70
I3
ssg71
g3636
sg64
(lp3643
S'n'
asbasbasbag57
(g73
g59
NtRp3644
(dp3645
g62
(dp3646
sg71
g3469
sg64
(lp3647
g57
(g78
g59
NtRp3648
(dp3649
g62
(dp3650
g82
g83
ssg71
g3644
sg64
(lp3651
S'mobile'
p3652
asbag57
(g78
g59
NtRp3653
(dp3654
g62
(dp3655
g89
g90
ssg71
g3644
sg64
(lp3656
S':'
asbag57
(g78
g59
NtRp3657
(dp3658
g62
(dp3659
sg71
g3644
sg64
(lp3660
g57
(g58
g59
NtRp3661
(dp3662
g62
(dp3663
g70
I3
ssg71
g3657
sg64
(lp3664
S'1233'
p3665
asbasbasbag57
(g73
g59
NtRp3666
(dp3667
g62
(dp3668
sg71
g3469
sg64
(lp3669
g57
(g78
g59
NtRp3670
(dp3671
g62
(dp3672
g82
g83
ssg71
g3666
sg64
(lp3673
S'phone'
p3674
asbag57
(g78
g59
NtRp3675
(dp3676
g62
(dp3677
g89
g90
ssg71
g3666
sg64
(lp3678
S':'
asbag57
(g78
g59
NtRp3679
(dp3680
g62
(dp3681
sg71
g3666
sg64
(lp3682
g57
(g58
g59
NtRp3683
(dp3684
g62
(dp3685
g70
I3
ssg71
g3679
sg64
(lp3686
S'123'
p3687
asbasbasbag57
(g73
g59
NtRp3688
(dp3689
g62
(dp3690
sg71
g3469
sg64
(lp3691
g57
(g78
g59
NtRp3692
(dp3693
g62
(dp3694
g82
g83
ssg71
g3688
sg64
(lp3695
S'position'
p3696
asbag57
(g78
g59
NtRp3697
(dp3698
g62
(dp3699
g89
g90
ssg71
g3688
sg64
(lp3700
S':'
asbag57
(g78
g59
NtRp3701
(dp3702
g62
(dp3703
sg71
g3688
sg64
(lp3704
g57
(g58
g59
NtRp3705
(dp3706
g62
(dp3707
g70
I3
ssg71
g3701
sg64
(lp3708
S'0'
asbasbasbag57
(g73
g59
NtRp3709
(dp3710
g62
(dp3711
sg71
g3469
sg64
(lp3712
g57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
g82
g83
ssg71
g3709
sg64
(lp3716
S'postal_code'
p3717
asbag57
(g78
g59
NtRp3718
(dp3719
g62
(dp3720
g89
g90
ssg71
g3709
sg64
(lp3721
S':'
asbag57
(g78
g59
NtRp3722
(dp3723
g62
(dp3724
sg71
g3709
sg64
(lp3725
g57
(g58
g59
NtRp3726
(dp3727
g62
(dp3728
g70
I3
ssg71
g3722
sg64
(lp3729
S'123'
p3730
asbasbasbag57
(g73
g59
NtRp3731
(dp3732
g62
(dp3733
sg71
g3469
sg64
(lp3734
g57
(g78
g59
NtRp3735
(dp3736
g62
(dp3737
g82
g83
ssg71
g3731
sg64
(lp3738
S'registration_at'
p3739
asbag57
(g78
g59
NtRp3740
(dp3741
g62
(dp3742
g89
g90
ssg71
g3731
sg64
(lp3743
S':'
asbag57
(g78
g59
NtRp3744
(dp3745
g62
(dp3746
sg71
g3731
sg64
(lp3747
g57
(g58
g59
NtRp3748
(dp3749
g62
(dp3750
g70
I3
ssg71
g3744
sg64
(lp3751
S'0'
asbasbasbag57
(g73
g59
NtRp3752
(dp3753
g62
(dp3754
sg71
g3469
sg64
(lp3755
g57
(g78
g59
NtRp3756
(dp3757
g62
(dp3758
g82
g83
ssg71
g3752
sg64
(lp3759
S'registration_id'
p3760
asbag57
(g78
g59
NtRp3761
(dp3762
g62
(dp3763
g89
g90
ssg71
g3752
sg64
(lp3764
S':'
asbag57
(g78
g59
NtRp3765
(dp3766
g62
(dp3767
sg71
g3752
sg64
(lp3768
g57
(g58
g59
NtRp3769
(dp3770
g62
(dp3771
g70
I3
ssg71
g3765
sg64
(lp3772
S''
asbasbasbag57
(g73
g59
NtRp3773
(dp3774
g62
(dp3775
sg71
g3469
sg64
(lp3776
g57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
g82
g83
ssg71
g3773
sg64
(lp3780
S'registration_key'
p3781
asbag57
(g78
g59
NtRp3782
(dp3783
g62
(dp3784
g89
g90
ssg71
g3773
sg64
(lp3785
S':'
asbag57
(g78
g59
NtRp3786
(dp3787
g62
(dp3788
sg71
g3773
sg64
(lp3789
g57
(g58
g59
NtRp3790
(dp3791
g62
(dp3792
g70
I3
ssg71
g3786
sg64
(lp3793
S''
asbasbasbag57
(g73
g59
NtRp3794
(dp3795
g62
(dp3796
sg71
g3469
sg64
(lp3797
g57
(g78
g59
NtRp3798
(dp3799
g62
(dp3800
g82
g83
ssg71
g3794
sg64
(lp3801
S'reset_password_key'
p3802
asbag57
(g78
g59
NtRp3803
(dp3804
g62
(dp3805
g89
g90
ssg71
g3794
sg64
(lp3806
S':'
asbag57
(g78
g59
NtRp3807
(dp3808
g62
(dp3809
sg71
g3794
sg64
(lp3810
g57
(g58
g59
NtRp3811
(dp3812
g62
(dp3813
g70
I3
ssg71
g3807
sg64
(lp3814
S''
asbasbasbag57
(g73
g59
NtRp3815
(dp3816
g62
(dp3817
sg71
g3469
sg64
(lp3818
g57
(g78
g59
NtRp3819
(dp3820
g62
(dp3821
g82
g83
ssg71
g3815
sg64
(lp3822
S'title'
p3823
asbag57
(g78
g59
NtRp3824
(dp3825
g62
(dp3826
g89
g90
ssg71
g3815
sg64
(lp3827
S':'
asbag57
(g78
g59
NtRp3828
(dp3829
g62
(dp3830
sg71
g3815
sg64
(lp3831
g57
(g58
g59
NtRp3832
(dp3833
g62
(dp3834
g70
I3
ssg71
g3828
sg64
(lp3835
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3836
(dp3837
g62
(dp3838
sg71
g3357
sg64
(lp3839
g57
(g78
g59
NtRp3840
(dp3841
g62
(dp3842
g82
g83
ssg71
g3836
sg64
(lp3843
S'user_groups'
p3844
asbag57
(g78
g59
NtRp3845
(dp3846
g62
(dp3847
g89
g90
ssg71
g3836
sg64
(lp3848
S':'
asbag57
(g78
g59
NtRp3849
(dp3850
g62
(dp3851
sg71
g3836
sg64
(lp3852
g57
(g58
g59
NtRp3853
(dp3854
g62
(dp3855
g70
I4
ssg71
g3849
sg64
(lp3856
g57
(g66
g59
NtRp3857
(dp3858
g62
(dp3859
g70
I3
ssg71
Nsg64
(lp3860
g57
(g73
g59
NtRp3861
(dp3862
g62
(dp3863
sg71
g3857
sg64
(lp3864
g57
(g78
g59
NtRp3865
(dp3866
g62
(dp3867
g82
g83
ssg71
g3861
sg64
(lp3868
S'9'
asbag57
(g78
g59
NtRp3869
(dp3870
g62
(dp3871
g89
g90
ssg71
g3861
sg64
(lp3872
S':'
asbag57
(g78
g59
NtRp3873
(dp3874
g62
(dp3875
sg71
g3861
sg64
(lp3876
g57
(g58
g59
NtRp3877
(dp3878
g62
(dp3879
g70
I3
ssg71
g3873
sg64
(lp3880
S'user_2'
p3881
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3882
(dp3883
g62
(dp3884
sg71
g3332
sg64
(lp3885
g57
(g78
g59
NtRp3886
(dp3887
g62
(dp3888
g82
g83
ssg71
g3882
sg64
(lp3889
S'flash'
p3890
asbag57
(g78
g59
NtRp3891
(dp3892
g62
(dp3893
g89
g90
ssg71
g3882
sg64
(lp3894
S':'
asbag57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
sg71
g3882
sg64
(lp3898
g57
(g58
g59
NtRp3899
(dp3900
g62
(dp3901
g70
I5
ssg71
g3895
sg64
(lp3902
S'None'
p3903
asbasbasbag57
(g73
g59
NtRp3904
(dp3905
g62
(dp3906
sg71
g3332
sg64
(lp3907
g57
(g78
g59
NtRp3908
(dp3909
g62
(dp3910
g82
g83
ssg71
g3904
sg64
(lp3911
S'last_orderby'
p3912
asbag57
(g78
g59
NtRp3913
(dp3914
g62
(dp3915
g89
g90
ssg71
g3904
sg64
(lp3916
S':'
asbag57
(g78
g59
NtRp3917
(dp3918
g62
(dp3919
sg71
g3904
sg64
(lp3920
g57
(g58
g59
NtRp3921
(dp3922
g62
(dp3923
g70
I5
ssg71
g3917
sg64
(lp3924
S'None'
p3925
asbasbasbag57
(g73
g59
NtRp3926
(dp3927
g62
(dp3928
sg71
g3332
sg64
(lp3929
g57
(g78
g59
NtRp3930
(dp3931
g62
(dp3932
g82
g83
ssg71
g3926
sg64
(lp3933
S'last_query'
p3934
asbag57
(g78
g59
NtRp3935
(dp3936
g62
(dp3937
g89
g90
ssg71
g3926
sg64
(lp3938
S':'
asbag57
(g78
g59
NtRp3939
(dp3940
g62
(dp3941
sg71
g3926
sg64
(lp3942
g57
(g58
g59
NtRp3943
(dp3944
g62
(dp3945
g70
I5
ssg71
g3939
sg64
(lp3946
S'db.project.id>0'
p3947
asbasbasbasbasbsS'etype'
p3948
S"<type 'exceptions.TypeError'>"
p3949
sS'date'
p3950
S'Wed Feb 20 22:14:06 2013'
p3951
sS'response'
p3952
g57
(g58
g59
NtRp3953
(dp3954
g62
(dp3955
sg64
(lp3956
g57
(g66
g59
NtRp3957
(dp3958
g62
(dp3959
g70
I5
ssg71
Nsg64
(lp3960
g57
(g73
g59
NtRp3961
(dp3962
g62
(dp3963
sg71
g3957
sg64
(lp3964
g57
(g78
g59
NtRp3965
(dp3966
g62
(dp3967
g82
g83
ssg71
g3961
sg64
(lp3968
g206
asbag57
(g78
g59
NtRp3969
(dp3970
g62
(dp3971
g89
g90
ssg71
g3961
sg64
(lp3972
S':'
asbag57
(g78
g59
NtRp3973
(dp3974
g62
(dp3975
sg71
g3961
sg64
(lp3976
g57
(g58
g59
NtRp3977
(dp3978
g62
(dp3979
g70
I5
ssg71
g3973
sg64
(lp3980
S'<cStringIO.StringO object at 0xa783b60>'
p3981
asbasbasbag57
(g73
g59
NtRp3982
(dp3983
g62
(dp3984
sg71
g3957
sg64
(lp3985
g57
(g78
g59
NtRp3986
(dp3987
g62
(dp3988
g82
g83
ssg71
g3982
sg64
(lp3989
g294
asbag57
(g78
g59
NtRp3990
(dp3991
g62
(dp3992
g89
g90
ssg71
g3982
sg64
(lp3993
S':'
asbag57
(g78
g59
NtRp3994
(dp3995
g62
(dp3996
sg71
g3982
sg64
(lp3997
g57
(g58
g59
NtRp3998
(dp3999
g62
(dp4000
g70
I5
ssg71
g3994
sg64
(lp4001
g57
(g66
g59
NtRp4002
(dp4003
g62
(dp4004
g70
I4
ssg71
Nsg64
(lp4005
g57
(g73
g59
NtRp4006
(dp4007
g62
(dp4008
sg71
g4002
sg64
(lp4009
g57
(g78
g59
NtRp4010
(dp4011
g62
(dp4012
g82
g83
ssg71
g4006
sg64
(lp4013
S'session_id_dev_bootstrap_ch'
p4014
asbag57
(g78
g59
NtRp4015
(dp4016
g62
(dp4017
g89
g90
ssg71
g4006
sg64
(lp4018
S':'
asbag57
(g78
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g4006
sg64
(lp4022
g57
(g58
g59
NtRp4023
(dp4024
g62
(dp4025
g70
I4
ssg71
g4019
sg64
(lp4026
g526
ag57
(g66
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I3
ssg71
Nsg64
(lp4030
g57
(g73
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g4027
sg64
(lp4034
g57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
g82
g83
ssg71
g4031
sg64
(lp4038
g345
asbag57
(g78
g59
NtRp4039
(dp4040
g62
(dp4041
g89
g90
ssg71
g4031
sg64
(lp4042
S':'
asbag57
(g78
g59
NtRp4043
(dp4044
g62
(dp4045
sg71
g4031
sg64
(lp4046
g57
(g58
g59
NtRp4047
(dp4048
g62
(dp4049
g70
I3
ssg71
g4043
sg64
(lp4050
S''
asbasbasbag57
(g73
g59
NtRp4051
(dp4052
g62
(dp4053
sg71
g4027
sg64
(lp4054
g57
(g78
g59
NtRp4055
(dp4056
g62
(dp4057
g82
g83
ssg71
g4051
sg64
(lp4058
g366
asbag57
(g78
g59
NtRp4059
(dp4060
g62
(dp4061
g89
g90
ssg71
g4051
sg64
(lp4062
S':'
asbag57
(g78
g59
NtRp4063
(dp4064
g62
(dp4065
sg71
g4051
sg64
(lp4066
g57
(g58
g59
NtRp4067
(dp4068
g62
(dp4069
g70
I3
ssg71
g4063
sg64
(lp4070
S''
asbasbasbag57
(g73
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g4027
sg64
(lp4074
g57
(g78
g59
NtRp4075
(dp4076
g62
(dp4077
g82
g83
ssg71
g4071
sg64
(lp4078
g387
asbag57
(g78
g59
NtRp4079
(dp4080
g62
(dp4081
g89
g90
ssg71
g4071
sg64
(lp4082
S':'
asbag57
(g78
g59
NtRp4083
(dp4084
g62
(dp4085
sg71
g4071
sg64
(lp4086
g57
(g58
g59
NtRp4087
(dp4088
g62
(dp4089
g70
I3
ssg71
g4083
sg64
(lp4090
S'2592000'
p4091
asbasbasbag57
(g73
g59
NtRp4092
(dp4093
g62
(dp4094
sg71
g4027
sg64
(lp4095
g57
(g78
g59
NtRp4096
(dp4097
g62
(dp4098
g82
g83
ssg71
g4092
sg64
(lp4099
g408
asbag57
(g78
g59
NtRp4100
(dp4101
g62
(dp4102
g89
g90
ssg71
g4092
sg64
(lp4103
S':'
asbag57
(g78
g59
NtRp4104
(dp4105
g62
(dp4106
sg71
g4092
sg64
(lp4107
g57
(g58
g59
NtRp4108
(dp4109
g62
(dp4110
g70
I3
ssg71
g4104
sg64
(lp4111
S''
asbasbasbag57
(g73
g59
NtRp4112
(dp4113
g62
(dp4114
sg71
g4027
sg64
(lp4115
g57
(g78
g59
NtRp4116
(dp4117
g62
(dp4118
g82
g83
ssg71
g4112
sg64
(lp4119
g429
asbag57
(g78
g59
NtRp4120
(dp4121
g62
(dp4122
g89
g90
ssg71
g4112
sg64
(lp4123
S':'
asbag57
(g78
g59
NtRp4124
(dp4125
g62
(dp4126
sg71
g4112
sg64
(lp4127
g57
(g58
g59
NtRp4128
(dp4129
g62
(dp4130
g70
I3
ssg71
g4124
sg64
(lp4131
S''
asbasbasbag57
(g73
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g4027
sg64
(lp4135
g57
(g78
g59
NtRp4136
(dp4137
g62
(dp4138
g82
g83
ssg71
g4132
sg64
(lp4139
g450
asbag57
(g78
g59
NtRp4140
(dp4141
g62
(dp4142
g89
g90
ssg71
g4132
sg64
(lp4143
S':'
asbag57
(g78
g59
NtRp4144
(dp4145
g62
(dp4146
sg71
g4132
sg64
(lp4147
g57
(g58
g59
NtRp4148
(dp4149
g62
(dp4150
g70
I3
ssg71
g4144
sg64
(lp4151
S'/'
asbasbasbag57
(g73
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g4027
sg64
(lp4155
g57
(g78
g59
NtRp4156
(dp4157
g62
(dp4158
g82
g83
ssg71
g4152
sg64
(lp4159
g471
asbag57
(g78
g59
NtRp4160
(dp4161
g62
(dp4162
g89
g90
ssg71
g4152
sg64
(lp4163
S':'
asbag57
(g78
g59
NtRp4164
(dp4165
g62
(dp4166
sg71
g4152
sg64
(lp4167
g57
(g58
g59
NtRp4168
(dp4169
g62
(dp4170
g70
I3
ssg71
g4164
sg64
(lp4171
S''
asbasbasbag57
(g73
g59
NtRp4172
(dp4173
g62
(dp4174
sg71
g4027
sg64
(lp4175
g57
(g78
g59
NtRp4176
(dp4177
g62
(dp4178
g82
g83
ssg71
g4172
sg64
(lp4179
g492
asbag57
(g78
g59
NtRp4180
(dp4181
g62
(dp4182
g89
g90
ssg71
g4172
sg64
(lp4183
S':'
asbag57
(g78
g59
NtRp4184
(dp4185
g62
(dp4186
sg71
g4172
sg64
(lp4187
g57
(g58
g59
NtRp4188
(dp4189
g62
(dp4190
g70
I3
ssg71
g4184
sg64
(lp4191
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4192
(dp4193
g62
(dp4194
sg71
g3957
sg64
(lp4195
g57
(g78
g59
NtRp4196
(dp4197
g62
(dp4198
g82
g83
ssg71
g4192
sg64
(lp4199
S'delimiters'
p4200
asbag57
(g78
g59
NtRp4201
(dp4202
g62
(dp4203
g89
g90
ssg71
g4192
sg64
(lp4204
S':'
asbag57
(g78
g59
NtRp4205
(dp4206
g62
(dp4207
sg71
g4192
sg64
(lp4208
g57
(g58
g59
NtRp4209
(dp4210
g62
(dp4211
g70
I5
ssg71
g4205
sg64
(lp4212
g57
(g66
g59
NtRp4213
(dp4214
g62
(dp4215
g70
I4
ssg71
Nsg64
(lp4216
g57
(g73
g59
NtRp4217
(dp4218
g62
(dp4219
sg71
g4213
sg64
(lp4220
g57
(g78
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4217
sg64
(lp4224
g57
(g58
g59
NtRp4225
(dp4226
g62
(dp4227
g70
I4
ssg71
g4221
sg64
(lp4228
S'{{'
p4229
asbasbasbag57
(g73
g59
NtRp4230
(dp4231
g62
(dp4232
sg71
g4213
sg64
(lp4233
g57
(g78
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4230
sg64
(lp4237
g57
(g58
g59
NtRp4238
(dp4239
g62
(dp4240
g70
I4
ssg71
g4234
sg64
(lp4241
S'}}'
p4242
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4243
(dp4244
g62
(dp4245
sg71
g3957
sg64
(lp4246
g57
(g78
g59
NtRp4247
(dp4248
g62
(dp4249
g82
g83
ssg71
g4243
sg64
(lp4250
S'files'
p4251
asbag57
(g78
g59
NtRp4252
(dp4253
g62
(dp4254
g89
g90
ssg71
g4243
sg64
(lp4255
S':'
asbag57
(g78
g59
NtRp4256
(dp4257
g62
(dp4258
sg71
g4243
sg64
(lp4259
g57
(g58
g59
NtRp4260
(dp4261
g62
(dp4262
g70
I5
ssg71
g4256
sg64
(lp4263
g57
(g66
g59
NtRp4264
(dp4265
g62
(dp4266
g70
I4
ssg71
Nsg64
(lp4267
g57
(g73
g59
NtRp4268
(dp4269
g62
(dp4270
sg71
g4264
sg64
(lp4271
g57
(g78
g59
NtRp4272
(dp4273
g62
(dp4274
sg71
g4268
sg64
(lp4275
g57
(g58
g59
NtRp4276
(dp4277
g62
(dp4278
g70
I4
ssg71
g4272
sg64
(lp4279
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4280
asbasbasbag57
(g73
g59
NtRp4281
(dp4282
g62
(dp4283
sg71
g4264
sg64
(lp4284
g57
(g78
g59
NtRp4285
(dp4286
g62
(dp4287
sg71
g4281
sg64
(lp4288
g57
(g58
g59
NtRp4289
(dp4290
g62
(dp4291
g70
I4
ssg71
g4285
sg64
(lp4292
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4293
asbasbasbag57
(g73
g59
NtRp4294
(dp4295
g62
(dp4296
sg71
g4264
sg64
(lp4297
g57
(g78
g59
NtRp4298
(dp4299
g62
(dp4300
sg71
g4294
sg64
(lp4301
g57
(g58
g59
NtRp4302
(dp4303
g62
(dp4304
g70
I4
ssg71
g4298
sg64
(lp4305
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4306
asbasbasbag57
(g73
g59
NtRp4307
(dp4308
g62
(dp4309
sg71
g4264
sg64
(lp4310
g57
(g78
g59
NtRp4311
(dp4312
g62
(dp4313
sg71
g4307
sg64
(lp4314
g57
(g58
g59
NtRp4315
(dp4316
g62
(dp4317
g70
I4
ssg71
g4311
sg64
(lp4318
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4319
asbasbasbag57
(g73
g59
NtRp4320
(dp4321
g62
(dp4322
sg71
g4264
sg64
(lp4323
g57
(g78
g59
NtRp4324
(dp4325
g62
(dp4326
sg71
g4320
sg64
(lp4327
g57
(g58
g59
NtRp4328
(dp4329
g62
(dp4330
g70
I4
ssg71
g4324
sg64
(lp4331
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4332
asbasbasbag57
(g73
g59
NtRp4333
(dp4334
g62
(dp4335
sg71
g4264
sg64
(lp4336
g57
(g78
g59
NtRp4337
(dp4338
g62
(dp4339
sg71
g4333
sg64
(lp4340
g57
(g58
g59
NtRp4341
(dp4342
g62
(dp4343
g70
I4
ssg71
g4337
sg64
(lp4344
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4345
asbasbasbag57
(g73
g59
NtRp4346
(dp4347
g62
(dp4348
sg71
g4264
sg64
(lp4349
g57
(g78
g59
NtRp4350
(dp4351
g62
(dp4352
sg71
g4346
sg64
(lp4353
g57
(g58
g59
NtRp4354
(dp4355
g62
(dp4356
g70
I4
ssg71
g4350
sg64
(lp4357
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4358
asbasbasbag57
(g73
g59
NtRp4359
(dp4360
g62
(dp4361
sg71
g4264
sg64
(lp4362
g57
(g78
g59
NtRp4363
(dp4364
g62
(dp4365
sg71
g4359
sg64
(lp4366
g57
(g58
g59
NtRp4367
(dp4368
g62
(dp4369
g70
I4
ssg71
g4363
sg64
(lp4370
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4371
asbasbasbag57
(g73
g59
NtRp4372
(dp4373
g62
(dp4374
sg71
g4264
sg64
(lp4375
g57
(g78
g59
NtRp4376
(dp4377
g62
(dp4378
sg71
g4372
sg64
(lp4379
g57
(g58
g59
NtRp4380
(dp4381
g62
(dp4382
g70
I4
ssg71
g4376
sg64
(lp4383
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4384
asbasbasbag57
(g73
g59
NtRp4385
(dp4386
g62
(dp4387
sg71
g4264
sg64
(lp4388
g57
(g78
g59
NtRp4389
(dp4390
g62
(dp4391
sg71
g4385
sg64
(lp4392
g57
(g58
g59
NtRp4393
(dp4394
g62
(dp4395
g70
I4
ssg71
g4389
sg64
(lp4396
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4397
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4398
(dp4399
g62
(dp4400
sg71
g3957
sg64
(lp4401
g57
(g78
g59
NtRp4402
(dp4403
g62
(dp4404
g82
g83
ssg71
g4398
sg64
(lp4405
S'flash'
p4406
asbag57
(g78
g59
NtRp4407
(dp4408
g62
(dp4409
g89
g90
ssg71
g4398
sg64
(lp4410
S':'
asbag57
(g78
g59
NtRp4411
(dp4412
g62
(dp4413
sg71
g4398
sg64
(lp4414
g57
(g58
g59
NtRp4415
(dp4416
g62
(dp4417
g70
I5
ssg71
g4411
sg64
(lp4418
S''
asbasbasbag57
(g73
g59
NtRp4419
(dp4420
g62
(dp4421
sg71
g3957
sg64
(lp4422
g57
(g78
g59
NtRp4423
(dp4424
g62
(dp4425
g82
g83
ssg71
g4419
sg64
(lp4426
S'generic_patterns'
p4427
asbag57
(g78
g59
NtRp4428
(dp4429
g62
(dp4430
g89
g90
ssg71
g4419
sg64
(lp4431
S':'
asbag57
(g78
g59
NtRp4432
(dp4433
g62
(dp4434
sg71
g4419
sg64
(lp4435
g57
(g58
g59
NtRp4436
(dp4437
g62
(dp4438
g70
I5
ssg71
g4432
sg64
(lp4439
g57
(g66
g59
NtRp4440
(dp4441
g62
(dp4442
g70
I4
ssg71
Nsg64
(lp4443
g57
(g73
g59
NtRp4444
(dp4445
g62
(dp4446
sg71
g4440
sg64
(lp4447
g57
(g78
g59
NtRp4448
(dp4449
g62
(dp4450
sg71
g4444
sg64
(lp4451
g57
(g58
g59
NtRp4452
(dp4453
g62
(dp4454
g70
I4
ssg71
g4448
sg64
(lp4455
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4456
(dp4457
g62
(dp4458
sg71
g3957
sg64
(lp4459
g57
(g78
g59
NtRp4460
(dp4461
g62
(dp4462
g82
g83
ssg71
g4456
sg64
(lp4463
S'google_analytics_id'
p4464
asbag57
(g78
g59
NtRp4465
(dp4466
g62
(dp4467
g89
g90
ssg71
g4456
sg64
(lp4468
S':'
asbag57
(g78
g59
NtRp4469
(dp4470
g62
(dp4471
sg71
g4456
sg64
(lp4472
g57
(g58
g59
NtRp4473
(dp4474
g62
(dp4475
g70
I5
ssg71
g4469
sg64
(lp4476
S'None'
p4477
asbasbasbag57
(g73
g59
NtRp4478
(dp4479
g62
(dp4480
sg71
g3957
sg64
(lp4481
g57
(g78
g59
NtRp4482
(dp4483
g62
(dp4484
g82
g83
ssg71
g4478
sg64
(lp4485
S'headers'
p4486
asbag57
(g78
g59
NtRp4487
(dp4488
g62
(dp4489
g89
g90
ssg71
g4478
sg64
(lp4490
S':'
asbag57
(g78
g59
NtRp4491
(dp4492
g62
(dp4493
sg71
g4478
sg64
(lp4494
g57
(g58
g59
NtRp4495
(dp4496
g62
(dp4497
g70
I5
ssg71
g4491
sg64
(lp4498
g57
(g66
g59
NtRp4499
(dp4500
g62
(dp4501
g70
I4
ssg71
Nsg64
(lp4502
g57
(g73
g59
NtRp4503
(dp4504
g62
(dp4505
sg71
g4499
sg64
(lp4506
g57
(g78
g59
NtRp4507
(dp4508
g62
(dp4509
g82
g83
ssg71
g4503
sg64
(lp4510
S'X-Powered-By'
p4511
asbag57
(g78
g59
NtRp4512
(dp4513
g62
(dp4514
g89
g90
ssg71
g4503
sg64
(lp4515
S':'
asbag57
(g78
g59
NtRp4516
(dp4517
g62
(dp4518
sg71
g4503
sg64
(lp4519
g57
(g58
g59
NtRp4520
(dp4521
g62
(dp4522
g70
I4
ssg71
g4516
sg64
(lp4523
S'web2py'
p4524
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4525
(dp4526
g62
(dp4527
sg71
g3957
sg64
(lp4528
g57
(g78
g59
NtRp4529
(dp4530
g62
(dp4531
g82
g83
ssg71
g4525
sg64
(lp4532
S'menu'
p4533
asbag57
(g78
g59
NtRp4534
(dp4535
g62
(dp4536
g89
g90
ssg71
g4525
sg64
(lp4537
S':'
asbag57
(g78
g59
NtRp4538
(dp4539
g62
(dp4540
sg71
g4525
sg64
(lp4541
g57
(g58
g59
NtRp4542
(dp4543
g62
(dp4544
g70
I5
ssg71
g4538
sg64
(lp4545
g57
(g66
g59
NtRp4546
(dp4547
g62
(dp4548
g70
I4
ssg71
Nsg64
(lp4549
g57
(g73
g59
NtRp4550
(dp4551
g62
(dp4552
sg71
g4546
sg64
(lp4553
g57
(g78
g59
NtRp4554
(dp4555
g62
(dp4556
sg71
g4550
sg64
(lp4557
g57
(g58
g59
NtRp4558
(dp4559
g62
(dp4560
g70
I4
ssg71
g4554
sg64
(lp4561
g57
(g66
g59
NtRp4562
(dp4563
g62
(dp4564
g70
I3
ssg71
Nsg64
(lp4565
g57
(g73
g59
NtRp4566
(dp4567
g62
(dp4568
sg71
g4562
sg64
(lp4569
g57
(g78
g59
NtRp4570
(dp4571
g62
(dp4572
sg71
g4566
sg64
(lp4573
g57
(g58
g59
NtRp4574
(dp4575
g62
(dp4576
g70
I3
ssg71
g4570
sg64
(lp4577
cgluon.languages
lazyT_unpickle
p4578
(S't\x04\x00\x00\x00Home'
tRp4579
asbasbasbag57
(g73
g59
NtRp4580
(dp4581
g62
(dp4582
sg71
g4562
sg64
(lp4583
g57
(g78
g59
NtRp4584
(dp4585
g62
(dp4586
sg71
g4580
sg64
(lp4587
g57
(g58
g59
NtRp4588
(dp4589
g62
(dp4590
g70
I3
ssg71
g4584
sg64
(lp4591
g100
asbasbasbag57
(g73
g59
NtRp4592
(dp4593
g62
(dp4594
sg71
g4562
sg64
(lp4595
g57
(g78
g59
NtRp4596
(dp4597
g62
(dp4598
sg71
g4592
sg64
(lp4599
g57
(g58
g59
NtRp4600
(dp4601
g62
(dp4602
g70
I3
ssg71
g4596
sg64
(lp4603
S'/DEV_bootstrap_ch/default/list_all_projects'
p4604
asbasbasbag57
(g73
g59
NtRp4605
(dp4606
g62
(dp4607
sg71
g4562
sg64
(lp4608
g57
(g78
g59
NtRp4609
(dp4610
g62
(dp4611
sg71
g4605
sg64
(lp4612
g57
(g58
g59
NtRp4613
(dp4614
g62
(dp4615
g70
I3
ssg71
g4609
sg64
(lp4616
g57
(g66
g59
NtRp4617
(dp4618
g62
(dp4619
g70
I2
ssg71
Nsg64
(lp4620
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4621
(dp4622
g62
(dp4623
sg71
g3957
sg64
(lp4624
g57
(g78
g59
NtRp4625
(dp4626
g62
(dp4627
g82
g83
ssg71
g4621
sg64
(lp4628
S'meta'
p4629
asbag57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
g89
g90
ssg71
g4621
sg64
(lp4633
S':'
asbag57
(g78
g59
NtRp4634
(dp4635
g62
(dp4636
sg71
g4621
sg64
(lp4637
g57
(g58
g59
NtRp4638
(dp4639
g62
(dp4640
g70
I5
ssg71
g4634
sg64
(lp4641
g57
(g66
g59
NtRp4642
(dp4643
g62
(dp4644
g70
I4
ssg71
Nsg64
(lp4645
g57
(g73
g59
NtRp4646
(dp4647
g62
(dp4648
sg71
g4642
sg64
(lp4649
g57
(g78
g59
NtRp4650
(dp4651
g62
(dp4652
g82
g83
ssg71
g4646
sg64
(lp4653
S'author'
p4654
asbag57
(g78
g59
NtRp4655
(dp4656
g62
(dp4657
g89
g90
ssg71
g4646
sg64
(lp4658
S':'
asbag57
(g78
g59
NtRp4659
(dp4660
g62
(dp4661
sg71
g4646
sg64
(lp4662
g57
(g58
g59
NtRp4663
(dp4664
g62
(dp4665
g70
I4
ssg71
g4659
sg64
(lp4666
S'Vikram Pudi <vikram@iiit.ac.in>'
p4667
asbasbasbag57
(g73
g59
NtRp4668
(dp4669
g62
(dp4670
sg71
g4642
sg64
(lp4671
g57
(g78
g59
NtRp4672
(dp4673
g62
(dp4674
g82
g83
ssg71
g4668
sg64
(lp4675
S'copyright'
p4676
asbag57
(g78
g59
NtRp4677
(dp4678
g62
(dp4679
g89
g90
ssg71
g4668
sg64
(lp4680
S':'
asbag57
(g78
g59
NtRp4681
(dp4682
g62
(dp4683
sg71
g4668
sg64
(lp4684
g57
(g58
g59
NtRp4685
(dp4686
g62
(dp4687
g70
I4
ssg71
g4681
sg64
(lp4688
S'Copyright 2011'
p4689
asbasbasbag57
(g73
g59
NtRp4690
(dp4691
g62
(dp4692
sg71
g4642
sg64
(lp4693
g57
(g78
g59
NtRp4694
(dp4695
g62
(dp4696
g82
g83
ssg71
g4690
sg64
(lp4697
S'description'
p4698
asbag57
(g78
g59
NtRp4699
(dp4700
g62
(dp4701
g89
g90
ssg71
g4690
sg64
(lp4702
S':'
asbag57
(g78
g59
NtRp4703
(dp4704
g62
(dp4705
sg71
g4690
sg64
(lp4706
g57
(g58
g59
NtRp4707
(dp4708
g62
(dp4709
g70
I4
ssg71
g4703
sg64
(lp4710
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4711
asbasbasbag57
(g73
g59
NtRp4712
(dp4713
g62
(dp4714
sg71
g4642
sg64
(lp4715
g57
(g78
g59
NtRp4716
(dp4717
g62
(dp4718
g82
g83
ssg71
g4712
sg64
(lp4719
S'generator'
p4720
asbag57
(g78
g59
NtRp4721
(dp4722
g62
(dp4723
g89
g90
ssg71
g4712
sg64
(lp4724
S':'
asbag57
(g78
g59
NtRp4725
(dp4726
g62
(dp4727
sg71
g4712
sg64
(lp4728
g57
(g58
g59
NtRp4729
(dp4730
g62
(dp4731
g70
I4
ssg71
g4725
sg64
(lp4732
S'Web2py Web Framework'
p4733
asbasbasbag57
(g73
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g4642
sg64
(lp4737
g57
(g78
g59
NtRp4738
(dp4739
g62
(dp4740
g82
g83
ssg71
g4734
sg64
(lp4741
S'keywords'
p4742
asbag57
(g78
g59
NtRp4743
(dp4744
g62
(dp4745
g89
g90
ssg71
g4734
sg64
(lp4746
S':'
asbag57
(g78
g59
NtRp4747
(dp4748
g62
(dp4749
sg71
g4734
sg64
(lp4750
g57
(g58
g59
NtRp4751
(dp4752
g62
(dp4753
g70
I4
ssg71
g4747
sg64
(lp4754
S'web2py, python, metabolome, metabolomics'
p4755
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4756
(dp4757
g62
(dp4758
sg71
g3957
sg64
(lp4759
g57
(g78
g59
NtRp4760
(dp4761
g62
(dp4762
g82
g83
ssg71
g4756
sg64
(lp4763
S'models_to_run'
p4764
asbag57
(g78
g59
NtRp4765
(dp4766
g62
(dp4767
g89
g90
ssg71
g4756
sg64
(lp4768
S':'
asbag57
(g78
g59
NtRp4769
(dp4770
g62
(dp4771
sg71
g4756
sg64
(lp4772
g57
(g58
g59
NtRp4773
(dp4774
g62
(dp4775
g70
I5
ssg71
g4769
sg64
(lp4776
g57
(g66
g59
NtRp4777
(dp4778
g62
(dp4779
g70
I4
ssg71
Nsg64
(lp4780
g57
(g73
g59
NtRp4781
(dp4782
g62
(dp4783
sg71
g4777
sg64
(lp4784
g57
(g78
g59
NtRp4785
(dp4786
g62
(dp4787
sg71
g4781
sg64
(lp4788
g57
(g58
g59
NtRp4789
(dp4790
g62
(dp4791
g70
I4
ssg71
g4785
sg64
(lp4792
S'^\\w+\\.py$'
p4793
asbasbasbag57
(g73
g59
NtRp4794
(dp4795
g62
(dp4796
sg71
g4777
sg64
(lp4797
g57
(g78
g59
NtRp4798
(dp4799
g62
(dp4800
sg71
g4794
sg64
(lp4801
g57
(g58
g59
NtRp4802
(dp4803
g62
(dp4804
g70
I4
ssg71
g4798
sg64
(lp4805
S'^default/\\w+\\.py$'
p4806
asbasbasbag57
(g73
g59
NtRp4807
(dp4808
g62
(dp4809
sg71
g4777
sg64
(lp4810
g57
(g78
g59
NtRp4811
(dp4812
g62
(dp4813
sg71
g4807
sg64
(lp4814
g57
(g58
g59
NtRp4815
(dp4816
g62
(dp4817
g70
I4
ssg71
g4811
sg64
(lp4818
S'^default/list_all_dev_projects/\\w+\\.py$'
p4819
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4820
(dp4821
g62
(dp4822
sg71
g3957
sg64
(lp4823
g57
(g78
g59
NtRp4824
(dp4825
g62
(dp4826
g82
g83
ssg71
g4820
sg64
(lp4827
S'postprocessing'
p4828
asbag57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
g89
g90
ssg71
g4820
sg64
(lp4832
S':'
asbag57
(g78
g59
NtRp4833
(dp4834
g62
(dp4835
sg71
g4820
sg64
(lp4836
g57
(g58
g59
NtRp4837
(dp4838
g62
(dp4839
g70
I5
ssg71
g4833
sg64
(lp4840
g57
(g66
g59
NtRp4841
(dp4842
g62
(dp4843
g70
I4
ssg71
Nsg64
(lp4844
sbasbasbasbag57
(g73
g59
NtRp4845
(dp4846
g62
(dp4847
sg71
g3957
sg64
(lp4848
g57
(g78
g59
NtRp4849
(dp4850
g62
(dp4851
g82
g83
ssg71
g4845
sg64
(lp4852
S'session_cookie_expires'
p4853
asbag57
(g78
g59
NtRp4854
(dp4855
g62
(dp4856
g89
g90
ssg71
g4845
sg64
(lp4857
S':'
asbag57
(g78
g59
NtRp4858
(dp4859
g62
(dp4860
sg71
g4845
sg64
(lp4861
g57
(g58
g59
NtRp4862
(dp4863
g62
(dp4864
g70
I5
ssg71
g4858
sg64
(lp4865
S'None'
p4866
asbasbasbag57
(g73
g59
NtRp4867
(dp4868
g62
(dp4869
sg71
g3957
sg64
(lp4870
g57
(g78
g59
NtRp4871
(dp4872
g62
(dp4873
g82
g83
ssg71
g4867
sg64
(lp4874
S'session_data_name'
p4875
asbag57
(g78
g59
NtRp4876
(dp4877
g62
(dp4878
g89
g90
ssg71
g4867
sg64
(lp4879
S':'
asbag57
(g78
g59
NtRp4880
(dp4881
g62
(dp4882
sg71
g4867
sg64
(lp4883
g57
(g58
g59
NtRp4884
(dp4885
g62
(dp4886
g70
I5
ssg71
g4880
sg64
(lp4887
S'session_data_dev_bootstrap_ch'
p4888
asbasbasbag57
(g73
g59
NtRp4889
(dp4890
g62
(dp4891
sg71
g3957
sg64
(lp4892
g57
(g78
g59
NtRp4893
(dp4894
g62
(dp4895
g82
g83
ssg71
g4889
sg64
(lp4896
S'session_file'
p4897
asbag57
(g78
g59
NtRp4898
(dp4899
g62
(dp4900
g89
g90
ssg71
g4889
sg64
(lp4901
S':'
asbag57
(g78
g59
NtRp4902
(dp4903
g62
(dp4904
sg71
g4889
sg64
(lp4905
g57
(g58
g59
NtRp4906
(dp4907
g62
(dp4908
g70
I5
ssg71
g4902
sg64
(lp4909
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xadf74f98>"
p4910
asbasbasbag57
(g73
g59
NtRp4911
(dp4912
g62
(dp4913
sg71
g3957
sg64
(lp4914
g57
(g78
g59
NtRp4915
(dp4916
g62
(dp4917
g82
g83
ssg71
g4911
sg64
(lp4918
S'session_filename'
p4919
asbag57
(g78
g59
NtRp4920
(dp4921
g62
(dp4922
g89
g90
ssg71
g4911
sg64
(lp4923
S':'
asbag57
(g78
g59
NtRp4924
(dp4925
g62
(dp4926
sg71
g4911
sg64
(lp4927
g57
(g58
g59
NtRp4928
(dp4929
g62
(dp4930
g70
I5
ssg71
g4924
sg64
(lp4931
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4932
asbasbasbag57
(g73
g59
NtRp4933
(dp4934
g62
(dp4935
sg71
g3957
sg64
(lp4936
g57
(g78
g59
NtRp4937
(dp4938
g62
(dp4939
g82
g83
ssg71
g4933
sg64
(lp4940
S'session_id'
p4941
asbag57
(g78
g59
NtRp4942
(dp4943
g62
(dp4944
g89
g90
ssg71
g4933
sg64
(lp4945
S':'
asbag57
(g78
g59
NtRp4946
(dp4947
g62
(dp4948
sg71
g4933
sg64
(lp4949
g57
(g58
g59
NtRp4950
(dp4951
g62
(dp4952
g70
I5
ssg71
g4946
sg64
(lp4953
g526
asbasbasbag57
(g73
g59
NtRp4954
(dp4955
g62
(dp4956
sg71
g3957
sg64
(lp4957
g57
(g78
g59
NtRp4958
(dp4959
g62
(dp4960
g82
g83
ssg71
g4954
sg64
(lp4961
S'session_id_name'
p4962
asbag57
(g78
g59
NtRp4963
(dp4964
g62
(dp4965
g89
g90
ssg71
g4954
sg64
(lp4966
S':'
asbag57
(g78
g59
NtRp4967
(dp4968
g62
(dp4969
sg71
g4954
sg64
(lp4970
g57
(g58
g59
NtRp4971
(dp4972
g62
(dp4973
g70
I5
ssg71
g4967
sg64
(lp4974
g4014
asbasbasbag57
(g73
g59
NtRp4975
(dp4976
g62
(dp4977
sg71
g3957
sg64
(lp4978
g57
(g78
g59
NtRp4979
(dp4980
g62
(dp4981
g82
g83
ssg71
g4975
sg64
(lp4982
S'session_locked'
p4983
asbag57
(g78
g59
NtRp4984
(dp4985
g62
(dp4986
g89
g90
ssg71
g4975
sg64
(lp4987
S':'
asbag57
(g78
g59
NtRp4988
(dp4989
g62
(dp4990
sg71
g4975
sg64
(lp4991
g57
(g58
g59
NtRp4992
(dp4993
g62
(dp4994
g70
I5
ssg71
g4988
sg64
(lp4995
g1680
asbasbasbag57
(g73
g59
NtRp4996
(dp4997
g62
(dp4998
sg71
g3957
sg64
(lp4999
g57
(g78
g59
NtRp5000
(dp5001
g62
(dp5002
g82
g83
ssg71
g4996
sg64
(lp5003
S'session_new'
p5004
asbag57
(g78
g59
NtRp5005
(dp5006
g62
(dp5007
g89
g90
ssg71
g4996
sg64
(lp5008
S':'
asbag57
(g78
g59
NtRp5009
(dp5010
g62
(dp5011
sg71
g4996
sg64
(lp5012
g57
(g58
g59
NtRp5013
(dp5014
g62
(dp5015
g70
I5
ssg71
g5009
sg64
(lp5016
g100
asbasbasbag57
(g73
g59
NtRp5017
(dp5018
g62
(dp5019
sg71
g3957
sg64
(lp5020
g57
(g78
g59
NtRp5021
(dp5022
g62
(dp5023
g82
g83
ssg71
g5017
sg64
(lp5024
S'session_storage_type'
p5025
asbag57
(g78
g59
NtRp5026
(dp5027
g62
(dp5028
g89
g90
ssg71
g5017
sg64
(lp5029
S':'
asbag57
(g78
g59
NtRp5030
(dp5031
g62
(dp5032
sg71
g5017
sg64
(lp5033
g57
(g58
g59
NtRp5034
(dp5035
g62
(dp5036
g70
I5
ssg71
g5030
sg64
(lp5037
g3154
asbasbasbag57
(g73
g59
NtRp5038
(dp5039
g62
(dp5040
sg71
g3957
sg64
(lp5041
g57
(g78
g59
NtRp5042
(dp5043
g62
(dp5044
g82
g83
ssg71
g5038
sg64
(lp5045
S'status'
p5046
asbag57
(g78
g59
NtRp5047
(dp5048
g62
(dp5049
g89
g90
ssg71
g5038
sg64
(lp5050
S':'
asbag57
(g78
g59
NtRp5051
(dp5052
g62
(dp5053
sg71
g5038
sg64
(lp5054
g57
(g58
g59
NtRp5055
(dp5056
g62
(dp5057
g70
I5
ssg71
g5051
sg64
(lp5058
S'200'
p5059
asbasbasbag57
(g73
g59
NtRp5060
(dp5061
g62
(dp5062
sg71
g3957
sg64
(lp5063
g57
(g78
g59
NtRp5064
(dp5065
g62
(dp5066
g82
g83
ssg71
g5060
sg64
(lp5067
S'subtitle'
p5068
asbag57
(g78
g59
NtRp5069
(dp5070
g62
(dp5071
g89
g90
ssg71
g5060
sg64
(lp5072
S':'
asbag57
(g78
g59
NtRp5073
(dp5074
g62
(dp5075
sg71
g5060
sg64
(lp5076
g57
(g58
g59
NtRp5077
(dp5078
g62
(dp5079
g70
I5
ssg71
g5073
sg64
(lp5080
g4578
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5081
asbasbasbag57
(g73
g59
NtRp5082
(dp5083
g62
(dp5084
sg71
g3957
sg64
(lp5085
g57
(g78
g59
NtRp5086
(dp5087
g62
(dp5088
g82
g83
ssg71
g5082
sg64
(lp5089
g3823
asbag57
(g78
g59
NtRp5090
(dp5091
g62
(dp5092
g89
g90
ssg71
g5082
sg64
(lp5093
S':'
asbag57
(g78
g59
NtRp5094
(dp5095
g62
(dp5096
sg71
g5082
sg64
(lp5097
g57
(g58
g59
NtRp5098
(dp5099
g62
(dp5100
g70
I5
ssg71
g5094
sg64
(lp5101
g122
asbasbasbag57
(g73
g59
NtRp5102
(dp5103
g62
(dp5104
sg71
g3957
sg64
(lp5105
g57
(g78
g59
NtRp5106
(dp5107
g62
(dp5108
g82
g83
ssg71
g5102
sg64
(lp5109
S'view'
p5110
asbag57
(g78
g59
NtRp5111
(dp5112
g62
(dp5113
g89
g90
ssg71
g5102
sg64
(lp5114
S':'
asbag57
(g78
g59
NtRp5115
(dp5116
g62
(dp5117
sg71
g5102
sg64
(lp5118
g57
(g58
g59
NtRp5119
(dp5120
g62
(dp5121
g70
I5
ssg71
g5115
sg64
(lp5122
S'default/list_all_dev_projects.html'
p5123
asbasbasbasbasbsS'locals'
p5124
(dp5125
S'links'
p5126
S'[<function <lambda>>]'
p5127
sS'edit'
p5128
g100
sS'referrer'
p5129
S"'/DEV_bootstrap_ch/default/list_all_dev_projects/...ignature=7ef83f1a1fbc1478046ec45b38081f44f469294d'"
p5130
sg56
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p5131
sg3324
S'<gluon.html.DIV object>'
p5132
sS'record'
p5133
S"<Row {'code': 't21', 'name': 'test', 'project_jo...ordinator': 1, 'project_publication_date': None}>"
p5134
sS'ui'
p5135
S"{'button': 'ui-button-text-icon-primary', 'buttonadd': 'ui-icon ui-icon-plusthick', 'buttonback': 'ui-icon ui-icon-arrowreturnthick-1-w', 'buttondelete': 'ui-icon ui-icon-trash', 'buttonedit': 'ui-icon ui-icon-pencil', 'buttonexport': 'ui-icon ui-icon-transferthick-e-w', 'buttontable': 'ui-icon ui-icon-triangle-1-e', 'buttontext': 'ui-button-text', 'buttonview': 'ui-icon ui-icon-zoomin', 'content': 'ui-widget-content', ...}"
p5136
sg2407
S'<function url>'
p5137
sS'gridbutton'
p5138
S'<function gridbutton>'
p5139
sS'table'
p5140
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p5141
sS'link'
p5142
S'<function <lambda>>'
p5143
sg5110
g100
sssS'traceback'
p5144
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1106, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 317, in list_all_dev_projects\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'])\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2489, in smartgrid\n    user_signature=user_signature, **kwargs)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 1897, in grid\n    res = DIV(buttons(edit=editable, record=record), view_form,\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 1854, in buttons\n    buttons.append(link(record))\nTypeError: append() takes exactly 2 arguments (1 given)\n'
p5145
s.