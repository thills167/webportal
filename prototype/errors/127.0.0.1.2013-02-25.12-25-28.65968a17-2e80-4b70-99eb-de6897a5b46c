(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'str' object has no attribute 'select'"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"edit",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica="replicate")\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\']:\n            row = db(db[tb].sample_name==request.args[-1].select(db[tb].ALL).first())\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(duplicate)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'str\' object has no attribute \'select\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'str' object has no attribute 'select'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'3'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'2'
asbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g143
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
sg71
g210
sg64
(lp217
g57
(g58
g59
NtRp218
(dp219
g62
(dp220
g70
I4
ssg71
g214
sg64
(lp221
S'11'
p222
asbasbasbasbasbasbasbag57
(g73
g59
NtRp223
(dp224
g62
(dp225
sg71
g67
sg64
(lp226
g57
(g78
g59
NtRp227
(dp228
g62
(dp229
g82
g83
ssg71
g223
sg64
(lp230
S'body'
p231
asbag57
(g78
g59
NtRp232
(dp233
g62
(dp234
g89
g90
ssg71
g223
sg64
(lp235
S':'
asbag57
(g78
g59
NtRp236
(dp237
g62
(dp238
sg71
g223
sg64
(lp239
g57
(g58
g59
NtRp240
(dp241
g62
(dp242
g70
I5
ssg71
g236
sg64
(lp243
S'<cStringIO.StringO object at 0xad8c24c0>'
p244
asbasbasbag57
(g73
g59
NtRp245
(dp246
g62
(dp247
sg71
g67
sg64
(lp248
g57
(g78
g59
NtRp249
(dp250
g62
(dp251
g82
g83
ssg71
g245
sg64
(lp252
S'cid'
p253
asbag57
(g78
g59
NtRp254
(dp255
g62
(dp256
g89
g90
ssg71
g245
sg64
(lp257
S':'
asbag57
(g78
g59
NtRp258
(dp259
g62
(dp260
sg71
g245
sg64
(lp261
g57
(g58
g59
NtRp262
(dp263
g62
(dp264
g70
I5
ssg71
g258
sg64
(lp265
S'None'
p266
asbasbasbag57
(g73
g59
NtRp267
(dp268
g62
(dp269
sg71
g67
sg64
(lp270
g57
(g78
g59
NtRp271
(dp272
g62
(dp273
g82
g83
ssg71
g267
sg64
(lp274
S'client'
p275
asbag57
(g78
g59
NtRp276
(dp277
g62
(dp278
g89
g90
ssg71
g267
sg64
(lp279
S':'
asbag57
(g78
g59
NtRp280
(dp281
g62
(dp282
sg71
g267
sg64
(lp283
g57
(g58
g59
NtRp284
(dp285
g62
(dp286
g70
I5
ssg71
g280
sg64
(lp287
S'127.0.0.1'
p288
asbasbasbag57
(g73
g59
NtRp289
(dp290
g62
(dp291
sg71
g67
sg64
(lp292
g57
(g78
g59
NtRp293
(dp294
g62
(dp295
g82
g83
ssg71
g289
sg64
(lp296
S'controller'
p297
asbag57
(g78
g59
NtRp298
(dp299
g62
(dp300
g89
g90
ssg71
g289
sg64
(lp301
S':'
asbag57
(g78
g59
NtRp302
(dp303
g62
(dp304
sg71
g289
sg64
(lp305
g57
(g58
g59
NtRp306
(dp307
g62
(dp308
g70
I5
ssg71
g302
sg64
(lp309
S'default'
p310
asbasbasbag57
(g73
g59
NtRp311
(dp312
g62
(dp313
sg71
g67
sg64
(lp314
g57
(g78
g59
NtRp315
(dp316
g62
(dp317
g82
g83
ssg71
g311
sg64
(lp318
S'cookies'
p319
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
g89
g90
ssg71
g311
sg64
(lp323
S':'
asbag57
(g78
g59
NtRp324
(dp325
g62
(dp326
sg71
g311
sg64
(lp327
g57
(g58
g59
NtRp328
(dp329
g62
(dp330
g70
I5
ssg71
g324
sg64
(lp331
g57
(g66
g59
NtRp332
(dp333
g62
(dp334
g70
I4
ssg71
Nsg64
(lp335
g57
(g73
g59
NtRp336
(dp337
g62
(dp338
sg71
g332
sg64
(lp339
g57
(g78
g59
NtRp340
(dp341
g62
(dp342
g82
g83
ssg71
g336
sg64
(lp343
S'session_id_admin'
p344
asbag57
(g78
g59
NtRp345
(dp346
g62
(dp347
g89
g90
ssg71
g336
sg64
(lp348
S':'
asbag57
(g78
g59
NtRp349
(dp350
g62
(dp351
sg71
g336
sg64
(lp352
g57
(g58
g59
NtRp353
(dp354
g62
(dp355
g70
I4
ssg71
g349
sg64
(lp356
S'127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed'
p357
ag57
(g66
g59
NtRp358
(dp359
g62
(dp360
g70
I3
ssg71
Nsg64
(lp361
g57
(g73
g59
NtRp362
(dp363
g62
(dp364
sg71
g358
sg64
(lp365
g57
(g78
g59
NtRp366
(dp367
g62
(dp368
g82
g83
ssg71
g362
sg64
(lp369
S'comment'
p370
asbag57
(g78
g59
NtRp371
(dp372
g62
(dp373
g89
g90
ssg71
g362
sg64
(lp374
S':'
asbag57
(g78
g59
NtRp375
(dp376
g62
(dp377
sg71
g362
sg64
(lp378
g57
(g58
g59
NtRp379
(dp380
g62
(dp381
g70
I3
ssg71
g375
sg64
(lp382
S''
asbasbasbag57
(g73
g59
NtRp383
(dp384
g62
(dp385
sg71
g358
sg64
(lp386
g57
(g78
g59
NtRp387
(dp388
g62
(dp389
g82
g83
ssg71
g383
sg64
(lp390
S'domain'
p391
asbag57
(g78
g59
NtRp392
(dp393
g62
(dp394
g89
g90
ssg71
g383
sg64
(lp395
S':'
asbag57
(g78
g59
NtRp396
(dp397
g62
(dp398
sg71
g383
sg64
(lp399
g57
(g58
g59
NtRp400
(dp401
g62
(dp402
g70
I3
ssg71
g396
sg64
(lp403
S''
asbasbasbag57
(g73
g59
NtRp404
(dp405
g62
(dp406
sg71
g358
sg64
(lp407
g57
(g78
g59
NtRp408
(dp409
g62
(dp410
g82
g83
ssg71
g404
sg64
(lp411
S'expires'
p412
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
g89
g90
ssg71
g404
sg64
(lp416
S':'
asbag57
(g78
g59
NtRp417
(dp418
g62
(dp419
sg71
g404
sg64
(lp420
g57
(g58
g59
NtRp421
(dp422
g62
(dp423
g70
I3
ssg71
g417
sg64
(lp424
S''
asbasbasbag57
(g73
g59
NtRp425
(dp426
g62
(dp427
sg71
g358
sg64
(lp428
g57
(g78
g59
NtRp429
(dp430
g62
(dp431
g82
g83
ssg71
g425
sg64
(lp432
S'httponly'
p433
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
g89
g90
ssg71
g425
sg64
(lp437
S':'
asbag57
(g78
g59
NtRp438
(dp439
g62
(dp440
sg71
g425
sg64
(lp441
g57
(g58
g59
NtRp442
(dp443
g62
(dp444
g70
I3
ssg71
g438
sg64
(lp445
S''
asbasbasbag57
(g73
g59
NtRp446
(dp447
g62
(dp448
sg71
g358
sg64
(lp449
g57
(g78
g59
NtRp450
(dp451
g62
(dp452
g82
g83
ssg71
g446
sg64
(lp453
S'max-age'
p454
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
g89
g90
ssg71
g446
sg64
(lp458
S':'
asbag57
(g78
g59
NtRp459
(dp460
g62
(dp461
sg71
g446
sg64
(lp462
g57
(g58
g59
NtRp463
(dp464
g62
(dp465
g70
I3
ssg71
g459
sg64
(lp466
S''
asbasbasbag57
(g73
g59
NtRp467
(dp468
g62
(dp469
sg71
g358
sg64
(lp470
g57
(g78
g59
NtRp471
(dp472
g62
(dp473
g82
g83
ssg71
g467
sg64
(lp474
S'path'
p475
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
g89
g90
ssg71
g467
sg64
(lp479
S':'
asbag57
(g78
g59
NtRp480
(dp481
g62
(dp482
sg71
g467
sg64
(lp483
g57
(g58
g59
NtRp484
(dp485
g62
(dp486
g70
I3
ssg71
g480
sg64
(lp487
S''
asbasbasbag57
(g73
g59
NtRp488
(dp489
g62
(dp490
sg71
g358
sg64
(lp491
g57
(g78
g59
NtRp492
(dp493
g62
(dp494
g82
g83
ssg71
g488
sg64
(lp495
S'secure'
p496
asbag57
(g78
g59
NtRp497
(dp498
g62
(dp499
g89
g90
ssg71
g488
sg64
(lp500
S':'
asbag57
(g78
g59
NtRp501
(dp502
g62
(dp503
sg71
g488
sg64
(lp504
g57
(g58
g59
NtRp505
(dp506
g62
(dp507
g70
I3
ssg71
g501
sg64
(lp508
S''
asbasbasbag57
(g73
g59
NtRp509
(dp510
g62
(dp511
sg71
g358
sg64
(lp512
g57
(g78
g59
NtRp513
(dp514
g62
(dp515
g82
g83
ssg71
g509
sg64
(lp516
S'version'
p517
asbag57
(g78
g59
NtRp518
(dp519
g62
(dp520
g89
g90
ssg71
g509
sg64
(lp521
S':'
asbag57
(g78
g59
NtRp522
(dp523
g62
(dp524
sg71
g509
sg64
(lp525
g57
(g58
g59
NtRp526
(dp527
g62
(dp528
g70
I3
ssg71
g522
sg64
(lp529
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp530
(dp531
g62
(dp532
sg71
g332
sg64
(lp533
g57
(g78
g59
NtRp534
(dp535
g62
(dp536
g82
g83
ssg71
g530
sg64
(lp537
S'session_id_dev_bootstrap_ch'
p538
asbag57
(g78
g59
NtRp539
(dp540
g62
(dp541
g89
g90
ssg71
g530
sg64
(lp542
S':'
asbag57
(g78
g59
NtRp543
(dp544
g62
(dp545
sg71
g530
sg64
(lp546
g57
(g58
g59
NtRp547
(dp548
g62
(dp549
g70
I4
ssg71
g543
sg64
(lp550
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p551
ag57
(g66
g59
NtRp552
(dp553
g62
(dp554
g70
I3
ssg71
Nsg64
(lp555
g57
(g73
g59
NtRp556
(dp557
g62
(dp558
sg71
g552
sg64
(lp559
g57
(g78
g59
NtRp560
(dp561
g62
(dp562
g82
g83
ssg71
g556
sg64
(lp563
g370
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g556
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g556
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I3
ssg71
g568
sg64
(lp575
S''
asbasbasbag57
(g73
g59
NtRp576
(dp577
g62
(dp578
sg71
g552
sg64
(lp579
g57
(g78
g59
NtRp580
(dp581
g62
(dp582
g82
g83
ssg71
g576
sg64
(lp583
g391
asbag57
(g78
g59
NtRp584
(dp585
g62
(dp586
g89
g90
ssg71
g576
sg64
(lp587
S':'
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
sg71
g576
sg64
(lp591
g57
(g58
g59
NtRp592
(dp593
g62
(dp594
g70
I3
ssg71
g588
sg64
(lp595
S''
asbasbasbag57
(g73
g59
NtRp596
(dp597
g62
(dp598
sg71
g552
sg64
(lp599
g57
(g78
g59
NtRp600
(dp601
g62
(dp602
g82
g83
ssg71
g596
sg64
(lp603
g412
asbag57
(g78
g59
NtRp604
(dp605
g62
(dp606
g89
g90
ssg71
g596
sg64
(lp607
S':'
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
sg71
g596
sg64
(lp611
g57
(g58
g59
NtRp612
(dp613
g62
(dp614
g70
I3
ssg71
g608
sg64
(lp615
S''
asbasbasbag57
(g73
g59
NtRp616
(dp617
g62
(dp618
sg71
g552
sg64
(lp619
g57
(g78
g59
NtRp620
(dp621
g62
(dp622
g82
g83
ssg71
g616
sg64
(lp623
g433
asbag57
(g78
g59
NtRp624
(dp625
g62
(dp626
g89
g90
ssg71
g616
sg64
(lp627
S':'
asbag57
(g78
g59
NtRp628
(dp629
g62
(dp630
sg71
g616
sg64
(lp631
g57
(g58
g59
NtRp632
(dp633
g62
(dp634
g70
I3
ssg71
g628
sg64
(lp635
S''
asbasbasbag57
(g73
g59
NtRp636
(dp637
g62
(dp638
sg71
g552
sg64
(lp639
g57
(g78
g59
NtRp640
(dp641
g62
(dp642
g82
g83
ssg71
g636
sg64
(lp643
g454
asbag57
(g78
g59
NtRp644
(dp645
g62
(dp646
g89
g90
ssg71
g636
sg64
(lp647
S':'
asbag57
(g78
g59
NtRp648
(dp649
g62
(dp650
sg71
g636
sg64
(lp651
g57
(g58
g59
NtRp652
(dp653
g62
(dp654
g70
I3
ssg71
g648
sg64
(lp655
S''
asbasbasbag57
(g73
g59
NtRp656
(dp657
g62
(dp658
sg71
g552
sg64
(lp659
g57
(g78
g59
NtRp660
(dp661
g62
(dp662
g82
g83
ssg71
g656
sg64
(lp663
g475
asbag57
(g78
g59
NtRp664
(dp665
g62
(dp666
g89
g90
ssg71
g656
sg64
(lp667
S':'
asbag57
(g78
g59
NtRp668
(dp669
g62
(dp670
sg71
g656
sg64
(lp671
g57
(g58
g59
NtRp672
(dp673
g62
(dp674
g70
I3
ssg71
g668
sg64
(lp675
S''
asbasbasbag57
(g73
g59
NtRp676
(dp677
g62
(dp678
sg71
g552
sg64
(lp679
g57
(g78
g59
NtRp680
(dp681
g62
(dp682
g82
g83
ssg71
g676
sg64
(lp683
g496
asbag57
(g78
g59
NtRp684
(dp685
g62
(dp686
g89
g90
ssg71
g676
sg64
(lp687
S':'
asbag57
(g78
g59
NtRp688
(dp689
g62
(dp690
sg71
g676
sg64
(lp691
g57
(g58
g59
NtRp692
(dp693
g62
(dp694
g70
I3
ssg71
g688
sg64
(lp695
S''
asbasbasbag57
(g73
g59
NtRp696
(dp697
g62
(dp698
sg71
g552
sg64
(lp699
g57
(g78
g59
NtRp700
(dp701
g62
(dp702
g82
g83
ssg71
g696
sg64
(lp703
g517
asbag57
(g78
g59
NtRp704
(dp705
g62
(dp706
g89
g90
ssg71
g696
sg64
(lp707
S':'
asbag57
(g78
g59
NtRp708
(dp709
g62
(dp710
sg71
g696
sg64
(lp711
g57
(g58
g59
NtRp712
(dp713
g62
(dp714
g70
I3
ssg71
g708
sg64
(lp715
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp716
(dp717
g62
(dp718
sg71
g67
sg64
(lp719
g57
(g78
g59
NtRp720
(dp721
g62
(dp722
g82
g83
ssg71
g716
sg64
(lp723
S'env'
p724
asbag57
(g78
g59
NtRp725
(dp726
g62
(dp727
g89
g90
ssg71
g716
sg64
(lp728
S':'
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
sg71
g716
sg64
(lp732
g57
(g58
g59
NtRp733
(dp734
g62
(dp735
g70
I5
ssg71
g729
sg64
(lp736
g57
(g66
g59
NtRp737
(dp738
g62
(dp739
g70
I4
ssg71
Nsg64
(lp740
g57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g737
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
S'app_folders'
p749
asbag57
(g78
g59
NtRp750
(dp751
g62
(dp752
g89
g90
ssg71
g741
sg64
(lp753
S':'
asbag57
(g78
g59
NtRp754
(dp755
g62
(dp756
sg71
g741
sg64
(lp757
g57
(g58
g59
NtRp758
(dp759
g62
(dp760
g70
I4
ssg71
g754
sg64
(lp761
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p762
asbasbasbag57
(g73
g59
NtRp763
(dp764
g62
(dp765
sg71
g737
sg64
(lp766
g57
(g78
g59
NtRp767
(dp768
g62
(dp769
g82
g83
ssg71
g763
sg64
(lp770
S'applications_parent'
p771
asbag57
(g78
g59
NtRp772
(dp773
g62
(dp774
g89
g90
ssg71
g763
sg64
(lp775
S':'
asbag57
(g78
g59
NtRp776
(dp777
g62
(dp778
sg71
g763
sg64
(lp779
g57
(g58
g59
NtRp780
(dp781
g62
(dp782
g70
I4
ssg71
g776
sg64
(lp783
S'/home/anil/bootstrap/web2py'
p784
asbasbasbag57
(g73
g59
NtRp785
(dp786
g62
(dp787
sg71
g737
sg64
(lp788
g57
(g78
g59
NtRp789
(dp790
g62
(dp791
g82
g83
ssg71
g785
sg64
(lp792
S'cmd_args'
p793
asbag57
(g78
g59
NtRp794
(dp795
g62
(dp796
g89
g90
ssg71
g785
sg64
(lp797
S':'
asbag57
(g78
g59
NtRp798
(dp799
g62
(dp800
sg71
g785
sg64
(lp801
g57
(g58
g59
NtRp802
(dp803
g62
(dp804
g70
I4
ssg71
g798
sg64
(lp805
g57
(g66
g59
NtRp806
(dp807
g62
(dp808
g70
I3
ssg71
Nsg64
(lp809
sbasbasbasbag57
(g73
g59
NtRp810
(dp811
g62
(dp812
sg71
g737
sg64
(lp813
g57
(g78
g59
NtRp814
(dp815
g62
(dp816
g82
g83
ssg71
g810
sg64
(lp817
S'cmd_options'
p818
asbag57
(g78
g59
NtRp819
(dp820
g62
(dp821
g89
g90
ssg71
g810
sg64
(lp822
S':'
asbag57
(g78
g59
NtRp823
(dp824
g62
(dp825
sg71
g810
sg64
(lp826
g57
(g58
g59
NtRp827
(dp828
g62
(dp829
g70
I4
ssg71
g823
sg64
(lp830
S"<Values at 0xa42eeac: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p831
asbasbasbag57
(g73
g59
NtRp832
(dp833
g62
(dp834
sg71
g737
sg64
(lp835
g57
(g78
g59
NtRp836
(dp837
g62
(dp838
g82
g83
ssg71
g832
sg64
(lp839
S'db_sessions'
p840
asbag57
(g78
g59
NtRp841
(dp842
g62
(dp843
g89
g90
ssg71
g832
sg64
(lp844
S':'
asbag57
(g78
g59
NtRp845
(dp846
g62
(dp847
sg71
g832
sg64
(lp848
g57
(g58
g59
NtRp849
(dp850
g62
(dp851
g70
I4
ssg71
g845
sg64
(lp852
S'set([])'
p853
asbasbasbag57
(g73
g59
NtRp854
(dp855
g62
(dp856
sg71
g737
sg64
(lp857
g57
(g78
g59
NtRp858
(dp859
g62
(dp860
g82
g83
ssg71
g854
sg64
(lp861
S'debugging'
p862
asbag57
(g78
g59
NtRp863
(dp864
g62
(dp865
g89
g90
ssg71
g854
sg64
(lp866
S':'
asbag57
(g78
g59
NtRp867
(dp868
g62
(dp869
sg71
g854
sg64
(lp870
g57
(g58
g59
NtRp871
(dp872
g62
(dp873
g70
I4
ssg71
g867
sg64
(lp874
g100
asbasbasbag57
(g73
g59
NtRp875
(dp876
g62
(dp877
sg71
g737
sg64
(lp878
g57
(g78
g59
NtRp879
(dp880
g62
(dp881
g82
g83
ssg71
g875
sg64
(lp882
S'gluon_parent'
p883
asbag57
(g78
g59
NtRp884
(dp885
g62
(dp886
g89
g90
ssg71
g875
sg64
(lp887
S':'
asbag57
(g78
g59
NtRp888
(dp889
g62
(dp890
sg71
g875
sg64
(lp891
g57
(g58
g59
NtRp892
(dp893
g62
(dp894
g70
I4
ssg71
g888
sg64
(lp895
S'/home/anil/bootstrap/web2py'
p896
asbasbasbag57
(g73
g59
NtRp897
(dp898
g62
(dp899
sg71
g737
sg64
(lp900
g57
(g78
g59
NtRp901
(dp902
g62
(dp903
g82
g83
ssg71
g897
sg64
(lp904
S'http_accept'
p905
asbag57
(g78
g59
NtRp906
(dp907
g62
(dp908
g89
g90
ssg71
g897
sg64
(lp909
S':'
asbag57
(g78
g59
NtRp910
(dp911
g62
(dp912
sg71
g897
sg64
(lp913
g57
(g58
g59
NtRp914
(dp915
g62
(dp916
g70
I4
ssg71
g910
sg64
(lp917
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p918
asbasbasbag57
(g73
g59
NtRp919
(dp920
g62
(dp921
sg71
g737
sg64
(lp922
g57
(g78
g59
NtRp923
(dp924
g62
(dp925
g82
g83
ssg71
g919
sg64
(lp926
S'http_accept_charset'
p927
asbag57
(g78
g59
NtRp928
(dp929
g62
(dp930
g89
g90
ssg71
g919
sg64
(lp931
S':'
asbag57
(g78
g59
NtRp932
(dp933
g62
(dp934
sg71
g919
sg64
(lp935
g57
(g58
g59
NtRp936
(dp937
g62
(dp938
g70
I4
ssg71
g932
sg64
(lp939
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p940
asbasbasbag57
(g73
g59
NtRp941
(dp942
g62
(dp943
sg71
g737
sg64
(lp944
g57
(g78
g59
NtRp945
(dp946
g62
(dp947
g82
g83
ssg71
g941
sg64
(lp948
S'http_accept_encoding'
p949
asbag57
(g78
g59
NtRp950
(dp951
g62
(dp952
g89
g90
ssg71
g941
sg64
(lp953
S':'
asbag57
(g78
g59
NtRp954
(dp955
g62
(dp956
sg71
g941
sg64
(lp957
g57
(g58
g59
NtRp958
(dp959
g62
(dp960
g70
I4
ssg71
g954
sg64
(lp961
S'gzip,deflate,sdch'
p962
asbasbasbag57
(g73
g59
NtRp963
(dp964
g62
(dp965
sg71
g737
sg64
(lp966
g57
(g78
g59
NtRp967
(dp968
g62
(dp969
g82
g83
ssg71
g963
sg64
(lp970
S'http_accept_language'
p971
asbag57
(g78
g59
NtRp972
(dp973
g62
(dp974
g89
g90
ssg71
g963
sg64
(lp975
S':'
asbag57
(g78
g59
NtRp976
(dp977
g62
(dp978
sg71
g963
sg64
(lp979
g57
(g58
g59
NtRp980
(dp981
g62
(dp982
g70
I4
ssg71
g976
sg64
(lp983
S'en-US,en;q=0.8'
p984
asbasbasbag57
(g73
g59
NtRp985
(dp986
g62
(dp987
sg71
g737
sg64
(lp988
g57
(g78
g59
NtRp989
(dp990
g62
(dp991
g82
g83
ssg71
g985
sg64
(lp992
S'http_connection'
p993
asbag57
(g78
g59
NtRp994
(dp995
g62
(dp996
g89
g90
ssg71
g985
sg64
(lp997
S':'
asbag57
(g78
g59
NtRp998
(dp999
g62
(dp1000
sg71
g985
sg64
(lp1001
g57
(g58
g59
NtRp1002
(dp1003
g62
(dp1004
g70
I4
ssg71
g998
sg64
(lp1005
S'keep-alive'
p1006
asbasbasbag57
(g73
g59
NtRp1007
(dp1008
g62
(dp1009
sg71
g737
sg64
(lp1010
g57
(g78
g59
NtRp1011
(dp1012
g62
(dp1013
g82
g83
ssg71
g1007
sg64
(lp1014
S'http_cookie'
p1015
asbag57
(g78
g59
NtRp1016
(dp1017
g62
(dp1018
g89
g90
ssg71
g1007
sg64
(lp1019
S':'
asbag57
(g78
g59
NtRp1020
(dp1021
g62
(dp1022
sg71
g1007
sg64
(lp1023
g57
(g58
g59
NtRp1024
(dp1025
g62
(dp1026
g70
I4
ssg71
g1020
sg64
(lp1027
S'session_id_admin=127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1028
asbasbasbag57
(g73
g59
NtRp1029
(dp1030
g62
(dp1031
sg71
g737
sg64
(lp1032
g57
(g78
g59
NtRp1033
(dp1034
g62
(dp1035
g82
g83
ssg71
g1029
sg64
(lp1036
S'http_host'
p1037
asbag57
(g78
g59
NtRp1038
(dp1039
g62
(dp1040
g89
g90
ssg71
g1029
sg64
(lp1041
S':'
asbag57
(g78
g59
NtRp1042
(dp1043
g62
(dp1044
sg71
g1029
sg64
(lp1045
g57
(g58
g59
NtRp1046
(dp1047
g62
(dp1048
g70
I4
ssg71
g1042
sg64
(lp1049
S'127.0.0.1:8000'
p1050
asbasbasbag57
(g73
g59
NtRp1051
(dp1052
g62
(dp1053
sg71
g737
sg64
(lp1054
g57
(g78
g59
NtRp1055
(dp1056
g62
(dp1057
g82
g83
ssg71
g1051
sg64
(lp1058
S'http_referer'
p1059
asbag57
(g78
g59
NtRp1060
(dp1061
g62
(dp1062
g89
g90
ssg71
g1051
sg64
(lp1063
S':'
asbag57
(g78
g59
NtRp1064
(dp1065
g62
(dp1066
sg71
g1051
sg64
(lp1067
g57
(g58
g59
NtRp1068
(dp1069
g62
(dp1070
g70
I4
ssg71
g1064
sg64
(lp1071
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3/sample.experiment/2'
p1072
asbasbasbag57
(g73
g59
NtRp1073
(dp1074
g62
(dp1075
sg71
g737
sg64
(lp1076
g57
(g78
g59
NtRp1077
(dp1078
g62
(dp1079
g82
g83
ssg71
g1073
sg64
(lp1080
S'http_user_agent'
p1081
asbag57
(g78
g59
NtRp1082
(dp1083
g62
(dp1084
g89
g90
ssg71
g1073
sg64
(lp1085
S':'
asbag57
(g78
g59
NtRp1086
(dp1087
g62
(dp1088
sg71
g1073
sg64
(lp1089
g57
(g58
g59
NtRp1090
(dp1091
g62
(dp1092
g70
I4
ssg71
g1086
sg64
(lp1093
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1094
asbasbasbag57
(g73
g59
NtRp1095
(dp1096
g62
(dp1097
sg71
g737
sg64
(lp1098
g57
(g78
g59
NtRp1099
(dp1100
g62
(dp1101
g82
g83
ssg71
g1095
sg64
(lp1102
S'is_jython'
p1103
asbag57
(g78
g59
NtRp1104
(dp1105
g62
(dp1106
g89
g90
ssg71
g1095
sg64
(lp1107
S':'
asbag57
(g78
g59
NtRp1108
(dp1109
g62
(dp1110
sg71
g1095
sg64
(lp1111
g57
(g58
g59
NtRp1112
(dp1113
g62
(dp1114
g70
I4
ssg71
g1108
sg64
(lp1115
g100
asbasbasbag57
(g73
g59
NtRp1116
(dp1117
g62
(dp1118
sg71
g737
sg64
(lp1119
g57
(g78
g59
NtRp1120
(dp1121
g62
(dp1122
g82
g83
ssg71
g1116
sg64
(lp1123
S'is_pypy'
p1124
asbag57
(g78
g59
NtRp1125
(dp1126
g62
(dp1127
g89
g90
ssg71
g1116
sg64
(lp1128
S':'
asbag57
(g78
g59
NtRp1129
(dp1130
g62
(dp1131
sg71
g1116
sg64
(lp1132
g57
(g58
g59
NtRp1133
(dp1134
g62
(dp1135
g70
I4
ssg71
g1129
sg64
(lp1136
g100
asbasbasbag57
(g73
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g737
sg64
(lp1140
g57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
g82
g83
ssg71
g1137
sg64
(lp1144
S'local_hosts'
p1145
asbag57
(g78
g59
NtRp1146
(dp1147
g62
(dp1148
g89
g90
ssg71
g1137
sg64
(lp1149
S':'
asbag57
(g78
g59
NtRp1150
(dp1151
g62
(dp1152
sg71
g1137
sg64
(lp1153
g57
(g58
g59
NtRp1154
(dp1155
g62
(dp1156
g70
I4
ssg71
g1150
sg64
(lp1157
g57
(g66
g59
NtRp1158
(dp1159
g62
(dp1160
g70
I3
ssg71
Nsg64
(lp1161
g57
(g73
g59
NtRp1162
(dp1163
g62
(dp1164
sg71
g1158
sg64
(lp1165
g57
(g78
g59
NtRp1166
(dp1167
g62
(dp1168
sg71
g1162
sg64
(lp1169
g57
(g58
g59
NtRp1170
(dp1171
g62
(dp1172
g70
I3
ssg71
g1166
sg64
(lp1173
S'::1'
p1174
asbasbasbag57
(g73
g59
NtRp1175
(dp1176
g62
(dp1177
sg71
g1158
sg64
(lp1178
g57
(g78
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g1175
sg64
(lp1182
g57
(g58
g59
NtRp1183
(dp1184
g62
(dp1185
g70
I3
ssg71
g1179
sg64
(lp1186
S'127.0.1.1'
p1187
asbasbasbag57
(g73
g59
NtRp1188
(dp1189
g62
(dp1190
sg71
g1158
sg64
(lp1191
g57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1188
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I3
ssg71
g1192
sg64
(lp1199
S'::ffff:127.0.0.1'
p1200
asbasbasbag57
(g73
g59
NtRp1201
(dp1202
g62
(dp1203
sg71
g1158
sg64
(lp1204
g57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
sg71
g1201
sg64
(lp1208
g57
(g58
g59
NtRp1209
(dp1210
g62
(dp1211
g70
I3
ssg71
g1205
sg64
(lp1212
S'127.0.0.1'
p1213
asbasbasbag57
(g73
g59
NtRp1214
(dp1215
g62
(dp1216
sg71
g1158
sg64
(lp1217
g57
(g78
g59
NtRp1218
(dp1219
g62
(dp1220
sg71
g1214
sg64
(lp1221
g57
(g58
g59
NtRp1222
(dp1223
g62
(dp1224
g70
I3
ssg71
g1218
sg64
(lp1225
S'anil-Inspiron-1525'
p1226
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1227
(dp1228
g62
(dp1229
sg71
g737
sg64
(lp1230
g57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g82
g83
ssg71
g1227
sg64
(lp1234
S'path_info'
p1235
asbag57
(g78
g59
NtRp1236
(dp1237
g62
(dp1238
g89
g90
ssg71
g1227
sg64
(lp1239
S':'
asbag57
(g78
g59
NtRp1240
(dp1241
g62
(dp1242
sg71
g1227
sg64
(lp1243
g57
(g58
g59
NtRp1244
(dp1245
g62
(dp1246
g70
I4
ssg71
g1240
sg64
(lp1247
S'/DEV_bootstrap_ch/default/duplicate/project/experiment.project/3/sample.experiment/2/11'
p1248
asbasbasbag57
(g73
g59
NtRp1249
(dp1250
g62
(dp1251
sg71
g737
sg64
(lp1252
g57
(g78
g59
NtRp1253
(dp1254
g62
(dp1255
g82
g83
ssg71
g1249
sg64
(lp1256
S'query_string'
p1257
asbag57
(g78
g59
NtRp1258
(dp1259
g62
(dp1260
g89
g90
ssg71
g1249
sg64
(lp1261
S':'
asbag57
(g78
g59
NtRp1262
(dp1263
g62
(dp1264
sg71
g1249
sg64
(lp1265
g57
(g58
g59
NtRp1266
(dp1267
g62
(dp1268
g70
I4
ssg71
g1262
sg64
(lp1269
S''
asbasbasbag57
(g73
g59
NtRp1270
(dp1271
g62
(dp1272
sg71
g737
sg64
(lp1273
g57
(g78
g59
NtRp1274
(dp1275
g62
(dp1276
g82
g83
ssg71
g1270
sg64
(lp1277
S'remote_addr'
p1278
asbag57
(g78
g59
NtRp1279
(dp1280
g62
(dp1281
g89
g90
ssg71
g1270
sg64
(lp1282
S':'
asbag57
(g78
g59
NtRp1283
(dp1284
g62
(dp1285
sg71
g1270
sg64
(lp1286
g57
(g58
g59
NtRp1287
(dp1288
g62
(dp1289
g70
I4
ssg71
g1283
sg64
(lp1290
g288
asbasbasbag57
(g73
g59
NtRp1291
(dp1292
g62
(dp1293
sg71
g737
sg64
(lp1294
g57
(g78
g59
NtRp1295
(dp1296
g62
(dp1297
g82
g83
ssg71
g1291
sg64
(lp1298
S'remote_port'
p1299
asbag57
(g78
g59
NtRp1300
(dp1301
g62
(dp1302
g89
g90
ssg71
g1291
sg64
(lp1303
S':'
asbag57
(g78
g59
NtRp1304
(dp1305
g62
(dp1306
sg71
g1291
sg64
(lp1307
g57
(g58
g59
NtRp1308
(dp1309
g62
(dp1310
g70
I4
ssg71
g1304
sg64
(lp1311
S'59034'
p1312
asbasbasbag57
(g73
g59
NtRp1313
(dp1314
g62
(dp1315
sg71
g737
sg64
(lp1316
g57
(g78
g59
NtRp1317
(dp1318
g62
(dp1319
g82
g83
ssg71
g1313
sg64
(lp1320
S'request_method'
p1321
asbag57
(g78
g59
NtRp1322
(dp1323
g62
(dp1324
g89
g90
ssg71
g1313
sg64
(lp1325
S':'
asbag57
(g78
g59
NtRp1326
(dp1327
g62
(dp1328
sg71
g1313
sg64
(lp1329
g57
(g58
g59
NtRp1330
(dp1331
g62
(dp1332
g70
I4
ssg71
g1326
sg64
(lp1333
S'GET'
p1334
asbasbasbag57
(g73
g59
NtRp1335
(dp1336
g62
(dp1337
sg71
g737
sg64
(lp1338
g57
(g78
g59
NtRp1339
(dp1340
g62
(dp1341
g82
g83
ssg71
g1335
sg64
(lp1342
S'request_uri'
p1343
asbag57
(g78
g59
NtRp1344
(dp1345
g62
(dp1346
g89
g90
ssg71
g1335
sg64
(lp1347
S':'
asbag57
(g78
g59
NtRp1348
(dp1349
g62
(dp1350
sg71
g1335
sg64
(lp1351
g57
(g58
g59
NtRp1352
(dp1353
g62
(dp1354
g70
I4
ssg71
g1348
sg64
(lp1355
g1248
asbasbasbag57
(g73
g59
NtRp1356
(dp1357
g62
(dp1358
sg71
g737
sg64
(lp1359
g57
(g78
g59
NtRp1360
(dp1361
g62
(dp1362
g82
g83
ssg71
g1356
sg64
(lp1363
S'script_name'
p1364
asbag57
(g78
g59
NtRp1365
(dp1366
g62
(dp1367
g89
g90
ssg71
g1356
sg64
(lp1368
S':'
asbag57
(g78
g59
NtRp1369
(dp1370
g62
(dp1371
sg71
g1356
sg64
(lp1372
g57
(g58
g59
NtRp1373
(dp1374
g62
(dp1375
g70
I4
ssg71
g1369
sg64
(lp1376
S''
asbasbasbag57
(g73
g59
NtRp1377
(dp1378
g62
(dp1379
sg71
g737
sg64
(lp1380
g57
(g78
g59
NtRp1381
(dp1382
g62
(dp1383
g82
g83
ssg71
g1377
sg64
(lp1384
S'server_name'
p1385
asbag57
(g78
g59
NtRp1386
(dp1387
g62
(dp1388
g89
g90
ssg71
g1377
sg64
(lp1389
S':'
asbag57
(g78
g59
NtRp1390
(dp1391
g62
(dp1392
sg71
g1377
sg64
(lp1393
g57
(g58
g59
NtRp1394
(dp1395
g62
(dp1396
g70
I4
ssg71
g1390
sg64
(lp1397
S'anil-Inspiron-1525'
p1398
asbasbasbag57
(g73
g59
NtRp1399
(dp1400
g62
(dp1401
sg71
g737
sg64
(lp1402
g57
(g78
g59
NtRp1403
(dp1404
g62
(dp1405
g82
g83
ssg71
g1399
sg64
(lp1406
S'server_port'
p1407
asbag57
(g78
g59
NtRp1408
(dp1409
g62
(dp1410
g89
g90
ssg71
g1399
sg64
(lp1411
S':'
asbag57
(g78
g59
NtRp1412
(dp1413
g62
(dp1414
sg71
g1399
sg64
(lp1415
g57
(g58
g59
NtRp1416
(dp1417
g62
(dp1418
g70
I4
ssg71
g1412
sg64
(lp1419
S'8000'
p1420
asbasbasbag57
(g73
g59
NtRp1421
(dp1422
g62
(dp1423
sg71
g737
sg64
(lp1424
g57
(g78
g59
NtRp1425
(dp1426
g62
(dp1427
g82
g83
ssg71
g1421
sg64
(lp1428
S'server_protocol'
p1429
asbag57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
g89
g90
ssg71
g1421
sg64
(lp1433
S':'
asbag57
(g78
g59
NtRp1434
(dp1435
g62
(dp1436
sg71
g1421
sg64
(lp1437
g57
(g58
g59
NtRp1438
(dp1439
g62
(dp1440
g70
I4
ssg71
g1434
sg64
(lp1441
S'HTTP/1.1'
p1442
asbasbasbag57
(g73
g59
NtRp1443
(dp1444
g62
(dp1445
sg71
g737
sg64
(lp1446
g57
(g78
g59
NtRp1447
(dp1448
g62
(dp1449
g82
g83
ssg71
g1443
sg64
(lp1450
S'server_software'
p1451
asbag57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
g89
g90
ssg71
g1443
sg64
(lp1455
S':'
asbag57
(g78
g59
NtRp1456
(dp1457
g62
(dp1458
sg71
g1443
sg64
(lp1459
g57
(g58
g59
NtRp1460
(dp1461
g62
(dp1462
g70
I4
ssg71
g1456
sg64
(lp1463
S'Rocket 1.2.6'
p1464
asbasbasbag57
(g73
g59
NtRp1465
(dp1466
g62
(dp1467
sg71
g737
sg64
(lp1468
g57
(g78
g59
NtRp1469
(dp1470
g62
(dp1471
g82
g83
ssg71
g1465
sg64
(lp1472
S'web2py_path'
p1473
asbag57
(g78
g59
NtRp1474
(dp1475
g62
(dp1476
g89
g90
ssg71
g1465
sg64
(lp1477
S':'
asbag57
(g78
g59
NtRp1478
(dp1479
g62
(dp1480
sg71
g1465
sg64
(lp1481
g57
(g58
g59
NtRp1482
(dp1483
g62
(dp1484
g70
I4
ssg71
g1478
sg64
(lp1485
g784
asbasbasbag57
(g73
g59
NtRp1486
(dp1487
g62
(dp1488
sg71
g737
sg64
(lp1489
g57
(g78
g59
NtRp1490
(dp1491
g62
(dp1492
g82
g83
ssg71
g1486
sg64
(lp1493
S'web2py_version'
p1494
asbag57
(g78
g59
NtRp1495
(dp1496
g62
(dp1497
g89
g90
ssg71
g1486
sg64
(lp1498
S':'
asbag57
(g78
g59
NtRp1499
(dp1500
g62
(dp1501
sg71
g1486
sg64
(lp1502
g57
(g58
g59
NtRp1503
(dp1504
g62
(dp1505
g70
I4
ssg71
g1499
sg64
(lp1506
g57
(g66
g59
NtRp1507
(dp1508
g62
(dp1509
g70
I3
ssg71
Nsg64
(lp1510
g57
(g73
g59
NtRp1511
(dp1512
g62
(dp1513
sg71
g1507
sg64
(lp1514
g57
(g78
g59
NtRp1515
(dp1516
g62
(dp1517
sg71
g1511
sg64
(lp1518
g57
(g58
g59
NtRp1519
(dp1520
g62
(dp1521
g70
I3
ssg71
g1515
sg64
(lp1522
S'2'
asbasbasbag57
(g73
g59
NtRp1523
(dp1524
g62
(dp1525
sg71
g1507
sg64
(lp1526
g57
(g78
g59
NtRp1527
(dp1528
g62
(dp1529
sg71
g1523
sg64
(lp1530
g57
(g58
g59
NtRp1531
(dp1532
g62
(dp1533
g70
I3
ssg71
g1527
sg64
(lp1534
S'3'
asbasbasbag57
(g73
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g1507
sg64
(lp1538
g57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1535
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I3
ssg71
g1539
sg64
(lp1546
S'2'
asbasbasbag57
(g73
g59
NtRp1547
(dp1548
g62
(dp1549
sg71
g1507
sg64
(lp1550
g57
(g78
g59
NtRp1551
(dp1552
g62
(dp1553
sg71
g1547
sg64
(lp1554
g57
(g58
g59
NtRp1555
(dp1556
g62
(dp1557
g70
I3
ssg71
g1551
sg64
(lp1558
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1559
asbasbasbag57
(g73
g59
NtRp1560
(dp1561
g62
(dp1562
sg71
g1507
sg64
(lp1563
g57
(g78
g59
NtRp1564
(dp1565
g62
(dp1566
sg71
g1560
sg64
(lp1567
g57
(g58
g59
NtRp1568
(dp1569
g62
(dp1570
g70
I3
ssg71
g1564
sg64
(lp1571
S'stable'
p1572
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1573
(dp1574
g62
(dp1575
sg71
g737
sg64
(lp1576
g57
(g78
g59
NtRp1577
(dp1578
g62
(dp1579
g82
g83
ssg71
g1573
sg64
(lp1580
S'wsgi_errors'
p1581
asbag57
(g78
g59
NtRp1582
(dp1583
g62
(dp1584
g89
g90
ssg71
g1573
sg64
(lp1585
S':'
asbag57
(g78
g59
NtRp1586
(dp1587
g62
(dp1588
sg71
g1573
sg64
(lp1589
g57
(g58
g59
NtRp1590
(dp1591
g62
(dp1592
g70
I4
ssg71
g1586
sg64
(lp1593
S"<open file '<stderr>', mode 'w' at 0xb72b20d0>"
p1594
asbasbasbag57
(g73
g59
NtRp1595
(dp1596
g62
(dp1597
sg71
g737
sg64
(lp1598
g57
(g78
g59
NtRp1599
(dp1600
g62
(dp1601
g82
g83
ssg71
g1595
sg64
(lp1602
S'wsgi_file_wrapper'
p1603
asbag57
(g78
g59
NtRp1604
(dp1605
g62
(dp1606
g89
g90
ssg71
g1595
sg64
(lp1607
S':'
asbag57
(g78
g59
NtRp1608
(dp1609
g62
(dp1610
sg71
g1595
sg64
(lp1611
g57
(g58
g59
NtRp1612
(dp1613
g62
(dp1614
g70
I4
ssg71
g1608
sg64
(lp1615
S'<class wsgiref.util.FileWrapper at 0xa3b7bcc>'
p1616
asbasbasbag57
(g73
g59
NtRp1617
(dp1618
g62
(dp1619
sg71
g737
sg64
(lp1620
g57
(g78
g59
NtRp1621
(dp1622
g62
(dp1623
g82
g83
ssg71
g1617
sg64
(lp1624
S'wsgi_input'
p1625
asbag57
(g78
g59
NtRp1626
(dp1627
g62
(dp1628
g89
g90
ssg71
g1617
sg64
(lp1629
S':'
asbag57
(g78
g59
NtRp1630
(dp1631
g62
(dp1632
sg71
g1617
sg64
(lp1633
g57
(g58
g59
NtRp1634
(dp1635
g62
(dp1636
g70
I4
ssg71
g1630
sg64
(lp1637
S'<socket._fileobject object at 0xad8ab82c>'
p1638
asbasbasbag57
(g73
g59
NtRp1639
(dp1640
g62
(dp1641
sg71
g737
sg64
(lp1642
g57
(g78
g59
NtRp1643
(dp1644
g62
(dp1645
g82
g83
ssg71
g1639
sg64
(lp1646
S'wsgi_multiprocess'
p1647
asbag57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
g89
g90
ssg71
g1639
sg64
(lp1651
S':'
asbag57
(g78
g59
NtRp1652
(dp1653
g62
(dp1654
sg71
g1639
sg64
(lp1655
g57
(g58
g59
NtRp1656
(dp1657
g62
(dp1658
g70
I4
ssg71
g1652
sg64
(lp1659
g100
asbasbasbag57
(g73
g59
NtRp1660
(dp1661
g62
(dp1662
sg71
g737
sg64
(lp1663
g57
(g78
g59
NtRp1664
(dp1665
g62
(dp1666
g82
g83
ssg71
g1660
sg64
(lp1667
S'wsgi_multithread'
p1668
asbag57
(g78
g59
NtRp1669
(dp1670
g62
(dp1671
g89
g90
ssg71
g1660
sg64
(lp1672
S':'
asbag57
(g78
g59
NtRp1673
(dp1674
g62
(dp1675
sg71
g1660
sg64
(lp1676
g57
(g58
g59
NtRp1677
(dp1678
g62
(dp1679
g70
I4
ssg71
g1673
sg64
(lp1680
S'True'
p1681
asbasbasbag57
(g73
g59
NtRp1682
(dp1683
g62
(dp1684
sg71
g737
sg64
(lp1685
g57
(g78
g59
NtRp1686
(dp1687
g62
(dp1688
g82
g83
ssg71
g1682
sg64
(lp1689
S'wsgi_run_once'
p1690
asbag57
(g78
g59
NtRp1691
(dp1692
g62
(dp1693
g89
g90
ssg71
g1682
sg64
(lp1694
S':'
asbag57
(g78
g59
NtRp1695
(dp1696
g62
(dp1697
sg71
g1682
sg64
(lp1698
g57
(g58
g59
NtRp1699
(dp1700
g62
(dp1701
g70
I4
ssg71
g1695
sg64
(lp1702
g100
asbasbasbag57
(g73
g59
NtRp1703
(dp1704
g62
(dp1705
sg71
g737
sg64
(lp1706
g57
(g78
g59
NtRp1707
(dp1708
g62
(dp1709
g82
g83
ssg71
g1703
sg64
(lp1710
S'wsgi_url_scheme'
p1711
asbag57
(g78
g59
NtRp1712
(dp1713
g62
(dp1714
g89
g90
ssg71
g1703
sg64
(lp1715
S':'
asbag57
(g78
g59
NtRp1716
(dp1717
g62
(dp1718
sg71
g1703
sg64
(lp1719
g57
(g58
g59
NtRp1720
(dp1721
g62
(dp1722
g70
I4
ssg71
g1716
sg64
(lp1723
S'http'
p1724
asbasbasbag57
(g73
g59
NtRp1725
(dp1726
g62
(dp1727
sg71
g737
sg64
(lp1728
g57
(g78
g59
NtRp1729
(dp1730
g62
(dp1731
g82
g83
ssg71
g1725
sg64
(lp1732
S'wsgi_version'
p1733
asbag57
(g78
g59
NtRp1734
(dp1735
g62
(dp1736
g89
g90
ssg71
g1725
sg64
(lp1737
S':'
asbag57
(g78
g59
NtRp1738
(dp1739
g62
(dp1740
sg71
g1725
sg64
(lp1741
g57
(g58
g59
NtRp1742
(dp1743
g62
(dp1744
g70
I4
ssg71
g1738
sg64
(lp1745
g57
(g66
g59
NtRp1746
(dp1747
g62
(dp1748
g70
I3
ssg71
Nsg64
(lp1749
g57
(g73
g59
NtRp1750
(dp1751
g62
(dp1752
sg71
g1746
sg64
(lp1753
g57
(g78
g59
NtRp1754
(dp1755
g62
(dp1756
sg71
g1750
sg64
(lp1757
g57
(g58
g59
NtRp1758
(dp1759
g62
(dp1760
g70
I3
ssg71
g1754
sg64
(lp1761
S'1'
asbasbasbag57
(g73
g59
NtRp1762
(dp1763
g62
(dp1764
sg71
g1746
sg64
(lp1765
g57
(g78
g59
NtRp1766
(dp1767
g62
(dp1768
sg71
g1762
sg64
(lp1769
g57
(g58
g59
NtRp1770
(dp1771
g62
(dp1772
g70
I3
ssg71
g1766
sg64
(lp1773
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1774
(dp1775
g62
(dp1776
sg71
g67
sg64
(lp1777
g57
(g78
g59
NtRp1778
(dp1779
g62
(dp1780
g82
g83
ssg71
g1774
sg64
(lp1781
S'extension'
p1782
asbag57
(g78
g59
NtRp1783
(dp1784
g62
(dp1785
g89
g90
ssg71
g1774
sg64
(lp1786
S':'
asbag57
(g78
g59
NtRp1787
(dp1788
g62
(dp1789
sg71
g1774
sg64
(lp1790
g57
(g58
g59
NtRp1791
(dp1792
g62
(dp1793
g70
I5
ssg71
g1787
sg64
(lp1794
S'html'
p1795
asbasbasbag57
(g73
g59
NtRp1796
(dp1797
g62
(dp1798
sg71
g67
sg64
(lp1799
g57
(g78
g59
NtRp1800
(dp1801
g62
(dp1802
g82
g83
ssg71
g1796
sg64
(lp1803
S'folder'
p1804
asbag57
(g78
g59
NtRp1805
(dp1806
g62
(dp1807
g89
g90
ssg71
g1796
sg64
(lp1808
S':'
asbag57
(g78
g59
NtRp1809
(dp1810
g62
(dp1811
sg71
g1796
sg64
(lp1812
g57
(g58
g59
NtRp1813
(dp1814
g62
(dp1815
g70
I5
ssg71
g1809
sg64
(lp1816
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1817
asbasbasbag57
(g73
g59
NtRp1818
(dp1819
g62
(dp1820
sg71
g67
sg64
(lp1821
g57
(g78
g59
NtRp1822
(dp1823
g62
(dp1824
g82
g83
ssg71
g1818
sg64
(lp1825
S'function'
p1826
asbag57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
g89
g90
ssg71
g1818
sg64
(lp1830
S':'
asbag57
(g78
g59
NtRp1831
(dp1832
g62
(dp1833
sg71
g1818
sg64
(lp1834
g57
(g58
g59
NtRp1835
(dp1836
g62
(dp1837
g70
I5
ssg71
g1831
sg64
(lp1838
S'duplicate'
p1839
asbasbasbag57
(g73
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g67
sg64
(lp1843
g57
(g78
g59
NtRp1844
(dp1845
g62
(dp1846
g82
g83
ssg71
g1840
sg64
(lp1847
S'get_vars'
p1848
asbag57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
g89
g90
ssg71
g1840
sg64
(lp1852
S':'
asbag57
(g78
g59
NtRp1853
(dp1854
g62
(dp1855
sg71
g1840
sg64
(lp1856
g57
(g58
g59
NtRp1857
(dp1858
g62
(dp1859
g70
I5
ssg71
g1853
sg64
(lp1860
g57
(g66
g59
NtRp1861
(dp1862
g62
(dp1863
g70
I4
ssg71
Nsg64
(lp1864
sbasbasbasbag57
(g73
g59
NtRp1865
(dp1866
g62
(dp1867
sg71
g67
sg64
(lp1868
g57
(g78
g59
NtRp1869
(dp1870
g62
(dp1871
g82
g83
ssg71
g1865
sg64
(lp1872
S'global_settings'
p1873
asbag57
(g78
g59
NtRp1874
(dp1875
g62
(dp1876
g89
g90
ssg71
g1865
sg64
(lp1877
S':'
asbag57
(g78
g59
NtRp1878
(dp1879
g62
(dp1880
sg71
g1865
sg64
(lp1881
g57
(g58
g59
NtRp1882
(dp1883
g62
(dp1884
g70
I5
ssg71
g1878
sg64
(lp1885
g57
(g66
g59
NtRp1886
(dp1887
g62
(dp1888
g70
I4
ssg71
Nsg64
(lp1889
g57
(g73
g59
NtRp1890
(dp1891
g62
(dp1892
sg71
g1886
sg64
(lp1893
g57
(g78
g59
NtRp1894
(dp1895
g62
(dp1896
g82
g83
ssg71
g1890
sg64
(lp1897
g749
asbag57
(g78
g59
NtRp1898
(dp1899
g62
(dp1900
g89
g90
ssg71
g1890
sg64
(lp1901
S':'
asbag57
(g78
g59
NtRp1902
(dp1903
g62
(dp1904
sg71
g1890
sg64
(lp1905
g57
(g58
g59
NtRp1906
(dp1907
g62
(dp1908
g70
I4
ssg71
g1902
sg64
(lp1909
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1910
asbasbasbag57
(g73
g59
NtRp1911
(dp1912
g62
(dp1913
sg71
g1886
sg64
(lp1914
g57
(g78
g59
NtRp1915
(dp1916
g62
(dp1917
g82
g83
ssg71
g1911
sg64
(lp1918
g771
asbag57
(g78
g59
NtRp1919
(dp1920
g62
(dp1921
g89
g90
ssg71
g1911
sg64
(lp1922
S':'
asbag57
(g78
g59
NtRp1923
(dp1924
g62
(dp1925
sg71
g1911
sg64
(lp1926
g57
(g58
g59
NtRp1927
(dp1928
g62
(dp1929
g70
I4
ssg71
g1923
sg64
(lp1930
g784
asbasbasbag57
(g73
g59
NtRp1931
(dp1932
g62
(dp1933
sg71
g1886
sg64
(lp1934
g57
(g78
g59
NtRp1935
(dp1936
g62
(dp1937
g82
g83
ssg71
g1931
sg64
(lp1938
g793
asbag57
(g78
g59
NtRp1939
(dp1940
g62
(dp1941
g89
g90
ssg71
g1931
sg64
(lp1942
S':'
asbag57
(g78
g59
NtRp1943
(dp1944
g62
(dp1945
sg71
g1931
sg64
(lp1946
g57
(g58
g59
NtRp1947
(dp1948
g62
(dp1949
g70
I4
ssg71
g1943
sg64
(lp1950
g57
(g66
g59
NtRp1951
(dp1952
g62
(dp1953
g70
I3
ssg71
Nsg64
(lp1954
sbasbasbasbag57
(g73
g59
NtRp1955
(dp1956
g62
(dp1957
sg71
g1886
sg64
(lp1958
g57
(g78
g59
NtRp1959
(dp1960
g62
(dp1961
g82
g83
ssg71
g1955
sg64
(lp1962
g818
asbag57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
g89
g90
ssg71
g1955
sg64
(lp1966
S':'
asbag57
(g78
g59
NtRp1967
(dp1968
g62
(dp1969
sg71
g1955
sg64
(lp1970
g57
(g58
g59
NtRp1971
(dp1972
g62
(dp1973
g70
I4
ssg71
g1967
sg64
(lp1974
S"<Values at 0xa42eeac: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1975
asbasbasbag57
(g73
g59
NtRp1976
(dp1977
g62
(dp1978
sg71
g1886
sg64
(lp1979
g57
(g78
g59
NtRp1980
(dp1981
g62
(dp1982
g82
g83
ssg71
g1976
sg64
(lp1983
g840
asbag57
(g78
g59
NtRp1984
(dp1985
g62
(dp1986
g89
g90
ssg71
g1976
sg64
(lp1987
S':'
asbag57
(g78
g59
NtRp1988
(dp1989
g62
(dp1990
sg71
g1976
sg64
(lp1991
g57
(g58
g59
NtRp1992
(dp1993
g62
(dp1994
g70
I4
ssg71
g1988
sg64
(lp1995
S'set([])'
p1996
asbasbasbag57
(g73
g59
NtRp1997
(dp1998
g62
(dp1999
sg71
g1886
sg64
(lp2000
g57
(g78
g59
NtRp2001
(dp2002
g62
(dp2003
g82
g83
ssg71
g1997
sg64
(lp2004
g862
asbag57
(g78
g59
NtRp2005
(dp2006
g62
(dp2007
g89
g90
ssg71
g1997
sg64
(lp2008
S':'
asbag57
(g78
g59
NtRp2009
(dp2010
g62
(dp2011
sg71
g1997
sg64
(lp2012
g57
(g58
g59
NtRp2013
(dp2014
g62
(dp2015
g70
I4
ssg71
g2009
sg64
(lp2016
g100
asbasbasbag57
(g73
g59
NtRp2017
(dp2018
g62
(dp2019
sg71
g1886
sg64
(lp2020
g57
(g78
g59
NtRp2021
(dp2022
g62
(dp2023
g82
g83
ssg71
g2017
sg64
(lp2024
g883
asbag57
(g78
g59
NtRp2025
(dp2026
g62
(dp2027
g89
g90
ssg71
g2017
sg64
(lp2028
S':'
asbag57
(g78
g59
NtRp2029
(dp2030
g62
(dp2031
sg71
g2017
sg64
(lp2032
g57
(g58
g59
NtRp2033
(dp2034
g62
(dp2035
g70
I4
ssg71
g2029
sg64
(lp2036
g896
asbasbasbag57
(g73
g59
NtRp2037
(dp2038
g62
(dp2039
sg71
g1886
sg64
(lp2040
g57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
g82
g83
ssg71
g2037
sg64
(lp2044
g1103
asbag57
(g78
g59
NtRp2045
(dp2046
g62
(dp2047
g89
g90
ssg71
g2037
sg64
(lp2048
S':'
asbag57
(g78
g59
NtRp2049
(dp2050
g62
(dp2051
sg71
g2037
sg64
(lp2052
g57
(g58
g59
NtRp2053
(dp2054
g62
(dp2055
g70
I4
ssg71
g2049
sg64
(lp2056
g100
asbasbasbag57
(g73
g59
NtRp2057
(dp2058
g62
(dp2059
sg71
g1886
sg64
(lp2060
g57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
g82
g83
ssg71
g2057
sg64
(lp2064
g1124
asbag57
(g78
g59
NtRp2065
(dp2066
g62
(dp2067
g89
g90
ssg71
g2057
sg64
(lp2068
S':'
asbag57
(g78
g59
NtRp2069
(dp2070
g62
(dp2071
sg71
g2057
sg64
(lp2072
g57
(g58
g59
NtRp2073
(dp2074
g62
(dp2075
g70
I4
ssg71
g2069
sg64
(lp2076
g100
asbasbasbag57
(g73
g59
NtRp2077
(dp2078
g62
(dp2079
sg71
g1886
sg64
(lp2080
g57
(g78
g59
NtRp2081
(dp2082
g62
(dp2083
g82
g83
ssg71
g2077
sg64
(lp2084
g1145
asbag57
(g78
g59
NtRp2085
(dp2086
g62
(dp2087
g89
g90
ssg71
g2077
sg64
(lp2088
S':'
asbag57
(g78
g59
NtRp2089
(dp2090
g62
(dp2091
sg71
g2077
sg64
(lp2092
g57
(g58
g59
NtRp2093
(dp2094
g62
(dp2095
g70
I4
ssg71
g2089
sg64
(lp2096
g57
(g66
g59
NtRp2097
(dp2098
g62
(dp2099
g70
I3
ssg71
Nsg64
(lp2100
g57
(g73
g59
NtRp2101
(dp2102
g62
(dp2103
sg71
g2097
sg64
(lp2104
g57
(g78
g59
NtRp2105
(dp2106
g62
(dp2107
sg71
g2101
sg64
(lp2108
g57
(g58
g59
NtRp2109
(dp2110
g62
(dp2111
g70
I3
ssg71
g2105
sg64
(lp2112
g1174
asbasbasbag57
(g73
g59
NtRp2113
(dp2114
g62
(dp2115
sg71
g2097
sg64
(lp2116
g57
(g78
g59
NtRp2117
(dp2118
g62
(dp2119
sg71
g2113
sg64
(lp2120
g57
(g58
g59
NtRp2121
(dp2122
g62
(dp2123
g70
I3
ssg71
g2117
sg64
(lp2124
g1187
asbasbasbag57
(g73
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g2097
sg64
(lp2128
g57
(g78
g59
NtRp2129
(dp2130
g62
(dp2131
sg71
g2125
sg64
(lp2132
g57
(g58
g59
NtRp2133
(dp2134
g62
(dp2135
g70
I3
ssg71
g2129
sg64
(lp2136
g1200
asbasbasbag57
(g73
g59
NtRp2137
(dp2138
g62
(dp2139
sg71
g2097
sg64
(lp2140
g57
(g78
g59
NtRp2141
(dp2142
g62
(dp2143
sg71
g2137
sg64
(lp2144
g57
(g58
g59
NtRp2145
(dp2146
g62
(dp2147
g70
I3
ssg71
g2141
sg64
(lp2148
g1213
asbasbasbag57
(g73
g59
NtRp2149
(dp2150
g62
(dp2151
sg71
g2097
sg64
(lp2152
g57
(g78
g59
NtRp2153
(dp2154
g62
(dp2155
sg71
g2149
sg64
(lp2156
g57
(g58
g59
NtRp2157
(dp2158
g62
(dp2159
g70
I3
ssg71
g2153
sg64
(lp2160
g1226
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2161
(dp2162
g62
(dp2163
sg71
g1886
sg64
(lp2164
g57
(g78
g59
NtRp2165
(dp2166
g62
(dp2167
g82
g83
ssg71
g2161
sg64
(lp2168
g1494
asbag57
(g78
g59
NtRp2169
(dp2170
g62
(dp2171
g89
g90
ssg71
g2161
sg64
(lp2172
S':'
asbag57
(g78
g59
NtRp2173
(dp2174
g62
(dp2175
sg71
g2161
sg64
(lp2176
g57
(g58
g59
NtRp2177
(dp2178
g62
(dp2179
g70
I4
ssg71
g2173
sg64
(lp2180
g57
(g66
g59
NtRp2181
(dp2182
g62
(dp2183
g70
I3
ssg71
Nsg64
(lp2184
g57
(g73
g59
NtRp2185
(dp2186
g62
(dp2187
sg71
g2181
sg64
(lp2188
g57
(g78
g59
NtRp2189
(dp2190
g62
(dp2191
sg71
g2185
sg64
(lp2192
g57
(g58
g59
NtRp2193
(dp2194
g62
(dp2195
g70
I3
ssg71
g2189
sg64
(lp2196
S'2'
asbasbasbag57
(g73
g59
NtRp2197
(dp2198
g62
(dp2199
sg71
g2181
sg64
(lp2200
g57
(g78
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g2197
sg64
(lp2204
g57
(g58
g59
NtRp2205
(dp2206
g62
(dp2207
g70
I3
ssg71
g2201
sg64
(lp2208
S'3'
asbasbasbag57
(g73
g59
NtRp2209
(dp2210
g62
(dp2211
sg71
g2181
sg64
(lp2212
g57
(g78
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2209
sg64
(lp2216
g57
(g58
g59
NtRp2217
(dp2218
g62
(dp2219
g70
I3
ssg71
g2213
sg64
(lp2220
S'2'
asbasbasbag57
(g73
g59
NtRp2221
(dp2222
g62
(dp2223
sg71
g2181
sg64
(lp2224
g57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g2221
sg64
(lp2228
g57
(g58
g59
NtRp2229
(dp2230
g62
(dp2231
g70
I3
ssg71
g2225
sg64
(lp2232
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2233
asbasbasbag57
(g73
g59
NtRp2234
(dp2235
g62
(dp2236
sg71
g2181
sg64
(lp2237
g57
(g78
g59
NtRp2238
(dp2239
g62
(dp2240
sg71
g2234
sg64
(lp2241
g57
(g58
g59
NtRp2242
(dp2243
g62
(dp2244
g70
I3
ssg71
g2238
sg64
(lp2245
g1572
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2246
(dp2247
g62
(dp2248
sg71
g67
sg64
(lp2249
g57
(g78
g59
NtRp2250
(dp2251
g62
(dp2252
g82
g83
ssg71
g2246
sg64
(lp2253
S'is_https'
p2254
asbag57
(g78
g59
NtRp2255
(dp2256
g62
(dp2257
g89
g90
ssg71
g2246
sg64
(lp2258
S':'
asbag57
(g78
g59
NtRp2259
(dp2260
g62
(dp2261
sg71
g2246
sg64
(lp2262
g57
(g58
g59
NtRp2263
(dp2264
g62
(dp2265
g70
I5
ssg71
g2259
sg64
(lp2266
g100
asbasbasbag57
(g73
g59
NtRp2267
(dp2268
g62
(dp2269
sg71
g67
sg64
(lp2270
g57
(g78
g59
NtRp2271
(dp2272
g62
(dp2273
g82
g83
ssg71
g2267
sg64
(lp2274
S'is_local'
p2275
asbag57
(g78
g59
NtRp2276
(dp2277
g62
(dp2278
g89
g90
ssg71
g2267
sg64
(lp2279
S':'
asbag57
(g78
g59
NtRp2280
(dp2281
g62
(dp2282
sg71
g2267
sg64
(lp2283
g57
(g58
g59
NtRp2284
(dp2285
g62
(dp2286
g70
I5
ssg71
g2280
sg64
(lp2287
g1681
asbasbasbag57
(g73
g59
NtRp2288
(dp2289
g62
(dp2290
sg71
g67
sg64
(lp2291
g57
(g78
g59
NtRp2292
(dp2293
g62
(dp2294
g82
g83
ssg71
g2288
sg64
(lp2295
S'is_restful'
p2296
asbag57
(g78
g59
NtRp2297
(dp2298
g62
(dp2299
g89
g90
ssg71
g2288
sg64
(lp2300
S':'
asbag57
(g78
g59
NtRp2301
(dp2302
g62
(dp2303
sg71
g2288
sg64
(lp2304
g57
(g58
g59
NtRp2305
(dp2306
g62
(dp2307
g70
I5
ssg71
g2301
sg64
(lp2308
g100
asbasbasbag57
(g73
g59
NtRp2309
(dp2310
g62
(dp2311
sg71
g67
sg64
(lp2312
g57
(g78
g59
NtRp2313
(dp2314
g62
(dp2315
g82
g83
ssg71
g2309
sg64
(lp2316
S'now'
p2317
asbag57
(g78
g59
NtRp2318
(dp2319
g62
(dp2320
g89
g90
ssg71
g2309
sg64
(lp2321
S':'
asbag57
(g78
g59
NtRp2322
(dp2323
g62
(dp2324
sg71
g2309
sg64
(lp2325
g57
(g58
g59
NtRp2326
(dp2327
g62
(dp2328
g70
I5
ssg71
g2322
sg64
(lp2329
S'datetime.datetime(2013, 2, 25, 12, 25, 28, 832209)'
p2330
asbasbasbag57
(g73
g59
NtRp2331
(dp2332
g62
(dp2333
sg71
g67
sg64
(lp2334
g57
(g78
g59
NtRp2335
(dp2336
g62
(dp2337
g82
g83
ssg71
g2331
sg64
(lp2338
S'post_vars'
p2339
asbag57
(g78
g59
NtRp2340
(dp2341
g62
(dp2342
g89
g90
ssg71
g2331
sg64
(lp2343
S':'
asbag57
(g78
g59
NtRp2344
(dp2345
g62
(dp2346
sg71
g2331
sg64
(lp2347
g57
(g58
g59
NtRp2348
(dp2349
g62
(dp2350
g70
I5
ssg71
g2344
sg64
(lp2351
g57
(g66
g59
NtRp2352
(dp2353
g62
(dp2354
g70
I4
ssg71
Nsg64
(lp2355
sbasbasbasbag57
(g73
g59
NtRp2356
(dp2357
g62
(dp2358
sg71
g67
sg64
(lp2359
g57
(g78
g59
NtRp2360
(dp2361
g62
(dp2362
g82
g83
ssg71
g2356
sg64
(lp2363
S'raw_args'
p2364
asbag57
(g78
g59
NtRp2365
(dp2366
g62
(dp2367
g89
g90
ssg71
g2356
sg64
(lp2368
S':'
asbag57
(g78
g59
NtRp2369
(dp2370
g62
(dp2371
sg71
g2356
sg64
(lp2372
g57
(g58
g59
NtRp2373
(dp2374
g62
(dp2375
g70
I5
ssg71
g2369
sg64
(lp2376
S'project/experiment.project/3/sample.experiment/2/11'
p2377
asbasbasbag57
(g73
g59
NtRp2378
(dp2379
g62
(dp2380
sg71
g67
sg64
(lp2381
g57
(g78
g59
NtRp2382
(dp2383
g62
(dp2384
g82
g83
ssg71
g2378
sg64
(lp2385
S'raw_extension'
p2386
asbag57
(g78
g59
NtRp2387
(dp2388
g62
(dp2389
g89
g90
ssg71
g2378
sg64
(lp2390
S':'
asbag57
(g78
g59
NtRp2391
(dp2392
g62
(dp2393
sg71
g2378
sg64
(lp2394
g57
(g58
g59
NtRp2395
(dp2396
g62
(dp2397
g70
I5
ssg71
g2391
sg64
(lp2398
S'None'
p2399
asbasbasbag57
(g73
g59
NtRp2400
(dp2401
g62
(dp2402
sg71
g67
sg64
(lp2403
g57
(g78
g59
NtRp2404
(dp2405
g62
(dp2406
g82
g83
ssg71
g2400
sg64
(lp2407
S'url'
p2408
asbag57
(g78
g59
NtRp2409
(dp2410
g62
(dp2411
g89
g90
ssg71
g2400
sg64
(lp2412
S':'
asbag57
(g78
g59
NtRp2413
(dp2414
g62
(dp2415
sg71
g2400
sg64
(lp2416
g57
(g58
g59
NtRp2417
(dp2418
g62
(dp2419
g70
I5
ssg71
g2413
sg64
(lp2420
g1248
asbasbasbag57
(g73
g59
NtRp2421
(dp2422
g62
(dp2423
sg71
g67
sg64
(lp2424
g57
(g78
g59
NtRp2425
(dp2426
g62
(dp2427
g82
g83
ssg71
g2421
sg64
(lp2428
S'utcnow'
p2429
asbag57
(g78
g59
NtRp2430
(dp2431
g62
(dp2432
g89
g90
ssg71
g2421
sg64
(lp2433
S':'
asbag57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
sg71
g2421
sg64
(lp2437
g57
(g58
g59
NtRp2438
(dp2439
g62
(dp2440
g70
I5
ssg71
g2434
sg64
(lp2441
S'datetime.datetime(2013, 2, 25, 6, 55, 28, 832295)'
p2442
asbasbasbag57
(g73
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g67
sg64
(lp2446
g57
(g78
g59
NtRp2447
(dp2448
g62
(dp2449
g82
g83
ssg71
g2443
sg64
(lp2450
S'uuid'
p2451
asbag57
(g78
g59
NtRp2452
(dp2453
g62
(dp2454
g89
g90
ssg71
g2443
sg64
(lp2455
S':'
asbag57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
sg71
g2443
sg64
(lp2459
g57
(g58
g59
NtRp2460
(dp2461
g62
(dp2462
g70
I5
ssg71
g2456
sg64
(lp2463
S'DEV_bootstrap_ch/127.0.0.1.2013-02-25.12-25-28.65968a17-2e80-4b70-99eb-de6897a5b46c'
p2464
asbasbasbag57
(g73
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g67
sg64
(lp2468
g57
(g78
g59
NtRp2469
(dp2470
g62
(dp2471
g82
g83
ssg71
g2465
sg64
(lp2472
S'vars'
p2473
asbag57
(g78
g59
NtRp2474
(dp2475
g62
(dp2476
g89
g90
ssg71
g2465
sg64
(lp2477
S':'
asbag57
(g78
g59
NtRp2478
(dp2479
g62
(dp2480
sg71
g2465
sg64
(lp2481
g57
(g58
g59
NtRp2482
(dp2483
g62
(dp2484
g70
I5
ssg71
g2478
sg64
(lp2485
g57
(g66
g59
NtRp2486
(dp2487
g62
(dp2488
g70
I4
ssg71
Nsg64
(lp2489
sbasbasbasbag57
(g73
g59
NtRp2490
(dp2491
g62
(dp2492
sg71
g67
sg64
(lp2493
g57
(g78
g59
NtRp2494
(dp2495
g62
(dp2496
g82
g83
ssg71
g2490
sg64
(lp2497
S'wsgi'
p2498
asbag57
(g78
g59
NtRp2499
(dp2500
g62
(dp2501
g89
g90
ssg71
g2490
sg64
(lp2502
S':'
asbag57
(g78
g59
NtRp2503
(dp2504
g62
(dp2505
sg71
g2490
sg64
(lp2506
g57
(g58
g59
NtRp2507
(dp2508
g62
(dp2509
g70
I5
ssg71
g2503
sg64
(lp2510
g57
(g66
g59
NtRp2511
(dp2512
g62
(dp2513
g70
I4
ssg71
Nsg64
(lp2514
g57
(g73
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2511
sg64
(lp2518
g57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
g82
g83
ssg71
g2515
sg64
(lp2522
S'environ'
p2523
asbag57
(g78
g59
NtRp2524
(dp2525
g62
(dp2526
g89
g90
ssg71
g2515
sg64
(lp2527
S':'
asbag57
(g78
g59
NtRp2528
(dp2529
g62
(dp2530
sg71
g2515
sg64
(lp2531
g57
(g58
g59
NtRp2532
(dp2533
g62
(dp2534
g70
I4
ssg71
g2528
sg64
(lp2535
g57
(g66
g59
NtRp2536
(dp2537
g62
(dp2538
g70
I3
ssg71
Nsg64
(lp2539
g57
(g73
g59
NtRp2540
(dp2541
g62
(dp2542
sg71
g2536
sg64
(lp2543
g57
(g78
g59
NtRp2544
(dp2545
g62
(dp2546
g82
g83
ssg71
g2540
sg64
(lp2547
S'HTTP_ACCEPT'
p2548
asbag57
(g78
g59
NtRp2549
(dp2550
g62
(dp2551
g89
g90
ssg71
g2540
sg64
(lp2552
S':'
asbag57
(g78
g59
NtRp2553
(dp2554
g62
(dp2555
sg71
g2540
sg64
(lp2556
g57
(g58
g59
NtRp2557
(dp2558
g62
(dp2559
g70
I3
ssg71
g2553
sg64
(lp2560
g918
asbasbasbag57
(g73
g59
NtRp2561
(dp2562
g62
(dp2563
sg71
g2536
sg64
(lp2564
g57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
g82
g83
ssg71
g2561
sg64
(lp2568
S'HTTP_ACCEPT_CHARSET'
p2569
asbag57
(g78
g59
NtRp2570
(dp2571
g62
(dp2572
g89
g90
ssg71
g2561
sg64
(lp2573
S':'
asbag57
(g78
g59
NtRp2574
(dp2575
g62
(dp2576
sg71
g2561
sg64
(lp2577
g57
(g58
g59
NtRp2578
(dp2579
g62
(dp2580
g70
I3
ssg71
g2574
sg64
(lp2581
g940
asbasbasbag57
(g73
g59
NtRp2582
(dp2583
g62
(dp2584
sg71
g2536
sg64
(lp2585
g57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
g82
g83
ssg71
g2582
sg64
(lp2589
S'HTTP_ACCEPT_ENCODING'
p2590
asbag57
(g78
g59
NtRp2591
(dp2592
g62
(dp2593
g89
g90
ssg71
g2582
sg64
(lp2594
S':'
asbag57
(g78
g59
NtRp2595
(dp2596
g62
(dp2597
sg71
g2582
sg64
(lp2598
g57
(g58
g59
NtRp2599
(dp2600
g62
(dp2601
g70
I3
ssg71
g2595
sg64
(lp2602
g962
asbasbasbag57
(g73
g59
NtRp2603
(dp2604
g62
(dp2605
sg71
g2536
sg64
(lp2606
g57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
g82
g83
ssg71
g2603
sg64
(lp2610
S'HTTP_ACCEPT_LANGUAGE'
p2611
asbag57
(g78
g59
NtRp2612
(dp2613
g62
(dp2614
g89
g90
ssg71
g2603
sg64
(lp2615
S':'
asbag57
(g78
g59
NtRp2616
(dp2617
g62
(dp2618
sg71
g2603
sg64
(lp2619
g57
(g58
g59
NtRp2620
(dp2621
g62
(dp2622
g70
I3
ssg71
g2616
sg64
(lp2623
g984
asbasbasbag57
(g73
g59
NtRp2624
(dp2625
g62
(dp2626
sg71
g2536
sg64
(lp2627
g57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
g82
g83
ssg71
g2624
sg64
(lp2631
S'HTTP_CONNECTION'
p2632
asbag57
(g78
g59
NtRp2633
(dp2634
g62
(dp2635
g89
g90
ssg71
g2624
sg64
(lp2636
S':'
asbag57
(g78
g59
NtRp2637
(dp2638
g62
(dp2639
sg71
g2624
sg64
(lp2640
g57
(g58
g59
NtRp2641
(dp2642
g62
(dp2643
g70
I3
ssg71
g2637
sg64
(lp2644
g1006
asbasbasbag57
(g73
g59
NtRp2645
(dp2646
g62
(dp2647
sg71
g2536
sg64
(lp2648
g57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
g82
g83
ssg71
g2645
sg64
(lp2652
S'HTTP_COOKIE'
p2653
asbag57
(g78
g59
NtRp2654
(dp2655
g62
(dp2656
g89
g90
ssg71
g2645
sg64
(lp2657
S':'
asbag57
(g78
g59
NtRp2658
(dp2659
g62
(dp2660
sg71
g2645
sg64
(lp2661
g57
(g58
g59
NtRp2662
(dp2663
g62
(dp2664
g70
I3
ssg71
g2658
sg64
(lp2665
g1028
asbasbasbag57
(g73
g59
NtRp2666
(dp2667
g62
(dp2668
sg71
g2536
sg64
(lp2669
g57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
g82
g83
ssg71
g2666
sg64
(lp2673
S'HTTP_HOST'
p2674
asbag57
(g78
g59
NtRp2675
(dp2676
g62
(dp2677
g89
g90
ssg71
g2666
sg64
(lp2678
S':'
asbag57
(g78
g59
NtRp2679
(dp2680
g62
(dp2681
sg71
g2666
sg64
(lp2682
g57
(g58
g59
NtRp2683
(dp2684
g62
(dp2685
g70
I3
ssg71
g2679
sg64
(lp2686
g1050
asbasbasbag57
(g73
g59
NtRp2687
(dp2688
g62
(dp2689
sg71
g2536
sg64
(lp2690
g57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
g82
g83
ssg71
g2687
sg64
(lp2694
S'HTTP_REFERER'
p2695
asbag57
(g78
g59
NtRp2696
(dp2697
g62
(dp2698
g89
g90
ssg71
g2687
sg64
(lp2699
S':'
asbag57
(g78
g59
NtRp2700
(dp2701
g62
(dp2702
sg71
g2687
sg64
(lp2703
g57
(g58
g59
NtRp2704
(dp2705
g62
(dp2706
g70
I3
ssg71
g2700
sg64
(lp2707
g1072
asbasbasbag57
(g73
g59
NtRp2708
(dp2709
g62
(dp2710
sg71
g2536
sg64
(lp2711
g57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
g82
g83
ssg71
g2708
sg64
(lp2715
S'HTTP_USER_AGENT'
p2716
asbag57
(g78
g59
NtRp2717
(dp2718
g62
(dp2719
g89
g90
ssg71
g2708
sg64
(lp2720
S':'
asbag57
(g78
g59
NtRp2721
(dp2722
g62
(dp2723
sg71
g2708
sg64
(lp2724
g57
(g58
g59
NtRp2725
(dp2726
g62
(dp2727
g70
I3
ssg71
g2721
sg64
(lp2728
g1094
asbasbasbag57
(g73
g59
NtRp2729
(dp2730
g62
(dp2731
sg71
g2536
sg64
(lp2732
g57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
g82
g83
ssg71
g2729
sg64
(lp2736
S'PATH_INFO'
p2737
asbag57
(g78
g59
NtRp2738
(dp2739
g62
(dp2740
g89
g90
ssg71
g2729
sg64
(lp2741
S':'
asbag57
(g78
g59
NtRp2742
(dp2743
g62
(dp2744
sg71
g2729
sg64
(lp2745
g57
(g58
g59
NtRp2746
(dp2747
g62
(dp2748
g70
I3
ssg71
g2742
sg64
(lp2749
g1248
asbasbasbag57
(g73
g59
NtRp2750
(dp2751
g62
(dp2752
sg71
g2536
sg64
(lp2753
g57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
g82
g83
ssg71
g2750
sg64
(lp2757
S'QUERY_STRING'
p2758
asbag57
(g78
g59
NtRp2759
(dp2760
g62
(dp2761
g89
g90
ssg71
g2750
sg64
(lp2762
S':'
asbag57
(g78
g59
NtRp2763
(dp2764
g62
(dp2765
sg71
g2750
sg64
(lp2766
g57
(g58
g59
NtRp2767
(dp2768
g62
(dp2769
g70
I3
ssg71
g2763
sg64
(lp2770
S''
asbasbasbag57
(g73
g59
NtRp2771
(dp2772
g62
(dp2773
sg71
g2536
sg64
(lp2774
g57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
g82
g83
ssg71
g2771
sg64
(lp2778
S'REMOTE_ADDR'
p2779
asbag57
(g78
g59
NtRp2780
(dp2781
g62
(dp2782
g89
g90
ssg71
g2771
sg64
(lp2783
S':'
asbag57
(g78
g59
NtRp2784
(dp2785
g62
(dp2786
sg71
g2771
sg64
(lp2787
g57
(g58
g59
NtRp2788
(dp2789
g62
(dp2790
g70
I3
ssg71
g2784
sg64
(lp2791
g288
asbasbasbag57
(g73
g59
NtRp2792
(dp2793
g62
(dp2794
sg71
g2536
sg64
(lp2795
g57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
g82
g83
ssg71
g2792
sg64
(lp2799
S'REMOTE_PORT'
p2800
asbag57
(g78
g59
NtRp2801
(dp2802
g62
(dp2803
g89
g90
ssg71
g2792
sg64
(lp2804
S':'
asbag57
(g78
g59
NtRp2805
(dp2806
g62
(dp2807
sg71
g2792
sg64
(lp2808
g57
(g58
g59
NtRp2809
(dp2810
g62
(dp2811
g70
I3
ssg71
g2805
sg64
(lp2812
g1312
asbasbasbag57
(g73
g59
NtRp2813
(dp2814
g62
(dp2815
sg71
g2536
sg64
(lp2816
g57
(g78
g59
NtRp2817
(dp2818
g62
(dp2819
g82
g83
ssg71
g2813
sg64
(lp2820
S'REQUEST_METHOD'
p2821
asbag57
(g78
g59
NtRp2822
(dp2823
g62
(dp2824
g89
g90
ssg71
g2813
sg64
(lp2825
S':'
asbag57
(g78
g59
NtRp2826
(dp2827
g62
(dp2828
sg71
g2813
sg64
(lp2829
g57
(g58
g59
NtRp2830
(dp2831
g62
(dp2832
g70
I3
ssg71
g2826
sg64
(lp2833
g1334
asbasbasbag57
(g73
g59
NtRp2834
(dp2835
g62
(dp2836
sg71
g2536
sg64
(lp2837
g57
(g78
g59
NtRp2838
(dp2839
g62
(dp2840
g82
g83
ssg71
g2834
sg64
(lp2841
S'REQUEST_URI'
p2842
asbag57
(g78
g59
NtRp2843
(dp2844
g62
(dp2845
g89
g90
ssg71
g2834
sg64
(lp2846
S':'
asbag57
(g78
g59
NtRp2847
(dp2848
g62
(dp2849
sg71
g2834
sg64
(lp2850
g57
(g58
g59
NtRp2851
(dp2852
g62
(dp2853
g70
I3
ssg71
g2847
sg64
(lp2854
g1248
asbasbasbag57
(g73
g59
NtRp2855
(dp2856
g62
(dp2857
sg71
g2536
sg64
(lp2858
g57
(g78
g59
NtRp2859
(dp2860
g62
(dp2861
g82
g83
ssg71
g2855
sg64
(lp2862
S'SCRIPT_NAME'
p2863
asbag57
(g78
g59
NtRp2864
(dp2865
g62
(dp2866
g89
g90
ssg71
g2855
sg64
(lp2867
S':'
asbag57
(g78
g59
NtRp2868
(dp2869
g62
(dp2870
sg71
g2855
sg64
(lp2871
g57
(g58
g59
NtRp2872
(dp2873
g62
(dp2874
g70
I3
ssg71
g2868
sg64
(lp2875
S''
asbasbasbag57
(g73
g59
NtRp2876
(dp2877
g62
(dp2878
sg71
g2536
sg64
(lp2879
g57
(g78
g59
NtRp2880
(dp2881
g62
(dp2882
g82
g83
ssg71
g2876
sg64
(lp2883
S'SERVER_NAME'
p2884
asbag57
(g78
g59
NtRp2885
(dp2886
g62
(dp2887
g89
g90
ssg71
g2876
sg64
(lp2888
S':'
asbag57
(g78
g59
NtRp2889
(dp2890
g62
(dp2891
sg71
g2876
sg64
(lp2892
g57
(g58
g59
NtRp2893
(dp2894
g62
(dp2895
g70
I3
ssg71
g2889
sg64
(lp2896
g1398
asbasbasbag57
(g73
g59
NtRp2897
(dp2898
g62
(dp2899
sg71
g2536
sg64
(lp2900
g57
(g78
g59
NtRp2901
(dp2902
g62
(dp2903
g82
g83
ssg71
g2897
sg64
(lp2904
S'SERVER_PORT'
p2905
asbag57
(g78
g59
NtRp2906
(dp2907
g62
(dp2908
g89
g90
ssg71
g2897
sg64
(lp2909
S':'
asbag57
(g78
g59
NtRp2910
(dp2911
g62
(dp2912
sg71
g2897
sg64
(lp2913
g57
(g58
g59
NtRp2914
(dp2915
g62
(dp2916
g70
I3
ssg71
g2910
sg64
(lp2917
g1420
asbasbasbag57
(g73
g59
NtRp2918
(dp2919
g62
(dp2920
sg71
g2536
sg64
(lp2921
g57
(g78
g59
NtRp2922
(dp2923
g62
(dp2924
g82
g83
ssg71
g2918
sg64
(lp2925
S'SERVER_PROTOCOL'
p2926
asbag57
(g78
g59
NtRp2927
(dp2928
g62
(dp2929
g89
g90
ssg71
g2918
sg64
(lp2930
S':'
asbag57
(g78
g59
NtRp2931
(dp2932
g62
(dp2933
sg71
g2918
sg64
(lp2934
g57
(g58
g59
NtRp2935
(dp2936
g62
(dp2937
g70
I3
ssg71
g2931
sg64
(lp2938
g1442
asbasbasbag57
(g73
g59
NtRp2939
(dp2940
g62
(dp2941
sg71
g2536
sg64
(lp2942
g57
(g78
g59
NtRp2943
(dp2944
g62
(dp2945
g82
g83
ssg71
g2939
sg64
(lp2946
S'SERVER_SOFTWARE'
p2947
asbag57
(g78
g59
NtRp2948
(dp2949
g62
(dp2950
g89
g90
ssg71
g2939
sg64
(lp2951
S':'
asbag57
(g78
g59
NtRp2952
(dp2953
g62
(dp2954
sg71
g2939
sg64
(lp2955
g57
(g58
g59
NtRp2956
(dp2957
g62
(dp2958
g70
I3
ssg71
g2952
sg64
(lp2959
g1464
asbasbasbag57
(g73
g59
NtRp2960
(dp2961
g62
(dp2962
sg71
g2536
sg64
(lp2963
g57
(g78
g59
NtRp2964
(dp2965
g62
(dp2966
g82
g83
ssg71
g2960
sg64
(lp2967
S'wsgi.errors'
p2968
asbag57
(g78
g59
NtRp2969
(dp2970
g62
(dp2971
g89
g90
ssg71
g2960
sg64
(lp2972
S':'
asbag57
(g78
g59
NtRp2973
(dp2974
g62
(dp2975
sg71
g2960
sg64
(lp2976
g57
(g58
g59
NtRp2977
(dp2978
g62
(dp2979
g70
I3
ssg71
g2973
sg64
(lp2980
S"<open file '<stderr>', mode 'w' at 0xb72b20d0>"
p2981
asbasbasbag57
(g73
g59
NtRp2982
(dp2983
g62
(dp2984
sg71
g2536
sg64
(lp2985
g57
(g78
g59
NtRp2986
(dp2987
g62
(dp2988
g82
g83
ssg71
g2982
sg64
(lp2989
S'wsgi.file_wrapper'
p2990
asbag57
(g78
g59
NtRp2991
(dp2992
g62
(dp2993
g89
g90
ssg71
g2982
sg64
(lp2994
S':'
asbag57
(g78
g59
NtRp2995
(dp2996
g62
(dp2997
sg71
g2982
sg64
(lp2998
g57
(g58
g59
NtRp2999
(dp3000
g62
(dp3001
g70
I3
ssg71
g2995
sg64
(lp3002
S'<class wsgiref.util.FileWrapper at 0xa3b7bcc>'
p3003
asbasbasbag57
(g73
g59
NtRp3004
(dp3005
g62
(dp3006
sg71
g2536
sg64
(lp3007
g57
(g78
g59
NtRp3008
(dp3009
g62
(dp3010
g82
g83
ssg71
g3004
sg64
(lp3011
S'wsgi.input'
p3012
asbag57
(g78
g59
NtRp3013
(dp3014
g62
(dp3015
g89
g90
ssg71
g3004
sg64
(lp3016
S':'
asbag57
(g78
g59
NtRp3017
(dp3018
g62
(dp3019
sg71
g3004
sg64
(lp3020
g57
(g58
g59
NtRp3021
(dp3022
g62
(dp3023
g70
I3
ssg71
g3017
sg64
(lp3024
S'<cStringIO.StringO object at 0xad8c24c0>'
p3025
asbasbasbag57
(g73
g59
NtRp3026
(dp3027
g62
(dp3028
sg71
g2536
sg64
(lp3029
g57
(g78
g59
NtRp3030
(dp3031
g62
(dp3032
g82
g83
ssg71
g3026
sg64
(lp3033
S'wsgi.multiprocess'
p3034
asbag57
(g78
g59
NtRp3035
(dp3036
g62
(dp3037
g89
g90
ssg71
g3026
sg64
(lp3038
S':'
asbag57
(g78
g59
NtRp3039
(dp3040
g62
(dp3041
sg71
g3026
sg64
(lp3042
g57
(g58
g59
NtRp3043
(dp3044
g62
(dp3045
g70
I3
ssg71
g3039
sg64
(lp3046
g100
asbasbasbag57
(g73
g59
NtRp3047
(dp3048
g62
(dp3049
sg71
g2536
sg64
(lp3050
g57
(g78
g59
NtRp3051
(dp3052
g62
(dp3053
g82
g83
ssg71
g3047
sg64
(lp3054
S'wsgi.multithread'
p3055
asbag57
(g78
g59
NtRp3056
(dp3057
g62
(dp3058
g89
g90
ssg71
g3047
sg64
(lp3059
S':'
asbag57
(g78
g59
NtRp3060
(dp3061
g62
(dp3062
sg71
g3047
sg64
(lp3063
g57
(g58
g59
NtRp3064
(dp3065
g62
(dp3066
g70
I3
ssg71
g3060
sg64
(lp3067
g1681
asbasbasbag57
(g73
g59
NtRp3068
(dp3069
g62
(dp3070
sg71
g2536
sg64
(lp3071
g57
(g78
g59
NtRp3072
(dp3073
g62
(dp3074
g82
g83
ssg71
g3068
sg64
(lp3075
S'wsgi.run_once'
p3076
asbag57
(g78
g59
NtRp3077
(dp3078
g62
(dp3079
g89
g90
ssg71
g3068
sg64
(lp3080
S':'
asbag57
(g78
g59
NtRp3081
(dp3082
g62
(dp3083
sg71
g3068
sg64
(lp3084
g57
(g58
g59
NtRp3085
(dp3086
g62
(dp3087
g70
I3
ssg71
g3081
sg64
(lp3088
g100
asbasbasbag57
(g73
g59
NtRp3089
(dp3090
g62
(dp3091
sg71
g2536
sg64
(lp3092
g57
(g78
g59
NtRp3093
(dp3094
g62
(dp3095
g82
g83
ssg71
g3089
sg64
(lp3096
S'wsgi.url_scheme'
p3097
asbag57
(g78
g59
NtRp3098
(dp3099
g62
(dp3100
g89
g90
ssg71
g3089
sg64
(lp3101
S':'
asbag57
(g78
g59
NtRp3102
(dp3103
g62
(dp3104
sg71
g3089
sg64
(lp3105
g57
(g58
g59
NtRp3106
(dp3107
g62
(dp3108
g70
I3
ssg71
g3102
sg64
(lp3109
g1724
asbasbasbag57
(g73
g59
NtRp3110
(dp3111
g62
(dp3112
sg71
g2536
sg64
(lp3113
g57
(g78
g59
NtRp3114
(dp3115
g62
(dp3116
g82
g83
ssg71
g3110
sg64
(lp3117
S'wsgi.version'
p3118
asbag57
(g78
g59
NtRp3119
(dp3120
g62
(dp3121
g89
g90
ssg71
g3110
sg64
(lp3122
S':'
asbag57
(g78
g59
NtRp3123
(dp3124
g62
(dp3125
sg71
g3110
sg64
(lp3126
g57
(g58
g59
NtRp3127
(dp3128
g62
(dp3129
g70
I3
ssg71
g3123
sg64
(lp3130
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3131
(lp3132
(dp3133
S'file'
p3134
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3135
sS'dump'
p3136
(dp3137
S'environment'
p3138
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3139
sS'ccode'
p3140
S'<code object <module> at 0xadec80b0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3141
ssS'lnum'
p3142
I212
sS'lines'
p3143
(dp3144
I207
S'    try:'
p3145
sI208
S'        if isinstance(code, types.CodeType):'
p3146
sI209
S'            ccode = code'
p3147
sI210
S'        else:'
p3148
sI211
S'            ccode = compile2(code, layer)'
p3149
sI212
S'        exec ccode in environment'
p3150
sI213
S'    except HTTP:'
p3151
sI214
S'        raise'
p3152
sI215
S'    except RestrictedError:'
p3153
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3154
ssS'call'
p3155
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...()\\n\\n\\n\\nresponse._vars=response._caller(duplicate)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3156
sS'func'
p3157
S'restricted'
p3158
sa(dp3159
g3134
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3160
sg3136
(dp3161
sg3142
I1140
sg3143
(dp3162
I1129
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3163
sI1130
S'   """ per sample . takes id of the sample as the input """'
p3164
sI1131
S'   sid = request.args(0)'
p3165
sI1132
S'   sample = db(db.sample.id == sid).select().first()'
p3166
sI1133
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3167
sI1134
S'   form = SQLFORM(db.sample_files)'
p3168
sI1135
S'   form.vars.sample = sid'
p3169
sI1136
S'   return locals()'
p3170
sI1137
S''
sI1138
S''
ssg3155
S'()'
p3171
sg3157
S'<module>'
p3172
sa(dp3173
g3134
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3174
sg3136
(dp3175
S'self'
p3176
S'undefined'
p3177
sS'f'
S'<function duplicate>'
p3178
ssg3142
I193
sg3143
(dp3179
I192
S'        self._vars = None'
p3180
sI193
S'        self._caller = lambda f: f()'
p3181
sI194
S'        self._view_environment = None'
p3182
sI195
S'        self._custom_commit = None'
p3183
sI196
S'        self._custom_rollback = None'
p3184
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3185
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3186
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3187
sI191
S"        self.delimiters = ('{{', '}}')"
p3188
ssg3155
S'(f=<function duplicate>)'
p3189
sg3157
S'<lambda>'
p3190
sa(dp3191
g3134
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3192
sg3136
(dp3193
S'].sample_name'
p3194
g3177
sS'global request'
p3195
S"<Storage {'function': 'duplicate', 'body': <cStr...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3196
sS'request.args'
p3197
S"['project', 'experiment.project', '3', 'sample.experiment', '2', '11']"
p3198
sS'].select'
p3199
g3177
sS'global db'
p3200
S'<DAL uri="sqlite://storage.sqlite">'
p3201
sS'].ALL'
p3202
g3177
sS'tb'
p3203
S"'biosource'"
p3204
sS'row'
p3205
g3177
ssg3142
I359
sg3143
(dp3206
I354
S'    if True:'
p3207
sI355
S'        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()'
p3208
sI356
S'        rec.update(parent=rec.id,replica="replicate")'
p3209
sI357
S'        in_row = db.sample.insert(**db.sample._filter_fields(rec))'
p3210
sI358
S"        for tb in ['biosource']:"
p3211
sI359
S'            row = db(db[tb].sample_name==request.args[-1].select(db[tb].ALL).first())'
p3212
sI360
S'            if row:'
p3213
sI361
S'                row.update(sample_name = in_row.id)'
p3214
sI362
S'                db[tb].insert(**db[tb]._filter_fields(row))'
p3215
sI363
S"        redirect(URL('list_all_dev_projects',args=request.args[0:-1]))"
p3216
ssg3155
S'()'
p3217
sg3157
S'duplicate'
p3218
sasS'pyver'
p3219
S'Python 2.7.3: /usr/bin/python'
p3220
sS'session'
p3221
g57
(g58
g59
NtRp3222
(dp3223
g62
(dp3224
sg64
(lp3225
g57
(g66
g59
NtRp3226
(dp3227
g62
(dp3228
g70
I5
ssg71
Nsg64
(lp3229
g57
(g73
g59
NtRp3230
(dp3231
g62
(dp3232
sg71
g3226
sg64
(lp3233
g57
(g78
g59
NtRp3234
(dp3235
g62
(dp3236
g82
g83
ssg71
g3230
sg64
(lp3237
S'auth'
p3238
asbag57
(g78
g59
NtRp3239
(dp3240
g62
(dp3241
g89
g90
ssg71
g3230
sg64
(lp3242
S':'
asbag57
(g78
g59
NtRp3243
(dp3244
g62
(dp3245
sg71
g3230
sg64
(lp3246
g57
(g58
g59
NtRp3247
(dp3248
g62
(dp3249
g70
I5
ssg71
g3243
sg64
(lp3250
g57
(g66
g59
NtRp3251
(dp3252
g62
(dp3253
g70
I4
ssg71
Nsg64
(lp3254
g57
(g73
g59
NtRp3255
(dp3256
g62
(dp3257
sg71
g3251
sg64
(lp3258
g57
(g78
g59
NtRp3259
(dp3260
g62
(dp3261
g82
g83
ssg71
g3255
sg64
(lp3262
S'expiration'
p3263
asbag57
(g78
g59
NtRp3264
(dp3265
g62
(dp3266
g89
g90
ssg71
g3255
sg64
(lp3267
S':'
asbag57
(g78
g59
NtRp3268
(dp3269
g62
(dp3270
sg71
g3255
sg64
(lp3271
g57
(g58
g59
NtRp3272
(dp3273
g62
(dp3274
g70
I4
ssg71
g3268
sg64
(lp3275
S'3600'
p3276
asbasbasbag57
(g73
g59
NtRp3277
(dp3278
g62
(dp3279
sg71
g3251
sg64
(lp3280
g57
(g78
g59
NtRp3281
(dp3282
g62
(dp3283
g82
g83
ssg71
g3277
sg64
(lp3284
S'hmac_key'
p3285
asbag57
(g78
g59
NtRp3286
(dp3287
g62
(dp3288
g89
g90
ssg71
g3277
sg64
(lp3289
S':'
asbag57
(g78
g59
NtRp3290
(dp3291
g62
(dp3292
sg71
g3277
sg64
(lp3293
g57
(g58
g59
NtRp3294
(dp3295
g62
(dp3296
g70
I4
ssg71
g3290
sg64
(lp3297
S'86a23d5e-1434-45d4-9e7e-b7309d35d206'
p3298
asbasbasbag57
(g73
g59
NtRp3299
(dp3300
g62
(dp3301
sg71
g3251
sg64
(lp3302
g57
(g78
g59
NtRp3303
(dp3304
g62
(dp3305
g82
g83
ssg71
g3299
sg64
(lp3306
S'last_visit'
p3307
asbag57
(g78
g59
NtRp3308
(dp3309
g62
(dp3310
g89
g90
ssg71
g3299
sg64
(lp3311
S':'
asbag57
(g78
g59
NtRp3312
(dp3313
g62
(dp3314
sg71
g3299
sg64
(lp3315
g57
(g58
g59
NtRp3316
(dp3317
g62
(dp3318
g70
I4
ssg71
g3312
sg64
(lp3319
S'datetime.datetime(2013, 2, 25, 12, 25, 28, 832209)'
p3320
asbasbasbag57
(g73
g59
NtRp3321
(dp3322
g62
(dp3323
sg71
g3251
sg64
(lp3324
g57
(g78
g59
NtRp3325
(dp3326
g62
(dp3327
g82
g83
ssg71
g3321
sg64
(lp3328
S'user'
p3329
asbag57
(g78
g59
NtRp3330
(dp3331
g62
(dp3332
g89
g90
ssg71
g3321
sg64
(lp3333
S':'
asbag57
(g78
g59
NtRp3334
(dp3335
g62
(dp3336
sg71
g3321
sg64
(lp3337
g57
(g58
g59
NtRp3338
(dp3339
g62
(dp3340
g70
I4
ssg71
g3334
sg64
(lp3341
g57
(g66
g59
NtRp3342
(dp3343
g62
(dp3344
g70
I3
ssg71
Nsg64
(lp3345
g57
(g73
g59
NtRp3346
(dp3347
g62
(dp3348
sg71
g3342
sg64
(lp3349
g57
(g78
g59
NtRp3350
(dp3351
g62
(dp3352
g82
g83
ssg71
g3346
sg64
(lp3353
S'address'
p3354
asbag57
(g78
g59
NtRp3355
(dp3356
g62
(dp3357
g89
g90
ssg71
g3346
sg64
(lp3358
S':'
asbag57
(g78
g59
NtRp3359
(dp3360
g62
(dp3361
sg71
g3346
sg64
(lp3362
g57
(g58
g59
NtRp3363
(dp3364
g62
(dp3365
g70
I3
ssg71
g3359
sg64
(lp3366
S'123'
p3367
asbasbasbag57
(g73
g59
NtRp3368
(dp3369
g62
(dp3370
sg71
g3342
sg64
(lp3371
g57
(g78
g59
NtRp3372
(dp3373
g62
(dp3374
g82
g83
ssg71
g3368
sg64
(lp3375
S'affiliated_to'
p3376
asbag57
(g78
g59
NtRp3377
(dp3378
g62
(dp3379
g89
g90
ssg71
g3368
sg64
(lp3380
S':'
asbag57
(g78
g59
NtRp3381
(dp3382
g62
(dp3383
sg71
g3368
sg64
(lp3384
g57
(g58
g59
NtRp3385
(dp3386
g62
(dp3387
g70
I3
ssg71
g3381
sg64
(lp3388
S'iiit'
p3389
asbasbasbag57
(g73
g59
NtRp3390
(dp3391
g62
(dp3392
sg71
g3342
sg64
(lp3393
g57
(g78
g59
NtRp3394
(dp3395
g62
(dp3396
g82
g83
ssg71
g3390
sg64
(lp3397
S'city'
p3398
asbag57
(g78
g59
NtRp3399
(dp3400
g62
(dp3401
g89
g90
ssg71
g3390
sg64
(lp3402
S':'
asbag57
(g78
g59
NtRp3403
(dp3404
g62
(dp3405
sg71
g3390
sg64
(lp3406
g57
(g58
g59
NtRp3407
(dp3408
g62
(dp3409
g70
I3
ssg71
g3403
sg64
(lp3410
S'ongole'
p3411
asbasbasbag57
(g73
g59
NtRp3412
(dp3413
g62
(dp3414
sg71
g3342
sg64
(lp3415
g57
(g78
g59
NtRp3416
(dp3417
g62
(dp3418
g82
g83
ssg71
g3412
sg64
(lp3419
S'country'
p3420
asbag57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
g89
g90
ssg71
g3412
sg64
(lp3424
S':'
asbag57
(g78
g59
NtRp3425
(dp3426
g62
(dp3427
sg71
g3412
sg64
(lp3428
g57
(g58
g59
NtRp3429
(dp3430
g62
(dp3431
g70
I3
ssg71
g3425
sg64
(lp3432
S'India'
p3433
asbasbasbag57
(g73
g59
NtRp3434
(dp3435
g62
(dp3436
sg71
g3342
sg64
(lp3437
g57
(g78
g59
NtRp3438
(dp3439
g62
(dp3440
g82
g83
ssg71
g3434
sg64
(lp3441
S'email'
p3442
asbag57
(g78
g59
NtRp3443
(dp3444
g62
(dp3445
g89
g90
ssg71
g3434
sg64
(lp3446
S':'
asbag57
(g78
g59
NtRp3447
(dp3448
g62
(dp3449
sg71
g3434
sg64
(lp3450
g57
(g58
g59
NtRp3451
(dp3452
g62
(dp3453
g70
I3
ssg71
g3447
sg64
(lp3454
S'anil1in7@gmail.com'
p3455
asbasbasbag57
(g73
g59
NtRp3456
(dp3457
g62
(dp3458
sg71
g3342
sg64
(lp3459
g57
(g78
g59
NtRp3460
(dp3461
g62
(dp3462
g82
g83
ssg71
g3456
sg64
(lp3463
S'first_name'
p3464
asbag57
(g78
g59
NtRp3465
(dp3466
g62
(dp3467
g89
g90
ssg71
g3456
sg64
(lp3468
S':'
asbag57
(g78
g59
NtRp3469
(dp3470
g62
(dp3471
sg71
g3456
sg64
(lp3472
g57
(g58
g59
NtRp3473
(dp3474
g62
(dp3475
g70
I3
ssg71
g3469
sg64
(lp3476
S'Anil Kumar'
p3477
asbasbasbag57
(g73
g59
NtRp3478
(dp3479
g62
(dp3480
sg71
g3342
sg64
(lp3481
g57
(g78
g59
NtRp3482
(dp3483
g62
(dp3484
g82
g83
ssg71
g3478
sg64
(lp3485
S'id'
p3486
asbag57
(g78
g59
NtRp3487
(dp3488
g62
(dp3489
g89
g90
ssg71
g3478
sg64
(lp3490
S':'
asbag57
(g78
g59
NtRp3491
(dp3492
g62
(dp3493
sg71
g3478
sg64
(lp3494
g57
(g58
g59
NtRp3495
(dp3496
g62
(dp3497
g70
I3
ssg71
g3491
sg64
(lp3498
S'1'
asbasbasbag57
(g73
g59
NtRp3499
(dp3500
g62
(dp3501
sg71
g3342
sg64
(lp3502
g57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
g82
g83
ssg71
g3499
sg64
(lp3506
S'last_name'
p3507
asbag57
(g78
g59
NtRp3508
(dp3509
g62
(dp3510
g89
g90
ssg71
g3499
sg64
(lp3511
S':'
asbag57
(g78
g59
NtRp3512
(dp3513
g62
(dp3514
sg71
g3499
sg64
(lp3515
g57
(g58
g59
NtRp3516
(dp3517
g62
(dp3518
g70
I3
ssg71
g3512
sg64
(lp3519
S'Nalamalapu'
p3520
asbasbasbag57
(g73
g59
NtRp3521
(dp3522
g62
(dp3523
sg71
g3342
sg64
(lp3524
g57
(g78
g59
NtRp3525
(dp3526
g62
(dp3527
g82
g83
ssg71
g3521
sg64
(lp3528
S'mobile'
p3529
asbag57
(g78
g59
NtRp3530
(dp3531
g62
(dp3532
g89
g90
ssg71
g3521
sg64
(lp3533
S':'
asbag57
(g78
g59
NtRp3534
(dp3535
g62
(dp3536
sg71
g3521
sg64
(lp3537
g57
(g58
g59
NtRp3538
(dp3539
g62
(dp3540
g70
I3
ssg71
g3534
sg64
(lp3541
S'918885334113'
p3542
asbasbasbag57
(g73
g59
NtRp3543
(dp3544
g62
(dp3545
sg71
g3342
sg64
(lp3546
g57
(g78
g59
NtRp3547
(dp3548
g62
(dp3549
g82
g83
ssg71
g3543
sg64
(lp3550
S'phone'
p3551
asbag57
(g78
g59
NtRp3552
(dp3553
g62
(dp3554
g89
g90
ssg71
g3543
sg64
(lp3555
S':'
asbag57
(g78
g59
NtRp3556
(dp3557
g62
(dp3558
sg71
g3543
sg64
(lp3559
g57
(g58
g59
NtRp3560
(dp3561
g62
(dp3562
g70
I3
ssg71
g3556
sg64
(lp3563
S'918885334113'
p3564
asbasbasbag57
(g73
g59
NtRp3565
(dp3566
g62
(dp3567
sg71
g3342
sg64
(lp3568
g57
(g78
g59
NtRp3569
(dp3570
g62
(dp3571
g82
g83
ssg71
g3565
sg64
(lp3572
S'position'
p3573
asbag57
(g78
g59
NtRp3574
(dp3575
g62
(dp3576
g89
g90
ssg71
g3565
sg64
(lp3577
S':'
asbag57
(g78
g59
NtRp3578
(dp3579
g62
(dp3580
sg71
g3565
sg64
(lp3581
g57
(g58
g59
NtRp3582
(dp3583
g62
(dp3584
g70
I3
ssg71
g3578
sg64
(lp3585
S'2'
asbasbasbag57
(g73
g59
NtRp3586
(dp3587
g62
(dp3588
sg71
g3342
sg64
(lp3589
g57
(g78
g59
NtRp3590
(dp3591
g62
(dp3592
g82
g83
ssg71
g3586
sg64
(lp3593
S'postal_code'
p3594
asbag57
(g78
g59
NtRp3595
(dp3596
g62
(dp3597
g89
g90
ssg71
g3586
sg64
(lp3598
S':'
asbag57
(g78
g59
NtRp3599
(dp3600
g62
(dp3601
sg71
g3586
sg64
(lp3602
g57
(g58
g59
NtRp3603
(dp3604
g62
(dp3605
g70
I3
ssg71
g3599
sg64
(lp3606
S'523182'
p3607
asbasbasbag57
(g73
g59
NtRp3608
(dp3609
g62
(dp3610
sg71
g3342
sg64
(lp3611
g57
(g78
g59
NtRp3612
(dp3613
g62
(dp3614
g82
g83
ssg71
g3608
sg64
(lp3615
S'registration_at'
p3616
asbag57
(g78
g59
NtRp3617
(dp3618
g62
(dp3619
g89
g90
ssg71
g3608
sg64
(lp3620
S':'
asbag57
(g78
g59
NtRp3621
(dp3622
g62
(dp3623
sg71
g3608
sg64
(lp3624
g57
(g58
g59
NtRp3625
(dp3626
g62
(dp3627
g70
I3
ssg71
g3621
sg64
(lp3628
S'0'
asbasbasbag57
(g73
g59
NtRp3629
(dp3630
g62
(dp3631
sg71
g3342
sg64
(lp3632
g57
(g78
g59
NtRp3633
(dp3634
g62
(dp3635
g82
g83
ssg71
g3629
sg64
(lp3636
S'registration_id'
p3637
asbag57
(g78
g59
NtRp3638
(dp3639
g62
(dp3640
g89
g90
ssg71
g3629
sg64
(lp3641
S':'
asbag57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
sg71
g3629
sg64
(lp3645
g57
(g58
g59
NtRp3646
(dp3647
g62
(dp3648
g70
I3
ssg71
g3642
sg64
(lp3649
S''
asbasbasbag57
(g73
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3342
sg64
(lp3653
g57
(g78
g59
NtRp3654
(dp3655
g62
(dp3656
g82
g83
ssg71
g3650
sg64
(lp3657
S'registration_key'
p3658
asbag57
(g78
g59
NtRp3659
(dp3660
g62
(dp3661
g89
g90
ssg71
g3650
sg64
(lp3662
S':'
asbag57
(g78
g59
NtRp3663
(dp3664
g62
(dp3665
sg71
g3650
sg64
(lp3666
g57
(g58
g59
NtRp3667
(dp3668
g62
(dp3669
g70
I3
ssg71
g3663
sg64
(lp3670
S''
asbasbasbag57
(g73
g59
NtRp3671
(dp3672
g62
(dp3673
sg71
g3342
sg64
(lp3674
g57
(g78
g59
NtRp3675
(dp3676
g62
(dp3677
g82
g83
ssg71
g3671
sg64
(lp3678
S'reset_password_key'
p3679
asbag57
(g78
g59
NtRp3680
(dp3681
g62
(dp3682
g89
g90
ssg71
g3671
sg64
(lp3683
S':'
asbag57
(g78
g59
NtRp3684
(dp3685
g62
(dp3686
sg71
g3671
sg64
(lp3687
g57
(g58
g59
NtRp3688
(dp3689
g62
(dp3690
g70
I3
ssg71
g3684
sg64
(lp3691
S''
asbasbasbag57
(g73
g59
NtRp3692
(dp3693
g62
(dp3694
sg71
g3342
sg64
(lp3695
g57
(g78
g59
NtRp3696
(dp3697
g62
(dp3698
g82
g83
ssg71
g3692
sg64
(lp3699
S'title'
p3700
asbag57
(g78
g59
NtRp3701
(dp3702
g62
(dp3703
g89
g90
ssg71
g3692
sg64
(lp3704
S':'
asbag57
(g78
g59
NtRp3705
(dp3706
g62
(dp3707
sg71
g3692
sg64
(lp3708
g57
(g58
g59
NtRp3709
(dp3710
g62
(dp3711
g70
I3
ssg71
g3705
sg64
(lp3712
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3713
(dp3714
g62
(dp3715
sg71
g3251
sg64
(lp3716
g57
(g78
g59
NtRp3717
(dp3718
g62
(dp3719
g82
g83
ssg71
g3713
sg64
(lp3720
S'user_groups'
p3721
asbag57
(g78
g59
NtRp3722
(dp3723
g62
(dp3724
g89
g90
ssg71
g3713
sg64
(lp3725
S':'
asbag57
(g78
g59
NtRp3726
(dp3727
g62
(dp3728
sg71
g3713
sg64
(lp3729
g57
(g58
g59
NtRp3730
(dp3731
g62
(dp3732
g70
I4
ssg71
g3726
sg64
(lp3733
g57
(g66
g59
NtRp3734
(dp3735
g62
(dp3736
g70
I3
ssg71
Nsg64
(lp3737
g57
(g73
g59
NtRp3738
(dp3739
g62
(dp3740
sg71
g3734
sg64
(lp3741
g57
(g78
g59
NtRp3742
(dp3743
g62
(dp3744
g82
g83
ssg71
g3738
sg64
(lp3745
S'8'
asbag57
(g78
g59
NtRp3746
(dp3747
g62
(dp3748
g89
g90
ssg71
g3738
sg64
(lp3749
S':'
asbag57
(g78
g59
NtRp3750
(dp3751
g62
(dp3752
sg71
g3738
sg64
(lp3753
g57
(g58
g59
NtRp3754
(dp3755
g62
(dp3756
g70
I3
ssg71
g3750
sg64
(lp3757
S'user_1'
p3758
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3759
(dp3760
g62
(dp3761
sg71
g3226
sg64
(lp3762
g57
(g78
g59
NtRp3763
(dp3764
g62
(dp3765
g82
g83
ssg71
g3759
sg64
(lp3766
S'flash'
p3767
asbag57
(g78
g59
NtRp3768
(dp3769
g62
(dp3770
g89
g90
ssg71
g3759
sg64
(lp3771
S':'
asbag57
(g78
g59
NtRp3772
(dp3773
g62
(dp3774
sg71
g3759
sg64
(lp3775
g57
(g58
g59
NtRp3776
(dp3777
g62
(dp3778
g70
I5
ssg71
g3772
sg64
(lp3779
S'None'
p3780
asbasbasbag57
(g73
g59
NtRp3781
(dp3782
g62
(dp3783
sg71
g3226
sg64
(lp3784
g57
(g78
g59
NtRp3785
(dp3786
g62
(dp3787
g82
g83
ssg71
g3781
sg64
(lp3788
S'last_orderby'
p3789
asbag57
(g78
g59
NtRp3790
(dp3791
g62
(dp3792
g89
g90
ssg71
g3781
sg64
(lp3793
S':'
asbag57
(g78
g59
NtRp3794
(dp3795
g62
(dp3796
sg71
g3781
sg64
(lp3797
g57
(g58
g59
NtRp3798
(dp3799
g62
(dp3800
g70
I5
ssg71
g3794
sg64
(lp3801
S'None'
p3802
asbasbasbag57
(g73
g59
NtRp3803
(dp3804
g62
(dp3805
sg71
g3226
sg64
(lp3806
g57
(g78
g59
NtRp3807
(dp3808
g62
(dp3809
g82
g83
ssg71
g3803
sg64
(lp3810
S'last_query'
p3811
asbag57
(g78
g59
NtRp3812
(dp3813
g62
(dp3814
g89
g90
ssg71
g3803
sg64
(lp3815
S':'
asbag57
(g78
g59
NtRp3816
(dp3817
g62
(dp3818
sg71
g3803
sg64
(lp3819
g57
(g58
g59
NtRp3820
(dp3821
g62
(dp3822
g70
I5
ssg71
g3816
sg64
(lp3823
S'db.sample.id>0'
p3824
asbasbasbasbasbsS'etype'
p3825
S"<type 'exceptions.AttributeError'>"
p3826
sS'date'
p3827
S'Mon Feb 25 12:25:28 2013'
p3828
sS'response'
p3829
g57
(g58
g59
NtRp3830
(dp3831
g62
(dp3832
sg64
(lp3833
g57
(g66
g59
NtRp3834
(dp3835
g62
(dp3836
g70
I5
ssg71
Nsg64
(lp3837
g57
(g73
g59
NtRp3838
(dp3839
g62
(dp3840
sg71
g3834
sg64
(lp3841
g57
(g78
g59
NtRp3842
(dp3843
g62
(dp3844
g82
g83
ssg71
g3838
sg64
(lp3845
g231
asbag57
(g78
g59
NtRp3846
(dp3847
g62
(dp3848
g89
g90
ssg71
g3838
sg64
(lp3849
S':'
asbag57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
sg71
g3838
sg64
(lp3853
g57
(g58
g59
NtRp3854
(dp3855
g62
(dp3856
g70
I5
ssg71
g3850
sg64
(lp3857
S'<cStringIO.StringO object at 0xadb2aee0>'
p3858
asbasbasbag57
(g73
g59
NtRp3859
(dp3860
g62
(dp3861
sg71
g3834
sg64
(lp3862
g57
(g78
g59
NtRp3863
(dp3864
g62
(dp3865
g82
g83
ssg71
g3859
sg64
(lp3866
g319
asbag57
(g78
g59
NtRp3867
(dp3868
g62
(dp3869
g89
g90
ssg71
g3859
sg64
(lp3870
S':'
asbag57
(g78
g59
NtRp3871
(dp3872
g62
(dp3873
sg71
g3859
sg64
(lp3874
g57
(g58
g59
NtRp3875
(dp3876
g62
(dp3877
g70
I5
ssg71
g3871
sg64
(lp3878
g57
(g66
g59
NtRp3879
(dp3880
g62
(dp3881
g70
I4
ssg71
Nsg64
(lp3882
g57
(g73
g59
NtRp3883
(dp3884
g62
(dp3885
sg71
g3879
sg64
(lp3886
g57
(g78
g59
NtRp3887
(dp3888
g62
(dp3889
g82
g83
ssg71
g3883
sg64
(lp3890
S'session_id_dev_bootstrap_ch'
p3891
asbag57
(g78
g59
NtRp3892
(dp3893
g62
(dp3894
g89
g90
ssg71
g3883
sg64
(lp3895
S':'
asbag57
(g78
g59
NtRp3896
(dp3897
g62
(dp3898
sg71
g3883
sg64
(lp3899
g57
(g58
g59
NtRp3900
(dp3901
g62
(dp3902
g70
I4
ssg71
g3896
sg64
(lp3903
g551
ag57
(g66
g59
NtRp3904
(dp3905
g62
(dp3906
g70
I3
ssg71
Nsg64
(lp3907
g57
(g73
g59
NtRp3908
(dp3909
g62
(dp3910
sg71
g3904
sg64
(lp3911
g57
(g78
g59
NtRp3912
(dp3913
g62
(dp3914
g82
g83
ssg71
g3908
sg64
(lp3915
g370
asbag57
(g78
g59
NtRp3916
(dp3917
g62
(dp3918
g89
g90
ssg71
g3908
sg64
(lp3919
S':'
asbag57
(g78
g59
NtRp3920
(dp3921
g62
(dp3922
sg71
g3908
sg64
(lp3923
g57
(g58
g59
NtRp3924
(dp3925
g62
(dp3926
g70
I3
ssg71
g3920
sg64
(lp3927
S''
asbasbasbag57
(g73
g59
NtRp3928
(dp3929
g62
(dp3930
sg71
g3904
sg64
(lp3931
g57
(g78
g59
NtRp3932
(dp3933
g62
(dp3934
g82
g83
ssg71
g3928
sg64
(lp3935
g391
asbag57
(g78
g59
NtRp3936
(dp3937
g62
(dp3938
g89
g90
ssg71
g3928
sg64
(lp3939
S':'
asbag57
(g78
g59
NtRp3940
(dp3941
g62
(dp3942
sg71
g3928
sg64
(lp3943
g57
(g58
g59
NtRp3944
(dp3945
g62
(dp3946
g70
I3
ssg71
g3940
sg64
(lp3947
S''
asbasbasbag57
(g73
g59
NtRp3948
(dp3949
g62
(dp3950
sg71
g3904
sg64
(lp3951
g57
(g78
g59
NtRp3952
(dp3953
g62
(dp3954
g82
g83
ssg71
g3948
sg64
(lp3955
g412
asbag57
(g78
g59
NtRp3956
(dp3957
g62
(dp3958
g89
g90
ssg71
g3948
sg64
(lp3959
S':'
asbag57
(g78
g59
NtRp3960
(dp3961
g62
(dp3962
sg71
g3948
sg64
(lp3963
g57
(g58
g59
NtRp3964
(dp3965
g62
(dp3966
g70
I3
ssg71
g3960
sg64
(lp3967
S''
asbasbasbag57
(g73
g59
NtRp3968
(dp3969
g62
(dp3970
sg71
g3904
sg64
(lp3971
g57
(g78
g59
NtRp3972
(dp3973
g62
(dp3974
g82
g83
ssg71
g3968
sg64
(lp3975
g433
asbag57
(g78
g59
NtRp3976
(dp3977
g62
(dp3978
g89
g90
ssg71
g3968
sg64
(lp3979
S':'
asbag57
(g78
g59
NtRp3980
(dp3981
g62
(dp3982
sg71
g3968
sg64
(lp3983
g57
(g58
g59
NtRp3984
(dp3985
g62
(dp3986
g70
I3
ssg71
g3980
sg64
(lp3987
S''
asbasbasbag57
(g73
g59
NtRp3988
(dp3989
g62
(dp3990
sg71
g3904
sg64
(lp3991
g57
(g78
g59
NtRp3992
(dp3993
g62
(dp3994
g82
g83
ssg71
g3988
sg64
(lp3995
g454
asbag57
(g78
g59
NtRp3996
(dp3997
g62
(dp3998
g89
g90
ssg71
g3988
sg64
(lp3999
S':'
asbag57
(g78
g59
NtRp4000
(dp4001
g62
(dp4002
sg71
g3988
sg64
(lp4003
g57
(g58
g59
NtRp4004
(dp4005
g62
(dp4006
g70
I3
ssg71
g4000
sg64
(lp4007
S''
asbasbasbag57
(g73
g59
NtRp4008
(dp4009
g62
(dp4010
sg71
g3904
sg64
(lp4011
g57
(g78
g59
NtRp4012
(dp4013
g62
(dp4014
g82
g83
ssg71
g4008
sg64
(lp4015
g475
asbag57
(g78
g59
NtRp4016
(dp4017
g62
(dp4018
g89
g90
ssg71
g4008
sg64
(lp4019
S':'
asbag57
(g78
g59
NtRp4020
(dp4021
g62
(dp4022
sg71
g4008
sg64
(lp4023
g57
(g58
g59
NtRp4024
(dp4025
g62
(dp4026
g70
I3
ssg71
g4020
sg64
(lp4027
S'/'
asbasbasbag57
(g73
g59
NtRp4028
(dp4029
g62
(dp4030
sg71
g3904
sg64
(lp4031
g57
(g78
g59
NtRp4032
(dp4033
g62
(dp4034
g82
g83
ssg71
g4028
sg64
(lp4035
g496
asbag57
(g78
g59
NtRp4036
(dp4037
g62
(dp4038
g89
g90
ssg71
g4028
sg64
(lp4039
S':'
asbag57
(g78
g59
NtRp4040
(dp4041
g62
(dp4042
sg71
g4028
sg64
(lp4043
g57
(g58
g59
NtRp4044
(dp4045
g62
(dp4046
g70
I3
ssg71
g4040
sg64
(lp4047
S''
asbasbasbag57
(g73
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g3904
sg64
(lp4051
g57
(g78
g59
NtRp4052
(dp4053
g62
(dp4054
g82
g83
ssg71
g4048
sg64
(lp4055
g517
asbag57
(g78
g59
NtRp4056
(dp4057
g62
(dp4058
g89
g90
ssg71
g4048
sg64
(lp4059
S':'
asbag57
(g78
g59
NtRp4060
(dp4061
g62
(dp4062
sg71
g4048
sg64
(lp4063
g57
(g58
g59
NtRp4064
(dp4065
g62
(dp4066
g70
I3
ssg71
g4060
sg64
(lp4067
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4068
(dp4069
g62
(dp4070
sg71
g3834
sg64
(lp4071
g57
(g78
g59
NtRp4072
(dp4073
g62
(dp4074
g82
g83
ssg71
g4068
sg64
(lp4075
S'delimiters'
p4076
asbag57
(g78
g59
NtRp4077
(dp4078
g62
(dp4079
g89
g90
ssg71
g4068
sg64
(lp4080
S':'
asbag57
(g78
g59
NtRp4081
(dp4082
g62
(dp4083
sg71
g4068
sg64
(lp4084
g57
(g58
g59
NtRp4085
(dp4086
g62
(dp4087
g70
I5
ssg71
g4081
sg64
(lp4088
g57
(g66
g59
NtRp4089
(dp4090
g62
(dp4091
g70
I4
ssg71
Nsg64
(lp4092
g57
(g73
g59
NtRp4093
(dp4094
g62
(dp4095
sg71
g4089
sg64
(lp4096
g57
(g78
g59
NtRp4097
(dp4098
g62
(dp4099
sg71
g4093
sg64
(lp4100
g57
(g58
g59
NtRp4101
(dp4102
g62
(dp4103
g70
I4
ssg71
g4097
sg64
(lp4104
S'{{'
p4105
asbasbasbag57
(g73
g59
NtRp4106
(dp4107
g62
(dp4108
sg71
g4089
sg64
(lp4109
g57
(g78
g59
NtRp4110
(dp4111
g62
(dp4112
sg71
g4106
sg64
(lp4113
g57
(g58
g59
NtRp4114
(dp4115
g62
(dp4116
g70
I4
ssg71
g4110
sg64
(lp4117
S'}}'
p4118
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4119
(dp4120
g62
(dp4121
sg71
g3834
sg64
(lp4122
g57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
g82
g83
ssg71
g4119
sg64
(lp4126
S'files'
p4127
asbag57
(g78
g59
NtRp4128
(dp4129
g62
(dp4130
g89
g90
ssg71
g4119
sg64
(lp4131
S':'
asbag57
(g78
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g4119
sg64
(lp4135
g57
(g58
g59
NtRp4136
(dp4137
g62
(dp4138
g70
I5
ssg71
g4132
sg64
(lp4139
g57
(g66
g59
NtRp4140
(dp4141
g62
(dp4142
g70
I4
ssg71
Nsg64
(lp4143
g57
(g73
g59
NtRp4144
(dp4145
g62
(dp4146
sg71
g4140
sg64
(lp4147
g57
(g78
g59
NtRp4148
(dp4149
g62
(dp4150
sg71
g4144
sg64
(lp4151
g57
(g58
g59
NtRp4152
(dp4153
g62
(dp4154
g70
I4
ssg71
g4148
sg64
(lp4155
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4156
asbasbasbag57
(g73
g59
NtRp4157
(dp4158
g62
(dp4159
sg71
g4140
sg64
(lp4160
g57
(g78
g59
NtRp4161
(dp4162
g62
(dp4163
sg71
g4157
sg64
(lp4164
g57
(g58
g59
NtRp4165
(dp4166
g62
(dp4167
g70
I4
ssg71
g4161
sg64
(lp4168
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4169
asbasbasbag57
(g73
g59
NtRp4170
(dp4171
g62
(dp4172
sg71
g4140
sg64
(lp4173
g57
(g78
g59
NtRp4174
(dp4175
g62
(dp4176
sg71
g4170
sg64
(lp4177
g57
(g58
g59
NtRp4178
(dp4179
g62
(dp4180
g70
I4
ssg71
g4174
sg64
(lp4181
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4182
asbasbasbag57
(g73
g59
NtRp4183
(dp4184
g62
(dp4185
sg71
g4140
sg64
(lp4186
g57
(g78
g59
NtRp4187
(dp4188
g62
(dp4189
sg71
g4183
sg64
(lp4190
g57
(g58
g59
NtRp4191
(dp4192
g62
(dp4193
g70
I4
ssg71
g4187
sg64
(lp4194
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4195
asbasbasbag57
(g73
g59
NtRp4196
(dp4197
g62
(dp4198
sg71
g4140
sg64
(lp4199
g57
(g78
g59
NtRp4200
(dp4201
g62
(dp4202
sg71
g4196
sg64
(lp4203
g57
(g58
g59
NtRp4204
(dp4205
g62
(dp4206
g70
I4
ssg71
g4200
sg64
(lp4207
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4208
asbasbasbag57
(g73
g59
NtRp4209
(dp4210
g62
(dp4211
sg71
g4140
sg64
(lp4212
g57
(g78
g59
NtRp4213
(dp4214
g62
(dp4215
sg71
g4209
sg64
(lp4216
g57
(g58
g59
NtRp4217
(dp4218
g62
(dp4219
g70
I4
ssg71
g4213
sg64
(lp4220
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4221
asbasbasbag57
(g73
g59
NtRp4222
(dp4223
g62
(dp4224
sg71
g4140
sg64
(lp4225
g57
(g78
g59
NtRp4226
(dp4227
g62
(dp4228
sg71
g4222
sg64
(lp4229
g57
(g58
g59
NtRp4230
(dp4231
g62
(dp4232
g70
I4
ssg71
g4226
sg64
(lp4233
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4234
asbasbasbag57
(g73
g59
NtRp4235
(dp4236
g62
(dp4237
sg71
g4140
sg64
(lp4238
g57
(g78
g59
NtRp4239
(dp4240
g62
(dp4241
sg71
g4235
sg64
(lp4242
g57
(g58
g59
NtRp4243
(dp4244
g62
(dp4245
g70
I4
ssg71
g4239
sg64
(lp4246
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4247
asbasbasbag57
(g73
g59
NtRp4248
(dp4249
g62
(dp4250
sg71
g4140
sg64
(lp4251
g57
(g78
g59
NtRp4252
(dp4253
g62
(dp4254
sg71
g4248
sg64
(lp4255
g57
(g58
g59
NtRp4256
(dp4257
g62
(dp4258
g70
I4
ssg71
g4252
sg64
(lp4259
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4260
asbasbasbag57
(g73
g59
NtRp4261
(dp4262
g62
(dp4263
sg71
g4140
sg64
(lp4264
g57
(g78
g59
NtRp4265
(dp4266
g62
(dp4267
sg71
g4261
sg64
(lp4268
g57
(g58
g59
NtRp4269
(dp4270
g62
(dp4271
g70
I4
ssg71
g4265
sg64
(lp4272
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4273
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4274
(dp4275
g62
(dp4276
sg71
g3834
sg64
(lp4277
g57
(g78
g59
NtRp4278
(dp4279
g62
(dp4280
g82
g83
ssg71
g4274
sg64
(lp4281
S'flash'
p4282
asbag57
(g78
g59
NtRp4283
(dp4284
g62
(dp4285
g89
g90
ssg71
g4274
sg64
(lp4286
S':'
asbag57
(g78
g59
NtRp4287
(dp4288
g62
(dp4289
sg71
g4274
sg64
(lp4290
g57
(g58
g59
NtRp4291
(dp4292
g62
(dp4293
g70
I5
ssg71
g4287
sg64
(lp4294
S''
asbasbasbag57
(g73
g59
NtRp4295
(dp4296
g62
(dp4297
sg71
g3834
sg64
(lp4298
g57
(g78
g59
NtRp4299
(dp4300
g62
(dp4301
g82
g83
ssg71
g4295
sg64
(lp4302
S'generic_patterns'
p4303
asbag57
(g78
g59
NtRp4304
(dp4305
g62
(dp4306
g89
g90
ssg71
g4295
sg64
(lp4307
S':'
asbag57
(g78
g59
NtRp4308
(dp4309
g62
(dp4310
sg71
g4295
sg64
(lp4311
g57
(g58
g59
NtRp4312
(dp4313
g62
(dp4314
g70
I5
ssg71
g4308
sg64
(lp4315
g57
(g66
g59
NtRp4316
(dp4317
g62
(dp4318
g70
I4
ssg71
Nsg64
(lp4319
g57
(g73
g59
NtRp4320
(dp4321
g62
(dp4322
sg71
g4316
sg64
(lp4323
g57
(g78
g59
NtRp4324
(dp4325
g62
(dp4326
sg71
g4320
sg64
(lp4327
g57
(g58
g59
NtRp4328
(dp4329
g62
(dp4330
g70
I4
ssg71
g4324
sg64
(lp4331
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4332
(dp4333
g62
(dp4334
sg71
g3834
sg64
(lp4335
g57
(g78
g59
NtRp4336
(dp4337
g62
(dp4338
g82
g83
ssg71
g4332
sg64
(lp4339
S'google_analytics_id'
p4340
asbag57
(g78
g59
NtRp4341
(dp4342
g62
(dp4343
g89
g90
ssg71
g4332
sg64
(lp4344
S':'
asbag57
(g78
g59
NtRp4345
(dp4346
g62
(dp4347
sg71
g4332
sg64
(lp4348
g57
(g58
g59
NtRp4349
(dp4350
g62
(dp4351
g70
I5
ssg71
g4345
sg64
(lp4352
S'None'
p4353
asbasbasbag57
(g73
g59
NtRp4354
(dp4355
g62
(dp4356
sg71
g3834
sg64
(lp4357
g57
(g78
g59
NtRp4358
(dp4359
g62
(dp4360
g82
g83
ssg71
g4354
sg64
(lp4361
S'headers'
p4362
asbag57
(g78
g59
NtRp4363
(dp4364
g62
(dp4365
g89
g90
ssg71
g4354
sg64
(lp4366
S':'
asbag57
(g78
g59
NtRp4367
(dp4368
g62
(dp4369
sg71
g4354
sg64
(lp4370
g57
(g58
g59
NtRp4371
(dp4372
g62
(dp4373
g70
I5
ssg71
g4367
sg64
(lp4374
g57
(g66
g59
NtRp4375
(dp4376
g62
(dp4377
g70
I4
ssg71
Nsg64
(lp4378
g57
(g73
g59
NtRp4379
(dp4380
g62
(dp4381
sg71
g4375
sg64
(lp4382
g57
(g78
g59
NtRp4383
(dp4384
g62
(dp4385
g82
g83
ssg71
g4379
sg64
(lp4386
S'X-Powered-By'
p4387
asbag57
(g78
g59
NtRp4388
(dp4389
g62
(dp4390
g89
g90
ssg71
g4379
sg64
(lp4391
S':'
asbag57
(g78
g59
NtRp4392
(dp4393
g62
(dp4394
sg71
g4379
sg64
(lp4395
g57
(g58
g59
NtRp4396
(dp4397
g62
(dp4398
g70
I4
ssg71
g4392
sg64
(lp4399
S'web2py'
p4400
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4401
(dp4402
g62
(dp4403
sg71
g3834
sg64
(lp4404
g57
(g78
g59
NtRp4405
(dp4406
g62
(dp4407
g82
g83
ssg71
g4401
sg64
(lp4408
S'menu'
p4409
asbag57
(g78
g59
NtRp4410
(dp4411
g62
(dp4412
g89
g90
ssg71
g4401
sg64
(lp4413
S':'
asbag57
(g78
g59
NtRp4414
(dp4415
g62
(dp4416
sg71
g4401
sg64
(lp4417
g57
(g58
g59
NtRp4418
(dp4419
g62
(dp4420
g70
I5
ssg71
g4414
sg64
(lp4421
g57
(g66
g59
NtRp4422
(dp4423
g62
(dp4424
g70
I4
ssg71
Nsg64
(lp4425
g57
(g73
g59
NtRp4426
(dp4427
g62
(dp4428
sg71
g4422
sg64
(lp4429
g57
(g78
g59
NtRp4430
(dp4431
g62
(dp4432
sg71
g4426
sg64
(lp4433
g57
(g58
g59
NtRp4434
(dp4435
g62
(dp4436
g70
I4
ssg71
g4430
sg64
(lp4437
g57
(g66
g59
NtRp4438
(dp4439
g62
(dp4440
g70
I3
ssg71
Nsg64
(lp4441
g57
(g73
g59
NtRp4442
(dp4443
g62
(dp4444
sg71
g4438
sg64
(lp4445
g57
(g78
g59
NtRp4446
(dp4447
g62
(dp4448
sg71
g4442
sg64
(lp4449
g57
(g58
g59
NtRp4450
(dp4451
g62
(dp4452
g70
I3
ssg71
g4446
sg64
(lp4453
cgluon.languages
lazyT_unpickle
p4454
(S't\x04\x00\x00\x00Home'
tRp4455
asbasbasbag57
(g73
g59
NtRp4456
(dp4457
g62
(dp4458
sg71
g4438
sg64
(lp4459
g57
(g78
g59
NtRp4460
(dp4461
g62
(dp4462
sg71
g4456
sg64
(lp4463
g57
(g58
g59
NtRp4464
(dp4465
g62
(dp4466
g70
I3
ssg71
g4460
sg64
(lp4467
g100
asbasbasbag57
(g73
g59
NtRp4468
(dp4469
g62
(dp4470
sg71
g4438
sg64
(lp4471
g57
(g78
g59
NtRp4472
(dp4473
g62
(dp4474
sg71
g4468
sg64
(lp4475
g57
(g58
g59
NtRp4476
(dp4477
g62
(dp4478
g70
I3
ssg71
g4472
sg64
(lp4479
S'/DEV_bootstrap_ch/default/list_all_projects'
p4480
asbasbasbag57
(g73
g59
NtRp4481
(dp4482
g62
(dp4483
sg71
g4438
sg64
(lp4484
g57
(g78
g59
NtRp4485
(dp4486
g62
(dp4487
sg71
g4481
sg64
(lp4488
g57
(g58
g59
NtRp4489
(dp4490
g62
(dp4491
g70
I3
ssg71
g4485
sg64
(lp4492
g57
(g66
g59
NtRp4493
(dp4494
g62
(dp4495
g70
I2
ssg71
Nsg64
(lp4496
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4497
(dp4498
g62
(dp4499
sg71
g4422
sg64
(lp4500
g57
(g78
g59
NtRp4501
(dp4502
g62
(dp4503
sg71
g4497
sg64
(lp4504
g57
(g58
g59
NtRp4505
(dp4506
g62
(dp4507
g70
I4
ssg71
g4501
sg64
(lp4508
g57
(g66
g59
NtRp4509
(dp4510
g62
(dp4511
g70
I3
ssg71
Nsg64
(lp4512
g57
(g73
g59
NtRp4513
(dp4514
g62
(dp4515
sg71
g4509
sg64
(lp4516
g57
(g78
g59
NtRp4517
(dp4518
g62
(dp4519
sg71
g4513
sg64
(lp4520
g57
(g58
g59
NtRp4521
(dp4522
g62
(dp4523
g70
I3
ssg71
g4517
sg64
(lp4524
g4454
(S't\x08\x00\x00\x00Projects'
tRp4525
asbasbasbag57
(g73
g59
NtRp4526
(dp4527
g62
(dp4528
sg71
g4509
sg64
(lp4529
g57
(g78
g59
NtRp4530
(dp4531
g62
(dp4532
sg71
g4526
sg64
(lp4533
g57
(g58
g59
NtRp4534
(dp4535
g62
(dp4536
g70
I3
ssg71
g4530
sg64
(lp4537
g100
asbasbasbag57
(g73
g59
NtRp4538
(dp4539
g62
(dp4540
sg71
g4509
sg64
(lp4541
g57
(g78
g59
NtRp4542
(dp4543
g62
(dp4544
sg71
g4538
sg64
(lp4545
g57
(g58
g59
NtRp4546
(dp4547
g62
(dp4548
g70
I3
ssg71
g4542
sg64
(lp4549
S'/DEV_bootstrap_ch/default/list_all_projects'
p4550
asbasbasbag57
(g73
g59
NtRp4551
(dp4552
g62
(dp4553
sg71
g4509
sg64
(lp4554
g57
(g78
g59
NtRp4555
(dp4556
g62
(dp4557
sg71
g4551
sg64
(lp4558
g57
(g58
g59
NtRp4559
(dp4560
g62
(dp4561
g70
I3
ssg71
g4555
sg64
(lp4562
g57
(g66
g59
NtRp4563
(dp4564
g62
(dp4565
g70
I2
ssg71
Nsg64
(lp4566
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4567
(dp4568
g62
(dp4569
sg71
g3834
sg64
(lp4570
g57
(g78
g59
NtRp4571
(dp4572
g62
(dp4573
g82
g83
ssg71
g4567
sg64
(lp4574
S'meta'
p4575
asbag57
(g78
g59
NtRp4576
(dp4577
g62
(dp4578
g89
g90
ssg71
g4567
sg64
(lp4579
S':'
asbag57
(g78
g59
NtRp4580
(dp4581
g62
(dp4582
sg71
g4567
sg64
(lp4583
g57
(g58
g59
NtRp4584
(dp4585
g62
(dp4586
g70
I5
ssg71
g4580
sg64
(lp4587
g57
(g66
g59
NtRp4588
(dp4589
g62
(dp4590
g70
I4
ssg71
Nsg64
(lp4591
g57
(g73
g59
NtRp4592
(dp4593
g62
(dp4594
sg71
g4588
sg64
(lp4595
g57
(g78
g59
NtRp4596
(dp4597
g62
(dp4598
g82
g83
ssg71
g4592
sg64
(lp4599
S'author'
p4600
asbag57
(g78
g59
NtRp4601
(dp4602
g62
(dp4603
g89
g90
ssg71
g4592
sg64
(lp4604
S':'
asbag57
(g78
g59
NtRp4605
(dp4606
g62
(dp4607
sg71
g4592
sg64
(lp4608
g57
(g58
g59
NtRp4609
(dp4610
g62
(dp4611
g70
I4
ssg71
g4605
sg64
(lp4612
S'Vikram Pudi <vikram@iiit.ac.in>'
p4613
asbasbasbag57
(g73
g59
NtRp4614
(dp4615
g62
(dp4616
sg71
g4588
sg64
(lp4617
g57
(g78
g59
NtRp4618
(dp4619
g62
(dp4620
g82
g83
ssg71
g4614
sg64
(lp4621
S'copyright'
p4622
asbag57
(g78
g59
NtRp4623
(dp4624
g62
(dp4625
g89
g90
ssg71
g4614
sg64
(lp4626
S':'
asbag57
(g78
g59
NtRp4627
(dp4628
g62
(dp4629
sg71
g4614
sg64
(lp4630
g57
(g58
g59
NtRp4631
(dp4632
g62
(dp4633
g70
I4
ssg71
g4627
sg64
(lp4634
S'Copyright 2011'
p4635
asbasbasbag57
(g73
g59
NtRp4636
(dp4637
g62
(dp4638
sg71
g4588
sg64
(lp4639
g57
(g78
g59
NtRp4640
(dp4641
g62
(dp4642
g82
g83
ssg71
g4636
sg64
(lp4643
S'description'
p4644
asbag57
(g78
g59
NtRp4645
(dp4646
g62
(dp4647
g89
g90
ssg71
g4636
sg64
(lp4648
S':'
asbag57
(g78
g59
NtRp4649
(dp4650
g62
(dp4651
sg71
g4636
sg64
(lp4652
g57
(g58
g59
NtRp4653
(dp4654
g62
(dp4655
g70
I4
ssg71
g4649
sg64
(lp4656
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4657
asbasbasbag57
(g73
g59
NtRp4658
(dp4659
g62
(dp4660
sg71
g4588
sg64
(lp4661
g57
(g78
g59
NtRp4662
(dp4663
g62
(dp4664
g82
g83
ssg71
g4658
sg64
(lp4665
S'generator'
p4666
asbag57
(g78
g59
NtRp4667
(dp4668
g62
(dp4669
g89
g90
ssg71
g4658
sg64
(lp4670
S':'
asbag57
(g78
g59
NtRp4671
(dp4672
g62
(dp4673
sg71
g4658
sg64
(lp4674
g57
(g58
g59
NtRp4675
(dp4676
g62
(dp4677
g70
I4
ssg71
g4671
sg64
(lp4678
S'Web2py Web Framework'
p4679
asbasbasbag57
(g73
g59
NtRp4680
(dp4681
g62
(dp4682
sg71
g4588
sg64
(lp4683
g57
(g78
g59
NtRp4684
(dp4685
g62
(dp4686
g82
g83
ssg71
g4680
sg64
(lp4687
S'keywords'
p4688
asbag57
(g78
g59
NtRp4689
(dp4690
g62
(dp4691
g89
g90
ssg71
g4680
sg64
(lp4692
S':'
asbag57
(g78
g59
NtRp4693
(dp4694
g62
(dp4695
sg71
g4680
sg64
(lp4696
g57
(g58
g59
NtRp4697
(dp4698
g62
(dp4699
g70
I4
ssg71
g4693
sg64
(lp4700
S'web2py, python, metabolome, metabolomics'
p4701
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4702
(dp4703
g62
(dp4704
sg71
g3834
sg64
(lp4705
g57
(g78
g59
NtRp4706
(dp4707
g62
(dp4708
g82
g83
ssg71
g4702
sg64
(lp4709
S'models_to_run'
p4710
asbag57
(g78
g59
NtRp4711
(dp4712
g62
(dp4713
g89
g90
ssg71
g4702
sg64
(lp4714
S':'
asbag57
(g78
g59
NtRp4715
(dp4716
g62
(dp4717
sg71
g4702
sg64
(lp4718
g57
(g58
g59
NtRp4719
(dp4720
g62
(dp4721
g70
I5
ssg71
g4715
sg64
(lp4722
g57
(g66
g59
NtRp4723
(dp4724
g62
(dp4725
g70
I4
ssg71
Nsg64
(lp4726
g57
(g73
g59
NtRp4727
(dp4728
g62
(dp4729
sg71
g4723
sg64
(lp4730
g57
(g78
g59
NtRp4731
(dp4732
g62
(dp4733
sg71
g4727
sg64
(lp4734
g57
(g58
g59
NtRp4735
(dp4736
g62
(dp4737
g70
I4
ssg71
g4731
sg64
(lp4738
S'^\\w+\\.py$'
p4739
asbasbasbag57
(g73
g59
NtRp4740
(dp4741
g62
(dp4742
sg71
g4723
sg64
(lp4743
g57
(g78
g59
NtRp4744
(dp4745
g62
(dp4746
sg71
g4740
sg64
(lp4747
g57
(g58
g59
NtRp4748
(dp4749
g62
(dp4750
g70
I4
ssg71
g4744
sg64
(lp4751
S'^default/\\w+\\.py$'
p4752
asbasbasbag57
(g73
g59
NtRp4753
(dp4754
g62
(dp4755
sg71
g4723
sg64
(lp4756
g57
(g78
g59
NtRp4757
(dp4758
g62
(dp4759
sg71
g4753
sg64
(lp4760
g57
(g58
g59
NtRp4761
(dp4762
g62
(dp4763
g70
I4
ssg71
g4757
sg64
(lp4764
S'^default/duplicate/\\w+\\.py$'
p4765
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4766
(dp4767
g62
(dp4768
sg71
g3834
sg64
(lp4769
g57
(g78
g59
NtRp4770
(dp4771
g62
(dp4772
g82
g83
ssg71
g4766
sg64
(lp4773
S'postprocessing'
p4774
asbag57
(g78
g59
NtRp4775
(dp4776
g62
(dp4777
g89
g90
ssg71
g4766
sg64
(lp4778
S':'
asbag57
(g78
g59
NtRp4779
(dp4780
g62
(dp4781
sg71
g4766
sg64
(lp4782
g57
(g58
g59
NtRp4783
(dp4784
g62
(dp4785
g70
I5
ssg71
g4779
sg64
(lp4786
g57
(g66
g59
NtRp4787
(dp4788
g62
(dp4789
g70
I4
ssg71
Nsg64
(lp4790
sbasbasbasbag57
(g73
g59
NtRp4791
(dp4792
g62
(dp4793
sg71
g3834
sg64
(lp4794
g57
(g78
g59
NtRp4795
(dp4796
g62
(dp4797
g82
g83
ssg71
g4791
sg64
(lp4798
S'session_cookie_expires'
p4799
asbag57
(g78
g59
NtRp4800
(dp4801
g62
(dp4802
g89
g90
ssg71
g4791
sg64
(lp4803
S':'
asbag57
(g78
g59
NtRp4804
(dp4805
g62
(dp4806
sg71
g4791
sg64
(lp4807
g57
(g58
g59
NtRp4808
(dp4809
g62
(dp4810
g70
I5
ssg71
g4804
sg64
(lp4811
S'None'
p4812
asbasbasbag57
(g73
g59
NtRp4813
(dp4814
g62
(dp4815
sg71
g3834
sg64
(lp4816
g57
(g78
g59
NtRp4817
(dp4818
g62
(dp4819
g82
g83
ssg71
g4813
sg64
(lp4820
S'session_data_name'
p4821
asbag57
(g78
g59
NtRp4822
(dp4823
g62
(dp4824
g89
g90
ssg71
g4813
sg64
(lp4825
S':'
asbag57
(g78
g59
NtRp4826
(dp4827
g62
(dp4828
sg71
g4813
sg64
(lp4829
g57
(g58
g59
NtRp4830
(dp4831
g62
(dp4832
g70
I5
ssg71
g4826
sg64
(lp4833
S'session_data_dev_bootstrap_ch'
p4834
asbasbasbag57
(g73
g59
NtRp4835
(dp4836
g62
(dp4837
sg71
g3834
sg64
(lp4838
g57
(g78
g59
NtRp4839
(dp4840
g62
(dp4841
g82
g83
ssg71
g4835
sg64
(lp4842
S'session_file'
p4843
asbag57
(g78
g59
NtRp4844
(dp4845
g62
(dp4846
g89
g90
ssg71
g4835
sg64
(lp4847
S':'
asbag57
(g78
g59
NtRp4848
(dp4849
g62
(dp4850
sg71
g4835
sg64
(lp4851
g57
(g58
g59
NtRp4852
(dp4853
g62
(dp4854
g70
I5
ssg71
g4848
sg64
(lp4855
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xb0166f98>"
p4856
asbasbasbag57
(g73
g59
NtRp4857
(dp4858
g62
(dp4859
sg71
g3834
sg64
(lp4860
g57
(g78
g59
NtRp4861
(dp4862
g62
(dp4863
g82
g83
ssg71
g4857
sg64
(lp4864
S'session_filename'
p4865
asbag57
(g78
g59
NtRp4866
(dp4867
g62
(dp4868
g89
g90
ssg71
g4857
sg64
(lp4869
S':'
asbag57
(g78
g59
NtRp4870
(dp4871
g62
(dp4872
sg71
g4857
sg64
(lp4873
g57
(g58
g59
NtRp4874
(dp4875
g62
(dp4876
g70
I5
ssg71
g4870
sg64
(lp4877
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4878
asbasbasbag57
(g73
g59
NtRp4879
(dp4880
g62
(dp4881
sg71
g3834
sg64
(lp4882
g57
(g78
g59
NtRp4883
(dp4884
g62
(dp4885
g82
g83
ssg71
g4879
sg64
(lp4886
S'session_id'
p4887
asbag57
(g78
g59
NtRp4888
(dp4889
g62
(dp4890
g89
g90
ssg71
g4879
sg64
(lp4891
S':'
asbag57
(g78
g59
NtRp4892
(dp4893
g62
(dp4894
sg71
g4879
sg64
(lp4895
g57
(g58
g59
NtRp4896
(dp4897
g62
(dp4898
g70
I5
ssg71
g4892
sg64
(lp4899
g551
asbasbasbag57
(g73
g59
NtRp4900
(dp4901
g62
(dp4902
sg71
g3834
sg64
(lp4903
g57
(g78
g59
NtRp4904
(dp4905
g62
(dp4906
g82
g83
ssg71
g4900
sg64
(lp4907
S'session_id_name'
p4908
asbag57
(g78
g59
NtRp4909
(dp4910
g62
(dp4911
g89
g90
ssg71
g4900
sg64
(lp4912
S':'
asbag57
(g78
g59
NtRp4913
(dp4914
g62
(dp4915
sg71
g4900
sg64
(lp4916
g57
(g58
g59
NtRp4917
(dp4918
g62
(dp4919
g70
I5
ssg71
g4913
sg64
(lp4920
g3891
asbasbasbag57
(g73
g59
NtRp4921
(dp4922
g62
(dp4923
sg71
g3834
sg64
(lp4924
g57
(g78
g59
NtRp4925
(dp4926
g62
(dp4927
g82
g83
ssg71
g4921
sg64
(lp4928
S'session_locked'
p4929
asbag57
(g78
g59
NtRp4930
(dp4931
g62
(dp4932
g89
g90
ssg71
g4921
sg64
(lp4933
S':'
asbag57
(g78
g59
NtRp4934
(dp4935
g62
(dp4936
sg71
g4921
sg64
(lp4937
g57
(g58
g59
NtRp4938
(dp4939
g62
(dp4940
g70
I5
ssg71
g4934
sg64
(lp4941
g1681
asbasbasbag57
(g73
g59
NtRp4942
(dp4943
g62
(dp4944
sg71
g3834
sg64
(lp4945
g57
(g78
g59
NtRp4946
(dp4947
g62
(dp4948
g82
g83
ssg71
g4942
sg64
(lp4949
S'session_new'
p4950
asbag57
(g78
g59
NtRp4951
(dp4952
g62
(dp4953
g89
g90
ssg71
g4942
sg64
(lp4954
S':'
asbag57
(g78
g59
NtRp4955
(dp4956
g62
(dp4957
sg71
g4942
sg64
(lp4958
g57
(g58
g59
NtRp4959
(dp4960
g62
(dp4961
g70
I5
ssg71
g4955
sg64
(lp4962
g100
asbasbasbag57
(g73
g59
NtRp4963
(dp4964
g62
(dp4965
sg71
g3834
sg64
(lp4966
g57
(g78
g59
NtRp4967
(dp4968
g62
(dp4969
g82
g83
ssg71
g4963
sg64
(lp4970
S'session_storage_type'
p4971
asbag57
(g78
g59
NtRp4972
(dp4973
g62
(dp4974
g89
g90
ssg71
g4963
sg64
(lp4975
S':'
asbag57
(g78
g59
NtRp4976
(dp4977
g62
(dp4978
sg71
g4963
sg64
(lp4979
g57
(g58
g59
NtRp4980
(dp4981
g62
(dp4982
g70
I5
ssg71
g4976
sg64
(lp4983
g3134
asbasbasbag57
(g73
g59
NtRp4984
(dp4985
g62
(dp4986
sg71
g3834
sg64
(lp4987
g57
(g78
g59
NtRp4988
(dp4989
g62
(dp4990
g82
g83
ssg71
g4984
sg64
(lp4991
S'status'
p4992
asbag57
(g78
g59
NtRp4993
(dp4994
g62
(dp4995
g89
g90
ssg71
g4984
sg64
(lp4996
S':'
asbag57
(g78
g59
NtRp4997
(dp4998
g62
(dp4999
sg71
g4984
sg64
(lp5000
g57
(g58
g59
NtRp5001
(dp5002
g62
(dp5003
g70
I5
ssg71
g4997
sg64
(lp5004
S'200'
p5005
asbasbasbag57
(g73
g59
NtRp5006
(dp5007
g62
(dp5008
sg71
g3834
sg64
(lp5009
g57
(g78
g59
NtRp5010
(dp5011
g62
(dp5012
g82
g83
ssg71
g5006
sg64
(lp5013
S'subtitle'
p5014
asbag57
(g78
g59
NtRp5015
(dp5016
g62
(dp5017
g89
g90
ssg71
g5006
sg64
(lp5018
S':'
asbag57
(g78
g59
NtRp5019
(dp5020
g62
(dp5021
sg71
g5006
sg64
(lp5022
g57
(g58
g59
NtRp5023
(dp5024
g62
(dp5025
g70
I5
ssg71
g5019
sg64
(lp5026
g4454
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5027
asbasbasbag57
(g73
g59
NtRp5028
(dp5029
g62
(dp5030
sg71
g3834
sg64
(lp5031
g57
(g78
g59
NtRp5032
(dp5033
g62
(dp5034
g82
g83
ssg71
g5028
sg64
(lp5035
g3700
asbag57
(g78
g59
NtRp5036
(dp5037
g62
(dp5038
g89
g90
ssg71
g5028
sg64
(lp5039
S':'
asbag57
(g78
g59
NtRp5040
(dp5041
g62
(dp5042
sg71
g5028
sg64
(lp5043
g57
(g58
g59
NtRp5044
(dp5045
g62
(dp5046
g70
I5
ssg71
g5040
sg64
(lp5047
g122
asbasbasbag57
(g73
g59
NtRp5048
(dp5049
g62
(dp5050
sg71
g3834
sg64
(lp5051
g57
(g78
g59
NtRp5052
(dp5053
g62
(dp5054
g82
g83
ssg71
g5048
sg64
(lp5055
S'view'
p5056
asbag57
(g78
g59
NtRp5057
(dp5058
g62
(dp5059
g89
g90
ssg71
g5048
sg64
(lp5060
S':'
asbag57
(g78
g59
NtRp5061
(dp5062
g62
(dp5063
sg71
g5048
sg64
(lp5064
g57
(g58
g59
NtRp5065
(dp5066
g62
(dp5067
g70
I5
ssg71
g5061
sg64
(lp5068
S'default/duplicate.html'
p5069
asbasbasbasbasbsS'locals'
p5070
(dp5071
S'rec'
p5072
S"<Row {'code': 'sadf', 'replica': 'replicate', 'w...ent': 2, 'experimentalist': 1, 'name': 'tomato'}>"
p5073
sS'in_row'
p5074
S'12'
p5075
sS'tb'
p5076
S"'biosource'"
p5077
sssS'traceback'
p5078
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1140, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 359, in duplicate\n    row = db(db[tb].sample_name==request.args[-1].select(db[tb].ALL).first())\nAttributeError: \'str\' object has no attribute \'select\'\n'
p5079
s.