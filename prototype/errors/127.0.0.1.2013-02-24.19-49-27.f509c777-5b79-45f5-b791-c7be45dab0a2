(dp1
S'output'
p2
S"<type 'exceptions.NameError'> global name 'row' is not defined"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[1:4]\n    args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name",row.id,"edit","biosource",getid(row.id)]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=args.append(getid(row.id)))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getid(a):\n    row = db(db.biosource.sample_name==a).select(db.biosource.id).first()\n    if row: \n        return row.id\n    else:\n        return 0\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.NameError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.NameError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.NameError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.NameError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.NameError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.NameError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.NameError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.NameError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.NameError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.NameError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.NameError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.NameError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.NameError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.NameError object>"
p41
sS'args'
p42
S'("global name \'row\' is not defined",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.NameError object>'
p47
sS'__doc__'
p48
S"'Name not found globally.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.NameError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"global name 'row' is not defined"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g67
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
g82
g83
ssg71
g210
sg64
(lp217
S'body'
p218
asbag57
(g78
g59
NtRp219
(dp220
g62
(dp221
g89
g90
ssg71
g210
sg64
(lp222
S':'
asbag57
(g78
g59
NtRp223
(dp224
g62
(dp225
sg71
g210
sg64
(lp226
g57
(g58
g59
NtRp227
(dp228
g62
(dp229
g70
I5
ssg71
g223
sg64
(lp230
S'<cStringIO.StringO object at 0xaffb2cc0>'
p231
asbasbasbag57
(g73
g59
NtRp232
(dp233
g62
(dp234
sg71
g67
sg64
(lp235
g57
(g78
g59
NtRp236
(dp237
g62
(dp238
g82
g83
ssg71
g232
sg64
(lp239
S'cid'
p240
asbag57
(g78
g59
NtRp241
(dp242
g62
(dp243
g89
g90
ssg71
g232
sg64
(lp244
S':'
asbag57
(g78
g59
NtRp245
(dp246
g62
(dp247
sg71
g232
sg64
(lp248
g57
(g58
g59
NtRp249
(dp250
g62
(dp251
g70
I5
ssg71
g245
sg64
(lp252
S'None'
p253
asbasbasbag57
(g73
g59
NtRp254
(dp255
g62
(dp256
sg71
g67
sg64
(lp257
g57
(g78
g59
NtRp258
(dp259
g62
(dp260
g82
g83
ssg71
g254
sg64
(lp261
S'client'
p262
asbag57
(g78
g59
NtRp263
(dp264
g62
(dp265
g89
g90
ssg71
g254
sg64
(lp266
S':'
asbag57
(g78
g59
NtRp267
(dp268
g62
(dp269
sg71
g254
sg64
(lp270
g57
(g58
g59
NtRp271
(dp272
g62
(dp273
g70
I5
ssg71
g267
sg64
(lp274
S'127.0.0.1'
p275
asbasbasbag57
(g73
g59
NtRp276
(dp277
g62
(dp278
sg71
g67
sg64
(lp279
g57
(g78
g59
NtRp280
(dp281
g62
(dp282
g82
g83
ssg71
g276
sg64
(lp283
S'controller'
p284
asbag57
(g78
g59
NtRp285
(dp286
g62
(dp287
g89
g90
ssg71
g276
sg64
(lp288
S':'
asbag57
(g78
g59
NtRp289
(dp290
g62
(dp291
sg71
g276
sg64
(lp292
g57
(g58
g59
NtRp293
(dp294
g62
(dp295
g70
I5
ssg71
g289
sg64
(lp296
S'default'
p297
asbasbasbag57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g67
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'cookies'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I5
ssg71
g311
sg64
(lp318
g57
(g66
g59
NtRp319
(dp320
g62
(dp321
g70
I4
ssg71
Nsg64
(lp322
g57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g319
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'session_id_admin'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I4
ssg71
g336
sg64
(lp343
S'127.0.0.1-af6694ee-0328-42c6-942b-86a3eea3584b'
p344
ag57
(g66
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
Nsg64
(lp348
g57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g345
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'comment'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g345
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'domain'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g345
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'expires'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g345
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'httponly'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g345
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'max-age'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g345
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'path'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g345
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'secure'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g345
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'version'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g319
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'session_id_dev_bootstrap'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I4
ssg71
g530
sg64
(lp537
S'127.0.0.1-d1c89174-3f24-4a7c-b8b8-87c1b3424426'
p538
ag57
(g66
g59
NtRp539
(dp540
g62
(dp541
g70
I3
ssg71
Nsg64
(lp542
g57
(g73
g59
NtRp543
(dp544
g62
(dp545
sg71
g539
sg64
(lp546
g57
(g78
g59
NtRp547
(dp548
g62
(dp549
g82
g83
ssg71
g543
sg64
(lp550
g357
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g543
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g543
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I3
ssg71
g555
sg64
(lp562
S''
asbasbasbag57
(g73
g59
NtRp563
(dp564
g62
(dp565
sg71
g539
sg64
(lp566
g57
(g78
g59
NtRp567
(dp568
g62
(dp569
g82
g83
ssg71
g563
sg64
(lp570
g378
asbag57
(g78
g59
NtRp571
(dp572
g62
(dp573
g89
g90
ssg71
g563
sg64
(lp574
S':'
asbag57
(g78
g59
NtRp575
(dp576
g62
(dp577
sg71
g563
sg64
(lp578
g57
(g58
g59
NtRp579
(dp580
g62
(dp581
g70
I3
ssg71
g575
sg64
(lp582
S''
asbasbasbag57
(g73
g59
NtRp583
(dp584
g62
(dp585
sg71
g539
sg64
(lp586
g57
(g78
g59
NtRp587
(dp588
g62
(dp589
g82
g83
ssg71
g583
sg64
(lp590
g399
asbag57
(g78
g59
NtRp591
(dp592
g62
(dp593
g89
g90
ssg71
g583
sg64
(lp594
S':'
asbag57
(g78
g59
NtRp595
(dp596
g62
(dp597
sg71
g583
sg64
(lp598
g57
(g58
g59
NtRp599
(dp600
g62
(dp601
g70
I3
ssg71
g595
sg64
(lp602
S''
asbasbasbag57
(g73
g59
NtRp603
(dp604
g62
(dp605
sg71
g539
sg64
(lp606
g57
(g78
g59
NtRp607
(dp608
g62
(dp609
g82
g83
ssg71
g603
sg64
(lp610
g420
asbag57
(g78
g59
NtRp611
(dp612
g62
(dp613
g89
g90
ssg71
g603
sg64
(lp614
S':'
asbag57
(g78
g59
NtRp615
(dp616
g62
(dp617
sg71
g603
sg64
(lp618
g57
(g58
g59
NtRp619
(dp620
g62
(dp621
g70
I3
ssg71
g615
sg64
(lp622
S''
asbasbasbag57
(g73
g59
NtRp623
(dp624
g62
(dp625
sg71
g539
sg64
(lp626
g57
(g78
g59
NtRp627
(dp628
g62
(dp629
g82
g83
ssg71
g623
sg64
(lp630
g441
asbag57
(g78
g59
NtRp631
(dp632
g62
(dp633
g89
g90
ssg71
g623
sg64
(lp634
S':'
asbag57
(g78
g59
NtRp635
(dp636
g62
(dp637
sg71
g623
sg64
(lp638
g57
(g58
g59
NtRp639
(dp640
g62
(dp641
g70
I3
ssg71
g635
sg64
(lp642
S''
asbasbasbag57
(g73
g59
NtRp643
(dp644
g62
(dp645
sg71
g539
sg64
(lp646
g57
(g78
g59
NtRp647
(dp648
g62
(dp649
g82
g83
ssg71
g643
sg64
(lp650
g462
asbag57
(g78
g59
NtRp651
(dp652
g62
(dp653
g89
g90
ssg71
g643
sg64
(lp654
S':'
asbag57
(g78
g59
NtRp655
(dp656
g62
(dp657
sg71
g643
sg64
(lp658
g57
(g58
g59
NtRp659
(dp660
g62
(dp661
g70
I3
ssg71
g655
sg64
(lp662
S''
asbasbasbag57
(g73
g59
NtRp663
(dp664
g62
(dp665
sg71
g539
sg64
(lp666
g57
(g78
g59
NtRp667
(dp668
g62
(dp669
g82
g83
ssg71
g663
sg64
(lp670
g483
asbag57
(g78
g59
NtRp671
(dp672
g62
(dp673
g89
g90
ssg71
g663
sg64
(lp674
S':'
asbag57
(g78
g59
NtRp675
(dp676
g62
(dp677
sg71
g663
sg64
(lp678
g57
(g58
g59
NtRp679
(dp680
g62
(dp681
g70
I3
ssg71
g675
sg64
(lp682
S''
asbasbasbag57
(g73
g59
NtRp683
(dp684
g62
(dp685
sg71
g539
sg64
(lp686
g57
(g78
g59
NtRp687
(dp688
g62
(dp689
g82
g83
ssg71
g683
sg64
(lp690
g504
asbag57
(g78
g59
NtRp691
(dp692
g62
(dp693
g89
g90
ssg71
g683
sg64
(lp694
S':'
asbag57
(g78
g59
NtRp695
(dp696
g62
(dp697
sg71
g683
sg64
(lp698
g57
(g58
g59
NtRp699
(dp700
g62
(dp701
g70
I3
ssg71
g695
sg64
(lp702
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp703
(dp704
g62
(dp705
sg71
g319
sg64
(lp706
g57
(g78
g59
NtRp707
(dp708
g62
(dp709
g82
g83
ssg71
g703
sg64
(lp710
S'session_id_dev_bootstrap_ch'
p711
asbag57
(g78
g59
NtRp712
(dp713
g62
(dp714
g89
g90
ssg71
g703
sg64
(lp715
S':'
asbag57
(g78
g59
NtRp716
(dp717
g62
(dp718
sg71
g703
sg64
(lp719
g57
(g58
g59
NtRp720
(dp721
g62
(dp722
g70
I4
ssg71
g716
sg64
(lp723
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p724
ag57
(g66
g59
NtRp725
(dp726
g62
(dp727
g70
I3
ssg71
Nsg64
(lp728
g57
(g73
g59
NtRp729
(dp730
g62
(dp731
sg71
g725
sg64
(lp732
g57
(g78
g59
NtRp733
(dp734
g62
(dp735
g82
g83
ssg71
g729
sg64
(lp736
g357
asbag57
(g78
g59
NtRp737
(dp738
g62
(dp739
g89
g90
ssg71
g729
sg64
(lp740
S':'
asbag57
(g78
g59
NtRp741
(dp742
g62
(dp743
sg71
g729
sg64
(lp744
g57
(g58
g59
NtRp745
(dp746
g62
(dp747
g70
I3
ssg71
g741
sg64
(lp748
S''
asbasbasbag57
(g73
g59
NtRp749
(dp750
g62
(dp751
sg71
g725
sg64
(lp752
g57
(g78
g59
NtRp753
(dp754
g62
(dp755
g82
g83
ssg71
g749
sg64
(lp756
g378
asbag57
(g78
g59
NtRp757
(dp758
g62
(dp759
g89
g90
ssg71
g749
sg64
(lp760
S':'
asbag57
(g78
g59
NtRp761
(dp762
g62
(dp763
sg71
g749
sg64
(lp764
g57
(g58
g59
NtRp765
(dp766
g62
(dp767
g70
I3
ssg71
g761
sg64
(lp768
S''
asbasbasbag57
(g73
g59
NtRp769
(dp770
g62
(dp771
sg71
g725
sg64
(lp772
g57
(g78
g59
NtRp773
(dp774
g62
(dp775
g82
g83
ssg71
g769
sg64
(lp776
g399
asbag57
(g78
g59
NtRp777
(dp778
g62
(dp779
g89
g90
ssg71
g769
sg64
(lp780
S':'
asbag57
(g78
g59
NtRp781
(dp782
g62
(dp783
sg71
g769
sg64
(lp784
g57
(g58
g59
NtRp785
(dp786
g62
(dp787
g70
I3
ssg71
g781
sg64
(lp788
S''
asbasbasbag57
(g73
g59
NtRp789
(dp790
g62
(dp791
sg71
g725
sg64
(lp792
g57
(g78
g59
NtRp793
(dp794
g62
(dp795
g82
g83
ssg71
g789
sg64
(lp796
g420
asbag57
(g78
g59
NtRp797
(dp798
g62
(dp799
g89
g90
ssg71
g789
sg64
(lp800
S':'
asbag57
(g78
g59
NtRp801
(dp802
g62
(dp803
sg71
g789
sg64
(lp804
g57
(g58
g59
NtRp805
(dp806
g62
(dp807
g70
I3
ssg71
g801
sg64
(lp808
S''
asbasbasbag57
(g73
g59
NtRp809
(dp810
g62
(dp811
sg71
g725
sg64
(lp812
g57
(g78
g59
NtRp813
(dp814
g62
(dp815
g82
g83
ssg71
g809
sg64
(lp816
g441
asbag57
(g78
g59
NtRp817
(dp818
g62
(dp819
g89
g90
ssg71
g809
sg64
(lp820
S':'
asbag57
(g78
g59
NtRp821
(dp822
g62
(dp823
sg71
g809
sg64
(lp824
g57
(g58
g59
NtRp825
(dp826
g62
(dp827
g70
I3
ssg71
g821
sg64
(lp828
S''
asbasbasbag57
(g73
g59
NtRp829
(dp830
g62
(dp831
sg71
g725
sg64
(lp832
g57
(g78
g59
NtRp833
(dp834
g62
(dp835
g82
g83
ssg71
g829
sg64
(lp836
g462
asbag57
(g78
g59
NtRp837
(dp838
g62
(dp839
g89
g90
ssg71
g829
sg64
(lp840
S':'
asbag57
(g78
g59
NtRp841
(dp842
g62
(dp843
sg71
g829
sg64
(lp844
g57
(g58
g59
NtRp845
(dp846
g62
(dp847
g70
I3
ssg71
g841
sg64
(lp848
S''
asbasbasbag57
(g73
g59
NtRp849
(dp850
g62
(dp851
sg71
g725
sg64
(lp852
g57
(g78
g59
NtRp853
(dp854
g62
(dp855
g82
g83
ssg71
g849
sg64
(lp856
g483
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g849
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g849
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I3
ssg71
g861
sg64
(lp868
S''
asbasbasbag57
(g73
g59
NtRp869
(dp870
g62
(dp871
sg71
g725
sg64
(lp872
g57
(g78
g59
NtRp873
(dp874
g62
(dp875
g82
g83
ssg71
g869
sg64
(lp876
g504
asbag57
(g78
g59
NtRp877
(dp878
g62
(dp879
g89
g90
ssg71
g869
sg64
(lp880
S':'
asbag57
(g78
g59
NtRp881
(dp882
g62
(dp883
sg71
g869
sg64
(lp884
g57
(g58
g59
NtRp885
(dp886
g62
(dp887
g70
I3
ssg71
g881
sg64
(lp888
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp889
(dp890
g62
(dp891
sg71
g67
sg64
(lp892
g57
(g78
g59
NtRp893
(dp894
g62
(dp895
g82
g83
ssg71
g889
sg64
(lp896
S'env'
p897
asbag57
(g78
g59
NtRp898
(dp899
g62
(dp900
g89
g90
ssg71
g889
sg64
(lp901
S':'
asbag57
(g78
g59
NtRp902
(dp903
g62
(dp904
sg71
g889
sg64
(lp905
g57
(g58
g59
NtRp906
(dp907
g62
(dp908
g70
I5
ssg71
g902
sg64
(lp909
g57
(g66
g59
NtRp910
(dp911
g62
(dp912
g70
I4
ssg71
Nsg64
(lp913
g57
(g73
g59
NtRp914
(dp915
g62
(dp916
sg71
g910
sg64
(lp917
g57
(g78
g59
NtRp918
(dp919
g62
(dp920
g82
g83
ssg71
g914
sg64
(lp921
S'app_folders'
p922
asbag57
(g78
g59
NtRp923
(dp924
g62
(dp925
g89
g90
ssg71
g914
sg64
(lp926
S':'
asbag57
(g78
g59
NtRp927
(dp928
g62
(dp929
sg71
g914
sg64
(lp930
g57
(g58
g59
NtRp931
(dp932
g62
(dp933
g70
I4
ssg71
g927
sg64
(lp934
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p935
asbasbasbag57
(g73
g59
NtRp936
(dp937
g62
(dp938
sg71
g910
sg64
(lp939
g57
(g78
g59
NtRp940
(dp941
g62
(dp942
g82
g83
ssg71
g936
sg64
(lp943
S'applications_parent'
p944
asbag57
(g78
g59
NtRp945
(dp946
g62
(dp947
g89
g90
ssg71
g936
sg64
(lp948
S':'
asbag57
(g78
g59
NtRp949
(dp950
g62
(dp951
sg71
g936
sg64
(lp952
g57
(g58
g59
NtRp953
(dp954
g62
(dp955
g70
I4
ssg71
g949
sg64
(lp956
S'/home/anil/bootstrap/web2py'
p957
asbasbasbag57
(g73
g59
NtRp958
(dp959
g62
(dp960
sg71
g910
sg64
(lp961
g57
(g78
g59
NtRp962
(dp963
g62
(dp964
g82
g83
ssg71
g958
sg64
(lp965
S'cmd_args'
p966
asbag57
(g78
g59
NtRp967
(dp968
g62
(dp969
g89
g90
ssg71
g958
sg64
(lp970
S':'
asbag57
(g78
g59
NtRp971
(dp972
g62
(dp973
sg71
g958
sg64
(lp974
g57
(g58
g59
NtRp975
(dp976
g62
(dp977
g70
I4
ssg71
g971
sg64
(lp978
g57
(g66
g59
NtRp979
(dp980
g62
(dp981
g70
I3
ssg71
Nsg64
(lp982
sbasbasbasbag57
(g73
g59
NtRp983
(dp984
g62
(dp985
sg71
g910
sg64
(lp986
g57
(g78
g59
NtRp987
(dp988
g62
(dp989
g82
g83
ssg71
g983
sg64
(lp990
S'cmd_options'
p991
asbag57
(g78
g59
NtRp992
(dp993
g62
(dp994
g89
g90
ssg71
g983
sg64
(lp995
S':'
asbag57
(g78
g59
NtRp996
(dp997
g62
(dp998
sg71
g983
sg64
(lp999
g57
(g58
g59
NtRp1000
(dp1001
g62
(dp1002
g70
I4
ssg71
g996
sg64
(lp1003
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1004
asbasbasbag57
(g73
g59
NtRp1005
(dp1006
g62
(dp1007
sg71
g910
sg64
(lp1008
g57
(g78
g59
NtRp1009
(dp1010
g62
(dp1011
g82
g83
ssg71
g1005
sg64
(lp1012
S'db_sessions'
p1013
asbag57
(g78
g59
NtRp1014
(dp1015
g62
(dp1016
g89
g90
ssg71
g1005
sg64
(lp1017
S':'
asbag57
(g78
g59
NtRp1018
(dp1019
g62
(dp1020
sg71
g1005
sg64
(lp1021
g57
(g58
g59
NtRp1022
(dp1023
g62
(dp1024
g70
I4
ssg71
g1018
sg64
(lp1025
S'set([])'
p1026
asbasbasbag57
(g73
g59
NtRp1027
(dp1028
g62
(dp1029
sg71
g910
sg64
(lp1030
g57
(g78
g59
NtRp1031
(dp1032
g62
(dp1033
g82
g83
ssg71
g1027
sg64
(lp1034
S'debugging'
p1035
asbag57
(g78
g59
NtRp1036
(dp1037
g62
(dp1038
g89
g90
ssg71
g1027
sg64
(lp1039
S':'
asbag57
(g78
g59
NtRp1040
(dp1041
g62
(dp1042
sg71
g1027
sg64
(lp1043
g57
(g58
g59
NtRp1044
(dp1045
g62
(dp1046
g70
I4
ssg71
g1040
sg64
(lp1047
g100
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g910
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'gluon_parent'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'/home/anil/bootstrap/web2py'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g910
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'http_accept'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1091
asbasbasbag57
(g73
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g910
sg64
(lp1095
g57
(g78
g59
NtRp1096
(dp1097
g62
(dp1098
g82
g83
ssg71
g1092
sg64
(lp1099
S'http_accept_charset'
p1100
asbag57
(g78
g59
NtRp1101
(dp1102
g62
(dp1103
g89
g90
ssg71
g1092
sg64
(lp1104
S':'
asbag57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
sg71
g1092
sg64
(lp1108
g57
(g58
g59
NtRp1109
(dp1110
g62
(dp1111
g70
I4
ssg71
g1105
sg64
(lp1112
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1113
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g910
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'http_accept_encoding'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'gzip,deflate,sdch'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g910
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'http_accept_language'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'en-US,en;q=0.8'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g910
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'http_cache_control'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
S'max-age=0'
p1179
asbasbasbag57
(g73
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g910
sg64
(lp1183
g57
(g78
g59
NtRp1184
(dp1185
g62
(dp1186
g82
g83
ssg71
g1180
sg64
(lp1187
S'http_connection'
p1188
asbag57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
g89
g90
ssg71
g1180
sg64
(lp1192
S':'
asbag57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
sg71
g1180
sg64
(lp1196
g57
(g58
g59
NtRp1197
(dp1198
g62
(dp1199
g70
I4
ssg71
g1193
sg64
(lp1200
S'keep-alive'
p1201
asbasbasbag57
(g73
g59
NtRp1202
(dp1203
g62
(dp1204
sg71
g910
sg64
(lp1205
g57
(g78
g59
NtRp1206
(dp1207
g62
(dp1208
g82
g83
ssg71
g1202
sg64
(lp1209
S'http_cookie'
p1210
asbag57
(g78
g59
NtRp1211
(dp1212
g62
(dp1213
g89
g90
ssg71
g1202
sg64
(lp1214
S':'
asbag57
(g78
g59
NtRp1215
(dp1216
g62
(dp1217
sg71
g1202
sg64
(lp1218
g57
(g58
g59
NtRp1219
(dp1220
g62
(dp1221
g70
I4
ssg71
g1215
sg64
(lp1222
S'session_id_dev_bootstrap=127.0.0.1-d1c89174-3f24-4a7c-b8b8-87c1b3424426; session_id_admin=127.0.0.1-af6694ee-0328-42c6-942b-86a3eea3584b; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1223
asbasbasbag57
(g73
g59
NtRp1224
(dp1225
g62
(dp1226
sg71
g910
sg64
(lp1227
g57
(g78
g59
NtRp1228
(dp1229
g62
(dp1230
g82
g83
ssg71
g1224
sg64
(lp1231
S'http_host'
p1232
asbag57
(g78
g59
NtRp1233
(dp1234
g62
(dp1235
g89
g90
ssg71
g1224
sg64
(lp1236
S':'
asbag57
(g78
g59
NtRp1237
(dp1238
g62
(dp1239
sg71
g1224
sg64
(lp1240
g57
(g58
g59
NtRp1241
(dp1242
g62
(dp1243
g70
I4
ssg71
g1237
sg64
(lp1244
S'127.0.0.1:8000'
p1245
asbasbasbag57
(g73
g59
NtRp1246
(dp1247
g62
(dp1248
sg71
g910
sg64
(lp1249
g57
(g78
g59
NtRp1250
(dp1251
g62
(dp1252
g82
g83
ssg71
g1246
sg64
(lp1253
S'http_referer'
p1254
asbag57
(g78
g59
NtRp1255
(dp1256
g62
(dp1257
g89
g90
ssg71
g1246
sg64
(lp1258
S':'
asbag57
(g78
g59
NtRp1259
(dp1260
g62
(dp1261
sg71
g1246
sg64
(lp1262
g57
(g58
g59
NtRp1263
(dp1264
g62
(dp1265
g70
I4
ssg71
g1259
sg64
(lp1266
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1?_signature=8aef72d33b5363f25a18293cd546d9db5dd19d0b'
p1267
asbasbasbag57
(g73
g59
NtRp1268
(dp1269
g62
(dp1270
sg71
g910
sg64
(lp1271
g57
(g78
g59
NtRp1272
(dp1273
g62
(dp1274
g82
g83
ssg71
g1268
sg64
(lp1275
S'http_user_agent'
p1276
asbag57
(g78
g59
NtRp1277
(dp1278
g62
(dp1279
g89
g90
ssg71
g1268
sg64
(lp1280
S':'
asbag57
(g78
g59
NtRp1281
(dp1282
g62
(dp1283
sg71
g1268
sg64
(lp1284
g57
(g58
g59
NtRp1285
(dp1286
g62
(dp1287
g70
I4
ssg71
g1281
sg64
(lp1288
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1289
asbasbasbag57
(g73
g59
NtRp1290
(dp1291
g62
(dp1292
sg71
g910
sg64
(lp1293
g57
(g78
g59
NtRp1294
(dp1295
g62
(dp1296
g82
g83
ssg71
g1290
sg64
(lp1297
S'is_jython'
p1298
asbag57
(g78
g59
NtRp1299
(dp1300
g62
(dp1301
g89
g90
ssg71
g1290
sg64
(lp1302
S':'
asbag57
(g78
g59
NtRp1303
(dp1304
g62
(dp1305
sg71
g1290
sg64
(lp1306
g57
(g58
g59
NtRp1307
(dp1308
g62
(dp1309
g70
I4
ssg71
g1303
sg64
(lp1310
g100
asbasbasbag57
(g73
g59
NtRp1311
(dp1312
g62
(dp1313
sg71
g910
sg64
(lp1314
g57
(g78
g59
NtRp1315
(dp1316
g62
(dp1317
g82
g83
ssg71
g1311
sg64
(lp1318
S'is_pypy'
p1319
asbag57
(g78
g59
NtRp1320
(dp1321
g62
(dp1322
g89
g90
ssg71
g1311
sg64
(lp1323
S':'
asbag57
(g78
g59
NtRp1324
(dp1325
g62
(dp1326
sg71
g1311
sg64
(lp1327
g57
(g58
g59
NtRp1328
(dp1329
g62
(dp1330
g70
I4
ssg71
g1324
sg64
(lp1331
g100
asbasbasbag57
(g73
g59
NtRp1332
(dp1333
g62
(dp1334
sg71
g910
sg64
(lp1335
g57
(g78
g59
NtRp1336
(dp1337
g62
(dp1338
g82
g83
ssg71
g1332
sg64
(lp1339
S'local_hosts'
p1340
asbag57
(g78
g59
NtRp1341
(dp1342
g62
(dp1343
g89
g90
ssg71
g1332
sg64
(lp1344
S':'
asbag57
(g78
g59
NtRp1345
(dp1346
g62
(dp1347
sg71
g1332
sg64
(lp1348
g57
(g58
g59
NtRp1349
(dp1350
g62
(dp1351
g70
I4
ssg71
g1345
sg64
(lp1352
g57
(g66
g59
NtRp1353
(dp1354
g62
(dp1355
g70
I3
ssg71
Nsg64
(lp1356
g57
(g73
g59
NtRp1357
(dp1358
g62
(dp1359
sg71
g1353
sg64
(lp1360
g57
(g78
g59
NtRp1361
(dp1362
g62
(dp1363
sg71
g1357
sg64
(lp1364
g57
(g58
g59
NtRp1365
(dp1366
g62
(dp1367
g70
I3
ssg71
g1361
sg64
(lp1368
S'::1'
p1369
asbasbasbag57
(g73
g59
NtRp1370
(dp1371
g62
(dp1372
sg71
g1353
sg64
(lp1373
g57
(g78
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g1370
sg64
(lp1377
g57
(g58
g59
NtRp1378
(dp1379
g62
(dp1380
g70
I3
ssg71
g1374
sg64
(lp1381
S'127.0.1.1'
p1382
asbasbasbag57
(g73
g59
NtRp1383
(dp1384
g62
(dp1385
sg71
g1353
sg64
(lp1386
g57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
sg71
g1383
sg64
(lp1390
g57
(g58
g59
NtRp1391
(dp1392
g62
(dp1393
g70
I3
ssg71
g1387
sg64
(lp1394
S'::ffff:127.0.0.1'
p1395
asbasbasbag57
(g73
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g1353
sg64
(lp1399
g57
(g78
g59
NtRp1400
(dp1401
g62
(dp1402
sg71
g1396
sg64
(lp1403
g57
(g58
g59
NtRp1404
(dp1405
g62
(dp1406
g70
I3
ssg71
g1400
sg64
(lp1407
S'127.0.0.1'
p1408
asbasbasbag57
(g73
g59
NtRp1409
(dp1410
g62
(dp1411
sg71
g1353
sg64
(lp1412
g57
(g78
g59
NtRp1413
(dp1414
g62
(dp1415
sg71
g1409
sg64
(lp1416
g57
(g58
g59
NtRp1417
(dp1418
g62
(dp1419
g70
I3
ssg71
g1413
sg64
(lp1420
S'anil-Inspiron-1525'
p1421
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1422
(dp1423
g62
(dp1424
sg71
g910
sg64
(lp1425
g57
(g78
g59
NtRp1426
(dp1427
g62
(dp1428
g82
g83
ssg71
g1422
sg64
(lp1429
S'path_info'
p1430
asbag57
(g78
g59
NtRp1431
(dp1432
g62
(dp1433
g89
g90
ssg71
g1422
sg64
(lp1434
S':'
asbag57
(g78
g59
NtRp1435
(dp1436
g62
(dp1437
sg71
g1422
sg64
(lp1438
g57
(g58
g59
NtRp1439
(dp1440
g62
(dp1441
g70
I4
ssg71
g1435
sg64
(lp1442
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1'
p1443
asbasbasbag57
(g73
g59
NtRp1444
(dp1445
g62
(dp1446
sg71
g910
sg64
(lp1447
g57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g82
g83
ssg71
g1444
sg64
(lp1451
S'query_string'
p1452
asbag57
(g78
g59
NtRp1453
(dp1454
g62
(dp1455
g89
g90
ssg71
g1444
sg64
(lp1456
S':'
asbag57
(g78
g59
NtRp1457
(dp1458
g62
(dp1459
sg71
g1444
sg64
(lp1460
g57
(g58
g59
NtRp1461
(dp1462
g62
(dp1463
g70
I4
ssg71
g1457
sg64
(lp1464
S'_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1465
asbasbasbag57
(g73
g59
NtRp1466
(dp1467
g62
(dp1468
sg71
g910
sg64
(lp1469
g57
(g78
g59
NtRp1470
(dp1471
g62
(dp1472
g82
g83
ssg71
g1466
sg64
(lp1473
S'remote_addr'
p1474
asbag57
(g78
g59
NtRp1475
(dp1476
g62
(dp1477
g89
g90
ssg71
g1466
sg64
(lp1478
S':'
asbag57
(g78
g59
NtRp1479
(dp1480
g62
(dp1481
sg71
g1466
sg64
(lp1482
g57
(g58
g59
NtRp1483
(dp1484
g62
(dp1485
g70
I4
ssg71
g1479
sg64
(lp1486
g275
asbasbasbag57
(g73
g59
NtRp1487
(dp1488
g62
(dp1489
sg71
g910
sg64
(lp1490
g57
(g78
g59
NtRp1491
(dp1492
g62
(dp1493
g82
g83
ssg71
g1487
sg64
(lp1494
S'remote_port'
p1495
asbag57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
g89
g90
ssg71
g1487
sg64
(lp1499
S':'
asbag57
(g78
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1487
sg64
(lp1503
g57
(g58
g59
NtRp1504
(dp1505
g62
(dp1506
g70
I4
ssg71
g1500
sg64
(lp1507
S'41824'
p1508
asbasbasbag57
(g73
g59
NtRp1509
(dp1510
g62
(dp1511
sg71
g910
sg64
(lp1512
g57
(g78
g59
NtRp1513
(dp1514
g62
(dp1515
g82
g83
ssg71
g1509
sg64
(lp1516
S'request_method'
p1517
asbag57
(g78
g59
NtRp1518
(dp1519
g62
(dp1520
g89
g90
ssg71
g1509
sg64
(lp1521
S':'
asbag57
(g78
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1509
sg64
(lp1525
g57
(g58
g59
NtRp1526
(dp1527
g62
(dp1528
g70
I4
ssg71
g1522
sg64
(lp1529
S'GET'
p1530
asbasbasbag57
(g73
g59
NtRp1531
(dp1532
g62
(dp1533
sg71
g910
sg64
(lp1534
g57
(g78
g59
NtRp1535
(dp1536
g62
(dp1537
g82
g83
ssg71
g1531
sg64
(lp1538
S'request_uri'
p1539
asbag57
(g78
g59
NtRp1540
(dp1541
g62
(dp1542
g89
g90
ssg71
g1531
sg64
(lp1543
S':'
asbag57
(g78
g59
NtRp1544
(dp1545
g62
(dp1546
sg71
g1531
sg64
(lp1547
g57
(g58
g59
NtRp1548
(dp1549
g62
(dp1550
g70
I4
ssg71
g1544
sg64
(lp1551
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1552
asbasbasbag57
(g73
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g910
sg64
(lp1556
g57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
g82
g83
ssg71
g1553
sg64
(lp1560
S'script_name'
p1561
asbag57
(g78
g59
NtRp1562
(dp1563
g62
(dp1564
g89
g90
ssg71
g1553
sg64
(lp1565
S':'
asbag57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
sg71
g1553
sg64
(lp1569
g57
(g58
g59
NtRp1570
(dp1571
g62
(dp1572
g70
I4
ssg71
g1566
sg64
(lp1573
S''
asbasbasbag57
(g73
g59
NtRp1574
(dp1575
g62
(dp1576
sg71
g910
sg64
(lp1577
g57
(g78
g59
NtRp1578
(dp1579
g62
(dp1580
g82
g83
ssg71
g1574
sg64
(lp1581
S'server_name'
p1582
asbag57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
g89
g90
ssg71
g1574
sg64
(lp1586
S':'
asbag57
(g78
g59
NtRp1587
(dp1588
g62
(dp1589
sg71
g1574
sg64
(lp1590
g57
(g58
g59
NtRp1591
(dp1592
g62
(dp1593
g70
I4
ssg71
g1587
sg64
(lp1594
S'anil-Inspiron-1525'
p1595
asbasbasbag57
(g73
g59
NtRp1596
(dp1597
g62
(dp1598
sg71
g910
sg64
(lp1599
g57
(g78
g59
NtRp1600
(dp1601
g62
(dp1602
g82
g83
ssg71
g1596
sg64
(lp1603
S'server_port'
p1604
asbag57
(g78
g59
NtRp1605
(dp1606
g62
(dp1607
g89
g90
ssg71
g1596
sg64
(lp1608
S':'
asbag57
(g78
g59
NtRp1609
(dp1610
g62
(dp1611
sg71
g1596
sg64
(lp1612
g57
(g58
g59
NtRp1613
(dp1614
g62
(dp1615
g70
I4
ssg71
g1609
sg64
(lp1616
S'8000'
p1617
asbasbasbag57
(g73
g59
NtRp1618
(dp1619
g62
(dp1620
sg71
g910
sg64
(lp1621
g57
(g78
g59
NtRp1622
(dp1623
g62
(dp1624
g82
g83
ssg71
g1618
sg64
(lp1625
S'server_protocol'
p1626
asbag57
(g78
g59
NtRp1627
(dp1628
g62
(dp1629
g89
g90
ssg71
g1618
sg64
(lp1630
S':'
asbag57
(g78
g59
NtRp1631
(dp1632
g62
(dp1633
sg71
g1618
sg64
(lp1634
g57
(g58
g59
NtRp1635
(dp1636
g62
(dp1637
g70
I4
ssg71
g1631
sg64
(lp1638
S'HTTP/1.1'
p1639
asbasbasbag57
(g73
g59
NtRp1640
(dp1641
g62
(dp1642
sg71
g910
sg64
(lp1643
g57
(g78
g59
NtRp1644
(dp1645
g62
(dp1646
g82
g83
ssg71
g1640
sg64
(lp1647
S'server_software'
p1648
asbag57
(g78
g59
NtRp1649
(dp1650
g62
(dp1651
g89
g90
ssg71
g1640
sg64
(lp1652
S':'
asbag57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
sg71
g1640
sg64
(lp1656
g57
(g58
g59
NtRp1657
(dp1658
g62
(dp1659
g70
I4
ssg71
g1653
sg64
(lp1660
S'Rocket 1.2.6'
p1661
asbasbasbag57
(g73
g59
NtRp1662
(dp1663
g62
(dp1664
sg71
g910
sg64
(lp1665
g57
(g78
g59
NtRp1666
(dp1667
g62
(dp1668
g82
g83
ssg71
g1662
sg64
(lp1669
S'web2py_path'
p1670
asbag57
(g78
g59
NtRp1671
(dp1672
g62
(dp1673
g89
g90
ssg71
g1662
sg64
(lp1674
S':'
asbag57
(g78
g59
NtRp1675
(dp1676
g62
(dp1677
sg71
g1662
sg64
(lp1678
g57
(g58
g59
NtRp1679
(dp1680
g62
(dp1681
g70
I4
ssg71
g1675
sg64
(lp1682
g957
asbasbasbag57
(g73
g59
NtRp1683
(dp1684
g62
(dp1685
sg71
g910
sg64
(lp1686
g57
(g78
g59
NtRp1687
(dp1688
g62
(dp1689
g82
g83
ssg71
g1683
sg64
(lp1690
S'web2py_version'
p1691
asbag57
(g78
g59
NtRp1692
(dp1693
g62
(dp1694
g89
g90
ssg71
g1683
sg64
(lp1695
S':'
asbag57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
sg71
g1683
sg64
(lp1699
g57
(g58
g59
NtRp1700
(dp1701
g62
(dp1702
g70
I4
ssg71
g1696
sg64
(lp1703
g57
(g66
g59
NtRp1704
(dp1705
g62
(dp1706
g70
I3
ssg71
Nsg64
(lp1707
g57
(g73
g59
NtRp1708
(dp1709
g62
(dp1710
sg71
g1704
sg64
(lp1711
g57
(g78
g59
NtRp1712
(dp1713
g62
(dp1714
sg71
g1708
sg64
(lp1715
g57
(g58
g59
NtRp1716
(dp1717
g62
(dp1718
g70
I3
ssg71
g1712
sg64
(lp1719
S'2'
asbasbasbag57
(g73
g59
NtRp1720
(dp1721
g62
(dp1722
sg71
g1704
sg64
(lp1723
g57
(g78
g59
NtRp1724
(dp1725
g62
(dp1726
sg71
g1720
sg64
(lp1727
g57
(g58
g59
NtRp1728
(dp1729
g62
(dp1730
g70
I3
ssg71
g1724
sg64
(lp1731
S'3'
asbasbasbag57
(g73
g59
NtRp1732
(dp1733
g62
(dp1734
sg71
g1704
sg64
(lp1735
g57
(g78
g59
NtRp1736
(dp1737
g62
(dp1738
sg71
g1732
sg64
(lp1739
g57
(g58
g59
NtRp1740
(dp1741
g62
(dp1742
g70
I3
ssg71
g1736
sg64
(lp1743
S'2'
asbasbasbag57
(g73
g59
NtRp1744
(dp1745
g62
(dp1746
sg71
g1704
sg64
(lp1747
g57
(g78
g59
NtRp1748
(dp1749
g62
(dp1750
sg71
g1744
sg64
(lp1751
g57
(g58
g59
NtRp1752
(dp1753
g62
(dp1754
g70
I3
ssg71
g1748
sg64
(lp1755
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1756
asbasbasbag57
(g73
g59
NtRp1757
(dp1758
g62
(dp1759
sg71
g1704
sg64
(lp1760
g57
(g78
g59
NtRp1761
(dp1762
g62
(dp1763
sg71
g1757
sg64
(lp1764
g57
(g58
g59
NtRp1765
(dp1766
g62
(dp1767
g70
I3
ssg71
g1761
sg64
(lp1768
S'stable'
p1769
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1770
(dp1771
g62
(dp1772
sg71
g910
sg64
(lp1773
g57
(g78
g59
NtRp1774
(dp1775
g62
(dp1776
g82
g83
ssg71
g1770
sg64
(lp1777
S'wsgi_errors'
p1778
asbag57
(g78
g59
NtRp1779
(dp1780
g62
(dp1781
g89
g90
ssg71
g1770
sg64
(lp1782
S':'
asbag57
(g78
g59
NtRp1783
(dp1784
g62
(dp1785
sg71
g1770
sg64
(lp1786
g57
(g58
g59
NtRp1787
(dp1788
g62
(dp1789
g70
I4
ssg71
g1783
sg64
(lp1790
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1791
asbasbasbag57
(g73
g59
NtRp1792
(dp1793
g62
(dp1794
sg71
g910
sg64
(lp1795
g57
(g78
g59
NtRp1796
(dp1797
g62
(dp1798
g82
g83
ssg71
g1792
sg64
(lp1799
S'wsgi_file_wrapper'
p1800
asbag57
(g78
g59
NtRp1801
(dp1802
g62
(dp1803
g89
g90
ssg71
g1792
sg64
(lp1804
S':'
asbag57
(g78
g59
NtRp1805
(dp1806
g62
(dp1807
sg71
g1792
sg64
(lp1808
g57
(g58
g59
NtRp1809
(dp1810
g62
(dp1811
g70
I4
ssg71
g1805
sg64
(lp1812
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1813
asbasbasbag57
(g73
g59
NtRp1814
(dp1815
g62
(dp1816
sg71
g910
sg64
(lp1817
g57
(g78
g59
NtRp1818
(dp1819
g62
(dp1820
g82
g83
ssg71
g1814
sg64
(lp1821
S'wsgi_input'
p1822
asbag57
(g78
g59
NtRp1823
(dp1824
g62
(dp1825
g89
g90
ssg71
g1814
sg64
(lp1826
S':'
asbag57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
sg71
g1814
sg64
(lp1830
g57
(g58
g59
NtRp1831
(dp1832
g62
(dp1833
g70
I4
ssg71
g1827
sg64
(lp1834
S'<socket._fileobject object at 0xaff95c6c>'
p1835
asbasbasbag57
(g73
g59
NtRp1836
(dp1837
g62
(dp1838
sg71
g910
sg64
(lp1839
g57
(g78
g59
NtRp1840
(dp1841
g62
(dp1842
g82
g83
ssg71
g1836
sg64
(lp1843
S'wsgi_multiprocess'
p1844
asbag57
(g78
g59
NtRp1845
(dp1846
g62
(dp1847
g89
g90
ssg71
g1836
sg64
(lp1848
S':'
asbag57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
sg71
g1836
sg64
(lp1852
g57
(g58
g59
NtRp1853
(dp1854
g62
(dp1855
g70
I4
ssg71
g1849
sg64
(lp1856
g100
asbasbasbag57
(g73
g59
NtRp1857
(dp1858
g62
(dp1859
sg71
g910
sg64
(lp1860
g57
(g78
g59
NtRp1861
(dp1862
g62
(dp1863
g82
g83
ssg71
g1857
sg64
(lp1864
S'wsgi_multithread'
p1865
asbag57
(g78
g59
NtRp1866
(dp1867
g62
(dp1868
g89
g90
ssg71
g1857
sg64
(lp1869
S':'
asbag57
(g78
g59
NtRp1870
(dp1871
g62
(dp1872
sg71
g1857
sg64
(lp1873
g57
(g58
g59
NtRp1874
(dp1875
g62
(dp1876
g70
I4
ssg71
g1870
sg64
(lp1877
S'True'
p1878
asbasbasbag57
(g73
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g910
sg64
(lp1882
g57
(g78
g59
NtRp1883
(dp1884
g62
(dp1885
g82
g83
ssg71
g1879
sg64
(lp1886
S'wsgi_run_once'
p1887
asbag57
(g78
g59
NtRp1888
(dp1889
g62
(dp1890
g89
g90
ssg71
g1879
sg64
(lp1891
S':'
asbag57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g1879
sg64
(lp1895
g57
(g58
g59
NtRp1896
(dp1897
g62
(dp1898
g70
I4
ssg71
g1892
sg64
(lp1899
g100
asbasbasbag57
(g73
g59
NtRp1900
(dp1901
g62
(dp1902
sg71
g910
sg64
(lp1903
g57
(g78
g59
NtRp1904
(dp1905
g62
(dp1906
g82
g83
ssg71
g1900
sg64
(lp1907
S'wsgi_url_scheme'
p1908
asbag57
(g78
g59
NtRp1909
(dp1910
g62
(dp1911
g89
g90
ssg71
g1900
sg64
(lp1912
S':'
asbag57
(g78
g59
NtRp1913
(dp1914
g62
(dp1915
sg71
g1900
sg64
(lp1916
g57
(g58
g59
NtRp1917
(dp1918
g62
(dp1919
g70
I4
ssg71
g1913
sg64
(lp1920
S'http'
p1921
asbasbasbag57
(g73
g59
NtRp1922
(dp1923
g62
(dp1924
sg71
g910
sg64
(lp1925
g57
(g78
g59
NtRp1926
(dp1927
g62
(dp1928
g82
g83
ssg71
g1922
sg64
(lp1929
S'wsgi_version'
p1930
asbag57
(g78
g59
NtRp1931
(dp1932
g62
(dp1933
g89
g90
ssg71
g1922
sg64
(lp1934
S':'
asbag57
(g78
g59
NtRp1935
(dp1936
g62
(dp1937
sg71
g1922
sg64
(lp1938
g57
(g58
g59
NtRp1939
(dp1940
g62
(dp1941
g70
I4
ssg71
g1935
sg64
(lp1942
g57
(g66
g59
NtRp1943
(dp1944
g62
(dp1945
g70
I3
ssg71
Nsg64
(lp1946
g57
(g73
g59
NtRp1947
(dp1948
g62
(dp1949
sg71
g1943
sg64
(lp1950
g57
(g78
g59
NtRp1951
(dp1952
g62
(dp1953
sg71
g1947
sg64
(lp1954
g57
(g58
g59
NtRp1955
(dp1956
g62
(dp1957
g70
I3
ssg71
g1951
sg64
(lp1958
S'1'
asbasbasbag57
(g73
g59
NtRp1959
(dp1960
g62
(dp1961
sg71
g1943
sg64
(lp1962
g57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
sg71
g1959
sg64
(lp1966
g57
(g58
g59
NtRp1967
(dp1968
g62
(dp1969
g70
I3
ssg71
g1963
sg64
(lp1970
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1971
(dp1972
g62
(dp1973
sg71
g67
sg64
(lp1974
g57
(g78
g59
NtRp1975
(dp1976
g62
(dp1977
g82
g83
ssg71
g1971
sg64
(lp1978
S'extension'
p1979
asbag57
(g78
g59
NtRp1980
(dp1981
g62
(dp1982
g89
g90
ssg71
g1971
sg64
(lp1983
S':'
asbag57
(g78
g59
NtRp1984
(dp1985
g62
(dp1986
sg71
g1971
sg64
(lp1987
g57
(g58
g59
NtRp1988
(dp1989
g62
(dp1990
g70
I5
ssg71
g1984
sg64
(lp1991
S'html'
p1992
asbasbasbag57
(g73
g59
NtRp1993
(dp1994
g62
(dp1995
sg71
g67
sg64
(lp1996
g57
(g78
g59
NtRp1997
(dp1998
g62
(dp1999
g82
g83
ssg71
g1993
sg64
(lp2000
S'folder'
p2001
asbag57
(g78
g59
NtRp2002
(dp2003
g62
(dp2004
g89
g90
ssg71
g1993
sg64
(lp2005
S':'
asbag57
(g78
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1993
sg64
(lp2009
g57
(g58
g59
NtRp2010
(dp2011
g62
(dp2012
g70
I5
ssg71
g2006
sg64
(lp2013
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p2014
asbasbasbag57
(g73
g59
NtRp2015
(dp2016
g62
(dp2017
sg71
g67
sg64
(lp2018
g57
(g78
g59
NtRp2019
(dp2020
g62
(dp2021
g82
g83
ssg71
g2015
sg64
(lp2022
S'function'
p2023
asbag57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
g89
g90
ssg71
g2015
sg64
(lp2027
S':'
asbag57
(g78
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g2015
sg64
(lp2031
g57
(g58
g59
NtRp2032
(dp2033
g62
(dp2034
g70
I5
ssg71
g2028
sg64
(lp2035
S'list_all_dev_projects'
p2036
asbasbasbag57
(g73
g59
NtRp2037
(dp2038
g62
(dp2039
sg71
g67
sg64
(lp2040
g57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
g82
g83
ssg71
g2037
sg64
(lp2044
S'get_vars'
p2045
asbag57
(g78
g59
NtRp2046
(dp2047
g62
(dp2048
g89
g90
ssg71
g2037
sg64
(lp2049
S':'
asbag57
(g78
g59
NtRp2050
(dp2051
g62
(dp2052
sg71
g2037
sg64
(lp2053
g57
(g58
g59
NtRp2054
(dp2055
g62
(dp2056
g70
I5
ssg71
g2050
sg64
(lp2057
g57
(g66
g59
NtRp2058
(dp2059
g62
(dp2060
g70
I4
ssg71
Nsg64
(lp2061
sbasbasbasbag57
(g73
g59
NtRp2062
(dp2063
g62
(dp2064
sg71
g67
sg64
(lp2065
g57
(g78
g59
NtRp2066
(dp2067
g62
(dp2068
g82
g83
ssg71
g2062
sg64
(lp2069
S'global_settings'
p2070
asbag57
(g78
g59
NtRp2071
(dp2072
g62
(dp2073
g89
g90
ssg71
g2062
sg64
(lp2074
S':'
asbag57
(g78
g59
NtRp2075
(dp2076
g62
(dp2077
sg71
g2062
sg64
(lp2078
g57
(g58
g59
NtRp2079
(dp2080
g62
(dp2081
g70
I5
ssg71
g2075
sg64
(lp2082
g57
(g66
g59
NtRp2083
(dp2084
g62
(dp2085
g70
I4
ssg71
Nsg64
(lp2086
g57
(g73
g59
NtRp2087
(dp2088
g62
(dp2089
sg71
g2083
sg64
(lp2090
g57
(g78
g59
NtRp2091
(dp2092
g62
(dp2093
g82
g83
ssg71
g2087
sg64
(lp2094
g922
asbag57
(g78
g59
NtRp2095
(dp2096
g62
(dp2097
g89
g90
ssg71
g2087
sg64
(lp2098
S':'
asbag57
(g78
g59
NtRp2099
(dp2100
g62
(dp2101
sg71
g2087
sg64
(lp2102
g57
(g58
g59
NtRp2103
(dp2104
g62
(dp2105
g70
I4
ssg71
g2099
sg64
(lp2106
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p2107
asbasbasbag57
(g73
g59
NtRp2108
(dp2109
g62
(dp2110
sg71
g2083
sg64
(lp2111
g57
(g78
g59
NtRp2112
(dp2113
g62
(dp2114
g82
g83
ssg71
g2108
sg64
(lp2115
g944
asbag57
(g78
g59
NtRp2116
(dp2117
g62
(dp2118
g89
g90
ssg71
g2108
sg64
(lp2119
S':'
asbag57
(g78
g59
NtRp2120
(dp2121
g62
(dp2122
sg71
g2108
sg64
(lp2123
g57
(g58
g59
NtRp2124
(dp2125
g62
(dp2126
g70
I4
ssg71
g2120
sg64
(lp2127
g957
asbasbasbag57
(g73
g59
NtRp2128
(dp2129
g62
(dp2130
sg71
g2083
sg64
(lp2131
g57
(g78
g59
NtRp2132
(dp2133
g62
(dp2134
g82
g83
ssg71
g2128
sg64
(lp2135
g966
asbag57
(g78
g59
NtRp2136
(dp2137
g62
(dp2138
g89
g90
ssg71
g2128
sg64
(lp2139
S':'
asbag57
(g78
g59
NtRp2140
(dp2141
g62
(dp2142
sg71
g2128
sg64
(lp2143
g57
(g58
g59
NtRp2144
(dp2145
g62
(dp2146
g70
I4
ssg71
g2140
sg64
(lp2147
g57
(g66
g59
NtRp2148
(dp2149
g62
(dp2150
g70
I3
ssg71
Nsg64
(lp2151
sbasbasbasbag57
(g73
g59
NtRp2152
(dp2153
g62
(dp2154
sg71
g2083
sg64
(lp2155
g57
(g78
g59
NtRp2156
(dp2157
g62
(dp2158
g82
g83
ssg71
g2152
sg64
(lp2159
g991
asbag57
(g78
g59
NtRp2160
(dp2161
g62
(dp2162
g89
g90
ssg71
g2152
sg64
(lp2163
S':'
asbag57
(g78
g59
NtRp2164
(dp2165
g62
(dp2166
sg71
g2152
sg64
(lp2167
g57
(g58
g59
NtRp2168
(dp2169
g62
(dp2170
g70
I4
ssg71
g2164
sg64
(lp2171
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2172
asbasbasbag57
(g73
g59
NtRp2173
(dp2174
g62
(dp2175
sg71
g2083
sg64
(lp2176
g57
(g78
g59
NtRp2177
(dp2178
g62
(dp2179
g82
g83
ssg71
g2173
sg64
(lp2180
g1013
asbag57
(g78
g59
NtRp2181
(dp2182
g62
(dp2183
g89
g90
ssg71
g2173
sg64
(lp2184
S':'
asbag57
(g78
g59
NtRp2185
(dp2186
g62
(dp2187
sg71
g2173
sg64
(lp2188
g57
(g58
g59
NtRp2189
(dp2190
g62
(dp2191
g70
I4
ssg71
g2185
sg64
(lp2192
S'set([])'
p2193
asbasbasbag57
(g73
g59
NtRp2194
(dp2195
g62
(dp2196
sg71
g2083
sg64
(lp2197
g57
(g78
g59
NtRp2198
(dp2199
g62
(dp2200
g82
g83
ssg71
g2194
sg64
(lp2201
g1035
asbag57
(g78
g59
NtRp2202
(dp2203
g62
(dp2204
g89
g90
ssg71
g2194
sg64
(lp2205
S':'
asbag57
(g78
g59
NtRp2206
(dp2207
g62
(dp2208
sg71
g2194
sg64
(lp2209
g57
(g58
g59
NtRp2210
(dp2211
g62
(dp2212
g70
I4
ssg71
g2206
sg64
(lp2213
g100
asbasbasbag57
(g73
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2083
sg64
(lp2217
g57
(g78
g59
NtRp2218
(dp2219
g62
(dp2220
g82
g83
ssg71
g2214
sg64
(lp2221
g1056
asbag57
(g78
g59
NtRp2222
(dp2223
g62
(dp2224
g89
g90
ssg71
g2214
sg64
(lp2225
S':'
asbag57
(g78
g59
NtRp2226
(dp2227
g62
(dp2228
sg71
g2214
sg64
(lp2229
g57
(g58
g59
NtRp2230
(dp2231
g62
(dp2232
g70
I4
ssg71
g2226
sg64
(lp2233
g1069
asbasbasbag57
(g73
g59
NtRp2234
(dp2235
g62
(dp2236
sg71
g2083
sg64
(lp2237
g57
(g78
g59
NtRp2238
(dp2239
g62
(dp2240
g82
g83
ssg71
g2234
sg64
(lp2241
g1298
asbag57
(g78
g59
NtRp2242
(dp2243
g62
(dp2244
g89
g90
ssg71
g2234
sg64
(lp2245
S':'
asbag57
(g78
g59
NtRp2246
(dp2247
g62
(dp2248
sg71
g2234
sg64
(lp2249
g57
(g58
g59
NtRp2250
(dp2251
g62
(dp2252
g70
I4
ssg71
g2246
sg64
(lp2253
g100
asbasbasbag57
(g73
g59
NtRp2254
(dp2255
g62
(dp2256
sg71
g2083
sg64
(lp2257
g57
(g78
g59
NtRp2258
(dp2259
g62
(dp2260
g82
g83
ssg71
g2254
sg64
(lp2261
g1319
asbag57
(g78
g59
NtRp2262
(dp2263
g62
(dp2264
g89
g90
ssg71
g2254
sg64
(lp2265
S':'
asbag57
(g78
g59
NtRp2266
(dp2267
g62
(dp2268
sg71
g2254
sg64
(lp2269
g57
(g58
g59
NtRp2270
(dp2271
g62
(dp2272
g70
I4
ssg71
g2266
sg64
(lp2273
g100
asbasbasbag57
(g73
g59
NtRp2274
(dp2275
g62
(dp2276
sg71
g2083
sg64
(lp2277
g57
(g78
g59
NtRp2278
(dp2279
g62
(dp2280
g82
g83
ssg71
g2274
sg64
(lp2281
g1340
asbag57
(g78
g59
NtRp2282
(dp2283
g62
(dp2284
g89
g90
ssg71
g2274
sg64
(lp2285
S':'
asbag57
(g78
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g2274
sg64
(lp2289
g57
(g58
g59
NtRp2290
(dp2291
g62
(dp2292
g70
I4
ssg71
g2286
sg64
(lp2293
g57
(g66
g59
NtRp2294
(dp2295
g62
(dp2296
g70
I3
ssg71
Nsg64
(lp2297
g57
(g73
g59
NtRp2298
(dp2299
g62
(dp2300
sg71
g2294
sg64
(lp2301
g57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
sg71
g2298
sg64
(lp2305
g57
(g58
g59
NtRp2306
(dp2307
g62
(dp2308
g70
I3
ssg71
g2302
sg64
(lp2309
g1369
asbasbasbag57
(g73
g59
NtRp2310
(dp2311
g62
(dp2312
sg71
g2294
sg64
(lp2313
g57
(g78
g59
NtRp2314
(dp2315
g62
(dp2316
sg71
g2310
sg64
(lp2317
g57
(g58
g59
NtRp2318
(dp2319
g62
(dp2320
g70
I3
ssg71
g2314
sg64
(lp2321
g1382
asbasbasbag57
(g73
g59
NtRp2322
(dp2323
g62
(dp2324
sg71
g2294
sg64
(lp2325
g57
(g78
g59
NtRp2326
(dp2327
g62
(dp2328
sg71
g2322
sg64
(lp2329
g57
(g58
g59
NtRp2330
(dp2331
g62
(dp2332
g70
I3
ssg71
g2326
sg64
(lp2333
g1395
asbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g2294
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
sg71
g2334
sg64
(lp2341
g57
(g58
g59
NtRp2342
(dp2343
g62
(dp2344
g70
I3
ssg71
g2338
sg64
(lp2345
g1408
asbasbasbag57
(g73
g59
NtRp2346
(dp2347
g62
(dp2348
sg71
g2294
sg64
(lp2349
g57
(g78
g59
NtRp2350
(dp2351
g62
(dp2352
sg71
g2346
sg64
(lp2353
g57
(g58
g59
NtRp2354
(dp2355
g62
(dp2356
g70
I3
ssg71
g2350
sg64
(lp2357
g1421
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2358
(dp2359
g62
(dp2360
sg71
g2083
sg64
(lp2361
g57
(g78
g59
NtRp2362
(dp2363
g62
(dp2364
g82
g83
ssg71
g2358
sg64
(lp2365
g1691
asbag57
(g78
g59
NtRp2366
(dp2367
g62
(dp2368
g89
g90
ssg71
g2358
sg64
(lp2369
S':'
asbag57
(g78
g59
NtRp2370
(dp2371
g62
(dp2372
sg71
g2358
sg64
(lp2373
g57
(g58
g59
NtRp2374
(dp2375
g62
(dp2376
g70
I4
ssg71
g2370
sg64
(lp2377
g57
(g66
g59
NtRp2378
(dp2379
g62
(dp2380
g70
I3
ssg71
Nsg64
(lp2381
g57
(g73
g59
NtRp2382
(dp2383
g62
(dp2384
sg71
g2378
sg64
(lp2385
g57
(g78
g59
NtRp2386
(dp2387
g62
(dp2388
sg71
g2382
sg64
(lp2389
g57
(g58
g59
NtRp2390
(dp2391
g62
(dp2392
g70
I3
ssg71
g2386
sg64
(lp2393
S'2'
asbasbasbag57
(g73
g59
NtRp2394
(dp2395
g62
(dp2396
sg71
g2378
sg64
(lp2397
g57
(g78
g59
NtRp2398
(dp2399
g62
(dp2400
sg71
g2394
sg64
(lp2401
g57
(g58
g59
NtRp2402
(dp2403
g62
(dp2404
g70
I3
ssg71
g2398
sg64
(lp2405
S'3'
asbasbasbag57
(g73
g59
NtRp2406
(dp2407
g62
(dp2408
sg71
g2378
sg64
(lp2409
g57
(g78
g59
NtRp2410
(dp2411
g62
(dp2412
sg71
g2406
sg64
(lp2413
g57
(g58
g59
NtRp2414
(dp2415
g62
(dp2416
g70
I3
ssg71
g2410
sg64
(lp2417
S'2'
asbasbasbag57
(g73
g59
NtRp2418
(dp2419
g62
(dp2420
sg71
g2378
sg64
(lp2421
g57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
sg71
g2418
sg64
(lp2425
g57
(g58
g59
NtRp2426
(dp2427
g62
(dp2428
g70
I3
ssg71
g2422
sg64
(lp2429
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2430
asbasbasbag57
(g73
g59
NtRp2431
(dp2432
g62
(dp2433
sg71
g2378
sg64
(lp2434
g57
(g78
g59
NtRp2435
(dp2436
g62
(dp2437
sg71
g2431
sg64
(lp2438
g57
(g58
g59
NtRp2439
(dp2440
g62
(dp2441
g70
I3
ssg71
g2435
sg64
(lp2442
g1769
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g67
sg64
(lp2446
g57
(g78
g59
NtRp2447
(dp2448
g62
(dp2449
g82
g83
ssg71
g2443
sg64
(lp2450
S'is_https'
p2451
asbag57
(g78
g59
NtRp2452
(dp2453
g62
(dp2454
g89
g90
ssg71
g2443
sg64
(lp2455
S':'
asbag57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
sg71
g2443
sg64
(lp2459
g57
(g58
g59
NtRp2460
(dp2461
g62
(dp2462
g70
I5
ssg71
g2456
sg64
(lp2463
g100
asbasbasbag57
(g73
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g67
sg64
(lp2467
g57
(g78
g59
NtRp2468
(dp2469
g62
(dp2470
g82
g83
ssg71
g2464
sg64
(lp2471
S'is_local'
p2472
asbag57
(g78
g59
NtRp2473
(dp2474
g62
(dp2475
g89
g90
ssg71
g2464
sg64
(lp2476
S':'
asbag57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
sg71
g2464
sg64
(lp2480
g57
(g58
g59
NtRp2481
(dp2482
g62
(dp2483
g70
I5
ssg71
g2477
sg64
(lp2484
g1878
asbasbasbag57
(g73
g59
NtRp2485
(dp2486
g62
(dp2487
sg71
g67
sg64
(lp2488
g57
(g78
g59
NtRp2489
(dp2490
g62
(dp2491
g82
g83
ssg71
g2485
sg64
(lp2492
S'is_restful'
p2493
asbag57
(g78
g59
NtRp2494
(dp2495
g62
(dp2496
g89
g90
ssg71
g2485
sg64
(lp2497
S':'
asbag57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
sg71
g2485
sg64
(lp2501
g57
(g58
g59
NtRp2502
(dp2503
g62
(dp2504
g70
I5
ssg71
g2498
sg64
(lp2505
g100
asbasbasbag57
(g73
g59
NtRp2506
(dp2507
g62
(dp2508
sg71
g67
sg64
(lp2509
g57
(g78
g59
NtRp2510
(dp2511
g62
(dp2512
g82
g83
ssg71
g2506
sg64
(lp2513
S'now'
p2514
asbag57
(g78
g59
NtRp2515
(dp2516
g62
(dp2517
g89
g90
ssg71
g2506
sg64
(lp2518
S':'
asbag57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
sg71
g2506
sg64
(lp2522
g57
(g58
g59
NtRp2523
(dp2524
g62
(dp2525
g70
I5
ssg71
g2519
sg64
(lp2526
S'datetime.datetime(2013, 2, 24, 19, 49, 27, 499509)'
p2527
asbasbasbag57
(g73
g59
NtRp2528
(dp2529
g62
(dp2530
sg71
g67
sg64
(lp2531
g57
(g78
g59
NtRp2532
(dp2533
g62
(dp2534
g82
g83
ssg71
g2528
sg64
(lp2535
S'post_vars'
p2536
asbag57
(g78
g59
NtRp2537
(dp2538
g62
(dp2539
g89
g90
ssg71
g2528
sg64
(lp2540
S':'
asbag57
(g78
g59
NtRp2541
(dp2542
g62
(dp2543
sg71
g2528
sg64
(lp2544
g57
(g58
g59
NtRp2545
(dp2546
g62
(dp2547
g70
I5
ssg71
g2541
sg64
(lp2548
g57
(g66
g59
NtRp2549
(dp2550
g62
(dp2551
g70
I4
ssg71
Nsg64
(lp2552
sbasbasbasbag57
(g73
g59
NtRp2553
(dp2554
g62
(dp2555
sg71
g67
sg64
(lp2556
g57
(g78
g59
NtRp2557
(dp2558
g62
(dp2559
g82
g83
ssg71
g2553
sg64
(lp2560
S'raw_args'
p2561
asbag57
(g78
g59
NtRp2562
(dp2563
g62
(dp2564
g89
g90
ssg71
g2553
sg64
(lp2565
S':'
asbag57
(g78
g59
NtRp2566
(dp2567
g62
(dp2568
sg71
g2553
sg64
(lp2569
g57
(g58
g59
NtRp2570
(dp2571
g62
(dp2572
g70
I5
ssg71
g2566
sg64
(lp2573
S'project/experiment.project/1/sample.experiment/1'
p2574
asbasbasbag57
(g73
g59
NtRp2575
(dp2576
g62
(dp2577
sg71
g67
sg64
(lp2578
g57
(g78
g59
NtRp2579
(dp2580
g62
(dp2581
g82
g83
ssg71
g2575
sg64
(lp2582
S'raw_extension'
p2583
asbag57
(g78
g59
NtRp2584
(dp2585
g62
(dp2586
g89
g90
ssg71
g2575
sg64
(lp2587
S':'
asbag57
(g78
g59
NtRp2588
(dp2589
g62
(dp2590
sg71
g2575
sg64
(lp2591
g57
(g58
g59
NtRp2592
(dp2593
g62
(dp2594
g70
I5
ssg71
g2588
sg64
(lp2595
S'None'
p2596
asbasbasbag57
(g73
g59
NtRp2597
(dp2598
g62
(dp2599
sg71
g67
sg64
(lp2600
g57
(g78
g59
NtRp2601
(dp2602
g62
(dp2603
g82
g83
ssg71
g2597
sg64
(lp2604
S'url'
p2605
asbag57
(g78
g59
NtRp2606
(dp2607
g62
(dp2608
g89
g90
ssg71
g2597
sg64
(lp2609
S':'
asbag57
(g78
g59
NtRp2610
(dp2611
g62
(dp2612
sg71
g2597
sg64
(lp2613
g57
(g58
g59
NtRp2614
(dp2615
g62
(dp2616
g70
I5
ssg71
g2610
sg64
(lp2617
g1443
asbasbasbag57
(g73
g59
NtRp2618
(dp2619
g62
(dp2620
sg71
g67
sg64
(lp2621
g57
(g78
g59
NtRp2622
(dp2623
g62
(dp2624
g82
g83
ssg71
g2618
sg64
(lp2625
S'utcnow'
p2626
asbag57
(g78
g59
NtRp2627
(dp2628
g62
(dp2629
g89
g90
ssg71
g2618
sg64
(lp2630
S':'
asbag57
(g78
g59
NtRp2631
(dp2632
g62
(dp2633
sg71
g2618
sg64
(lp2634
g57
(g58
g59
NtRp2635
(dp2636
g62
(dp2637
g70
I5
ssg71
g2631
sg64
(lp2638
S'datetime.datetime(2013, 2, 24, 14, 19, 27, 499575)'
p2639
asbasbasbag57
(g73
g59
NtRp2640
(dp2641
g62
(dp2642
sg71
g67
sg64
(lp2643
g57
(g78
g59
NtRp2644
(dp2645
g62
(dp2646
g82
g83
ssg71
g2640
sg64
(lp2647
S'uuid'
p2648
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
g89
g90
ssg71
g2640
sg64
(lp2652
S':'
asbag57
(g78
g59
NtRp2653
(dp2654
g62
(dp2655
sg71
g2640
sg64
(lp2656
g57
(g58
g59
NtRp2657
(dp2658
g62
(dp2659
g70
I5
ssg71
g2653
sg64
(lp2660
S'DEV_bootstrap_ch/127.0.0.1.2013-02-24.19-49-27.f509c777-5b79-45f5-b791-c7be45dab0a2'
p2661
asbasbasbag57
(g73
g59
NtRp2662
(dp2663
g62
(dp2664
sg71
g67
sg64
(lp2665
g57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g82
g83
ssg71
g2662
sg64
(lp2669
S'vars'
p2670
asbag57
(g78
g59
NtRp2671
(dp2672
g62
(dp2673
g89
g90
ssg71
g2662
sg64
(lp2674
S':'
asbag57
(g78
g59
NtRp2675
(dp2676
g62
(dp2677
sg71
g2662
sg64
(lp2678
g57
(g58
g59
NtRp2679
(dp2680
g62
(dp2681
g70
I5
ssg71
g2675
sg64
(lp2682
g57
(g66
g59
NtRp2683
(dp2684
g62
(dp2685
g70
I4
ssg71
Nsg64
(lp2686
sbasbasbasbag57
(g73
g59
NtRp2687
(dp2688
g62
(dp2689
sg71
g67
sg64
(lp2690
g57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
g82
g83
ssg71
g2687
sg64
(lp2694
S'wsgi'
p2695
asbag57
(g78
g59
NtRp2696
(dp2697
g62
(dp2698
g89
g90
ssg71
g2687
sg64
(lp2699
S':'
asbag57
(g78
g59
NtRp2700
(dp2701
g62
(dp2702
sg71
g2687
sg64
(lp2703
g57
(g58
g59
NtRp2704
(dp2705
g62
(dp2706
g70
I5
ssg71
g2700
sg64
(lp2707
g57
(g66
g59
NtRp2708
(dp2709
g62
(dp2710
g70
I4
ssg71
Nsg64
(lp2711
g57
(g73
g59
NtRp2712
(dp2713
g62
(dp2714
sg71
g2708
sg64
(lp2715
g57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
g82
g83
ssg71
g2712
sg64
(lp2719
S'environ'
p2720
asbag57
(g78
g59
NtRp2721
(dp2722
g62
(dp2723
g89
g90
ssg71
g2712
sg64
(lp2724
S':'
asbag57
(g78
g59
NtRp2725
(dp2726
g62
(dp2727
sg71
g2712
sg64
(lp2728
g57
(g58
g59
NtRp2729
(dp2730
g62
(dp2731
g70
I4
ssg71
g2725
sg64
(lp2732
g57
(g66
g59
NtRp2733
(dp2734
g62
(dp2735
g70
I3
ssg71
Nsg64
(lp2736
g57
(g73
g59
NtRp2737
(dp2738
g62
(dp2739
sg71
g2733
sg64
(lp2740
g57
(g78
g59
NtRp2741
(dp2742
g62
(dp2743
g82
g83
ssg71
g2737
sg64
(lp2744
S'HTTP_ACCEPT'
p2745
asbag57
(g78
g59
NtRp2746
(dp2747
g62
(dp2748
g89
g90
ssg71
g2737
sg64
(lp2749
S':'
asbag57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
sg71
g2737
sg64
(lp2753
g57
(g58
g59
NtRp2754
(dp2755
g62
(dp2756
g70
I3
ssg71
g2750
sg64
(lp2757
g1091
asbasbasbag57
(g73
g59
NtRp2758
(dp2759
g62
(dp2760
sg71
g2733
sg64
(lp2761
g57
(g78
g59
NtRp2762
(dp2763
g62
(dp2764
g82
g83
ssg71
g2758
sg64
(lp2765
S'HTTP_ACCEPT_CHARSET'
p2766
asbag57
(g78
g59
NtRp2767
(dp2768
g62
(dp2769
g89
g90
ssg71
g2758
sg64
(lp2770
S':'
asbag57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
sg71
g2758
sg64
(lp2774
g57
(g58
g59
NtRp2775
(dp2776
g62
(dp2777
g70
I3
ssg71
g2771
sg64
(lp2778
g1113
asbasbasbag57
(g73
g59
NtRp2779
(dp2780
g62
(dp2781
sg71
g2733
sg64
(lp2782
g57
(g78
g59
NtRp2783
(dp2784
g62
(dp2785
g82
g83
ssg71
g2779
sg64
(lp2786
S'HTTP_ACCEPT_ENCODING'
p2787
asbag57
(g78
g59
NtRp2788
(dp2789
g62
(dp2790
g89
g90
ssg71
g2779
sg64
(lp2791
S':'
asbag57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
sg71
g2779
sg64
(lp2795
g57
(g58
g59
NtRp2796
(dp2797
g62
(dp2798
g70
I3
ssg71
g2792
sg64
(lp2799
g1135
asbasbasbag57
(g73
g59
NtRp2800
(dp2801
g62
(dp2802
sg71
g2733
sg64
(lp2803
g57
(g78
g59
NtRp2804
(dp2805
g62
(dp2806
g82
g83
ssg71
g2800
sg64
(lp2807
S'HTTP_ACCEPT_LANGUAGE'
p2808
asbag57
(g78
g59
NtRp2809
(dp2810
g62
(dp2811
g89
g90
ssg71
g2800
sg64
(lp2812
S':'
asbag57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
sg71
g2800
sg64
(lp2816
g57
(g58
g59
NtRp2817
(dp2818
g62
(dp2819
g70
I3
ssg71
g2813
sg64
(lp2820
g1157
asbasbasbag57
(g73
g59
NtRp2821
(dp2822
g62
(dp2823
sg71
g2733
sg64
(lp2824
g57
(g78
g59
NtRp2825
(dp2826
g62
(dp2827
g82
g83
ssg71
g2821
sg64
(lp2828
S'HTTP_CACHE_CONTROL'
p2829
asbag57
(g78
g59
NtRp2830
(dp2831
g62
(dp2832
g89
g90
ssg71
g2821
sg64
(lp2833
S':'
asbag57
(g78
g59
NtRp2834
(dp2835
g62
(dp2836
sg71
g2821
sg64
(lp2837
g57
(g58
g59
NtRp2838
(dp2839
g62
(dp2840
g70
I3
ssg71
g2834
sg64
(lp2841
g1179
asbasbasbag57
(g73
g59
NtRp2842
(dp2843
g62
(dp2844
sg71
g2733
sg64
(lp2845
g57
(g78
g59
NtRp2846
(dp2847
g62
(dp2848
g82
g83
ssg71
g2842
sg64
(lp2849
S'HTTP_CONNECTION'
p2850
asbag57
(g78
g59
NtRp2851
(dp2852
g62
(dp2853
g89
g90
ssg71
g2842
sg64
(lp2854
S':'
asbag57
(g78
g59
NtRp2855
(dp2856
g62
(dp2857
sg71
g2842
sg64
(lp2858
g57
(g58
g59
NtRp2859
(dp2860
g62
(dp2861
g70
I3
ssg71
g2855
sg64
(lp2862
g1201
asbasbasbag57
(g73
g59
NtRp2863
(dp2864
g62
(dp2865
sg71
g2733
sg64
(lp2866
g57
(g78
g59
NtRp2867
(dp2868
g62
(dp2869
g82
g83
ssg71
g2863
sg64
(lp2870
S'HTTP_COOKIE'
p2871
asbag57
(g78
g59
NtRp2872
(dp2873
g62
(dp2874
g89
g90
ssg71
g2863
sg64
(lp2875
S':'
asbag57
(g78
g59
NtRp2876
(dp2877
g62
(dp2878
sg71
g2863
sg64
(lp2879
g57
(g58
g59
NtRp2880
(dp2881
g62
(dp2882
g70
I3
ssg71
g2876
sg64
(lp2883
g1223
asbasbasbag57
(g73
g59
NtRp2884
(dp2885
g62
(dp2886
sg71
g2733
sg64
(lp2887
g57
(g78
g59
NtRp2888
(dp2889
g62
(dp2890
g82
g83
ssg71
g2884
sg64
(lp2891
S'HTTP_HOST'
p2892
asbag57
(g78
g59
NtRp2893
(dp2894
g62
(dp2895
g89
g90
ssg71
g2884
sg64
(lp2896
S':'
asbag57
(g78
g59
NtRp2897
(dp2898
g62
(dp2899
sg71
g2884
sg64
(lp2900
g57
(g58
g59
NtRp2901
(dp2902
g62
(dp2903
g70
I3
ssg71
g2897
sg64
(lp2904
g1245
asbasbasbag57
(g73
g59
NtRp2905
(dp2906
g62
(dp2907
sg71
g2733
sg64
(lp2908
g57
(g78
g59
NtRp2909
(dp2910
g62
(dp2911
g82
g83
ssg71
g2905
sg64
(lp2912
S'HTTP_REFERER'
p2913
asbag57
(g78
g59
NtRp2914
(dp2915
g62
(dp2916
g89
g90
ssg71
g2905
sg64
(lp2917
S':'
asbag57
(g78
g59
NtRp2918
(dp2919
g62
(dp2920
sg71
g2905
sg64
(lp2921
g57
(g58
g59
NtRp2922
(dp2923
g62
(dp2924
g70
I3
ssg71
g2918
sg64
(lp2925
g1267
asbasbasbag57
(g73
g59
NtRp2926
(dp2927
g62
(dp2928
sg71
g2733
sg64
(lp2929
g57
(g78
g59
NtRp2930
(dp2931
g62
(dp2932
g82
g83
ssg71
g2926
sg64
(lp2933
S'HTTP_USER_AGENT'
p2934
asbag57
(g78
g59
NtRp2935
(dp2936
g62
(dp2937
g89
g90
ssg71
g2926
sg64
(lp2938
S':'
asbag57
(g78
g59
NtRp2939
(dp2940
g62
(dp2941
sg71
g2926
sg64
(lp2942
g57
(g58
g59
NtRp2943
(dp2944
g62
(dp2945
g70
I3
ssg71
g2939
sg64
(lp2946
g1289
asbasbasbag57
(g73
g59
NtRp2947
(dp2948
g62
(dp2949
sg71
g2733
sg64
(lp2950
g57
(g78
g59
NtRp2951
(dp2952
g62
(dp2953
g82
g83
ssg71
g2947
sg64
(lp2954
S'PATH_INFO'
p2955
asbag57
(g78
g59
NtRp2956
(dp2957
g62
(dp2958
g89
g90
ssg71
g2947
sg64
(lp2959
S':'
asbag57
(g78
g59
NtRp2960
(dp2961
g62
(dp2962
sg71
g2947
sg64
(lp2963
g57
(g58
g59
NtRp2964
(dp2965
g62
(dp2966
g70
I3
ssg71
g2960
sg64
(lp2967
g1443
asbasbasbag57
(g73
g59
NtRp2968
(dp2969
g62
(dp2970
sg71
g2733
sg64
(lp2971
g57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
g82
g83
ssg71
g2968
sg64
(lp2975
S'QUERY_STRING'
p2976
asbag57
(g78
g59
NtRp2977
(dp2978
g62
(dp2979
g89
g90
ssg71
g2968
sg64
(lp2980
S':'
asbag57
(g78
g59
NtRp2981
(dp2982
g62
(dp2983
sg71
g2968
sg64
(lp2984
g57
(g58
g59
NtRp2985
(dp2986
g62
(dp2987
g70
I3
ssg71
g2981
sg64
(lp2988
g1465
asbasbasbag57
(g73
g59
NtRp2989
(dp2990
g62
(dp2991
sg71
g2733
sg64
(lp2992
g57
(g78
g59
NtRp2993
(dp2994
g62
(dp2995
g82
g83
ssg71
g2989
sg64
(lp2996
S'REMOTE_ADDR'
p2997
asbag57
(g78
g59
NtRp2998
(dp2999
g62
(dp3000
g89
g90
ssg71
g2989
sg64
(lp3001
S':'
asbag57
(g78
g59
NtRp3002
(dp3003
g62
(dp3004
sg71
g2989
sg64
(lp3005
g57
(g58
g59
NtRp3006
(dp3007
g62
(dp3008
g70
I3
ssg71
g3002
sg64
(lp3009
g275
asbasbasbag57
(g73
g59
NtRp3010
(dp3011
g62
(dp3012
sg71
g2733
sg64
(lp3013
g57
(g78
g59
NtRp3014
(dp3015
g62
(dp3016
g82
g83
ssg71
g3010
sg64
(lp3017
S'REMOTE_PORT'
p3018
asbag57
(g78
g59
NtRp3019
(dp3020
g62
(dp3021
g89
g90
ssg71
g3010
sg64
(lp3022
S':'
asbag57
(g78
g59
NtRp3023
(dp3024
g62
(dp3025
sg71
g3010
sg64
(lp3026
g57
(g58
g59
NtRp3027
(dp3028
g62
(dp3029
g70
I3
ssg71
g3023
sg64
(lp3030
g1508
asbasbasbag57
(g73
g59
NtRp3031
(dp3032
g62
(dp3033
sg71
g2733
sg64
(lp3034
g57
(g78
g59
NtRp3035
(dp3036
g62
(dp3037
g82
g83
ssg71
g3031
sg64
(lp3038
S'REQUEST_METHOD'
p3039
asbag57
(g78
g59
NtRp3040
(dp3041
g62
(dp3042
g89
g90
ssg71
g3031
sg64
(lp3043
S':'
asbag57
(g78
g59
NtRp3044
(dp3045
g62
(dp3046
sg71
g3031
sg64
(lp3047
g57
(g58
g59
NtRp3048
(dp3049
g62
(dp3050
g70
I3
ssg71
g3044
sg64
(lp3051
g1530
asbasbasbag57
(g73
g59
NtRp3052
(dp3053
g62
(dp3054
sg71
g2733
sg64
(lp3055
g57
(g78
g59
NtRp3056
(dp3057
g62
(dp3058
g82
g83
ssg71
g3052
sg64
(lp3059
S'REQUEST_URI'
p3060
asbag57
(g78
g59
NtRp3061
(dp3062
g62
(dp3063
g89
g90
ssg71
g3052
sg64
(lp3064
S':'
asbag57
(g78
g59
NtRp3065
(dp3066
g62
(dp3067
sg71
g3052
sg64
(lp3068
g57
(g58
g59
NtRp3069
(dp3070
g62
(dp3071
g70
I3
ssg71
g3065
sg64
(lp3072
g1552
asbasbasbag57
(g73
g59
NtRp3073
(dp3074
g62
(dp3075
sg71
g2733
sg64
(lp3076
g57
(g78
g59
NtRp3077
(dp3078
g62
(dp3079
g82
g83
ssg71
g3073
sg64
(lp3080
S'SCRIPT_NAME'
p3081
asbag57
(g78
g59
NtRp3082
(dp3083
g62
(dp3084
g89
g90
ssg71
g3073
sg64
(lp3085
S':'
asbag57
(g78
g59
NtRp3086
(dp3087
g62
(dp3088
sg71
g3073
sg64
(lp3089
g57
(g58
g59
NtRp3090
(dp3091
g62
(dp3092
g70
I3
ssg71
g3086
sg64
(lp3093
S''
asbasbasbag57
(g73
g59
NtRp3094
(dp3095
g62
(dp3096
sg71
g2733
sg64
(lp3097
g57
(g78
g59
NtRp3098
(dp3099
g62
(dp3100
g82
g83
ssg71
g3094
sg64
(lp3101
S'SERVER_NAME'
p3102
asbag57
(g78
g59
NtRp3103
(dp3104
g62
(dp3105
g89
g90
ssg71
g3094
sg64
(lp3106
S':'
asbag57
(g78
g59
NtRp3107
(dp3108
g62
(dp3109
sg71
g3094
sg64
(lp3110
g57
(g58
g59
NtRp3111
(dp3112
g62
(dp3113
g70
I3
ssg71
g3107
sg64
(lp3114
g1595
asbasbasbag57
(g73
g59
NtRp3115
(dp3116
g62
(dp3117
sg71
g2733
sg64
(lp3118
g57
(g78
g59
NtRp3119
(dp3120
g62
(dp3121
g82
g83
ssg71
g3115
sg64
(lp3122
S'SERVER_PORT'
p3123
asbag57
(g78
g59
NtRp3124
(dp3125
g62
(dp3126
g89
g90
ssg71
g3115
sg64
(lp3127
S':'
asbag57
(g78
g59
NtRp3128
(dp3129
g62
(dp3130
sg71
g3115
sg64
(lp3131
g57
(g58
g59
NtRp3132
(dp3133
g62
(dp3134
g70
I3
ssg71
g3128
sg64
(lp3135
g1617
asbasbasbag57
(g73
g59
NtRp3136
(dp3137
g62
(dp3138
sg71
g2733
sg64
(lp3139
g57
(g78
g59
NtRp3140
(dp3141
g62
(dp3142
g82
g83
ssg71
g3136
sg64
(lp3143
S'SERVER_PROTOCOL'
p3144
asbag57
(g78
g59
NtRp3145
(dp3146
g62
(dp3147
g89
g90
ssg71
g3136
sg64
(lp3148
S':'
asbag57
(g78
g59
NtRp3149
(dp3150
g62
(dp3151
sg71
g3136
sg64
(lp3152
g57
(g58
g59
NtRp3153
(dp3154
g62
(dp3155
g70
I3
ssg71
g3149
sg64
(lp3156
g1639
asbasbasbag57
(g73
g59
NtRp3157
(dp3158
g62
(dp3159
sg71
g2733
sg64
(lp3160
g57
(g78
g59
NtRp3161
(dp3162
g62
(dp3163
g82
g83
ssg71
g3157
sg64
(lp3164
S'SERVER_SOFTWARE'
p3165
asbag57
(g78
g59
NtRp3166
(dp3167
g62
(dp3168
g89
g90
ssg71
g3157
sg64
(lp3169
S':'
asbag57
(g78
g59
NtRp3170
(dp3171
g62
(dp3172
sg71
g3157
sg64
(lp3173
g57
(g58
g59
NtRp3174
(dp3175
g62
(dp3176
g70
I3
ssg71
g3170
sg64
(lp3177
g1661
asbasbasbag57
(g73
g59
NtRp3178
(dp3179
g62
(dp3180
sg71
g2733
sg64
(lp3181
g57
(g78
g59
NtRp3182
(dp3183
g62
(dp3184
g82
g83
ssg71
g3178
sg64
(lp3185
S'wsgi.errors'
p3186
asbag57
(g78
g59
NtRp3187
(dp3188
g62
(dp3189
g89
g90
ssg71
g3178
sg64
(lp3190
S':'
asbag57
(g78
g59
NtRp3191
(dp3192
g62
(dp3193
sg71
g3178
sg64
(lp3194
g57
(g58
g59
NtRp3195
(dp3196
g62
(dp3197
g70
I3
ssg71
g3191
sg64
(lp3198
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p3199
asbasbasbag57
(g73
g59
NtRp3200
(dp3201
g62
(dp3202
sg71
g2733
sg64
(lp3203
g57
(g78
g59
NtRp3204
(dp3205
g62
(dp3206
g82
g83
ssg71
g3200
sg64
(lp3207
S'wsgi.file_wrapper'
p3208
asbag57
(g78
g59
NtRp3209
(dp3210
g62
(dp3211
g89
g90
ssg71
g3200
sg64
(lp3212
S':'
asbag57
(g78
g59
NtRp3213
(dp3214
g62
(dp3215
sg71
g3200
sg64
(lp3216
g57
(g58
g59
NtRp3217
(dp3218
g62
(dp3219
g70
I3
ssg71
g3213
sg64
(lp3220
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3221
asbasbasbag57
(g73
g59
NtRp3222
(dp3223
g62
(dp3224
sg71
g2733
sg64
(lp3225
g57
(g78
g59
NtRp3226
(dp3227
g62
(dp3228
g82
g83
ssg71
g3222
sg64
(lp3229
S'wsgi.input'
p3230
asbag57
(g78
g59
NtRp3231
(dp3232
g62
(dp3233
g89
g90
ssg71
g3222
sg64
(lp3234
S':'
asbag57
(g78
g59
NtRp3235
(dp3236
g62
(dp3237
sg71
g3222
sg64
(lp3238
g57
(g58
g59
NtRp3239
(dp3240
g62
(dp3241
g70
I3
ssg71
g3235
sg64
(lp3242
S'<cStringIO.StringO object at 0xaffb2cc0>'
p3243
asbasbasbag57
(g73
g59
NtRp3244
(dp3245
g62
(dp3246
sg71
g2733
sg64
(lp3247
g57
(g78
g59
NtRp3248
(dp3249
g62
(dp3250
g82
g83
ssg71
g3244
sg64
(lp3251
S'wsgi.multiprocess'
p3252
asbag57
(g78
g59
NtRp3253
(dp3254
g62
(dp3255
g89
g90
ssg71
g3244
sg64
(lp3256
S':'
asbag57
(g78
g59
NtRp3257
(dp3258
g62
(dp3259
sg71
g3244
sg64
(lp3260
g57
(g58
g59
NtRp3261
(dp3262
g62
(dp3263
g70
I3
ssg71
g3257
sg64
(lp3264
g100
asbasbasbag57
(g73
g59
NtRp3265
(dp3266
g62
(dp3267
sg71
g2733
sg64
(lp3268
g57
(g78
g59
NtRp3269
(dp3270
g62
(dp3271
g82
g83
ssg71
g3265
sg64
(lp3272
S'wsgi.multithread'
p3273
asbag57
(g78
g59
NtRp3274
(dp3275
g62
(dp3276
g89
g90
ssg71
g3265
sg64
(lp3277
S':'
asbag57
(g78
g59
NtRp3278
(dp3279
g62
(dp3280
sg71
g3265
sg64
(lp3281
g57
(g58
g59
NtRp3282
(dp3283
g62
(dp3284
g70
I3
ssg71
g3278
sg64
(lp3285
g1878
asbasbasbag57
(g73
g59
NtRp3286
(dp3287
g62
(dp3288
sg71
g2733
sg64
(lp3289
g57
(g78
g59
NtRp3290
(dp3291
g62
(dp3292
g82
g83
ssg71
g3286
sg64
(lp3293
S'wsgi.run_once'
p3294
asbag57
(g78
g59
NtRp3295
(dp3296
g62
(dp3297
g89
g90
ssg71
g3286
sg64
(lp3298
S':'
asbag57
(g78
g59
NtRp3299
(dp3300
g62
(dp3301
sg71
g3286
sg64
(lp3302
g57
(g58
g59
NtRp3303
(dp3304
g62
(dp3305
g70
I3
ssg71
g3299
sg64
(lp3306
g100
asbasbasbag57
(g73
g59
NtRp3307
(dp3308
g62
(dp3309
sg71
g2733
sg64
(lp3310
g57
(g78
g59
NtRp3311
(dp3312
g62
(dp3313
g82
g83
ssg71
g3307
sg64
(lp3314
S'wsgi.url_scheme'
p3315
asbag57
(g78
g59
NtRp3316
(dp3317
g62
(dp3318
g89
g90
ssg71
g3307
sg64
(lp3319
S':'
asbag57
(g78
g59
NtRp3320
(dp3321
g62
(dp3322
sg71
g3307
sg64
(lp3323
g57
(g58
g59
NtRp3324
(dp3325
g62
(dp3326
g70
I3
ssg71
g3320
sg64
(lp3327
g1921
asbasbasbag57
(g73
g59
NtRp3328
(dp3329
g62
(dp3330
sg71
g2733
sg64
(lp3331
g57
(g78
g59
NtRp3332
(dp3333
g62
(dp3334
g82
g83
ssg71
g3328
sg64
(lp3335
S'wsgi.version'
p3336
asbag57
(g78
g59
NtRp3337
(dp3338
g62
(dp3339
g89
g90
ssg71
g3328
sg64
(lp3340
S':'
asbag57
(g78
g59
NtRp3341
(dp3342
g62
(dp3343
sg71
g3328
sg64
(lp3344
g57
(g58
g59
NtRp3345
(dp3346
g62
(dp3347
g70
I3
ssg71
g3341
sg64
(lp3348
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3349
(lp3350
(dp3351
S'file'
p3352
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3353
sS'dump'
p3354
(dp3355
S'environment'
p3356
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3357
sS'ccode'
p3358
S'<code object <module> at 0xafe38380, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3359
ssS'lnum'
p3360
I212
sS'lines'
p3361
(dp3362
I207
S'    try:'
p3363
sI208
S'        if isinstance(code, types.CodeType):'
p3364
sI209
S'            ccode = code'
p3365
sI210
S'        else:'
p3366
sI211
S'            ccode = compile2(code, layer)'
p3367
sI212
S'        exec ccode in environment'
p3368
sI213
S'    except HTTP:'
p3369
sI214
S'        raise'
p3370
sI215
S'    except RestrictedError:'
p3371
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3372
ssS'call'
p3373
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3374
sS'func'
p3375
S'restricted'
p3376
sa(dp3377
g3352
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3378
sg3354
(dp3379
sg3360
I1120
sg3361
(dp3380
I1109
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3381
sI1110
S'   """ per sample . takes id of the sample as the input """'
p3382
sI1111
S'   sid = request.args(0)'
p3383
sI1112
S'   sample = db(db.sample.id == sid).select().first()'
p3384
sI1113
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3385
sI1114
S'   form = SQLFORM(db.sample_files)'
p3386
sI1115
S'   form.vars.sample = sid'
p3387
sI1116
S'   return locals()'
p3388
sI1117
S''
sI1118
S''
ssg3373
S'()'
p3389
sg3375
S'<module>'
p3390
sa(dp3391
g3352
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3392
sg3354
(dp3393
S'self'
p3394
S'undefined'
p3395
sS'f'
S'<function list_all_dev_projects>'
p3396
ssg3360
I193
sg3361
(dp3397
I192
S'        self._vars = None'
p3398
sI193
S'        self._caller = lambda f: f()'
p3399
sI194
S'        self._view_environment = None'
p3400
sI195
S'        self._custom_commit = None'
p3401
sI196
S'        self._custom_rollback = None'
p3402
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3403
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3404
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3405
sI191
S"        self.delimiters = ('{{', '}}')"
p3406
ssg3373
S'(f=<function list_all_dev_projects>)'
p3407
sg3375
S'<lambda>'
p3408
sa(dp3409
g3352
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3410
sg3354
(dp3411
S'global request'
p3412
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3413
sS'args1'
p3414
g3395
sS'global getid'
p3415
S'<function getid>'
p3416
sS'request.args'
p3417
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p3418
sS'row'
p3419
g3395
ssg3360
I312
sg3361
(dp3420
I307
S'           db.sample.replica.writable = False'
p3421
sI308
S''
sI309
S"    create_dict = {'project':False,'sample':addsample}"
p3422
sI310
S'#Links for replicating samples'
p3423
sI311
S'    args= request.args[1:4]'
p3424
sI312
S'    args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name",row.id,"edit","biosource",getid(row.id)]'
p3425
sI313
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=args.append(getid(row.id)))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3426
sI314
S"    links={'sample':l1}"
p3427
sI315
S'#customized Views for certain forms using router'
p3428
sI316
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3429
ssg3373
S'()'
p3430
sg3375
S'list_all_dev_projects'
p3431
sasS'pyver'
p3432
S'Python 2.7.3: /usr/bin/python'
p3433
sS'session'
p3434
g57
(g58
g59
NtRp3435
(dp3436
g62
(dp3437
sg64
(lp3438
g57
(g66
g59
NtRp3439
(dp3440
g62
(dp3441
g70
I5
ssg71
Nsg64
(lp3442
g57
(g73
g59
NtRp3443
(dp3444
g62
(dp3445
sg71
g3439
sg64
(lp3446
g57
(g78
g59
NtRp3447
(dp3448
g62
(dp3449
g82
g83
ssg71
g3443
sg64
(lp3450
S'auth'
p3451
asbag57
(g78
g59
NtRp3452
(dp3453
g62
(dp3454
g89
g90
ssg71
g3443
sg64
(lp3455
S':'
asbag57
(g78
g59
NtRp3456
(dp3457
g62
(dp3458
sg71
g3443
sg64
(lp3459
g57
(g58
g59
NtRp3460
(dp3461
g62
(dp3462
g70
I5
ssg71
g3456
sg64
(lp3463
g57
(g66
g59
NtRp3464
(dp3465
g62
(dp3466
g70
I4
ssg71
Nsg64
(lp3467
g57
(g73
g59
NtRp3468
(dp3469
g62
(dp3470
sg71
g3464
sg64
(lp3471
g57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g82
g83
ssg71
g3468
sg64
(lp3475
S'expiration'
p3476
asbag57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g89
g90
ssg71
g3468
sg64
(lp3480
S':'
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
sg71
g3468
sg64
(lp3484
g57
(g58
g59
NtRp3485
(dp3486
g62
(dp3487
g70
I4
ssg71
g3481
sg64
(lp3488
S'2592000'
p3489
asbasbasbag57
(g73
g59
NtRp3490
(dp3491
g62
(dp3492
sg71
g3464
sg64
(lp3493
g57
(g78
g59
NtRp3494
(dp3495
g62
(dp3496
g82
g83
ssg71
g3490
sg64
(lp3497
S'hmac_key'
p3498
asbag57
(g78
g59
NtRp3499
(dp3500
g62
(dp3501
g89
g90
ssg71
g3490
sg64
(lp3502
S':'
asbag57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
sg71
g3490
sg64
(lp3506
g57
(g58
g59
NtRp3507
(dp3508
g62
(dp3509
g70
I4
ssg71
g3503
sg64
(lp3510
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3511
asbasbasbag57
(g73
g59
NtRp3512
(dp3513
g62
(dp3514
sg71
g3464
sg64
(lp3515
g57
(g78
g59
NtRp3516
(dp3517
g62
(dp3518
g82
g83
ssg71
g3512
sg64
(lp3519
S'last_visit'
p3520
asbag57
(g78
g59
NtRp3521
(dp3522
g62
(dp3523
g89
g90
ssg71
g3512
sg64
(lp3524
S':'
asbag57
(g78
g59
NtRp3525
(dp3526
g62
(dp3527
sg71
g3512
sg64
(lp3528
g57
(g58
g59
NtRp3529
(dp3530
g62
(dp3531
g70
I4
ssg71
g3525
sg64
(lp3532
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3533
asbasbasbag57
(g73
g59
NtRp3534
(dp3535
g62
(dp3536
sg71
g3464
sg64
(lp3537
g57
(g78
g59
NtRp3538
(dp3539
g62
(dp3540
g82
g83
ssg71
g3534
sg64
(lp3541
S'remember'
p3542
asbag57
(g78
g59
NtRp3543
(dp3544
g62
(dp3545
g89
g90
ssg71
g3534
sg64
(lp3546
S':'
asbag57
(g78
g59
NtRp3547
(dp3548
g62
(dp3549
sg71
g3534
sg64
(lp3550
g57
(g58
g59
NtRp3551
(dp3552
g62
(dp3553
g70
I4
ssg71
g3547
sg64
(lp3554
g1878
asbasbasbag57
(g73
g59
NtRp3555
(dp3556
g62
(dp3557
sg71
g3464
sg64
(lp3558
g57
(g78
g59
NtRp3559
(dp3560
g62
(dp3561
g82
g83
ssg71
g3555
sg64
(lp3562
S'user'
p3563
asbag57
(g78
g59
NtRp3564
(dp3565
g62
(dp3566
g89
g90
ssg71
g3555
sg64
(lp3567
S':'
asbag57
(g78
g59
NtRp3568
(dp3569
g62
(dp3570
sg71
g3555
sg64
(lp3571
g57
(g58
g59
NtRp3572
(dp3573
g62
(dp3574
g70
I4
ssg71
g3568
sg64
(lp3575
g57
(g66
g59
NtRp3576
(dp3577
g62
(dp3578
g70
I3
ssg71
Nsg64
(lp3579
g57
(g73
g59
NtRp3580
(dp3581
g62
(dp3582
sg71
g3576
sg64
(lp3583
g57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
g82
g83
ssg71
g3580
sg64
(lp3587
S'address'
p3588
asbag57
(g78
g59
NtRp3589
(dp3590
g62
(dp3591
g89
g90
ssg71
g3580
sg64
(lp3592
S':'
asbag57
(g78
g59
NtRp3593
(dp3594
g62
(dp3595
sg71
g3580
sg64
(lp3596
g57
(g58
g59
NtRp3597
(dp3598
g62
(dp3599
g70
I3
ssg71
g3593
sg64
(lp3600
S'a'
asbasbasbag57
(g73
g59
NtRp3601
(dp3602
g62
(dp3603
sg71
g3576
sg64
(lp3604
g57
(g78
g59
NtRp3605
(dp3606
g62
(dp3607
g82
g83
ssg71
g3601
sg64
(lp3608
S'affiliated_to'
p3609
asbag57
(g78
g59
NtRp3610
(dp3611
g62
(dp3612
g89
g90
ssg71
g3601
sg64
(lp3613
S':'
asbag57
(g78
g59
NtRp3614
(dp3615
g62
(dp3616
sg71
g3601
sg64
(lp3617
g57
(g58
g59
NtRp3618
(dp3619
g62
(dp3620
g70
I3
ssg71
g3614
sg64
(lp3621
S'a'
asbasbasbag57
(g73
g59
NtRp3622
(dp3623
g62
(dp3624
sg71
g3576
sg64
(lp3625
g57
(g78
g59
NtRp3626
(dp3627
g62
(dp3628
g82
g83
ssg71
g3622
sg64
(lp3629
S'city'
p3630
asbag57
(g78
g59
NtRp3631
(dp3632
g62
(dp3633
g89
g90
ssg71
g3622
sg64
(lp3634
S':'
asbag57
(g78
g59
NtRp3635
(dp3636
g62
(dp3637
sg71
g3622
sg64
(lp3638
g57
(g58
g59
NtRp3639
(dp3640
g62
(dp3641
g70
I3
ssg71
g3635
sg64
(lp3642
S'a'
asbasbasbag57
(g73
g59
NtRp3643
(dp3644
g62
(dp3645
sg71
g3576
sg64
(lp3646
g57
(g78
g59
NtRp3647
(dp3648
g62
(dp3649
g82
g83
ssg71
g3643
sg64
(lp3650
S'country'
p3651
asbag57
(g78
g59
NtRp3652
(dp3653
g62
(dp3654
g89
g90
ssg71
g3643
sg64
(lp3655
S':'
asbag57
(g78
g59
NtRp3656
(dp3657
g62
(dp3658
sg71
g3643
sg64
(lp3659
g57
(g58
g59
NtRp3660
(dp3661
g62
(dp3662
g70
I3
ssg71
g3656
sg64
(lp3663
S'India'
p3664
asbasbasbag57
(g73
g59
NtRp3665
(dp3666
g62
(dp3667
sg71
g3576
sg64
(lp3668
g57
(g78
g59
NtRp3669
(dp3670
g62
(dp3671
g82
g83
ssg71
g3665
sg64
(lp3672
S'email'
p3673
asbag57
(g78
g59
NtRp3674
(dp3675
g62
(dp3676
g89
g90
ssg71
g3665
sg64
(lp3677
S':'
asbag57
(g78
g59
NtRp3678
(dp3679
g62
(dp3680
sg71
g3665
sg64
(lp3681
g57
(g58
g59
NtRp3682
(dp3683
g62
(dp3684
g70
I3
ssg71
g3678
sg64
(lp3685
S'anil.iiith@gmail.com'
p3686
asbasbasbag57
(g73
g59
NtRp3687
(dp3688
g62
(dp3689
sg71
g3576
sg64
(lp3690
g57
(g78
g59
NtRp3691
(dp3692
g62
(dp3693
g82
g83
ssg71
g3687
sg64
(lp3694
S'first_name'
p3695
asbag57
(g78
g59
NtRp3696
(dp3697
g62
(dp3698
g89
g90
ssg71
g3687
sg64
(lp3699
S':'
asbag57
(g78
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3687
sg64
(lp3703
g57
(g58
g59
NtRp3704
(dp3705
g62
(dp3706
g70
I3
ssg71
g3700
sg64
(lp3707
S'anil'
p3708
asbasbasbag57
(g73
g59
NtRp3709
(dp3710
g62
(dp3711
sg71
g3576
sg64
(lp3712
g57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
g82
g83
ssg71
g3709
sg64
(lp3716
S'id'
p3717
asbag57
(g78
g59
NtRp3718
(dp3719
g62
(dp3720
g89
g90
ssg71
g3709
sg64
(lp3721
S':'
asbag57
(g78
g59
NtRp3722
(dp3723
g62
(dp3724
sg71
g3709
sg64
(lp3725
g57
(g58
g59
NtRp3726
(dp3727
g62
(dp3728
g70
I3
ssg71
g3722
sg64
(lp3729
S'2'
asbasbasbag57
(g73
g59
NtRp3730
(dp3731
g62
(dp3732
sg71
g3576
sg64
(lp3733
g57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
g82
g83
ssg71
g3730
sg64
(lp3737
S'last_name'
p3738
asbag57
(g78
g59
NtRp3739
(dp3740
g62
(dp3741
g89
g90
ssg71
g3730
sg64
(lp3742
S':'
asbag57
(g78
g59
NtRp3743
(dp3744
g62
(dp3745
sg71
g3730
sg64
(lp3746
g57
(g58
g59
NtRp3747
(dp3748
g62
(dp3749
g70
I3
ssg71
g3743
sg64
(lp3750
S'n'
asbasbasbag57
(g73
g59
NtRp3751
(dp3752
g62
(dp3753
sg71
g3576
sg64
(lp3754
g57
(g78
g59
NtRp3755
(dp3756
g62
(dp3757
g82
g83
ssg71
g3751
sg64
(lp3758
S'mobile'
p3759
asbag57
(g78
g59
NtRp3760
(dp3761
g62
(dp3762
g89
g90
ssg71
g3751
sg64
(lp3763
S':'
asbag57
(g78
g59
NtRp3764
(dp3765
g62
(dp3766
sg71
g3751
sg64
(lp3767
g57
(g58
g59
NtRp3768
(dp3769
g62
(dp3770
g70
I3
ssg71
g3764
sg64
(lp3771
S'1233'
p3772
asbasbasbag57
(g73
g59
NtRp3773
(dp3774
g62
(dp3775
sg71
g3576
sg64
(lp3776
g57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
g82
g83
ssg71
g3773
sg64
(lp3780
S'phone'
p3781
asbag57
(g78
g59
NtRp3782
(dp3783
g62
(dp3784
g89
g90
ssg71
g3773
sg64
(lp3785
S':'
asbag57
(g78
g59
NtRp3786
(dp3787
g62
(dp3788
sg71
g3773
sg64
(lp3789
g57
(g58
g59
NtRp3790
(dp3791
g62
(dp3792
g70
I3
ssg71
g3786
sg64
(lp3793
S'123'
p3794
asbasbasbag57
(g73
g59
NtRp3795
(dp3796
g62
(dp3797
sg71
g3576
sg64
(lp3798
g57
(g78
g59
NtRp3799
(dp3800
g62
(dp3801
g82
g83
ssg71
g3795
sg64
(lp3802
S'position'
p3803
asbag57
(g78
g59
NtRp3804
(dp3805
g62
(dp3806
g89
g90
ssg71
g3795
sg64
(lp3807
S':'
asbag57
(g78
g59
NtRp3808
(dp3809
g62
(dp3810
sg71
g3795
sg64
(lp3811
g57
(g58
g59
NtRp3812
(dp3813
g62
(dp3814
g70
I3
ssg71
g3808
sg64
(lp3815
S'0'
asbasbasbag57
(g73
g59
NtRp3816
(dp3817
g62
(dp3818
sg71
g3576
sg64
(lp3819
g57
(g78
g59
NtRp3820
(dp3821
g62
(dp3822
g82
g83
ssg71
g3816
sg64
(lp3823
S'postal_code'
p3824
asbag57
(g78
g59
NtRp3825
(dp3826
g62
(dp3827
g89
g90
ssg71
g3816
sg64
(lp3828
S':'
asbag57
(g78
g59
NtRp3829
(dp3830
g62
(dp3831
sg71
g3816
sg64
(lp3832
g57
(g58
g59
NtRp3833
(dp3834
g62
(dp3835
g70
I3
ssg71
g3829
sg64
(lp3836
S'123'
p3837
asbasbasbag57
(g73
g59
NtRp3838
(dp3839
g62
(dp3840
sg71
g3576
sg64
(lp3841
g57
(g78
g59
NtRp3842
(dp3843
g62
(dp3844
g82
g83
ssg71
g3838
sg64
(lp3845
S'registration_at'
p3846
asbag57
(g78
g59
NtRp3847
(dp3848
g62
(dp3849
g89
g90
ssg71
g3838
sg64
(lp3850
S':'
asbag57
(g78
g59
NtRp3851
(dp3852
g62
(dp3853
sg71
g3838
sg64
(lp3854
g57
(g58
g59
NtRp3855
(dp3856
g62
(dp3857
g70
I3
ssg71
g3851
sg64
(lp3858
S'0'
asbasbasbag57
(g73
g59
NtRp3859
(dp3860
g62
(dp3861
sg71
g3576
sg64
(lp3862
g57
(g78
g59
NtRp3863
(dp3864
g62
(dp3865
g82
g83
ssg71
g3859
sg64
(lp3866
S'registration_id'
p3867
asbag57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
g89
g90
ssg71
g3859
sg64
(lp3871
S':'
asbag57
(g78
g59
NtRp3872
(dp3873
g62
(dp3874
sg71
g3859
sg64
(lp3875
g57
(g58
g59
NtRp3876
(dp3877
g62
(dp3878
g70
I3
ssg71
g3872
sg64
(lp3879
S''
asbasbasbag57
(g73
g59
NtRp3880
(dp3881
g62
(dp3882
sg71
g3576
sg64
(lp3883
g57
(g78
g59
NtRp3884
(dp3885
g62
(dp3886
g82
g83
ssg71
g3880
sg64
(lp3887
S'registration_key'
p3888
asbag57
(g78
g59
NtRp3889
(dp3890
g62
(dp3891
g89
g90
ssg71
g3880
sg64
(lp3892
S':'
asbag57
(g78
g59
NtRp3893
(dp3894
g62
(dp3895
sg71
g3880
sg64
(lp3896
g57
(g58
g59
NtRp3897
(dp3898
g62
(dp3899
g70
I3
ssg71
g3893
sg64
(lp3900
S''
asbasbasbag57
(g73
g59
NtRp3901
(dp3902
g62
(dp3903
sg71
g3576
sg64
(lp3904
g57
(g78
g59
NtRp3905
(dp3906
g62
(dp3907
g82
g83
ssg71
g3901
sg64
(lp3908
S'reset_password_key'
p3909
asbag57
(g78
g59
NtRp3910
(dp3911
g62
(dp3912
g89
g90
ssg71
g3901
sg64
(lp3913
S':'
asbag57
(g78
g59
NtRp3914
(dp3915
g62
(dp3916
sg71
g3901
sg64
(lp3917
g57
(g58
g59
NtRp3918
(dp3919
g62
(dp3920
g70
I3
ssg71
g3914
sg64
(lp3921
S''
asbasbasbag57
(g73
g59
NtRp3922
(dp3923
g62
(dp3924
sg71
g3576
sg64
(lp3925
g57
(g78
g59
NtRp3926
(dp3927
g62
(dp3928
g82
g83
ssg71
g3922
sg64
(lp3929
S'title'
p3930
asbag57
(g78
g59
NtRp3931
(dp3932
g62
(dp3933
g89
g90
ssg71
g3922
sg64
(lp3934
S':'
asbag57
(g78
g59
NtRp3935
(dp3936
g62
(dp3937
sg71
g3922
sg64
(lp3938
g57
(g58
g59
NtRp3939
(dp3940
g62
(dp3941
g70
I3
ssg71
g3935
sg64
(lp3942
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3943
(dp3944
g62
(dp3945
sg71
g3464
sg64
(lp3946
g57
(g78
g59
NtRp3947
(dp3948
g62
(dp3949
g82
g83
ssg71
g3943
sg64
(lp3950
S'user_groups'
p3951
asbag57
(g78
g59
NtRp3952
(dp3953
g62
(dp3954
g89
g90
ssg71
g3943
sg64
(lp3955
S':'
asbag57
(g78
g59
NtRp3956
(dp3957
g62
(dp3958
sg71
g3943
sg64
(lp3959
g57
(g58
g59
NtRp3960
(dp3961
g62
(dp3962
g70
I4
ssg71
g3956
sg64
(lp3963
g57
(g66
g59
NtRp3964
(dp3965
g62
(dp3966
g70
I3
ssg71
Nsg64
(lp3967
g57
(g73
g59
NtRp3968
(dp3969
g62
(dp3970
sg71
g3964
sg64
(lp3971
g57
(g78
g59
NtRp3972
(dp3973
g62
(dp3974
g82
g83
ssg71
g3968
sg64
(lp3975
S'9'
asbag57
(g78
g59
NtRp3976
(dp3977
g62
(dp3978
g89
g90
ssg71
g3968
sg64
(lp3979
S':'
asbag57
(g78
g59
NtRp3980
(dp3981
g62
(dp3982
sg71
g3968
sg64
(lp3983
g57
(g58
g59
NtRp3984
(dp3985
g62
(dp3986
g70
I3
ssg71
g3980
sg64
(lp3987
S'user_2'
p3988
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3989
(dp3990
g62
(dp3991
sg71
g3439
sg64
(lp3992
g57
(g78
g59
NtRp3993
(dp3994
g62
(dp3995
g82
g83
ssg71
g3989
sg64
(lp3996
S'flash'
p3997
asbag57
(g78
g59
NtRp3998
(dp3999
g62
(dp4000
g89
g90
ssg71
g3989
sg64
(lp4001
S':'
asbag57
(g78
g59
NtRp4002
(dp4003
g62
(dp4004
sg71
g3989
sg64
(lp4005
g57
(g58
g59
NtRp4006
(dp4007
g62
(dp4008
g70
I5
ssg71
g4002
sg64
(lp4009
S'None'
p4010
asbasbasbag57
(g73
g59
NtRp4011
(dp4012
g62
(dp4013
sg71
g3439
sg64
(lp4014
g57
(g78
g59
NtRp4015
(dp4016
g62
(dp4017
g82
g83
ssg71
g4011
sg64
(lp4018
S'last_orderby'
p4019
asbag57
(g78
g59
NtRp4020
(dp4021
g62
(dp4022
g89
g90
ssg71
g4011
sg64
(lp4023
S':'
asbag57
(g78
g59
NtRp4024
(dp4025
g62
(dp4026
sg71
g4011
sg64
(lp4027
g57
(g58
g59
NtRp4028
(dp4029
g62
(dp4030
g70
I5
ssg71
g4024
sg64
(lp4031
S'None'
p4032
asbasbasbag57
(g73
g59
NtRp4033
(dp4034
g62
(dp4035
sg71
g3439
sg64
(lp4036
g57
(g78
g59
NtRp4037
(dp4038
g62
(dp4039
g82
g83
ssg71
g4033
sg64
(lp4040
S'last_query'
p4041
asbag57
(g78
g59
NtRp4042
(dp4043
g62
(dp4044
g89
g90
ssg71
g4033
sg64
(lp4045
S':'
asbag57
(g78
g59
NtRp4046
(dp4047
g62
(dp4048
sg71
g4033
sg64
(lp4049
g57
(g58
g59
NtRp4050
(dp4051
g62
(dp4052
g70
I5
ssg71
g4046
sg64
(lp4053
S'db.project.id>0'
p4054
asbasbasbasbasbsS'etype'
p4055
S"<type 'exceptions.NameError'>"
p4056
sS'date'
p4057
S'Sun Feb 24 19:49:27 2013'
p4058
sS'response'
p4059
g57
(g58
g59
NtRp4060
(dp4061
g62
(dp4062
sg64
(lp4063
g57
(g66
g59
NtRp4064
(dp4065
g62
(dp4066
g70
I5
ssg71
Nsg64
(lp4067
g57
(g73
g59
NtRp4068
(dp4069
g62
(dp4070
sg71
g4064
sg64
(lp4071
g57
(g78
g59
NtRp4072
(dp4073
g62
(dp4074
g82
g83
ssg71
g4068
sg64
(lp4075
g218
asbag57
(g78
g59
NtRp4076
(dp4077
g62
(dp4078
g89
g90
ssg71
g4068
sg64
(lp4079
S':'
asbag57
(g78
g59
NtRp4080
(dp4081
g62
(dp4082
sg71
g4068
sg64
(lp4083
g57
(g58
g59
NtRp4084
(dp4085
g62
(dp4086
g70
I5
ssg71
g4080
sg64
(lp4087
S'<cStringIO.StringO object at 0xae7ae400>'
p4088
asbasbasbag57
(g73
g59
NtRp4089
(dp4090
g62
(dp4091
sg71
g4064
sg64
(lp4092
g57
(g78
g59
NtRp4093
(dp4094
g62
(dp4095
g82
g83
ssg71
g4089
sg64
(lp4096
g306
asbag57
(g78
g59
NtRp4097
(dp4098
g62
(dp4099
g89
g90
ssg71
g4089
sg64
(lp4100
S':'
asbag57
(g78
g59
NtRp4101
(dp4102
g62
(dp4103
sg71
g4089
sg64
(lp4104
g57
(g58
g59
NtRp4105
(dp4106
g62
(dp4107
g70
I5
ssg71
g4101
sg64
(lp4108
g57
(g66
g59
NtRp4109
(dp4110
g62
(dp4111
g70
I4
ssg71
Nsg64
(lp4112
g57
(g73
g59
NtRp4113
(dp4114
g62
(dp4115
sg71
g4109
sg64
(lp4116
g57
(g78
g59
NtRp4117
(dp4118
g62
(dp4119
g82
g83
ssg71
g4113
sg64
(lp4120
S'session_id_dev_bootstrap_ch'
p4121
asbag57
(g78
g59
NtRp4122
(dp4123
g62
(dp4124
g89
g90
ssg71
g4113
sg64
(lp4125
S':'
asbag57
(g78
g59
NtRp4126
(dp4127
g62
(dp4128
sg71
g4113
sg64
(lp4129
g57
(g58
g59
NtRp4130
(dp4131
g62
(dp4132
g70
I4
ssg71
g4126
sg64
(lp4133
g724
ag57
(g66
g59
NtRp4134
(dp4135
g62
(dp4136
g70
I3
ssg71
Nsg64
(lp4137
g57
(g73
g59
NtRp4138
(dp4139
g62
(dp4140
sg71
g4134
sg64
(lp4141
g57
(g78
g59
NtRp4142
(dp4143
g62
(dp4144
g82
g83
ssg71
g4138
sg64
(lp4145
g357
asbag57
(g78
g59
NtRp4146
(dp4147
g62
(dp4148
g89
g90
ssg71
g4138
sg64
(lp4149
S':'
asbag57
(g78
g59
NtRp4150
(dp4151
g62
(dp4152
sg71
g4138
sg64
(lp4153
g57
(g58
g59
NtRp4154
(dp4155
g62
(dp4156
g70
I3
ssg71
g4150
sg64
(lp4157
S''
asbasbasbag57
(g73
g59
NtRp4158
(dp4159
g62
(dp4160
sg71
g4134
sg64
(lp4161
g57
(g78
g59
NtRp4162
(dp4163
g62
(dp4164
g82
g83
ssg71
g4158
sg64
(lp4165
g378
asbag57
(g78
g59
NtRp4166
(dp4167
g62
(dp4168
g89
g90
ssg71
g4158
sg64
(lp4169
S':'
asbag57
(g78
g59
NtRp4170
(dp4171
g62
(dp4172
sg71
g4158
sg64
(lp4173
g57
(g58
g59
NtRp4174
(dp4175
g62
(dp4176
g70
I3
ssg71
g4170
sg64
(lp4177
S''
asbasbasbag57
(g73
g59
NtRp4178
(dp4179
g62
(dp4180
sg71
g4134
sg64
(lp4181
g57
(g78
g59
NtRp4182
(dp4183
g62
(dp4184
g82
g83
ssg71
g4178
sg64
(lp4185
g399
asbag57
(g78
g59
NtRp4186
(dp4187
g62
(dp4188
g89
g90
ssg71
g4178
sg64
(lp4189
S':'
asbag57
(g78
g59
NtRp4190
(dp4191
g62
(dp4192
sg71
g4178
sg64
(lp4193
g57
(g58
g59
NtRp4194
(dp4195
g62
(dp4196
g70
I3
ssg71
g4190
sg64
(lp4197
S'2592000'
p4198
asbasbasbag57
(g73
g59
NtRp4199
(dp4200
g62
(dp4201
sg71
g4134
sg64
(lp4202
g57
(g78
g59
NtRp4203
(dp4204
g62
(dp4205
g82
g83
ssg71
g4199
sg64
(lp4206
g420
asbag57
(g78
g59
NtRp4207
(dp4208
g62
(dp4209
g89
g90
ssg71
g4199
sg64
(lp4210
S':'
asbag57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
sg71
g4199
sg64
(lp4214
g57
(g58
g59
NtRp4215
(dp4216
g62
(dp4217
g70
I3
ssg71
g4211
sg64
(lp4218
S''
asbasbasbag57
(g73
g59
NtRp4219
(dp4220
g62
(dp4221
sg71
g4134
sg64
(lp4222
g57
(g78
g59
NtRp4223
(dp4224
g62
(dp4225
g82
g83
ssg71
g4219
sg64
(lp4226
g441
asbag57
(g78
g59
NtRp4227
(dp4228
g62
(dp4229
g89
g90
ssg71
g4219
sg64
(lp4230
S':'
asbag57
(g78
g59
NtRp4231
(dp4232
g62
(dp4233
sg71
g4219
sg64
(lp4234
g57
(g58
g59
NtRp4235
(dp4236
g62
(dp4237
g70
I3
ssg71
g4231
sg64
(lp4238
S''
asbasbasbag57
(g73
g59
NtRp4239
(dp4240
g62
(dp4241
sg71
g4134
sg64
(lp4242
g57
(g78
g59
NtRp4243
(dp4244
g62
(dp4245
g82
g83
ssg71
g4239
sg64
(lp4246
g462
asbag57
(g78
g59
NtRp4247
(dp4248
g62
(dp4249
g89
g90
ssg71
g4239
sg64
(lp4250
S':'
asbag57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4239
sg64
(lp4254
g57
(g58
g59
NtRp4255
(dp4256
g62
(dp4257
g70
I3
ssg71
g4251
sg64
(lp4258
S'/'
asbasbasbag57
(g73
g59
NtRp4259
(dp4260
g62
(dp4261
sg71
g4134
sg64
(lp4262
g57
(g78
g59
NtRp4263
(dp4264
g62
(dp4265
g82
g83
ssg71
g4259
sg64
(lp4266
g483
asbag57
(g78
g59
NtRp4267
(dp4268
g62
(dp4269
g89
g90
ssg71
g4259
sg64
(lp4270
S':'
asbag57
(g78
g59
NtRp4271
(dp4272
g62
(dp4273
sg71
g4259
sg64
(lp4274
g57
(g58
g59
NtRp4275
(dp4276
g62
(dp4277
g70
I3
ssg71
g4271
sg64
(lp4278
S''
asbasbasbag57
(g73
g59
NtRp4279
(dp4280
g62
(dp4281
sg71
g4134
sg64
(lp4282
g57
(g78
g59
NtRp4283
(dp4284
g62
(dp4285
g82
g83
ssg71
g4279
sg64
(lp4286
g504
asbag57
(g78
g59
NtRp4287
(dp4288
g62
(dp4289
g89
g90
ssg71
g4279
sg64
(lp4290
S':'
asbag57
(g78
g59
NtRp4291
(dp4292
g62
(dp4293
sg71
g4279
sg64
(lp4294
g57
(g58
g59
NtRp4295
(dp4296
g62
(dp4297
g70
I3
ssg71
g4291
sg64
(lp4298
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4299
(dp4300
g62
(dp4301
sg71
g4064
sg64
(lp4302
g57
(g78
g59
NtRp4303
(dp4304
g62
(dp4305
g82
g83
ssg71
g4299
sg64
(lp4306
S'delimiters'
p4307
asbag57
(g78
g59
NtRp4308
(dp4309
g62
(dp4310
g89
g90
ssg71
g4299
sg64
(lp4311
S':'
asbag57
(g78
g59
NtRp4312
(dp4313
g62
(dp4314
sg71
g4299
sg64
(lp4315
g57
(g58
g59
NtRp4316
(dp4317
g62
(dp4318
g70
I5
ssg71
g4312
sg64
(lp4319
g57
(g66
g59
NtRp4320
(dp4321
g62
(dp4322
g70
I4
ssg71
Nsg64
(lp4323
g57
(g73
g59
NtRp4324
(dp4325
g62
(dp4326
sg71
g4320
sg64
(lp4327
g57
(g78
g59
NtRp4328
(dp4329
g62
(dp4330
sg71
g4324
sg64
(lp4331
g57
(g58
g59
NtRp4332
(dp4333
g62
(dp4334
g70
I4
ssg71
g4328
sg64
(lp4335
S'{{'
p4336
asbasbasbag57
(g73
g59
NtRp4337
(dp4338
g62
(dp4339
sg71
g4320
sg64
(lp4340
g57
(g78
g59
NtRp4341
(dp4342
g62
(dp4343
sg71
g4337
sg64
(lp4344
g57
(g58
g59
NtRp4345
(dp4346
g62
(dp4347
g70
I4
ssg71
g4341
sg64
(lp4348
S'}}'
p4349
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4350
(dp4351
g62
(dp4352
sg71
g4064
sg64
(lp4353
g57
(g78
g59
NtRp4354
(dp4355
g62
(dp4356
g82
g83
ssg71
g4350
sg64
(lp4357
S'files'
p4358
asbag57
(g78
g59
NtRp4359
(dp4360
g62
(dp4361
g89
g90
ssg71
g4350
sg64
(lp4362
S':'
asbag57
(g78
g59
NtRp4363
(dp4364
g62
(dp4365
sg71
g4350
sg64
(lp4366
g57
(g58
g59
NtRp4367
(dp4368
g62
(dp4369
g70
I5
ssg71
g4363
sg64
(lp4370
g57
(g66
g59
NtRp4371
(dp4372
g62
(dp4373
g70
I4
ssg71
Nsg64
(lp4374
g57
(g73
g59
NtRp4375
(dp4376
g62
(dp4377
sg71
g4371
sg64
(lp4378
g57
(g78
g59
NtRp4379
(dp4380
g62
(dp4381
sg71
g4375
sg64
(lp4382
g57
(g58
g59
NtRp4383
(dp4384
g62
(dp4385
g70
I4
ssg71
g4379
sg64
(lp4386
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4387
asbasbasbag57
(g73
g59
NtRp4388
(dp4389
g62
(dp4390
sg71
g4371
sg64
(lp4391
g57
(g78
g59
NtRp4392
(dp4393
g62
(dp4394
sg71
g4388
sg64
(lp4395
g57
(g58
g59
NtRp4396
(dp4397
g62
(dp4398
g70
I4
ssg71
g4392
sg64
(lp4399
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4400
asbasbasbag57
(g73
g59
NtRp4401
(dp4402
g62
(dp4403
sg71
g4371
sg64
(lp4404
g57
(g78
g59
NtRp4405
(dp4406
g62
(dp4407
sg71
g4401
sg64
(lp4408
g57
(g58
g59
NtRp4409
(dp4410
g62
(dp4411
g70
I4
ssg71
g4405
sg64
(lp4412
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4413
asbasbasbag57
(g73
g59
NtRp4414
(dp4415
g62
(dp4416
sg71
g4371
sg64
(lp4417
g57
(g78
g59
NtRp4418
(dp4419
g62
(dp4420
sg71
g4414
sg64
(lp4421
g57
(g58
g59
NtRp4422
(dp4423
g62
(dp4424
g70
I4
ssg71
g4418
sg64
(lp4425
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4426
asbasbasbag57
(g73
g59
NtRp4427
(dp4428
g62
(dp4429
sg71
g4371
sg64
(lp4430
g57
(g78
g59
NtRp4431
(dp4432
g62
(dp4433
sg71
g4427
sg64
(lp4434
g57
(g58
g59
NtRp4435
(dp4436
g62
(dp4437
g70
I4
ssg71
g4431
sg64
(lp4438
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4439
asbasbasbag57
(g73
g59
NtRp4440
(dp4441
g62
(dp4442
sg71
g4371
sg64
(lp4443
g57
(g78
g59
NtRp4444
(dp4445
g62
(dp4446
sg71
g4440
sg64
(lp4447
g57
(g58
g59
NtRp4448
(dp4449
g62
(dp4450
g70
I4
ssg71
g4444
sg64
(lp4451
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4452
asbasbasbag57
(g73
g59
NtRp4453
(dp4454
g62
(dp4455
sg71
g4371
sg64
(lp4456
g57
(g78
g59
NtRp4457
(dp4458
g62
(dp4459
sg71
g4453
sg64
(lp4460
g57
(g58
g59
NtRp4461
(dp4462
g62
(dp4463
g70
I4
ssg71
g4457
sg64
(lp4464
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4465
asbasbasbag57
(g73
g59
NtRp4466
(dp4467
g62
(dp4468
sg71
g4371
sg64
(lp4469
g57
(g78
g59
NtRp4470
(dp4471
g62
(dp4472
sg71
g4466
sg64
(lp4473
g57
(g58
g59
NtRp4474
(dp4475
g62
(dp4476
g70
I4
ssg71
g4470
sg64
(lp4477
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4478
asbasbasbag57
(g73
g59
NtRp4479
(dp4480
g62
(dp4481
sg71
g4371
sg64
(lp4482
g57
(g78
g59
NtRp4483
(dp4484
g62
(dp4485
sg71
g4479
sg64
(lp4486
g57
(g58
g59
NtRp4487
(dp4488
g62
(dp4489
g70
I4
ssg71
g4483
sg64
(lp4490
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4491
asbasbasbag57
(g73
g59
NtRp4492
(dp4493
g62
(dp4494
sg71
g4371
sg64
(lp4495
g57
(g78
g59
NtRp4496
(dp4497
g62
(dp4498
sg71
g4492
sg64
(lp4499
g57
(g58
g59
NtRp4500
(dp4501
g62
(dp4502
g70
I4
ssg71
g4496
sg64
(lp4503
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4504
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4505
(dp4506
g62
(dp4507
sg71
g4064
sg64
(lp4508
g57
(g78
g59
NtRp4509
(dp4510
g62
(dp4511
g82
g83
ssg71
g4505
sg64
(lp4512
S'flash'
p4513
asbag57
(g78
g59
NtRp4514
(dp4515
g62
(dp4516
g89
g90
ssg71
g4505
sg64
(lp4517
S':'
asbag57
(g78
g59
NtRp4518
(dp4519
g62
(dp4520
sg71
g4505
sg64
(lp4521
g57
(g58
g59
NtRp4522
(dp4523
g62
(dp4524
g70
I5
ssg71
g4518
sg64
(lp4525
S''
asbasbasbag57
(g73
g59
NtRp4526
(dp4527
g62
(dp4528
sg71
g4064
sg64
(lp4529
g57
(g78
g59
NtRp4530
(dp4531
g62
(dp4532
g82
g83
ssg71
g4526
sg64
(lp4533
S'generic_patterns'
p4534
asbag57
(g78
g59
NtRp4535
(dp4536
g62
(dp4537
g89
g90
ssg71
g4526
sg64
(lp4538
S':'
asbag57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
sg71
g4526
sg64
(lp4542
g57
(g58
g59
NtRp4543
(dp4544
g62
(dp4545
g70
I5
ssg71
g4539
sg64
(lp4546
g57
(g66
g59
NtRp4547
(dp4548
g62
(dp4549
g70
I4
ssg71
Nsg64
(lp4550
g57
(g73
g59
NtRp4551
(dp4552
g62
(dp4553
sg71
g4547
sg64
(lp4554
g57
(g78
g59
NtRp4555
(dp4556
g62
(dp4557
sg71
g4551
sg64
(lp4558
g57
(g58
g59
NtRp4559
(dp4560
g62
(dp4561
g70
I4
ssg71
g4555
sg64
(lp4562
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4563
(dp4564
g62
(dp4565
sg71
g4064
sg64
(lp4566
g57
(g78
g59
NtRp4567
(dp4568
g62
(dp4569
g82
g83
ssg71
g4563
sg64
(lp4570
S'google_analytics_id'
p4571
asbag57
(g78
g59
NtRp4572
(dp4573
g62
(dp4574
g89
g90
ssg71
g4563
sg64
(lp4575
S':'
asbag57
(g78
g59
NtRp4576
(dp4577
g62
(dp4578
sg71
g4563
sg64
(lp4579
g57
(g58
g59
NtRp4580
(dp4581
g62
(dp4582
g70
I5
ssg71
g4576
sg64
(lp4583
S'None'
p4584
asbasbasbag57
(g73
g59
NtRp4585
(dp4586
g62
(dp4587
sg71
g4064
sg64
(lp4588
g57
(g78
g59
NtRp4589
(dp4590
g62
(dp4591
g82
g83
ssg71
g4585
sg64
(lp4592
S'headers'
p4593
asbag57
(g78
g59
NtRp4594
(dp4595
g62
(dp4596
g89
g90
ssg71
g4585
sg64
(lp4597
S':'
asbag57
(g78
g59
NtRp4598
(dp4599
g62
(dp4600
sg71
g4585
sg64
(lp4601
g57
(g58
g59
NtRp4602
(dp4603
g62
(dp4604
g70
I5
ssg71
g4598
sg64
(lp4605
g57
(g66
g59
NtRp4606
(dp4607
g62
(dp4608
g70
I4
ssg71
Nsg64
(lp4609
g57
(g73
g59
NtRp4610
(dp4611
g62
(dp4612
sg71
g4606
sg64
(lp4613
g57
(g78
g59
NtRp4614
(dp4615
g62
(dp4616
g82
g83
ssg71
g4610
sg64
(lp4617
S'X-Powered-By'
p4618
asbag57
(g78
g59
NtRp4619
(dp4620
g62
(dp4621
g89
g90
ssg71
g4610
sg64
(lp4622
S':'
asbag57
(g78
g59
NtRp4623
(dp4624
g62
(dp4625
sg71
g4610
sg64
(lp4626
g57
(g58
g59
NtRp4627
(dp4628
g62
(dp4629
g70
I4
ssg71
g4623
sg64
(lp4630
S'web2py'
p4631
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4632
(dp4633
g62
(dp4634
sg71
g4064
sg64
(lp4635
g57
(g78
g59
NtRp4636
(dp4637
g62
(dp4638
g82
g83
ssg71
g4632
sg64
(lp4639
S'menu'
p4640
asbag57
(g78
g59
NtRp4641
(dp4642
g62
(dp4643
g89
g90
ssg71
g4632
sg64
(lp4644
S':'
asbag57
(g78
g59
NtRp4645
(dp4646
g62
(dp4647
sg71
g4632
sg64
(lp4648
g57
(g58
g59
NtRp4649
(dp4650
g62
(dp4651
g70
I5
ssg71
g4645
sg64
(lp4652
g57
(g66
g59
NtRp4653
(dp4654
g62
(dp4655
g70
I4
ssg71
Nsg64
(lp4656
g57
(g73
g59
NtRp4657
(dp4658
g62
(dp4659
sg71
g4653
sg64
(lp4660
g57
(g78
g59
NtRp4661
(dp4662
g62
(dp4663
sg71
g4657
sg64
(lp4664
g57
(g58
g59
NtRp4665
(dp4666
g62
(dp4667
g70
I4
ssg71
g4661
sg64
(lp4668
g57
(g66
g59
NtRp4669
(dp4670
g62
(dp4671
g70
I3
ssg71
Nsg64
(lp4672
g57
(g73
g59
NtRp4673
(dp4674
g62
(dp4675
sg71
g4669
sg64
(lp4676
g57
(g78
g59
NtRp4677
(dp4678
g62
(dp4679
sg71
g4673
sg64
(lp4680
g57
(g58
g59
NtRp4681
(dp4682
g62
(dp4683
g70
I3
ssg71
g4677
sg64
(lp4684
cgluon.languages
lazyT_unpickle
p4685
(S't\x04\x00\x00\x00Home'
tRp4686
asbasbasbag57
(g73
g59
NtRp4687
(dp4688
g62
(dp4689
sg71
g4669
sg64
(lp4690
g57
(g78
g59
NtRp4691
(dp4692
g62
(dp4693
sg71
g4687
sg64
(lp4694
g57
(g58
g59
NtRp4695
(dp4696
g62
(dp4697
g70
I3
ssg71
g4691
sg64
(lp4698
g100
asbasbasbag57
(g73
g59
NtRp4699
(dp4700
g62
(dp4701
sg71
g4669
sg64
(lp4702
g57
(g78
g59
NtRp4703
(dp4704
g62
(dp4705
sg71
g4699
sg64
(lp4706
g57
(g58
g59
NtRp4707
(dp4708
g62
(dp4709
g70
I3
ssg71
g4703
sg64
(lp4710
S'/DEV_bootstrap_ch/default/list_all_projects'
p4711
asbasbasbag57
(g73
g59
NtRp4712
(dp4713
g62
(dp4714
sg71
g4669
sg64
(lp4715
g57
(g78
g59
NtRp4716
(dp4717
g62
(dp4718
sg71
g4712
sg64
(lp4719
g57
(g58
g59
NtRp4720
(dp4721
g62
(dp4722
g70
I3
ssg71
g4716
sg64
(lp4723
g57
(g66
g59
NtRp4724
(dp4725
g62
(dp4726
g70
I2
ssg71
Nsg64
(lp4727
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4728
(dp4729
g62
(dp4730
sg71
g4064
sg64
(lp4731
g57
(g78
g59
NtRp4732
(dp4733
g62
(dp4734
g82
g83
ssg71
g4728
sg64
(lp4735
S'meta'
p4736
asbag57
(g78
g59
NtRp4737
(dp4738
g62
(dp4739
g89
g90
ssg71
g4728
sg64
(lp4740
S':'
asbag57
(g78
g59
NtRp4741
(dp4742
g62
(dp4743
sg71
g4728
sg64
(lp4744
g57
(g58
g59
NtRp4745
(dp4746
g62
(dp4747
g70
I5
ssg71
g4741
sg64
(lp4748
g57
(g66
g59
NtRp4749
(dp4750
g62
(dp4751
g70
I4
ssg71
Nsg64
(lp4752
g57
(g73
g59
NtRp4753
(dp4754
g62
(dp4755
sg71
g4749
sg64
(lp4756
g57
(g78
g59
NtRp4757
(dp4758
g62
(dp4759
g82
g83
ssg71
g4753
sg64
(lp4760
S'author'
p4761
asbag57
(g78
g59
NtRp4762
(dp4763
g62
(dp4764
g89
g90
ssg71
g4753
sg64
(lp4765
S':'
asbag57
(g78
g59
NtRp4766
(dp4767
g62
(dp4768
sg71
g4753
sg64
(lp4769
g57
(g58
g59
NtRp4770
(dp4771
g62
(dp4772
g70
I4
ssg71
g4766
sg64
(lp4773
S'Vikram Pudi <vikram@iiit.ac.in>'
p4774
asbasbasbag57
(g73
g59
NtRp4775
(dp4776
g62
(dp4777
sg71
g4749
sg64
(lp4778
g57
(g78
g59
NtRp4779
(dp4780
g62
(dp4781
g82
g83
ssg71
g4775
sg64
(lp4782
S'copyright'
p4783
asbag57
(g78
g59
NtRp4784
(dp4785
g62
(dp4786
g89
g90
ssg71
g4775
sg64
(lp4787
S':'
asbag57
(g78
g59
NtRp4788
(dp4789
g62
(dp4790
sg71
g4775
sg64
(lp4791
g57
(g58
g59
NtRp4792
(dp4793
g62
(dp4794
g70
I4
ssg71
g4788
sg64
(lp4795
S'Copyright 2011'
p4796
asbasbasbag57
(g73
g59
NtRp4797
(dp4798
g62
(dp4799
sg71
g4749
sg64
(lp4800
g57
(g78
g59
NtRp4801
(dp4802
g62
(dp4803
g82
g83
ssg71
g4797
sg64
(lp4804
S'description'
p4805
asbag57
(g78
g59
NtRp4806
(dp4807
g62
(dp4808
g89
g90
ssg71
g4797
sg64
(lp4809
S':'
asbag57
(g78
g59
NtRp4810
(dp4811
g62
(dp4812
sg71
g4797
sg64
(lp4813
g57
(g58
g59
NtRp4814
(dp4815
g62
(dp4816
g70
I4
ssg71
g4810
sg64
(lp4817
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4818
asbasbasbag57
(g73
g59
NtRp4819
(dp4820
g62
(dp4821
sg71
g4749
sg64
(lp4822
g57
(g78
g59
NtRp4823
(dp4824
g62
(dp4825
g82
g83
ssg71
g4819
sg64
(lp4826
S'generator'
p4827
asbag57
(g78
g59
NtRp4828
(dp4829
g62
(dp4830
g89
g90
ssg71
g4819
sg64
(lp4831
S':'
asbag57
(g78
g59
NtRp4832
(dp4833
g62
(dp4834
sg71
g4819
sg64
(lp4835
g57
(g58
g59
NtRp4836
(dp4837
g62
(dp4838
g70
I4
ssg71
g4832
sg64
(lp4839
S'Web2py Web Framework'
p4840
asbasbasbag57
(g73
g59
NtRp4841
(dp4842
g62
(dp4843
sg71
g4749
sg64
(lp4844
g57
(g78
g59
NtRp4845
(dp4846
g62
(dp4847
g82
g83
ssg71
g4841
sg64
(lp4848
S'keywords'
p4849
asbag57
(g78
g59
NtRp4850
(dp4851
g62
(dp4852
g89
g90
ssg71
g4841
sg64
(lp4853
S':'
asbag57
(g78
g59
NtRp4854
(dp4855
g62
(dp4856
sg71
g4841
sg64
(lp4857
g57
(g58
g59
NtRp4858
(dp4859
g62
(dp4860
g70
I4
ssg71
g4854
sg64
(lp4861
S'web2py, python, metabolome, metabolomics'
p4862
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4863
(dp4864
g62
(dp4865
sg71
g4064
sg64
(lp4866
g57
(g78
g59
NtRp4867
(dp4868
g62
(dp4869
g82
g83
ssg71
g4863
sg64
(lp4870
S'models_to_run'
p4871
asbag57
(g78
g59
NtRp4872
(dp4873
g62
(dp4874
g89
g90
ssg71
g4863
sg64
(lp4875
S':'
asbag57
(g78
g59
NtRp4876
(dp4877
g62
(dp4878
sg71
g4863
sg64
(lp4879
g57
(g58
g59
NtRp4880
(dp4881
g62
(dp4882
g70
I5
ssg71
g4876
sg64
(lp4883
g57
(g66
g59
NtRp4884
(dp4885
g62
(dp4886
g70
I4
ssg71
Nsg64
(lp4887
g57
(g73
g59
NtRp4888
(dp4889
g62
(dp4890
sg71
g4884
sg64
(lp4891
g57
(g78
g59
NtRp4892
(dp4893
g62
(dp4894
sg71
g4888
sg64
(lp4895
g57
(g58
g59
NtRp4896
(dp4897
g62
(dp4898
g70
I4
ssg71
g4892
sg64
(lp4899
S'^\\w+\\.py$'
p4900
asbasbasbag57
(g73
g59
NtRp4901
(dp4902
g62
(dp4903
sg71
g4884
sg64
(lp4904
g57
(g78
g59
NtRp4905
(dp4906
g62
(dp4907
sg71
g4901
sg64
(lp4908
g57
(g58
g59
NtRp4909
(dp4910
g62
(dp4911
g70
I4
ssg71
g4905
sg64
(lp4912
S'^default/\\w+\\.py$'
p4913
asbasbasbag57
(g73
g59
NtRp4914
(dp4915
g62
(dp4916
sg71
g4884
sg64
(lp4917
g57
(g78
g59
NtRp4918
(dp4919
g62
(dp4920
sg71
g4914
sg64
(lp4921
g57
(g58
g59
NtRp4922
(dp4923
g62
(dp4924
g70
I4
ssg71
g4918
sg64
(lp4925
S'^default/list_all_dev_projects/\\w+\\.py$'
p4926
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4927
(dp4928
g62
(dp4929
sg71
g4064
sg64
(lp4930
g57
(g78
g59
NtRp4931
(dp4932
g62
(dp4933
g82
g83
ssg71
g4927
sg64
(lp4934
S'postprocessing'
p4935
asbag57
(g78
g59
NtRp4936
(dp4937
g62
(dp4938
g89
g90
ssg71
g4927
sg64
(lp4939
S':'
asbag57
(g78
g59
NtRp4940
(dp4941
g62
(dp4942
sg71
g4927
sg64
(lp4943
g57
(g58
g59
NtRp4944
(dp4945
g62
(dp4946
g70
I5
ssg71
g4940
sg64
(lp4947
g57
(g66
g59
NtRp4948
(dp4949
g62
(dp4950
g70
I4
ssg71
Nsg64
(lp4951
sbasbasbasbag57
(g73
g59
NtRp4952
(dp4953
g62
(dp4954
sg71
g4064
sg64
(lp4955
g57
(g78
g59
NtRp4956
(dp4957
g62
(dp4958
g82
g83
ssg71
g4952
sg64
(lp4959
S'session_cookie_expires'
p4960
asbag57
(g78
g59
NtRp4961
(dp4962
g62
(dp4963
g89
g90
ssg71
g4952
sg64
(lp4964
S':'
asbag57
(g78
g59
NtRp4965
(dp4966
g62
(dp4967
sg71
g4952
sg64
(lp4968
g57
(g58
g59
NtRp4969
(dp4970
g62
(dp4971
g70
I5
ssg71
g4965
sg64
(lp4972
S'None'
p4973
asbasbasbag57
(g73
g59
NtRp4974
(dp4975
g62
(dp4976
sg71
g4064
sg64
(lp4977
g57
(g78
g59
NtRp4978
(dp4979
g62
(dp4980
g82
g83
ssg71
g4974
sg64
(lp4981
S'session_data_name'
p4982
asbag57
(g78
g59
NtRp4983
(dp4984
g62
(dp4985
g89
g90
ssg71
g4974
sg64
(lp4986
S':'
asbag57
(g78
g59
NtRp4987
(dp4988
g62
(dp4989
sg71
g4974
sg64
(lp4990
g57
(g58
g59
NtRp4991
(dp4992
g62
(dp4993
g70
I5
ssg71
g4987
sg64
(lp4994
S'session_data_dev_bootstrap_ch'
p4995
asbasbasbag57
(g73
g59
NtRp4996
(dp4997
g62
(dp4998
sg71
g4064
sg64
(lp4999
g57
(g78
g59
NtRp5000
(dp5001
g62
(dp5002
g82
g83
ssg71
g4996
sg64
(lp5003
S'session_file'
p5004
asbag57
(g78
g59
NtRp5005
(dp5006
g62
(dp5007
g89
g90
ssg71
g4996
sg64
(lp5008
S':'
asbag57
(g78
g59
NtRp5009
(dp5010
g62
(dp5011
sg71
g4996
sg64
(lp5012
g57
(g58
g59
NtRp5013
(dp5014
g62
(dp5015
g70
I5
ssg71
g5009
sg64
(lp5016
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xb0122b20>"
p5017
asbasbasbag57
(g73
g59
NtRp5018
(dp5019
g62
(dp5020
sg71
g4064
sg64
(lp5021
g57
(g78
g59
NtRp5022
(dp5023
g62
(dp5024
g82
g83
ssg71
g5018
sg64
(lp5025
S'session_filename'
p5026
asbag57
(g78
g59
NtRp5027
(dp5028
g62
(dp5029
g89
g90
ssg71
g5018
sg64
(lp5030
S':'
asbag57
(g78
g59
NtRp5031
(dp5032
g62
(dp5033
sg71
g5018
sg64
(lp5034
g57
(g58
g59
NtRp5035
(dp5036
g62
(dp5037
g70
I5
ssg71
g5031
sg64
(lp5038
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p5039
asbasbasbag57
(g73
g59
NtRp5040
(dp5041
g62
(dp5042
sg71
g4064
sg64
(lp5043
g57
(g78
g59
NtRp5044
(dp5045
g62
(dp5046
g82
g83
ssg71
g5040
sg64
(lp5047
S'session_id'
p5048
asbag57
(g78
g59
NtRp5049
(dp5050
g62
(dp5051
g89
g90
ssg71
g5040
sg64
(lp5052
S':'
asbag57
(g78
g59
NtRp5053
(dp5054
g62
(dp5055
sg71
g5040
sg64
(lp5056
g57
(g58
g59
NtRp5057
(dp5058
g62
(dp5059
g70
I5
ssg71
g5053
sg64
(lp5060
g724
asbasbasbag57
(g73
g59
NtRp5061
(dp5062
g62
(dp5063
sg71
g4064
sg64
(lp5064
g57
(g78
g59
NtRp5065
(dp5066
g62
(dp5067
g82
g83
ssg71
g5061
sg64
(lp5068
S'session_id_name'
p5069
asbag57
(g78
g59
NtRp5070
(dp5071
g62
(dp5072
g89
g90
ssg71
g5061
sg64
(lp5073
S':'
asbag57
(g78
g59
NtRp5074
(dp5075
g62
(dp5076
sg71
g5061
sg64
(lp5077
g57
(g58
g59
NtRp5078
(dp5079
g62
(dp5080
g70
I5
ssg71
g5074
sg64
(lp5081
g4121
asbasbasbag57
(g73
g59
NtRp5082
(dp5083
g62
(dp5084
sg71
g4064
sg64
(lp5085
g57
(g78
g59
NtRp5086
(dp5087
g62
(dp5088
g82
g83
ssg71
g5082
sg64
(lp5089
S'session_locked'
p5090
asbag57
(g78
g59
NtRp5091
(dp5092
g62
(dp5093
g89
g90
ssg71
g5082
sg64
(lp5094
S':'
asbag57
(g78
g59
NtRp5095
(dp5096
g62
(dp5097
sg71
g5082
sg64
(lp5098
g57
(g58
g59
NtRp5099
(dp5100
g62
(dp5101
g70
I5
ssg71
g5095
sg64
(lp5102
g1878
asbasbasbag57
(g73
g59
NtRp5103
(dp5104
g62
(dp5105
sg71
g4064
sg64
(lp5106
g57
(g78
g59
NtRp5107
(dp5108
g62
(dp5109
g82
g83
ssg71
g5103
sg64
(lp5110
S'session_new'
p5111
asbag57
(g78
g59
NtRp5112
(dp5113
g62
(dp5114
g89
g90
ssg71
g5103
sg64
(lp5115
S':'
asbag57
(g78
g59
NtRp5116
(dp5117
g62
(dp5118
sg71
g5103
sg64
(lp5119
g57
(g58
g59
NtRp5120
(dp5121
g62
(dp5122
g70
I5
ssg71
g5116
sg64
(lp5123
g100
asbasbasbag57
(g73
g59
NtRp5124
(dp5125
g62
(dp5126
sg71
g4064
sg64
(lp5127
g57
(g78
g59
NtRp5128
(dp5129
g62
(dp5130
g82
g83
ssg71
g5124
sg64
(lp5131
S'session_storage_type'
p5132
asbag57
(g78
g59
NtRp5133
(dp5134
g62
(dp5135
g89
g90
ssg71
g5124
sg64
(lp5136
S':'
asbag57
(g78
g59
NtRp5137
(dp5138
g62
(dp5139
sg71
g5124
sg64
(lp5140
g57
(g58
g59
NtRp5141
(dp5142
g62
(dp5143
g70
I5
ssg71
g5137
sg64
(lp5144
g3352
asbasbasbag57
(g73
g59
NtRp5145
(dp5146
g62
(dp5147
sg71
g4064
sg64
(lp5148
g57
(g78
g59
NtRp5149
(dp5150
g62
(dp5151
g82
g83
ssg71
g5145
sg64
(lp5152
S'status'
p5153
asbag57
(g78
g59
NtRp5154
(dp5155
g62
(dp5156
g89
g90
ssg71
g5145
sg64
(lp5157
S':'
asbag57
(g78
g59
NtRp5158
(dp5159
g62
(dp5160
sg71
g5145
sg64
(lp5161
g57
(g58
g59
NtRp5162
(dp5163
g62
(dp5164
g70
I5
ssg71
g5158
sg64
(lp5165
S'200'
p5166
asbasbasbag57
(g73
g59
NtRp5167
(dp5168
g62
(dp5169
sg71
g4064
sg64
(lp5170
g57
(g78
g59
NtRp5171
(dp5172
g62
(dp5173
g82
g83
ssg71
g5167
sg64
(lp5174
S'subtitle'
p5175
asbag57
(g78
g59
NtRp5176
(dp5177
g62
(dp5178
g89
g90
ssg71
g5167
sg64
(lp5179
S':'
asbag57
(g78
g59
NtRp5180
(dp5181
g62
(dp5182
sg71
g5167
sg64
(lp5183
g57
(g58
g59
NtRp5184
(dp5185
g62
(dp5186
g70
I5
ssg71
g5180
sg64
(lp5187
g4685
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5188
asbasbasbag57
(g73
g59
NtRp5189
(dp5190
g62
(dp5191
sg71
g4064
sg64
(lp5192
g57
(g78
g59
NtRp5193
(dp5194
g62
(dp5195
g82
g83
ssg71
g5189
sg64
(lp5196
g3930
asbag57
(g78
g59
NtRp5197
(dp5198
g62
(dp5199
g89
g90
ssg71
g5189
sg64
(lp5200
S':'
asbag57
(g78
g59
NtRp5201
(dp5202
g62
(dp5203
sg71
g5189
sg64
(lp5204
g57
(g58
g59
NtRp5205
(dp5206
g62
(dp5207
g70
I5
ssg71
g5201
sg64
(lp5208
g122
asbasbasbag57
(g73
g59
NtRp5209
(dp5210
g62
(dp5211
sg71
g4064
sg64
(lp5212
g57
(g78
g59
NtRp5213
(dp5214
g62
(dp5215
g82
g83
ssg71
g5209
sg64
(lp5216
S'view'
p5217
asbag57
(g78
g59
NtRp5218
(dp5219
g62
(dp5220
g89
g90
ssg71
g5209
sg64
(lp5221
S':'
asbag57
(g78
g59
NtRp5222
(dp5223
g62
(dp5224
sg71
g5209
sg64
(lp5225
g57
(g58
g59
NtRp5226
(dp5227
g62
(dp5228
g70
I5
ssg71
g5222
sg64
(lp5229
S'default/list_all_dev_projects.html'
p5230
asbasbasbasbasbsS'locals'
p5231
(dp5232
S'ck'
p5233
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p5234
sS'q1'
p5235
S"<Query (project.project_status = '0')>"
p5236
sS'q2'
p5237
S'<Query (sample.experimentalist = 2)>'
p5238
sS'addsample'
p5239
g1878
sg42
S"['experiment.project', '1', 'sample.experiment']"
p5240
sS'fi'
p5241
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p5242
sS'create_dict'
p5243
S"{'project': False, 'sample': True}"
p5244
sS'edit_dict'
p5245
S"{'project': False}"
p5246
sS'delete_dict'
p5247
S"{'project': False}"
p5248
sssS'traceback'
p5249
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1120, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 312, in list_all_dev_projects\n    args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name",row.id,"edit","biosource",getid(row.id)]\nNameError: global name \'row\' is not defined\n'
p5250
s.