(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'publication_date'"
p3
sS'layer'
p4
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.approval_status==1)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\n@auth.requires_login()\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\n@auth.requires_login()\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.approval_status==1)(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\n@auth.requires_login()\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    dev_projects = db(db.project.project_status == 0)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\n@auth.requires_login()\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n    orderby_dict ={\'sample\':db.sample.name} \n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy\',_href=URL("default","copy",args=request.args[:]+[row.id])),\\\n           lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'biosource_\'+tes(row.id,\'biosource\'),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           lambda row: A(\'PGC_\'+tes(row.id,\'plant_growth_condition\'),_href=URL("default","router",args=getargs(row.id,args,"plant_growth_condition"))), \\\n           lambda row: A(\'treatment_\'+tes(row.id,\'treatments\'),_href=URL("default","router",args=getargs(row.id,args,"treatments"))), \\\n           lambda row: A(\'harvest_\'+tes(row.id,\'harvests\'),_href=URL("default","router",args=getargs(row.id,args,"harvests"))), \\\n           lambda row: A(\'Ext_\'+tes(row.id,\'extraction_preparation\'),_href=URL("default","router",args=getargs(row.id,args,"extraction_preparation"))), \\\n           lambda row: A(\'GC_\'+tes(row.id,\'gas_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"gas_chromatography"))), \\\n           lambda row: A(\'LC_\'+tes(row.id,\'liquid_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"liquid_chromatography"))), \\\n           lambda row: A(\'MS_\'+tes(row.id,\'mass_spectroscopy\'),_href=URL("default","router",args=getargs(row.id,args,"mass_spectroscopy"))), \\\n           lambda row: A(\'spectrophotometry_\'+tes(row.id,\'spectrophotometry\'),_href=URL("default","router",args=getargs(row.id,args,"spectrophotometry")))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    \n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,orderby=orderby_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a,table):\n    if db(db[table].sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef copy():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1",publication_date = now)\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0",publication_date= None)\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(ajx_publish)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'Table\' object has no attribute \'publication_date\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'Table' object has no attribute 'publication_date'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'publish'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'5'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp172
(dp173
g62
(dp174
sg71
g67
sg64
(lp175
g57
(g78
g59
NtRp176
(dp177
g62
(dp178
g82
g83
ssg71
g172
sg64
(lp179
S'body'
p180
asbag57
(g78
g59
NtRp181
(dp182
g62
(dp183
g89
g90
ssg71
g172
sg64
(lp184
S':'
asbag57
(g78
g59
NtRp185
(dp186
g62
(dp187
sg71
g172
sg64
(lp188
g57
(g58
g59
NtRp189
(dp190
g62
(dp191
g70
I5
ssg71
g185
sg64
(lp192
S'<cStringIO.StringO object at 0xb055c3a0>'
p193
asbasbasbag57
(g73
g59
NtRp194
(dp195
g62
(dp196
sg71
g67
sg64
(lp197
g57
(g78
g59
NtRp198
(dp199
g62
(dp200
g82
g83
ssg71
g194
sg64
(lp201
S'cid'
p202
asbag57
(g78
g59
NtRp203
(dp204
g62
(dp205
g89
g90
ssg71
g194
sg64
(lp206
S':'
asbag57
(g78
g59
NtRp207
(dp208
g62
(dp209
sg71
g194
sg64
(lp210
g57
(g58
g59
NtRp211
(dp212
g62
(dp213
g70
I5
ssg71
g207
sg64
(lp214
S'None'
p215
asbasbasbag57
(g73
g59
NtRp216
(dp217
g62
(dp218
sg71
g67
sg64
(lp219
g57
(g78
g59
NtRp220
(dp221
g62
(dp222
g82
g83
ssg71
g216
sg64
(lp223
S'client'
p224
asbag57
(g78
g59
NtRp225
(dp226
g62
(dp227
g89
g90
ssg71
g216
sg64
(lp228
S':'
asbag57
(g78
g59
NtRp229
(dp230
g62
(dp231
sg71
g216
sg64
(lp232
g57
(g58
g59
NtRp233
(dp234
g62
(dp235
g70
I5
ssg71
g229
sg64
(lp236
S'127.0.0.1'
p237
asbasbasbag57
(g73
g59
NtRp238
(dp239
g62
(dp240
sg71
g67
sg64
(lp241
g57
(g78
g59
NtRp242
(dp243
g62
(dp244
g82
g83
ssg71
g238
sg64
(lp245
S'controller'
p246
asbag57
(g78
g59
NtRp247
(dp248
g62
(dp249
g89
g90
ssg71
g238
sg64
(lp250
S':'
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
sg71
g238
sg64
(lp254
g57
(g58
g59
NtRp255
(dp256
g62
(dp257
g70
I5
ssg71
g251
sg64
(lp258
S'default'
p259
asbasbasbag57
(g73
g59
NtRp260
(dp261
g62
(dp262
sg71
g67
sg64
(lp263
g57
(g78
g59
NtRp264
(dp265
g62
(dp266
g82
g83
ssg71
g260
sg64
(lp267
S'cookies'
p268
asbag57
(g78
g59
NtRp269
(dp270
g62
(dp271
g89
g90
ssg71
g260
sg64
(lp272
S':'
asbag57
(g78
g59
NtRp273
(dp274
g62
(dp275
sg71
g260
sg64
(lp276
g57
(g58
g59
NtRp277
(dp278
g62
(dp279
g70
I5
ssg71
g273
sg64
(lp280
g57
(g66
g59
NtRp281
(dp282
g62
(dp283
g70
I4
ssg71
Nsg64
(lp284
g57
(g73
g59
NtRp285
(dp286
g62
(dp287
sg71
g281
sg64
(lp288
g57
(g78
g59
NtRp289
(dp290
g62
(dp291
g82
g83
ssg71
g285
sg64
(lp292
S'session_id_admin'
p293
asbag57
(g78
g59
NtRp294
(dp295
g62
(dp296
g89
g90
ssg71
g285
sg64
(lp297
S':'
asbag57
(g78
g59
NtRp298
(dp299
g62
(dp300
sg71
g285
sg64
(lp301
g57
(g58
g59
NtRp302
(dp303
g62
(dp304
g70
I4
ssg71
g298
sg64
(lp305
S'127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3'
p306
ag57
(g66
g59
NtRp307
(dp308
g62
(dp309
g70
I3
ssg71
Nsg64
(lp310
g57
(g73
g59
NtRp311
(dp312
g62
(dp313
sg71
g307
sg64
(lp314
g57
(g78
g59
NtRp315
(dp316
g62
(dp317
g82
g83
ssg71
g311
sg64
(lp318
S'comment'
p319
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
g89
g90
ssg71
g311
sg64
(lp323
S':'
asbag57
(g78
g59
NtRp324
(dp325
g62
(dp326
sg71
g311
sg64
(lp327
g57
(g58
g59
NtRp328
(dp329
g62
(dp330
g70
I3
ssg71
g324
sg64
(lp331
S''
asbasbasbag57
(g73
g59
NtRp332
(dp333
g62
(dp334
sg71
g307
sg64
(lp335
g57
(g78
g59
NtRp336
(dp337
g62
(dp338
g82
g83
ssg71
g332
sg64
(lp339
S'domain'
p340
asbag57
(g78
g59
NtRp341
(dp342
g62
(dp343
g89
g90
ssg71
g332
sg64
(lp344
S':'
asbag57
(g78
g59
NtRp345
(dp346
g62
(dp347
sg71
g332
sg64
(lp348
g57
(g58
g59
NtRp349
(dp350
g62
(dp351
g70
I3
ssg71
g345
sg64
(lp352
S''
asbasbasbag57
(g73
g59
NtRp353
(dp354
g62
(dp355
sg71
g307
sg64
(lp356
g57
(g78
g59
NtRp357
(dp358
g62
(dp359
g82
g83
ssg71
g353
sg64
(lp360
S'expires'
p361
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
g89
g90
ssg71
g353
sg64
(lp365
S':'
asbag57
(g78
g59
NtRp366
(dp367
g62
(dp368
sg71
g353
sg64
(lp369
g57
(g58
g59
NtRp370
(dp371
g62
(dp372
g70
I3
ssg71
g366
sg64
(lp373
S''
asbasbasbag57
(g73
g59
NtRp374
(dp375
g62
(dp376
sg71
g307
sg64
(lp377
g57
(g78
g59
NtRp378
(dp379
g62
(dp380
g82
g83
ssg71
g374
sg64
(lp381
S'httponly'
p382
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
g89
g90
ssg71
g374
sg64
(lp386
S':'
asbag57
(g78
g59
NtRp387
(dp388
g62
(dp389
sg71
g374
sg64
(lp390
g57
(g58
g59
NtRp391
(dp392
g62
(dp393
g70
I3
ssg71
g387
sg64
(lp394
S''
asbasbasbag57
(g73
g59
NtRp395
(dp396
g62
(dp397
sg71
g307
sg64
(lp398
g57
(g78
g59
NtRp399
(dp400
g62
(dp401
g82
g83
ssg71
g395
sg64
(lp402
S'max-age'
p403
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
g89
g90
ssg71
g395
sg64
(lp407
S':'
asbag57
(g78
g59
NtRp408
(dp409
g62
(dp410
sg71
g395
sg64
(lp411
g57
(g58
g59
NtRp412
(dp413
g62
(dp414
g70
I3
ssg71
g408
sg64
(lp415
S''
asbasbasbag57
(g73
g59
NtRp416
(dp417
g62
(dp418
sg71
g307
sg64
(lp419
g57
(g78
g59
NtRp420
(dp421
g62
(dp422
g82
g83
ssg71
g416
sg64
(lp423
S'path'
p424
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
g89
g90
ssg71
g416
sg64
(lp428
S':'
asbag57
(g78
g59
NtRp429
(dp430
g62
(dp431
sg71
g416
sg64
(lp432
g57
(g58
g59
NtRp433
(dp434
g62
(dp435
g70
I3
ssg71
g429
sg64
(lp436
S''
asbasbasbag57
(g73
g59
NtRp437
(dp438
g62
(dp439
sg71
g307
sg64
(lp440
g57
(g78
g59
NtRp441
(dp442
g62
(dp443
g82
g83
ssg71
g437
sg64
(lp444
S'secure'
p445
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
g89
g90
ssg71
g437
sg64
(lp449
S':'
asbag57
(g78
g59
NtRp450
(dp451
g62
(dp452
sg71
g437
sg64
(lp453
g57
(g58
g59
NtRp454
(dp455
g62
(dp456
g70
I3
ssg71
g450
sg64
(lp457
S''
asbasbasbag57
(g73
g59
NtRp458
(dp459
g62
(dp460
sg71
g307
sg64
(lp461
g57
(g78
g59
NtRp462
(dp463
g62
(dp464
g82
g83
ssg71
g458
sg64
(lp465
S'version'
p466
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
g89
g90
ssg71
g458
sg64
(lp470
S':'
asbag57
(g78
g59
NtRp471
(dp472
g62
(dp473
sg71
g458
sg64
(lp474
g57
(g58
g59
NtRp475
(dp476
g62
(dp477
g70
I3
ssg71
g471
sg64
(lp478
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp479
(dp480
g62
(dp481
sg71
g281
sg64
(lp482
g57
(g78
g59
NtRp483
(dp484
g62
(dp485
g82
g83
ssg71
g479
sg64
(lp486
S'session_id_dev_bootstrap_ch'
p487
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
g89
g90
ssg71
g479
sg64
(lp491
S':'
asbag57
(g78
g59
NtRp492
(dp493
g62
(dp494
sg71
g479
sg64
(lp495
g57
(g58
g59
NtRp496
(dp497
g62
(dp498
g70
I4
ssg71
g492
sg64
(lp499
S'127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p500
ag57
(g66
g59
NtRp501
(dp502
g62
(dp503
g70
I3
ssg71
Nsg64
(lp504
g57
(g73
g59
NtRp505
(dp506
g62
(dp507
sg71
g501
sg64
(lp508
g57
(g78
g59
NtRp509
(dp510
g62
(dp511
g82
g83
ssg71
g505
sg64
(lp512
g319
asbag57
(g78
g59
NtRp513
(dp514
g62
(dp515
g89
g90
ssg71
g505
sg64
(lp516
S':'
asbag57
(g78
g59
NtRp517
(dp518
g62
(dp519
sg71
g505
sg64
(lp520
g57
(g58
g59
NtRp521
(dp522
g62
(dp523
g70
I3
ssg71
g517
sg64
(lp524
S''
asbasbasbag57
(g73
g59
NtRp525
(dp526
g62
(dp527
sg71
g501
sg64
(lp528
g57
(g78
g59
NtRp529
(dp530
g62
(dp531
g82
g83
ssg71
g525
sg64
(lp532
g340
asbag57
(g78
g59
NtRp533
(dp534
g62
(dp535
g89
g90
ssg71
g525
sg64
(lp536
S':'
asbag57
(g78
g59
NtRp537
(dp538
g62
(dp539
sg71
g525
sg64
(lp540
g57
(g58
g59
NtRp541
(dp542
g62
(dp543
g70
I3
ssg71
g537
sg64
(lp544
S''
asbasbasbag57
(g73
g59
NtRp545
(dp546
g62
(dp547
sg71
g501
sg64
(lp548
g57
(g78
g59
NtRp549
(dp550
g62
(dp551
g82
g83
ssg71
g545
sg64
(lp552
g361
asbag57
(g78
g59
NtRp553
(dp554
g62
(dp555
g89
g90
ssg71
g545
sg64
(lp556
S':'
asbag57
(g78
g59
NtRp557
(dp558
g62
(dp559
sg71
g545
sg64
(lp560
g57
(g58
g59
NtRp561
(dp562
g62
(dp563
g70
I3
ssg71
g557
sg64
(lp564
S''
asbasbasbag57
(g73
g59
NtRp565
(dp566
g62
(dp567
sg71
g501
sg64
(lp568
g57
(g78
g59
NtRp569
(dp570
g62
(dp571
g82
g83
ssg71
g565
sg64
(lp572
g382
asbag57
(g78
g59
NtRp573
(dp574
g62
(dp575
g89
g90
ssg71
g565
sg64
(lp576
S':'
asbag57
(g78
g59
NtRp577
(dp578
g62
(dp579
sg71
g565
sg64
(lp580
g57
(g58
g59
NtRp581
(dp582
g62
(dp583
g70
I3
ssg71
g577
sg64
(lp584
S''
asbasbasbag57
(g73
g59
NtRp585
(dp586
g62
(dp587
sg71
g501
sg64
(lp588
g57
(g78
g59
NtRp589
(dp590
g62
(dp591
g82
g83
ssg71
g585
sg64
(lp592
g403
asbag57
(g78
g59
NtRp593
(dp594
g62
(dp595
g89
g90
ssg71
g585
sg64
(lp596
S':'
asbag57
(g78
g59
NtRp597
(dp598
g62
(dp599
sg71
g585
sg64
(lp600
g57
(g58
g59
NtRp601
(dp602
g62
(dp603
g70
I3
ssg71
g597
sg64
(lp604
S''
asbasbasbag57
(g73
g59
NtRp605
(dp606
g62
(dp607
sg71
g501
sg64
(lp608
g57
(g78
g59
NtRp609
(dp610
g62
(dp611
g82
g83
ssg71
g605
sg64
(lp612
g424
asbag57
(g78
g59
NtRp613
(dp614
g62
(dp615
g89
g90
ssg71
g605
sg64
(lp616
S':'
asbag57
(g78
g59
NtRp617
(dp618
g62
(dp619
sg71
g605
sg64
(lp620
g57
(g58
g59
NtRp621
(dp622
g62
(dp623
g70
I3
ssg71
g617
sg64
(lp624
S''
asbasbasbag57
(g73
g59
NtRp625
(dp626
g62
(dp627
sg71
g501
sg64
(lp628
g57
(g78
g59
NtRp629
(dp630
g62
(dp631
g82
g83
ssg71
g625
sg64
(lp632
g445
asbag57
(g78
g59
NtRp633
(dp634
g62
(dp635
g89
g90
ssg71
g625
sg64
(lp636
S':'
asbag57
(g78
g59
NtRp637
(dp638
g62
(dp639
sg71
g625
sg64
(lp640
g57
(g58
g59
NtRp641
(dp642
g62
(dp643
g70
I3
ssg71
g637
sg64
(lp644
S''
asbasbasbag57
(g73
g59
NtRp645
(dp646
g62
(dp647
sg71
g501
sg64
(lp648
g57
(g78
g59
NtRp649
(dp650
g62
(dp651
g82
g83
ssg71
g645
sg64
(lp652
g466
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
g89
g90
ssg71
g645
sg64
(lp656
S':'
asbag57
(g78
g59
NtRp657
(dp658
g62
(dp659
sg71
g645
sg64
(lp660
g57
(g58
g59
NtRp661
(dp662
g62
(dp663
g70
I3
ssg71
g657
sg64
(lp664
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp665
(dp666
g62
(dp667
sg71
g67
sg64
(lp668
g57
(g78
g59
NtRp669
(dp670
g62
(dp671
g82
g83
ssg71
g665
sg64
(lp672
S'env'
p673
asbag57
(g78
g59
NtRp674
(dp675
g62
(dp676
g89
g90
ssg71
g665
sg64
(lp677
S':'
asbag57
(g78
g59
NtRp678
(dp679
g62
(dp680
sg71
g665
sg64
(lp681
g57
(g58
g59
NtRp682
(dp683
g62
(dp684
g70
I5
ssg71
g678
sg64
(lp685
g57
(g66
g59
NtRp686
(dp687
g62
(dp688
g70
I4
ssg71
Nsg64
(lp689
g57
(g73
g59
NtRp690
(dp691
g62
(dp692
sg71
g686
sg64
(lp693
g57
(g78
g59
NtRp694
(dp695
g62
(dp696
g82
g83
ssg71
g690
sg64
(lp697
S'app_folders'
p698
asbag57
(g78
g59
NtRp699
(dp700
g62
(dp701
g89
g90
ssg71
g690
sg64
(lp702
S':'
asbag57
(g78
g59
NtRp703
(dp704
g62
(dp705
sg71
g690
sg64
(lp706
g57
(g58
g59
NtRp707
(dp708
g62
(dp709
g70
I4
ssg71
g703
sg64
(lp710
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p711
asbasbasbag57
(g73
g59
NtRp712
(dp713
g62
(dp714
sg71
g686
sg64
(lp715
g57
(g78
g59
NtRp716
(dp717
g62
(dp718
g82
g83
ssg71
g712
sg64
(lp719
S'applications_parent'
p720
asbag57
(g78
g59
NtRp721
(dp722
g62
(dp723
g89
g90
ssg71
g712
sg64
(lp724
S':'
asbag57
(g78
g59
NtRp725
(dp726
g62
(dp727
sg71
g712
sg64
(lp728
g57
(g58
g59
NtRp729
(dp730
g62
(dp731
g70
I4
ssg71
g725
sg64
(lp732
S'/home/anil/Downloads/web2py'
p733
asbasbasbag57
(g73
g59
NtRp734
(dp735
g62
(dp736
sg71
g686
sg64
(lp737
g57
(g78
g59
NtRp738
(dp739
g62
(dp740
g82
g83
ssg71
g734
sg64
(lp741
S'cmd_args'
p742
asbag57
(g78
g59
NtRp743
(dp744
g62
(dp745
g89
g90
ssg71
g734
sg64
(lp746
S':'
asbag57
(g78
g59
NtRp747
(dp748
g62
(dp749
sg71
g734
sg64
(lp750
g57
(g58
g59
NtRp751
(dp752
g62
(dp753
g70
I4
ssg71
g747
sg64
(lp754
g57
(g66
g59
NtRp755
(dp756
g62
(dp757
g70
I3
ssg71
Nsg64
(lp758
sbasbasbasbag57
(g73
g59
NtRp759
(dp760
g62
(dp761
sg71
g686
sg64
(lp762
g57
(g78
g59
NtRp763
(dp764
g62
(dp765
g82
g83
ssg71
g759
sg64
(lp766
S'cmd_options'
p767
asbag57
(g78
g59
NtRp768
(dp769
g62
(dp770
g89
g90
ssg71
g759
sg64
(lp771
S':'
asbag57
(g78
g59
NtRp772
(dp773
g62
(dp774
sg71
g759
sg64
(lp775
g57
(g58
g59
NtRp776
(dp777
g62
(dp778
g70
I4
ssg71
g772
sg64
(lp779
S"<Values at 0xa513c6c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p780
asbasbasbag57
(g73
g59
NtRp781
(dp782
g62
(dp783
sg71
g686
sg64
(lp784
g57
(g78
g59
NtRp785
(dp786
g62
(dp787
g82
g83
ssg71
g781
sg64
(lp788
S'db_sessions'
p789
asbag57
(g78
g59
NtRp790
(dp791
g62
(dp792
g89
g90
ssg71
g781
sg64
(lp793
S':'
asbag57
(g78
g59
NtRp794
(dp795
g62
(dp796
sg71
g781
sg64
(lp797
g57
(g58
g59
NtRp798
(dp799
g62
(dp800
g70
I4
ssg71
g794
sg64
(lp801
S'set([])'
p802
asbasbasbag57
(g73
g59
NtRp803
(dp804
g62
(dp805
sg71
g686
sg64
(lp806
g57
(g78
g59
NtRp807
(dp808
g62
(dp809
g82
g83
ssg71
g803
sg64
(lp810
S'debugging'
p811
asbag57
(g78
g59
NtRp812
(dp813
g62
(dp814
g89
g90
ssg71
g803
sg64
(lp815
S':'
asbag57
(g78
g59
NtRp816
(dp817
g62
(dp818
sg71
g803
sg64
(lp819
g57
(g58
g59
NtRp820
(dp821
g62
(dp822
g70
I4
ssg71
g816
sg64
(lp823
g100
asbasbasbag57
(g73
g59
NtRp824
(dp825
g62
(dp826
sg71
g686
sg64
(lp827
g57
(g78
g59
NtRp828
(dp829
g62
(dp830
g82
g83
ssg71
g824
sg64
(lp831
S'gluon_parent'
p832
asbag57
(g78
g59
NtRp833
(dp834
g62
(dp835
g89
g90
ssg71
g824
sg64
(lp836
S':'
asbag57
(g78
g59
NtRp837
(dp838
g62
(dp839
sg71
g824
sg64
(lp840
g57
(g58
g59
NtRp841
(dp842
g62
(dp843
g70
I4
ssg71
g837
sg64
(lp844
S'/home/anil/Downloads/web2py'
p845
asbasbasbag57
(g73
g59
NtRp846
(dp847
g62
(dp848
sg71
g686
sg64
(lp849
g57
(g78
g59
NtRp850
(dp851
g62
(dp852
g82
g83
ssg71
g846
sg64
(lp853
S'http_accept'
p854
asbag57
(g78
g59
NtRp855
(dp856
g62
(dp857
g89
g90
ssg71
g846
sg64
(lp858
S':'
asbag57
(g78
g59
NtRp859
(dp860
g62
(dp861
sg71
g846
sg64
(lp862
g57
(g58
g59
NtRp863
(dp864
g62
(dp865
g70
I4
ssg71
g859
sg64
(lp866
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p867
asbasbasbag57
(g73
g59
NtRp868
(dp869
g62
(dp870
sg71
g686
sg64
(lp871
g57
(g78
g59
NtRp872
(dp873
g62
(dp874
g82
g83
ssg71
g868
sg64
(lp875
S'http_accept_charset'
p876
asbag57
(g78
g59
NtRp877
(dp878
g62
(dp879
g89
g90
ssg71
g868
sg64
(lp880
S':'
asbag57
(g78
g59
NtRp881
(dp882
g62
(dp883
sg71
g868
sg64
(lp884
g57
(g58
g59
NtRp885
(dp886
g62
(dp887
g70
I4
ssg71
g881
sg64
(lp888
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p889
asbasbasbag57
(g73
g59
NtRp890
(dp891
g62
(dp892
sg71
g686
sg64
(lp893
g57
(g78
g59
NtRp894
(dp895
g62
(dp896
g82
g83
ssg71
g890
sg64
(lp897
S'http_accept_encoding'
p898
asbag57
(g78
g59
NtRp899
(dp900
g62
(dp901
g89
g90
ssg71
g890
sg64
(lp902
S':'
asbag57
(g78
g59
NtRp903
(dp904
g62
(dp905
sg71
g890
sg64
(lp906
g57
(g58
g59
NtRp907
(dp908
g62
(dp909
g70
I4
ssg71
g903
sg64
(lp910
S'gzip,deflate,sdch'
p911
asbasbasbag57
(g73
g59
NtRp912
(dp913
g62
(dp914
sg71
g686
sg64
(lp915
g57
(g78
g59
NtRp916
(dp917
g62
(dp918
g82
g83
ssg71
g912
sg64
(lp919
S'http_accept_language'
p920
asbag57
(g78
g59
NtRp921
(dp922
g62
(dp923
g89
g90
ssg71
g912
sg64
(lp924
S':'
asbag57
(g78
g59
NtRp925
(dp926
g62
(dp927
sg71
g912
sg64
(lp928
g57
(g58
g59
NtRp929
(dp930
g62
(dp931
g70
I4
ssg71
g925
sg64
(lp932
S'en-US,en;q=0.8'
p933
asbasbasbag57
(g73
g59
NtRp934
(dp935
g62
(dp936
sg71
g686
sg64
(lp937
g57
(g78
g59
NtRp938
(dp939
g62
(dp940
g82
g83
ssg71
g934
sg64
(lp941
S'http_connection'
p942
asbag57
(g78
g59
NtRp943
(dp944
g62
(dp945
g89
g90
ssg71
g934
sg64
(lp946
S':'
asbag57
(g78
g59
NtRp947
(dp948
g62
(dp949
sg71
g934
sg64
(lp950
g57
(g58
g59
NtRp951
(dp952
g62
(dp953
g70
I4
ssg71
g947
sg64
(lp954
S'keep-alive'
p955
asbasbasbag57
(g73
g59
NtRp956
(dp957
g62
(dp958
sg71
g686
sg64
(lp959
g57
(g78
g59
NtRp960
(dp961
g62
(dp962
g82
g83
ssg71
g956
sg64
(lp963
S'http_cookie'
p964
asbag57
(g78
g59
NtRp965
(dp966
g62
(dp967
g89
g90
ssg71
g956
sg64
(lp968
S':'
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
sg71
g956
sg64
(lp972
g57
(g58
g59
NtRp973
(dp974
g62
(dp975
g70
I4
ssg71
g969
sg64
(lp976
S'session_id_admin=127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3; session_id_dev_bootstrap_ch=127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p977
asbasbasbag57
(g73
g59
NtRp978
(dp979
g62
(dp980
sg71
g686
sg64
(lp981
g57
(g78
g59
NtRp982
(dp983
g62
(dp984
g82
g83
ssg71
g978
sg64
(lp985
S'http_host'
p986
asbag57
(g78
g59
NtRp987
(dp988
g62
(dp989
g89
g90
ssg71
g978
sg64
(lp990
S':'
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
sg71
g978
sg64
(lp994
g57
(g58
g59
NtRp995
(dp996
g62
(dp997
g70
I4
ssg71
g991
sg64
(lp998
S'127.0.0.1:8000'
p999
asbasbasbag57
(g73
g59
NtRp1000
(dp1001
g62
(dp1002
sg71
g686
sg64
(lp1003
g57
(g78
g59
NtRp1004
(dp1005
g62
(dp1006
g82
g83
ssg71
g1000
sg64
(lp1007
S'http_referer'
p1008
asbag57
(g78
g59
NtRp1009
(dp1010
g62
(dp1011
g89
g90
ssg71
g1000
sg64
(lp1012
S':'
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
sg71
g1000
sg64
(lp1016
g57
(g58
g59
NtRp1017
(dp1018
g62
(dp1019
g70
I4
ssg71
g1013
sg64
(lp1020
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/project_viewer/5'
p1021
asbasbasbag57
(g73
g59
NtRp1022
(dp1023
g62
(dp1024
sg71
g686
sg64
(lp1025
g57
(g78
g59
NtRp1026
(dp1027
g62
(dp1028
g82
g83
ssg71
g1022
sg64
(lp1029
S'http_user_agent'
p1030
asbag57
(g78
g59
NtRp1031
(dp1032
g62
(dp1033
g89
g90
ssg71
g1022
sg64
(lp1034
S':'
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
sg71
g1022
sg64
(lp1038
g57
(g58
g59
NtRp1039
(dp1040
g62
(dp1041
g70
I4
ssg71
g1035
sg64
(lp1042
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1043
asbasbasbag57
(g73
g59
NtRp1044
(dp1045
g62
(dp1046
sg71
g686
sg64
(lp1047
g57
(g78
g59
NtRp1048
(dp1049
g62
(dp1050
g82
g83
ssg71
g1044
sg64
(lp1051
S'is_jython'
p1052
asbag57
(g78
g59
NtRp1053
(dp1054
g62
(dp1055
g89
g90
ssg71
g1044
sg64
(lp1056
S':'
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
sg71
g1044
sg64
(lp1060
g57
(g58
g59
NtRp1061
(dp1062
g62
(dp1063
g70
I4
ssg71
g1057
sg64
(lp1064
g100
asbasbasbag57
(g73
g59
NtRp1065
(dp1066
g62
(dp1067
sg71
g686
sg64
(lp1068
g57
(g78
g59
NtRp1069
(dp1070
g62
(dp1071
g82
g83
ssg71
g1065
sg64
(lp1072
S'is_pypy'
p1073
asbag57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g89
g90
ssg71
g1065
sg64
(lp1077
S':'
asbag57
(g78
g59
NtRp1078
(dp1079
g62
(dp1080
sg71
g1065
sg64
(lp1081
g57
(g58
g59
NtRp1082
(dp1083
g62
(dp1084
g70
I4
ssg71
g1078
sg64
(lp1085
g100
asbasbasbag57
(g73
g59
NtRp1086
(dp1087
g62
(dp1088
sg71
g686
sg64
(lp1089
g57
(g78
g59
NtRp1090
(dp1091
g62
(dp1092
g82
g83
ssg71
g1086
sg64
(lp1093
S'local_hosts'
p1094
asbag57
(g78
g59
NtRp1095
(dp1096
g62
(dp1097
g89
g90
ssg71
g1086
sg64
(lp1098
S':'
asbag57
(g78
g59
NtRp1099
(dp1100
g62
(dp1101
sg71
g1086
sg64
(lp1102
g57
(g58
g59
NtRp1103
(dp1104
g62
(dp1105
g70
I4
ssg71
g1099
sg64
(lp1106
g57
(g66
g59
NtRp1107
(dp1108
g62
(dp1109
g70
I3
ssg71
Nsg64
(lp1110
g57
(g73
g59
NtRp1111
(dp1112
g62
(dp1113
sg71
g1107
sg64
(lp1114
g57
(g78
g59
NtRp1115
(dp1116
g62
(dp1117
sg71
g1111
sg64
(lp1118
g57
(g58
g59
NtRp1119
(dp1120
g62
(dp1121
g70
I3
ssg71
g1115
sg64
(lp1122
S'::1'
p1123
asbasbasbag57
(g73
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g1107
sg64
(lp1127
g57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
sg71
g1124
sg64
(lp1131
g57
(g58
g59
NtRp1132
(dp1133
g62
(dp1134
g70
I3
ssg71
g1128
sg64
(lp1135
S'127.0.1.1'
p1136
asbasbasbag57
(g73
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1107
sg64
(lp1140
g57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
sg71
g1137
sg64
(lp1144
g57
(g58
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I3
ssg71
g1141
sg64
(lp1148
S'::ffff:127.0.0.1'
p1149
asbasbasbag57
(g73
g59
NtRp1150
(dp1151
g62
(dp1152
sg71
g1107
sg64
(lp1153
g57
(g78
g59
NtRp1154
(dp1155
g62
(dp1156
sg71
g1150
sg64
(lp1157
g57
(g58
g59
NtRp1158
(dp1159
g62
(dp1160
g70
I3
ssg71
g1154
sg64
(lp1161
S'127.0.0.1'
p1162
asbasbasbag57
(g73
g59
NtRp1163
(dp1164
g62
(dp1165
sg71
g1107
sg64
(lp1166
g57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
sg71
g1163
sg64
(lp1170
g57
(g58
g59
NtRp1171
(dp1172
g62
(dp1173
g70
I3
ssg71
g1167
sg64
(lp1174
S'anil-Inspiron-1525'
p1175
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1176
(dp1177
g62
(dp1178
sg71
g686
sg64
(lp1179
g57
(g78
g59
NtRp1180
(dp1181
g62
(dp1182
g82
g83
ssg71
g1176
sg64
(lp1183
S'path_info'
p1184
asbag57
(g78
g59
NtRp1185
(dp1186
g62
(dp1187
g89
g90
ssg71
g1176
sg64
(lp1188
S':'
asbag57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
sg71
g1176
sg64
(lp1192
g57
(g58
g59
NtRp1193
(dp1194
g62
(dp1195
g70
I4
ssg71
g1189
sg64
(lp1196
S'/DEV_bootstrap_ch/default/ajx_publish/publish/5'
p1197
asbasbasbag57
(g73
g59
NtRp1198
(dp1199
g62
(dp1200
sg71
g686
sg64
(lp1201
g57
(g78
g59
NtRp1202
(dp1203
g62
(dp1204
g82
g83
ssg71
g1198
sg64
(lp1205
S'query_string'
p1206
asbag57
(g78
g59
NtRp1207
(dp1208
g62
(dp1209
g89
g90
ssg71
g1198
sg64
(lp1210
S':'
asbag57
(g78
g59
NtRp1211
(dp1212
g62
(dp1213
sg71
g1198
sg64
(lp1214
g57
(g58
g59
NtRp1215
(dp1216
g62
(dp1217
g70
I4
ssg71
g1211
sg64
(lp1218
S''
asbasbasbag57
(g73
g59
NtRp1219
(dp1220
g62
(dp1221
sg71
g686
sg64
(lp1222
g57
(g78
g59
NtRp1223
(dp1224
g62
(dp1225
g82
g83
ssg71
g1219
sg64
(lp1226
S'remote_addr'
p1227
asbag57
(g78
g59
NtRp1228
(dp1229
g62
(dp1230
g89
g90
ssg71
g1219
sg64
(lp1231
S':'
asbag57
(g78
g59
NtRp1232
(dp1233
g62
(dp1234
sg71
g1219
sg64
(lp1235
g57
(g58
g59
NtRp1236
(dp1237
g62
(dp1238
g70
I4
ssg71
g1232
sg64
(lp1239
g237
asbasbasbag57
(g73
g59
NtRp1240
(dp1241
g62
(dp1242
sg71
g686
sg64
(lp1243
g57
(g78
g59
NtRp1244
(dp1245
g62
(dp1246
g82
g83
ssg71
g1240
sg64
(lp1247
S'remote_port'
p1248
asbag57
(g78
g59
NtRp1249
(dp1250
g62
(dp1251
g89
g90
ssg71
g1240
sg64
(lp1252
S':'
asbag57
(g78
g59
NtRp1253
(dp1254
g62
(dp1255
sg71
g1240
sg64
(lp1256
g57
(g58
g59
NtRp1257
(dp1258
g62
(dp1259
g70
I4
ssg71
g1253
sg64
(lp1260
S'57801'
p1261
asbasbasbag57
(g73
g59
NtRp1262
(dp1263
g62
(dp1264
sg71
g686
sg64
(lp1265
g57
(g78
g59
NtRp1266
(dp1267
g62
(dp1268
g82
g83
ssg71
g1262
sg64
(lp1269
S'request_method'
p1270
asbag57
(g78
g59
NtRp1271
(dp1272
g62
(dp1273
g89
g90
ssg71
g1262
sg64
(lp1274
S':'
asbag57
(g78
g59
NtRp1275
(dp1276
g62
(dp1277
sg71
g1262
sg64
(lp1278
g57
(g58
g59
NtRp1279
(dp1280
g62
(dp1281
g70
I4
ssg71
g1275
sg64
(lp1282
S'GET'
p1283
asbasbasbag57
(g73
g59
NtRp1284
(dp1285
g62
(dp1286
sg71
g686
sg64
(lp1287
g57
(g78
g59
NtRp1288
(dp1289
g62
(dp1290
g82
g83
ssg71
g1284
sg64
(lp1291
S'request_uri'
p1292
asbag57
(g78
g59
NtRp1293
(dp1294
g62
(dp1295
g89
g90
ssg71
g1284
sg64
(lp1296
S':'
asbag57
(g78
g59
NtRp1297
(dp1298
g62
(dp1299
sg71
g1284
sg64
(lp1300
g57
(g58
g59
NtRp1301
(dp1302
g62
(dp1303
g70
I4
ssg71
g1297
sg64
(lp1304
g1197
asbasbasbag57
(g73
g59
NtRp1305
(dp1306
g62
(dp1307
sg71
g686
sg64
(lp1308
g57
(g78
g59
NtRp1309
(dp1310
g62
(dp1311
g82
g83
ssg71
g1305
sg64
(lp1312
S'script_name'
p1313
asbag57
(g78
g59
NtRp1314
(dp1315
g62
(dp1316
g89
g90
ssg71
g1305
sg64
(lp1317
S':'
asbag57
(g78
g59
NtRp1318
(dp1319
g62
(dp1320
sg71
g1305
sg64
(lp1321
g57
(g58
g59
NtRp1322
(dp1323
g62
(dp1324
g70
I4
ssg71
g1318
sg64
(lp1325
S''
asbasbasbag57
(g73
g59
NtRp1326
(dp1327
g62
(dp1328
sg71
g686
sg64
(lp1329
g57
(g78
g59
NtRp1330
(dp1331
g62
(dp1332
g82
g83
ssg71
g1326
sg64
(lp1333
S'server_name'
p1334
asbag57
(g78
g59
NtRp1335
(dp1336
g62
(dp1337
g89
g90
ssg71
g1326
sg64
(lp1338
S':'
asbag57
(g78
g59
NtRp1339
(dp1340
g62
(dp1341
sg71
g1326
sg64
(lp1342
g57
(g58
g59
NtRp1343
(dp1344
g62
(dp1345
g70
I4
ssg71
g1339
sg64
(lp1346
S'anil-Inspiron-1525'
p1347
asbasbasbag57
(g73
g59
NtRp1348
(dp1349
g62
(dp1350
sg71
g686
sg64
(lp1351
g57
(g78
g59
NtRp1352
(dp1353
g62
(dp1354
g82
g83
ssg71
g1348
sg64
(lp1355
S'server_port'
p1356
asbag57
(g78
g59
NtRp1357
(dp1358
g62
(dp1359
g89
g90
ssg71
g1348
sg64
(lp1360
S':'
asbag57
(g78
g59
NtRp1361
(dp1362
g62
(dp1363
sg71
g1348
sg64
(lp1364
g57
(g58
g59
NtRp1365
(dp1366
g62
(dp1367
g70
I4
ssg71
g1361
sg64
(lp1368
S'8000'
p1369
asbasbasbag57
(g73
g59
NtRp1370
(dp1371
g62
(dp1372
sg71
g686
sg64
(lp1373
g57
(g78
g59
NtRp1374
(dp1375
g62
(dp1376
g82
g83
ssg71
g1370
sg64
(lp1377
S'server_protocol'
p1378
asbag57
(g78
g59
NtRp1379
(dp1380
g62
(dp1381
g89
g90
ssg71
g1370
sg64
(lp1382
S':'
asbag57
(g78
g59
NtRp1383
(dp1384
g62
(dp1385
sg71
g1370
sg64
(lp1386
g57
(g58
g59
NtRp1387
(dp1388
g62
(dp1389
g70
I4
ssg71
g1383
sg64
(lp1390
S'HTTP/1.1'
p1391
asbasbasbag57
(g73
g59
NtRp1392
(dp1393
g62
(dp1394
sg71
g686
sg64
(lp1395
g57
(g78
g59
NtRp1396
(dp1397
g62
(dp1398
g82
g83
ssg71
g1392
sg64
(lp1399
S'server_software'
p1400
asbag57
(g78
g59
NtRp1401
(dp1402
g62
(dp1403
g89
g90
ssg71
g1392
sg64
(lp1404
S':'
asbag57
(g78
g59
NtRp1405
(dp1406
g62
(dp1407
sg71
g1392
sg64
(lp1408
g57
(g58
g59
NtRp1409
(dp1410
g62
(dp1411
g70
I4
ssg71
g1405
sg64
(lp1412
S'Rocket 1.2.6'
p1413
asbasbasbag57
(g73
g59
NtRp1414
(dp1415
g62
(dp1416
sg71
g686
sg64
(lp1417
g57
(g78
g59
NtRp1418
(dp1419
g62
(dp1420
g82
g83
ssg71
g1414
sg64
(lp1421
S'web2py_path'
p1422
asbag57
(g78
g59
NtRp1423
(dp1424
g62
(dp1425
g89
g90
ssg71
g1414
sg64
(lp1426
S':'
asbag57
(g78
g59
NtRp1427
(dp1428
g62
(dp1429
sg71
g1414
sg64
(lp1430
g57
(g58
g59
NtRp1431
(dp1432
g62
(dp1433
g70
I4
ssg71
g1427
sg64
(lp1434
g733
asbasbasbag57
(g73
g59
NtRp1435
(dp1436
g62
(dp1437
sg71
g686
sg64
(lp1438
g57
(g78
g59
NtRp1439
(dp1440
g62
(dp1441
g82
g83
ssg71
g1435
sg64
(lp1442
S'web2py_version'
p1443
asbag57
(g78
g59
NtRp1444
(dp1445
g62
(dp1446
g89
g90
ssg71
g1435
sg64
(lp1447
S':'
asbag57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
sg71
g1435
sg64
(lp1451
g57
(g58
g59
NtRp1452
(dp1453
g62
(dp1454
g70
I4
ssg71
g1448
sg64
(lp1455
g57
(g66
g59
NtRp1456
(dp1457
g62
(dp1458
g70
I3
ssg71
Nsg64
(lp1459
g57
(g73
g59
NtRp1460
(dp1461
g62
(dp1462
sg71
g1456
sg64
(lp1463
g57
(g78
g59
NtRp1464
(dp1465
g62
(dp1466
sg71
g1460
sg64
(lp1467
g57
(g58
g59
NtRp1468
(dp1469
g62
(dp1470
g70
I3
ssg71
g1464
sg64
(lp1471
S'2'
asbasbasbag57
(g73
g59
NtRp1472
(dp1473
g62
(dp1474
sg71
g1456
sg64
(lp1475
g57
(g78
g59
NtRp1476
(dp1477
g62
(dp1478
sg71
g1472
sg64
(lp1479
g57
(g58
g59
NtRp1480
(dp1481
g62
(dp1482
g70
I3
ssg71
g1476
sg64
(lp1483
S'3'
asbasbasbag57
(g73
g59
NtRp1484
(dp1485
g62
(dp1486
sg71
g1456
sg64
(lp1487
g57
(g78
g59
NtRp1488
(dp1489
g62
(dp1490
sg71
g1484
sg64
(lp1491
g57
(g58
g59
NtRp1492
(dp1493
g62
(dp1494
g70
I3
ssg71
g1488
sg64
(lp1495
S'2'
asbasbasbag57
(g73
g59
NtRp1496
(dp1497
g62
(dp1498
sg71
g1456
sg64
(lp1499
g57
(g78
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1496
sg64
(lp1503
g57
(g58
g59
NtRp1504
(dp1505
g62
(dp1506
g70
I3
ssg71
g1500
sg64
(lp1507
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1508
asbasbasbag57
(g73
g59
NtRp1509
(dp1510
g62
(dp1511
sg71
g1456
sg64
(lp1512
g57
(g78
g59
NtRp1513
(dp1514
g62
(dp1515
sg71
g1509
sg64
(lp1516
g57
(g58
g59
NtRp1517
(dp1518
g62
(dp1519
g70
I3
ssg71
g1513
sg64
(lp1520
S'stable'
p1521
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g686
sg64
(lp1525
g57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
g82
g83
ssg71
g1522
sg64
(lp1529
S'wsgi_errors'
p1530
asbag57
(g78
g59
NtRp1531
(dp1532
g62
(dp1533
g89
g90
ssg71
g1522
sg64
(lp1534
S':'
asbag57
(g78
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g1522
sg64
(lp1538
g57
(g58
g59
NtRp1539
(dp1540
g62
(dp1541
g70
I4
ssg71
g1535
sg64
(lp1542
S"<open file '<stderr>', mode 'w' at 0xb72e90d0>"
p1543
asbasbasbag57
(g73
g59
NtRp1544
(dp1545
g62
(dp1546
sg71
g686
sg64
(lp1547
g57
(g78
g59
NtRp1548
(dp1549
g62
(dp1550
g82
g83
ssg71
g1544
sg64
(lp1551
S'wsgi_file_wrapper'
p1552
asbag57
(g78
g59
NtRp1553
(dp1554
g62
(dp1555
g89
g90
ssg71
g1544
sg64
(lp1556
S':'
asbag57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
sg71
g1544
sg64
(lp1560
g57
(g58
g59
NtRp1561
(dp1562
g62
(dp1563
g70
I4
ssg71
g1557
sg64
(lp1564
S'<class wsgiref.util.FileWrapper at 0xa49cb9c>'
p1565
asbasbasbag57
(g73
g59
NtRp1566
(dp1567
g62
(dp1568
sg71
g686
sg64
(lp1569
g57
(g78
g59
NtRp1570
(dp1571
g62
(dp1572
g82
g83
ssg71
g1566
sg64
(lp1573
S'wsgi_input'
p1574
asbag57
(g78
g59
NtRp1575
(dp1576
g62
(dp1577
g89
g90
ssg71
g1566
sg64
(lp1578
S':'
asbag57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
sg71
g1566
sg64
(lp1582
g57
(g58
g59
NtRp1583
(dp1584
g62
(dp1585
g70
I4
ssg71
g1579
sg64
(lp1586
S'<socket._fileobject object at 0xaf795cac>'
p1587
asbasbasbag57
(g73
g59
NtRp1588
(dp1589
g62
(dp1590
sg71
g686
sg64
(lp1591
g57
(g78
g59
NtRp1592
(dp1593
g62
(dp1594
g82
g83
ssg71
g1588
sg64
(lp1595
S'wsgi_multiprocess'
p1596
asbag57
(g78
g59
NtRp1597
(dp1598
g62
(dp1599
g89
g90
ssg71
g1588
sg64
(lp1600
S':'
asbag57
(g78
g59
NtRp1601
(dp1602
g62
(dp1603
sg71
g1588
sg64
(lp1604
g57
(g58
g59
NtRp1605
(dp1606
g62
(dp1607
g70
I4
ssg71
g1601
sg64
(lp1608
g100
asbasbasbag57
(g73
g59
NtRp1609
(dp1610
g62
(dp1611
sg71
g686
sg64
(lp1612
g57
(g78
g59
NtRp1613
(dp1614
g62
(dp1615
g82
g83
ssg71
g1609
sg64
(lp1616
S'wsgi_multithread'
p1617
asbag57
(g78
g59
NtRp1618
(dp1619
g62
(dp1620
g89
g90
ssg71
g1609
sg64
(lp1621
S':'
asbag57
(g78
g59
NtRp1622
(dp1623
g62
(dp1624
sg71
g1609
sg64
(lp1625
g57
(g58
g59
NtRp1626
(dp1627
g62
(dp1628
g70
I4
ssg71
g1622
sg64
(lp1629
S'True'
p1630
asbasbasbag57
(g73
g59
NtRp1631
(dp1632
g62
(dp1633
sg71
g686
sg64
(lp1634
g57
(g78
g59
NtRp1635
(dp1636
g62
(dp1637
g82
g83
ssg71
g1631
sg64
(lp1638
S'wsgi_run_once'
p1639
asbag57
(g78
g59
NtRp1640
(dp1641
g62
(dp1642
g89
g90
ssg71
g1631
sg64
(lp1643
S':'
asbag57
(g78
g59
NtRp1644
(dp1645
g62
(dp1646
sg71
g1631
sg64
(lp1647
g57
(g58
g59
NtRp1648
(dp1649
g62
(dp1650
g70
I4
ssg71
g1644
sg64
(lp1651
g100
asbasbasbag57
(g73
g59
NtRp1652
(dp1653
g62
(dp1654
sg71
g686
sg64
(lp1655
g57
(g78
g59
NtRp1656
(dp1657
g62
(dp1658
g82
g83
ssg71
g1652
sg64
(lp1659
S'wsgi_url_scheme'
p1660
asbag57
(g78
g59
NtRp1661
(dp1662
g62
(dp1663
g89
g90
ssg71
g1652
sg64
(lp1664
S':'
asbag57
(g78
g59
NtRp1665
(dp1666
g62
(dp1667
sg71
g1652
sg64
(lp1668
g57
(g58
g59
NtRp1669
(dp1670
g62
(dp1671
g70
I4
ssg71
g1665
sg64
(lp1672
S'http'
p1673
asbasbasbag57
(g73
g59
NtRp1674
(dp1675
g62
(dp1676
sg71
g686
sg64
(lp1677
g57
(g78
g59
NtRp1678
(dp1679
g62
(dp1680
g82
g83
ssg71
g1674
sg64
(lp1681
S'wsgi_version'
p1682
asbag57
(g78
g59
NtRp1683
(dp1684
g62
(dp1685
g89
g90
ssg71
g1674
sg64
(lp1686
S':'
asbag57
(g78
g59
NtRp1687
(dp1688
g62
(dp1689
sg71
g1674
sg64
(lp1690
g57
(g58
g59
NtRp1691
(dp1692
g62
(dp1693
g70
I4
ssg71
g1687
sg64
(lp1694
g57
(g66
g59
NtRp1695
(dp1696
g62
(dp1697
g70
I3
ssg71
Nsg64
(lp1698
g57
(g73
g59
NtRp1699
(dp1700
g62
(dp1701
sg71
g1695
sg64
(lp1702
g57
(g78
g59
NtRp1703
(dp1704
g62
(dp1705
sg71
g1699
sg64
(lp1706
g57
(g58
g59
NtRp1707
(dp1708
g62
(dp1709
g70
I3
ssg71
g1703
sg64
(lp1710
S'1'
asbasbasbag57
(g73
g59
NtRp1711
(dp1712
g62
(dp1713
sg71
g1695
sg64
(lp1714
g57
(g78
g59
NtRp1715
(dp1716
g62
(dp1717
sg71
g1711
sg64
(lp1718
g57
(g58
g59
NtRp1719
(dp1720
g62
(dp1721
g70
I3
ssg71
g1715
sg64
(lp1722
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1723
(dp1724
g62
(dp1725
sg71
g67
sg64
(lp1726
g57
(g78
g59
NtRp1727
(dp1728
g62
(dp1729
g82
g83
ssg71
g1723
sg64
(lp1730
S'extension'
p1731
asbag57
(g78
g59
NtRp1732
(dp1733
g62
(dp1734
g89
g90
ssg71
g1723
sg64
(lp1735
S':'
asbag57
(g78
g59
NtRp1736
(dp1737
g62
(dp1738
sg71
g1723
sg64
(lp1739
g57
(g58
g59
NtRp1740
(dp1741
g62
(dp1742
g70
I5
ssg71
g1736
sg64
(lp1743
S'html'
p1744
asbasbasbag57
(g73
g59
NtRp1745
(dp1746
g62
(dp1747
sg71
g67
sg64
(lp1748
g57
(g78
g59
NtRp1749
(dp1750
g62
(dp1751
g82
g83
ssg71
g1745
sg64
(lp1752
S'folder'
p1753
asbag57
(g78
g59
NtRp1754
(dp1755
g62
(dp1756
g89
g90
ssg71
g1745
sg64
(lp1757
S':'
asbag57
(g78
g59
NtRp1758
(dp1759
g62
(dp1760
sg71
g1745
sg64
(lp1761
g57
(g58
g59
NtRp1762
(dp1763
g62
(dp1764
g70
I5
ssg71
g1758
sg64
(lp1765
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/'
p1766
asbasbasbag57
(g73
g59
NtRp1767
(dp1768
g62
(dp1769
sg71
g67
sg64
(lp1770
g57
(g78
g59
NtRp1771
(dp1772
g62
(dp1773
g82
g83
ssg71
g1767
sg64
(lp1774
S'function'
p1775
asbag57
(g78
g59
NtRp1776
(dp1777
g62
(dp1778
g89
g90
ssg71
g1767
sg64
(lp1779
S':'
asbag57
(g78
g59
NtRp1780
(dp1781
g62
(dp1782
sg71
g1767
sg64
(lp1783
g57
(g58
g59
NtRp1784
(dp1785
g62
(dp1786
g70
I5
ssg71
g1780
sg64
(lp1787
S'ajx_publish'
p1788
asbasbasbag57
(g73
g59
NtRp1789
(dp1790
g62
(dp1791
sg71
g67
sg64
(lp1792
g57
(g78
g59
NtRp1793
(dp1794
g62
(dp1795
g82
g83
ssg71
g1789
sg64
(lp1796
S'get_vars'
p1797
asbag57
(g78
g59
NtRp1798
(dp1799
g62
(dp1800
g89
g90
ssg71
g1789
sg64
(lp1801
S':'
asbag57
(g78
g59
NtRp1802
(dp1803
g62
(dp1804
sg71
g1789
sg64
(lp1805
g57
(g58
g59
NtRp1806
(dp1807
g62
(dp1808
g70
I5
ssg71
g1802
sg64
(lp1809
g57
(g66
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I4
ssg71
Nsg64
(lp1813
sbasbasbasbag57
(g73
g59
NtRp1814
(dp1815
g62
(dp1816
sg71
g67
sg64
(lp1817
g57
(g78
g59
NtRp1818
(dp1819
g62
(dp1820
g82
g83
ssg71
g1814
sg64
(lp1821
S'global_settings'
p1822
asbag57
(g78
g59
NtRp1823
(dp1824
g62
(dp1825
g89
g90
ssg71
g1814
sg64
(lp1826
S':'
asbag57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
sg71
g1814
sg64
(lp1830
g57
(g58
g59
NtRp1831
(dp1832
g62
(dp1833
g70
I5
ssg71
g1827
sg64
(lp1834
g57
(g66
g59
NtRp1835
(dp1836
g62
(dp1837
g70
I4
ssg71
Nsg64
(lp1838
g57
(g73
g59
NtRp1839
(dp1840
g62
(dp1841
sg71
g1835
sg64
(lp1842
g57
(g78
g59
NtRp1843
(dp1844
g62
(dp1845
g82
g83
ssg71
g1839
sg64
(lp1846
g698
asbag57
(g78
g59
NtRp1847
(dp1848
g62
(dp1849
g89
g90
ssg71
g1839
sg64
(lp1850
S':'
asbag57
(g78
g59
NtRp1851
(dp1852
g62
(dp1853
sg71
g1839
sg64
(lp1854
g57
(g58
g59
NtRp1855
(dp1856
g62
(dp1857
g70
I4
ssg71
g1851
sg64
(lp1858
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p1859
asbasbasbag57
(g73
g59
NtRp1860
(dp1861
g62
(dp1862
sg71
g1835
sg64
(lp1863
g57
(g78
g59
NtRp1864
(dp1865
g62
(dp1866
g82
g83
ssg71
g1860
sg64
(lp1867
g720
asbag57
(g78
g59
NtRp1868
(dp1869
g62
(dp1870
g89
g90
ssg71
g1860
sg64
(lp1871
S':'
asbag57
(g78
g59
NtRp1872
(dp1873
g62
(dp1874
sg71
g1860
sg64
(lp1875
g57
(g58
g59
NtRp1876
(dp1877
g62
(dp1878
g70
I4
ssg71
g1872
sg64
(lp1879
g733
asbasbasbag57
(g73
g59
NtRp1880
(dp1881
g62
(dp1882
sg71
g1835
sg64
(lp1883
g57
(g78
g59
NtRp1884
(dp1885
g62
(dp1886
g82
g83
ssg71
g1880
sg64
(lp1887
g742
asbag57
(g78
g59
NtRp1888
(dp1889
g62
(dp1890
g89
g90
ssg71
g1880
sg64
(lp1891
S':'
asbag57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g1880
sg64
(lp1895
g57
(g58
g59
NtRp1896
(dp1897
g62
(dp1898
g70
I4
ssg71
g1892
sg64
(lp1899
g57
(g66
g59
NtRp1900
(dp1901
g62
(dp1902
g70
I3
ssg71
Nsg64
(lp1903
sbasbasbasbag57
(g73
g59
NtRp1904
(dp1905
g62
(dp1906
sg71
g1835
sg64
(lp1907
g57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
g82
g83
ssg71
g1904
sg64
(lp1911
g767
asbag57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
g89
g90
ssg71
g1904
sg64
(lp1915
S':'
asbag57
(g78
g59
NtRp1916
(dp1917
g62
(dp1918
sg71
g1904
sg64
(lp1919
g57
(g58
g59
NtRp1920
(dp1921
g62
(dp1922
g70
I4
ssg71
g1916
sg64
(lp1923
S"<Values at 0xa513c6c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1924
asbasbasbag57
(g73
g59
NtRp1925
(dp1926
g62
(dp1927
sg71
g1835
sg64
(lp1928
g57
(g78
g59
NtRp1929
(dp1930
g62
(dp1931
g82
g83
ssg71
g1925
sg64
(lp1932
g789
asbag57
(g78
g59
NtRp1933
(dp1934
g62
(dp1935
g89
g90
ssg71
g1925
sg64
(lp1936
S':'
asbag57
(g78
g59
NtRp1937
(dp1938
g62
(dp1939
sg71
g1925
sg64
(lp1940
g57
(g58
g59
NtRp1941
(dp1942
g62
(dp1943
g70
I4
ssg71
g1937
sg64
(lp1944
S'set([])'
p1945
asbasbasbag57
(g73
g59
NtRp1946
(dp1947
g62
(dp1948
sg71
g1835
sg64
(lp1949
g57
(g78
g59
NtRp1950
(dp1951
g62
(dp1952
g82
g83
ssg71
g1946
sg64
(lp1953
g811
asbag57
(g78
g59
NtRp1954
(dp1955
g62
(dp1956
g89
g90
ssg71
g1946
sg64
(lp1957
S':'
asbag57
(g78
g59
NtRp1958
(dp1959
g62
(dp1960
sg71
g1946
sg64
(lp1961
g57
(g58
g59
NtRp1962
(dp1963
g62
(dp1964
g70
I4
ssg71
g1958
sg64
(lp1965
g100
asbasbasbag57
(g73
g59
NtRp1966
(dp1967
g62
(dp1968
sg71
g1835
sg64
(lp1969
g57
(g78
g59
NtRp1970
(dp1971
g62
(dp1972
g82
g83
ssg71
g1966
sg64
(lp1973
g832
asbag57
(g78
g59
NtRp1974
(dp1975
g62
(dp1976
g89
g90
ssg71
g1966
sg64
(lp1977
S':'
asbag57
(g78
g59
NtRp1978
(dp1979
g62
(dp1980
sg71
g1966
sg64
(lp1981
g57
(g58
g59
NtRp1982
(dp1983
g62
(dp1984
g70
I4
ssg71
g1978
sg64
(lp1985
g845
asbasbasbag57
(g73
g59
NtRp1986
(dp1987
g62
(dp1988
sg71
g1835
sg64
(lp1989
g57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
g82
g83
ssg71
g1986
sg64
(lp1993
g1052
asbag57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
g89
g90
ssg71
g1986
sg64
(lp1997
S':'
asbag57
(g78
g59
NtRp1998
(dp1999
g62
(dp2000
sg71
g1986
sg64
(lp2001
g57
(g58
g59
NtRp2002
(dp2003
g62
(dp2004
g70
I4
ssg71
g1998
sg64
(lp2005
g100
asbasbasbag57
(g73
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1835
sg64
(lp2009
g57
(g78
g59
NtRp2010
(dp2011
g62
(dp2012
g82
g83
ssg71
g2006
sg64
(lp2013
g1073
asbag57
(g78
g59
NtRp2014
(dp2015
g62
(dp2016
g89
g90
ssg71
g2006
sg64
(lp2017
S':'
asbag57
(g78
g59
NtRp2018
(dp2019
g62
(dp2020
sg71
g2006
sg64
(lp2021
g57
(g58
g59
NtRp2022
(dp2023
g62
(dp2024
g70
I4
ssg71
g2018
sg64
(lp2025
g100
asbasbasbag57
(g73
g59
NtRp2026
(dp2027
g62
(dp2028
sg71
g1835
sg64
(lp2029
g57
(g78
g59
NtRp2030
(dp2031
g62
(dp2032
g82
g83
ssg71
g2026
sg64
(lp2033
g1094
asbag57
(g78
g59
NtRp2034
(dp2035
g62
(dp2036
g89
g90
ssg71
g2026
sg64
(lp2037
S':'
asbag57
(g78
g59
NtRp2038
(dp2039
g62
(dp2040
sg71
g2026
sg64
(lp2041
g57
(g58
g59
NtRp2042
(dp2043
g62
(dp2044
g70
I4
ssg71
g2038
sg64
(lp2045
g57
(g66
g59
NtRp2046
(dp2047
g62
(dp2048
g70
I3
ssg71
Nsg64
(lp2049
g57
(g73
g59
NtRp2050
(dp2051
g62
(dp2052
sg71
g2046
sg64
(lp2053
g57
(g78
g59
NtRp2054
(dp2055
g62
(dp2056
sg71
g2050
sg64
(lp2057
g57
(g58
g59
NtRp2058
(dp2059
g62
(dp2060
g70
I3
ssg71
g2054
sg64
(lp2061
g1123
asbasbasbag57
(g73
g59
NtRp2062
(dp2063
g62
(dp2064
sg71
g2046
sg64
(lp2065
g57
(g78
g59
NtRp2066
(dp2067
g62
(dp2068
sg71
g2062
sg64
(lp2069
g57
(g58
g59
NtRp2070
(dp2071
g62
(dp2072
g70
I3
ssg71
g2066
sg64
(lp2073
g1136
asbasbasbag57
(g73
g59
NtRp2074
(dp2075
g62
(dp2076
sg71
g2046
sg64
(lp2077
g57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
sg71
g2074
sg64
(lp2081
g57
(g58
g59
NtRp2082
(dp2083
g62
(dp2084
g70
I3
ssg71
g2078
sg64
(lp2085
g1149
asbasbasbag57
(g73
g59
NtRp2086
(dp2087
g62
(dp2088
sg71
g2046
sg64
(lp2089
g57
(g78
g59
NtRp2090
(dp2091
g62
(dp2092
sg71
g2086
sg64
(lp2093
g57
(g58
g59
NtRp2094
(dp2095
g62
(dp2096
g70
I3
ssg71
g2090
sg64
(lp2097
g1162
asbasbasbag57
(g73
g59
NtRp2098
(dp2099
g62
(dp2100
sg71
g2046
sg64
(lp2101
g57
(g78
g59
NtRp2102
(dp2103
g62
(dp2104
sg71
g2098
sg64
(lp2105
g57
(g58
g59
NtRp2106
(dp2107
g62
(dp2108
g70
I3
ssg71
g2102
sg64
(lp2109
g1175
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2110
(dp2111
g62
(dp2112
sg71
g1835
sg64
(lp2113
g57
(g78
g59
NtRp2114
(dp2115
g62
(dp2116
g82
g83
ssg71
g2110
sg64
(lp2117
g1443
asbag57
(g78
g59
NtRp2118
(dp2119
g62
(dp2120
g89
g90
ssg71
g2110
sg64
(lp2121
S':'
asbag57
(g78
g59
NtRp2122
(dp2123
g62
(dp2124
sg71
g2110
sg64
(lp2125
g57
(g58
g59
NtRp2126
(dp2127
g62
(dp2128
g70
I4
ssg71
g2122
sg64
(lp2129
g57
(g66
g59
NtRp2130
(dp2131
g62
(dp2132
g70
I3
ssg71
Nsg64
(lp2133
g57
(g73
g59
NtRp2134
(dp2135
g62
(dp2136
sg71
g2130
sg64
(lp2137
g57
(g78
g59
NtRp2138
(dp2139
g62
(dp2140
sg71
g2134
sg64
(lp2141
g57
(g58
g59
NtRp2142
(dp2143
g62
(dp2144
g70
I3
ssg71
g2138
sg64
(lp2145
S'2'
asbasbasbag57
(g73
g59
NtRp2146
(dp2147
g62
(dp2148
sg71
g2130
sg64
(lp2149
g57
(g78
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g2146
sg64
(lp2153
g57
(g58
g59
NtRp2154
(dp2155
g62
(dp2156
g70
I3
ssg71
g2150
sg64
(lp2157
S'3'
asbasbasbag57
(g73
g59
NtRp2158
(dp2159
g62
(dp2160
sg71
g2130
sg64
(lp2161
g57
(g78
g59
NtRp2162
(dp2163
g62
(dp2164
sg71
g2158
sg64
(lp2165
g57
(g58
g59
NtRp2166
(dp2167
g62
(dp2168
g70
I3
ssg71
g2162
sg64
(lp2169
S'2'
asbasbasbag57
(g73
g59
NtRp2170
(dp2171
g62
(dp2172
sg71
g2130
sg64
(lp2173
g57
(g78
g59
NtRp2174
(dp2175
g62
(dp2176
sg71
g2170
sg64
(lp2177
g57
(g58
g59
NtRp2178
(dp2179
g62
(dp2180
g70
I3
ssg71
g2174
sg64
(lp2181
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2182
asbasbasbag57
(g73
g59
NtRp2183
(dp2184
g62
(dp2185
sg71
g2130
sg64
(lp2186
g57
(g78
g59
NtRp2187
(dp2188
g62
(dp2189
sg71
g2183
sg64
(lp2190
g57
(g58
g59
NtRp2191
(dp2192
g62
(dp2193
g70
I3
ssg71
g2187
sg64
(lp2194
g1521
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2195
(dp2196
g62
(dp2197
sg71
g67
sg64
(lp2198
g57
(g78
g59
NtRp2199
(dp2200
g62
(dp2201
g82
g83
ssg71
g2195
sg64
(lp2202
S'is_https'
p2203
asbag57
(g78
g59
NtRp2204
(dp2205
g62
(dp2206
g89
g90
ssg71
g2195
sg64
(lp2207
S':'
asbag57
(g78
g59
NtRp2208
(dp2209
g62
(dp2210
sg71
g2195
sg64
(lp2211
g57
(g58
g59
NtRp2212
(dp2213
g62
(dp2214
g70
I5
ssg71
g2208
sg64
(lp2215
g100
asbasbasbag57
(g73
g59
NtRp2216
(dp2217
g62
(dp2218
sg71
g67
sg64
(lp2219
g57
(g78
g59
NtRp2220
(dp2221
g62
(dp2222
g82
g83
ssg71
g2216
sg64
(lp2223
S'is_local'
p2224
asbag57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
g89
g90
ssg71
g2216
sg64
(lp2228
S':'
asbag57
(g78
g59
NtRp2229
(dp2230
g62
(dp2231
sg71
g2216
sg64
(lp2232
g57
(g58
g59
NtRp2233
(dp2234
g62
(dp2235
g70
I5
ssg71
g2229
sg64
(lp2236
g1630
asbasbasbag57
(g73
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g67
sg64
(lp2240
g57
(g78
g59
NtRp2241
(dp2242
g62
(dp2243
g82
g83
ssg71
g2237
sg64
(lp2244
S'is_restful'
p2245
asbag57
(g78
g59
NtRp2246
(dp2247
g62
(dp2248
g89
g90
ssg71
g2237
sg64
(lp2249
S':'
asbag57
(g78
g59
NtRp2250
(dp2251
g62
(dp2252
sg71
g2237
sg64
(lp2253
g57
(g58
g59
NtRp2254
(dp2255
g62
(dp2256
g70
I5
ssg71
g2250
sg64
(lp2257
g100
asbasbasbag57
(g73
g59
NtRp2258
(dp2259
g62
(dp2260
sg71
g67
sg64
(lp2261
g57
(g78
g59
NtRp2262
(dp2263
g62
(dp2264
g82
g83
ssg71
g2258
sg64
(lp2265
S'now'
p2266
asbag57
(g78
g59
NtRp2267
(dp2268
g62
(dp2269
g89
g90
ssg71
g2258
sg64
(lp2270
S':'
asbag57
(g78
g59
NtRp2271
(dp2272
g62
(dp2273
sg71
g2258
sg64
(lp2274
g57
(g58
g59
NtRp2275
(dp2276
g62
(dp2277
g70
I5
ssg71
g2271
sg64
(lp2278
S'datetime.datetime(2013, 3, 8, 20, 33, 54, 57787)'
p2279
asbasbasbag57
(g73
g59
NtRp2280
(dp2281
g62
(dp2282
sg71
g67
sg64
(lp2283
g57
(g78
g59
NtRp2284
(dp2285
g62
(dp2286
g82
g83
ssg71
g2280
sg64
(lp2287
S'post_vars'
p2288
asbag57
(g78
g59
NtRp2289
(dp2290
g62
(dp2291
g89
g90
ssg71
g2280
sg64
(lp2292
S':'
asbag57
(g78
g59
NtRp2293
(dp2294
g62
(dp2295
sg71
g2280
sg64
(lp2296
g57
(g58
g59
NtRp2297
(dp2298
g62
(dp2299
g70
I5
ssg71
g2293
sg64
(lp2300
g57
(g66
g59
NtRp2301
(dp2302
g62
(dp2303
g70
I4
ssg71
Nsg64
(lp2304
sbasbasbasbag57
(g73
g59
NtRp2305
(dp2306
g62
(dp2307
sg71
g67
sg64
(lp2308
g57
(g78
g59
NtRp2309
(dp2310
g62
(dp2311
g82
g83
ssg71
g2305
sg64
(lp2312
S'raw_args'
p2313
asbag57
(g78
g59
NtRp2314
(dp2315
g62
(dp2316
g89
g90
ssg71
g2305
sg64
(lp2317
S':'
asbag57
(g78
g59
NtRp2318
(dp2319
g62
(dp2320
sg71
g2305
sg64
(lp2321
g57
(g58
g59
NtRp2322
(dp2323
g62
(dp2324
g70
I5
ssg71
g2318
sg64
(lp2325
S'publish/5'
p2326
asbasbasbag57
(g73
g59
NtRp2327
(dp2328
g62
(dp2329
sg71
g67
sg64
(lp2330
g57
(g78
g59
NtRp2331
(dp2332
g62
(dp2333
g82
g83
ssg71
g2327
sg64
(lp2334
S'raw_extension'
p2335
asbag57
(g78
g59
NtRp2336
(dp2337
g62
(dp2338
g89
g90
ssg71
g2327
sg64
(lp2339
S':'
asbag57
(g78
g59
NtRp2340
(dp2341
g62
(dp2342
sg71
g2327
sg64
(lp2343
g57
(g58
g59
NtRp2344
(dp2345
g62
(dp2346
g70
I5
ssg71
g2340
sg64
(lp2347
S'None'
p2348
asbasbasbag57
(g73
g59
NtRp2349
(dp2350
g62
(dp2351
sg71
g67
sg64
(lp2352
g57
(g78
g59
NtRp2353
(dp2354
g62
(dp2355
g82
g83
ssg71
g2349
sg64
(lp2356
S'url'
p2357
asbag57
(g78
g59
NtRp2358
(dp2359
g62
(dp2360
g89
g90
ssg71
g2349
sg64
(lp2361
S':'
asbag57
(g78
g59
NtRp2362
(dp2363
g62
(dp2364
sg71
g2349
sg64
(lp2365
g57
(g58
g59
NtRp2366
(dp2367
g62
(dp2368
g70
I5
ssg71
g2362
sg64
(lp2369
g1197
asbasbasbag57
(g73
g59
NtRp2370
(dp2371
g62
(dp2372
sg71
g67
sg64
(lp2373
g57
(g78
g59
NtRp2374
(dp2375
g62
(dp2376
g82
g83
ssg71
g2370
sg64
(lp2377
S'utcnow'
p2378
asbag57
(g78
g59
NtRp2379
(dp2380
g62
(dp2381
g89
g90
ssg71
g2370
sg64
(lp2382
S':'
asbag57
(g78
g59
NtRp2383
(dp2384
g62
(dp2385
sg71
g2370
sg64
(lp2386
g57
(g58
g59
NtRp2387
(dp2388
g62
(dp2389
g70
I5
ssg71
g2383
sg64
(lp2390
S'datetime.datetime(2013, 3, 8, 15, 3, 54, 57827)'
p2391
asbasbasbag57
(g73
g59
NtRp2392
(dp2393
g62
(dp2394
sg71
g67
sg64
(lp2395
g57
(g78
g59
NtRp2396
(dp2397
g62
(dp2398
g82
g83
ssg71
g2392
sg64
(lp2399
S'uuid'
p2400
asbag57
(g78
g59
NtRp2401
(dp2402
g62
(dp2403
g89
g90
ssg71
g2392
sg64
(lp2404
S':'
asbag57
(g78
g59
NtRp2405
(dp2406
g62
(dp2407
sg71
g2392
sg64
(lp2408
g57
(g58
g59
NtRp2409
(dp2410
g62
(dp2411
g70
I5
ssg71
g2405
sg64
(lp2412
S'DEV_bootstrap_ch/127.0.0.1.2013-03-08.20-33-54.20ea20a6-5a23-4366-b929-eaab4eb0185b'
p2413
asbasbasbag57
(g73
g59
NtRp2414
(dp2415
g62
(dp2416
sg71
g67
sg64
(lp2417
g57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
g82
g83
ssg71
g2414
sg64
(lp2421
S'vars'
p2422
asbag57
(g78
g59
NtRp2423
(dp2424
g62
(dp2425
g89
g90
ssg71
g2414
sg64
(lp2426
S':'
asbag57
(g78
g59
NtRp2427
(dp2428
g62
(dp2429
sg71
g2414
sg64
(lp2430
g57
(g58
g59
NtRp2431
(dp2432
g62
(dp2433
g70
I5
ssg71
g2427
sg64
(lp2434
g57
(g66
g59
NtRp2435
(dp2436
g62
(dp2437
g70
I4
ssg71
Nsg64
(lp2438
sbasbasbasbag57
(g73
g59
NtRp2439
(dp2440
g62
(dp2441
sg71
g67
sg64
(lp2442
g57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
g82
g83
ssg71
g2439
sg64
(lp2446
S'wsgi'
p2447
asbag57
(g78
g59
NtRp2448
(dp2449
g62
(dp2450
g89
g90
ssg71
g2439
sg64
(lp2451
S':'
asbag57
(g78
g59
NtRp2452
(dp2453
g62
(dp2454
sg71
g2439
sg64
(lp2455
g57
(g58
g59
NtRp2456
(dp2457
g62
(dp2458
g70
I5
ssg71
g2452
sg64
(lp2459
g57
(g66
g59
NtRp2460
(dp2461
g62
(dp2462
g70
I4
ssg71
Nsg64
(lp2463
g57
(g73
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g2460
sg64
(lp2467
g57
(g78
g59
NtRp2468
(dp2469
g62
(dp2470
g82
g83
ssg71
g2464
sg64
(lp2471
S'environ'
p2472
asbag57
(g78
g59
NtRp2473
(dp2474
g62
(dp2475
g89
g90
ssg71
g2464
sg64
(lp2476
S':'
asbag57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
sg71
g2464
sg64
(lp2480
g57
(g58
g59
NtRp2481
(dp2482
g62
(dp2483
g70
I4
ssg71
g2477
sg64
(lp2484
g57
(g66
g59
NtRp2485
(dp2486
g62
(dp2487
g70
I3
ssg71
Nsg64
(lp2488
g57
(g73
g59
NtRp2489
(dp2490
g62
(dp2491
sg71
g2485
sg64
(lp2492
g57
(g78
g59
NtRp2493
(dp2494
g62
(dp2495
g82
g83
ssg71
g2489
sg64
(lp2496
S'HTTP_ACCEPT'
p2497
asbag57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g89
g90
ssg71
g2489
sg64
(lp2501
S':'
asbag57
(g78
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g2489
sg64
(lp2505
g57
(g58
g59
NtRp2506
(dp2507
g62
(dp2508
g70
I3
ssg71
g2502
sg64
(lp2509
g867
asbasbasbag57
(g73
g59
NtRp2510
(dp2511
g62
(dp2512
sg71
g2485
sg64
(lp2513
g57
(g78
g59
NtRp2514
(dp2515
g62
(dp2516
g82
g83
ssg71
g2510
sg64
(lp2517
S'HTTP_ACCEPT_CHARSET'
p2518
asbag57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
g89
g90
ssg71
g2510
sg64
(lp2522
S':'
asbag57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
sg71
g2510
sg64
(lp2526
g57
(g58
g59
NtRp2527
(dp2528
g62
(dp2529
g70
I3
ssg71
g2523
sg64
(lp2530
g889
asbasbasbag57
(g73
g59
NtRp2531
(dp2532
g62
(dp2533
sg71
g2485
sg64
(lp2534
g57
(g78
g59
NtRp2535
(dp2536
g62
(dp2537
g82
g83
ssg71
g2531
sg64
(lp2538
S'HTTP_ACCEPT_ENCODING'
p2539
asbag57
(g78
g59
NtRp2540
(dp2541
g62
(dp2542
g89
g90
ssg71
g2531
sg64
(lp2543
S':'
asbag57
(g78
g59
NtRp2544
(dp2545
g62
(dp2546
sg71
g2531
sg64
(lp2547
g57
(g58
g59
NtRp2548
(dp2549
g62
(dp2550
g70
I3
ssg71
g2544
sg64
(lp2551
g911
asbasbasbag57
(g73
g59
NtRp2552
(dp2553
g62
(dp2554
sg71
g2485
sg64
(lp2555
g57
(g78
g59
NtRp2556
(dp2557
g62
(dp2558
g82
g83
ssg71
g2552
sg64
(lp2559
S'HTTP_ACCEPT_LANGUAGE'
p2560
asbag57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g89
g90
ssg71
g2552
sg64
(lp2564
S':'
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
sg71
g2552
sg64
(lp2568
g57
(g58
g59
NtRp2569
(dp2570
g62
(dp2571
g70
I3
ssg71
g2565
sg64
(lp2572
g933
asbasbasbag57
(g73
g59
NtRp2573
(dp2574
g62
(dp2575
sg71
g2485
sg64
(lp2576
g57
(g78
g59
NtRp2577
(dp2578
g62
(dp2579
g82
g83
ssg71
g2573
sg64
(lp2580
S'HTTP_CONNECTION'
p2581
asbag57
(g78
g59
NtRp2582
(dp2583
g62
(dp2584
g89
g90
ssg71
g2573
sg64
(lp2585
S':'
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
sg71
g2573
sg64
(lp2589
g57
(g58
g59
NtRp2590
(dp2591
g62
(dp2592
g70
I3
ssg71
g2586
sg64
(lp2593
g955
asbasbasbag57
(g73
g59
NtRp2594
(dp2595
g62
(dp2596
sg71
g2485
sg64
(lp2597
g57
(g78
g59
NtRp2598
(dp2599
g62
(dp2600
g82
g83
ssg71
g2594
sg64
(lp2601
S'HTTP_COOKIE'
p2602
asbag57
(g78
g59
NtRp2603
(dp2604
g62
(dp2605
g89
g90
ssg71
g2594
sg64
(lp2606
S':'
asbag57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
sg71
g2594
sg64
(lp2610
g57
(g58
g59
NtRp2611
(dp2612
g62
(dp2613
g70
I3
ssg71
g2607
sg64
(lp2614
g977
asbasbasbag57
(g73
g59
NtRp2615
(dp2616
g62
(dp2617
sg71
g2485
sg64
(lp2618
g57
(g78
g59
NtRp2619
(dp2620
g62
(dp2621
g82
g83
ssg71
g2615
sg64
(lp2622
S'HTTP_HOST'
p2623
asbag57
(g78
g59
NtRp2624
(dp2625
g62
(dp2626
g89
g90
ssg71
g2615
sg64
(lp2627
S':'
asbag57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
sg71
g2615
sg64
(lp2631
g57
(g58
g59
NtRp2632
(dp2633
g62
(dp2634
g70
I3
ssg71
g2628
sg64
(lp2635
g999
asbasbasbag57
(g73
g59
NtRp2636
(dp2637
g62
(dp2638
sg71
g2485
sg64
(lp2639
g57
(g78
g59
NtRp2640
(dp2641
g62
(dp2642
g82
g83
ssg71
g2636
sg64
(lp2643
S'HTTP_REFERER'
p2644
asbag57
(g78
g59
NtRp2645
(dp2646
g62
(dp2647
g89
g90
ssg71
g2636
sg64
(lp2648
S':'
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
sg71
g2636
sg64
(lp2652
g57
(g58
g59
NtRp2653
(dp2654
g62
(dp2655
g70
I3
ssg71
g2649
sg64
(lp2656
g1021
asbasbasbag57
(g73
g59
NtRp2657
(dp2658
g62
(dp2659
sg71
g2485
sg64
(lp2660
g57
(g78
g59
NtRp2661
(dp2662
g62
(dp2663
g82
g83
ssg71
g2657
sg64
(lp2664
S'HTTP_USER_AGENT'
p2665
asbag57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g89
g90
ssg71
g2657
sg64
(lp2669
S':'
asbag57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
sg71
g2657
sg64
(lp2673
g57
(g58
g59
NtRp2674
(dp2675
g62
(dp2676
g70
I3
ssg71
g2670
sg64
(lp2677
g1043
asbasbasbag57
(g73
g59
NtRp2678
(dp2679
g62
(dp2680
sg71
g2485
sg64
(lp2681
g57
(g78
g59
NtRp2682
(dp2683
g62
(dp2684
g82
g83
ssg71
g2678
sg64
(lp2685
S'PATH_INFO'
p2686
asbag57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g89
g90
ssg71
g2678
sg64
(lp2690
S':'
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
sg71
g2678
sg64
(lp2694
g57
(g58
g59
NtRp2695
(dp2696
g62
(dp2697
g70
I3
ssg71
g2691
sg64
(lp2698
g1197
asbasbasbag57
(g73
g59
NtRp2699
(dp2700
g62
(dp2701
sg71
g2485
sg64
(lp2702
g57
(g78
g59
NtRp2703
(dp2704
g62
(dp2705
g82
g83
ssg71
g2699
sg64
(lp2706
S'QUERY_STRING'
p2707
asbag57
(g78
g59
NtRp2708
(dp2709
g62
(dp2710
g89
g90
ssg71
g2699
sg64
(lp2711
S':'
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
sg71
g2699
sg64
(lp2715
g57
(g58
g59
NtRp2716
(dp2717
g62
(dp2718
g70
I3
ssg71
g2712
sg64
(lp2719
S''
asbasbasbag57
(g73
g59
NtRp2720
(dp2721
g62
(dp2722
sg71
g2485
sg64
(lp2723
g57
(g78
g59
NtRp2724
(dp2725
g62
(dp2726
g82
g83
ssg71
g2720
sg64
(lp2727
S'REMOTE_ADDR'
p2728
asbag57
(g78
g59
NtRp2729
(dp2730
g62
(dp2731
g89
g90
ssg71
g2720
sg64
(lp2732
S':'
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
sg71
g2720
sg64
(lp2736
g57
(g58
g59
NtRp2737
(dp2738
g62
(dp2739
g70
I3
ssg71
g2733
sg64
(lp2740
g237
asbasbasbag57
(g73
g59
NtRp2741
(dp2742
g62
(dp2743
sg71
g2485
sg64
(lp2744
g57
(g78
g59
NtRp2745
(dp2746
g62
(dp2747
g82
g83
ssg71
g2741
sg64
(lp2748
S'REMOTE_PORT'
p2749
asbag57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
g89
g90
ssg71
g2741
sg64
(lp2753
S':'
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
sg71
g2741
sg64
(lp2757
g57
(g58
g59
NtRp2758
(dp2759
g62
(dp2760
g70
I3
ssg71
g2754
sg64
(lp2761
g1261
asbasbasbag57
(g73
g59
NtRp2762
(dp2763
g62
(dp2764
sg71
g2485
sg64
(lp2765
g57
(g78
g59
NtRp2766
(dp2767
g62
(dp2768
g82
g83
ssg71
g2762
sg64
(lp2769
S'REQUEST_METHOD'
p2770
asbag57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
g89
g90
ssg71
g2762
sg64
(lp2774
S':'
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
sg71
g2762
sg64
(lp2778
g57
(g58
g59
NtRp2779
(dp2780
g62
(dp2781
g70
I3
ssg71
g2775
sg64
(lp2782
g1283
asbasbasbag57
(g73
g59
NtRp2783
(dp2784
g62
(dp2785
sg71
g2485
sg64
(lp2786
g57
(g78
g59
NtRp2787
(dp2788
g62
(dp2789
g82
g83
ssg71
g2783
sg64
(lp2790
S'REQUEST_URI'
p2791
asbag57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
g89
g90
ssg71
g2783
sg64
(lp2795
S':'
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
sg71
g2783
sg64
(lp2799
g57
(g58
g59
NtRp2800
(dp2801
g62
(dp2802
g70
I3
ssg71
g2796
sg64
(lp2803
g1197
asbasbasbag57
(g73
g59
NtRp2804
(dp2805
g62
(dp2806
sg71
g2485
sg64
(lp2807
g57
(g78
g59
NtRp2808
(dp2809
g62
(dp2810
g82
g83
ssg71
g2804
sg64
(lp2811
S'SCRIPT_NAME'
p2812
asbag57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g89
g90
ssg71
g2804
sg64
(lp2816
S':'
asbag57
(g78
g59
NtRp2817
(dp2818
g62
(dp2819
sg71
g2804
sg64
(lp2820
g57
(g58
g59
NtRp2821
(dp2822
g62
(dp2823
g70
I3
ssg71
g2817
sg64
(lp2824
S''
asbasbasbag57
(g73
g59
NtRp2825
(dp2826
g62
(dp2827
sg71
g2485
sg64
(lp2828
g57
(g78
g59
NtRp2829
(dp2830
g62
(dp2831
g82
g83
ssg71
g2825
sg64
(lp2832
S'SERVER_NAME'
p2833
asbag57
(g78
g59
NtRp2834
(dp2835
g62
(dp2836
g89
g90
ssg71
g2825
sg64
(lp2837
S':'
asbag57
(g78
g59
NtRp2838
(dp2839
g62
(dp2840
sg71
g2825
sg64
(lp2841
g57
(g58
g59
NtRp2842
(dp2843
g62
(dp2844
g70
I3
ssg71
g2838
sg64
(lp2845
g1347
asbasbasbag57
(g73
g59
NtRp2846
(dp2847
g62
(dp2848
sg71
g2485
sg64
(lp2849
g57
(g78
g59
NtRp2850
(dp2851
g62
(dp2852
g82
g83
ssg71
g2846
sg64
(lp2853
S'SERVER_PORT'
p2854
asbag57
(g78
g59
NtRp2855
(dp2856
g62
(dp2857
g89
g90
ssg71
g2846
sg64
(lp2858
S':'
asbag57
(g78
g59
NtRp2859
(dp2860
g62
(dp2861
sg71
g2846
sg64
(lp2862
g57
(g58
g59
NtRp2863
(dp2864
g62
(dp2865
g70
I3
ssg71
g2859
sg64
(lp2866
g1369
asbasbasbag57
(g73
g59
NtRp2867
(dp2868
g62
(dp2869
sg71
g2485
sg64
(lp2870
g57
(g78
g59
NtRp2871
(dp2872
g62
(dp2873
g82
g83
ssg71
g2867
sg64
(lp2874
S'SERVER_PROTOCOL'
p2875
asbag57
(g78
g59
NtRp2876
(dp2877
g62
(dp2878
g89
g90
ssg71
g2867
sg64
(lp2879
S':'
asbag57
(g78
g59
NtRp2880
(dp2881
g62
(dp2882
sg71
g2867
sg64
(lp2883
g57
(g58
g59
NtRp2884
(dp2885
g62
(dp2886
g70
I3
ssg71
g2880
sg64
(lp2887
g1391
asbasbasbag57
(g73
g59
NtRp2888
(dp2889
g62
(dp2890
sg71
g2485
sg64
(lp2891
g57
(g78
g59
NtRp2892
(dp2893
g62
(dp2894
g82
g83
ssg71
g2888
sg64
(lp2895
S'SERVER_SOFTWARE'
p2896
asbag57
(g78
g59
NtRp2897
(dp2898
g62
(dp2899
g89
g90
ssg71
g2888
sg64
(lp2900
S':'
asbag57
(g78
g59
NtRp2901
(dp2902
g62
(dp2903
sg71
g2888
sg64
(lp2904
g57
(g58
g59
NtRp2905
(dp2906
g62
(dp2907
g70
I3
ssg71
g2901
sg64
(lp2908
g1413
asbasbasbag57
(g73
g59
NtRp2909
(dp2910
g62
(dp2911
sg71
g2485
sg64
(lp2912
g57
(g78
g59
NtRp2913
(dp2914
g62
(dp2915
g82
g83
ssg71
g2909
sg64
(lp2916
S'wsgi.errors'
p2917
asbag57
(g78
g59
NtRp2918
(dp2919
g62
(dp2920
g89
g90
ssg71
g2909
sg64
(lp2921
S':'
asbag57
(g78
g59
NtRp2922
(dp2923
g62
(dp2924
sg71
g2909
sg64
(lp2925
g57
(g58
g59
NtRp2926
(dp2927
g62
(dp2928
g70
I3
ssg71
g2922
sg64
(lp2929
S"<open file '<stderr>', mode 'w' at 0xb72e90d0>"
p2930
asbasbasbag57
(g73
g59
NtRp2931
(dp2932
g62
(dp2933
sg71
g2485
sg64
(lp2934
g57
(g78
g59
NtRp2935
(dp2936
g62
(dp2937
g82
g83
ssg71
g2931
sg64
(lp2938
S'wsgi.file_wrapper'
p2939
asbag57
(g78
g59
NtRp2940
(dp2941
g62
(dp2942
g89
g90
ssg71
g2931
sg64
(lp2943
S':'
asbag57
(g78
g59
NtRp2944
(dp2945
g62
(dp2946
sg71
g2931
sg64
(lp2947
g57
(g58
g59
NtRp2948
(dp2949
g62
(dp2950
g70
I3
ssg71
g2944
sg64
(lp2951
S'<class wsgiref.util.FileWrapper at 0xa49cb9c>'
p2952
asbasbasbag57
(g73
g59
NtRp2953
(dp2954
g62
(dp2955
sg71
g2485
sg64
(lp2956
g57
(g78
g59
NtRp2957
(dp2958
g62
(dp2959
g82
g83
ssg71
g2953
sg64
(lp2960
S'wsgi.input'
p2961
asbag57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
g89
g90
ssg71
g2953
sg64
(lp2965
S':'
asbag57
(g78
g59
NtRp2966
(dp2967
g62
(dp2968
sg71
g2953
sg64
(lp2969
g57
(g58
g59
NtRp2970
(dp2971
g62
(dp2972
g70
I3
ssg71
g2966
sg64
(lp2973
S'<cStringIO.StringO object at 0xb055c3a0>'
p2974
asbasbasbag57
(g73
g59
NtRp2975
(dp2976
g62
(dp2977
sg71
g2485
sg64
(lp2978
g57
(g78
g59
NtRp2979
(dp2980
g62
(dp2981
g82
g83
ssg71
g2975
sg64
(lp2982
S'wsgi.multiprocess'
p2983
asbag57
(g78
g59
NtRp2984
(dp2985
g62
(dp2986
g89
g90
ssg71
g2975
sg64
(lp2987
S':'
asbag57
(g78
g59
NtRp2988
(dp2989
g62
(dp2990
sg71
g2975
sg64
(lp2991
g57
(g58
g59
NtRp2992
(dp2993
g62
(dp2994
g70
I3
ssg71
g2988
sg64
(lp2995
g100
asbasbasbag57
(g73
g59
NtRp2996
(dp2997
g62
(dp2998
sg71
g2485
sg64
(lp2999
g57
(g78
g59
NtRp3000
(dp3001
g62
(dp3002
g82
g83
ssg71
g2996
sg64
(lp3003
S'wsgi.multithread'
p3004
asbag57
(g78
g59
NtRp3005
(dp3006
g62
(dp3007
g89
g90
ssg71
g2996
sg64
(lp3008
S':'
asbag57
(g78
g59
NtRp3009
(dp3010
g62
(dp3011
sg71
g2996
sg64
(lp3012
g57
(g58
g59
NtRp3013
(dp3014
g62
(dp3015
g70
I3
ssg71
g3009
sg64
(lp3016
g1630
asbasbasbag57
(g73
g59
NtRp3017
(dp3018
g62
(dp3019
sg71
g2485
sg64
(lp3020
g57
(g78
g59
NtRp3021
(dp3022
g62
(dp3023
g82
g83
ssg71
g3017
sg64
(lp3024
S'wsgi.run_once'
p3025
asbag57
(g78
g59
NtRp3026
(dp3027
g62
(dp3028
g89
g90
ssg71
g3017
sg64
(lp3029
S':'
asbag57
(g78
g59
NtRp3030
(dp3031
g62
(dp3032
sg71
g3017
sg64
(lp3033
g57
(g58
g59
NtRp3034
(dp3035
g62
(dp3036
g70
I3
ssg71
g3030
sg64
(lp3037
g100
asbasbasbag57
(g73
g59
NtRp3038
(dp3039
g62
(dp3040
sg71
g2485
sg64
(lp3041
g57
(g78
g59
NtRp3042
(dp3043
g62
(dp3044
g82
g83
ssg71
g3038
sg64
(lp3045
S'wsgi.url_scheme'
p3046
asbag57
(g78
g59
NtRp3047
(dp3048
g62
(dp3049
g89
g90
ssg71
g3038
sg64
(lp3050
S':'
asbag57
(g78
g59
NtRp3051
(dp3052
g62
(dp3053
sg71
g3038
sg64
(lp3054
g57
(g58
g59
NtRp3055
(dp3056
g62
(dp3057
g70
I3
ssg71
g3051
sg64
(lp3058
g1673
asbasbasbag57
(g73
g59
NtRp3059
(dp3060
g62
(dp3061
sg71
g2485
sg64
(lp3062
g57
(g78
g59
NtRp3063
(dp3064
g62
(dp3065
g82
g83
ssg71
g3059
sg64
(lp3066
S'wsgi.version'
p3067
asbag57
(g78
g59
NtRp3068
(dp3069
g62
(dp3070
g89
g90
ssg71
g3059
sg64
(lp3071
S':'
asbag57
(g78
g59
NtRp3072
(dp3073
g62
(dp3074
sg71
g3059
sg64
(lp3075
g57
(g58
g59
NtRp3076
(dp3077
g62
(dp3078
g70
I3
ssg71
g3072
sg64
(lp3079
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3080
(lp3081
(dp3082
S'file'
p3083
S'/home/anil/Downloads/web2py/gluon/restricted.py'
p3084
sS'dump'
p3085
(dp3086
S'environment'
p3087
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3088
sS'ccode'
p3089
S'<code object <module> at 0xaf380338, file "/home...EV_bootstrap_ch/controllers/default.py", line 16>'
p3090
ssS'lnum'
p3091
I212
sS'lines'
p3092
(dp3093
I207
S'    try:'
p3094
sI208
S'        if isinstance(code, types.CodeType):'
p3095
sI209
S'            ccode = code'
p3096
sI210
S'        else:'
p3097
sI211
S'            ccode = compile2(code, layer)'
p3098
sI212
S'        exec ccode in environment'
p3099
sI213
S'    except HTTP:'
p3100
sI214
S'        raise'
p3101
sI215
S'    except RestrictedError:'
p3102
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3103
ssS'call'
p3104
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...\\n\\n\\n\\nresponse._vars=response._caller(ajx_publish)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3105
sS'func'
p3106
S'restricted'
p3107
sa(dp3108
g3083
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3109
sg3085
(dp3110
sg3091
I1154
sg3092
(dp3111
I1152
S''
sI1143
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3112
sI1144
S'   """ per sample . takes id of the sample as the input """'
p3113
sI1145
S'   sid = request.args(0)'
p3114
sI1146
S'   sample = db(db.sample.id == sid).select().first()'
p3115
sI1147
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3116
sI1148
S'   form = SQLFORM(db.sample_files)'
p3117
sI1149
S'   form.vars.sample = sid'
p3118
sI1150
S'   return locals()'
p3119
sI1151
S''
ssg3104
S'()'
p3120
sg3106
S'<module>'
p3121
sa(dp3122
g3083
S'/home/anil/Downloads/web2py/gluon/globals.py'
p3123
sg3085
(dp3124
S'self'
p3125
S'undefined'
p3126
sS'f'
S'<function ajx_publish>'
p3127
ssg3091
I193
sg3092
(dp3128
I192
S'        self._vars = None'
p3129
sI193
S'        self._caller = lambda f: f()'
p3130
sI194
S'        self._view_environment = None'
p3131
sI195
S'        self._custom_commit = None'
p3132
sI196
S'        self._custom_rollback = None'
p3133
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3134
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3135
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3136
sI191
S"        self.delimiters = ('{{', '}}')"
p3137
ssg3104
S'(f=<function ajx_publish>)'
p3138
sg3106
S'<lambda>'
p3139
sa(dp3140
g3083
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3141
sg3085
(dp3142
S'db.project'
p3143
S'<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>'
p3144
sS'db.project.id'
p3145
S'<gluon.dal.Field object>'
p3146
sS'global now'
p3147
S'datetime.datetime(2013, 3, 8, 20, 33, 54, 85169)'
p3148
sS'project_status'
p3149
g3126
sS').update'
p3150
g3126
sS'eid'
p3151
S"'5'"
p3152
sS'global db'
p3153
S'<DAL uri="sqlite://storage.sqlite">'
p3154
sS'publication_date'
p3155
g3126
sS'row'
p3156
g3126
ssg3091
I501
sg3092
(dp3157
I496
S''
sI497
S'def ajx_publish():'
p3158
sI498
S'    """ an ajax call back which takes care of publication status """'
p3159
sI499
S'    eid = request.args(1)'
p3160
sI500
S"    if request.args(0) == 'publish':"
p3161
sI501
S'     row = db(db.project.id == eid).update(project_status = "1",publication_date = now)'
p3162
sI502
S"    elif request.args(0) == 'unpublish':"
p3163
sI503
S'     row = db(db.project.id == eid).update(project_status = "0",publication_date= None)'
p3164
sI504
S"    redirect(URL('project_viewer',args = eid))"
p3165
sI505
S'    return locals()'
p3166
ssg3104
S'()'
p3167
sg3106
S'ajx_publish'
p3168
sa(dp3169
g3083
S'/home/anil/Downloads/web2py/gluon/dal.py'
p3170
sg3085
(dp3171
S'update_fields'
p3172
S"{'project_status': '1', 'publication_date': datetime.datetime(2013, 3, 8, 20, 33, 54, 85169)}"
p3173
sS'f'
g3126
sS'self'
p3174
S'<Set (project.id = 5)>'
p3175
sS'table._before_update'
p3176
S'[<unbound method Set.delete_uploaded_files>]'
p3177
sS'builtinany'
p3178
S'<built-in function any>'
p3179
sS'table'
p3180
S'<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>'
p3181
ssg3091
I8924
sg3092
(dp3182
I8928
S'            raise SyntaxError("No fields to update")'
p3183
sI8919
S'    def update(self, **update_fields):'
p3184
sI8920
S'        db = self.db'
p3185
sI8921
S'        tablename = db._adapter.get_table(self.query)'
p3186
sI8922
S'        table = db[tablename]'
p3187
sI8923
S'        table._attempt_upload(update_fields)'
p3188
sI8924
S'        if any(f(self,update_fields) for f in table._before_update):'
p3189
sI8925
S'            return 0'
p3190
sI8926
S'        fields = table._listify(update_fields,update=True)'
p3191
sI8927
S'        if not fields:'
p3192
ssg3104
S"(self=<Set (project.id = 5)>, **update_fields={'project_status': '1', 'publication_date': datetime.datetime(2013, 3, 8, 20, 33, 54, 85169)})"
p3193
sg3106
S'update'
p3194
sa(dp3195
g3083
S'/home/anil/Downloads/web2py/gluon/dal.py'
p3196
sg3085
(dp3197
S'update_fields'
p3198
S"{'project_status': '1', 'publication_date': datetime.datetime(2013, 3, 8, 20, 33, 54, 85169)}"
p3199
sS'table'
p3200
g3126
sS'self'
p3201
S'<Set (project.id = 5)>'
p3202
sS'f'
S'<unbound method Set.delete_uploaded_files>'
p3203
sS'builtinany'
p3204
S'<built-in function any>'
p3205
ssg3091
I8924
sg3092
(dp3206
I8928
S'            raise SyntaxError("No fields to update")'
p3207
sI8919
S'    def update(self, **update_fields):'
p3208
sI8920
S'        db = self.db'
p3209
sI8921
S'        tablename = db._adapter.get_table(self.query)'
p3210
sI8922
S'        table = db[tablename]'
p3211
sI8923
S'        table._attempt_upload(update_fields)'
p3212
sI8924
S'        if any(f(self,update_fields) for f in table._before_update):'
p3213
sI8925
S'            return 0'
p3214
sI8926
S'        fields = table._listify(update_fields,update=True)'
p3215
sI8927
S'        if not fields:'
p3216
ssg3104
S'((f=<unbound method Set.delete_uploaded_files>,))'
p3217
sg3106
S'<genexpr>'
p3218
sa(dp3219
g3083
S'/home/anil/Downloads/web2py/gluon/dal.py'
p3220
sg3085
(dp3221
S'].uploadfield'
p3222
g3126
sS'].autodelete'
p3223
g3126
sS'f'
S"'publication_date'"
p3224
sS'fields'
p3225
S"['publication_date', 'project_status']"
p3226
sS'builtinTrue'
p3227
g1630
sS'].type'
p3228
g3126
sS'table'
p3229
S'<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>'
p3230
ssg3091
I8976
sg3092
(dp3231
I8971
S'        # ## mind uploadfield==True means file is not in DB'
p3232
sI8972
S'        if upload_fields:'
p3233
sI8973
S'            fields = upload_fields.keys()'
p3234
sI8974
S'        else:'
p3235
sI8975
S'            fields = table.fields'
p3236
sI8976
S"        fields = [f for f in fields if table[f].type == 'upload'"
p3237
sI8977
S'                   and table[f].uploadfield == True'
p3238
sI8978
S'                   and table[f].autodelete]'
p3239
sI8979
S'        if not fields:'
p3240
sI8980
S'            return False'
p3241
ssg3104
S"(self=<Set (project.id = 5)>, upload_fields={'project_status': '1', 'publication_date': datetime.datetime(2013, 3, 8, 20, 33, 54, 85169)})"
p3242
sg3106
S'delete_uploaded_files'
p3243
sa(dp3244
g3083
S'/home/anil/Downloads/web2py/gluon/dal.py'
p3245
sg3085
(dp3246
S'builtinstr'
p3247
S"<type 'str'>"
p3248
sS'self'
p3249
S'<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>'
p3250
sS'global ogetattr'
p3251
S"<slot wrapper '__getattribute__' of 'object' objects>"
p3252
sS'key'
p3253
S"'publication_date'"
p3254
ssg3091
I7745
sg3092
(dp3255
I7744
S'        elif key:'
p3256
sI7745
S'            return ogetattr(self, str(key))'
p3257
sI7746
S''
sI7747
S'    def __call__(self, key=DEFAULT, **kwargs):'
p3258
sI7748
S"        for_update = kwargs.get('_for_update',False)"
p3259
sI7749
S"        if '_for_update' in kwargs: del kwargs['_for_update']"
p3260
sI7740
S'                return rows[0]'
p3261
sI7741
S'            return None'
p3262
sI7742
S"        elif str(key).isdigit() or 'google' in DRIVERS and isinstance(key, Key):"
p3263
sI7743
S'            return self._db(self._id == key).select(limitby=(0,1)).first()'
p3264
ssg3104
S"(self=<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>, key='publication_date')"
p3265
sg3106
g20
sasS'pyver'
p3266
S'Python 2.7.3: /usr/bin/python'
p3267
sS'session'
p3268
g57
(g58
g59
NtRp3269
(dp3270
g62
(dp3271
sg64
(lp3272
g57
(g66
g59
NtRp3273
(dp3274
g62
(dp3275
g70
I5
ssg71
Nsg64
(lp3276
g57
(g73
g59
NtRp3277
(dp3278
g62
(dp3279
sg71
g3273
sg64
(lp3280
g57
(g78
g59
NtRp3281
(dp3282
g62
(dp3283
g82
g83
ssg71
g3277
sg64
(lp3284
S'auth'
p3285
asbag57
(g78
g59
NtRp3286
(dp3287
g62
(dp3288
g89
g90
ssg71
g3277
sg64
(lp3289
S':'
asbag57
(g78
g59
NtRp3290
(dp3291
g62
(dp3292
sg71
g3277
sg64
(lp3293
g57
(g58
g59
NtRp3294
(dp3295
g62
(dp3296
g70
I5
ssg71
g3290
sg64
(lp3297
g57
(g66
g59
NtRp3298
(dp3299
g62
(dp3300
g70
I4
ssg71
Nsg64
(lp3301
g57
(g73
g59
NtRp3302
(dp3303
g62
(dp3304
sg71
g3298
sg64
(lp3305
g57
(g78
g59
NtRp3306
(dp3307
g62
(dp3308
g82
g83
ssg71
g3302
sg64
(lp3309
S'expiration'
p3310
asbag57
(g78
g59
NtRp3311
(dp3312
g62
(dp3313
g89
g90
ssg71
g3302
sg64
(lp3314
S':'
asbag57
(g78
g59
NtRp3315
(dp3316
g62
(dp3317
sg71
g3302
sg64
(lp3318
g57
(g58
g59
NtRp3319
(dp3320
g62
(dp3321
g70
I4
ssg71
g3315
sg64
(lp3322
S'3600'
p3323
asbasbasbag57
(g73
g59
NtRp3324
(dp3325
g62
(dp3326
sg71
g3298
sg64
(lp3327
g57
(g78
g59
NtRp3328
(dp3329
g62
(dp3330
g82
g83
ssg71
g3324
sg64
(lp3331
S'hmac_key'
p3332
asbag57
(g78
g59
NtRp3333
(dp3334
g62
(dp3335
g89
g90
ssg71
g3324
sg64
(lp3336
S':'
asbag57
(g78
g59
NtRp3337
(dp3338
g62
(dp3339
sg71
g3324
sg64
(lp3340
g57
(g58
g59
NtRp3341
(dp3342
g62
(dp3343
g70
I4
ssg71
g3337
sg64
(lp3344
S'682b31d8-3fbf-42f1-9951-2fa6f04803f1'
p3345
asbasbasbag57
(g73
g59
NtRp3346
(dp3347
g62
(dp3348
sg71
g3298
sg64
(lp3349
g57
(g78
g59
NtRp3350
(dp3351
g62
(dp3352
g82
g83
ssg71
g3346
sg64
(lp3353
S'last_visit'
p3354
asbag57
(g78
g59
NtRp3355
(dp3356
g62
(dp3357
g89
g90
ssg71
g3346
sg64
(lp3358
S':'
asbag57
(g78
g59
NtRp3359
(dp3360
g62
(dp3361
sg71
g3346
sg64
(lp3362
g57
(g58
g59
NtRp3363
(dp3364
g62
(dp3365
g70
I4
ssg71
g3359
sg64
(lp3366
S'datetime.datetime(2013, 3, 8, 20, 32, 56, 867182)'
p3367
asbasbasbag57
(g73
g59
NtRp3368
(dp3369
g62
(dp3370
sg71
g3298
sg64
(lp3371
g57
(g78
g59
NtRp3372
(dp3373
g62
(dp3374
g82
g83
ssg71
g3368
sg64
(lp3375
S'remember'
p3376
asbag57
(g78
g59
NtRp3377
(dp3378
g62
(dp3379
g89
g90
ssg71
g3368
sg64
(lp3380
S':'
asbag57
(g78
g59
NtRp3381
(dp3382
g62
(dp3383
sg71
g3368
sg64
(lp3384
g57
(g58
g59
NtRp3385
(dp3386
g62
(dp3387
g70
I4
ssg71
g3381
sg64
(lp3388
g100
asbasbasbag57
(g73
g59
NtRp3389
(dp3390
g62
(dp3391
sg71
g3298
sg64
(lp3392
g57
(g78
g59
NtRp3393
(dp3394
g62
(dp3395
g82
g83
ssg71
g3389
sg64
(lp3396
S'user'
p3397
asbag57
(g78
g59
NtRp3398
(dp3399
g62
(dp3400
g89
g90
ssg71
g3389
sg64
(lp3401
S':'
asbag57
(g78
g59
NtRp3402
(dp3403
g62
(dp3404
sg71
g3389
sg64
(lp3405
g57
(g58
g59
NtRp3406
(dp3407
g62
(dp3408
g70
I4
ssg71
g3402
sg64
(lp3409
g57
(g66
g59
NtRp3410
(dp3411
g62
(dp3412
g70
I3
ssg71
Nsg64
(lp3413
g57
(g73
g59
NtRp3414
(dp3415
g62
(dp3416
sg71
g3410
sg64
(lp3417
g57
(g78
g59
NtRp3418
(dp3419
g62
(dp3420
g82
g83
ssg71
g3414
sg64
(lp3421
S'address'
p3422
asbag57
(g78
g59
NtRp3423
(dp3424
g62
(dp3425
g89
g90
ssg71
g3414
sg64
(lp3426
S':'
asbag57
(g78
g59
NtRp3427
(dp3428
g62
(dp3429
sg71
g3414
sg64
(lp3430
g57
(g58
g59
NtRp3431
(dp3432
g62
(dp3433
g70
I3
ssg71
g3427
sg64
(lp3434
S'dsaf'
p3435
asbasbasbag57
(g73
g59
NtRp3436
(dp3437
g62
(dp3438
sg71
g3410
sg64
(lp3439
g57
(g78
g59
NtRp3440
(dp3441
g62
(dp3442
g82
g83
ssg71
g3436
sg64
(lp3443
S'affiliated_to'
p3444
asbag57
(g78
g59
NtRp3445
(dp3446
g62
(dp3447
g89
g90
ssg71
g3436
sg64
(lp3448
S':'
asbag57
(g78
g59
NtRp3449
(dp3450
g62
(dp3451
sg71
g3436
sg64
(lp3452
g57
(g58
g59
NtRp3453
(dp3454
g62
(dp3455
g70
I3
ssg71
g3449
sg64
(lp3456
S'fdsa'
p3457
asbasbasbag57
(g73
g59
NtRp3458
(dp3459
g62
(dp3460
sg71
g3410
sg64
(lp3461
g57
(g78
g59
NtRp3462
(dp3463
g62
(dp3464
g82
g83
ssg71
g3458
sg64
(lp3465
S'city'
p3466
asbag57
(g78
g59
NtRp3467
(dp3468
g62
(dp3469
g89
g90
ssg71
g3458
sg64
(lp3470
S':'
asbag57
(g78
g59
NtRp3471
(dp3472
g62
(dp3473
sg71
g3458
sg64
(lp3474
g57
(g58
g59
NtRp3475
(dp3476
g62
(dp3477
g70
I3
ssg71
g3471
sg64
(lp3478
S'ongole'
p3479
asbasbasbag57
(g73
g59
NtRp3480
(dp3481
g62
(dp3482
sg71
g3410
sg64
(lp3483
g57
(g78
g59
NtRp3484
(dp3485
g62
(dp3486
g82
g83
ssg71
g3480
sg64
(lp3487
S'country'
p3488
asbag57
(g78
g59
NtRp3489
(dp3490
g62
(dp3491
g89
g90
ssg71
g3480
sg64
(lp3492
S':'
asbag57
(g78
g59
NtRp3493
(dp3494
g62
(dp3495
sg71
g3480
sg64
(lp3496
g57
(g58
g59
NtRp3497
(dp3498
g62
(dp3499
g70
I3
ssg71
g3493
sg64
(lp3500
S'India'
p3501
asbasbasbag57
(g73
g59
NtRp3502
(dp3503
g62
(dp3504
sg71
g3410
sg64
(lp3505
g57
(g78
g59
NtRp3506
(dp3507
g62
(dp3508
g82
g83
ssg71
g3502
sg64
(lp3509
S'email'
p3510
asbag57
(g78
g59
NtRp3511
(dp3512
g62
(dp3513
g89
g90
ssg71
g3502
sg64
(lp3514
S':'
asbag57
(g78
g59
NtRp3515
(dp3516
g62
(dp3517
sg71
g3502
sg64
(lp3518
g57
(g58
g59
NtRp3519
(dp3520
g62
(dp3521
g70
I3
ssg71
g3515
sg64
(lp3522
S'anil1in7@gmail.com'
p3523
asbasbasbag57
(g73
g59
NtRp3524
(dp3525
g62
(dp3526
sg71
g3410
sg64
(lp3527
g57
(g78
g59
NtRp3528
(dp3529
g62
(dp3530
g82
g83
ssg71
g3524
sg64
(lp3531
S'first_name'
p3532
asbag57
(g78
g59
NtRp3533
(dp3534
g62
(dp3535
g89
g90
ssg71
g3524
sg64
(lp3536
S':'
asbag57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
sg71
g3524
sg64
(lp3540
g57
(g58
g59
NtRp3541
(dp3542
g62
(dp3543
g70
I3
ssg71
g3537
sg64
(lp3544
S'Anil Kumar'
p3545
asbasbasbag57
(g73
g59
NtRp3546
(dp3547
g62
(dp3548
sg71
g3410
sg64
(lp3549
g57
(g78
g59
NtRp3550
(dp3551
g62
(dp3552
g82
g83
ssg71
g3546
sg64
(lp3553
S'id'
p3554
asbag57
(g78
g59
NtRp3555
(dp3556
g62
(dp3557
g89
g90
ssg71
g3546
sg64
(lp3558
S':'
asbag57
(g78
g59
NtRp3559
(dp3560
g62
(dp3561
sg71
g3546
sg64
(lp3562
g57
(g58
g59
NtRp3563
(dp3564
g62
(dp3565
g70
I3
ssg71
g3559
sg64
(lp3566
S'1'
asbasbasbag57
(g73
g59
NtRp3567
(dp3568
g62
(dp3569
sg71
g3410
sg64
(lp3570
g57
(g78
g59
NtRp3571
(dp3572
g62
(dp3573
g82
g83
ssg71
g3567
sg64
(lp3574
S'last_name'
p3575
asbag57
(g78
g59
NtRp3576
(dp3577
g62
(dp3578
g89
g90
ssg71
g3567
sg64
(lp3579
S':'
asbag57
(g78
g59
NtRp3580
(dp3581
g62
(dp3582
sg71
g3567
sg64
(lp3583
g57
(g58
g59
NtRp3584
(dp3585
g62
(dp3586
g70
I3
ssg71
g3580
sg64
(lp3587
S'Nalamalapu'
p3588
asbasbasbag57
(g73
g59
NtRp3589
(dp3590
g62
(dp3591
sg71
g3410
sg64
(lp3592
g57
(g78
g59
NtRp3593
(dp3594
g62
(dp3595
g82
g83
ssg71
g3589
sg64
(lp3596
S'mobile'
p3597
asbag57
(g78
g59
NtRp3598
(dp3599
g62
(dp3600
g89
g90
ssg71
g3589
sg64
(lp3601
S':'
asbag57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3589
sg64
(lp3605
g57
(g58
g59
NtRp3606
(dp3607
g62
(dp3608
g70
I3
ssg71
g3602
sg64
(lp3609
S'918885334113'
p3610
asbasbasbag57
(g73
g59
NtRp3611
(dp3612
g62
(dp3613
sg71
g3410
sg64
(lp3614
g57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
g82
g83
ssg71
g3611
sg64
(lp3618
S'phone'
p3619
asbag57
(g78
g59
NtRp3620
(dp3621
g62
(dp3622
g89
g90
ssg71
g3611
sg64
(lp3623
S':'
asbag57
(g78
g59
NtRp3624
(dp3625
g62
(dp3626
sg71
g3611
sg64
(lp3627
g57
(g58
g59
NtRp3628
(dp3629
g62
(dp3630
g70
I3
ssg71
g3624
sg64
(lp3631
S'918885334113'
p3632
asbasbasbag57
(g73
g59
NtRp3633
(dp3634
g62
(dp3635
sg71
g3410
sg64
(lp3636
g57
(g78
g59
NtRp3637
(dp3638
g62
(dp3639
g82
g83
ssg71
g3633
sg64
(lp3640
S'position'
p3641
asbag57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
g89
g90
ssg71
g3633
sg64
(lp3645
S':'
asbag57
(g78
g59
NtRp3646
(dp3647
g62
(dp3648
sg71
g3633
sg64
(lp3649
g57
(g58
g59
NtRp3650
(dp3651
g62
(dp3652
g70
I3
ssg71
g3646
sg64
(lp3653
S'2'
asbasbasbag57
(g73
g59
NtRp3654
(dp3655
g62
(dp3656
sg71
g3410
sg64
(lp3657
g57
(g78
g59
NtRp3658
(dp3659
g62
(dp3660
g82
g83
ssg71
g3654
sg64
(lp3661
S'postal_code'
p3662
asbag57
(g78
g59
NtRp3663
(dp3664
g62
(dp3665
g89
g90
ssg71
g3654
sg64
(lp3666
S':'
asbag57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
sg71
g3654
sg64
(lp3670
g57
(g58
g59
NtRp3671
(dp3672
g62
(dp3673
g70
I3
ssg71
g3667
sg64
(lp3674
S'523182'
p3675
asbasbasbag57
(g73
g59
NtRp3676
(dp3677
g62
(dp3678
sg71
g3410
sg64
(lp3679
g57
(g78
g59
NtRp3680
(dp3681
g62
(dp3682
g82
g83
ssg71
g3676
sg64
(lp3683
S'registration_id'
p3684
asbag57
(g78
g59
NtRp3685
(dp3686
g62
(dp3687
g89
g90
ssg71
g3676
sg64
(lp3688
S':'
asbag57
(g78
g59
NtRp3689
(dp3690
g62
(dp3691
sg71
g3676
sg64
(lp3692
g57
(g58
g59
NtRp3693
(dp3694
g62
(dp3695
g70
I3
ssg71
g3689
sg64
(lp3696
S''
asbasbasbag57
(g73
g59
NtRp3697
(dp3698
g62
(dp3699
sg71
g3410
sg64
(lp3700
g57
(g78
g59
NtRp3701
(dp3702
g62
(dp3703
g82
g83
ssg71
g3697
sg64
(lp3704
S'registration_key'
p3705
asbag57
(g78
g59
NtRp3706
(dp3707
g62
(dp3708
g89
g90
ssg71
g3697
sg64
(lp3709
S':'
asbag57
(g78
g59
NtRp3710
(dp3711
g62
(dp3712
sg71
g3697
sg64
(lp3713
g57
(g58
g59
NtRp3714
(dp3715
g62
(dp3716
g70
I3
ssg71
g3710
sg64
(lp3717
S''
asbasbasbag57
(g73
g59
NtRp3718
(dp3719
g62
(dp3720
sg71
g3410
sg64
(lp3721
g57
(g78
g59
NtRp3722
(dp3723
g62
(dp3724
g82
g83
ssg71
g3718
sg64
(lp3725
S'reset_password_key'
p3726
asbag57
(g78
g59
NtRp3727
(dp3728
g62
(dp3729
g89
g90
ssg71
g3718
sg64
(lp3730
S':'
asbag57
(g78
g59
NtRp3731
(dp3732
g62
(dp3733
sg71
g3718
sg64
(lp3734
g57
(g58
g59
NtRp3735
(dp3736
g62
(dp3737
g70
I3
ssg71
g3731
sg64
(lp3738
S''
asbasbasbag57
(g73
g59
NtRp3739
(dp3740
g62
(dp3741
sg71
g3410
sg64
(lp3742
g57
(g78
g59
NtRp3743
(dp3744
g62
(dp3745
g82
g83
ssg71
g3739
sg64
(lp3746
S'title'
p3747
asbag57
(g78
g59
NtRp3748
(dp3749
g62
(dp3750
g89
g90
ssg71
g3739
sg64
(lp3751
S':'
asbag57
(g78
g59
NtRp3752
(dp3753
g62
(dp3754
sg71
g3739
sg64
(lp3755
g57
(g58
g59
NtRp3756
(dp3757
g62
(dp3758
g70
I3
ssg71
g3752
sg64
(lp3759
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3760
(dp3761
g62
(dp3762
sg71
g3298
sg64
(lp3763
g57
(g78
g59
NtRp3764
(dp3765
g62
(dp3766
g82
g83
ssg71
g3760
sg64
(lp3767
S'user_groups'
p3768
asbag57
(g78
g59
NtRp3769
(dp3770
g62
(dp3771
g89
g90
ssg71
g3760
sg64
(lp3772
S':'
asbag57
(g78
g59
NtRp3773
(dp3774
g62
(dp3775
sg71
g3760
sg64
(lp3776
g57
(g58
g59
NtRp3777
(dp3778
g62
(dp3779
g70
I4
ssg71
g3773
sg64
(lp3780
g57
(g66
g59
NtRp3781
(dp3782
g62
(dp3783
g70
I3
ssg71
Nsg64
(lp3784
g57
(g73
g59
NtRp3785
(dp3786
g62
(dp3787
sg71
g3781
sg64
(lp3788
g57
(g78
g59
NtRp3789
(dp3790
g62
(dp3791
g82
g83
ssg71
g3785
sg64
(lp3792
S'1'
asbag57
(g78
g59
NtRp3793
(dp3794
g62
(dp3795
g89
g90
ssg71
g3785
sg64
(lp3796
S':'
asbag57
(g78
g59
NtRp3797
(dp3798
g62
(dp3799
sg71
g3785
sg64
(lp3800
g57
(g58
g59
NtRp3801
(dp3802
g62
(dp3803
g70
I3
ssg71
g3797
sg64
(lp3804
S'user_1'
p3805
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3806
(dp3807
g62
(dp3808
sg71
g3273
sg64
(lp3809
g57
(g78
g59
NtRp3810
(dp3811
g62
(dp3812
g82
g83
ssg71
g3806
sg64
(lp3813
S'flash'
p3814
asbag57
(g78
g59
NtRp3815
(dp3816
g62
(dp3817
g89
g90
ssg71
g3806
sg64
(lp3818
S':'
asbag57
(g78
g59
NtRp3819
(dp3820
g62
(dp3821
sg71
g3806
sg64
(lp3822
g57
(g58
g59
NtRp3823
(dp3824
g62
(dp3825
g70
I5
ssg71
g3819
sg64
(lp3826
S'None'
p3827
asbasbasbasbasbsS'etype'
p3828
S"<type 'exceptions.AttributeError'>"
p3829
sS'date'
p3830
S'Fri Mar  8 20:33:54 2013'
p3831
sS'response'
p3832
g57
(g58
g59
NtRp3833
(dp3834
g62
(dp3835
sg64
(lp3836
g57
(g66
g59
NtRp3837
(dp3838
g62
(dp3839
g70
I5
ssg71
Nsg64
(lp3840
g57
(g73
g59
NtRp3841
(dp3842
g62
(dp3843
sg71
g3837
sg64
(lp3844
g57
(g78
g59
NtRp3845
(dp3846
g62
(dp3847
g82
g83
ssg71
g3841
sg64
(lp3848
g180
asbag57
(g78
g59
NtRp3849
(dp3850
g62
(dp3851
g89
g90
ssg71
g3841
sg64
(lp3852
S':'
asbag57
(g78
g59
NtRp3853
(dp3854
g62
(dp3855
sg71
g3841
sg64
(lp3856
g57
(g58
g59
NtRp3857
(dp3858
g62
(dp3859
g70
I5
ssg71
g3853
sg64
(lp3860
S'<cStringIO.StringO object at 0xb0588c80>'
p3861
asbasbasbag57
(g73
g59
NtRp3862
(dp3863
g62
(dp3864
sg71
g3837
sg64
(lp3865
g57
(g78
g59
NtRp3866
(dp3867
g62
(dp3868
g82
g83
ssg71
g3862
sg64
(lp3869
g268
asbag57
(g78
g59
NtRp3870
(dp3871
g62
(dp3872
g89
g90
ssg71
g3862
sg64
(lp3873
S':'
asbag57
(g78
g59
NtRp3874
(dp3875
g62
(dp3876
sg71
g3862
sg64
(lp3877
g57
(g58
g59
NtRp3878
(dp3879
g62
(dp3880
g70
I5
ssg71
g3874
sg64
(lp3881
g57
(g66
g59
NtRp3882
(dp3883
g62
(dp3884
g70
I4
ssg71
Nsg64
(lp3885
g57
(g73
g59
NtRp3886
(dp3887
g62
(dp3888
sg71
g3882
sg64
(lp3889
g57
(g78
g59
NtRp3890
(dp3891
g62
(dp3892
g82
g83
ssg71
g3886
sg64
(lp3893
S'session_id_dev_bootstrap_ch'
p3894
asbag57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
g89
g90
ssg71
g3886
sg64
(lp3898
S':'
asbag57
(g78
g59
NtRp3899
(dp3900
g62
(dp3901
sg71
g3886
sg64
(lp3902
g57
(g58
g59
NtRp3903
(dp3904
g62
(dp3905
g70
I4
ssg71
g3899
sg64
(lp3906
g500
ag57
(g66
g59
NtRp3907
(dp3908
g62
(dp3909
g70
I3
ssg71
Nsg64
(lp3910
g57
(g73
g59
NtRp3911
(dp3912
g62
(dp3913
sg71
g3907
sg64
(lp3914
g57
(g78
g59
NtRp3915
(dp3916
g62
(dp3917
g82
g83
ssg71
g3911
sg64
(lp3918
g319
asbag57
(g78
g59
NtRp3919
(dp3920
g62
(dp3921
g89
g90
ssg71
g3911
sg64
(lp3922
S':'
asbag57
(g78
g59
NtRp3923
(dp3924
g62
(dp3925
sg71
g3911
sg64
(lp3926
g57
(g58
g59
NtRp3927
(dp3928
g62
(dp3929
g70
I3
ssg71
g3923
sg64
(lp3930
S''
asbasbasbag57
(g73
g59
NtRp3931
(dp3932
g62
(dp3933
sg71
g3907
sg64
(lp3934
g57
(g78
g59
NtRp3935
(dp3936
g62
(dp3937
g82
g83
ssg71
g3931
sg64
(lp3938
g340
asbag57
(g78
g59
NtRp3939
(dp3940
g62
(dp3941
g89
g90
ssg71
g3931
sg64
(lp3942
S':'
asbag57
(g78
g59
NtRp3943
(dp3944
g62
(dp3945
sg71
g3931
sg64
(lp3946
g57
(g58
g59
NtRp3947
(dp3948
g62
(dp3949
g70
I3
ssg71
g3943
sg64
(lp3950
S''
asbasbasbag57
(g73
g59
NtRp3951
(dp3952
g62
(dp3953
sg71
g3907
sg64
(lp3954
g57
(g78
g59
NtRp3955
(dp3956
g62
(dp3957
g82
g83
ssg71
g3951
sg64
(lp3958
g361
asbag57
(g78
g59
NtRp3959
(dp3960
g62
(dp3961
g89
g90
ssg71
g3951
sg64
(lp3962
S':'
asbag57
(g78
g59
NtRp3963
(dp3964
g62
(dp3965
sg71
g3951
sg64
(lp3966
g57
(g58
g59
NtRp3967
(dp3968
g62
(dp3969
g70
I3
ssg71
g3963
sg64
(lp3970
S''
asbasbasbag57
(g73
g59
NtRp3971
(dp3972
g62
(dp3973
sg71
g3907
sg64
(lp3974
g57
(g78
g59
NtRp3975
(dp3976
g62
(dp3977
g82
g83
ssg71
g3971
sg64
(lp3978
g382
asbag57
(g78
g59
NtRp3979
(dp3980
g62
(dp3981
g89
g90
ssg71
g3971
sg64
(lp3982
S':'
asbag57
(g78
g59
NtRp3983
(dp3984
g62
(dp3985
sg71
g3971
sg64
(lp3986
g57
(g58
g59
NtRp3987
(dp3988
g62
(dp3989
g70
I3
ssg71
g3983
sg64
(lp3990
S''
asbasbasbag57
(g73
g59
NtRp3991
(dp3992
g62
(dp3993
sg71
g3907
sg64
(lp3994
g57
(g78
g59
NtRp3995
(dp3996
g62
(dp3997
g82
g83
ssg71
g3991
sg64
(lp3998
g403
asbag57
(g78
g59
NtRp3999
(dp4000
g62
(dp4001
g89
g90
ssg71
g3991
sg64
(lp4002
S':'
asbag57
(g78
g59
NtRp4003
(dp4004
g62
(dp4005
sg71
g3991
sg64
(lp4006
g57
(g58
g59
NtRp4007
(dp4008
g62
(dp4009
g70
I3
ssg71
g4003
sg64
(lp4010
S''
asbasbasbag57
(g73
g59
NtRp4011
(dp4012
g62
(dp4013
sg71
g3907
sg64
(lp4014
g57
(g78
g59
NtRp4015
(dp4016
g62
(dp4017
g82
g83
ssg71
g4011
sg64
(lp4018
g424
asbag57
(g78
g59
NtRp4019
(dp4020
g62
(dp4021
g89
g90
ssg71
g4011
sg64
(lp4022
S':'
asbag57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
sg71
g4011
sg64
(lp4026
g57
(g58
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I3
ssg71
g4023
sg64
(lp4030
S'/'
asbasbasbag57
(g73
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g3907
sg64
(lp4034
g57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
g82
g83
ssg71
g4031
sg64
(lp4038
g445
asbag57
(g78
g59
NtRp4039
(dp4040
g62
(dp4041
g89
g90
ssg71
g4031
sg64
(lp4042
S':'
asbag57
(g78
g59
NtRp4043
(dp4044
g62
(dp4045
sg71
g4031
sg64
(lp4046
g57
(g58
g59
NtRp4047
(dp4048
g62
(dp4049
g70
I3
ssg71
g4043
sg64
(lp4050
S''
asbasbasbag57
(g73
g59
NtRp4051
(dp4052
g62
(dp4053
sg71
g3907
sg64
(lp4054
g57
(g78
g59
NtRp4055
(dp4056
g62
(dp4057
g82
g83
ssg71
g4051
sg64
(lp4058
g466
asbag57
(g78
g59
NtRp4059
(dp4060
g62
(dp4061
g89
g90
ssg71
g4051
sg64
(lp4062
S':'
asbag57
(g78
g59
NtRp4063
(dp4064
g62
(dp4065
sg71
g4051
sg64
(lp4066
g57
(g58
g59
NtRp4067
(dp4068
g62
(dp4069
g70
I3
ssg71
g4063
sg64
(lp4070
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g3837
sg64
(lp4074
g57
(g78
g59
NtRp4075
(dp4076
g62
(dp4077
g82
g83
ssg71
g4071
sg64
(lp4078
S'delimiters'
p4079
asbag57
(g78
g59
NtRp4080
(dp4081
g62
(dp4082
g89
g90
ssg71
g4071
sg64
(lp4083
S':'
asbag57
(g78
g59
NtRp4084
(dp4085
g62
(dp4086
sg71
g4071
sg64
(lp4087
g57
(g58
g59
NtRp4088
(dp4089
g62
(dp4090
g70
I5
ssg71
g4084
sg64
(lp4091
g57
(g66
g59
NtRp4092
(dp4093
g62
(dp4094
g70
I4
ssg71
Nsg64
(lp4095
g57
(g73
g59
NtRp4096
(dp4097
g62
(dp4098
sg71
g4092
sg64
(lp4099
g57
(g78
g59
NtRp4100
(dp4101
g62
(dp4102
sg71
g4096
sg64
(lp4103
g57
(g58
g59
NtRp4104
(dp4105
g62
(dp4106
g70
I4
ssg71
g4100
sg64
(lp4107
S'{{'
p4108
asbasbasbag57
(g73
g59
NtRp4109
(dp4110
g62
(dp4111
sg71
g4092
sg64
(lp4112
g57
(g78
g59
NtRp4113
(dp4114
g62
(dp4115
sg71
g4109
sg64
(lp4116
g57
(g58
g59
NtRp4117
(dp4118
g62
(dp4119
g70
I4
ssg71
g4113
sg64
(lp4120
S'}}'
p4121
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4122
(dp4123
g62
(dp4124
sg71
g3837
sg64
(lp4125
g57
(g78
g59
NtRp4126
(dp4127
g62
(dp4128
g82
g83
ssg71
g4122
sg64
(lp4129
S'files'
p4130
asbag57
(g78
g59
NtRp4131
(dp4132
g62
(dp4133
g89
g90
ssg71
g4122
sg64
(lp4134
S':'
asbag57
(g78
g59
NtRp4135
(dp4136
g62
(dp4137
sg71
g4122
sg64
(lp4138
g57
(g58
g59
NtRp4139
(dp4140
g62
(dp4141
g70
I5
ssg71
g4135
sg64
(lp4142
g57
(g66
g59
NtRp4143
(dp4144
g62
(dp4145
g70
I4
ssg71
Nsg64
(lp4146
g57
(g73
g59
NtRp4147
(dp4148
g62
(dp4149
sg71
g4143
sg64
(lp4150
g57
(g78
g59
NtRp4151
(dp4152
g62
(dp4153
sg71
g4147
sg64
(lp4154
g57
(g58
g59
NtRp4155
(dp4156
g62
(dp4157
g70
I4
ssg71
g4151
sg64
(lp4158
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4159
asbasbasbag57
(g73
g59
NtRp4160
(dp4161
g62
(dp4162
sg71
g4143
sg64
(lp4163
g57
(g78
g59
NtRp4164
(dp4165
g62
(dp4166
sg71
g4160
sg64
(lp4167
g57
(g58
g59
NtRp4168
(dp4169
g62
(dp4170
g70
I4
ssg71
g4164
sg64
(lp4171
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4172
asbasbasbag57
(g73
g59
NtRp4173
(dp4174
g62
(dp4175
sg71
g4143
sg64
(lp4176
g57
(g78
g59
NtRp4177
(dp4178
g62
(dp4179
sg71
g4173
sg64
(lp4180
g57
(g58
g59
NtRp4181
(dp4182
g62
(dp4183
g70
I4
ssg71
g4177
sg64
(lp4184
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4185
asbasbasbag57
(g73
g59
NtRp4186
(dp4187
g62
(dp4188
sg71
g4143
sg64
(lp4189
g57
(g78
g59
NtRp4190
(dp4191
g62
(dp4192
sg71
g4186
sg64
(lp4193
g57
(g58
g59
NtRp4194
(dp4195
g62
(dp4196
g70
I4
ssg71
g4190
sg64
(lp4197
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4198
asbasbasbag57
(g73
g59
NtRp4199
(dp4200
g62
(dp4201
sg71
g4143
sg64
(lp4202
g57
(g78
g59
NtRp4203
(dp4204
g62
(dp4205
sg71
g4199
sg64
(lp4206
g57
(g58
g59
NtRp4207
(dp4208
g62
(dp4209
g70
I4
ssg71
g4203
sg64
(lp4210
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4211
asbasbasbag57
(g73
g59
NtRp4212
(dp4213
g62
(dp4214
sg71
g4143
sg64
(lp4215
g57
(g78
g59
NtRp4216
(dp4217
g62
(dp4218
sg71
g4212
sg64
(lp4219
g57
(g58
g59
NtRp4220
(dp4221
g62
(dp4222
g70
I4
ssg71
g4216
sg64
(lp4223
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4224
asbasbasbag57
(g73
g59
NtRp4225
(dp4226
g62
(dp4227
sg71
g4143
sg64
(lp4228
g57
(g78
g59
NtRp4229
(dp4230
g62
(dp4231
sg71
g4225
sg64
(lp4232
g57
(g58
g59
NtRp4233
(dp4234
g62
(dp4235
g70
I4
ssg71
g4229
sg64
(lp4236
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4237
asbasbasbag57
(g73
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4143
sg64
(lp4241
g57
(g78
g59
NtRp4242
(dp4243
g62
(dp4244
sg71
g4238
sg64
(lp4245
g57
(g58
g59
NtRp4246
(dp4247
g62
(dp4248
g70
I4
ssg71
g4242
sg64
(lp4249
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4250
asbasbasbag57
(g73
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4143
sg64
(lp4254
g57
(g78
g59
NtRp4255
(dp4256
g62
(dp4257
sg71
g4251
sg64
(lp4258
g57
(g58
g59
NtRp4259
(dp4260
g62
(dp4261
g70
I4
ssg71
g4255
sg64
(lp4262
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4263
asbasbasbag57
(g73
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g4143
sg64
(lp4267
g57
(g78
g59
NtRp4268
(dp4269
g62
(dp4270
sg71
g4264
sg64
(lp4271
g57
(g58
g59
NtRp4272
(dp4273
g62
(dp4274
g70
I4
ssg71
g4268
sg64
(lp4275
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4276
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g3837
sg64
(lp4280
g57
(g78
g59
NtRp4281
(dp4282
g62
(dp4283
g82
g83
ssg71
g4277
sg64
(lp4284
S'flash'
p4285
asbag57
(g78
g59
NtRp4286
(dp4287
g62
(dp4288
g89
g90
ssg71
g4277
sg64
(lp4289
S':'
asbag57
(g78
g59
NtRp4290
(dp4291
g62
(dp4292
sg71
g4277
sg64
(lp4293
g57
(g58
g59
NtRp4294
(dp4295
g62
(dp4296
g70
I5
ssg71
g4290
sg64
(lp4297
S''
asbasbasbag57
(g73
g59
NtRp4298
(dp4299
g62
(dp4300
sg71
g3837
sg64
(lp4301
g57
(g78
g59
NtRp4302
(dp4303
g62
(dp4304
g82
g83
ssg71
g4298
sg64
(lp4305
S'generic_patterns'
p4306
asbag57
(g78
g59
NtRp4307
(dp4308
g62
(dp4309
g89
g90
ssg71
g4298
sg64
(lp4310
S':'
asbag57
(g78
g59
NtRp4311
(dp4312
g62
(dp4313
sg71
g4298
sg64
(lp4314
g57
(g58
g59
NtRp4315
(dp4316
g62
(dp4317
g70
I5
ssg71
g4311
sg64
(lp4318
g57
(g66
g59
NtRp4319
(dp4320
g62
(dp4321
g70
I4
ssg71
Nsg64
(lp4322
g57
(g73
g59
NtRp4323
(dp4324
g62
(dp4325
sg71
g4319
sg64
(lp4326
g57
(g78
g59
NtRp4327
(dp4328
g62
(dp4329
sg71
g4323
sg64
(lp4330
g57
(g58
g59
NtRp4331
(dp4332
g62
(dp4333
g70
I4
ssg71
g4327
sg64
(lp4334
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4335
(dp4336
g62
(dp4337
sg71
g3837
sg64
(lp4338
g57
(g78
g59
NtRp4339
(dp4340
g62
(dp4341
g82
g83
ssg71
g4335
sg64
(lp4342
S'google_analytics_id'
p4343
asbag57
(g78
g59
NtRp4344
(dp4345
g62
(dp4346
g89
g90
ssg71
g4335
sg64
(lp4347
S':'
asbag57
(g78
g59
NtRp4348
(dp4349
g62
(dp4350
sg71
g4335
sg64
(lp4351
g57
(g58
g59
NtRp4352
(dp4353
g62
(dp4354
g70
I5
ssg71
g4348
sg64
(lp4355
S'None'
p4356
asbasbasbag57
(g73
g59
NtRp4357
(dp4358
g62
(dp4359
sg71
g3837
sg64
(lp4360
g57
(g78
g59
NtRp4361
(dp4362
g62
(dp4363
g82
g83
ssg71
g4357
sg64
(lp4364
S'headers'
p4365
asbag57
(g78
g59
NtRp4366
(dp4367
g62
(dp4368
g89
g90
ssg71
g4357
sg64
(lp4369
S':'
asbag57
(g78
g59
NtRp4370
(dp4371
g62
(dp4372
sg71
g4357
sg64
(lp4373
g57
(g58
g59
NtRp4374
(dp4375
g62
(dp4376
g70
I5
ssg71
g4370
sg64
(lp4377
g57
(g66
g59
NtRp4378
(dp4379
g62
(dp4380
g70
I4
ssg71
Nsg64
(lp4381
g57
(g73
g59
NtRp4382
(dp4383
g62
(dp4384
sg71
g4378
sg64
(lp4385
g57
(g78
g59
NtRp4386
(dp4387
g62
(dp4388
g82
g83
ssg71
g4382
sg64
(lp4389
S'X-Powered-By'
p4390
asbag57
(g78
g59
NtRp4391
(dp4392
g62
(dp4393
g89
g90
ssg71
g4382
sg64
(lp4394
S':'
asbag57
(g78
g59
NtRp4395
(dp4396
g62
(dp4397
sg71
g4382
sg64
(lp4398
g57
(g58
g59
NtRp4399
(dp4400
g62
(dp4401
g70
I4
ssg71
g4395
sg64
(lp4402
S'web2py'
p4403
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4404
(dp4405
g62
(dp4406
sg71
g3837
sg64
(lp4407
g57
(g78
g59
NtRp4408
(dp4409
g62
(dp4410
g82
g83
ssg71
g4404
sg64
(lp4411
S'menu'
p4412
asbag57
(g78
g59
NtRp4413
(dp4414
g62
(dp4415
g89
g90
ssg71
g4404
sg64
(lp4416
S':'
asbag57
(g78
g59
NtRp4417
(dp4418
g62
(dp4419
sg71
g4404
sg64
(lp4420
g57
(g58
g59
NtRp4421
(dp4422
g62
(dp4423
g70
I5
ssg71
g4417
sg64
(lp4424
g57
(g66
g59
NtRp4425
(dp4426
g62
(dp4427
g70
I4
ssg71
Nsg64
(lp4428
g57
(g73
g59
NtRp4429
(dp4430
g62
(dp4431
sg71
g4425
sg64
(lp4432
g57
(g78
g59
NtRp4433
(dp4434
g62
(dp4435
sg71
g4429
sg64
(lp4436
g57
(g58
g59
NtRp4437
(dp4438
g62
(dp4439
g70
I4
ssg71
g4433
sg64
(lp4440
g57
(g66
g59
NtRp4441
(dp4442
g62
(dp4443
g70
I3
ssg71
Nsg64
(lp4444
g57
(g73
g59
NtRp4445
(dp4446
g62
(dp4447
sg71
g4441
sg64
(lp4448
g57
(g78
g59
NtRp4449
(dp4450
g62
(dp4451
sg71
g4445
sg64
(lp4452
g57
(g58
g59
NtRp4453
(dp4454
g62
(dp4455
g70
I3
ssg71
g4449
sg64
(lp4456
cgluon.languages
lazyT_unpickle
p4457
(S't\x04\x00\x00\x00Home'
tRp4458
asbasbasbag57
(g73
g59
NtRp4459
(dp4460
g62
(dp4461
sg71
g4441
sg64
(lp4462
g57
(g78
g59
NtRp4463
(dp4464
g62
(dp4465
sg71
g4459
sg64
(lp4466
g57
(g58
g59
NtRp4467
(dp4468
g62
(dp4469
g70
I3
ssg71
g4463
sg64
(lp4470
g100
asbasbasbag57
(g73
g59
NtRp4471
(dp4472
g62
(dp4473
sg71
g4441
sg64
(lp4474
g57
(g78
g59
NtRp4475
(dp4476
g62
(dp4477
sg71
g4471
sg64
(lp4478
g57
(g58
g59
NtRp4479
(dp4480
g62
(dp4481
g70
I3
ssg71
g4475
sg64
(lp4482
S'/DEV_bootstrap_ch/default/list_all_projects'
p4483
asbasbasbag57
(g73
g59
NtRp4484
(dp4485
g62
(dp4486
sg71
g4441
sg64
(lp4487
g57
(g78
g59
NtRp4488
(dp4489
g62
(dp4490
sg71
g4484
sg64
(lp4491
g57
(g58
g59
NtRp4492
(dp4493
g62
(dp4494
g70
I3
ssg71
g4488
sg64
(lp4495
g57
(g66
g59
NtRp4496
(dp4497
g62
(dp4498
g70
I2
ssg71
Nsg64
(lp4499
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4500
(dp4501
g62
(dp4502
sg71
g4425
sg64
(lp4503
g57
(g78
g59
NtRp4504
(dp4505
g62
(dp4506
sg71
g4500
sg64
(lp4507
g57
(g58
g59
NtRp4508
(dp4509
g62
(dp4510
g70
I4
ssg71
g4504
sg64
(lp4511
g57
(g66
g59
NtRp4512
(dp4513
g62
(dp4514
g70
I3
ssg71
Nsg64
(lp4515
g57
(g73
g59
NtRp4516
(dp4517
g62
(dp4518
sg71
g4512
sg64
(lp4519
g57
(g78
g59
NtRp4520
(dp4521
g62
(dp4522
sg71
g4516
sg64
(lp4523
g57
(g58
g59
NtRp4524
(dp4525
g62
(dp4526
g70
I3
ssg71
g4520
sg64
(lp4527
g4457
(S't\x08\x00\x00\x00Projects'
tRp4528
asbasbasbag57
(g73
g59
NtRp4529
(dp4530
g62
(dp4531
sg71
g4512
sg64
(lp4532
g57
(g78
g59
NtRp4533
(dp4534
g62
(dp4535
sg71
g4529
sg64
(lp4536
g57
(g58
g59
NtRp4537
(dp4538
g62
(dp4539
g70
I3
ssg71
g4533
sg64
(lp4540
g100
asbasbasbag57
(g73
g59
NtRp4541
(dp4542
g62
(dp4543
sg71
g4512
sg64
(lp4544
g57
(g78
g59
NtRp4545
(dp4546
g62
(dp4547
sg71
g4541
sg64
(lp4548
g57
(g58
g59
NtRp4549
(dp4550
g62
(dp4551
g70
I3
ssg71
g4545
sg64
(lp4552
S'/DEV_bootstrap_ch/default/list_all_projects'
p4553
asbasbasbag57
(g73
g59
NtRp4554
(dp4555
g62
(dp4556
sg71
g4512
sg64
(lp4557
g57
(g78
g59
NtRp4558
(dp4559
g62
(dp4560
sg71
g4554
sg64
(lp4561
g57
(g58
g59
NtRp4562
(dp4563
g62
(dp4564
g70
I3
ssg71
g4558
sg64
(lp4565
g57
(g66
g59
NtRp4566
(dp4567
g62
(dp4568
g70
I2
ssg71
Nsg64
(lp4569
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4570
(dp4571
g62
(dp4572
sg71
g3837
sg64
(lp4573
g57
(g78
g59
NtRp4574
(dp4575
g62
(dp4576
g82
g83
ssg71
g4570
sg64
(lp4577
S'meta'
p4578
asbag57
(g78
g59
NtRp4579
(dp4580
g62
(dp4581
g89
g90
ssg71
g4570
sg64
(lp4582
S':'
asbag57
(g78
g59
NtRp4583
(dp4584
g62
(dp4585
sg71
g4570
sg64
(lp4586
g57
(g58
g59
NtRp4587
(dp4588
g62
(dp4589
g70
I5
ssg71
g4583
sg64
(lp4590
g57
(g66
g59
NtRp4591
(dp4592
g62
(dp4593
g70
I4
ssg71
Nsg64
(lp4594
g57
(g73
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4591
sg64
(lp4598
g57
(g78
g59
NtRp4599
(dp4600
g62
(dp4601
g82
g83
ssg71
g4595
sg64
(lp4602
S'author'
p4603
asbag57
(g78
g59
NtRp4604
(dp4605
g62
(dp4606
g89
g90
ssg71
g4595
sg64
(lp4607
S':'
asbag57
(g78
g59
NtRp4608
(dp4609
g62
(dp4610
sg71
g4595
sg64
(lp4611
g57
(g58
g59
NtRp4612
(dp4613
g62
(dp4614
g70
I4
ssg71
g4608
sg64
(lp4615
S'Vikram Pudi <vikram@iiit.ac.in>'
p4616
asbasbasbag57
(g73
g59
NtRp4617
(dp4618
g62
(dp4619
sg71
g4591
sg64
(lp4620
g57
(g78
g59
NtRp4621
(dp4622
g62
(dp4623
g82
g83
ssg71
g4617
sg64
(lp4624
S'copyright'
p4625
asbag57
(g78
g59
NtRp4626
(dp4627
g62
(dp4628
g89
g90
ssg71
g4617
sg64
(lp4629
S':'
asbag57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
sg71
g4617
sg64
(lp4633
g57
(g58
g59
NtRp4634
(dp4635
g62
(dp4636
g70
I4
ssg71
g4630
sg64
(lp4637
S'Copyright 2011'
p4638
asbasbasbag57
(g73
g59
NtRp4639
(dp4640
g62
(dp4641
sg71
g4591
sg64
(lp4642
g57
(g78
g59
NtRp4643
(dp4644
g62
(dp4645
g82
g83
ssg71
g4639
sg64
(lp4646
S'description'
p4647
asbag57
(g78
g59
NtRp4648
(dp4649
g62
(dp4650
g89
g90
ssg71
g4639
sg64
(lp4651
S':'
asbag57
(g78
g59
NtRp4652
(dp4653
g62
(dp4654
sg71
g4639
sg64
(lp4655
g57
(g58
g59
NtRp4656
(dp4657
g62
(dp4658
g70
I4
ssg71
g4652
sg64
(lp4659
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4660
asbasbasbag57
(g73
g59
NtRp4661
(dp4662
g62
(dp4663
sg71
g4591
sg64
(lp4664
g57
(g78
g59
NtRp4665
(dp4666
g62
(dp4667
g82
g83
ssg71
g4661
sg64
(lp4668
S'generator'
p4669
asbag57
(g78
g59
NtRp4670
(dp4671
g62
(dp4672
g89
g90
ssg71
g4661
sg64
(lp4673
S':'
asbag57
(g78
g59
NtRp4674
(dp4675
g62
(dp4676
sg71
g4661
sg64
(lp4677
g57
(g58
g59
NtRp4678
(dp4679
g62
(dp4680
g70
I4
ssg71
g4674
sg64
(lp4681
S'Web2py Web Framework'
p4682
asbasbasbag57
(g73
g59
NtRp4683
(dp4684
g62
(dp4685
sg71
g4591
sg64
(lp4686
g57
(g78
g59
NtRp4687
(dp4688
g62
(dp4689
g82
g83
ssg71
g4683
sg64
(lp4690
S'keywords'
p4691
asbag57
(g78
g59
NtRp4692
(dp4693
g62
(dp4694
g89
g90
ssg71
g4683
sg64
(lp4695
S':'
asbag57
(g78
g59
NtRp4696
(dp4697
g62
(dp4698
sg71
g4683
sg64
(lp4699
g57
(g58
g59
NtRp4700
(dp4701
g62
(dp4702
g70
I4
ssg71
g4696
sg64
(lp4703
S'web2py, python, metabolome, metabolomics'
p4704
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4705
(dp4706
g62
(dp4707
sg71
g3837
sg64
(lp4708
g57
(g78
g59
NtRp4709
(dp4710
g62
(dp4711
g82
g83
ssg71
g4705
sg64
(lp4712
S'models_to_run'
p4713
asbag57
(g78
g59
NtRp4714
(dp4715
g62
(dp4716
g89
g90
ssg71
g4705
sg64
(lp4717
S':'
asbag57
(g78
g59
NtRp4718
(dp4719
g62
(dp4720
sg71
g4705
sg64
(lp4721
g57
(g58
g59
NtRp4722
(dp4723
g62
(dp4724
g70
I5
ssg71
g4718
sg64
(lp4725
g57
(g66
g59
NtRp4726
(dp4727
g62
(dp4728
g70
I4
ssg71
Nsg64
(lp4729
g57
(g73
g59
NtRp4730
(dp4731
g62
(dp4732
sg71
g4726
sg64
(lp4733
g57
(g78
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g4730
sg64
(lp4737
g57
(g58
g59
NtRp4738
(dp4739
g62
(dp4740
g70
I4
ssg71
g4734
sg64
(lp4741
S'^\\w+\\.py$'
p4742
asbasbasbag57
(g73
g59
NtRp4743
(dp4744
g62
(dp4745
sg71
g4726
sg64
(lp4746
g57
(g78
g59
NtRp4747
(dp4748
g62
(dp4749
sg71
g4743
sg64
(lp4750
g57
(g58
g59
NtRp4751
(dp4752
g62
(dp4753
g70
I4
ssg71
g4747
sg64
(lp4754
S'^default/\\w+\\.py$'
p4755
asbasbasbag57
(g73
g59
NtRp4756
(dp4757
g62
(dp4758
sg71
g4726
sg64
(lp4759
g57
(g78
g59
NtRp4760
(dp4761
g62
(dp4762
sg71
g4756
sg64
(lp4763
g57
(g58
g59
NtRp4764
(dp4765
g62
(dp4766
g70
I4
ssg71
g4760
sg64
(lp4767
S'^default/ajx_publish/\\w+\\.py$'
p4768
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4769
(dp4770
g62
(dp4771
sg71
g3837
sg64
(lp4772
g57
(g78
g59
NtRp4773
(dp4774
g62
(dp4775
g82
g83
ssg71
g4769
sg64
(lp4776
S'postprocessing'
p4777
asbag57
(g78
g59
NtRp4778
(dp4779
g62
(dp4780
g89
g90
ssg71
g4769
sg64
(lp4781
S':'
asbag57
(g78
g59
NtRp4782
(dp4783
g62
(dp4784
sg71
g4769
sg64
(lp4785
g57
(g58
g59
NtRp4786
(dp4787
g62
(dp4788
g70
I5
ssg71
g4782
sg64
(lp4789
g57
(g66
g59
NtRp4790
(dp4791
g62
(dp4792
g70
I4
ssg71
Nsg64
(lp4793
sbasbasbasbag57
(g73
g59
NtRp4794
(dp4795
g62
(dp4796
sg71
g3837
sg64
(lp4797
g57
(g78
g59
NtRp4798
(dp4799
g62
(dp4800
g82
g83
ssg71
g4794
sg64
(lp4801
S'session_cookie_expires'
p4802
asbag57
(g78
g59
NtRp4803
(dp4804
g62
(dp4805
g89
g90
ssg71
g4794
sg64
(lp4806
S':'
asbag57
(g78
g59
NtRp4807
(dp4808
g62
(dp4809
sg71
g4794
sg64
(lp4810
g57
(g58
g59
NtRp4811
(dp4812
g62
(dp4813
g70
I5
ssg71
g4807
sg64
(lp4814
S'None'
p4815
asbasbasbag57
(g73
g59
NtRp4816
(dp4817
g62
(dp4818
sg71
g3837
sg64
(lp4819
g57
(g78
g59
NtRp4820
(dp4821
g62
(dp4822
g82
g83
ssg71
g4816
sg64
(lp4823
S'session_data_name'
p4824
asbag57
(g78
g59
NtRp4825
(dp4826
g62
(dp4827
g89
g90
ssg71
g4816
sg64
(lp4828
S':'
asbag57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
sg71
g4816
sg64
(lp4832
g57
(g58
g59
NtRp4833
(dp4834
g62
(dp4835
g70
I5
ssg71
g4829
sg64
(lp4836
S'session_data_dev_bootstrap_ch'
p4837
asbasbasbag57
(g73
g59
NtRp4838
(dp4839
g62
(dp4840
sg71
g3837
sg64
(lp4841
g57
(g78
g59
NtRp4842
(dp4843
g62
(dp4844
g82
g83
ssg71
g4838
sg64
(lp4845
S'session_file'
p4846
asbag57
(g78
g59
NtRp4847
(dp4848
g62
(dp4849
g89
g90
ssg71
g4838
sg64
(lp4850
S':'
asbag57
(g78
g59
NtRp4851
(dp4852
g62
(dp4853
sg71
g4838
sg64
(lp4854
g57
(g58
g59
NtRp4855
(dp4856
g62
(dp4857
g70
I5
ssg71
g4851
sg64
(lp4858
S"<open file '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480', mode 'rb+' at 0xb0388128>"
p4859
asbasbasbag57
(g73
g59
NtRp4860
(dp4861
g62
(dp4862
sg71
g3837
sg64
(lp4863
g57
(g78
g59
NtRp4864
(dp4865
g62
(dp4866
g82
g83
ssg71
g4860
sg64
(lp4867
S'session_filename'
p4868
asbag57
(g78
g59
NtRp4869
(dp4870
g62
(dp4871
g89
g90
ssg71
g4860
sg64
(lp4872
S':'
asbag57
(g78
g59
NtRp4873
(dp4874
g62
(dp4875
sg71
g4860
sg64
(lp4876
g57
(g58
g59
NtRp4877
(dp4878
g62
(dp4879
g70
I5
ssg71
g4873
sg64
(lp4880
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p4881
asbasbasbag57
(g73
g59
NtRp4882
(dp4883
g62
(dp4884
sg71
g3837
sg64
(lp4885
g57
(g78
g59
NtRp4886
(dp4887
g62
(dp4888
g82
g83
ssg71
g4882
sg64
(lp4889
S'session_id'
p4890
asbag57
(g78
g59
NtRp4891
(dp4892
g62
(dp4893
g89
g90
ssg71
g4882
sg64
(lp4894
S':'
asbag57
(g78
g59
NtRp4895
(dp4896
g62
(dp4897
sg71
g4882
sg64
(lp4898
g57
(g58
g59
NtRp4899
(dp4900
g62
(dp4901
g70
I5
ssg71
g4895
sg64
(lp4902
g500
asbasbasbag57
(g73
g59
NtRp4903
(dp4904
g62
(dp4905
sg71
g3837
sg64
(lp4906
g57
(g78
g59
NtRp4907
(dp4908
g62
(dp4909
g82
g83
ssg71
g4903
sg64
(lp4910
S'session_id_name'
p4911
asbag57
(g78
g59
NtRp4912
(dp4913
g62
(dp4914
g89
g90
ssg71
g4903
sg64
(lp4915
S':'
asbag57
(g78
g59
NtRp4916
(dp4917
g62
(dp4918
sg71
g4903
sg64
(lp4919
g57
(g58
g59
NtRp4920
(dp4921
g62
(dp4922
g70
I5
ssg71
g4916
sg64
(lp4923
g3894
asbasbasbag57
(g73
g59
NtRp4924
(dp4925
g62
(dp4926
sg71
g3837
sg64
(lp4927
g57
(g78
g59
NtRp4928
(dp4929
g62
(dp4930
g82
g83
ssg71
g4924
sg64
(lp4931
S'session_locked'
p4932
asbag57
(g78
g59
NtRp4933
(dp4934
g62
(dp4935
g89
g90
ssg71
g4924
sg64
(lp4936
S':'
asbag57
(g78
g59
NtRp4937
(dp4938
g62
(dp4939
sg71
g4924
sg64
(lp4940
g57
(g58
g59
NtRp4941
(dp4942
g62
(dp4943
g70
I5
ssg71
g4937
sg64
(lp4944
g1630
asbasbasbag57
(g73
g59
NtRp4945
(dp4946
g62
(dp4947
sg71
g3837
sg64
(lp4948
g57
(g78
g59
NtRp4949
(dp4950
g62
(dp4951
g82
g83
ssg71
g4945
sg64
(lp4952
S'session_new'
p4953
asbag57
(g78
g59
NtRp4954
(dp4955
g62
(dp4956
g89
g90
ssg71
g4945
sg64
(lp4957
S':'
asbag57
(g78
g59
NtRp4958
(dp4959
g62
(dp4960
sg71
g4945
sg64
(lp4961
g57
(g58
g59
NtRp4962
(dp4963
g62
(dp4964
g70
I5
ssg71
g4958
sg64
(lp4965
g100
asbasbasbag57
(g73
g59
NtRp4966
(dp4967
g62
(dp4968
sg71
g3837
sg64
(lp4969
g57
(g78
g59
NtRp4970
(dp4971
g62
(dp4972
g82
g83
ssg71
g4966
sg64
(lp4973
S'session_storage_type'
p4974
asbag57
(g78
g59
NtRp4975
(dp4976
g62
(dp4977
g89
g90
ssg71
g4966
sg64
(lp4978
S':'
asbag57
(g78
g59
NtRp4979
(dp4980
g62
(dp4981
sg71
g4966
sg64
(lp4982
g57
(g58
g59
NtRp4983
(dp4984
g62
(dp4985
g70
I5
ssg71
g4979
sg64
(lp4986
g3083
asbasbasbag57
(g73
g59
NtRp4987
(dp4988
g62
(dp4989
sg71
g3837
sg64
(lp4990
g57
(g78
g59
NtRp4991
(dp4992
g62
(dp4993
g82
g83
ssg71
g4987
sg64
(lp4994
S'status'
p4995
asbag57
(g78
g59
NtRp4996
(dp4997
g62
(dp4998
g89
g90
ssg71
g4987
sg64
(lp4999
S':'
asbag57
(g78
g59
NtRp5000
(dp5001
g62
(dp5002
sg71
g4987
sg64
(lp5003
g57
(g58
g59
NtRp5004
(dp5005
g62
(dp5006
g70
I5
ssg71
g5000
sg64
(lp5007
S'200'
p5008
asbasbasbag57
(g73
g59
NtRp5009
(dp5010
g62
(dp5011
sg71
g3837
sg64
(lp5012
g57
(g78
g59
NtRp5013
(dp5014
g62
(dp5015
g82
g83
ssg71
g5009
sg64
(lp5016
S'subtitle'
p5017
asbag57
(g78
g59
NtRp5018
(dp5019
g62
(dp5020
g89
g90
ssg71
g5009
sg64
(lp5021
S':'
asbag57
(g78
g59
NtRp5022
(dp5023
g62
(dp5024
sg71
g5009
sg64
(lp5025
g57
(g58
g59
NtRp5026
(dp5027
g62
(dp5028
g70
I5
ssg71
g5022
sg64
(lp5029
g4457
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5030
asbasbasbag57
(g73
g59
NtRp5031
(dp5032
g62
(dp5033
sg71
g3837
sg64
(lp5034
g57
(g78
g59
NtRp5035
(dp5036
g62
(dp5037
g82
g83
ssg71
g5031
sg64
(lp5038
g3747
asbag57
(g78
g59
NtRp5039
(dp5040
g62
(dp5041
g89
g90
ssg71
g5031
sg64
(lp5042
S':'
asbag57
(g78
g59
NtRp5043
(dp5044
g62
(dp5045
sg71
g5031
sg64
(lp5046
g57
(g58
g59
NtRp5047
(dp5048
g62
(dp5049
g70
I5
ssg71
g5043
sg64
(lp5050
g122
asbasbasbag57
(g73
g59
NtRp5051
(dp5052
g62
(dp5053
sg71
g3837
sg64
(lp5054
g57
(g78
g59
NtRp5055
(dp5056
g62
(dp5057
g82
g83
ssg71
g5051
sg64
(lp5058
S'view'
p5059
asbag57
(g78
g59
NtRp5060
(dp5061
g62
(dp5062
g89
g90
ssg71
g5051
sg64
(lp5063
S':'
asbag57
(g78
g59
NtRp5064
(dp5065
g62
(dp5066
sg71
g5051
sg64
(lp5067
g57
(g58
g59
NtRp5068
(dp5069
g62
(dp5070
g70
I5
ssg71
g5064
sg64
(lp5071
S'default/ajx_publish.html'
p5072
asbasbasbasbasbsS'locals'
p5073
(dp5074
S'self'
p5075
S'<Table project (id,name,code,start_date,project_...e,project_journal_name,project_publication_date)>'
p5076
sS'key'
p5077
S"'publication_date'"
p5078
sssS'traceback'
p5079
S'Traceback (most recent call last):\n  File "/home/anil/Downloads/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1154, in <module>\n  File "/home/anil/Downloads/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 501, in ajx_publish\n    row = db(db.project.id == eid).update(project_status = "1",publication_date = now)\n  File "/home/anil/Downloads/web2py/gluon/dal.py", line 8924, in update\n    if any(f(self,update_fields) for f in table._before_update):\n  File "/home/anil/Downloads/web2py/gluon/dal.py", line 8924, in <genexpr>\n    if any(f(self,update_fields) for f in table._before_update):\n  File "/home/anil/Downloads/web2py/gluon/dal.py", line 8976, in delete_uploaded_files\n    fields = [f for f in fields if table[f].type == \'upload\'\n  File "/home/anil/Downloads/web2py/gluon/dal.py", line 7745, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'publication_date\'\n'
p5080
s.