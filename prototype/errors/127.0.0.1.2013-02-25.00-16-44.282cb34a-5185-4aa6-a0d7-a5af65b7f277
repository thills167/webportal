(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> getargs() takes exactly 3 arguments (2 given)"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"edit",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('getargs() takes exactly 3 arguments (2 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'getargs() takes exactly 3 arguments (2 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g67
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
g82
g83
ssg71
g210
sg64
(lp217
S'body'
p218
asbag57
(g78
g59
NtRp219
(dp220
g62
(dp221
g89
g90
ssg71
g210
sg64
(lp222
S':'
asbag57
(g78
g59
NtRp223
(dp224
g62
(dp225
sg71
g210
sg64
(lp226
g57
(g58
g59
NtRp227
(dp228
g62
(dp229
g70
I5
ssg71
g223
sg64
(lp230
S'<cStringIO.StringO object at 0xae9c3420>'
p231
asbasbasbag57
(g73
g59
NtRp232
(dp233
g62
(dp234
sg71
g67
sg64
(lp235
g57
(g78
g59
NtRp236
(dp237
g62
(dp238
g82
g83
ssg71
g232
sg64
(lp239
S'cid'
p240
asbag57
(g78
g59
NtRp241
(dp242
g62
(dp243
g89
g90
ssg71
g232
sg64
(lp244
S':'
asbag57
(g78
g59
NtRp245
(dp246
g62
(dp247
sg71
g232
sg64
(lp248
g57
(g58
g59
NtRp249
(dp250
g62
(dp251
g70
I5
ssg71
g245
sg64
(lp252
S'None'
p253
asbasbasbag57
(g73
g59
NtRp254
(dp255
g62
(dp256
sg71
g67
sg64
(lp257
g57
(g78
g59
NtRp258
(dp259
g62
(dp260
g82
g83
ssg71
g254
sg64
(lp261
S'client'
p262
asbag57
(g78
g59
NtRp263
(dp264
g62
(dp265
g89
g90
ssg71
g254
sg64
(lp266
S':'
asbag57
(g78
g59
NtRp267
(dp268
g62
(dp269
sg71
g254
sg64
(lp270
g57
(g58
g59
NtRp271
(dp272
g62
(dp273
g70
I5
ssg71
g267
sg64
(lp274
S'127.0.0.1'
p275
asbasbasbag57
(g73
g59
NtRp276
(dp277
g62
(dp278
sg71
g67
sg64
(lp279
g57
(g78
g59
NtRp280
(dp281
g62
(dp282
g82
g83
ssg71
g276
sg64
(lp283
S'controller'
p284
asbag57
(g78
g59
NtRp285
(dp286
g62
(dp287
g89
g90
ssg71
g276
sg64
(lp288
S':'
asbag57
(g78
g59
NtRp289
(dp290
g62
(dp291
sg71
g276
sg64
(lp292
g57
(g58
g59
NtRp293
(dp294
g62
(dp295
g70
I5
ssg71
g289
sg64
(lp296
S'default'
p297
asbasbasbag57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g67
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'cookies'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I5
ssg71
g311
sg64
(lp318
g57
(g66
g59
NtRp319
(dp320
g62
(dp321
g70
I4
ssg71
Nsg64
(lp322
g57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g319
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'session_id_admin'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I4
ssg71
g336
sg64
(lp343
S'127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb'
p344
ag57
(g66
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
Nsg64
(lp348
g57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g345
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'comment'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g345
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'domain'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g345
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'expires'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g345
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'httponly'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g345
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'max-age'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g345
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'path'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g345
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'secure'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g345
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'version'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g319
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'session_id_dev_bootstrap_ch'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I4
ssg71
g530
sg64
(lp537
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p538
ag57
(g66
g59
NtRp539
(dp540
g62
(dp541
g70
I3
ssg71
Nsg64
(lp542
g57
(g73
g59
NtRp543
(dp544
g62
(dp545
sg71
g539
sg64
(lp546
g57
(g78
g59
NtRp547
(dp548
g62
(dp549
g82
g83
ssg71
g543
sg64
(lp550
g357
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g543
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g543
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I3
ssg71
g555
sg64
(lp562
S''
asbasbasbag57
(g73
g59
NtRp563
(dp564
g62
(dp565
sg71
g539
sg64
(lp566
g57
(g78
g59
NtRp567
(dp568
g62
(dp569
g82
g83
ssg71
g563
sg64
(lp570
g378
asbag57
(g78
g59
NtRp571
(dp572
g62
(dp573
g89
g90
ssg71
g563
sg64
(lp574
S':'
asbag57
(g78
g59
NtRp575
(dp576
g62
(dp577
sg71
g563
sg64
(lp578
g57
(g58
g59
NtRp579
(dp580
g62
(dp581
g70
I3
ssg71
g575
sg64
(lp582
S''
asbasbasbag57
(g73
g59
NtRp583
(dp584
g62
(dp585
sg71
g539
sg64
(lp586
g57
(g78
g59
NtRp587
(dp588
g62
(dp589
g82
g83
ssg71
g583
sg64
(lp590
g399
asbag57
(g78
g59
NtRp591
(dp592
g62
(dp593
g89
g90
ssg71
g583
sg64
(lp594
S':'
asbag57
(g78
g59
NtRp595
(dp596
g62
(dp597
sg71
g583
sg64
(lp598
g57
(g58
g59
NtRp599
(dp600
g62
(dp601
g70
I3
ssg71
g595
sg64
(lp602
S''
asbasbasbag57
(g73
g59
NtRp603
(dp604
g62
(dp605
sg71
g539
sg64
(lp606
g57
(g78
g59
NtRp607
(dp608
g62
(dp609
g82
g83
ssg71
g603
sg64
(lp610
g420
asbag57
(g78
g59
NtRp611
(dp612
g62
(dp613
g89
g90
ssg71
g603
sg64
(lp614
S':'
asbag57
(g78
g59
NtRp615
(dp616
g62
(dp617
sg71
g603
sg64
(lp618
g57
(g58
g59
NtRp619
(dp620
g62
(dp621
g70
I3
ssg71
g615
sg64
(lp622
S''
asbasbasbag57
(g73
g59
NtRp623
(dp624
g62
(dp625
sg71
g539
sg64
(lp626
g57
(g78
g59
NtRp627
(dp628
g62
(dp629
g82
g83
ssg71
g623
sg64
(lp630
g441
asbag57
(g78
g59
NtRp631
(dp632
g62
(dp633
g89
g90
ssg71
g623
sg64
(lp634
S':'
asbag57
(g78
g59
NtRp635
(dp636
g62
(dp637
sg71
g623
sg64
(lp638
g57
(g58
g59
NtRp639
(dp640
g62
(dp641
g70
I3
ssg71
g635
sg64
(lp642
S''
asbasbasbag57
(g73
g59
NtRp643
(dp644
g62
(dp645
sg71
g539
sg64
(lp646
g57
(g78
g59
NtRp647
(dp648
g62
(dp649
g82
g83
ssg71
g643
sg64
(lp650
g462
asbag57
(g78
g59
NtRp651
(dp652
g62
(dp653
g89
g90
ssg71
g643
sg64
(lp654
S':'
asbag57
(g78
g59
NtRp655
(dp656
g62
(dp657
sg71
g643
sg64
(lp658
g57
(g58
g59
NtRp659
(dp660
g62
(dp661
g70
I3
ssg71
g655
sg64
(lp662
S''
asbasbasbag57
(g73
g59
NtRp663
(dp664
g62
(dp665
sg71
g539
sg64
(lp666
g57
(g78
g59
NtRp667
(dp668
g62
(dp669
g82
g83
ssg71
g663
sg64
(lp670
g483
asbag57
(g78
g59
NtRp671
(dp672
g62
(dp673
g89
g90
ssg71
g663
sg64
(lp674
S':'
asbag57
(g78
g59
NtRp675
(dp676
g62
(dp677
sg71
g663
sg64
(lp678
g57
(g58
g59
NtRp679
(dp680
g62
(dp681
g70
I3
ssg71
g675
sg64
(lp682
S''
asbasbasbag57
(g73
g59
NtRp683
(dp684
g62
(dp685
sg71
g539
sg64
(lp686
g57
(g78
g59
NtRp687
(dp688
g62
(dp689
g82
g83
ssg71
g683
sg64
(lp690
g504
asbag57
(g78
g59
NtRp691
(dp692
g62
(dp693
g89
g90
ssg71
g683
sg64
(lp694
S':'
asbag57
(g78
g59
NtRp695
(dp696
g62
(dp697
sg71
g683
sg64
(lp698
g57
(g58
g59
NtRp699
(dp700
g62
(dp701
g70
I3
ssg71
g695
sg64
(lp702
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp703
(dp704
g62
(dp705
sg71
g67
sg64
(lp706
g57
(g78
g59
NtRp707
(dp708
g62
(dp709
g82
g83
ssg71
g703
sg64
(lp710
S'env'
p711
asbag57
(g78
g59
NtRp712
(dp713
g62
(dp714
g89
g90
ssg71
g703
sg64
(lp715
S':'
asbag57
(g78
g59
NtRp716
(dp717
g62
(dp718
sg71
g703
sg64
(lp719
g57
(g58
g59
NtRp720
(dp721
g62
(dp722
g70
I5
ssg71
g716
sg64
(lp723
g57
(g66
g59
NtRp724
(dp725
g62
(dp726
g70
I4
ssg71
Nsg64
(lp727
g57
(g73
g59
NtRp728
(dp729
g62
(dp730
sg71
g724
sg64
(lp731
g57
(g78
g59
NtRp732
(dp733
g62
(dp734
g82
g83
ssg71
g728
sg64
(lp735
S'app_folders'
p736
asbag57
(g78
g59
NtRp737
(dp738
g62
(dp739
g89
g90
ssg71
g728
sg64
(lp740
S':'
asbag57
(g78
g59
NtRp741
(dp742
g62
(dp743
sg71
g728
sg64
(lp744
g57
(g58
g59
NtRp745
(dp746
g62
(dp747
g70
I4
ssg71
g741
sg64
(lp748
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p749
asbasbasbag57
(g73
g59
NtRp750
(dp751
g62
(dp752
sg71
g724
sg64
(lp753
g57
(g78
g59
NtRp754
(dp755
g62
(dp756
g82
g83
ssg71
g750
sg64
(lp757
S'applications_parent'
p758
asbag57
(g78
g59
NtRp759
(dp760
g62
(dp761
g89
g90
ssg71
g750
sg64
(lp762
S':'
asbag57
(g78
g59
NtRp763
(dp764
g62
(dp765
sg71
g750
sg64
(lp766
g57
(g58
g59
NtRp767
(dp768
g62
(dp769
g70
I4
ssg71
g763
sg64
(lp770
S'/home/anil/bootstrap/web2py'
p771
asbasbasbag57
(g73
g59
NtRp772
(dp773
g62
(dp774
sg71
g724
sg64
(lp775
g57
(g78
g59
NtRp776
(dp777
g62
(dp778
g82
g83
ssg71
g772
sg64
(lp779
S'cmd_args'
p780
asbag57
(g78
g59
NtRp781
(dp782
g62
(dp783
g89
g90
ssg71
g772
sg64
(lp784
S':'
asbag57
(g78
g59
NtRp785
(dp786
g62
(dp787
sg71
g772
sg64
(lp788
g57
(g58
g59
NtRp789
(dp790
g62
(dp791
g70
I4
ssg71
g785
sg64
(lp792
g57
(g66
g59
NtRp793
(dp794
g62
(dp795
g70
I3
ssg71
Nsg64
(lp796
sbasbasbasbag57
(g73
g59
NtRp797
(dp798
g62
(dp799
sg71
g724
sg64
(lp800
g57
(g78
g59
NtRp801
(dp802
g62
(dp803
g82
g83
ssg71
g797
sg64
(lp804
S'cmd_options'
p805
asbag57
(g78
g59
NtRp806
(dp807
g62
(dp808
g89
g90
ssg71
g797
sg64
(lp809
S':'
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
sg71
g797
sg64
(lp813
g57
(g58
g59
NtRp814
(dp815
g62
(dp816
g70
I4
ssg71
g810
sg64
(lp817
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p818
asbasbasbag57
(g73
g59
NtRp819
(dp820
g62
(dp821
sg71
g724
sg64
(lp822
g57
(g78
g59
NtRp823
(dp824
g62
(dp825
g82
g83
ssg71
g819
sg64
(lp826
S'db_sessions'
p827
asbag57
(g78
g59
NtRp828
(dp829
g62
(dp830
g89
g90
ssg71
g819
sg64
(lp831
S':'
asbag57
(g78
g59
NtRp832
(dp833
g62
(dp834
sg71
g819
sg64
(lp835
g57
(g58
g59
NtRp836
(dp837
g62
(dp838
g70
I4
ssg71
g832
sg64
(lp839
S'set([])'
p840
asbasbasbag57
(g73
g59
NtRp841
(dp842
g62
(dp843
sg71
g724
sg64
(lp844
g57
(g78
g59
NtRp845
(dp846
g62
(dp847
g82
g83
ssg71
g841
sg64
(lp848
S'debugging'
p849
asbag57
(g78
g59
NtRp850
(dp851
g62
(dp852
g89
g90
ssg71
g841
sg64
(lp853
S':'
asbag57
(g78
g59
NtRp854
(dp855
g62
(dp856
sg71
g841
sg64
(lp857
g57
(g58
g59
NtRp858
(dp859
g62
(dp860
g70
I4
ssg71
g854
sg64
(lp861
g100
asbasbasbag57
(g73
g59
NtRp862
(dp863
g62
(dp864
sg71
g724
sg64
(lp865
g57
(g78
g59
NtRp866
(dp867
g62
(dp868
g82
g83
ssg71
g862
sg64
(lp869
S'gluon_parent'
p870
asbag57
(g78
g59
NtRp871
(dp872
g62
(dp873
g89
g90
ssg71
g862
sg64
(lp874
S':'
asbag57
(g78
g59
NtRp875
(dp876
g62
(dp877
sg71
g862
sg64
(lp878
g57
(g58
g59
NtRp879
(dp880
g62
(dp881
g70
I4
ssg71
g875
sg64
(lp882
S'/home/anil/bootstrap/web2py'
p883
asbasbasbag57
(g73
g59
NtRp884
(dp885
g62
(dp886
sg71
g724
sg64
(lp887
g57
(g78
g59
NtRp888
(dp889
g62
(dp890
g82
g83
ssg71
g884
sg64
(lp891
S'http_accept'
p892
asbag57
(g78
g59
NtRp893
(dp894
g62
(dp895
g89
g90
ssg71
g884
sg64
(lp896
S':'
asbag57
(g78
g59
NtRp897
(dp898
g62
(dp899
sg71
g884
sg64
(lp900
g57
(g58
g59
NtRp901
(dp902
g62
(dp903
g70
I4
ssg71
g897
sg64
(lp904
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p905
asbasbasbag57
(g73
g59
NtRp906
(dp907
g62
(dp908
sg71
g724
sg64
(lp909
g57
(g78
g59
NtRp910
(dp911
g62
(dp912
g82
g83
ssg71
g906
sg64
(lp913
S'http_accept_charset'
p914
asbag57
(g78
g59
NtRp915
(dp916
g62
(dp917
g89
g90
ssg71
g906
sg64
(lp918
S':'
asbag57
(g78
g59
NtRp919
(dp920
g62
(dp921
sg71
g906
sg64
(lp922
g57
(g58
g59
NtRp923
(dp924
g62
(dp925
g70
I4
ssg71
g919
sg64
(lp926
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p927
asbasbasbag57
(g73
g59
NtRp928
(dp929
g62
(dp930
sg71
g724
sg64
(lp931
g57
(g78
g59
NtRp932
(dp933
g62
(dp934
g82
g83
ssg71
g928
sg64
(lp935
S'http_accept_encoding'
p936
asbag57
(g78
g59
NtRp937
(dp938
g62
(dp939
g89
g90
ssg71
g928
sg64
(lp940
S':'
asbag57
(g78
g59
NtRp941
(dp942
g62
(dp943
sg71
g928
sg64
(lp944
g57
(g58
g59
NtRp945
(dp946
g62
(dp947
g70
I4
ssg71
g941
sg64
(lp948
S'gzip,deflate,sdch'
p949
asbasbasbag57
(g73
g59
NtRp950
(dp951
g62
(dp952
sg71
g724
sg64
(lp953
g57
(g78
g59
NtRp954
(dp955
g62
(dp956
g82
g83
ssg71
g950
sg64
(lp957
S'http_accept_language'
p958
asbag57
(g78
g59
NtRp959
(dp960
g62
(dp961
g89
g90
ssg71
g950
sg64
(lp962
S':'
asbag57
(g78
g59
NtRp963
(dp964
g62
(dp965
sg71
g950
sg64
(lp966
g57
(g58
g59
NtRp967
(dp968
g62
(dp969
g70
I4
ssg71
g963
sg64
(lp970
S'en-US,en;q=0.8'
p971
asbasbasbag57
(g73
g59
NtRp972
(dp973
g62
(dp974
sg71
g724
sg64
(lp975
g57
(g78
g59
NtRp976
(dp977
g62
(dp978
g82
g83
ssg71
g972
sg64
(lp979
S'http_connection'
p980
asbag57
(g78
g59
NtRp981
(dp982
g62
(dp983
g89
g90
ssg71
g972
sg64
(lp984
S':'
asbag57
(g78
g59
NtRp985
(dp986
g62
(dp987
sg71
g972
sg64
(lp988
g57
(g58
g59
NtRp989
(dp990
g62
(dp991
g70
I4
ssg71
g985
sg64
(lp992
S'keep-alive'
p993
asbasbasbag57
(g73
g59
NtRp994
(dp995
g62
(dp996
sg71
g724
sg64
(lp997
g57
(g78
g59
NtRp998
(dp999
g62
(dp1000
g82
g83
ssg71
g994
sg64
(lp1001
S'http_cookie'
p1002
asbag57
(g78
g59
NtRp1003
(dp1004
g62
(dp1005
g89
g90
ssg71
g994
sg64
(lp1006
S':'
asbag57
(g78
g59
NtRp1007
(dp1008
g62
(dp1009
sg71
g994
sg64
(lp1010
g57
(g58
g59
NtRp1011
(dp1012
g62
(dp1013
g70
I4
ssg71
g1007
sg64
(lp1014
S'session_id_admin=127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1015
asbasbasbag57
(g73
g59
NtRp1016
(dp1017
g62
(dp1018
sg71
g724
sg64
(lp1019
g57
(g78
g59
NtRp1020
(dp1021
g62
(dp1022
g82
g83
ssg71
g1016
sg64
(lp1023
S'http_host'
p1024
asbag57
(g78
g59
NtRp1025
(dp1026
g62
(dp1027
g89
g90
ssg71
g1016
sg64
(lp1028
S':'
asbag57
(g78
g59
NtRp1029
(dp1030
g62
(dp1031
sg71
g1016
sg64
(lp1032
g57
(g58
g59
NtRp1033
(dp1034
g62
(dp1035
g70
I4
ssg71
g1029
sg64
(lp1036
S'127.0.0.1:8000'
p1037
asbasbasbag57
(g73
g59
NtRp1038
(dp1039
g62
(dp1040
sg71
g724
sg64
(lp1041
g57
(g78
g59
NtRp1042
(dp1043
g62
(dp1044
g82
g83
ssg71
g1038
sg64
(lp1045
S'http_referer'
p1046
asbag57
(g78
g59
NtRp1047
(dp1048
g62
(dp1049
g89
g90
ssg71
g1038
sg64
(lp1050
S':'
asbag57
(g78
g59
NtRp1051
(dp1052
g62
(dp1053
sg71
g1038
sg64
(lp1054
g57
(g58
g59
NtRp1055
(dp1056
g62
(dp1057
g70
I4
ssg71
g1051
sg64
(lp1058
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/2?_signature=314b646096021ef93c7d7dfda2c080811a06155b'
p1059
asbasbasbag57
(g73
g59
NtRp1060
(dp1061
g62
(dp1062
sg71
g724
sg64
(lp1063
g57
(g78
g59
NtRp1064
(dp1065
g62
(dp1066
g82
g83
ssg71
g1060
sg64
(lp1067
S'http_user_agent'
p1068
asbag57
(g78
g59
NtRp1069
(dp1070
g62
(dp1071
g89
g90
ssg71
g1060
sg64
(lp1072
S':'
asbag57
(g78
g59
NtRp1073
(dp1074
g62
(dp1075
sg71
g1060
sg64
(lp1076
g57
(g58
g59
NtRp1077
(dp1078
g62
(dp1079
g70
I4
ssg71
g1073
sg64
(lp1080
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1081
asbasbasbag57
(g73
g59
NtRp1082
(dp1083
g62
(dp1084
sg71
g724
sg64
(lp1085
g57
(g78
g59
NtRp1086
(dp1087
g62
(dp1088
g82
g83
ssg71
g1082
sg64
(lp1089
S'is_jython'
p1090
asbag57
(g78
g59
NtRp1091
(dp1092
g62
(dp1093
g89
g90
ssg71
g1082
sg64
(lp1094
S':'
asbag57
(g78
g59
NtRp1095
(dp1096
g62
(dp1097
sg71
g1082
sg64
(lp1098
g57
(g58
g59
NtRp1099
(dp1100
g62
(dp1101
g70
I4
ssg71
g1095
sg64
(lp1102
g100
asbasbasbag57
(g73
g59
NtRp1103
(dp1104
g62
(dp1105
sg71
g724
sg64
(lp1106
g57
(g78
g59
NtRp1107
(dp1108
g62
(dp1109
g82
g83
ssg71
g1103
sg64
(lp1110
S'is_pypy'
p1111
asbag57
(g78
g59
NtRp1112
(dp1113
g62
(dp1114
g89
g90
ssg71
g1103
sg64
(lp1115
S':'
asbag57
(g78
g59
NtRp1116
(dp1117
g62
(dp1118
sg71
g1103
sg64
(lp1119
g57
(g58
g59
NtRp1120
(dp1121
g62
(dp1122
g70
I4
ssg71
g1116
sg64
(lp1123
g100
asbasbasbag57
(g73
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g724
sg64
(lp1127
g57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
g82
g83
ssg71
g1124
sg64
(lp1131
S'local_hosts'
p1132
asbag57
(g78
g59
NtRp1133
(dp1134
g62
(dp1135
g89
g90
ssg71
g1124
sg64
(lp1136
S':'
asbag57
(g78
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1124
sg64
(lp1140
g57
(g58
g59
NtRp1141
(dp1142
g62
(dp1143
g70
I4
ssg71
g1137
sg64
(lp1144
g57
(g66
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I3
ssg71
Nsg64
(lp1148
g57
(g73
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1145
sg64
(lp1152
g57
(g78
g59
NtRp1153
(dp1154
g62
(dp1155
sg71
g1149
sg64
(lp1156
g57
(g58
g59
NtRp1157
(dp1158
g62
(dp1159
g70
I3
ssg71
g1153
sg64
(lp1160
S'::1'
p1161
asbasbasbag57
(g73
g59
NtRp1162
(dp1163
g62
(dp1164
sg71
g1145
sg64
(lp1165
g57
(g78
g59
NtRp1166
(dp1167
g62
(dp1168
sg71
g1162
sg64
(lp1169
g57
(g58
g59
NtRp1170
(dp1171
g62
(dp1172
g70
I3
ssg71
g1166
sg64
(lp1173
S'127.0.1.1'
p1174
asbasbasbag57
(g73
g59
NtRp1175
(dp1176
g62
(dp1177
sg71
g1145
sg64
(lp1178
g57
(g78
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g1175
sg64
(lp1182
g57
(g58
g59
NtRp1183
(dp1184
g62
(dp1185
g70
I3
ssg71
g1179
sg64
(lp1186
S'::ffff:127.0.0.1'
p1187
asbasbasbag57
(g73
g59
NtRp1188
(dp1189
g62
(dp1190
sg71
g1145
sg64
(lp1191
g57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1188
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I3
ssg71
g1192
sg64
(lp1199
S'127.0.0.1'
p1200
asbasbasbag57
(g73
g59
NtRp1201
(dp1202
g62
(dp1203
sg71
g1145
sg64
(lp1204
g57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
sg71
g1201
sg64
(lp1208
g57
(g58
g59
NtRp1209
(dp1210
g62
(dp1211
g70
I3
ssg71
g1205
sg64
(lp1212
S'anil-Inspiron-1525'
p1213
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1214
(dp1215
g62
(dp1216
sg71
g724
sg64
(lp1217
g57
(g78
g59
NtRp1218
(dp1219
g62
(dp1220
g82
g83
ssg71
g1214
sg64
(lp1221
S'path_info'
p1222
asbag57
(g78
g59
NtRp1223
(dp1224
g62
(dp1225
g89
g90
ssg71
g1214
sg64
(lp1226
S':'
asbag57
(g78
g59
NtRp1227
(dp1228
g62
(dp1229
sg71
g1214
sg64
(lp1230
g57
(g58
g59
NtRp1231
(dp1232
g62
(dp1233
g70
I4
ssg71
g1227
sg64
(lp1234
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1'
p1235
asbasbasbag57
(g73
g59
NtRp1236
(dp1237
g62
(dp1238
sg71
g724
sg64
(lp1239
g57
(g78
g59
NtRp1240
(dp1241
g62
(dp1242
g82
g83
ssg71
g1236
sg64
(lp1243
S'query_string'
p1244
asbag57
(g78
g59
NtRp1245
(dp1246
g62
(dp1247
g89
g90
ssg71
g1236
sg64
(lp1248
S':'
asbag57
(g78
g59
NtRp1249
(dp1250
g62
(dp1251
sg71
g1236
sg64
(lp1252
g57
(g58
g59
NtRp1253
(dp1254
g62
(dp1255
g70
I4
ssg71
g1249
sg64
(lp1256
S'_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1257
asbasbasbag57
(g73
g59
NtRp1258
(dp1259
g62
(dp1260
sg71
g724
sg64
(lp1261
g57
(g78
g59
NtRp1262
(dp1263
g62
(dp1264
g82
g83
ssg71
g1258
sg64
(lp1265
S'remote_addr'
p1266
asbag57
(g78
g59
NtRp1267
(dp1268
g62
(dp1269
g89
g90
ssg71
g1258
sg64
(lp1270
S':'
asbag57
(g78
g59
NtRp1271
(dp1272
g62
(dp1273
sg71
g1258
sg64
(lp1274
g57
(g58
g59
NtRp1275
(dp1276
g62
(dp1277
g70
I4
ssg71
g1271
sg64
(lp1278
g275
asbasbasbag57
(g73
g59
NtRp1279
(dp1280
g62
(dp1281
sg71
g724
sg64
(lp1282
g57
(g78
g59
NtRp1283
(dp1284
g62
(dp1285
g82
g83
ssg71
g1279
sg64
(lp1286
S'remote_port'
p1287
asbag57
(g78
g59
NtRp1288
(dp1289
g62
(dp1290
g89
g90
ssg71
g1279
sg64
(lp1291
S':'
asbag57
(g78
g59
NtRp1292
(dp1293
g62
(dp1294
sg71
g1279
sg64
(lp1295
g57
(g58
g59
NtRp1296
(dp1297
g62
(dp1298
g70
I4
ssg71
g1292
sg64
(lp1299
S'43113'
p1300
asbasbasbag57
(g73
g59
NtRp1301
(dp1302
g62
(dp1303
sg71
g724
sg64
(lp1304
g57
(g78
g59
NtRp1305
(dp1306
g62
(dp1307
g82
g83
ssg71
g1301
sg64
(lp1308
S'request_method'
p1309
asbag57
(g78
g59
NtRp1310
(dp1311
g62
(dp1312
g89
g90
ssg71
g1301
sg64
(lp1313
S':'
asbag57
(g78
g59
NtRp1314
(dp1315
g62
(dp1316
sg71
g1301
sg64
(lp1317
g57
(g58
g59
NtRp1318
(dp1319
g62
(dp1320
g70
I4
ssg71
g1314
sg64
(lp1321
S'GET'
p1322
asbasbasbag57
(g73
g59
NtRp1323
(dp1324
g62
(dp1325
sg71
g724
sg64
(lp1326
g57
(g78
g59
NtRp1327
(dp1328
g62
(dp1329
g82
g83
ssg71
g1323
sg64
(lp1330
S'request_uri'
p1331
asbag57
(g78
g59
NtRp1332
(dp1333
g62
(dp1334
g89
g90
ssg71
g1323
sg64
(lp1335
S':'
asbag57
(g78
g59
NtRp1336
(dp1337
g62
(dp1338
sg71
g1323
sg64
(lp1339
g57
(g58
g59
NtRp1340
(dp1341
g62
(dp1342
g70
I4
ssg71
g1336
sg64
(lp1343
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1344
asbasbasbag57
(g73
g59
NtRp1345
(dp1346
g62
(dp1347
sg71
g724
sg64
(lp1348
g57
(g78
g59
NtRp1349
(dp1350
g62
(dp1351
g82
g83
ssg71
g1345
sg64
(lp1352
S'script_name'
p1353
asbag57
(g78
g59
NtRp1354
(dp1355
g62
(dp1356
g89
g90
ssg71
g1345
sg64
(lp1357
S':'
asbag57
(g78
g59
NtRp1358
(dp1359
g62
(dp1360
sg71
g1345
sg64
(lp1361
g57
(g58
g59
NtRp1362
(dp1363
g62
(dp1364
g70
I4
ssg71
g1358
sg64
(lp1365
S''
asbasbasbag57
(g73
g59
NtRp1366
(dp1367
g62
(dp1368
sg71
g724
sg64
(lp1369
g57
(g78
g59
NtRp1370
(dp1371
g62
(dp1372
g82
g83
ssg71
g1366
sg64
(lp1373
S'server_name'
p1374
asbag57
(g78
g59
NtRp1375
(dp1376
g62
(dp1377
g89
g90
ssg71
g1366
sg64
(lp1378
S':'
asbag57
(g78
g59
NtRp1379
(dp1380
g62
(dp1381
sg71
g1366
sg64
(lp1382
g57
(g58
g59
NtRp1383
(dp1384
g62
(dp1385
g70
I4
ssg71
g1379
sg64
(lp1386
S'anil-Inspiron-1525'
p1387
asbasbasbag57
(g73
g59
NtRp1388
(dp1389
g62
(dp1390
sg71
g724
sg64
(lp1391
g57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
g82
g83
ssg71
g1388
sg64
(lp1395
S'server_port'
p1396
asbag57
(g78
g59
NtRp1397
(dp1398
g62
(dp1399
g89
g90
ssg71
g1388
sg64
(lp1400
S':'
asbag57
(g78
g59
NtRp1401
(dp1402
g62
(dp1403
sg71
g1388
sg64
(lp1404
g57
(g58
g59
NtRp1405
(dp1406
g62
(dp1407
g70
I4
ssg71
g1401
sg64
(lp1408
S'8000'
p1409
asbasbasbag57
(g73
g59
NtRp1410
(dp1411
g62
(dp1412
sg71
g724
sg64
(lp1413
g57
(g78
g59
NtRp1414
(dp1415
g62
(dp1416
g82
g83
ssg71
g1410
sg64
(lp1417
S'server_protocol'
p1418
asbag57
(g78
g59
NtRp1419
(dp1420
g62
(dp1421
g89
g90
ssg71
g1410
sg64
(lp1422
S':'
asbag57
(g78
g59
NtRp1423
(dp1424
g62
(dp1425
sg71
g1410
sg64
(lp1426
g57
(g58
g59
NtRp1427
(dp1428
g62
(dp1429
g70
I4
ssg71
g1423
sg64
(lp1430
S'HTTP/1.1'
p1431
asbasbasbag57
(g73
g59
NtRp1432
(dp1433
g62
(dp1434
sg71
g724
sg64
(lp1435
g57
(g78
g59
NtRp1436
(dp1437
g62
(dp1438
g82
g83
ssg71
g1432
sg64
(lp1439
S'server_software'
p1440
asbag57
(g78
g59
NtRp1441
(dp1442
g62
(dp1443
g89
g90
ssg71
g1432
sg64
(lp1444
S':'
asbag57
(g78
g59
NtRp1445
(dp1446
g62
(dp1447
sg71
g1432
sg64
(lp1448
g57
(g58
g59
NtRp1449
(dp1450
g62
(dp1451
g70
I4
ssg71
g1445
sg64
(lp1452
S'Rocket 1.2.6'
p1453
asbasbasbag57
(g73
g59
NtRp1454
(dp1455
g62
(dp1456
sg71
g724
sg64
(lp1457
g57
(g78
g59
NtRp1458
(dp1459
g62
(dp1460
g82
g83
ssg71
g1454
sg64
(lp1461
S'web2py_path'
p1462
asbag57
(g78
g59
NtRp1463
(dp1464
g62
(dp1465
g89
g90
ssg71
g1454
sg64
(lp1466
S':'
asbag57
(g78
g59
NtRp1467
(dp1468
g62
(dp1469
sg71
g1454
sg64
(lp1470
g57
(g58
g59
NtRp1471
(dp1472
g62
(dp1473
g70
I4
ssg71
g1467
sg64
(lp1474
g771
asbasbasbag57
(g73
g59
NtRp1475
(dp1476
g62
(dp1477
sg71
g724
sg64
(lp1478
g57
(g78
g59
NtRp1479
(dp1480
g62
(dp1481
g82
g83
ssg71
g1475
sg64
(lp1482
S'web2py_version'
p1483
asbag57
(g78
g59
NtRp1484
(dp1485
g62
(dp1486
g89
g90
ssg71
g1475
sg64
(lp1487
S':'
asbag57
(g78
g59
NtRp1488
(dp1489
g62
(dp1490
sg71
g1475
sg64
(lp1491
g57
(g58
g59
NtRp1492
(dp1493
g62
(dp1494
g70
I4
ssg71
g1488
sg64
(lp1495
g57
(g66
g59
NtRp1496
(dp1497
g62
(dp1498
g70
I3
ssg71
Nsg64
(lp1499
g57
(g73
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1496
sg64
(lp1503
g57
(g78
g59
NtRp1504
(dp1505
g62
(dp1506
sg71
g1500
sg64
(lp1507
g57
(g58
g59
NtRp1508
(dp1509
g62
(dp1510
g70
I3
ssg71
g1504
sg64
(lp1511
S'2'
asbasbasbag57
(g73
g59
NtRp1512
(dp1513
g62
(dp1514
sg71
g1496
sg64
(lp1515
g57
(g78
g59
NtRp1516
(dp1517
g62
(dp1518
sg71
g1512
sg64
(lp1519
g57
(g58
g59
NtRp1520
(dp1521
g62
(dp1522
g70
I3
ssg71
g1516
sg64
(lp1523
S'3'
asbasbasbag57
(g73
g59
NtRp1524
(dp1525
g62
(dp1526
sg71
g1496
sg64
(lp1527
g57
(g78
g59
NtRp1528
(dp1529
g62
(dp1530
sg71
g1524
sg64
(lp1531
g57
(g58
g59
NtRp1532
(dp1533
g62
(dp1534
g70
I3
ssg71
g1528
sg64
(lp1535
S'2'
asbasbasbag57
(g73
g59
NtRp1536
(dp1537
g62
(dp1538
sg71
g1496
sg64
(lp1539
g57
(g78
g59
NtRp1540
(dp1541
g62
(dp1542
sg71
g1536
sg64
(lp1543
g57
(g58
g59
NtRp1544
(dp1545
g62
(dp1546
g70
I3
ssg71
g1540
sg64
(lp1547
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1548
asbasbasbag57
(g73
g59
NtRp1549
(dp1550
g62
(dp1551
sg71
g1496
sg64
(lp1552
g57
(g78
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g1549
sg64
(lp1556
g57
(g58
g59
NtRp1557
(dp1558
g62
(dp1559
g70
I3
ssg71
g1553
sg64
(lp1560
S'stable'
p1561
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1562
(dp1563
g62
(dp1564
sg71
g724
sg64
(lp1565
g57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
g82
g83
ssg71
g1562
sg64
(lp1569
S'wsgi_errors'
p1570
asbag57
(g78
g59
NtRp1571
(dp1572
g62
(dp1573
g89
g90
ssg71
g1562
sg64
(lp1574
S':'
asbag57
(g78
g59
NtRp1575
(dp1576
g62
(dp1577
sg71
g1562
sg64
(lp1578
g57
(g58
g59
NtRp1579
(dp1580
g62
(dp1581
g70
I4
ssg71
g1575
sg64
(lp1582
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1583
asbasbasbag57
(g73
g59
NtRp1584
(dp1585
g62
(dp1586
sg71
g724
sg64
(lp1587
g57
(g78
g59
NtRp1588
(dp1589
g62
(dp1590
g82
g83
ssg71
g1584
sg64
(lp1591
S'wsgi_file_wrapper'
p1592
asbag57
(g78
g59
NtRp1593
(dp1594
g62
(dp1595
g89
g90
ssg71
g1584
sg64
(lp1596
S':'
asbag57
(g78
g59
NtRp1597
(dp1598
g62
(dp1599
sg71
g1584
sg64
(lp1600
g57
(g58
g59
NtRp1601
(dp1602
g62
(dp1603
g70
I4
ssg71
g1597
sg64
(lp1604
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1605
asbasbasbag57
(g73
g59
NtRp1606
(dp1607
g62
(dp1608
sg71
g724
sg64
(lp1609
g57
(g78
g59
NtRp1610
(dp1611
g62
(dp1612
g82
g83
ssg71
g1606
sg64
(lp1613
S'wsgi_input'
p1614
asbag57
(g78
g59
NtRp1615
(dp1616
g62
(dp1617
g89
g90
ssg71
g1606
sg64
(lp1618
S':'
asbag57
(g78
g59
NtRp1619
(dp1620
g62
(dp1621
sg71
g1606
sg64
(lp1622
g57
(g58
g59
NtRp1623
(dp1624
g62
(dp1625
g70
I4
ssg71
g1619
sg64
(lp1626
S'<socket._fileobject object at 0xafe139ac>'
p1627
asbasbasbag57
(g73
g59
NtRp1628
(dp1629
g62
(dp1630
sg71
g724
sg64
(lp1631
g57
(g78
g59
NtRp1632
(dp1633
g62
(dp1634
g82
g83
ssg71
g1628
sg64
(lp1635
S'wsgi_multiprocess'
p1636
asbag57
(g78
g59
NtRp1637
(dp1638
g62
(dp1639
g89
g90
ssg71
g1628
sg64
(lp1640
S':'
asbag57
(g78
g59
NtRp1641
(dp1642
g62
(dp1643
sg71
g1628
sg64
(lp1644
g57
(g58
g59
NtRp1645
(dp1646
g62
(dp1647
g70
I4
ssg71
g1641
sg64
(lp1648
g100
asbasbasbag57
(g73
g59
NtRp1649
(dp1650
g62
(dp1651
sg71
g724
sg64
(lp1652
g57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
g82
g83
ssg71
g1649
sg64
(lp1656
S'wsgi_multithread'
p1657
asbag57
(g78
g59
NtRp1658
(dp1659
g62
(dp1660
g89
g90
ssg71
g1649
sg64
(lp1661
S':'
asbag57
(g78
g59
NtRp1662
(dp1663
g62
(dp1664
sg71
g1649
sg64
(lp1665
g57
(g58
g59
NtRp1666
(dp1667
g62
(dp1668
g70
I4
ssg71
g1662
sg64
(lp1669
S'True'
p1670
asbasbasbag57
(g73
g59
NtRp1671
(dp1672
g62
(dp1673
sg71
g724
sg64
(lp1674
g57
(g78
g59
NtRp1675
(dp1676
g62
(dp1677
g82
g83
ssg71
g1671
sg64
(lp1678
S'wsgi_run_once'
p1679
asbag57
(g78
g59
NtRp1680
(dp1681
g62
(dp1682
g89
g90
ssg71
g1671
sg64
(lp1683
S':'
asbag57
(g78
g59
NtRp1684
(dp1685
g62
(dp1686
sg71
g1671
sg64
(lp1687
g57
(g58
g59
NtRp1688
(dp1689
g62
(dp1690
g70
I4
ssg71
g1684
sg64
(lp1691
g100
asbasbasbag57
(g73
g59
NtRp1692
(dp1693
g62
(dp1694
sg71
g724
sg64
(lp1695
g57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
g82
g83
ssg71
g1692
sg64
(lp1699
S'wsgi_url_scheme'
p1700
asbag57
(g78
g59
NtRp1701
(dp1702
g62
(dp1703
g89
g90
ssg71
g1692
sg64
(lp1704
S':'
asbag57
(g78
g59
NtRp1705
(dp1706
g62
(dp1707
sg71
g1692
sg64
(lp1708
g57
(g58
g59
NtRp1709
(dp1710
g62
(dp1711
g70
I4
ssg71
g1705
sg64
(lp1712
S'http'
p1713
asbasbasbag57
(g73
g59
NtRp1714
(dp1715
g62
(dp1716
sg71
g724
sg64
(lp1717
g57
(g78
g59
NtRp1718
(dp1719
g62
(dp1720
g82
g83
ssg71
g1714
sg64
(lp1721
S'wsgi_version'
p1722
asbag57
(g78
g59
NtRp1723
(dp1724
g62
(dp1725
g89
g90
ssg71
g1714
sg64
(lp1726
S':'
asbag57
(g78
g59
NtRp1727
(dp1728
g62
(dp1729
sg71
g1714
sg64
(lp1730
g57
(g58
g59
NtRp1731
(dp1732
g62
(dp1733
g70
I4
ssg71
g1727
sg64
(lp1734
g57
(g66
g59
NtRp1735
(dp1736
g62
(dp1737
g70
I3
ssg71
Nsg64
(lp1738
g57
(g73
g59
NtRp1739
(dp1740
g62
(dp1741
sg71
g1735
sg64
(lp1742
g57
(g78
g59
NtRp1743
(dp1744
g62
(dp1745
sg71
g1739
sg64
(lp1746
g57
(g58
g59
NtRp1747
(dp1748
g62
(dp1749
g70
I3
ssg71
g1743
sg64
(lp1750
S'1'
asbasbasbag57
(g73
g59
NtRp1751
(dp1752
g62
(dp1753
sg71
g1735
sg64
(lp1754
g57
(g78
g59
NtRp1755
(dp1756
g62
(dp1757
sg71
g1751
sg64
(lp1758
g57
(g58
g59
NtRp1759
(dp1760
g62
(dp1761
g70
I3
ssg71
g1755
sg64
(lp1762
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1763
(dp1764
g62
(dp1765
sg71
g67
sg64
(lp1766
g57
(g78
g59
NtRp1767
(dp1768
g62
(dp1769
g82
g83
ssg71
g1763
sg64
(lp1770
S'extension'
p1771
asbag57
(g78
g59
NtRp1772
(dp1773
g62
(dp1774
g89
g90
ssg71
g1763
sg64
(lp1775
S':'
asbag57
(g78
g59
NtRp1776
(dp1777
g62
(dp1778
sg71
g1763
sg64
(lp1779
g57
(g58
g59
NtRp1780
(dp1781
g62
(dp1782
g70
I5
ssg71
g1776
sg64
(lp1783
S'html'
p1784
asbasbasbag57
(g73
g59
NtRp1785
(dp1786
g62
(dp1787
sg71
g67
sg64
(lp1788
g57
(g78
g59
NtRp1789
(dp1790
g62
(dp1791
g82
g83
ssg71
g1785
sg64
(lp1792
S'folder'
p1793
asbag57
(g78
g59
NtRp1794
(dp1795
g62
(dp1796
g89
g90
ssg71
g1785
sg64
(lp1797
S':'
asbag57
(g78
g59
NtRp1798
(dp1799
g62
(dp1800
sg71
g1785
sg64
(lp1801
g57
(g58
g59
NtRp1802
(dp1803
g62
(dp1804
g70
I5
ssg71
g1798
sg64
(lp1805
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1806
asbasbasbag57
(g73
g59
NtRp1807
(dp1808
g62
(dp1809
sg71
g67
sg64
(lp1810
g57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
g82
g83
ssg71
g1807
sg64
(lp1814
S'function'
p1815
asbag57
(g78
g59
NtRp1816
(dp1817
g62
(dp1818
g89
g90
ssg71
g1807
sg64
(lp1819
S':'
asbag57
(g78
g59
NtRp1820
(dp1821
g62
(dp1822
sg71
g1807
sg64
(lp1823
g57
(g58
g59
NtRp1824
(dp1825
g62
(dp1826
g70
I5
ssg71
g1820
sg64
(lp1827
S'list_all_dev_projects'
p1828
asbasbasbag57
(g73
g59
NtRp1829
(dp1830
g62
(dp1831
sg71
g67
sg64
(lp1832
g57
(g78
g59
NtRp1833
(dp1834
g62
(dp1835
g82
g83
ssg71
g1829
sg64
(lp1836
S'get_vars'
p1837
asbag57
(g78
g59
NtRp1838
(dp1839
g62
(dp1840
g89
g90
ssg71
g1829
sg64
(lp1841
S':'
asbag57
(g78
g59
NtRp1842
(dp1843
g62
(dp1844
sg71
g1829
sg64
(lp1845
g57
(g58
g59
NtRp1846
(dp1847
g62
(dp1848
g70
I5
ssg71
g1842
sg64
(lp1849
g57
(g66
g59
NtRp1850
(dp1851
g62
(dp1852
g70
I4
ssg71
Nsg64
(lp1853
sbasbasbasbag57
(g73
g59
NtRp1854
(dp1855
g62
(dp1856
sg71
g67
sg64
(lp1857
g57
(g78
g59
NtRp1858
(dp1859
g62
(dp1860
g82
g83
ssg71
g1854
sg64
(lp1861
S'global_settings'
p1862
asbag57
(g78
g59
NtRp1863
(dp1864
g62
(dp1865
g89
g90
ssg71
g1854
sg64
(lp1866
S':'
asbag57
(g78
g59
NtRp1867
(dp1868
g62
(dp1869
sg71
g1854
sg64
(lp1870
g57
(g58
g59
NtRp1871
(dp1872
g62
(dp1873
g70
I5
ssg71
g1867
sg64
(lp1874
g57
(g66
g59
NtRp1875
(dp1876
g62
(dp1877
g70
I4
ssg71
Nsg64
(lp1878
g57
(g73
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g1875
sg64
(lp1882
g57
(g78
g59
NtRp1883
(dp1884
g62
(dp1885
g82
g83
ssg71
g1879
sg64
(lp1886
g736
asbag57
(g78
g59
NtRp1887
(dp1888
g62
(dp1889
g89
g90
ssg71
g1879
sg64
(lp1890
S':'
asbag57
(g78
g59
NtRp1891
(dp1892
g62
(dp1893
sg71
g1879
sg64
(lp1894
g57
(g58
g59
NtRp1895
(dp1896
g62
(dp1897
g70
I4
ssg71
g1891
sg64
(lp1898
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1899
asbasbasbag57
(g73
g59
NtRp1900
(dp1901
g62
(dp1902
sg71
g1875
sg64
(lp1903
g57
(g78
g59
NtRp1904
(dp1905
g62
(dp1906
g82
g83
ssg71
g1900
sg64
(lp1907
g758
asbag57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
g89
g90
ssg71
g1900
sg64
(lp1911
S':'
asbag57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
sg71
g1900
sg64
(lp1915
g57
(g58
g59
NtRp1916
(dp1917
g62
(dp1918
g70
I4
ssg71
g1912
sg64
(lp1919
g771
asbasbasbag57
(g73
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1875
sg64
(lp1923
g57
(g78
g59
NtRp1924
(dp1925
g62
(dp1926
g82
g83
ssg71
g1920
sg64
(lp1927
g780
asbag57
(g78
g59
NtRp1928
(dp1929
g62
(dp1930
g89
g90
ssg71
g1920
sg64
(lp1931
S':'
asbag57
(g78
g59
NtRp1932
(dp1933
g62
(dp1934
sg71
g1920
sg64
(lp1935
g57
(g58
g59
NtRp1936
(dp1937
g62
(dp1938
g70
I4
ssg71
g1932
sg64
(lp1939
g57
(g66
g59
NtRp1940
(dp1941
g62
(dp1942
g70
I3
ssg71
Nsg64
(lp1943
sbasbasbasbag57
(g73
g59
NtRp1944
(dp1945
g62
(dp1946
sg71
g1875
sg64
(lp1947
g57
(g78
g59
NtRp1948
(dp1949
g62
(dp1950
g82
g83
ssg71
g1944
sg64
(lp1951
g805
asbag57
(g78
g59
NtRp1952
(dp1953
g62
(dp1954
g89
g90
ssg71
g1944
sg64
(lp1955
S':'
asbag57
(g78
g59
NtRp1956
(dp1957
g62
(dp1958
sg71
g1944
sg64
(lp1959
g57
(g58
g59
NtRp1960
(dp1961
g62
(dp1962
g70
I4
ssg71
g1956
sg64
(lp1963
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1964
asbasbasbag57
(g73
g59
NtRp1965
(dp1966
g62
(dp1967
sg71
g1875
sg64
(lp1968
g57
(g78
g59
NtRp1969
(dp1970
g62
(dp1971
g82
g83
ssg71
g1965
sg64
(lp1972
g827
asbag57
(g78
g59
NtRp1973
(dp1974
g62
(dp1975
g89
g90
ssg71
g1965
sg64
(lp1976
S':'
asbag57
(g78
g59
NtRp1977
(dp1978
g62
(dp1979
sg71
g1965
sg64
(lp1980
g57
(g58
g59
NtRp1981
(dp1982
g62
(dp1983
g70
I4
ssg71
g1977
sg64
(lp1984
S'set([])'
p1985
asbasbasbag57
(g73
g59
NtRp1986
(dp1987
g62
(dp1988
sg71
g1875
sg64
(lp1989
g57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
g82
g83
ssg71
g1986
sg64
(lp1993
g849
asbag57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
g89
g90
ssg71
g1986
sg64
(lp1997
S':'
asbag57
(g78
g59
NtRp1998
(dp1999
g62
(dp2000
sg71
g1986
sg64
(lp2001
g57
(g58
g59
NtRp2002
(dp2003
g62
(dp2004
g70
I4
ssg71
g1998
sg64
(lp2005
g100
asbasbasbag57
(g73
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1875
sg64
(lp2009
g57
(g78
g59
NtRp2010
(dp2011
g62
(dp2012
g82
g83
ssg71
g2006
sg64
(lp2013
g870
asbag57
(g78
g59
NtRp2014
(dp2015
g62
(dp2016
g89
g90
ssg71
g2006
sg64
(lp2017
S':'
asbag57
(g78
g59
NtRp2018
(dp2019
g62
(dp2020
sg71
g2006
sg64
(lp2021
g57
(g58
g59
NtRp2022
(dp2023
g62
(dp2024
g70
I4
ssg71
g2018
sg64
(lp2025
g883
asbasbasbag57
(g73
g59
NtRp2026
(dp2027
g62
(dp2028
sg71
g1875
sg64
(lp2029
g57
(g78
g59
NtRp2030
(dp2031
g62
(dp2032
g82
g83
ssg71
g2026
sg64
(lp2033
g1090
asbag57
(g78
g59
NtRp2034
(dp2035
g62
(dp2036
g89
g90
ssg71
g2026
sg64
(lp2037
S':'
asbag57
(g78
g59
NtRp2038
(dp2039
g62
(dp2040
sg71
g2026
sg64
(lp2041
g57
(g58
g59
NtRp2042
(dp2043
g62
(dp2044
g70
I4
ssg71
g2038
sg64
(lp2045
g100
asbasbasbag57
(g73
g59
NtRp2046
(dp2047
g62
(dp2048
sg71
g1875
sg64
(lp2049
g57
(g78
g59
NtRp2050
(dp2051
g62
(dp2052
g82
g83
ssg71
g2046
sg64
(lp2053
g1111
asbag57
(g78
g59
NtRp2054
(dp2055
g62
(dp2056
g89
g90
ssg71
g2046
sg64
(lp2057
S':'
asbag57
(g78
g59
NtRp2058
(dp2059
g62
(dp2060
sg71
g2046
sg64
(lp2061
g57
(g58
g59
NtRp2062
(dp2063
g62
(dp2064
g70
I4
ssg71
g2058
sg64
(lp2065
g100
asbasbasbag57
(g73
g59
NtRp2066
(dp2067
g62
(dp2068
sg71
g1875
sg64
(lp2069
g57
(g78
g59
NtRp2070
(dp2071
g62
(dp2072
g82
g83
ssg71
g2066
sg64
(lp2073
g1132
asbag57
(g78
g59
NtRp2074
(dp2075
g62
(dp2076
g89
g90
ssg71
g2066
sg64
(lp2077
S':'
asbag57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
sg71
g2066
sg64
(lp2081
g57
(g58
g59
NtRp2082
(dp2083
g62
(dp2084
g70
I4
ssg71
g2078
sg64
(lp2085
g57
(g66
g59
NtRp2086
(dp2087
g62
(dp2088
g70
I3
ssg71
Nsg64
(lp2089
g57
(g73
g59
NtRp2090
(dp2091
g62
(dp2092
sg71
g2086
sg64
(lp2093
g57
(g78
g59
NtRp2094
(dp2095
g62
(dp2096
sg71
g2090
sg64
(lp2097
g57
(g58
g59
NtRp2098
(dp2099
g62
(dp2100
g70
I3
ssg71
g2094
sg64
(lp2101
g1161
asbasbasbag57
(g73
g59
NtRp2102
(dp2103
g62
(dp2104
sg71
g2086
sg64
(lp2105
g57
(g78
g59
NtRp2106
(dp2107
g62
(dp2108
sg71
g2102
sg64
(lp2109
g57
(g58
g59
NtRp2110
(dp2111
g62
(dp2112
g70
I3
ssg71
g2106
sg64
(lp2113
g1174
asbasbasbag57
(g73
g59
NtRp2114
(dp2115
g62
(dp2116
sg71
g2086
sg64
(lp2117
g57
(g78
g59
NtRp2118
(dp2119
g62
(dp2120
sg71
g2114
sg64
(lp2121
g57
(g58
g59
NtRp2122
(dp2123
g62
(dp2124
g70
I3
ssg71
g2118
sg64
(lp2125
g1187
asbasbasbag57
(g73
g59
NtRp2126
(dp2127
g62
(dp2128
sg71
g2086
sg64
(lp2129
g57
(g78
g59
NtRp2130
(dp2131
g62
(dp2132
sg71
g2126
sg64
(lp2133
g57
(g58
g59
NtRp2134
(dp2135
g62
(dp2136
g70
I3
ssg71
g2130
sg64
(lp2137
g1200
asbasbasbag57
(g73
g59
NtRp2138
(dp2139
g62
(dp2140
sg71
g2086
sg64
(lp2141
g57
(g78
g59
NtRp2142
(dp2143
g62
(dp2144
sg71
g2138
sg64
(lp2145
g57
(g58
g59
NtRp2146
(dp2147
g62
(dp2148
g70
I3
ssg71
g2142
sg64
(lp2149
g1213
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g1875
sg64
(lp2153
g57
(g78
g59
NtRp2154
(dp2155
g62
(dp2156
g82
g83
ssg71
g2150
sg64
(lp2157
g1483
asbag57
(g78
g59
NtRp2158
(dp2159
g62
(dp2160
g89
g90
ssg71
g2150
sg64
(lp2161
S':'
asbag57
(g78
g59
NtRp2162
(dp2163
g62
(dp2164
sg71
g2150
sg64
(lp2165
g57
(g58
g59
NtRp2166
(dp2167
g62
(dp2168
g70
I4
ssg71
g2162
sg64
(lp2169
g57
(g66
g59
NtRp2170
(dp2171
g62
(dp2172
g70
I3
ssg71
Nsg64
(lp2173
g57
(g73
g59
NtRp2174
(dp2175
g62
(dp2176
sg71
g2170
sg64
(lp2177
g57
(g78
g59
NtRp2178
(dp2179
g62
(dp2180
sg71
g2174
sg64
(lp2181
g57
(g58
g59
NtRp2182
(dp2183
g62
(dp2184
g70
I3
ssg71
g2178
sg64
(lp2185
S'2'
asbasbasbag57
(g73
g59
NtRp2186
(dp2187
g62
(dp2188
sg71
g2170
sg64
(lp2189
g57
(g78
g59
NtRp2190
(dp2191
g62
(dp2192
sg71
g2186
sg64
(lp2193
g57
(g58
g59
NtRp2194
(dp2195
g62
(dp2196
g70
I3
ssg71
g2190
sg64
(lp2197
S'3'
asbasbasbag57
(g73
g59
NtRp2198
(dp2199
g62
(dp2200
sg71
g2170
sg64
(lp2201
g57
(g78
g59
NtRp2202
(dp2203
g62
(dp2204
sg71
g2198
sg64
(lp2205
g57
(g58
g59
NtRp2206
(dp2207
g62
(dp2208
g70
I3
ssg71
g2202
sg64
(lp2209
S'2'
asbasbasbag57
(g73
g59
NtRp2210
(dp2211
g62
(dp2212
sg71
g2170
sg64
(lp2213
g57
(g78
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2210
sg64
(lp2217
g57
(g58
g59
NtRp2218
(dp2219
g62
(dp2220
g70
I3
ssg71
g2214
sg64
(lp2221
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2222
asbasbasbag57
(g73
g59
NtRp2223
(dp2224
g62
(dp2225
sg71
g2170
sg64
(lp2226
g57
(g78
g59
NtRp2227
(dp2228
g62
(dp2229
sg71
g2223
sg64
(lp2230
g57
(g58
g59
NtRp2231
(dp2232
g62
(dp2233
g70
I3
ssg71
g2227
sg64
(lp2234
g1561
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2235
(dp2236
g62
(dp2237
sg71
g67
sg64
(lp2238
g57
(g78
g59
NtRp2239
(dp2240
g62
(dp2241
g82
g83
ssg71
g2235
sg64
(lp2242
S'is_https'
p2243
asbag57
(g78
g59
NtRp2244
(dp2245
g62
(dp2246
g89
g90
ssg71
g2235
sg64
(lp2247
S':'
asbag57
(g78
g59
NtRp2248
(dp2249
g62
(dp2250
sg71
g2235
sg64
(lp2251
g57
(g58
g59
NtRp2252
(dp2253
g62
(dp2254
g70
I5
ssg71
g2248
sg64
(lp2255
g100
asbasbasbag57
(g73
g59
NtRp2256
(dp2257
g62
(dp2258
sg71
g67
sg64
(lp2259
g57
(g78
g59
NtRp2260
(dp2261
g62
(dp2262
g82
g83
ssg71
g2256
sg64
(lp2263
S'is_local'
p2264
asbag57
(g78
g59
NtRp2265
(dp2266
g62
(dp2267
g89
g90
ssg71
g2256
sg64
(lp2268
S':'
asbag57
(g78
g59
NtRp2269
(dp2270
g62
(dp2271
sg71
g2256
sg64
(lp2272
g57
(g58
g59
NtRp2273
(dp2274
g62
(dp2275
g70
I5
ssg71
g2269
sg64
(lp2276
g1670
asbasbasbag57
(g73
g59
NtRp2277
(dp2278
g62
(dp2279
sg71
g67
sg64
(lp2280
g57
(g78
g59
NtRp2281
(dp2282
g62
(dp2283
g82
g83
ssg71
g2277
sg64
(lp2284
S'is_restful'
p2285
asbag57
(g78
g59
NtRp2286
(dp2287
g62
(dp2288
g89
g90
ssg71
g2277
sg64
(lp2289
S':'
asbag57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g2277
sg64
(lp2293
g57
(g58
g59
NtRp2294
(dp2295
g62
(dp2296
g70
I5
ssg71
g2290
sg64
(lp2297
g100
asbasbasbag57
(g73
g59
NtRp2298
(dp2299
g62
(dp2300
sg71
g67
sg64
(lp2301
g57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
g82
g83
ssg71
g2298
sg64
(lp2305
S'now'
p2306
asbag57
(g78
g59
NtRp2307
(dp2308
g62
(dp2309
g89
g90
ssg71
g2298
sg64
(lp2310
S':'
asbag57
(g78
g59
NtRp2311
(dp2312
g62
(dp2313
sg71
g2298
sg64
(lp2314
g57
(g58
g59
NtRp2315
(dp2316
g62
(dp2317
g70
I5
ssg71
g2311
sg64
(lp2318
S'datetime.datetime(2013, 2, 25, 0, 16, 44, 182636)'
p2319
asbasbasbag57
(g73
g59
NtRp2320
(dp2321
g62
(dp2322
sg71
g67
sg64
(lp2323
g57
(g78
g59
NtRp2324
(dp2325
g62
(dp2326
g82
g83
ssg71
g2320
sg64
(lp2327
S'post_vars'
p2328
asbag57
(g78
g59
NtRp2329
(dp2330
g62
(dp2331
g89
g90
ssg71
g2320
sg64
(lp2332
S':'
asbag57
(g78
g59
NtRp2333
(dp2334
g62
(dp2335
sg71
g2320
sg64
(lp2336
g57
(g58
g59
NtRp2337
(dp2338
g62
(dp2339
g70
I5
ssg71
g2333
sg64
(lp2340
g57
(g66
g59
NtRp2341
(dp2342
g62
(dp2343
g70
I4
ssg71
Nsg64
(lp2344
sbasbasbasbag57
(g73
g59
NtRp2345
(dp2346
g62
(dp2347
sg71
g67
sg64
(lp2348
g57
(g78
g59
NtRp2349
(dp2350
g62
(dp2351
g82
g83
ssg71
g2345
sg64
(lp2352
S'raw_args'
p2353
asbag57
(g78
g59
NtRp2354
(dp2355
g62
(dp2356
g89
g90
ssg71
g2345
sg64
(lp2357
S':'
asbag57
(g78
g59
NtRp2358
(dp2359
g62
(dp2360
sg71
g2345
sg64
(lp2361
g57
(g58
g59
NtRp2362
(dp2363
g62
(dp2364
g70
I5
ssg71
g2358
sg64
(lp2365
S'project/experiment.project/1/sample.experiment/1'
p2366
asbasbasbag57
(g73
g59
NtRp2367
(dp2368
g62
(dp2369
sg71
g67
sg64
(lp2370
g57
(g78
g59
NtRp2371
(dp2372
g62
(dp2373
g82
g83
ssg71
g2367
sg64
(lp2374
S'raw_extension'
p2375
asbag57
(g78
g59
NtRp2376
(dp2377
g62
(dp2378
g89
g90
ssg71
g2367
sg64
(lp2379
S':'
asbag57
(g78
g59
NtRp2380
(dp2381
g62
(dp2382
sg71
g2367
sg64
(lp2383
g57
(g58
g59
NtRp2384
(dp2385
g62
(dp2386
g70
I5
ssg71
g2380
sg64
(lp2387
S'None'
p2388
asbasbasbag57
(g73
g59
NtRp2389
(dp2390
g62
(dp2391
sg71
g67
sg64
(lp2392
g57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g82
g83
ssg71
g2389
sg64
(lp2396
S'url'
p2397
asbag57
(g78
g59
NtRp2398
(dp2399
g62
(dp2400
g89
g90
ssg71
g2389
sg64
(lp2401
S':'
asbag57
(g78
g59
NtRp2402
(dp2403
g62
(dp2404
sg71
g2389
sg64
(lp2405
g57
(g58
g59
NtRp2406
(dp2407
g62
(dp2408
g70
I5
ssg71
g2402
sg64
(lp2409
g1235
asbasbasbag57
(g73
g59
NtRp2410
(dp2411
g62
(dp2412
sg71
g67
sg64
(lp2413
g57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g82
g83
ssg71
g2410
sg64
(lp2417
S'utcnow'
p2418
asbag57
(g78
g59
NtRp2419
(dp2420
g62
(dp2421
g89
g90
ssg71
g2410
sg64
(lp2422
S':'
asbag57
(g78
g59
NtRp2423
(dp2424
g62
(dp2425
sg71
g2410
sg64
(lp2426
g57
(g58
g59
NtRp2427
(dp2428
g62
(dp2429
g70
I5
ssg71
g2423
sg64
(lp2430
S'datetime.datetime(2013, 2, 24, 18, 46, 44, 182690)'
p2431
asbasbasbag57
(g73
g59
NtRp2432
(dp2433
g62
(dp2434
sg71
g67
sg64
(lp2435
g57
(g78
g59
NtRp2436
(dp2437
g62
(dp2438
g82
g83
ssg71
g2432
sg64
(lp2439
S'uuid'
p2440
asbag57
(g78
g59
NtRp2441
(dp2442
g62
(dp2443
g89
g90
ssg71
g2432
sg64
(lp2444
S':'
asbag57
(g78
g59
NtRp2445
(dp2446
g62
(dp2447
sg71
g2432
sg64
(lp2448
g57
(g58
g59
NtRp2449
(dp2450
g62
(dp2451
g70
I5
ssg71
g2445
sg64
(lp2452
S'DEV_bootstrap_ch/127.0.0.1.2013-02-25.00-16-44.282cb34a-5185-4aa6-a0d7-a5af65b7f277'
p2453
asbasbasbag57
(g73
g59
NtRp2454
(dp2455
g62
(dp2456
sg71
g67
sg64
(lp2457
g57
(g78
g59
NtRp2458
(dp2459
g62
(dp2460
g82
g83
ssg71
g2454
sg64
(lp2461
S'vars'
p2462
asbag57
(g78
g59
NtRp2463
(dp2464
g62
(dp2465
g89
g90
ssg71
g2454
sg64
(lp2466
S':'
asbag57
(g78
g59
NtRp2467
(dp2468
g62
(dp2469
sg71
g2454
sg64
(lp2470
g57
(g58
g59
NtRp2471
(dp2472
g62
(dp2473
g70
I5
ssg71
g2467
sg64
(lp2474
g57
(g66
g59
NtRp2475
(dp2476
g62
(dp2477
g70
I4
ssg71
Nsg64
(lp2478
g57
(g73
g59
NtRp2479
(dp2480
g62
(dp2481
sg71
g2475
sg64
(lp2482
g57
(g78
g59
NtRp2483
(dp2484
g62
(dp2485
g82
g83
ssg71
g2479
sg64
(lp2486
S'records'
p2487
asbag57
(g78
g59
NtRp2488
(dp2489
g62
(dp2490
g89
g90
ssg71
g2479
sg64
(lp2491
S':'
asbag57
(g78
g59
NtRp2492
(dp2493
g62
(dp2494
sg71
g2479
sg64
(lp2495
g57
(g58
g59
NtRp2496
(dp2497
g62
(dp2498
g70
I4
ssg71
g2492
sg64
(lp2499
g57
(g66
g59
NtRp2500
(dp2501
g62
(dp2502
g70
I3
ssg71
Nsg64
(lp2503
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2504
(dp2505
g62
(dp2506
sg71
g67
sg64
(lp2507
g57
(g78
g59
NtRp2508
(dp2509
g62
(dp2510
g82
g83
ssg71
g2504
sg64
(lp2511
S'wsgi'
p2512
asbag57
(g78
g59
NtRp2513
(dp2514
g62
(dp2515
g89
g90
ssg71
g2504
sg64
(lp2516
S':'
asbag57
(g78
g59
NtRp2517
(dp2518
g62
(dp2519
sg71
g2504
sg64
(lp2520
g57
(g58
g59
NtRp2521
(dp2522
g62
(dp2523
g70
I5
ssg71
g2517
sg64
(lp2524
g57
(g66
g59
NtRp2525
(dp2526
g62
(dp2527
g70
I4
ssg71
Nsg64
(lp2528
g57
(g73
g59
NtRp2529
(dp2530
g62
(dp2531
sg71
g2525
sg64
(lp2532
g57
(g78
g59
NtRp2533
(dp2534
g62
(dp2535
g82
g83
ssg71
g2529
sg64
(lp2536
S'environ'
p2537
asbag57
(g78
g59
NtRp2538
(dp2539
g62
(dp2540
g89
g90
ssg71
g2529
sg64
(lp2541
S':'
asbag57
(g78
g59
NtRp2542
(dp2543
g62
(dp2544
sg71
g2529
sg64
(lp2545
g57
(g58
g59
NtRp2546
(dp2547
g62
(dp2548
g70
I4
ssg71
g2542
sg64
(lp2549
g57
(g66
g59
NtRp2550
(dp2551
g62
(dp2552
g70
I3
ssg71
Nsg64
(lp2553
g57
(g73
g59
NtRp2554
(dp2555
g62
(dp2556
sg71
g2550
sg64
(lp2557
g57
(g78
g59
NtRp2558
(dp2559
g62
(dp2560
g82
g83
ssg71
g2554
sg64
(lp2561
S'HTTP_ACCEPT'
p2562
asbag57
(g78
g59
NtRp2563
(dp2564
g62
(dp2565
g89
g90
ssg71
g2554
sg64
(lp2566
S':'
asbag57
(g78
g59
NtRp2567
(dp2568
g62
(dp2569
sg71
g2554
sg64
(lp2570
g57
(g58
g59
NtRp2571
(dp2572
g62
(dp2573
g70
I3
ssg71
g2567
sg64
(lp2574
g905
asbasbasbag57
(g73
g59
NtRp2575
(dp2576
g62
(dp2577
sg71
g2550
sg64
(lp2578
g57
(g78
g59
NtRp2579
(dp2580
g62
(dp2581
g82
g83
ssg71
g2575
sg64
(lp2582
S'HTTP_ACCEPT_CHARSET'
p2583
asbag57
(g78
g59
NtRp2584
(dp2585
g62
(dp2586
g89
g90
ssg71
g2575
sg64
(lp2587
S':'
asbag57
(g78
g59
NtRp2588
(dp2589
g62
(dp2590
sg71
g2575
sg64
(lp2591
g57
(g58
g59
NtRp2592
(dp2593
g62
(dp2594
g70
I3
ssg71
g2588
sg64
(lp2595
g927
asbasbasbag57
(g73
g59
NtRp2596
(dp2597
g62
(dp2598
sg71
g2550
sg64
(lp2599
g57
(g78
g59
NtRp2600
(dp2601
g62
(dp2602
g82
g83
ssg71
g2596
sg64
(lp2603
S'HTTP_ACCEPT_ENCODING'
p2604
asbag57
(g78
g59
NtRp2605
(dp2606
g62
(dp2607
g89
g90
ssg71
g2596
sg64
(lp2608
S':'
asbag57
(g78
g59
NtRp2609
(dp2610
g62
(dp2611
sg71
g2596
sg64
(lp2612
g57
(g58
g59
NtRp2613
(dp2614
g62
(dp2615
g70
I3
ssg71
g2609
sg64
(lp2616
g949
asbasbasbag57
(g73
g59
NtRp2617
(dp2618
g62
(dp2619
sg71
g2550
sg64
(lp2620
g57
(g78
g59
NtRp2621
(dp2622
g62
(dp2623
g82
g83
ssg71
g2617
sg64
(lp2624
S'HTTP_ACCEPT_LANGUAGE'
p2625
asbag57
(g78
g59
NtRp2626
(dp2627
g62
(dp2628
g89
g90
ssg71
g2617
sg64
(lp2629
S':'
asbag57
(g78
g59
NtRp2630
(dp2631
g62
(dp2632
sg71
g2617
sg64
(lp2633
g57
(g58
g59
NtRp2634
(dp2635
g62
(dp2636
g70
I3
ssg71
g2630
sg64
(lp2637
g971
asbasbasbag57
(g73
g59
NtRp2638
(dp2639
g62
(dp2640
sg71
g2550
sg64
(lp2641
g57
(g78
g59
NtRp2642
(dp2643
g62
(dp2644
g82
g83
ssg71
g2638
sg64
(lp2645
S'HTTP_CONNECTION'
p2646
asbag57
(g78
g59
NtRp2647
(dp2648
g62
(dp2649
g89
g90
ssg71
g2638
sg64
(lp2650
S':'
asbag57
(g78
g59
NtRp2651
(dp2652
g62
(dp2653
sg71
g2638
sg64
(lp2654
g57
(g58
g59
NtRp2655
(dp2656
g62
(dp2657
g70
I3
ssg71
g2651
sg64
(lp2658
g993
asbasbasbag57
(g73
g59
NtRp2659
(dp2660
g62
(dp2661
sg71
g2550
sg64
(lp2662
g57
(g78
g59
NtRp2663
(dp2664
g62
(dp2665
g82
g83
ssg71
g2659
sg64
(lp2666
S'HTTP_COOKIE'
p2667
asbag57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
g89
g90
ssg71
g2659
sg64
(lp2671
S':'
asbag57
(g78
g59
NtRp2672
(dp2673
g62
(dp2674
sg71
g2659
sg64
(lp2675
g57
(g58
g59
NtRp2676
(dp2677
g62
(dp2678
g70
I3
ssg71
g2672
sg64
(lp2679
g1015
asbasbasbag57
(g73
g59
NtRp2680
(dp2681
g62
(dp2682
sg71
g2550
sg64
(lp2683
g57
(g78
g59
NtRp2684
(dp2685
g62
(dp2686
g82
g83
ssg71
g2680
sg64
(lp2687
S'HTTP_HOST'
p2688
asbag57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
g89
g90
ssg71
g2680
sg64
(lp2692
S':'
asbag57
(g78
g59
NtRp2693
(dp2694
g62
(dp2695
sg71
g2680
sg64
(lp2696
g57
(g58
g59
NtRp2697
(dp2698
g62
(dp2699
g70
I3
ssg71
g2693
sg64
(lp2700
g1037
asbasbasbag57
(g73
g59
NtRp2701
(dp2702
g62
(dp2703
sg71
g2550
sg64
(lp2704
g57
(g78
g59
NtRp2705
(dp2706
g62
(dp2707
g82
g83
ssg71
g2701
sg64
(lp2708
S'HTTP_REFERER'
p2709
asbag57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
g89
g90
ssg71
g2701
sg64
(lp2713
S':'
asbag57
(g78
g59
NtRp2714
(dp2715
g62
(dp2716
sg71
g2701
sg64
(lp2717
g57
(g58
g59
NtRp2718
(dp2719
g62
(dp2720
g70
I3
ssg71
g2714
sg64
(lp2721
g1059
asbasbasbag57
(g73
g59
NtRp2722
(dp2723
g62
(dp2724
sg71
g2550
sg64
(lp2725
g57
(g78
g59
NtRp2726
(dp2727
g62
(dp2728
g82
g83
ssg71
g2722
sg64
(lp2729
S'HTTP_USER_AGENT'
p2730
asbag57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
g89
g90
ssg71
g2722
sg64
(lp2734
S':'
asbag57
(g78
g59
NtRp2735
(dp2736
g62
(dp2737
sg71
g2722
sg64
(lp2738
g57
(g58
g59
NtRp2739
(dp2740
g62
(dp2741
g70
I3
ssg71
g2735
sg64
(lp2742
g1081
asbasbasbag57
(g73
g59
NtRp2743
(dp2744
g62
(dp2745
sg71
g2550
sg64
(lp2746
g57
(g78
g59
NtRp2747
(dp2748
g62
(dp2749
g82
g83
ssg71
g2743
sg64
(lp2750
S'PATH_INFO'
p2751
asbag57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
g89
g90
ssg71
g2743
sg64
(lp2755
S':'
asbag57
(g78
g59
NtRp2756
(dp2757
g62
(dp2758
sg71
g2743
sg64
(lp2759
g57
(g58
g59
NtRp2760
(dp2761
g62
(dp2762
g70
I3
ssg71
g2756
sg64
(lp2763
g1235
asbasbasbag57
(g73
g59
NtRp2764
(dp2765
g62
(dp2766
sg71
g2550
sg64
(lp2767
g57
(g78
g59
NtRp2768
(dp2769
g62
(dp2770
g82
g83
ssg71
g2764
sg64
(lp2771
S'QUERY_STRING'
p2772
asbag57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
g89
g90
ssg71
g2764
sg64
(lp2776
S':'
asbag57
(g78
g59
NtRp2777
(dp2778
g62
(dp2779
sg71
g2764
sg64
(lp2780
g57
(g58
g59
NtRp2781
(dp2782
g62
(dp2783
g70
I3
ssg71
g2777
sg64
(lp2784
g1257
asbasbasbag57
(g73
g59
NtRp2785
(dp2786
g62
(dp2787
sg71
g2550
sg64
(lp2788
g57
(g78
g59
NtRp2789
(dp2790
g62
(dp2791
g82
g83
ssg71
g2785
sg64
(lp2792
S'REMOTE_ADDR'
p2793
asbag57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
g89
g90
ssg71
g2785
sg64
(lp2797
S':'
asbag57
(g78
g59
NtRp2798
(dp2799
g62
(dp2800
sg71
g2785
sg64
(lp2801
g57
(g58
g59
NtRp2802
(dp2803
g62
(dp2804
g70
I3
ssg71
g2798
sg64
(lp2805
g275
asbasbasbag57
(g73
g59
NtRp2806
(dp2807
g62
(dp2808
sg71
g2550
sg64
(lp2809
g57
(g78
g59
NtRp2810
(dp2811
g62
(dp2812
g82
g83
ssg71
g2806
sg64
(lp2813
S'REMOTE_PORT'
p2814
asbag57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
g89
g90
ssg71
g2806
sg64
(lp2818
S':'
asbag57
(g78
g59
NtRp2819
(dp2820
g62
(dp2821
sg71
g2806
sg64
(lp2822
g57
(g58
g59
NtRp2823
(dp2824
g62
(dp2825
g70
I3
ssg71
g2819
sg64
(lp2826
g1300
asbasbasbag57
(g73
g59
NtRp2827
(dp2828
g62
(dp2829
sg71
g2550
sg64
(lp2830
g57
(g78
g59
NtRp2831
(dp2832
g62
(dp2833
g82
g83
ssg71
g2827
sg64
(lp2834
S'REQUEST_METHOD'
p2835
asbag57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
g89
g90
ssg71
g2827
sg64
(lp2839
S':'
asbag57
(g78
g59
NtRp2840
(dp2841
g62
(dp2842
sg71
g2827
sg64
(lp2843
g57
(g58
g59
NtRp2844
(dp2845
g62
(dp2846
g70
I3
ssg71
g2840
sg64
(lp2847
g1322
asbasbasbag57
(g73
g59
NtRp2848
(dp2849
g62
(dp2850
sg71
g2550
sg64
(lp2851
g57
(g78
g59
NtRp2852
(dp2853
g62
(dp2854
g82
g83
ssg71
g2848
sg64
(lp2855
S'REQUEST_URI'
p2856
asbag57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g89
g90
ssg71
g2848
sg64
(lp2860
S':'
asbag57
(g78
g59
NtRp2861
(dp2862
g62
(dp2863
sg71
g2848
sg64
(lp2864
g57
(g58
g59
NtRp2865
(dp2866
g62
(dp2867
g70
I3
ssg71
g2861
sg64
(lp2868
g1344
asbasbasbag57
(g73
g59
NtRp2869
(dp2870
g62
(dp2871
sg71
g2550
sg64
(lp2872
g57
(g78
g59
NtRp2873
(dp2874
g62
(dp2875
g82
g83
ssg71
g2869
sg64
(lp2876
S'SCRIPT_NAME'
p2877
asbag57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g89
g90
ssg71
g2869
sg64
(lp2881
S':'
asbag57
(g78
g59
NtRp2882
(dp2883
g62
(dp2884
sg71
g2869
sg64
(lp2885
g57
(g58
g59
NtRp2886
(dp2887
g62
(dp2888
g70
I3
ssg71
g2882
sg64
(lp2889
S''
asbasbasbag57
(g73
g59
NtRp2890
(dp2891
g62
(dp2892
sg71
g2550
sg64
(lp2893
g57
(g78
g59
NtRp2894
(dp2895
g62
(dp2896
g82
g83
ssg71
g2890
sg64
(lp2897
S'SERVER_NAME'
p2898
asbag57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g89
g90
ssg71
g2890
sg64
(lp2902
S':'
asbag57
(g78
g59
NtRp2903
(dp2904
g62
(dp2905
sg71
g2890
sg64
(lp2906
g57
(g58
g59
NtRp2907
(dp2908
g62
(dp2909
g70
I3
ssg71
g2903
sg64
(lp2910
g1387
asbasbasbag57
(g73
g59
NtRp2911
(dp2912
g62
(dp2913
sg71
g2550
sg64
(lp2914
g57
(g78
g59
NtRp2915
(dp2916
g62
(dp2917
g82
g83
ssg71
g2911
sg64
(lp2918
S'SERVER_PORT'
p2919
asbag57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g89
g90
ssg71
g2911
sg64
(lp2923
S':'
asbag57
(g78
g59
NtRp2924
(dp2925
g62
(dp2926
sg71
g2911
sg64
(lp2927
g57
(g58
g59
NtRp2928
(dp2929
g62
(dp2930
g70
I3
ssg71
g2924
sg64
(lp2931
g1409
asbasbasbag57
(g73
g59
NtRp2932
(dp2933
g62
(dp2934
sg71
g2550
sg64
(lp2935
g57
(g78
g59
NtRp2936
(dp2937
g62
(dp2938
g82
g83
ssg71
g2932
sg64
(lp2939
S'SERVER_PROTOCOL'
p2940
asbag57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g89
g90
ssg71
g2932
sg64
(lp2944
S':'
asbag57
(g78
g59
NtRp2945
(dp2946
g62
(dp2947
sg71
g2932
sg64
(lp2948
g57
(g58
g59
NtRp2949
(dp2950
g62
(dp2951
g70
I3
ssg71
g2945
sg64
(lp2952
g1431
asbasbasbag57
(g73
g59
NtRp2953
(dp2954
g62
(dp2955
sg71
g2550
sg64
(lp2956
g57
(g78
g59
NtRp2957
(dp2958
g62
(dp2959
g82
g83
ssg71
g2953
sg64
(lp2960
S'SERVER_SOFTWARE'
p2961
asbag57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
g89
g90
ssg71
g2953
sg64
(lp2965
S':'
asbag57
(g78
g59
NtRp2966
(dp2967
g62
(dp2968
sg71
g2953
sg64
(lp2969
g57
(g58
g59
NtRp2970
(dp2971
g62
(dp2972
g70
I3
ssg71
g2966
sg64
(lp2973
g1453
asbasbasbag57
(g73
g59
NtRp2974
(dp2975
g62
(dp2976
sg71
g2550
sg64
(lp2977
g57
(g78
g59
NtRp2978
(dp2979
g62
(dp2980
g82
g83
ssg71
g2974
sg64
(lp2981
S'wsgi.errors'
p2982
asbag57
(g78
g59
NtRp2983
(dp2984
g62
(dp2985
g89
g90
ssg71
g2974
sg64
(lp2986
S':'
asbag57
(g78
g59
NtRp2987
(dp2988
g62
(dp2989
sg71
g2974
sg64
(lp2990
g57
(g58
g59
NtRp2991
(dp2992
g62
(dp2993
g70
I3
ssg71
g2987
sg64
(lp2994
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p2995
asbasbasbag57
(g73
g59
NtRp2996
(dp2997
g62
(dp2998
sg71
g2550
sg64
(lp2999
g57
(g78
g59
NtRp3000
(dp3001
g62
(dp3002
g82
g83
ssg71
g2996
sg64
(lp3003
S'wsgi.file_wrapper'
p3004
asbag57
(g78
g59
NtRp3005
(dp3006
g62
(dp3007
g89
g90
ssg71
g2996
sg64
(lp3008
S':'
asbag57
(g78
g59
NtRp3009
(dp3010
g62
(dp3011
sg71
g2996
sg64
(lp3012
g57
(g58
g59
NtRp3013
(dp3014
g62
(dp3015
g70
I3
ssg71
g3009
sg64
(lp3016
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3017
asbasbasbag57
(g73
g59
NtRp3018
(dp3019
g62
(dp3020
sg71
g2550
sg64
(lp3021
g57
(g78
g59
NtRp3022
(dp3023
g62
(dp3024
g82
g83
ssg71
g3018
sg64
(lp3025
S'wsgi.input'
p3026
asbag57
(g78
g59
NtRp3027
(dp3028
g62
(dp3029
g89
g90
ssg71
g3018
sg64
(lp3030
S':'
asbag57
(g78
g59
NtRp3031
(dp3032
g62
(dp3033
sg71
g3018
sg64
(lp3034
g57
(g58
g59
NtRp3035
(dp3036
g62
(dp3037
g70
I3
ssg71
g3031
sg64
(lp3038
S'<cStringIO.StringO object at 0xae9c3420>'
p3039
asbasbasbag57
(g73
g59
NtRp3040
(dp3041
g62
(dp3042
sg71
g2550
sg64
(lp3043
g57
(g78
g59
NtRp3044
(dp3045
g62
(dp3046
g82
g83
ssg71
g3040
sg64
(lp3047
S'wsgi.multiprocess'
p3048
asbag57
(g78
g59
NtRp3049
(dp3050
g62
(dp3051
g89
g90
ssg71
g3040
sg64
(lp3052
S':'
asbag57
(g78
g59
NtRp3053
(dp3054
g62
(dp3055
sg71
g3040
sg64
(lp3056
g57
(g58
g59
NtRp3057
(dp3058
g62
(dp3059
g70
I3
ssg71
g3053
sg64
(lp3060
g100
asbasbasbag57
(g73
g59
NtRp3061
(dp3062
g62
(dp3063
sg71
g2550
sg64
(lp3064
g57
(g78
g59
NtRp3065
(dp3066
g62
(dp3067
g82
g83
ssg71
g3061
sg64
(lp3068
S'wsgi.multithread'
p3069
asbag57
(g78
g59
NtRp3070
(dp3071
g62
(dp3072
g89
g90
ssg71
g3061
sg64
(lp3073
S':'
asbag57
(g78
g59
NtRp3074
(dp3075
g62
(dp3076
sg71
g3061
sg64
(lp3077
g57
(g58
g59
NtRp3078
(dp3079
g62
(dp3080
g70
I3
ssg71
g3074
sg64
(lp3081
g1670
asbasbasbag57
(g73
g59
NtRp3082
(dp3083
g62
(dp3084
sg71
g2550
sg64
(lp3085
g57
(g78
g59
NtRp3086
(dp3087
g62
(dp3088
g82
g83
ssg71
g3082
sg64
(lp3089
S'wsgi.run_once'
p3090
asbag57
(g78
g59
NtRp3091
(dp3092
g62
(dp3093
g89
g90
ssg71
g3082
sg64
(lp3094
S':'
asbag57
(g78
g59
NtRp3095
(dp3096
g62
(dp3097
sg71
g3082
sg64
(lp3098
g57
(g58
g59
NtRp3099
(dp3100
g62
(dp3101
g70
I3
ssg71
g3095
sg64
(lp3102
g100
asbasbasbag57
(g73
g59
NtRp3103
(dp3104
g62
(dp3105
sg71
g2550
sg64
(lp3106
g57
(g78
g59
NtRp3107
(dp3108
g62
(dp3109
g82
g83
ssg71
g3103
sg64
(lp3110
S'wsgi.url_scheme'
p3111
asbag57
(g78
g59
NtRp3112
(dp3113
g62
(dp3114
g89
g90
ssg71
g3103
sg64
(lp3115
S':'
asbag57
(g78
g59
NtRp3116
(dp3117
g62
(dp3118
sg71
g3103
sg64
(lp3119
g57
(g58
g59
NtRp3120
(dp3121
g62
(dp3122
g70
I3
ssg71
g3116
sg64
(lp3123
g1713
asbasbasbag57
(g73
g59
NtRp3124
(dp3125
g62
(dp3126
sg71
g2550
sg64
(lp3127
g57
(g78
g59
NtRp3128
(dp3129
g62
(dp3130
g82
g83
ssg71
g3124
sg64
(lp3131
S'wsgi.version'
p3132
asbag57
(g78
g59
NtRp3133
(dp3134
g62
(dp3135
g89
g90
ssg71
g3124
sg64
(lp3136
S':'
asbag57
(g78
g59
NtRp3137
(dp3138
g62
(dp3139
sg71
g3124
sg64
(lp3140
g57
(g58
g59
NtRp3141
(dp3142
g62
(dp3143
g70
I3
ssg71
g3137
sg64
(lp3144
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3145
(lp3146
(dp3147
S'file'
p3148
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3149
sS'dump'
p3150
(dp3151
S'environment'
p3152
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3153
sS'ccode'
p3154
S'<code object <module> at 0xae8d96e0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3155
ssS'lnum'
p3156
I212
sS'lines'
p3157
(dp3158
I207
S'    try:'
p3159
sI208
S'        if isinstance(code, types.CodeType):'
p3160
sI209
S'            ccode = code'
p3161
sI210
S'        else:'
p3162
sI211
S'            ccode = compile2(code, layer)'
p3163
sI212
S'        exec ccode in environment'
p3164
sI213
S'    except HTTP:'
p3165
sI214
S'        raise'
p3166
sI215
S'    except RestrictedError:'
p3167
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3168
ssS'call'
p3169
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3170
sS'func'
p3171
S'restricted'
p3172
sa(dp3173
g3148
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3174
sg3150
(dp3175
sg3156
I1126
sg3157
(dp3176
I1120
S'   form = SQLFORM(db.sample_files)'
p3177
sI1121
S'   form.vars.sample = sid'
p3178
sI1122
S'   return locals()'
p3179
sI1123
S''
sI1124
S''
sI1115
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3180
sI1116
S'   """ per sample . takes id of the sample as the input """'
p3181
sI1117
S'   sid = request.args(0)'
p3182
sI1118
S'   sample = db(db.sample.id == sid).select().first()'
p3183
sI1119
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3184
ssg3169
S'()'
p3185
sg3171
S'<module>'
p3186
sa(dp3187
g3148
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3188
sg3150
(dp3189
S'self'
p3190
S'undefined'
p3191
sS'f'
S'<function list_all_dev_projects>'
p3192
ssg3156
I193
sg3157
(dp3193
I192
S'        self._vars = None'
p3194
sI193
S'        self._caller = lambda f: f()'
p3195
sI194
S'        self._view_environment = None'
p3196
sI195
S'        self._custom_commit = None'
p3197
sI196
S'        self._custom_rollback = None'
p3198
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3199
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3200
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3201
sI191
S"        self.delimiters = ('{{', '}}')"
p3202
ssg3169
S'(f=<function list_all_dev_projects>)'
p3203
sg3171
S'<lambda>'
p3204
sa(dp3205
g3148
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3206
sg3150
(dp3207
S'global grid'
p3208
S'<function grid>'
p3209
sS'ck'
p3210
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p3211
sS'links'
p3212
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>]}"
p3213
sS'db.project'
p3214
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p3215
sS'global SQLFORM'
p3216
S"<class 'gluon.sqlhtml.SQLFORM'>"
p3217
sS'create'
p3218
g3191
sS'editable'
p3219
g3191
sS'linked_tables'
p3220
g3191
sS's'
S"{'sample': <function <lambda>>}"
p3221
sS'deletable'
p3222
g3191
sS'fields'
p3223
g3191
sS'global db'
p3224
S'<DAL uri="sqlite://storage.sqlite">'
p3225
sS'fi'
p3226
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p3227
sS'SQLFORM.smartgrid'
p3228
S'<function smartgrid>'
p3229
sS'create_dict'
p3230
S"{'project': False, 'sample': True}"
p3231
sS'selectable'
p3232
g3191
sS'edit_dict'
p3233
S"{'project': False}"
p3234
sS'delete_dict'
p3235
S"{'project': False}"
p3236
ssg3156
I323
sg3157
(dp3237
I320
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3238
sI321
S'     \trouter()'
p3239
sI322
S"    s={'sample':lambda ids : redirect(URL('default', 'mapping_multiple', vars=dict(id=ids)))}"
p3240
sI323
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'],selectable = s)"
p3241
sI324
S'    return locals()'
p3242
sI325
S''
sI326
S'#gets table name and rowid as input and creates another row with same details as rowid recod has'
p3243
sI327
S'def tes(a):'
p3244
sI318
S"    links={'sample':l1}"
p3245
sI319
S'#customized Views for certain forms using router'
p3246
ssg3169
S'()'
p3247
sg3171
S'list_all_dev_projects'
p3248
sa(dp3249
g3148
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3250
sg3150
(dp3251
S'user_signature'
p3252
g1670
sS'kwargs'
p3253
S"{'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], 'selectable': <function <lambda>>}"
p3254
ssg3156
I2489
sg3157
(dp3255
I2484
S'                        A(SPAN(t), _class=trap_class(), _href=url('
p3256
sI2485
S'                          args=[args0, row[id_field_name]])))'
p3257
sI2486
S''
sI2487
S'        grid = SQLFORM.grid(query, args=request.args[:nargs], links=links,'
p3258
sI2488
S'                            links_in_grid=links_in_grid,'
p3259
sI2489
S'                            user_signature=user_signature, **kwargs)'
p3260
sI2490
S'        if isinstance(grid, DIV):'
p3261
sI2491
S"            header = table._plural + (field and ' for ' + field.name or '')"
p3262
sI2492
S'            breadcrumbs.append(LI(A(T(header), _class=trap_class(),'
p3263
sI2493
S"                                    _href=url()), _class='active w2p_grid_breadcrumb_elem'))"
p3264
ssg3169
S"(table=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, constraints={'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}, linked_tables=['experiment', 'sample', 'biosource', 'plant_growth_condition', 'treatments', 'harvests', 'extraction_preparation', 'gas_chromatography', 'liquid_chromatography', 'mass_spectroscopy', 'spectrophotometry', 'raw_data_storage_information'], links=[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, args=[], user_signature=True, divider='>', breadcrumbs_class='', **kwargs={'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], 'selectable': <function <lambda>>})"
p3265
sg3171
S'smartgrid'
p3266
sa(dp3267
g3148
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3268
sg3150
(dp3269
S'link'
p3270
S'<function <lambda>>'
p3271
sS'row'
p3272
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3273
ssg3156
I2258
sg3157
(dp3274
I2253
S'                    toadd = []'
p3275
sI2254
S'                    for link in links:'
p3276
sI2255
S'                        if isinstance(link, dict):'
p3277
sI2256
S"                            toadd.append(TD(link['body'](row)))"
p3278
sI2257
S'                        else:'
p3279
sI2258
S'                            if link(row):'
p3280
sI2259
S'                                row_buttons.append(link(row))'
p3281
sI2260
S"                    if links_placement in ['right', 'both']:"
p3282
sI2261
S'                        trcols.extend(toadd)'
p3283
sI2262
S"                    if links_placement in ['left', 'both']:"
p3284
ssg3169
S"(query=<Query ((sample.experiment = 1) AND (sample.experimentalist = 2))>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], field_id=<gluon.dal.Field object>, left=None, headers={}, orderby=None, groupby=None, searchable=True, sortable=True, paginate=20, deletable=True, editable=True, details=True, selectable=<function <lambda>>, create=True, csv=True, links=[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, upload=<function <lambda>>, args=['project', 'experiment.project', '1', 'sample.experiment', '1'], user_signature=True, maxtextlengths={}, maxtextlength=20, onvalidation=None, oncreate=None, onupdate=None, ondelete=None, sorter_icons=(<gluon.html.XML object>, <gluon.html.XML object>), ui={'button': 'ui-button-text-icon-primary', 'buttonadd': 'ui-icon ui-icon-plusthick', 'buttonback': 'ui-icon ui-icon-arrowreturnthick-1-w', 'buttondelete': 'ui-icon ui-icon-trash', 'buttonedit': 'ui-icon ui-icon-pencil', 'buttonexport': 'ui-icon ui-icon-transferthick-e-w', 'buttontable': 'ui-icon ui-icon-triangle-1-e', 'buttontext': 'ui-button-text', 'buttonview': 'ui-icon ui-icon-zoomin', 'content': 'ui-widget-content', ...}, showbuttontext=True, _class='web2py_grid', formname='web2py_grid', search_widget=<function <lambda>>, ignore_rw=False, formstyle='table3cols', exportclasses=None, formargs={}, createargs={}, editargs={}, viewargs={}, buttons_placement='right', links_placement='right')"
p3285
sg3171
S'grid'
p3286
sa(dp3287
g3148
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3288
sg3150
(dp3289
S'body'
p3290
g3191
sS'request.args'
p3291
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p3292
sS'args'
p3293
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p3294
sS'_href'
p3295
g3191
sS'global getargs'
p3296
S'<function getargs>'
p3297
sS'global tes'
p3298
S'<function tes>'
p3299
sS'l1'
p3300
g3191
sS'global URL'
p3301
S'<function URL>'
p3302
sS'header'
p3303
g3191
sS'row.id'
p3304
S'2'
sS'global request'
p3305
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3306
sS'global A'
p3307
S"<class 'gluon.html.A'>"
p3308
sS'builtindict'
p3309
S"<type 'dict'>"
p3310
sS'row'
p3311
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3312
ssg3156
I317
sg3157
(dp3313
I320
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3314
sI321
S'     \trouter()'
p3315
sI312
S''
sI313
S"    create_dict = {'project':False,'sample':addsample}"
p3316
sI314
S'#Links for replicating samples'
p3317
sI315
S'    args= request.args[0:5]'
p3318
sI316
S'    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]'
p3319
sI317
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3320
sI318
S"    links={'sample':l1}"
p3321
sI319
S'#customized Views for certain forms using router'
p3322
ssg3169
S"(row=<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>)"
p3323
sg3171
g3204
sasS'pyver'
p3324
S'Python 2.7.3: /usr/bin/python'
p3325
sS'session'
p3326
g57
(g58
g59
NtRp3327
(dp3328
g62
(dp3329
sg64
(lp3330
g57
(g66
g59
NtRp3331
(dp3332
g62
(dp3333
g70
I5
ssg71
Nsg64
(lp3334
g57
(g73
g59
NtRp3335
(dp3336
g62
(dp3337
sg71
g3331
sg64
(lp3338
g57
(g78
g59
NtRp3339
(dp3340
g62
(dp3341
g82
g83
ssg71
g3335
sg64
(lp3342
S'auth'
p3343
asbag57
(g78
g59
NtRp3344
(dp3345
g62
(dp3346
g89
g90
ssg71
g3335
sg64
(lp3347
S':'
asbag57
(g78
g59
NtRp3348
(dp3349
g62
(dp3350
sg71
g3335
sg64
(lp3351
g57
(g58
g59
NtRp3352
(dp3353
g62
(dp3354
g70
I5
ssg71
g3348
sg64
(lp3355
g57
(g66
g59
NtRp3356
(dp3357
g62
(dp3358
g70
I4
ssg71
Nsg64
(lp3359
g57
(g73
g59
NtRp3360
(dp3361
g62
(dp3362
sg71
g3356
sg64
(lp3363
g57
(g78
g59
NtRp3364
(dp3365
g62
(dp3366
g82
g83
ssg71
g3360
sg64
(lp3367
S'expiration'
p3368
asbag57
(g78
g59
NtRp3369
(dp3370
g62
(dp3371
g89
g90
ssg71
g3360
sg64
(lp3372
S':'
asbag57
(g78
g59
NtRp3373
(dp3374
g62
(dp3375
sg71
g3360
sg64
(lp3376
g57
(g58
g59
NtRp3377
(dp3378
g62
(dp3379
g70
I4
ssg71
g3373
sg64
(lp3380
S'2592000'
p3381
asbasbasbag57
(g73
g59
NtRp3382
(dp3383
g62
(dp3384
sg71
g3356
sg64
(lp3385
g57
(g78
g59
NtRp3386
(dp3387
g62
(dp3388
g82
g83
ssg71
g3382
sg64
(lp3389
S'hmac_key'
p3390
asbag57
(g78
g59
NtRp3391
(dp3392
g62
(dp3393
g89
g90
ssg71
g3382
sg64
(lp3394
S':'
asbag57
(g78
g59
NtRp3395
(dp3396
g62
(dp3397
sg71
g3382
sg64
(lp3398
g57
(g58
g59
NtRp3399
(dp3400
g62
(dp3401
g70
I4
ssg71
g3395
sg64
(lp3402
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3403
asbasbasbag57
(g73
g59
NtRp3404
(dp3405
g62
(dp3406
sg71
g3356
sg64
(lp3407
g57
(g78
g59
NtRp3408
(dp3409
g62
(dp3410
g82
g83
ssg71
g3404
sg64
(lp3411
S'last_visit'
p3412
asbag57
(g78
g59
NtRp3413
(dp3414
g62
(dp3415
g89
g90
ssg71
g3404
sg64
(lp3416
S':'
asbag57
(g78
g59
NtRp3417
(dp3418
g62
(dp3419
sg71
g3404
sg64
(lp3420
g57
(g58
g59
NtRp3421
(dp3422
g62
(dp3423
g70
I4
ssg71
g3417
sg64
(lp3424
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3425
asbasbasbag57
(g73
g59
NtRp3426
(dp3427
g62
(dp3428
sg71
g3356
sg64
(lp3429
g57
(g78
g59
NtRp3430
(dp3431
g62
(dp3432
g82
g83
ssg71
g3426
sg64
(lp3433
S'remember'
p3434
asbag57
(g78
g59
NtRp3435
(dp3436
g62
(dp3437
g89
g90
ssg71
g3426
sg64
(lp3438
S':'
asbag57
(g78
g59
NtRp3439
(dp3440
g62
(dp3441
sg71
g3426
sg64
(lp3442
g57
(g58
g59
NtRp3443
(dp3444
g62
(dp3445
g70
I4
ssg71
g3439
sg64
(lp3446
g1670
asbasbasbag57
(g73
g59
NtRp3447
(dp3448
g62
(dp3449
sg71
g3356
sg64
(lp3450
g57
(g78
g59
NtRp3451
(dp3452
g62
(dp3453
g82
g83
ssg71
g3447
sg64
(lp3454
S'user'
p3455
asbag57
(g78
g59
NtRp3456
(dp3457
g62
(dp3458
g89
g90
ssg71
g3447
sg64
(lp3459
S':'
asbag57
(g78
g59
NtRp3460
(dp3461
g62
(dp3462
sg71
g3447
sg64
(lp3463
g57
(g58
g59
NtRp3464
(dp3465
g62
(dp3466
g70
I4
ssg71
g3460
sg64
(lp3467
g57
(g66
g59
NtRp3468
(dp3469
g62
(dp3470
g70
I3
ssg71
Nsg64
(lp3471
g57
(g73
g59
NtRp3472
(dp3473
g62
(dp3474
sg71
g3468
sg64
(lp3475
g57
(g78
g59
NtRp3476
(dp3477
g62
(dp3478
g82
g83
ssg71
g3472
sg64
(lp3479
S'address'
p3480
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
g89
g90
ssg71
g3472
sg64
(lp3484
S':'
asbag57
(g78
g59
NtRp3485
(dp3486
g62
(dp3487
sg71
g3472
sg64
(lp3488
g57
(g58
g59
NtRp3489
(dp3490
g62
(dp3491
g70
I3
ssg71
g3485
sg64
(lp3492
S'a'
asbasbasbag57
(g73
g59
NtRp3493
(dp3494
g62
(dp3495
sg71
g3468
sg64
(lp3496
g57
(g78
g59
NtRp3497
(dp3498
g62
(dp3499
g82
g83
ssg71
g3493
sg64
(lp3500
S'affiliated_to'
p3501
asbag57
(g78
g59
NtRp3502
(dp3503
g62
(dp3504
g89
g90
ssg71
g3493
sg64
(lp3505
S':'
asbag57
(g78
g59
NtRp3506
(dp3507
g62
(dp3508
sg71
g3493
sg64
(lp3509
g57
(g58
g59
NtRp3510
(dp3511
g62
(dp3512
g70
I3
ssg71
g3506
sg64
(lp3513
S'a'
asbasbasbag57
(g73
g59
NtRp3514
(dp3515
g62
(dp3516
sg71
g3468
sg64
(lp3517
g57
(g78
g59
NtRp3518
(dp3519
g62
(dp3520
g82
g83
ssg71
g3514
sg64
(lp3521
S'city'
p3522
asbag57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
g89
g90
ssg71
g3514
sg64
(lp3526
S':'
asbag57
(g78
g59
NtRp3527
(dp3528
g62
(dp3529
sg71
g3514
sg64
(lp3530
g57
(g58
g59
NtRp3531
(dp3532
g62
(dp3533
g70
I3
ssg71
g3527
sg64
(lp3534
S'a'
asbasbasbag57
(g73
g59
NtRp3535
(dp3536
g62
(dp3537
sg71
g3468
sg64
(lp3538
g57
(g78
g59
NtRp3539
(dp3540
g62
(dp3541
g82
g83
ssg71
g3535
sg64
(lp3542
S'country'
p3543
asbag57
(g78
g59
NtRp3544
(dp3545
g62
(dp3546
g89
g90
ssg71
g3535
sg64
(lp3547
S':'
asbag57
(g78
g59
NtRp3548
(dp3549
g62
(dp3550
sg71
g3535
sg64
(lp3551
g57
(g58
g59
NtRp3552
(dp3553
g62
(dp3554
g70
I3
ssg71
g3548
sg64
(lp3555
S'India'
p3556
asbasbasbag57
(g73
g59
NtRp3557
(dp3558
g62
(dp3559
sg71
g3468
sg64
(lp3560
g57
(g78
g59
NtRp3561
(dp3562
g62
(dp3563
g82
g83
ssg71
g3557
sg64
(lp3564
S'email'
p3565
asbag57
(g78
g59
NtRp3566
(dp3567
g62
(dp3568
g89
g90
ssg71
g3557
sg64
(lp3569
S':'
asbag57
(g78
g59
NtRp3570
(dp3571
g62
(dp3572
sg71
g3557
sg64
(lp3573
g57
(g58
g59
NtRp3574
(dp3575
g62
(dp3576
g70
I3
ssg71
g3570
sg64
(lp3577
S'anil.iiith@gmail.com'
p3578
asbasbasbag57
(g73
g59
NtRp3579
(dp3580
g62
(dp3581
sg71
g3468
sg64
(lp3582
g57
(g78
g59
NtRp3583
(dp3584
g62
(dp3585
g82
g83
ssg71
g3579
sg64
(lp3586
S'first_name'
p3587
asbag57
(g78
g59
NtRp3588
(dp3589
g62
(dp3590
g89
g90
ssg71
g3579
sg64
(lp3591
S':'
asbag57
(g78
g59
NtRp3592
(dp3593
g62
(dp3594
sg71
g3579
sg64
(lp3595
g57
(g58
g59
NtRp3596
(dp3597
g62
(dp3598
g70
I3
ssg71
g3592
sg64
(lp3599
S'anil'
p3600
asbasbasbag57
(g73
g59
NtRp3601
(dp3602
g62
(dp3603
sg71
g3468
sg64
(lp3604
g57
(g78
g59
NtRp3605
(dp3606
g62
(dp3607
g82
g83
ssg71
g3601
sg64
(lp3608
S'id'
p3609
asbag57
(g78
g59
NtRp3610
(dp3611
g62
(dp3612
g89
g90
ssg71
g3601
sg64
(lp3613
S':'
asbag57
(g78
g59
NtRp3614
(dp3615
g62
(dp3616
sg71
g3601
sg64
(lp3617
g57
(g58
g59
NtRp3618
(dp3619
g62
(dp3620
g70
I3
ssg71
g3614
sg64
(lp3621
S'2'
asbasbasbag57
(g73
g59
NtRp3622
(dp3623
g62
(dp3624
sg71
g3468
sg64
(lp3625
g57
(g78
g59
NtRp3626
(dp3627
g62
(dp3628
g82
g83
ssg71
g3622
sg64
(lp3629
S'last_name'
p3630
asbag57
(g78
g59
NtRp3631
(dp3632
g62
(dp3633
g89
g90
ssg71
g3622
sg64
(lp3634
S':'
asbag57
(g78
g59
NtRp3635
(dp3636
g62
(dp3637
sg71
g3622
sg64
(lp3638
g57
(g58
g59
NtRp3639
(dp3640
g62
(dp3641
g70
I3
ssg71
g3635
sg64
(lp3642
S'n'
asbasbasbag57
(g73
g59
NtRp3643
(dp3644
g62
(dp3645
sg71
g3468
sg64
(lp3646
g57
(g78
g59
NtRp3647
(dp3648
g62
(dp3649
g82
g83
ssg71
g3643
sg64
(lp3650
S'mobile'
p3651
asbag57
(g78
g59
NtRp3652
(dp3653
g62
(dp3654
g89
g90
ssg71
g3643
sg64
(lp3655
S':'
asbag57
(g78
g59
NtRp3656
(dp3657
g62
(dp3658
sg71
g3643
sg64
(lp3659
g57
(g58
g59
NtRp3660
(dp3661
g62
(dp3662
g70
I3
ssg71
g3656
sg64
(lp3663
S'1233'
p3664
asbasbasbag57
(g73
g59
NtRp3665
(dp3666
g62
(dp3667
sg71
g3468
sg64
(lp3668
g57
(g78
g59
NtRp3669
(dp3670
g62
(dp3671
g82
g83
ssg71
g3665
sg64
(lp3672
S'phone'
p3673
asbag57
(g78
g59
NtRp3674
(dp3675
g62
(dp3676
g89
g90
ssg71
g3665
sg64
(lp3677
S':'
asbag57
(g78
g59
NtRp3678
(dp3679
g62
(dp3680
sg71
g3665
sg64
(lp3681
g57
(g58
g59
NtRp3682
(dp3683
g62
(dp3684
g70
I3
ssg71
g3678
sg64
(lp3685
S'123'
p3686
asbasbasbag57
(g73
g59
NtRp3687
(dp3688
g62
(dp3689
sg71
g3468
sg64
(lp3690
g57
(g78
g59
NtRp3691
(dp3692
g62
(dp3693
g82
g83
ssg71
g3687
sg64
(lp3694
S'position'
p3695
asbag57
(g78
g59
NtRp3696
(dp3697
g62
(dp3698
g89
g90
ssg71
g3687
sg64
(lp3699
S':'
asbag57
(g78
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3687
sg64
(lp3703
g57
(g58
g59
NtRp3704
(dp3705
g62
(dp3706
g70
I3
ssg71
g3700
sg64
(lp3707
S'0'
asbasbasbag57
(g73
g59
NtRp3708
(dp3709
g62
(dp3710
sg71
g3468
sg64
(lp3711
g57
(g78
g59
NtRp3712
(dp3713
g62
(dp3714
g82
g83
ssg71
g3708
sg64
(lp3715
S'postal_code'
p3716
asbag57
(g78
g59
NtRp3717
(dp3718
g62
(dp3719
g89
g90
ssg71
g3708
sg64
(lp3720
S':'
asbag57
(g78
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3708
sg64
(lp3724
g57
(g58
g59
NtRp3725
(dp3726
g62
(dp3727
g70
I3
ssg71
g3721
sg64
(lp3728
S'123'
p3729
asbasbasbag57
(g73
g59
NtRp3730
(dp3731
g62
(dp3732
sg71
g3468
sg64
(lp3733
g57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
g82
g83
ssg71
g3730
sg64
(lp3737
S'registration_at'
p3738
asbag57
(g78
g59
NtRp3739
(dp3740
g62
(dp3741
g89
g90
ssg71
g3730
sg64
(lp3742
S':'
asbag57
(g78
g59
NtRp3743
(dp3744
g62
(dp3745
sg71
g3730
sg64
(lp3746
g57
(g58
g59
NtRp3747
(dp3748
g62
(dp3749
g70
I3
ssg71
g3743
sg64
(lp3750
S'0'
asbasbasbag57
(g73
g59
NtRp3751
(dp3752
g62
(dp3753
sg71
g3468
sg64
(lp3754
g57
(g78
g59
NtRp3755
(dp3756
g62
(dp3757
g82
g83
ssg71
g3751
sg64
(lp3758
S'registration_id'
p3759
asbag57
(g78
g59
NtRp3760
(dp3761
g62
(dp3762
g89
g90
ssg71
g3751
sg64
(lp3763
S':'
asbag57
(g78
g59
NtRp3764
(dp3765
g62
(dp3766
sg71
g3751
sg64
(lp3767
g57
(g58
g59
NtRp3768
(dp3769
g62
(dp3770
g70
I3
ssg71
g3764
sg64
(lp3771
S''
asbasbasbag57
(g73
g59
NtRp3772
(dp3773
g62
(dp3774
sg71
g3468
sg64
(lp3775
g57
(g78
g59
NtRp3776
(dp3777
g62
(dp3778
g82
g83
ssg71
g3772
sg64
(lp3779
S'registration_key'
p3780
asbag57
(g78
g59
NtRp3781
(dp3782
g62
(dp3783
g89
g90
ssg71
g3772
sg64
(lp3784
S':'
asbag57
(g78
g59
NtRp3785
(dp3786
g62
(dp3787
sg71
g3772
sg64
(lp3788
g57
(g58
g59
NtRp3789
(dp3790
g62
(dp3791
g70
I3
ssg71
g3785
sg64
(lp3792
S''
asbasbasbag57
(g73
g59
NtRp3793
(dp3794
g62
(dp3795
sg71
g3468
sg64
(lp3796
g57
(g78
g59
NtRp3797
(dp3798
g62
(dp3799
g82
g83
ssg71
g3793
sg64
(lp3800
S'reset_password_key'
p3801
asbag57
(g78
g59
NtRp3802
(dp3803
g62
(dp3804
g89
g90
ssg71
g3793
sg64
(lp3805
S':'
asbag57
(g78
g59
NtRp3806
(dp3807
g62
(dp3808
sg71
g3793
sg64
(lp3809
g57
(g58
g59
NtRp3810
(dp3811
g62
(dp3812
g70
I3
ssg71
g3806
sg64
(lp3813
S''
asbasbasbag57
(g73
g59
NtRp3814
(dp3815
g62
(dp3816
sg71
g3468
sg64
(lp3817
g57
(g78
g59
NtRp3818
(dp3819
g62
(dp3820
g82
g83
ssg71
g3814
sg64
(lp3821
S'title'
p3822
asbag57
(g78
g59
NtRp3823
(dp3824
g62
(dp3825
g89
g90
ssg71
g3814
sg64
(lp3826
S':'
asbag57
(g78
g59
NtRp3827
(dp3828
g62
(dp3829
sg71
g3814
sg64
(lp3830
g57
(g58
g59
NtRp3831
(dp3832
g62
(dp3833
g70
I3
ssg71
g3827
sg64
(lp3834
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3835
(dp3836
g62
(dp3837
sg71
g3356
sg64
(lp3838
g57
(g78
g59
NtRp3839
(dp3840
g62
(dp3841
g82
g83
ssg71
g3835
sg64
(lp3842
S'user_groups'
p3843
asbag57
(g78
g59
NtRp3844
(dp3845
g62
(dp3846
g89
g90
ssg71
g3835
sg64
(lp3847
S':'
asbag57
(g78
g59
NtRp3848
(dp3849
g62
(dp3850
sg71
g3835
sg64
(lp3851
g57
(g58
g59
NtRp3852
(dp3853
g62
(dp3854
g70
I4
ssg71
g3848
sg64
(lp3855
g57
(g66
g59
NtRp3856
(dp3857
g62
(dp3858
g70
I3
ssg71
Nsg64
(lp3859
g57
(g73
g59
NtRp3860
(dp3861
g62
(dp3862
sg71
g3856
sg64
(lp3863
g57
(g78
g59
NtRp3864
(dp3865
g62
(dp3866
g82
g83
ssg71
g3860
sg64
(lp3867
S'9'
asbag57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
g89
g90
ssg71
g3860
sg64
(lp3871
S':'
asbag57
(g78
g59
NtRp3872
(dp3873
g62
(dp3874
sg71
g3860
sg64
(lp3875
g57
(g58
g59
NtRp3876
(dp3877
g62
(dp3878
g70
I3
ssg71
g3872
sg64
(lp3879
S'user_2'
p3880
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3881
(dp3882
g62
(dp3883
sg71
g3331
sg64
(lp3884
g57
(g78
g59
NtRp3885
(dp3886
g62
(dp3887
g82
g83
ssg71
g3881
sg64
(lp3888
S'flash'
p3889
asbag57
(g78
g59
NtRp3890
(dp3891
g62
(dp3892
g89
g90
ssg71
g3881
sg64
(lp3893
S':'
asbag57
(g78
g59
NtRp3894
(dp3895
g62
(dp3896
sg71
g3881
sg64
(lp3897
g57
(g58
g59
NtRp3898
(dp3899
g62
(dp3900
g70
I5
ssg71
g3894
sg64
(lp3901
S'None'
p3902
asbasbasbag57
(g73
g59
NtRp3903
(dp3904
g62
(dp3905
sg71
g3331
sg64
(lp3906
g57
(g78
g59
NtRp3907
(dp3908
g62
(dp3909
g82
g83
ssg71
g3903
sg64
(lp3910
S'last_orderby'
p3911
asbag57
(g78
g59
NtRp3912
(dp3913
g62
(dp3914
g89
g90
ssg71
g3903
sg64
(lp3915
S':'
asbag57
(g78
g59
NtRp3916
(dp3917
g62
(dp3918
sg71
g3903
sg64
(lp3919
g57
(g58
g59
NtRp3920
(dp3921
g62
(dp3922
g70
I5
ssg71
g3916
sg64
(lp3923
S'None'
p3924
asbasbasbag57
(g73
g59
NtRp3925
(dp3926
g62
(dp3927
sg71
g3331
sg64
(lp3928
g57
(g78
g59
NtRp3929
(dp3930
g62
(dp3931
g82
g83
ssg71
g3925
sg64
(lp3932
S'last_query'
p3933
asbag57
(g78
g59
NtRp3934
(dp3935
g62
(dp3936
g89
g90
ssg71
g3925
sg64
(lp3937
S':'
asbag57
(g78
g59
NtRp3938
(dp3939
g62
(dp3940
sg71
g3925
sg64
(lp3941
g57
(g58
g59
NtRp3942
(dp3943
g62
(dp3944
g70
I5
ssg71
g3938
sg64
(lp3945
S'db.project.id>0'
p3946
asbasbasbasbasbsS'etype'
p3947
S"<type 'exceptions.TypeError'>"
p3948
sS'date'
p3949
S'Mon Feb 25 00:16:44 2013'
p3950
sS'response'
p3951
g57
(g58
g59
NtRp3952
(dp3953
g62
(dp3954
sg64
(lp3955
g57
(g66
g59
NtRp3956
(dp3957
g62
(dp3958
g70
I5
ssg71
Nsg64
(lp3959
g57
(g73
g59
NtRp3960
(dp3961
g62
(dp3962
sg71
g3956
sg64
(lp3963
g57
(g78
g59
NtRp3964
(dp3965
g62
(dp3966
g82
g83
ssg71
g3960
sg64
(lp3967
g218
asbag57
(g78
g59
NtRp3968
(dp3969
g62
(dp3970
g89
g90
ssg71
g3960
sg64
(lp3971
S':'
asbag57
(g78
g59
NtRp3972
(dp3973
g62
(dp3974
sg71
g3960
sg64
(lp3975
g57
(g58
g59
NtRp3976
(dp3977
g62
(dp3978
g70
I5
ssg71
g3972
sg64
(lp3979
S'<cStringIO.StringO object at 0xae9dfc20>'
p3980
asbasbasbag57
(g73
g59
NtRp3981
(dp3982
g62
(dp3983
sg71
g3956
sg64
(lp3984
g57
(g78
g59
NtRp3985
(dp3986
g62
(dp3987
g82
g83
ssg71
g3981
sg64
(lp3988
g306
asbag57
(g78
g59
NtRp3989
(dp3990
g62
(dp3991
g89
g90
ssg71
g3981
sg64
(lp3992
S':'
asbag57
(g78
g59
NtRp3993
(dp3994
g62
(dp3995
sg71
g3981
sg64
(lp3996
g57
(g58
g59
NtRp3997
(dp3998
g62
(dp3999
g70
I5
ssg71
g3993
sg64
(lp4000
g57
(g66
g59
NtRp4001
(dp4002
g62
(dp4003
g70
I4
ssg71
Nsg64
(lp4004
g57
(g73
g59
NtRp4005
(dp4006
g62
(dp4007
sg71
g4001
sg64
(lp4008
g57
(g78
g59
NtRp4009
(dp4010
g62
(dp4011
g82
g83
ssg71
g4005
sg64
(lp4012
S'session_id_dev_bootstrap_ch'
p4013
asbag57
(g78
g59
NtRp4014
(dp4015
g62
(dp4016
g89
g90
ssg71
g4005
sg64
(lp4017
S':'
asbag57
(g78
g59
NtRp4018
(dp4019
g62
(dp4020
sg71
g4005
sg64
(lp4021
g57
(g58
g59
NtRp4022
(dp4023
g62
(dp4024
g70
I4
ssg71
g4018
sg64
(lp4025
g538
ag57
(g66
g59
NtRp4026
(dp4027
g62
(dp4028
g70
I3
ssg71
Nsg64
(lp4029
g57
(g73
g59
NtRp4030
(dp4031
g62
(dp4032
sg71
g4026
sg64
(lp4033
g57
(g78
g59
NtRp4034
(dp4035
g62
(dp4036
g82
g83
ssg71
g4030
sg64
(lp4037
g357
asbag57
(g78
g59
NtRp4038
(dp4039
g62
(dp4040
g89
g90
ssg71
g4030
sg64
(lp4041
S':'
asbag57
(g78
g59
NtRp4042
(dp4043
g62
(dp4044
sg71
g4030
sg64
(lp4045
g57
(g58
g59
NtRp4046
(dp4047
g62
(dp4048
g70
I3
ssg71
g4042
sg64
(lp4049
S''
asbasbasbag57
(g73
g59
NtRp4050
(dp4051
g62
(dp4052
sg71
g4026
sg64
(lp4053
g57
(g78
g59
NtRp4054
(dp4055
g62
(dp4056
g82
g83
ssg71
g4050
sg64
(lp4057
g378
asbag57
(g78
g59
NtRp4058
(dp4059
g62
(dp4060
g89
g90
ssg71
g4050
sg64
(lp4061
S':'
asbag57
(g78
g59
NtRp4062
(dp4063
g62
(dp4064
sg71
g4050
sg64
(lp4065
g57
(g58
g59
NtRp4066
(dp4067
g62
(dp4068
g70
I3
ssg71
g4062
sg64
(lp4069
S''
asbasbasbag57
(g73
g59
NtRp4070
(dp4071
g62
(dp4072
sg71
g4026
sg64
(lp4073
g57
(g78
g59
NtRp4074
(dp4075
g62
(dp4076
g82
g83
ssg71
g4070
sg64
(lp4077
g399
asbag57
(g78
g59
NtRp4078
(dp4079
g62
(dp4080
g89
g90
ssg71
g4070
sg64
(lp4081
S':'
asbag57
(g78
g59
NtRp4082
(dp4083
g62
(dp4084
sg71
g4070
sg64
(lp4085
g57
(g58
g59
NtRp4086
(dp4087
g62
(dp4088
g70
I3
ssg71
g4082
sg64
(lp4089
S'2592000'
p4090
asbasbasbag57
(g73
g59
NtRp4091
(dp4092
g62
(dp4093
sg71
g4026
sg64
(lp4094
g57
(g78
g59
NtRp4095
(dp4096
g62
(dp4097
g82
g83
ssg71
g4091
sg64
(lp4098
g420
asbag57
(g78
g59
NtRp4099
(dp4100
g62
(dp4101
g89
g90
ssg71
g4091
sg64
(lp4102
S':'
asbag57
(g78
g59
NtRp4103
(dp4104
g62
(dp4105
sg71
g4091
sg64
(lp4106
g57
(g58
g59
NtRp4107
(dp4108
g62
(dp4109
g70
I3
ssg71
g4103
sg64
(lp4110
S''
asbasbasbag57
(g73
g59
NtRp4111
(dp4112
g62
(dp4113
sg71
g4026
sg64
(lp4114
g57
(g78
g59
NtRp4115
(dp4116
g62
(dp4117
g82
g83
ssg71
g4111
sg64
(lp4118
g441
asbag57
(g78
g59
NtRp4119
(dp4120
g62
(dp4121
g89
g90
ssg71
g4111
sg64
(lp4122
S':'
asbag57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
sg71
g4111
sg64
(lp4126
g57
(g58
g59
NtRp4127
(dp4128
g62
(dp4129
g70
I3
ssg71
g4123
sg64
(lp4130
S''
asbasbasbag57
(g73
g59
NtRp4131
(dp4132
g62
(dp4133
sg71
g4026
sg64
(lp4134
g57
(g78
g59
NtRp4135
(dp4136
g62
(dp4137
g82
g83
ssg71
g4131
sg64
(lp4138
g462
asbag57
(g78
g59
NtRp4139
(dp4140
g62
(dp4141
g89
g90
ssg71
g4131
sg64
(lp4142
S':'
asbag57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g4131
sg64
(lp4146
g57
(g58
g59
NtRp4147
(dp4148
g62
(dp4149
g70
I3
ssg71
g4143
sg64
(lp4150
S'/'
asbasbasbag57
(g73
g59
NtRp4151
(dp4152
g62
(dp4153
sg71
g4026
sg64
(lp4154
g57
(g78
g59
NtRp4155
(dp4156
g62
(dp4157
g82
g83
ssg71
g4151
sg64
(lp4158
g483
asbag57
(g78
g59
NtRp4159
(dp4160
g62
(dp4161
g89
g90
ssg71
g4151
sg64
(lp4162
S':'
asbag57
(g78
g59
NtRp4163
(dp4164
g62
(dp4165
sg71
g4151
sg64
(lp4166
g57
(g58
g59
NtRp4167
(dp4168
g62
(dp4169
g70
I3
ssg71
g4163
sg64
(lp4170
S''
asbasbasbag57
(g73
g59
NtRp4171
(dp4172
g62
(dp4173
sg71
g4026
sg64
(lp4174
g57
(g78
g59
NtRp4175
(dp4176
g62
(dp4177
g82
g83
ssg71
g4171
sg64
(lp4178
g504
asbag57
(g78
g59
NtRp4179
(dp4180
g62
(dp4181
g89
g90
ssg71
g4171
sg64
(lp4182
S':'
asbag57
(g78
g59
NtRp4183
(dp4184
g62
(dp4185
sg71
g4171
sg64
(lp4186
g57
(g58
g59
NtRp4187
(dp4188
g62
(dp4189
g70
I3
ssg71
g4183
sg64
(lp4190
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4191
(dp4192
g62
(dp4193
sg71
g3956
sg64
(lp4194
g57
(g78
g59
NtRp4195
(dp4196
g62
(dp4197
g82
g83
ssg71
g4191
sg64
(lp4198
S'delimiters'
p4199
asbag57
(g78
g59
NtRp4200
(dp4201
g62
(dp4202
g89
g90
ssg71
g4191
sg64
(lp4203
S':'
asbag57
(g78
g59
NtRp4204
(dp4205
g62
(dp4206
sg71
g4191
sg64
(lp4207
g57
(g58
g59
NtRp4208
(dp4209
g62
(dp4210
g70
I5
ssg71
g4204
sg64
(lp4211
g57
(g66
g59
NtRp4212
(dp4213
g62
(dp4214
g70
I4
ssg71
Nsg64
(lp4215
g57
(g73
g59
NtRp4216
(dp4217
g62
(dp4218
sg71
g4212
sg64
(lp4219
g57
(g78
g59
NtRp4220
(dp4221
g62
(dp4222
sg71
g4216
sg64
(lp4223
g57
(g58
g59
NtRp4224
(dp4225
g62
(dp4226
g70
I4
ssg71
g4220
sg64
(lp4227
S'{{'
p4228
asbasbasbag57
(g73
g59
NtRp4229
(dp4230
g62
(dp4231
sg71
g4212
sg64
(lp4232
g57
(g78
g59
NtRp4233
(dp4234
g62
(dp4235
sg71
g4229
sg64
(lp4236
g57
(g58
g59
NtRp4237
(dp4238
g62
(dp4239
g70
I4
ssg71
g4233
sg64
(lp4240
S'}}'
p4241
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4242
(dp4243
g62
(dp4244
sg71
g3956
sg64
(lp4245
g57
(g78
g59
NtRp4246
(dp4247
g62
(dp4248
g82
g83
ssg71
g4242
sg64
(lp4249
S'files'
p4250
asbag57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
g89
g90
ssg71
g4242
sg64
(lp4254
S':'
asbag57
(g78
g59
NtRp4255
(dp4256
g62
(dp4257
sg71
g4242
sg64
(lp4258
g57
(g58
g59
NtRp4259
(dp4260
g62
(dp4261
g70
I5
ssg71
g4255
sg64
(lp4262
g57
(g66
g59
NtRp4263
(dp4264
g62
(dp4265
g70
I4
ssg71
Nsg64
(lp4266
g57
(g73
g59
NtRp4267
(dp4268
g62
(dp4269
sg71
g4263
sg64
(lp4270
g57
(g78
g59
NtRp4271
(dp4272
g62
(dp4273
sg71
g4267
sg64
(lp4274
g57
(g58
g59
NtRp4275
(dp4276
g62
(dp4277
g70
I4
ssg71
g4271
sg64
(lp4278
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4279
asbasbasbag57
(g73
g59
NtRp4280
(dp4281
g62
(dp4282
sg71
g4263
sg64
(lp4283
g57
(g78
g59
NtRp4284
(dp4285
g62
(dp4286
sg71
g4280
sg64
(lp4287
g57
(g58
g59
NtRp4288
(dp4289
g62
(dp4290
g70
I4
ssg71
g4284
sg64
(lp4291
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4292
asbasbasbag57
(g73
g59
NtRp4293
(dp4294
g62
(dp4295
sg71
g4263
sg64
(lp4296
g57
(g78
g59
NtRp4297
(dp4298
g62
(dp4299
sg71
g4293
sg64
(lp4300
g57
(g58
g59
NtRp4301
(dp4302
g62
(dp4303
g70
I4
ssg71
g4297
sg64
(lp4304
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4305
asbasbasbag57
(g73
g59
NtRp4306
(dp4307
g62
(dp4308
sg71
g4263
sg64
(lp4309
g57
(g78
g59
NtRp4310
(dp4311
g62
(dp4312
sg71
g4306
sg64
(lp4313
g57
(g58
g59
NtRp4314
(dp4315
g62
(dp4316
g70
I4
ssg71
g4310
sg64
(lp4317
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4318
asbasbasbag57
(g73
g59
NtRp4319
(dp4320
g62
(dp4321
sg71
g4263
sg64
(lp4322
g57
(g78
g59
NtRp4323
(dp4324
g62
(dp4325
sg71
g4319
sg64
(lp4326
g57
(g58
g59
NtRp4327
(dp4328
g62
(dp4329
g70
I4
ssg71
g4323
sg64
(lp4330
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4331
asbasbasbag57
(g73
g59
NtRp4332
(dp4333
g62
(dp4334
sg71
g4263
sg64
(lp4335
g57
(g78
g59
NtRp4336
(dp4337
g62
(dp4338
sg71
g4332
sg64
(lp4339
g57
(g58
g59
NtRp4340
(dp4341
g62
(dp4342
g70
I4
ssg71
g4336
sg64
(lp4343
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4344
asbasbasbag57
(g73
g59
NtRp4345
(dp4346
g62
(dp4347
sg71
g4263
sg64
(lp4348
g57
(g78
g59
NtRp4349
(dp4350
g62
(dp4351
sg71
g4345
sg64
(lp4352
g57
(g58
g59
NtRp4353
(dp4354
g62
(dp4355
g70
I4
ssg71
g4349
sg64
(lp4356
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4357
asbasbasbag57
(g73
g59
NtRp4358
(dp4359
g62
(dp4360
sg71
g4263
sg64
(lp4361
g57
(g78
g59
NtRp4362
(dp4363
g62
(dp4364
sg71
g4358
sg64
(lp4365
g57
(g58
g59
NtRp4366
(dp4367
g62
(dp4368
g70
I4
ssg71
g4362
sg64
(lp4369
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4370
asbasbasbag57
(g73
g59
NtRp4371
(dp4372
g62
(dp4373
sg71
g4263
sg64
(lp4374
g57
(g78
g59
NtRp4375
(dp4376
g62
(dp4377
sg71
g4371
sg64
(lp4378
g57
(g58
g59
NtRp4379
(dp4380
g62
(dp4381
g70
I4
ssg71
g4375
sg64
(lp4382
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4383
asbasbasbag57
(g73
g59
NtRp4384
(dp4385
g62
(dp4386
sg71
g4263
sg64
(lp4387
g57
(g78
g59
NtRp4388
(dp4389
g62
(dp4390
sg71
g4384
sg64
(lp4391
g57
(g58
g59
NtRp4392
(dp4393
g62
(dp4394
g70
I4
ssg71
g4388
sg64
(lp4395
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4396
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4397
(dp4398
g62
(dp4399
sg71
g3956
sg64
(lp4400
g57
(g78
g59
NtRp4401
(dp4402
g62
(dp4403
g82
g83
ssg71
g4397
sg64
(lp4404
S'flash'
p4405
asbag57
(g78
g59
NtRp4406
(dp4407
g62
(dp4408
g89
g90
ssg71
g4397
sg64
(lp4409
S':'
asbag57
(g78
g59
NtRp4410
(dp4411
g62
(dp4412
sg71
g4397
sg64
(lp4413
g57
(g58
g59
NtRp4414
(dp4415
g62
(dp4416
g70
I5
ssg71
g4410
sg64
(lp4417
S''
asbasbasbag57
(g73
g59
NtRp4418
(dp4419
g62
(dp4420
sg71
g3956
sg64
(lp4421
g57
(g78
g59
NtRp4422
(dp4423
g62
(dp4424
g82
g83
ssg71
g4418
sg64
(lp4425
S'generic_patterns'
p4426
asbag57
(g78
g59
NtRp4427
(dp4428
g62
(dp4429
g89
g90
ssg71
g4418
sg64
(lp4430
S':'
asbag57
(g78
g59
NtRp4431
(dp4432
g62
(dp4433
sg71
g4418
sg64
(lp4434
g57
(g58
g59
NtRp4435
(dp4436
g62
(dp4437
g70
I5
ssg71
g4431
sg64
(lp4438
g57
(g66
g59
NtRp4439
(dp4440
g62
(dp4441
g70
I4
ssg71
Nsg64
(lp4442
g57
(g73
g59
NtRp4443
(dp4444
g62
(dp4445
sg71
g4439
sg64
(lp4446
g57
(g78
g59
NtRp4447
(dp4448
g62
(dp4449
sg71
g4443
sg64
(lp4450
g57
(g58
g59
NtRp4451
(dp4452
g62
(dp4453
g70
I4
ssg71
g4447
sg64
(lp4454
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4455
(dp4456
g62
(dp4457
sg71
g3956
sg64
(lp4458
g57
(g78
g59
NtRp4459
(dp4460
g62
(dp4461
g82
g83
ssg71
g4455
sg64
(lp4462
S'google_analytics_id'
p4463
asbag57
(g78
g59
NtRp4464
(dp4465
g62
(dp4466
g89
g90
ssg71
g4455
sg64
(lp4467
S':'
asbag57
(g78
g59
NtRp4468
(dp4469
g62
(dp4470
sg71
g4455
sg64
(lp4471
g57
(g58
g59
NtRp4472
(dp4473
g62
(dp4474
g70
I5
ssg71
g4468
sg64
(lp4475
S'None'
p4476
asbasbasbag57
(g73
g59
NtRp4477
(dp4478
g62
(dp4479
sg71
g3956
sg64
(lp4480
g57
(g78
g59
NtRp4481
(dp4482
g62
(dp4483
g82
g83
ssg71
g4477
sg64
(lp4484
S'headers'
p4485
asbag57
(g78
g59
NtRp4486
(dp4487
g62
(dp4488
g89
g90
ssg71
g4477
sg64
(lp4489
S':'
asbag57
(g78
g59
NtRp4490
(dp4491
g62
(dp4492
sg71
g4477
sg64
(lp4493
g57
(g58
g59
NtRp4494
(dp4495
g62
(dp4496
g70
I5
ssg71
g4490
sg64
(lp4497
g57
(g66
g59
NtRp4498
(dp4499
g62
(dp4500
g70
I4
ssg71
Nsg64
(lp4501
g57
(g73
g59
NtRp4502
(dp4503
g62
(dp4504
sg71
g4498
sg64
(lp4505
g57
(g78
g59
NtRp4506
(dp4507
g62
(dp4508
g82
g83
ssg71
g4502
sg64
(lp4509
S'X-Powered-By'
p4510
asbag57
(g78
g59
NtRp4511
(dp4512
g62
(dp4513
g89
g90
ssg71
g4502
sg64
(lp4514
S':'
asbag57
(g78
g59
NtRp4515
(dp4516
g62
(dp4517
sg71
g4502
sg64
(lp4518
g57
(g58
g59
NtRp4519
(dp4520
g62
(dp4521
g70
I4
ssg71
g4515
sg64
(lp4522
S'web2py'
p4523
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4524
(dp4525
g62
(dp4526
sg71
g3956
sg64
(lp4527
g57
(g78
g59
NtRp4528
(dp4529
g62
(dp4530
g82
g83
ssg71
g4524
sg64
(lp4531
S'menu'
p4532
asbag57
(g78
g59
NtRp4533
(dp4534
g62
(dp4535
g89
g90
ssg71
g4524
sg64
(lp4536
S':'
asbag57
(g78
g59
NtRp4537
(dp4538
g62
(dp4539
sg71
g4524
sg64
(lp4540
g57
(g58
g59
NtRp4541
(dp4542
g62
(dp4543
g70
I5
ssg71
g4537
sg64
(lp4544
g57
(g66
g59
NtRp4545
(dp4546
g62
(dp4547
g70
I4
ssg71
Nsg64
(lp4548
g57
(g73
g59
NtRp4549
(dp4550
g62
(dp4551
sg71
g4545
sg64
(lp4552
g57
(g78
g59
NtRp4553
(dp4554
g62
(dp4555
sg71
g4549
sg64
(lp4556
g57
(g58
g59
NtRp4557
(dp4558
g62
(dp4559
g70
I4
ssg71
g4553
sg64
(lp4560
g57
(g66
g59
NtRp4561
(dp4562
g62
(dp4563
g70
I3
ssg71
Nsg64
(lp4564
g57
(g73
g59
NtRp4565
(dp4566
g62
(dp4567
sg71
g4561
sg64
(lp4568
g57
(g78
g59
NtRp4569
(dp4570
g62
(dp4571
sg71
g4565
sg64
(lp4572
g57
(g58
g59
NtRp4573
(dp4574
g62
(dp4575
g70
I3
ssg71
g4569
sg64
(lp4576
cgluon.languages
lazyT_unpickle
p4577
(S't\x04\x00\x00\x00Home'
tRp4578
asbasbasbag57
(g73
g59
NtRp4579
(dp4580
g62
(dp4581
sg71
g4561
sg64
(lp4582
g57
(g78
g59
NtRp4583
(dp4584
g62
(dp4585
sg71
g4579
sg64
(lp4586
g57
(g58
g59
NtRp4587
(dp4588
g62
(dp4589
g70
I3
ssg71
g4583
sg64
(lp4590
g100
asbasbasbag57
(g73
g59
NtRp4591
(dp4592
g62
(dp4593
sg71
g4561
sg64
(lp4594
g57
(g78
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4591
sg64
(lp4598
g57
(g58
g59
NtRp4599
(dp4600
g62
(dp4601
g70
I3
ssg71
g4595
sg64
(lp4602
S'/DEV_bootstrap_ch/default/list_all_projects'
p4603
asbasbasbag57
(g73
g59
NtRp4604
(dp4605
g62
(dp4606
sg71
g4561
sg64
(lp4607
g57
(g78
g59
NtRp4608
(dp4609
g62
(dp4610
sg71
g4604
sg64
(lp4611
g57
(g58
g59
NtRp4612
(dp4613
g62
(dp4614
g70
I3
ssg71
g4608
sg64
(lp4615
g57
(g66
g59
NtRp4616
(dp4617
g62
(dp4618
g70
I2
ssg71
Nsg64
(lp4619
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4620
(dp4621
g62
(dp4622
sg71
g3956
sg64
(lp4623
g57
(g78
g59
NtRp4624
(dp4625
g62
(dp4626
g82
g83
ssg71
g4620
sg64
(lp4627
S'meta'
p4628
asbag57
(g78
g59
NtRp4629
(dp4630
g62
(dp4631
g89
g90
ssg71
g4620
sg64
(lp4632
S':'
asbag57
(g78
g59
NtRp4633
(dp4634
g62
(dp4635
sg71
g4620
sg64
(lp4636
g57
(g58
g59
NtRp4637
(dp4638
g62
(dp4639
g70
I5
ssg71
g4633
sg64
(lp4640
g57
(g66
g59
NtRp4641
(dp4642
g62
(dp4643
g70
I4
ssg71
Nsg64
(lp4644
g57
(g73
g59
NtRp4645
(dp4646
g62
(dp4647
sg71
g4641
sg64
(lp4648
g57
(g78
g59
NtRp4649
(dp4650
g62
(dp4651
g82
g83
ssg71
g4645
sg64
(lp4652
S'author'
p4653
asbag57
(g78
g59
NtRp4654
(dp4655
g62
(dp4656
g89
g90
ssg71
g4645
sg64
(lp4657
S':'
asbag57
(g78
g59
NtRp4658
(dp4659
g62
(dp4660
sg71
g4645
sg64
(lp4661
g57
(g58
g59
NtRp4662
(dp4663
g62
(dp4664
g70
I4
ssg71
g4658
sg64
(lp4665
S'Vikram Pudi <vikram@iiit.ac.in>'
p4666
asbasbasbag57
(g73
g59
NtRp4667
(dp4668
g62
(dp4669
sg71
g4641
sg64
(lp4670
g57
(g78
g59
NtRp4671
(dp4672
g62
(dp4673
g82
g83
ssg71
g4667
sg64
(lp4674
S'copyright'
p4675
asbag57
(g78
g59
NtRp4676
(dp4677
g62
(dp4678
g89
g90
ssg71
g4667
sg64
(lp4679
S':'
asbag57
(g78
g59
NtRp4680
(dp4681
g62
(dp4682
sg71
g4667
sg64
(lp4683
g57
(g58
g59
NtRp4684
(dp4685
g62
(dp4686
g70
I4
ssg71
g4680
sg64
(lp4687
S'Copyright 2011'
p4688
asbasbasbag57
(g73
g59
NtRp4689
(dp4690
g62
(dp4691
sg71
g4641
sg64
(lp4692
g57
(g78
g59
NtRp4693
(dp4694
g62
(dp4695
g82
g83
ssg71
g4689
sg64
(lp4696
S'description'
p4697
asbag57
(g78
g59
NtRp4698
(dp4699
g62
(dp4700
g89
g90
ssg71
g4689
sg64
(lp4701
S':'
asbag57
(g78
g59
NtRp4702
(dp4703
g62
(dp4704
sg71
g4689
sg64
(lp4705
g57
(g58
g59
NtRp4706
(dp4707
g62
(dp4708
g70
I4
ssg71
g4702
sg64
(lp4709
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4710
asbasbasbag57
(g73
g59
NtRp4711
(dp4712
g62
(dp4713
sg71
g4641
sg64
(lp4714
g57
(g78
g59
NtRp4715
(dp4716
g62
(dp4717
g82
g83
ssg71
g4711
sg64
(lp4718
S'generator'
p4719
asbag57
(g78
g59
NtRp4720
(dp4721
g62
(dp4722
g89
g90
ssg71
g4711
sg64
(lp4723
S':'
asbag57
(g78
g59
NtRp4724
(dp4725
g62
(dp4726
sg71
g4711
sg64
(lp4727
g57
(g58
g59
NtRp4728
(dp4729
g62
(dp4730
g70
I4
ssg71
g4724
sg64
(lp4731
S'Web2py Web Framework'
p4732
asbasbasbag57
(g73
g59
NtRp4733
(dp4734
g62
(dp4735
sg71
g4641
sg64
(lp4736
g57
(g78
g59
NtRp4737
(dp4738
g62
(dp4739
g82
g83
ssg71
g4733
sg64
(lp4740
S'keywords'
p4741
asbag57
(g78
g59
NtRp4742
(dp4743
g62
(dp4744
g89
g90
ssg71
g4733
sg64
(lp4745
S':'
asbag57
(g78
g59
NtRp4746
(dp4747
g62
(dp4748
sg71
g4733
sg64
(lp4749
g57
(g58
g59
NtRp4750
(dp4751
g62
(dp4752
g70
I4
ssg71
g4746
sg64
(lp4753
S'web2py, python, metabolome, metabolomics'
p4754
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4755
(dp4756
g62
(dp4757
sg71
g3956
sg64
(lp4758
g57
(g78
g59
NtRp4759
(dp4760
g62
(dp4761
g82
g83
ssg71
g4755
sg64
(lp4762
S'models_to_run'
p4763
asbag57
(g78
g59
NtRp4764
(dp4765
g62
(dp4766
g89
g90
ssg71
g4755
sg64
(lp4767
S':'
asbag57
(g78
g59
NtRp4768
(dp4769
g62
(dp4770
sg71
g4755
sg64
(lp4771
g57
(g58
g59
NtRp4772
(dp4773
g62
(dp4774
g70
I5
ssg71
g4768
sg64
(lp4775
g57
(g66
g59
NtRp4776
(dp4777
g62
(dp4778
g70
I4
ssg71
Nsg64
(lp4779
g57
(g73
g59
NtRp4780
(dp4781
g62
(dp4782
sg71
g4776
sg64
(lp4783
g57
(g78
g59
NtRp4784
(dp4785
g62
(dp4786
sg71
g4780
sg64
(lp4787
g57
(g58
g59
NtRp4788
(dp4789
g62
(dp4790
g70
I4
ssg71
g4784
sg64
(lp4791
S'^\\w+\\.py$'
p4792
asbasbasbag57
(g73
g59
NtRp4793
(dp4794
g62
(dp4795
sg71
g4776
sg64
(lp4796
g57
(g78
g59
NtRp4797
(dp4798
g62
(dp4799
sg71
g4793
sg64
(lp4800
g57
(g58
g59
NtRp4801
(dp4802
g62
(dp4803
g70
I4
ssg71
g4797
sg64
(lp4804
S'^default/\\w+\\.py$'
p4805
asbasbasbag57
(g73
g59
NtRp4806
(dp4807
g62
(dp4808
sg71
g4776
sg64
(lp4809
g57
(g78
g59
NtRp4810
(dp4811
g62
(dp4812
sg71
g4806
sg64
(lp4813
g57
(g58
g59
NtRp4814
(dp4815
g62
(dp4816
g70
I4
ssg71
g4810
sg64
(lp4817
S'^default/list_all_dev_projects/\\w+\\.py$'
p4818
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4819
(dp4820
g62
(dp4821
sg71
g3956
sg64
(lp4822
g57
(g78
g59
NtRp4823
(dp4824
g62
(dp4825
g82
g83
ssg71
g4819
sg64
(lp4826
S'postprocessing'
p4827
asbag57
(g78
g59
NtRp4828
(dp4829
g62
(dp4830
g89
g90
ssg71
g4819
sg64
(lp4831
S':'
asbag57
(g78
g59
NtRp4832
(dp4833
g62
(dp4834
sg71
g4819
sg64
(lp4835
g57
(g58
g59
NtRp4836
(dp4837
g62
(dp4838
g70
I5
ssg71
g4832
sg64
(lp4839
g57
(g66
g59
NtRp4840
(dp4841
g62
(dp4842
g70
I4
ssg71
Nsg64
(lp4843
sbasbasbasbag57
(g73
g59
NtRp4844
(dp4845
g62
(dp4846
sg71
g3956
sg64
(lp4847
g57
(g78
g59
NtRp4848
(dp4849
g62
(dp4850
g82
g83
ssg71
g4844
sg64
(lp4851
S'session_cookie_expires'
p4852
asbag57
(g78
g59
NtRp4853
(dp4854
g62
(dp4855
g89
g90
ssg71
g4844
sg64
(lp4856
S':'
asbag57
(g78
g59
NtRp4857
(dp4858
g62
(dp4859
sg71
g4844
sg64
(lp4860
g57
(g58
g59
NtRp4861
(dp4862
g62
(dp4863
g70
I5
ssg71
g4857
sg64
(lp4864
S'None'
p4865
asbasbasbag57
(g73
g59
NtRp4866
(dp4867
g62
(dp4868
sg71
g3956
sg64
(lp4869
g57
(g78
g59
NtRp4870
(dp4871
g62
(dp4872
g82
g83
ssg71
g4866
sg64
(lp4873
S'session_data_name'
p4874
asbag57
(g78
g59
NtRp4875
(dp4876
g62
(dp4877
g89
g90
ssg71
g4866
sg64
(lp4878
S':'
asbag57
(g78
g59
NtRp4879
(dp4880
g62
(dp4881
sg71
g4866
sg64
(lp4882
g57
(g58
g59
NtRp4883
(dp4884
g62
(dp4885
g70
I5
ssg71
g4879
sg64
(lp4886
S'session_data_dev_bootstrap_ch'
p4887
asbasbasbag57
(g73
g59
NtRp4888
(dp4889
g62
(dp4890
sg71
g3956
sg64
(lp4891
g57
(g78
g59
NtRp4892
(dp4893
g62
(dp4894
g82
g83
ssg71
g4888
sg64
(lp4895
S'session_file'
p4896
asbag57
(g78
g59
NtRp4897
(dp4898
g62
(dp4899
g89
g90
ssg71
g4888
sg64
(lp4900
S':'
asbag57
(g78
g59
NtRp4901
(dp4902
g62
(dp4903
sg71
g4888
sg64
(lp4904
g57
(g58
g59
NtRp4905
(dp4906
g62
(dp4907
g70
I5
ssg71
g4901
sg64
(lp4908
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xae921f98>"
p4909
asbasbasbag57
(g73
g59
NtRp4910
(dp4911
g62
(dp4912
sg71
g3956
sg64
(lp4913
g57
(g78
g59
NtRp4914
(dp4915
g62
(dp4916
g82
g83
ssg71
g4910
sg64
(lp4917
S'session_filename'
p4918
asbag57
(g78
g59
NtRp4919
(dp4920
g62
(dp4921
g89
g90
ssg71
g4910
sg64
(lp4922
S':'
asbag57
(g78
g59
NtRp4923
(dp4924
g62
(dp4925
sg71
g4910
sg64
(lp4926
g57
(g58
g59
NtRp4927
(dp4928
g62
(dp4929
g70
I5
ssg71
g4923
sg64
(lp4930
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4931
asbasbasbag57
(g73
g59
NtRp4932
(dp4933
g62
(dp4934
sg71
g3956
sg64
(lp4935
g57
(g78
g59
NtRp4936
(dp4937
g62
(dp4938
g82
g83
ssg71
g4932
sg64
(lp4939
S'session_id'
p4940
asbag57
(g78
g59
NtRp4941
(dp4942
g62
(dp4943
g89
g90
ssg71
g4932
sg64
(lp4944
S':'
asbag57
(g78
g59
NtRp4945
(dp4946
g62
(dp4947
sg71
g4932
sg64
(lp4948
g57
(g58
g59
NtRp4949
(dp4950
g62
(dp4951
g70
I5
ssg71
g4945
sg64
(lp4952
g538
asbasbasbag57
(g73
g59
NtRp4953
(dp4954
g62
(dp4955
sg71
g3956
sg64
(lp4956
g57
(g78
g59
NtRp4957
(dp4958
g62
(dp4959
g82
g83
ssg71
g4953
sg64
(lp4960
S'session_id_name'
p4961
asbag57
(g78
g59
NtRp4962
(dp4963
g62
(dp4964
g89
g90
ssg71
g4953
sg64
(lp4965
S':'
asbag57
(g78
g59
NtRp4966
(dp4967
g62
(dp4968
sg71
g4953
sg64
(lp4969
g57
(g58
g59
NtRp4970
(dp4971
g62
(dp4972
g70
I5
ssg71
g4966
sg64
(lp4973
g4013
asbasbasbag57
(g73
g59
NtRp4974
(dp4975
g62
(dp4976
sg71
g3956
sg64
(lp4977
g57
(g78
g59
NtRp4978
(dp4979
g62
(dp4980
g82
g83
ssg71
g4974
sg64
(lp4981
S'session_locked'
p4982
asbag57
(g78
g59
NtRp4983
(dp4984
g62
(dp4985
g89
g90
ssg71
g4974
sg64
(lp4986
S':'
asbag57
(g78
g59
NtRp4987
(dp4988
g62
(dp4989
sg71
g4974
sg64
(lp4990
g57
(g58
g59
NtRp4991
(dp4992
g62
(dp4993
g70
I5
ssg71
g4987
sg64
(lp4994
g1670
asbasbasbag57
(g73
g59
NtRp4995
(dp4996
g62
(dp4997
sg71
g3956
sg64
(lp4998
g57
(g78
g59
NtRp4999
(dp5000
g62
(dp5001
g82
g83
ssg71
g4995
sg64
(lp5002
S'session_new'
p5003
asbag57
(g78
g59
NtRp5004
(dp5005
g62
(dp5006
g89
g90
ssg71
g4995
sg64
(lp5007
S':'
asbag57
(g78
g59
NtRp5008
(dp5009
g62
(dp5010
sg71
g4995
sg64
(lp5011
g57
(g58
g59
NtRp5012
(dp5013
g62
(dp5014
g70
I5
ssg71
g5008
sg64
(lp5015
g100
asbasbasbag57
(g73
g59
NtRp5016
(dp5017
g62
(dp5018
sg71
g3956
sg64
(lp5019
g57
(g78
g59
NtRp5020
(dp5021
g62
(dp5022
g82
g83
ssg71
g5016
sg64
(lp5023
S'session_storage_type'
p5024
asbag57
(g78
g59
NtRp5025
(dp5026
g62
(dp5027
g89
g90
ssg71
g5016
sg64
(lp5028
S':'
asbag57
(g78
g59
NtRp5029
(dp5030
g62
(dp5031
sg71
g5016
sg64
(lp5032
g57
(g58
g59
NtRp5033
(dp5034
g62
(dp5035
g70
I5
ssg71
g5029
sg64
(lp5036
g3148
asbasbasbag57
(g73
g59
NtRp5037
(dp5038
g62
(dp5039
sg71
g3956
sg64
(lp5040
g57
(g78
g59
NtRp5041
(dp5042
g62
(dp5043
g82
g83
ssg71
g5037
sg64
(lp5044
S'status'
p5045
asbag57
(g78
g59
NtRp5046
(dp5047
g62
(dp5048
g89
g90
ssg71
g5037
sg64
(lp5049
S':'
asbag57
(g78
g59
NtRp5050
(dp5051
g62
(dp5052
sg71
g5037
sg64
(lp5053
g57
(g58
g59
NtRp5054
(dp5055
g62
(dp5056
g70
I5
ssg71
g5050
sg64
(lp5057
S'200'
p5058
asbasbasbag57
(g73
g59
NtRp5059
(dp5060
g62
(dp5061
sg71
g3956
sg64
(lp5062
g57
(g78
g59
NtRp5063
(dp5064
g62
(dp5065
g82
g83
ssg71
g5059
sg64
(lp5066
S'subtitle'
p5067
asbag57
(g78
g59
NtRp5068
(dp5069
g62
(dp5070
g89
g90
ssg71
g5059
sg64
(lp5071
S':'
asbag57
(g78
g59
NtRp5072
(dp5073
g62
(dp5074
sg71
g5059
sg64
(lp5075
g57
(g58
g59
NtRp5076
(dp5077
g62
(dp5078
g70
I5
ssg71
g5072
sg64
(lp5079
g4577
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5080
asbasbasbag57
(g73
g59
NtRp5081
(dp5082
g62
(dp5083
sg71
g3956
sg64
(lp5084
g57
(g78
g59
NtRp5085
(dp5086
g62
(dp5087
g82
g83
ssg71
g5081
sg64
(lp5088
g3822
asbag57
(g78
g59
NtRp5089
(dp5090
g62
(dp5091
g89
g90
ssg71
g5081
sg64
(lp5092
S':'
asbag57
(g78
g59
NtRp5093
(dp5094
g62
(dp5095
sg71
g5081
sg64
(lp5096
g57
(g58
g59
NtRp5097
(dp5098
g62
(dp5099
g70
I5
ssg71
g5093
sg64
(lp5100
g122
asbasbasbag57
(g73
g59
NtRp5101
(dp5102
g62
(dp5103
sg71
g3956
sg64
(lp5104
g57
(g78
g59
NtRp5105
(dp5106
g62
(dp5107
g82
g83
ssg71
g5101
sg64
(lp5108
S'view'
p5109
asbag57
(g78
g59
NtRp5110
(dp5111
g62
(dp5112
g89
g90
ssg71
g5101
sg64
(lp5113
S':'
asbag57
(g78
g59
NtRp5114
(dp5115
g62
(dp5116
sg71
g5101
sg64
(lp5117
g57
(g58
g59
NtRp5118
(dp5119
g62
(dp5120
g70
I5
ssg71
g5114
sg64
(lp5121
S'default/list_all_dev_projects.html'
p5122
asbasbasbasbasbsS'locals'
p5123
(dp5124
g42
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p5125
sS'row'
p5126
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p5127
sssS'traceback'
p5128
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1126, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 323, in list_all_dev_projects\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2489, in smartgrid\n    user_signature=user_signature, **kwargs)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2258, in grid\n    if link(row):\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 317, in <lambda>\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\nTypeError: getargs() takes exactly 3 arguments (2 given)\n'
p5129
s.