(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n#           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))) \\\n        ]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'id\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'id'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'3'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'2'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g67
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
g82
g83
ssg71
g210
sg64
(lp217
S'body'
p218
asbag57
(g78
g59
NtRp219
(dp220
g62
(dp221
g89
g90
ssg71
g210
sg64
(lp222
S':'
asbag57
(g78
g59
NtRp223
(dp224
g62
(dp225
sg71
g210
sg64
(lp226
g57
(g58
g59
NtRp227
(dp228
g62
(dp229
g70
I5
ssg71
g223
sg64
(lp230
S'<cStringIO.StringO object at 0xb0544420>'
p231
asbasbasbag57
(g73
g59
NtRp232
(dp233
g62
(dp234
sg71
g67
sg64
(lp235
g57
(g78
g59
NtRp236
(dp237
g62
(dp238
g82
g83
ssg71
g232
sg64
(lp239
S'cid'
p240
asbag57
(g78
g59
NtRp241
(dp242
g62
(dp243
g89
g90
ssg71
g232
sg64
(lp244
S':'
asbag57
(g78
g59
NtRp245
(dp246
g62
(dp247
sg71
g232
sg64
(lp248
g57
(g58
g59
NtRp249
(dp250
g62
(dp251
g70
I5
ssg71
g245
sg64
(lp252
S'None'
p253
asbasbasbag57
(g73
g59
NtRp254
(dp255
g62
(dp256
sg71
g67
sg64
(lp257
g57
(g78
g59
NtRp258
(dp259
g62
(dp260
g82
g83
ssg71
g254
sg64
(lp261
S'client'
p262
asbag57
(g78
g59
NtRp263
(dp264
g62
(dp265
g89
g90
ssg71
g254
sg64
(lp266
S':'
asbag57
(g78
g59
NtRp267
(dp268
g62
(dp269
sg71
g254
sg64
(lp270
g57
(g58
g59
NtRp271
(dp272
g62
(dp273
g70
I5
ssg71
g267
sg64
(lp274
S'127.0.0.1'
p275
asbasbasbag57
(g73
g59
NtRp276
(dp277
g62
(dp278
sg71
g67
sg64
(lp279
g57
(g78
g59
NtRp280
(dp281
g62
(dp282
g82
g83
ssg71
g276
sg64
(lp283
S'controller'
p284
asbag57
(g78
g59
NtRp285
(dp286
g62
(dp287
g89
g90
ssg71
g276
sg64
(lp288
S':'
asbag57
(g78
g59
NtRp289
(dp290
g62
(dp291
sg71
g276
sg64
(lp292
g57
(g58
g59
NtRp293
(dp294
g62
(dp295
g70
I5
ssg71
g289
sg64
(lp296
S'default'
p297
asbasbasbag57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g67
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'cookies'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I5
ssg71
g311
sg64
(lp318
g57
(g66
g59
NtRp319
(dp320
g62
(dp321
g70
I4
ssg71
Nsg64
(lp322
g57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g319
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'session_id_dev_bootstrap_ch'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I4
ssg71
g336
sg64
(lp343
S'127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p344
ag57
(g66
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
Nsg64
(lp348
g57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g345
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'comment'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g345
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'domain'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g345
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'expires'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g345
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'httponly'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g345
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'max-age'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g345
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'path'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g345
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'secure'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g345
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'version'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g67
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'env'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I5
ssg71
g530
sg64
(lp537
g57
(g66
g59
NtRp538
(dp539
g62
(dp540
g70
I4
ssg71
Nsg64
(lp541
g57
(g73
g59
NtRp542
(dp543
g62
(dp544
sg71
g538
sg64
(lp545
g57
(g78
g59
NtRp546
(dp547
g62
(dp548
g82
g83
ssg71
g542
sg64
(lp549
S'app_folders'
p550
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g542
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g542
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I4
ssg71
g555
sg64
(lp562
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p563
asbasbasbag57
(g73
g59
NtRp564
(dp565
g62
(dp566
sg71
g538
sg64
(lp567
g57
(g78
g59
NtRp568
(dp569
g62
(dp570
g82
g83
ssg71
g564
sg64
(lp571
S'applications_parent'
p572
asbag57
(g78
g59
NtRp573
(dp574
g62
(dp575
g89
g90
ssg71
g564
sg64
(lp576
S':'
asbag57
(g78
g59
NtRp577
(dp578
g62
(dp579
sg71
g564
sg64
(lp580
g57
(g58
g59
NtRp581
(dp582
g62
(dp583
g70
I4
ssg71
g577
sg64
(lp584
S'/home/anil/bootstrap/web2py'
p585
asbasbasbag57
(g73
g59
NtRp586
(dp587
g62
(dp588
sg71
g538
sg64
(lp589
g57
(g78
g59
NtRp590
(dp591
g62
(dp592
g82
g83
ssg71
g586
sg64
(lp593
S'cmd_args'
p594
asbag57
(g78
g59
NtRp595
(dp596
g62
(dp597
g89
g90
ssg71
g586
sg64
(lp598
S':'
asbag57
(g78
g59
NtRp599
(dp600
g62
(dp601
sg71
g586
sg64
(lp602
g57
(g58
g59
NtRp603
(dp604
g62
(dp605
g70
I4
ssg71
g599
sg64
(lp606
g57
(g66
g59
NtRp607
(dp608
g62
(dp609
g70
I3
ssg71
Nsg64
(lp610
sbasbasbasbag57
(g73
g59
NtRp611
(dp612
g62
(dp613
sg71
g538
sg64
(lp614
g57
(g78
g59
NtRp615
(dp616
g62
(dp617
g82
g83
ssg71
g611
sg64
(lp618
S'cmd_options'
p619
asbag57
(g78
g59
NtRp620
(dp621
g62
(dp622
g89
g90
ssg71
g611
sg64
(lp623
S':'
asbag57
(g78
g59
NtRp624
(dp625
g62
(dp626
sg71
g611
sg64
(lp627
g57
(g58
g59
NtRp628
(dp629
g62
(dp630
g70
I4
ssg71
g624
sg64
(lp631
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p632
asbasbasbag57
(g73
g59
NtRp633
(dp634
g62
(dp635
sg71
g538
sg64
(lp636
g57
(g78
g59
NtRp637
(dp638
g62
(dp639
g82
g83
ssg71
g633
sg64
(lp640
S'db_sessions'
p641
asbag57
(g78
g59
NtRp642
(dp643
g62
(dp644
g89
g90
ssg71
g633
sg64
(lp645
S':'
asbag57
(g78
g59
NtRp646
(dp647
g62
(dp648
sg71
g633
sg64
(lp649
g57
(g58
g59
NtRp650
(dp651
g62
(dp652
g70
I4
ssg71
g646
sg64
(lp653
S'set([])'
p654
asbasbasbag57
(g73
g59
NtRp655
(dp656
g62
(dp657
sg71
g538
sg64
(lp658
g57
(g78
g59
NtRp659
(dp660
g62
(dp661
g82
g83
ssg71
g655
sg64
(lp662
S'debugging'
p663
asbag57
(g78
g59
NtRp664
(dp665
g62
(dp666
g89
g90
ssg71
g655
sg64
(lp667
S':'
asbag57
(g78
g59
NtRp668
(dp669
g62
(dp670
sg71
g655
sg64
(lp671
g57
(g58
g59
NtRp672
(dp673
g62
(dp674
g70
I4
ssg71
g668
sg64
(lp675
g100
asbasbasbag57
(g73
g59
NtRp676
(dp677
g62
(dp678
sg71
g538
sg64
(lp679
g57
(g78
g59
NtRp680
(dp681
g62
(dp682
g82
g83
ssg71
g676
sg64
(lp683
S'gluon_parent'
p684
asbag57
(g78
g59
NtRp685
(dp686
g62
(dp687
g89
g90
ssg71
g676
sg64
(lp688
S':'
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
sg71
g676
sg64
(lp692
g57
(g58
g59
NtRp693
(dp694
g62
(dp695
g70
I4
ssg71
g689
sg64
(lp696
S'/home/anil/bootstrap/web2py'
p697
asbasbasbag57
(g73
g59
NtRp698
(dp699
g62
(dp700
sg71
g538
sg64
(lp701
g57
(g78
g59
NtRp702
(dp703
g62
(dp704
g82
g83
ssg71
g698
sg64
(lp705
S'http_accept'
p706
asbag57
(g78
g59
NtRp707
(dp708
g62
(dp709
g89
g90
ssg71
g698
sg64
(lp710
S':'
asbag57
(g78
g59
NtRp711
(dp712
g62
(dp713
sg71
g698
sg64
(lp714
g57
(g58
g59
NtRp715
(dp716
g62
(dp717
g70
I4
ssg71
g711
sg64
(lp718
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p719
asbasbasbag57
(g73
g59
NtRp720
(dp721
g62
(dp722
sg71
g538
sg64
(lp723
g57
(g78
g59
NtRp724
(dp725
g62
(dp726
g82
g83
ssg71
g720
sg64
(lp727
S'http_accept_charset'
p728
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g720
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g720
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I4
ssg71
g733
sg64
(lp740
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p741
asbasbasbag57
(g73
g59
NtRp742
(dp743
g62
(dp744
sg71
g538
sg64
(lp745
g57
(g78
g59
NtRp746
(dp747
g62
(dp748
g82
g83
ssg71
g742
sg64
(lp749
S'http_accept_encoding'
p750
asbag57
(g78
g59
NtRp751
(dp752
g62
(dp753
g89
g90
ssg71
g742
sg64
(lp754
S':'
asbag57
(g78
g59
NtRp755
(dp756
g62
(dp757
sg71
g742
sg64
(lp758
g57
(g58
g59
NtRp759
(dp760
g62
(dp761
g70
I4
ssg71
g755
sg64
(lp762
S'gzip,deflate,sdch'
p763
asbasbasbag57
(g73
g59
NtRp764
(dp765
g62
(dp766
sg71
g538
sg64
(lp767
g57
(g78
g59
NtRp768
(dp769
g62
(dp770
g82
g83
ssg71
g764
sg64
(lp771
S'http_accept_language'
p772
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
g89
g90
ssg71
g764
sg64
(lp776
S':'
asbag57
(g78
g59
NtRp777
(dp778
g62
(dp779
sg71
g764
sg64
(lp780
g57
(g58
g59
NtRp781
(dp782
g62
(dp783
g70
I4
ssg71
g777
sg64
(lp784
S'en-US,en;q=0.8'
p785
asbasbasbag57
(g73
g59
NtRp786
(dp787
g62
(dp788
sg71
g538
sg64
(lp789
g57
(g78
g59
NtRp790
(dp791
g62
(dp792
g82
g83
ssg71
g786
sg64
(lp793
S'http_cache_control'
p794
asbag57
(g78
g59
NtRp795
(dp796
g62
(dp797
g89
g90
ssg71
g786
sg64
(lp798
S':'
asbag57
(g78
g59
NtRp799
(dp800
g62
(dp801
sg71
g786
sg64
(lp802
g57
(g58
g59
NtRp803
(dp804
g62
(dp805
g70
I4
ssg71
g799
sg64
(lp806
S'max-age=0'
p807
asbasbasbag57
(g73
g59
NtRp808
(dp809
g62
(dp810
sg71
g538
sg64
(lp811
g57
(g78
g59
NtRp812
(dp813
g62
(dp814
g82
g83
ssg71
g808
sg64
(lp815
S'http_connection'
p816
asbag57
(g78
g59
NtRp817
(dp818
g62
(dp819
g89
g90
ssg71
g808
sg64
(lp820
S':'
asbag57
(g78
g59
NtRp821
(dp822
g62
(dp823
sg71
g808
sg64
(lp824
g57
(g58
g59
NtRp825
(dp826
g62
(dp827
g70
I4
ssg71
g821
sg64
(lp828
S'keep-alive'
p829
asbasbasbag57
(g73
g59
NtRp830
(dp831
g62
(dp832
sg71
g538
sg64
(lp833
g57
(g78
g59
NtRp834
(dp835
g62
(dp836
g82
g83
ssg71
g830
sg64
(lp837
S'http_cookie'
p838
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
g89
g90
ssg71
g830
sg64
(lp842
S':'
asbag57
(g78
g59
NtRp843
(dp844
g62
(dp845
sg71
g830
sg64
(lp846
g57
(g58
g59
NtRp847
(dp848
g62
(dp849
g70
I4
ssg71
g843
sg64
(lp850
S'session_id_dev_bootstrap_ch=127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p851
asbasbasbag57
(g73
g59
NtRp852
(dp853
g62
(dp854
sg71
g538
sg64
(lp855
g57
(g78
g59
NtRp856
(dp857
g62
(dp858
g82
g83
ssg71
g852
sg64
(lp859
S'http_host'
p860
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
g89
g90
ssg71
g852
sg64
(lp864
S':'
asbag57
(g78
g59
NtRp865
(dp866
g62
(dp867
sg71
g852
sg64
(lp868
g57
(g58
g59
NtRp869
(dp870
g62
(dp871
g70
I4
ssg71
g865
sg64
(lp872
S'127.0.0.1:8000'
p873
asbasbasbag57
(g73
g59
NtRp874
(dp875
g62
(dp876
sg71
g538
sg64
(lp877
g57
(g78
g59
NtRp878
(dp879
g62
(dp880
g82
g83
ssg71
g874
sg64
(lp881
S'http_referer'
p882
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
g89
g90
ssg71
g874
sg64
(lp886
S':'
asbag57
(g78
g59
NtRp887
(dp888
g62
(dp889
sg71
g874
sg64
(lp890
g57
(g58
g59
NtRp891
(dp892
g62
(dp893
g70
I4
ssg71
g887
sg64
(lp894
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3/sample.experiment/2?_signature=a9459577c015179aefc5482d1b8a4833cc765d43'
p895
asbasbasbag57
(g73
g59
NtRp896
(dp897
g62
(dp898
sg71
g538
sg64
(lp899
g57
(g78
g59
NtRp900
(dp901
g62
(dp902
g82
g83
ssg71
g896
sg64
(lp903
S'http_user_agent'
p904
asbag57
(g78
g59
NtRp905
(dp906
g62
(dp907
g89
g90
ssg71
g896
sg64
(lp908
S':'
asbag57
(g78
g59
NtRp909
(dp910
g62
(dp911
sg71
g896
sg64
(lp912
g57
(g58
g59
NtRp913
(dp914
g62
(dp915
g70
I4
ssg71
g909
sg64
(lp916
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p917
asbasbasbag57
(g73
g59
NtRp918
(dp919
g62
(dp920
sg71
g538
sg64
(lp921
g57
(g78
g59
NtRp922
(dp923
g62
(dp924
g82
g83
ssg71
g918
sg64
(lp925
S'is_jython'
p926
asbag57
(g78
g59
NtRp927
(dp928
g62
(dp929
g89
g90
ssg71
g918
sg64
(lp930
S':'
asbag57
(g78
g59
NtRp931
(dp932
g62
(dp933
sg71
g918
sg64
(lp934
g57
(g58
g59
NtRp935
(dp936
g62
(dp937
g70
I4
ssg71
g931
sg64
(lp938
g100
asbasbasbag57
(g73
g59
NtRp939
(dp940
g62
(dp941
sg71
g538
sg64
(lp942
g57
(g78
g59
NtRp943
(dp944
g62
(dp945
g82
g83
ssg71
g939
sg64
(lp946
S'is_pypy'
p947
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
g89
g90
ssg71
g939
sg64
(lp951
S':'
asbag57
(g78
g59
NtRp952
(dp953
g62
(dp954
sg71
g939
sg64
(lp955
g57
(g58
g59
NtRp956
(dp957
g62
(dp958
g70
I4
ssg71
g952
sg64
(lp959
g100
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g538
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'local_hosts'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
g57
(g66
g59
NtRp981
(dp982
g62
(dp983
g70
I3
ssg71
Nsg64
(lp984
g57
(g73
g59
NtRp985
(dp986
g62
(dp987
sg71
g981
sg64
(lp988
g57
(g78
g59
NtRp989
(dp990
g62
(dp991
sg71
g985
sg64
(lp992
g57
(g58
g59
NtRp993
(dp994
g62
(dp995
g70
I3
ssg71
g989
sg64
(lp996
S'::1'
p997
asbasbasbag57
(g73
g59
NtRp998
(dp999
g62
(dp1000
sg71
g981
sg64
(lp1001
g57
(g78
g59
NtRp1002
(dp1003
g62
(dp1004
sg71
g998
sg64
(lp1005
g57
(g58
g59
NtRp1006
(dp1007
g62
(dp1008
g70
I3
ssg71
g1002
sg64
(lp1009
S'127.0.1.1'
p1010
asbasbasbag57
(g73
g59
NtRp1011
(dp1012
g62
(dp1013
sg71
g981
sg64
(lp1014
g57
(g78
g59
NtRp1015
(dp1016
g62
(dp1017
sg71
g1011
sg64
(lp1018
g57
(g58
g59
NtRp1019
(dp1020
g62
(dp1021
g70
I3
ssg71
g1015
sg64
(lp1022
S'::ffff:127.0.0.1'
p1023
asbasbasbag57
(g73
g59
NtRp1024
(dp1025
g62
(dp1026
sg71
g981
sg64
(lp1027
g57
(g78
g59
NtRp1028
(dp1029
g62
(dp1030
sg71
g1024
sg64
(lp1031
g57
(g58
g59
NtRp1032
(dp1033
g62
(dp1034
g70
I3
ssg71
g1028
sg64
(lp1035
S'127.0.0.1'
p1036
asbasbasbag57
(g73
g59
NtRp1037
(dp1038
g62
(dp1039
sg71
g981
sg64
(lp1040
g57
(g78
g59
NtRp1041
(dp1042
g62
(dp1043
sg71
g1037
sg64
(lp1044
g57
(g58
g59
NtRp1045
(dp1046
g62
(dp1047
g70
I3
ssg71
g1041
sg64
(lp1048
S'anil-Inspiron-1525'
p1049
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1050
(dp1051
g62
(dp1052
sg71
g538
sg64
(lp1053
g57
(g78
g59
NtRp1054
(dp1055
g62
(dp1056
g82
g83
ssg71
g1050
sg64
(lp1057
S'path_info'
p1058
asbag57
(g78
g59
NtRp1059
(dp1060
g62
(dp1061
g89
g90
ssg71
g1050
sg64
(lp1062
S':'
asbag57
(g78
g59
NtRp1063
(dp1064
g62
(dp1065
sg71
g1050
sg64
(lp1066
g57
(g58
g59
NtRp1067
(dp1068
g62
(dp1069
g70
I4
ssg71
g1063
sg64
(lp1070
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3/sample.experiment/2'
p1071
asbasbasbag57
(g73
g59
NtRp1072
(dp1073
g62
(dp1074
sg71
g538
sg64
(lp1075
g57
(g78
g59
NtRp1076
(dp1077
g62
(dp1078
g82
g83
ssg71
g1072
sg64
(lp1079
S'query_string'
p1080
asbag57
(g78
g59
NtRp1081
(dp1082
g62
(dp1083
g89
g90
ssg71
g1072
sg64
(lp1084
S':'
asbag57
(g78
g59
NtRp1085
(dp1086
g62
(dp1087
sg71
g1072
sg64
(lp1088
g57
(g58
g59
NtRp1089
(dp1090
g62
(dp1091
g70
I4
ssg71
g1085
sg64
(lp1092
S''
asbasbasbag57
(g73
g59
NtRp1093
(dp1094
g62
(dp1095
sg71
g538
sg64
(lp1096
g57
(g78
g59
NtRp1097
(dp1098
g62
(dp1099
g82
g83
ssg71
g1093
sg64
(lp1100
S'remote_addr'
p1101
asbag57
(g78
g59
NtRp1102
(dp1103
g62
(dp1104
g89
g90
ssg71
g1093
sg64
(lp1105
S':'
asbag57
(g78
g59
NtRp1106
(dp1107
g62
(dp1108
sg71
g1093
sg64
(lp1109
g57
(g58
g59
NtRp1110
(dp1111
g62
(dp1112
g70
I4
ssg71
g1106
sg64
(lp1113
g275
asbasbasbag57
(g73
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g538
sg64
(lp1117
g57
(g78
g59
NtRp1118
(dp1119
g62
(dp1120
g82
g83
ssg71
g1114
sg64
(lp1121
S'remote_port'
p1122
asbag57
(g78
g59
NtRp1123
(dp1124
g62
(dp1125
g89
g90
ssg71
g1114
sg64
(lp1126
S':'
asbag57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
sg71
g1114
sg64
(lp1130
g57
(g58
g59
NtRp1131
(dp1132
g62
(dp1133
g70
I4
ssg71
g1127
sg64
(lp1134
S'37952'
p1135
asbasbasbag57
(g73
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g538
sg64
(lp1139
g57
(g78
g59
NtRp1140
(dp1141
g62
(dp1142
g82
g83
ssg71
g1136
sg64
(lp1143
S'request_method'
p1144
asbag57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g89
g90
ssg71
g1136
sg64
(lp1148
S':'
asbag57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
sg71
g1136
sg64
(lp1152
g57
(g58
g59
NtRp1153
(dp1154
g62
(dp1155
g70
I4
ssg71
g1149
sg64
(lp1156
S'GET'
p1157
asbasbasbag57
(g73
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g538
sg64
(lp1161
g57
(g78
g59
NtRp1162
(dp1163
g62
(dp1164
g82
g83
ssg71
g1158
sg64
(lp1165
S'request_uri'
p1166
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
g89
g90
ssg71
g1158
sg64
(lp1170
S':'
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
sg71
g1158
sg64
(lp1174
g57
(g58
g59
NtRp1175
(dp1176
g62
(dp1177
g70
I4
ssg71
g1171
sg64
(lp1178
g1071
asbasbasbag57
(g73
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g538
sg64
(lp1182
g57
(g78
g59
NtRp1183
(dp1184
g62
(dp1185
g82
g83
ssg71
g1179
sg64
(lp1186
S'script_name'
p1187
asbag57
(g78
g59
NtRp1188
(dp1189
g62
(dp1190
g89
g90
ssg71
g1179
sg64
(lp1191
S':'
asbag57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
sg71
g1179
sg64
(lp1195
g57
(g58
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I4
ssg71
g1192
sg64
(lp1199
S''
asbasbasbag57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g538
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
g82
g83
ssg71
g1200
sg64
(lp1207
S'server_name'
p1208
asbag57
(g78
g59
NtRp1209
(dp1210
g62
(dp1211
g89
g90
ssg71
g1200
sg64
(lp1212
S':'
asbag57
(g78
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1200
sg64
(lp1216
g57
(g58
g59
NtRp1217
(dp1218
g62
(dp1219
g70
I4
ssg71
g1213
sg64
(lp1220
S'anil-Inspiron-1525'
p1221
asbasbasbag57
(g73
g59
NtRp1222
(dp1223
g62
(dp1224
sg71
g538
sg64
(lp1225
g57
(g78
g59
NtRp1226
(dp1227
g62
(dp1228
g82
g83
ssg71
g1222
sg64
(lp1229
S'server_port'
p1230
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
g89
g90
ssg71
g1222
sg64
(lp1234
S':'
asbag57
(g78
g59
NtRp1235
(dp1236
g62
(dp1237
sg71
g1222
sg64
(lp1238
g57
(g58
g59
NtRp1239
(dp1240
g62
(dp1241
g70
I4
ssg71
g1235
sg64
(lp1242
S'8000'
p1243
asbasbasbag57
(g73
g59
NtRp1244
(dp1245
g62
(dp1246
sg71
g538
sg64
(lp1247
g57
(g78
g59
NtRp1248
(dp1249
g62
(dp1250
g82
g83
ssg71
g1244
sg64
(lp1251
S'server_protocol'
p1252
asbag57
(g78
g59
NtRp1253
(dp1254
g62
(dp1255
g89
g90
ssg71
g1244
sg64
(lp1256
S':'
asbag57
(g78
g59
NtRp1257
(dp1258
g62
(dp1259
sg71
g1244
sg64
(lp1260
g57
(g58
g59
NtRp1261
(dp1262
g62
(dp1263
g70
I4
ssg71
g1257
sg64
(lp1264
S'HTTP/1.1'
p1265
asbasbasbag57
(g73
g59
NtRp1266
(dp1267
g62
(dp1268
sg71
g538
sg64
(lp1269
g57
(g78
g59
NtRp1270
(dp1271
g62
(dp1272
g82
g83
ssg71
g1266
sg64
(lp1273
S'server_software'
p1274
asbag57
(g78
g59
NtRp1275
(dp1276
g62
(dp1277
g89
g90
ssg71
g1266
sg64
(lp1278
S':'
asbag57
(g78
g59
NtRp1279
(dp1280
g62
(dp1281
sg71
g1266
sg64
(lp1282
g57
(g58
g59
NtRp1283
(dp1284
g62
(dp1285
g70
I4
ssg71
g1279
sg64
(lp1286
S'Rocket 1.2.6'
p1287
asbasbasbag57
(g73
g59
NtRp1288
(dp1289
g62
(dp1290
sg71
g538
sg64
(lp1291
g57
(g78
g59
NtRp1292
(dp1293
g62
(dp1294
g82
g83
ssg71
g1288
sg64
(lp1295
S'web2py_path'
p1296
asbag57
(g78
g59
NtRp1297
(dp1298
g62
(dp1299
g89
g90
ssg71
g1288
sg64
(lp1300
S':'
asbag57
(g78
g59
NtRp1301
(dp1302
g62
(dp1303
sg71
g1288
sg64
(lp1304
g57
(g58
g59
NtRp1305
(dp1306
g62
(dp1307
g70
I4
ssg71
g1301
sg64
(lp1308
g585
asbasbasbag57
(g73
g59
NtRp1309
(dp1310
g62
(dp1311
sg71
g538
sg64
(lp1312
g57
(g78
g59
NtRp1313
(dp1314
g62
(dp1315
g82
g83
ssg71
g1309
sg64
(lp1316
S'web2py_version'
p1317
asbag57
(g78
g59
NtRp1318
(dp1319
g62
(dp1320
g89
g90
ssg71
g1309
sg64
(lp1321
S':'
asbag57
(g78
g59
NtRp1322
(dp1323
g62
(dp1324
sg71
g1309
sg64
(lp1325
g57
(g58
g59
NtRp1326
(dp1327
g62
(dp1328
g70
I4
ssg71
g1322
sg64
(lp1329
g57
(g66
g59
NtRp1330
(dp1331
g62
(dp1332
g70
I3
ssg71
Nsg64
(lp1333
g57
(g73
g59
NtRp1334
(dp1335
g62
(dp1336
sg71
g1330
sg64
(lp1337
g57
(g78
g59
NtRp1338
(dp1339
g62
(dp1340
sg71
g1334
sg64
(lp1341
g57
(g58
g59
NtRp1342
(dp1343
g62
(dp1344
g70
I3
ssg71
g1338
sg64
(lp1345
S'2'
asbasbasbag57
(g73
g59
NtRp1346
(dp1347
g62
(dp1348
sg71
g1330
sg64
(lp1349
g57
(g78
g59
NtRp1350
(dp1351
g62
(dp1352
sg71
g1346
sg64
(lp1353
g57
(g58
g59
NtRp1354
(dp1355
g62
(dp1356
g70
I3
ssg71
g1350
sg64
(lp1357
S'3'
asbasbasbag57
(g73
g59
NtRp1358
(dp1359
g62
(dp1360
sg71
g1330
sg64
(lp1361
g57
(g78
g59
NtRp1362
(dp1363
g62
(dp1364
sg71
g1358
sg64
(lp1365
g57
(g58
g59
NtRp1366
(dp1367
g62
(dp1368
g70
I3
ssg71
g1362
sg64
(lp1369
S'2'
asbasbasbag57
(g73
g59
NtRp1370
(dp1371
g62
(dp1372
sg71
g1330
sg64
(lp1373
g57
(g78
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g1370
sg64
(lp1377
g57
(g58
g59
NtRp1378
(dp1379
g62
(dp1380
g70
I3
ssg71
g1374
sg64
(lp1381
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1382
asbasbasbag57
(g73
g59
NtRp1383
(dp1384
g62
(dp1385
sg71
g1330
sg64
(lp1386
g57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
sg71
g1383
sg64
(lp1390
g57
(g58
g59
NtRp1391
(dp1392
g62
(dp1393
g70
I3
ssg71
g1387
sg64
(lp1394
S'stable'
p1395
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g538
sg64
(lp1399
g57
(g78
g59
NtRp1400
(dp1401
g62
(dp1402
g82
g83
ssg71
g1396
sg64
(lp1403
S'wsgi_errors'
p1404
asbag57
(g78
g59
NtRp1405
(dp1406
g62
(dp1407
g89
g90
ssg71
g1396
sg64
(lp1408
S':'
asbag57
(g78
g59
NtRp1409
(dp1410
g62
(dp1411
sg71
g1396
sg64
(lp1412
g57
(g58
g59
NtRp1413
(dp1414
g62
(dp1415
g70
I4
ssg71
g1409
sg64
(lp1416
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p1417
asbasbasbag57
(g73
g59
NtRp1418
(dp1419
g62
(dp1420
sg71
g538
sg64
(lp1421
g57
(g78
g59
NtRp1422
(dp1423
g62
(dp1424
g82
g83
ssg71
g1418
sg64
(lp1425
S'wsgi_file_wrapper'
p1426
asbag57
(g78
g59
NtRp1427
(dp1428
g62
(dp1429
g89
g90
ssg71
g1418
sg64
(lp1430
S':'
asbag57
(g78
g59
NtRp1431
(dp1432
g62
(dp1433
sg71
g1418
sg64
(lp1434
g57
(g58
g59
NtRp1435
(dp1436
g62
(dp1437
g70
I4
ssg71
g1431
sg64
(lp1438
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p1439
asbasbasbag57
(g73
g59
NtRp1440
(dp1441
g62
(dp1442
sg71
g538
sg64
(lp1443
g57
(g78
g59
NtRp1444
(dp1445
g62
(dp1446
g82
g83
ssg71
g1440
sg64
(lp1447
S'wsgi_input'
p1448
asbag57
(g78
g59
NtRp1449
(dp1450
g62
(dp1451
g89
g90
ssg71
g1440
sg64
(lp1452
S':'
asbag57
(g78
g59
NtRp1453
(dp1454
g62
(dp1455
sg71
g1440
sg64
(lp1456
g57
(g58
g59
NtRp1457
(dp1458
g62
(dp1459
g70
I4
ssg71
g1453
sg64
(lp1460
S'<socket._fileobject object at 0xae4941ec>'
p1461
asbasbasbag57
(g73
g59
NtRp1462
(dp1463
g62
(dp1464
sg71
g538
sg64
(lp1465
g57
(g78
g59
NtRp1466
(dp1467
g62
(dp1468
g82
g83
ssg71
g1462
sg64
(lp1469
S'wsgi_multiprocess'
p1470
asbag57
(g78
g59
NtRp1471
(dp1472
g62
(dp1473
g89
g90
ssg71
g1462
sg64
(lp1474
S':'
asbag57
(g78
g59
NtRp1475
(dp1476
g62
(dp1477
sg71
g1462
sg64
(lp1478
g57
(g58
g59
NtRp1479
(dp1480
g62
(dp1481
g70
I4
ssg71
g1475
sg64
(lp1482
g100
asbasbasbag57
(g73
g59
NtRp1483
(dp1484
g62
(dp1485
sg71
g538
sg64
(lp1486
g57
(g78
g59
NtRp1487
(dp1488
g62
(dp1489
g82
g83
ssg71
g1483
sg64
(lp1490
S'wsgi_multithread'
p1491
asbag57
(g78
g59
NtRp1492
(dp1493
g62
(dp1494
g89
g90
ssg71
g1483
sg64
(lp1495
S':'
asbag57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
sg71
g1483
sg64
(lp1499
g57
(g58
g59
NtRp1500
(dp1501
g62
(dp1502
g70
I4
ssg71
g1496
sg64
(lp1503
S'True'
p1504
asbasbasbag57
(g73
g59
NtRp1505
(dp1506
g62
(dp1507
sg71
g538
sg64
(lp1508
g57
(g78
g59
NtRp1509
(dp1510
g62
(dp1511
g82
g83
ssg71
g1505
sg64
(lp1512
S'wsgi_run_once'
p1513
asbag57
(g78
g59
NtRp1514
(dp1515
g62
(dp1516
g89
g90
ssg71
g1505
sg64
(lp1517
S':'
asbag57
(g78
g59
NtRp1518
(dp1519
g62
(dp1520
sg71
g1505
sg64
(lp1521
g57
(g58
g59
NtRp1522
(dp1523
g62
(dp1524
g70
I4
ssg71
g1518
sg64
(lp1525
g100
asbasbasbag57
(g73
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g538
sg64
(lp1529
g57
(g78
g59
NtRp1530
(dp1531
g62
(dp1532
g82
g83
ssg71
g1526
sg64
(lp1533
S'wsgi_url_scheme'
p1534
asbag57
(g78
g59
NtRp1535
(dp1536
g62
(dp1537
g89
g90
ssg71
g1526
sg64
(lp1538
S':'
asbag57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1526
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I4
ssg71
g1539
sg64
(lp1546
S'http'
p1547
asbasbasbag57
(g73
g59
NtRp1548
(dp1549
g62
(dp1550
sg71
g538
sg64
(lp1551
g57
(g78
g59
NtRp1552
(dp1553
g62
(dp1554
g82
g83
ssg71
g1548
sg64
(lp1555
S'wsgi_version'
p1556
asbag57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
g89
g90
ssg71
g1548
sg64
(lp1560
S':'
asbag57
(g78
g59
NtRp1561
(dp1562
g62
(dp1563
sg71
g1548
sg64
(lp1564
g57
(g58
g59
NtRp1565
(dp1566
g62
(dp1567
g70
I4
ssg71
g1561
sg64
(lp1568
g57
(g66
g59
NtRp1569
(dp1570
g62
(dp1571
g70
I3
ssg71
Nsg64
(lp1572
g57
(g73
g59
NtRp1573
(dp1574
g62
(dp1575
sg71
g1569
sg64
(lp1576
g57
(g78
g59
NtRp1577
(dp1578
g62
(dp1579
sg71
g1573
sg64
(lp1580
g57
(g58
g59
NtRp1581
(dp1582
g62
(dp1583
g70
I3
ssg71
g1577
sg64
(lp1584
S'1'
asbasbasbag57
(g73
g59
NtRp1585
(dp1586
g62
(dp1587
sg71
g1569
sg64
(lp1588
g57
(g78
g59
NtRp1589
(dp1590
g62
(dp1591
sg71
g1585
sg64
(lp1592
g57
(g58
g59
NtRp1593
(dp1594
g62
(dp1595
g70
I3
ssg71
g1589
sg64
(lp1596
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1597
(dp1598
g62
(dp1599
sg71
g67
sg64
(lp1600
g57
(g78
g59
NtRp1601
(dp1602
g62
(dp1603
g82
g83
ssg71
g1597
sg64
(lp1604
S'extension'
p1605
asbag57
(g78
g59
NtRp1606
(dp1607
g62
(dp1608
g89
g90
ssg71
g1597
sg64
(lp1609
S':'
asbag57
(g78
g59
NtRp1610
(dp1611
g62
(dp1612
sg71
g1597
sg64
(lp1613
g57
(g58
g59
NtRp1614
(dp1615
g62
(dp1616
g70
I5
ssg71
g1610
sg64
(lp1617
S'html'
p1618
asbasbasbag57
(g73
g59
NtRp1619
(dp1620
g62
(dp1621
sg71
g67
sg64
(lp1622
g57
(g78
g59
NtRp1623
(dp1624
g62
(dp1625
g82
g83
ssg71
g1619
sg64
(lp1626
S'folder'
p1627
asbag57
(g78
g59
NtRp1628
(dp1629
g62
(dp1630
g89
g90
ssg71
g1619
sg64
(lp1631
S':'
asbag57
(g78
g59
NtRp1632
(dp1633
g62
(dp1634
sg71
g1619
sg64
(lp1635
g57
(g58
g59
NtRp1636
(dp1637
g62
(dp1638
g70
I5
ssg71
g1632
sg64
(lp1639
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1640
asbasbasbag57
(g73
g59
NtRp1641
(dp1642
g62
(dp1643
sg71
g67
sg64
(lp1644
g57
(g78
g59
NtRp1645
(dp1646
g62
(dp1647
g82
g83
ssg71
g1641
sg64
(lp1648
S'function'
p1649
asbag57
(g78
g59
NtRp1650
(dp1651
g62
(dp1652
g89
g90
ssg71
g1641
sg64
(lp1653
S':'
asbag57
(g78
g59
NtRp1654
(dp1655
g62
(dp1656
sg71
g1641
sg64
(lp1657
g57
(g58
g59
NtRp1658
(dp1659
g62
(dp1660
g70
I5
ssg71
g1654
sg64
(lp1661
S'list_all_dev_projects'
p1662
asbasbasbag57
(g73
g59
NtRp1663
(dp1664
g62
(dp1665
sg71
g67
sg64
(lp1666
g57
(g78
g59
NtRp1667
(dp1668
g62
(dp1669
g82
g83
ssg71
g1663
sg64
(lp1670
S'get_vars'
p1671
asbag57
(g78
g59
NtRp1672
(dp1673
g62
(dp1674
g89
g90
ssg71
g1663
sg64
(lp1675
S':'
asbag57
(g78
g59
NtRp1676
(dp1677
g62
(dp1678
sg71
g1663
sg64
(lp1679
g57
(g58
g59
NtRp1680
(dp1681
g62
(dp1682
g70
I5
ssg71
g1676
sg64
(lp1683
g57
(g66
g59
NtRp1684
(dp1685
g62
(dp1686
g70
I4
ssg71
Nsg64
(lp1687
sbasbasbasbag57
(g73
g59
NtRp1688
(dp1689
g62
(dp1690
sg71
g67
sg64
(lp1691
g57
(g78
g59
NtRp1692
(dp1693
g62
(dp1694
g82
g83
ssg71
g1688
sg64
(lp1695
S'global_settings'
p1696
asbag57
(g78
g59
NtRp1697
(dp1698
g62
(dp1699
g89
g90
ssg71
g1688
sg64
(lp1700
S':'
asbag57
(g78
g59
NtRp1701
(dp1702
g62
(dp1703
sg71
g1688
sg64
(lp1704
g57
(g58
g59
NtRp1705
(dp1706
g62
(dp1707
g70
I5
ssg71
g1701
sg64
(lp1708
g57
(g66
g59
NtRp1709
(dp1710
g62
(dp1711
g70
I4
ssg71
Nsg64
(lp1712
g57
(g73
g59
NtRp1713
(dp1714
g62
(dp1715
sg71
g1709
sg64
(lp1716
g57
(g78
g59
NtRp1717
(dp1718
g62
(dp1719
g82
g83
ssg71
g1713
sg64
(lp1720
g550
asbag57
(g78
g59
NtRp1721
(dp1722
g62
(dp1723
g89
g90
ssg71
g1713
sg64
(lp1724
S':'
asbag57
(g78
g59
NtRp1725
(dp1726
g62
(dp1727
sg71
g1713
sg64
(lp1728
g57
(g58
g59
NtRp1729
(dp1730
g62
(dp1731
g70
I4
ssg71
g1725
sg64
(lp1732
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1733
asbasbasbag57
(g73
g59
NtRp1734
(dp1735
g62
(dp1736
sg71
g1709
sg64
(lp1737
g57
(g78
g59
NtRp1738
(dp1739
g62
(dp1740
g82
g83
ssg71
g1734
sg64
(lp1741
g572
asbag57
(g78
g59
NtRp1742
(dp1743
g62
(dp1744
g89
g90
ssg71
g1734
sg64
(lp1745
S':'
asbag57
(g78
g59
NtRp1746
(dp1747
g62
(dp1748
sg71
g1734
sg64
(lp1749
g57
(g58
g59
NtRp1750
(dp1751
g62
(dp1752
g70
I4
ssg71
g1746
sg64
(lp1753
g585
asbasbasbag57
(g73
g59
NtRp1754
(dp1755
g62
(dp1756
sg71
g1709
sg64
(lp1757
g57
(g78
g59
NtRp1758
(dp1759
g62
(dp1760
g82
g83
ssg71
g1754
sg64
(lp1761
g594
asbag57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
g89
g90
ssg71
g1754
sg64
(lp1765
S':'
asbag57
(g78
g59
NtRp1766
(dp1767
g62
(dp1768
sg71
g1754
sg64
(lp1769
g57
(g58
g59
NtRp1770
(dp1771
g62
(dp1772
g70
I4
ssg71
g1766
sg64
(lp1773
g57
(g66
g59
NtRp1774
(dp1775
g62
(dp1776
g70
I3
ssg71
Nsg64
(lp1777
sbasbasbasbag57
(g73
g59
NtRp1778
(dp1779
g62
(dp1780
sg71
g1709
sg64
(lp1781
g57
(g78
g59
NtRp1782
(dp1783
g62
(dp1784
g82
g83
ssg71
g1778
sg64
(lp1785
g619
asbag57
(g78
g59
NtRp1786
(dp1787
g62
(dp1788
g89
g90
ssg71
g1778
sg64
(lp1789
S':'
asbag57
(g78
g59
NtRp1790
(dp1791
g62
(dp1792
sg71
g1778
sg64
(lp1793
g57
(g58
g59
NtRp1794
(dp1795
g62
(dp1796
g70
I4
ssg71
g1790
sg64
(lp1797
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1798
asbasbasbag57
(g73
g59
NtRp1799
(dp1800
g62
(dp1801
sg71
g1709
sg64
(lp1802
g57
(g78
g59
NtRp1803
(dp1804
g62
(dp1805
g82
g83
ssg71
g1799
sg64
(lp1806
g641
asbag57
(g78
g59
NtRp1807
(dp1808
g62
(dp1809
g89
g90
ssg71
g1799
sg64
(lp1810
S':'
asbag57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
sg71
g1799
sg64
(lp1814
g57
(g58
g59
NtRp1815
(dp1816
g62
(dp1817
g70
I4
ssg71
g1811
sg64
(lp1818
S'set([])'
p1819
asbasbasbag57
(g73
g59
NtRp1820
(dp1821
g62
(dp1822
sg71
g1709
sg64
(lp1823
g57
(g78
g59
NtRp1824
(dp1825
g62
(dp1826
g82
g83
ssg71
g1820
sg64
(lp1827
g663
asbag57
(g78
g59
NtRp1828
(dp1829
g62
(dp1830
g89
g90
ssg71
g1820
sg64
(lp1831
S':'
asbag57
(g78
g59
NtRp1832
(dp1833
g62
(dp1834
sg71
g1820
sg64
(lp1835
g57
(g58
g59
NtRp1836
(dp1837
g62
(dp1838
g70
I4
ssg71
g1832
sg64
(lp1839
g100
asbasbasbag57
(g73
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g1709
sg64
(lp1843
g57
(g78
g59
NtRp1844
(dp1845
g62
(dp1846
g82
g83
ssg71
g1840
sg64
(lp1847
g684
asbag57
(g78
g59
NtRp1848
(dp1849
g62
(dp1850
g89
g90
ssg71
g1840
sg64
(lp1851
S':'
asbag57
(g78
g59
NtRp1852
(dp1853
g62
(dp1854
sg71
g1840
sg64
(lp1855
g57
(g58
g59
NtRp1856
(dp1857
g62
(dp1858
g70
I4
ssg71
g1852
sg64
(lp1859
g697
asbasbasbag57
(g73
g59
NtRp1860
(dp1861
g62
(dp1862
sg71
g1709
sg64
(lp1863
g57
(g78
g59
NtRp1864
(dp1865
g62
(dp1866
g82
g83
ssg71
g1860
sg64
(lp1867
g926
asbag57
(g78
g59
NtRp1868
(dp1869
g62
(dp1870
g89
g90
ssg71
g1860
sg64
(lp1871
S':'
asbag57
(g78
g59
NtRp1872
(dp1873
g62
(dp1874
sg71
g1860
sg64
(lp1875
g57
(g58
g59
NtRp1876
(dp1877
g62
(dp1878
g70
I4
ssg71
g1872
sg64
(lp1879
g100
asbasbasbag57
(g73
g59
NtRp1880
(dp1881
g62
(dp1882
sg71
g1709
sg64
(lp1883
g57
(g78
g59
NtRp1884
(dp1885
g62
(dp1886
g82
g83
ssg71
g1880
sg64
(lp1887
g947
asbag57
(g78
g59
NtRp1888
(dp1889
g62
(dp1890
g89
g90
ssg71
g1880
sg64
(lp1891
S':'
asbag57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g1880
sg64
(lp1895
g57
(g58
g59
NtRp1896
(dp1897
g62
(dp1898
g70
I4
ssg71
g1892
sg64
(lp1899
g100
asbasbasbag57
(g73
g59
NtRp1900
(dp1901
g62
(dp1902
sg71
g1709
sg64
(lp1903
g57
(g78
g59
NtRp1904
(dp1905
g62
(dp1906
g82
g83
ssg71
g1900
sg64
(lp1907
g968
asbag57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
g89
g90
ssg71
g1900
sg64
(lp1911
S':'
asbag57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
sg71
g1900
sg64
(lp1915
g57
(g58
g59
NtRp1916
(dp1917
g62
(dp1918
g70
I4
ssg71
g1912
sg64
(lp1919
g57
(g66
g59
NtRp1920
(dp1921
g62
(dp1922
g70
I3
ssg71
Nsg64
(lp1923
g57
(g73
g59
NtRp1924
(dp1925
g62
(dp1926
sg71
g1920
sg64
(lp1927
g57
(g78
g59
NtRp1928
(dp1929
g62
(dp1930
sg71
g1924
sg64
(lp1931
g57
(g58
g59
NtRp1932
(dp1933
g62
(dp1934
g70
I3
ssg71
g1928
sg64
(lp1935
g997
asbasbasbag57
(g73
g59
NtRp1936
(dp1937
g62
(dp1938
sg71
g1920
sg64
(lp1939
g57
(g78
g59
NtRp1940
(dp1941
g62
(dp1942
sg71
g1936
sg64
(lp1943
g57
(g58
g59
NtRp1944
(dp1945
g62
(dp1946
g70
I3
ssg71
g1940
sg64
(lp1947
g1010
asbasbasbag57
(g73
g59
NtRp1948
(dp1949
g62
(dp1950
sg71
g1920
sg64
(lp1951
g57
(g78
g59
NtRp1952
(dp1953
g62
(dp1954
sg71
g1948
sg64
(lp1955
g57
(g58
g59
NtRp1956
(dp1957
g62
(dp1958
g70
I3
ssg71
g1952
sg64
(lp1959
g1023
asbasbasbag57
(g73
g59
NtRp1960
(dp1961
g62
(dp1962
sg71
g1920
sg64
(lp1963
g57
(g78
g59
NtRp1964
(dp1965
g62
(dp1966
sg71
g1960
sg64
(lp1967
g57
(g58
g59
NtRp1968
(dp1969
g62
(dp1970
g70
I3
ssg71
g1964
sg64
(lp1971
g1036
asbasbasbag57
(g73
g59
NtRp1972
(dp1973
g62
(dp1974
sg71
g1920
sg64
(lp1975
g57
(g78
g59
NtRp1976
(dp1977
g62
(dp1978
sg71
g1972
sg64
(lp1979
g57
(g58
g59
NtRp1980
(dp1981
g62
(dp1982
g70
I3
ssg71
g1976
sg64
(lp1983
g1049
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1984
(dp1985
g62
(dp1986
sg71
g1709
sg64
(lp1987
g57
(g78
g59
NtRp1988
(dp1989
g62
(dp1990
g82
g83
ssg71
g1984
sg64
(lp1991
g1317
asbag57
(g78
g59
NtRp1992
(dp1993
g62
(dp1994
g89
g90
ssg71
g1984
sg64
(lp1995
S':'
asbag57
(g78
g59
NtRp1996
(dp1997
g62
(dp1998
sg71
g1984
sg64
(lp1999
g57
(g58
g59
NtRp2000
(dp2001
g62
(dp2002
g70
I4
ssg71
g1996
sg64
(lp2003
g57
(g66
g59
NtRp2004
(dp2005
g62
(dp2006
g70
I3
ssg71
Nsg64
(lp2007
g57
(g73
g59
NtRp2008
(dp2009
g62
(dp2010
sg71
g2004
sg64
(lp2011
g57
(g78
g59
NtRp2012
(dp2013
g62
(dp2014
sg71
g2008
sg64
(lp2015
g57
(g58
g59
NtRp2016
(dp2017
g62
(dp2018
g70
I3
ssg71
g2012
sg64
(lp2019
S'2'
asbasbasbag57
(g73
g59
NtRp2020
(dp2021
g62
(dp2022
sg71
g2004
sg64
(lp2023
g57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
sg71
g2020
sg64
(lp2027
g57
(g58
g59
NtRp2028
(dp2029
g62
(dp2030
g70
I3
ssg71
g2024
sg64
(lp2031
S'3'
asbasbasbag57
(g73
g59
NtRp2032
(dp2033
g62
(dp2034
sg71
g2004
sg64
(lp2035
g57
(g78
g59
NtRp2036
(dp2037
g62
(dp2038
sg71
g2032
sg64
(lp2039
g57
(g58
g59
NtRp2040
(dp2041
g62
(dp2042
g70
I3
ssg71
g2036
sg64
(lp2043
S'2'
asbasbasbag57
(g73
g59
NtRp2044
(dp2045
g62
(dp2046
sg71
g2004
sg64
(lp2047
g57
(g78
g59
NtRp2048
(dp2049
g62
(dp2050
sg71
g2044
sg64
(lp2051
g57
(g58
g59
NtRp2052
(dp2053
g62
(dp2054
g70
I3
ssg71
g2048
sg64
(lp2055
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2056
asbasbasbag57
(g73
g59
NtRp2057
(dp2058
g62
(dp2059
sg71
g2004
sg64
(lp2060
g57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
sg71
g2057
sg64
(lp2064
g57
(g58
g59
NtRp2065
(dp2066
g62
(dp2067
g70
I3
ssg71
g2061
sg64
(lp2068
g1395
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2069
(dp2070
g62
(dp2071
sg71
g67
sg64
(lp2072
g57
(g78
g59
NtRp2073
(dp2074
g62
(dp2075
g82
g83
ssg71
g2069
sg64
(lp2076
S'is_https'
p2077
asbag57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
g89
g90
ssg71
g2069
sg64
(lp2081
S':'
asbag57
(g78
g59
NtRp2082
(dp2083
g62
(dp2084
sg71
g2069
sg64
(lp2085
g57
(g58
g59
NtRp2086
(dp2087
g62
(dp2088
g70
I5
ssg71
g2082
sg64
(lp2089
g100
asbasbasbag57
(g73
g59
NtRp2090
(dp2091
g62
(dp2092
sg71
g67
sg64
(lp2093
g57
(g78
g59
NtRp2094
(dp2095
g62
(dp2096
g82
g83
ssg71
g2090
sg64
(lp2097
S'is_local'
p2098
asbag57
(g78
g59
NtRp2099
(dp2100
g62
(dp2101
g89
g90
ssg71
g2090
sg64
(lp2102
S':'
asbag57
(g78
g59
NtRp2103
(dp2104
g62
(dp2105
sg71
g2090
sg64
(lp2106
g57
(g58
g59
NtRp2107
(dp2108
g62
(dp2109
g70
I5
ssg71
g2103
sg64
(lp2110
g1504
asbasbasbag57
(g73
g59
NtRp2111
(dp2112
g62
(dp2113
sg71
g67
sg64
(lp2114
g57
(g78
g59
NtRp2115
(dp2116
g62
(dp2117
g82
g83
ssg71
g2111
sg64
(lp2118
S'is_restful'
p2119
asbag57
(g78
g59
NtRp2120
(dp2121
g62
(dp2122
g89
g90
ssg71
g2111
sg64
(lp2123
S':'
asbag57
(g78
g59
NtRp2124
(dp2125
g62
(dp2126
sg71
g2111
sg64
(lp2127
g57
(g58
g59
NtRp2128
(dp2129
g62
(dp2130
g70
I5
ssg71
g2124
sg64
(lp2131
g100
asbasbasbag57
(g73
g59
NtRp2132
(dp2133
g62
(dp2134
sg71
g67
sg64
(lp2135
g57
(g78
g59
NtRp2136
(dp2137
g62
(dp2138
g82
g83
ssg71
g2132
sg64
(lp2139
S'now'
p2140
asbag57
(g78
g59
NtRp2141
(dp2142
g62
(dp2143
g89
g90
ssg71
g2132
sg64
(lp2144
S':'
asbag57
(g78
g59
NtRp2145
(dp2146
g62
(dp2147
sg71
g2132
sg64
(lp2148
g57
(g58
g59
NtRp2149
(dp2150
g62
(dp2151
g70
I5
ssg71
g2145
sg64
(lp2152
S'datetime.datetime(2013, 2, 26, 0, 22, 20, 862980)'
p2153
asbasbasbag57
(g73
g59
NtRp2154
(dp2155
g62
(dp2156
sg71
g67
sg64
(lp2157
g57
(g78
g59
NtRp2158
(dp2159
g62
(dp2160
g82
g83
ssg71
g2154
sg64
(lp2161
S'post_vars'
p2162
asbag57
(g78
g59
NtRp2163
(dp2164
g62
(dp2165
g89
g90
ssg71
g2154
sg64
(lp2166
S':'
asbag57
(g78
g59
NtRp2167
(dp2168
g62
(dp2169
sg71
g2154
sg64
(lp2170
g57
(g58
g59
NtRp2171
(dp2172
g62
(dp2173
g70
I5
ssg71
g2167
sg64
(lp2174
g57
(g66
g59
NtRp2175
(dp2176
g62
(dp2177
g70
I4
ssg71
Nsg64
(lp2178
sbasbasbasbag57
(g73
g59
NtRp2179
(dp2180
g62
(dp2181
sg71
g67
sg64
(lp2182
g57
(g78
g59
NtRp2183
(dp2184
g62
(dp2185
g82
g83
ssg71
g2179
sg64
(lp2186
S'raw_args'
p2187
asbag57
(g78
g59
NtRp2188
(dp2189
g62
(dp2190
g89
g90
ssg71
g2179
sg64
(lp2191
S':'
asbag57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
sg71
g2179
sg64
(lp2195
g57
(g58
g59
NtRp2196
(dp2197
g62
(dp2198
g70
I5
ssg71
g2192
sg64
(lp2199
S'project/experiment.project/3/sample.experiment/2'
p2200
asbasbasbag57
(g73
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g67
sg64
(lp2204
g57
(g78
g59
NtRp2205
(dp2206
g62
(dp2207
g82
g83
ssg71
g2201
sg64
(lp2208
S'raw_extension'
p2209
asbag57
(g78
g59
NtRp2210
(dp2211
g62
(dp2212
g89
g90
ssg71
g2201
sg64
(lp2213
S':'
asbag57
(g78
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2201
sg64
(lp2217
g57
(g58
g59
NtRp2218
(dp2219
g62
(dp2220
g70
I5
ssg71
g2214
sg64
(lp2221
S'None'
p2222
asbasbasbag57
(g73
g59
NtRp2223
(dp2224
g62
(dp2225
sg71
g67
sg64
(lp2226
g57
(g78
g59
NtRp2227
(dp2228
g62
(dp2229
g82
g83
ssg71
g2223
sg64
(lp2230
S'url'
p2231
asbag57
(g78
g59
NtRp2232
(dp2233
g62
(dp2234
g89
g90
ssg71
g2223
sg64
(lp2235
S':'
asbag57
(g78
g59
NtRp2236
(dp2237
g62
(dp2238
sg71
g2223
sg64
(lp2239
g57
(g58
g59
NtRp2240
(dp2241
g62
(dp2242
g70
I5
ssg71
g2236
sg64
(lp2243
g1071
asbasbasbag57
(g73
g59
NtRp2244
(dp2245
g62
(dp2246
sg71
g67
sg64
(lp2247
g57
(g78
g59
NtRp2248
(dp2249
g62
(dp2250
g82
g83
ssg71
g2244
sg64
(lp2251
S'utcnow'
p2252
asbag57
(g78
g59
NtRp2253
(dp2254
g62
(dp2255
g89
g90
ssg71
g2244
sg64
(lp2256
S':'
asbag57
(g78
g59
NtRp2257
(dp2258
g62
(dp2259
sg71
g2244
sg64
(lp2260
g57
(g58
g59
NtRp2261
(dp2262
g62
(dp2263
g70
I5
ssg71
g2257
sg64
(lp2264
S'datetime.datetime(2013, 2, 25, 18, 52, 20, 863055)'
p2265
asbasbasbag57
(g73
g59
NtRp2266
(dp2267
g62
(dp2268
sg71
g67
sg64
(lp2269
g57
(g78
g59
NtRp2270
(dp2271
g62
(dp2272
g82
g83
ssg71
g2266
sg64
(lp2273
S'uuid'
p2274
asbag57
(g78
g59
NtRp2275
(dp2276
g62
(dp2277
g89
g90
ssg71
g2266
sg64
(lp2278
S':'
asbag57
(g78
g59
NtRp2279
(dp2280
g62
(dp2281
sg71
g2266
sg64
(lp2282
g57
(g58
g59
NtRp2283
(dp2284
g62
(dp2285
g70
I5
ssg71
g2279
sg64
(lp2286
S'DEV_bootstrap_ch/127.0.0.1.2013-02-26.00-22-20.32d5b773-2430-49d4-8d33-2feed30214a3'
p2287
asbasbasbag57
(g73
g59
NtRp2288
(dp2289
g62
(dp2290
sg71
g67
sg64
(lp2291
g57
(g78
g59
NtRp2292
(dp2293
g62
(dp2294
g82
g83
ssg71
g2288
sg64
(lp2295
S'vars'
p2296
asbag57
(g78
g59
NtRp2297
(dp2298
g62
(dp2299
g89
g90
ssg71
g2288
sg64
(lp2300
S':'
asbag57
(g78
g59
NtRp2301
(dp2302
g62
(dp2303
sg71
g2288
sg64
(lp2304
g57
(g58
g59
NtRp2305
(dp2306
g62
(dp2307
g70
I5
ssg71
g2301
sg64
(lp2308
g57
(g66
g59
NtRp2309
(dp2310
g62
(dp2311
g70
I4
ssg71
Nsg64
(lp2312
sbasbasbasbag57
(g73
g59
NtRp2313
(dp2314
g62
(dp2315
sg71
g67
sg64
(lp2316
g57
(g78
g59
NtRp2317
(dp2318
g62
(dp2319
g82
g83
ssg71
g2313
sg64
(lp2320
S'wsgi'
p2321
asbag57
(g78
g59
NtRp2322
(dp2323
g62
(dp2324
g89
g90
ssg71
g2313
sg64
(lp2325
S':'
asbag57
(g78
g59
NtRp2326
(dp2327
g62
(dp2328
sg71
g2313
sg64
(lp2329
g57
(g58
g59
NtRp2330
(dp2331
g62
(dp2332
g70
I5
ssg71
g2326
sg64
(lp2333
g57
(g66
g59
NtRp2334
(dp2335
g62
(dp2336
g70
I4
ssg71
Nsg64
(lp2337
g57
(g73
g59
NtRp2338
(dp2339
g62
(dp2340
sg71
g2334
sg64
(lp2341
g57
(g78
g59
NtRp2342
(dp2343
g62
(dp2344
g82
g83
ssg71
g2338
sg64
(lp2345
S'environ'
p2346
asbag57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
g89
g90
ssg71
g2338
sg64
(lp2350
S':'
asbag57
(g78
g59
NtRp2351
(dp2352
g62
(dp2353
sg71
g2338
sg64
(lp2354
g57
(g58
g59
NtRp2355
(dp2356
g62
(dp2357
g70
I4
ssg71
g2351
sg64
(lp2358
g57
(g66
g59
NtRp2359
(dp2360
g62
(dp2361
g70
I3
ssg71
Nsg64
(lp2362
g57
(g73
g59
NtRp2363
(dp2364
g62
(dp2365
sg71
g2359
sg64
(lp2366
g57
(g78
g59
NtRp2367
(dp2368
g62
(dp2369
g82
g83
ssg71
g2363
sg64
(lp2370
S'HTTP_ACCEPT'
p2371
asbag57
(g78
g59
NtRp2372
(dp2373
g62
(dp2374
g89
g90
ssg71
g2363
sg64
(lp2375
S':'
asbag57
(g78
g59
NtRp2376
(dp2377
g62
(dp2378
sg71
g2363
sg64
(lp2379
g57
(g58
g59
NtRp2380
(dp2381
g62
(dp2382
g70
I3
ssg71
g2376
sg64
(lp2383
g719
asbasbasbag57
(g73
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2359
sg64
(lp2387
g57
(g78
g59
NtRp2388
(dp2389
g62
(dp2390
g82
g83
ssg71
g2384
sg64
(lp2391
S'HTTP_ACCEPT_CHARSET'
p2392
asbag57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g89
g90
ssg71
g2384
sg64
(lp2396
S':'
asbag57
(g78
g59
NtRp2397
(dp2398
g62
(dp2399
sg71
g2384
sg64
(lp2400
g57
(g58
g59
NtRp2401
(dp2402
g62
(dp2403
g70
I3
ssg71
g2397
sg64
(lp2404
g741
asbasbasbag57
(g73
g59
NtRp2405
(dp2406
g62
(dp2407
sg71
g2359
sg64
(lp2408
g57
(g78
g59
NtRp2409
(dp2410
g62
(dp2411
g82
g83
ssg71
g2405
sg64
(lp2412
S'HTTP_ACCEPT_ENCODING'
p2413
asbag57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g89
g90
ssg71
g2405
sg64
(lp2417
S':'
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
sg71
g2405
sg64
(lp2421
g57
(g58
g59
NtRp2422
(dp2423
g62
(dp2424
g70
I3
ssg71
g2418
sg64
(lp2425
g763
asbasbasbag57
(g73
g59
NtRp2426
(dp2427
g62
(dp2428
sg71
g2359
sg64
(lp2429
g57
(g78
g59
NtRp2430
(dp2431
g62
(dp2432
g82
g83
ssg71
g2426
sg64
(lp2433
S'HTTP_ACCEPT_LANGUAGE'
p2434
asbag57
(g78
g59
NtRp2435
(dp2436
g62
(dp2437
g89
g90
ssg71
g2426
sg64
(lp2438
S':'
asbag57
(g78
g59
NtRp2439
(dp2440
g62
(dp2441
sg71
g2426
sg64
(lp2442
g57
(g58
g59
NtRp2443
(dp2444
g62
(dp2445
g70
I3
ssg71
g2439
sg64
(lp2446
g785
asbasbasbag57
(g73
g59
NtRp2447
(dp2448
g62
(dp2449
sg71
g2359
sg64
(lp2450
g57
(g78
g59
NtRp2451
(dp2452
g62
(dp2453
g82
g83
ssg71
g2447
sg64
(lp2454
S'HTTP_CACHE_CONTROL'
p2455
asbag57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
g89
g90
ssg71
g2447
sg64
(lp2459
S':'
asbag57
(g78
g59
NtRp2460
(dp2461
g62
(dp2462
sg71
g2447
sg64
(lp2463
g57
(g58
g59
NtRp2464
(dp2465
g62
(dp2466
g70
I3
ssg71
g2460
sg64
(lp2467
g807
asbasbasbag57
(g73
g59
NtRp2468
(dp2469
g62
(dp2470
sg71
g2359
sg64
(lp2471
g57
(g78
g59
NtRp2472
(dp2473
g62
(dp2474
g82
g83
ssg71
g2468
sg64
(lp2475
S'HTTP_CONNECTION'
p2476
asbag57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
g89
g90
ssg71
g2468
sg64
(lp2480
S':'
asbag57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
sg71
g2468
sg64
(lp2484
g57
(g58
g59
NtRp2485
(dp2486
g62
(dp2487
g70
I3
ssg71
g2481
sg64
(lp2488
g829
asbasbasbag57
(g73
g59
NtRp2489
(dp2490
g62
(dp2491
sg71
g2359
sg64
(lp2492
g57
(g78
g59
NtRp2493
(dp2494
g62
(dp2495
g82
g83
ssg71
g2489
sg64
(lp2496
S'HTTP_COOKIE'
p2497
asbag57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g89
g90
ssg71
g2489
sg64
(lp2501
S':'
asbag57
(g78
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g2489
sg64
(lp2505
g57
(g58
g59
NtRp2506
(dp2507
g62
(dp2508
g70
I3
ssg71
g2502
sg64
(lp2509
g851
asbasbasbag57
(g73
g59
NtRp2510
(dp2511
g62
(dp2512
sg71
g2359
sg64
(lp2513
g57
(g78
g59
NtRp2514
(dp2515
g62
(dp2516
g82
g83
ssg71
g2510
sg64
(lp2517
S'HTTP_HOST'
p2518
asbag57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
g89
g90
ssg71
g2510
sg64
(lp2522
S':'
asbag57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
sg71
g2510
sg64
(lp2526
g57
(g58
g59
NtRp2527
(dp2528
g62
(dp2529
g70
I3
ssg71
g2523
sg64
(lp2530
g873
asbasbasbag57
(g73
g59
NtRp2531
(dp2532
g62
(dp2533
sg71
g2359
sg64
(lp2534
g57
(g78
g59
NtRp2535
(dp2536
g62
(dp2537
g82
g83
ssg71
g2531
sg64
(lp2538
S'HTTP_REFERER'
p2539
asbag57
(g78
g59
NtRp2540
(dp2541
g62
(dp2542
g89
g90
ssg71
g2531
sg64
(lp2543
S':'
asbag57
(g78
g59
NtRp2544
(dp2545
g62
(dp2546
sg71
g2531
sg64
(lp2547
g57
(g58
g59
NtRp2548
(dp2549
g62
(dp2550
g70
I3
ssg71
g2544
sg64
(lp2551
g895
asbasbasbag57
(g73
g59
NtRp2552
(dp2553
g62
(dp2554
sg71
g2359
sg64
(lp2555
g57
(g78
g59
NtRp2556
(dp2557
g62
(dp2558
g82
g83
ssg71
g2552
sg64
(lp2559
S'HTTP_USER_AGENT'
p2560
asbag57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g89
g90
ssg71
g2552
sg64
(lp2564
S':'
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
sg71
g2552
sg64
(lp2568
g57
(g58
g59
NtRp2569
(dp2570
g62
(dp2571
g70
I3
ssg71
g2565
sg64
(lp2572
g917
asbasbasbag57
(g73
g59
NtRp2573
(dp2574
g62
(dp2575
sg71
g2359
sg64
(lp2576
g57
(g78
g59
NtRp2577
(dp2578
g62
(dp2579
g82
g83
ssg71
g2573
sg64
(lp2580
S'PATH_INFO'
p2581
asbag57
(g78
g59
NtRp2582
(dp2583
g62
(dp2584
g89
g90
ssg71
g2573
sg64
(lp2585
S':'
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
sg71
g2573
sg64
(lp2589
g57
(g58
g59
NtRp2590
(dp2591
g62
(dp2592
g70
I3
ssg71
g2586
sg64
(lp2593
g1071
asbasbasbag57
(g73
g59
NtRp2594
(dp2595
g62
(dp2596
sg71
g2359
sg64
(lp2597
g57
(g78
g59
NtRp2598
(dp2599
g62
(dp2600
g82
g83
ssg71
g2594
sg64
(lp2601
S'QUERY_STRING'
p2602
asbag57
(g78
g59
NtRp2603
(dp2604
g62
(dp2605
g89
g90
ssg71
g2594
sg64
(lp2606
S':'
asbag57
(g78
g59
NtRp2607
(dp2608
g62
(dp2609
sg71
g2594
sg64
(lp2610
g57
(g58
g59
NtRp2611
(dp2612
g62
(dp2613
g70
I3
ssg71
g2607
sg64
(lp2614
S''
asbasbasbag57
(g73
g59
NtRp2615
(dp2616
g62
(dp2617
sg71
g2359
sg64
(lp2618
g57
(g78
g59
NtRp2619
(dp2620
g62
(dp2621
g82
g83
ssg71
g2615
sg64
(lp2622
S'REMOTE_ADDR'
p2623
asbag57
(g78
g59
NtRp2624
(dp2625
g62
(dp2626
g89
g90
ssg71
g2615
sg64
(lp2627
S':'
asbag57
(g78
g59
NtRp2628
(dp2629
g62
(dp2630
sg71
g2615
sg64
(lp2631
g57
(g58
g59
NtRp2632
(dp2633
g62
(dp2634
g70
I3
ssg71
g2628
sg64
(lp2635
g275
asbasbasbag57
(g73
g59
NtRp2636
(dp2637
g62
(dp2638
sg71
g2359
sg64
(lp2639
g57
(g78
g59
NtRp2640
(dp2641
g62
(dp2642
g82
g83
ssg71
g2636
sg64
(lp2643
S'REMOTE_PORT'
p2644
asbag57
(g78
g59
NtRp2645
(dp2646
g62
(dp2647
g89
g90
ssg71
g2636
sg64
(lp2648
S':'
asbag57
(g78
g59
NtRp2649
(dp2650
g62
(dp2651
sg71
g2636
sg64
(lp2652
g57
(g58
g59
NtRp2653
(dp2654
g62
(dp2655
g70
I3
ssg71
g2649
sg64
(lp2656
g1135
asbasbasbag57
(g73
g59
NtRp2657
(dp2658
g62
(dp2659
sg71
g2359
sg64
(lp2660
g57
(g78
g59
NtRp2661
(dp2662
g62
(dp2663
g82
g83
ssg71
g2657
sg64
(lp2664
S'REQUEST_METHOD'
p2665
asbag57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g89
g90
ssg71
g2657
sg64
(lp2669
S':'
asbag57
(g78
g59
NtRp2670
(dp2671
g62
(dp2672
sg71
g2657
sg64
(lp2673
g57
(g58
g59
NtRp2674
(dp2675
g62
(dp2676
g70
I3
ssg71
g2670
sg64
(lp2677
g1157
asbasbasbag57
(g73
g59
NtRp2678
(dp2679
g62
(dp2680
sg71
g2359
sg64
(lp2681
g57
(g78
g59
NtRp2682
(dp2683
g62
(dp2684
g82
g83
ssg71
g2678
sg64
(lp2685
S'REQUEST_URI'
p2686
asbag57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g89
g90
ssg71
g2678
sg64
(lp2690
S':'
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
sg71
g2678
sg64
(lp2694
g57
(g58
g59
NtRp2695
(dp2696
g62
(dp2697
g70
I3
ssg71
g2691
sg64
(lp2698
g1071
asbasbasbag57
(g73
g59
NtRp2699
(dp2700
g62
(dp2701
sg71
g2359
sg64
(lp2702
g57
(g78
g59
NtRp2703
(dp2704
g62
(dp2705
g82
g83
ssg71
g2699
sg64
(lp2706
S'SCRIPT_NAME'
p2707
asbag57
(g78
g59
NtRp2708
(dp2709
g62
(dp2710
g89
g90
ssg71
g2699
sg64
(lp2711
S':'
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
sg71
g2699
sg64
(lp2715
g57
(g58
g59
NtRp2716
(dp2717
g62
(dp2718
g70
I3
ssg71
g2712
sg64
(lp2719
S''
asbasbasbag57
(g73
g59
NtRp2720
(dp2721
g62
(dp2722
sg71
g2359
sg64
(lp2723
g57
(g78
g59
NtRp2724
(dp2725
g62
(dp2726
g82
g83
ssg71
g2720
sg64
(lp2727
S'SERVER_NAME'
p2728
asbag57
(g78
g59
NtRp2729
(dp2730
g62
(dp2731
g89
g90
ssg71
g2720
sg64
(lp2732
S':'
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
sg71
g2720
sg64
(lp2736
g57
(g58
g59
NtRp2737
(dp2738
g62
(dp2739
g70
I3
ssg71
g2733
sg64
(lp2740
g1221
asbasbasbag57
(g73
g59
NtRp2741
(dp2742
g62
(dp2743
sg71
g2359
sg64
(lp2744
g57
(g78
g59
NtRp2745
(dp2746
g62
(dp2747
g82
g83
ssg71
g2741
sg64
(lp2748
S'SERVER_PORT'
p2749
asbag57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
g89
g90
ssg71
g2741
sg64
(lp2753
S':'
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
sg71
g2741
sg64
(lp2757
g57
(g58
g59
NtRp2758
(dp2759
g62
(dp2760
g70
I3
ssg71
g2754
sg64
(lp2761
g1243
asbasbasbag57
(g73
g59
NtRp2762
(dp2763
g62
(dp2764
sg71
g2359
sg64
(lp2765
g57
(g78
g59
NtRp2766
(dp2767
g62
(dp2768
g82
g83
ssg71
g2762
sg64
(lp2769
S'SERVER_PROTOCOL'
p2770
asbag57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
g89
g90
ssg71
g2762
sg64
(lp2774
S':'
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
sg71
g2762
sg64
(lp2778
g57
(g58
g59
NtRp2779
(dp2780
g62
(dp2781
g70
I3
ssg71
g2775
sg64
(lp2782
g1265
asbasbasbag57
(g73
g59
NtRp2783
(dp2784
g62
(dp2785
sg71
g2359
sg64
(lp2786
g57
(g78
g59
NtRp2787
(dp2788
g62
(dp2789
g82
g83
ssg71
g2783
sg64
(lp2790
S'SERVER_SOFTWARE'
p2791
asbag57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
g89
g90
ssg71
g2783
sg64
(lp2795
S':'
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
sg71
g2783
sg64
(lp2799
g57
(g58
g59
NtRp2800
(dp2801
g62
(dp2802
g70
I3
ssg71
g2796
sg64
(lp2803
g1287
asbasbasbag57
(g73
g59
NtRp2804
(dp2805
g62
(dp2806
sg71
g2359
sg64
(lp2807
g57
(g78
g59
NtRp2808
(dp2809
g62
(dp2810
g82
g83
ssg71
g2804
sg64
(lp2811
S'wsgi.errors'
p2812
asbag57
(g78
g59
NtRp2813
(dp2814
g62
(dp2815
g89
g90
ssg71
g2804
sg64
(lp2816
S':'
asbag57
(g78
g59
NtRp2817
(dp2818
g62
(dp2819
sg71
g2804
sg64
(lp2820
g57
(g58
g59
NtRp2821
(dp2822
g62
(dp2823
g70
I3
ssg71
g2817
sg64
(lp2824
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p2825
asbasbasbag57
(g73
g59
NtRp2826
(dp2827
g62
(dp2828
sg71
g2359
sg64
(lp2829
g57
(g78
g59
NtRp2830
(dp2831
g62
(dp2832
g82
g83
ssg71
g2826
sg64
(lp2833
S'wsgi.file_wrapper'
p2834
asbag57
(g78
g59
NtRp2835
(dp2836
g62
(dp2837
g89
g90
ssg71
g2826
sg64
(lp2838
S':'
asbag57
(g78
g59
NtRp2839
(dp2840
g62
(dp2841
sg71
g2826
sg64
(lp2842
g57
(g58
g59
NtRp2843
(dp2844
g62
(dp2845
g70
I3
ssg71
g2839
sg64
(lp2846
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p2847
asbasbasbag57
(g73
g59
NtRp2848
(dp2849
g62
(dp2850
sg71
g2359
sg64
(lp2851
g57
(g78
g59
NtRp2852
(dp2853
g62
(dp2854
g82
g83
ssg71
g2848
sg64
(lp2855
S'wsgi.input'
p2856
asbag57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g89
g90
ssg71
g2848
sg64
(lp2860
S':'
asbag57
(g78
g59
NtRp2861
(dp2862
g62
(dp2863
sg71
g2848
sg64
(lp2864
g57
(g58
g59
NtRp2865
(dp2866
g62
(dp2867
g70
I3
ssg71
g2861
sg64
(lp2868
S'<cStringIO.StringO object at 0xb0544420>'
p2869
asbasbasbag57
(g73
g59
NtRp2870
(dp2871
g62
(dp2872
sg71
g2359
sg64
(lp2873
g57
(g78
g59
NtRp2874
(dp2875
g62
(dp2876
g82
g83
ssg71
g2870
sg64
(lp2877
S'wsgi.multiprocess'
p2878
asbag57
(g78
g59
NtRp2879
(dp2880
g62
(dp2881
g89
g90
ssg71
g2870
sg64
(lp2882
S':'
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
sg71
g2870
sg64
(lp2886
g57
(g58
g59
NtRp2887
(dp2888
g62
(dp2889
g70
I3
ssg71
g2883
sg64
(lp2890
g100
asbasbasbag57
(g73
g59
NtRp2891
(dp2892
g62
(dp2893
sg71
g2359
sg64
(lp2894
g57
(g78
g59
NtRp2895
(dp2896
g62
(dp2897
g82
g83
ssg71
g2891
sg64
(lp2898
S'wsgi.multithread'
p2899
asbag57
(g78
g59
NtRp2900
(dp2901
g62
(dp2902
g89
g90
ssg71
g2891
sg64
(lp2903
S':'
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
sg71
g2891
sg64
(lp2907
g57
(g58
g59
NtRp2908
(dp2909
g62
(dp2910
g70
I3
ssg71
g2904
sg64
(lp2911
g1504
asbasbasbag57
(g73
g59
NtRp2912
(dp2913
g62
(dp2914
sg71
g2359
sg64
(lp2915
g57
(g78
g59
NtRp2916
(dp2917
g62
(dp2918
g82
g83
ssg71
g2912
sg64
(lp2919
S'wsgi.run_once'
p2920
asbag57
(g78
g59
NtRp2921
(dp2922
g62
(dp2923
g89
g90
ssg71
g2912
sg64
(lp2924
S':'
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
sg71
g2912
sg64
(lp2928
g57
(g58
g59
NtRp2929
(dp2930
g62
(dp2931
g70
I3
ssg71
g2925
sg64
(lp2932
g100
asbasbasbag57
(g73
g59
NtRp2933
(dp2934
g62
(dp2935
sg71
g2359
sg64
(lp2936
g57
(g78
g59
NtRp2937
(dp2938
g62
(dp2939
g82
g83
ssg71
g2933
sg64
(lp2940
S'wsgi.url_scheme'
p2941
asbag57
(g78
g59
NtRp2942
(dp2943
g62
(dp2944
g89
g90
ssg71
g2933
sg64
(lp2945
S':'
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
sg71
g2933
sg64
(lp2949
g57
(g58
g59
NtRp2950
(dp2951
g62
(dp2952
g70
I3
ssg71
g2946
sg64
(lp2953
g1547
asbasbasbag57
(g73
g59
NtRp2954
(dp2955
g62
(dp2956
sg71
g2359
sg64
(lp2957
g57
(g78
g59
NtRp2958
(dp2959
g62
(dp2960
g82
g83
ssg71
g2954
sg64
(lp2961
S'wsgi.version'
p2962
asbag57
(g78
g59
NtRp2963
(dp2964
g62
(dp2965
g89
g90
ssg71
g2954
sg64
(lp2966
S':'
asbag57
(g78
g59
NtRp2967
(dp2968
g62
(dp2969
sg71
g2954
sg64
(lp2970
g57
(g58
g59
NtRp2971
(dp2972
g62
(dp2973
g70
I3
ssg71
g2967
sg64
(lp2974
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2975
(lp2976
(dp2977
S'file'
p2978
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p2979
sS'dump'
p2980
(dp2981
S'environment'
p2982
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p2983
sS'ccode'
p2984
S'<code object <module> at 0xae122698, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p2985
ssS'lnum'
p2986
I212
sS'lines'
p2987
(dp2988
I207
S'    try:'
p2989
sI208
S'        if isinstance(code, types.CodeType):'
p2990
sI209
S'            ccode = code'
p2991
sI210
S'        else:'
p2992
sI211
S'            ccode = compile2(code, layer)'
p2993
sI212
S'        exec ccode in environment'
p2994
sI213
S'    except HTTP:'
p2995
sI214
S'        raise'
p2996
sI215
S'    except RestrictedError:'
p2997
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2998
ssS'call'
p2999
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3000
sS'func'
p3001
S'restricted'
p3002
sa(dp3003
g2978
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3004
sg2980
(dp3005
sg2986
I1141
sg2987
(dp3006
I1130
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3007
sI1131
S'   """ per sample . takes id of the sample as the input """'
p3008
sI1132
S'   sid = request.args(0)'
p3009
sI1133
S'   sample = db(db.sample.id == sid).select().first()'
p3010
sI1134
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3011
sI1135
S'   form = SQLFORM(db.sample_files)'
p3012
sI1136
S'   form.vars.sample = sid'
p3013
sI1137
S'   return locals()'
p3014
sI1138
S''
sI1139
S''
ssg2999
S'()'
p3015
sg3001
S'<module>'
p3016
sa(dp3017
g2978
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3018
sg2980
(dp3019
S'self'
p3020
S'undefined'
p3021
sS'f'
S'<function list_all_dev_projects>'
p3022
ssg2986
I193
sg2987
(dp3023
I192
S'        self._vars = None'
p3024
sI193
S'        self._caller = lambda f: f()'
p3025
sI194
S'        self._view_environment = None'
p3026
sI195
S'        self._custom_commit = None'
p3027
sI196
S'        self._custom_rollback = None'
p3028
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3029
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3030
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3031
sI191
S"        self.delimiters = ('{{', '}}')"
p3032
ssg2999
S'(f=<function list_all_dev_projects>)'
p3033
sg3001
S'<lambda>'
p3034
sa(dp3035
g2978
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3036
sg2980
(dp3037
S'auth.user.id'
p3038
g3021
sS'auth.user'
p3039
S'None'
p3040
sS'global auth'
p3041
S'<gluon.tools.Auth object>'
p3042
sS'db.sample.experimentalist.default'
p3043
S'None'
p3044
sS'global db'
p3045
S'<DAL uri="sqlite://storage.sqlite">'
p3046
sS'db.sample'
p3047
S'<Table sample (id,parent,experimentalist,name,co...iment,working_status,replica,publication_status)>'
p3048
sS'db.sample.experimentalist'
p3049
S'<gluon.dal.Field object>'
p3050
ssg2986
I294
sg2987
(dp3051
I289
S''
sI290
S'def list_all_dev_projects():'
p3052
sI291
S'    response.menu = ['
p3053
sI292
S"    (T('Home'), False, URL('default','list_all_projects'), [])"
p3054
sI293
S'    ]'
p3055
sI294
S'    db.sample.experimentalist.default=auth.user.id'
p3056
sI295
S'    db.sample.experiment.writable = False'
p3057
sI296
S'    q1 = (db.project.project_status ==  0)'
p3058
sI297
S'    q2 = (db.sample.experimentalist == auth.user.id)'
p3059
sI298
S"    ck = {'project':q1,'sample':q2}"
p3060
ssg2999
S'()'
p3061
sg3001
S'list_all_dev_projects'
p3062
sasS'pyver'
p3063
S'Python 2.7.3: /usr/bin/python'
p3064
sS'session'
p3065
g57
(g58
g59
NtRp3066
(dp3067
g62
(dp3068
sg64
(lp3069
g57
(g66
g59
NtRp3070
(dp3071
g62
(dp3072
g70
I5
ssg71
Nsg64
(lp3073
g57
(g73
g59
NtRp3074
(dp3075
g62
(dp3076
sg71
g3070
sg64
(lp3077
g57
(g78
g59
NtRp3078
(dp3079
g62
(dp3080
g82
g83
ssg71
g3074
sg64
(lp3081
S'flash'
p3082
asbag57
(g78
g59
NtRp3083
(dp3084
g62
(dp3085
g89
g90
ssg71
g3074
sg64
(lp3086
S':'
asbag57
(g78
g59
NtRp3087
(dp3088
g62
(dp3089
sg71
g3074
sg64
(lp3090
g57
(g58
g59
NtRp3091
(dp3092
g62
(dp3093
g70
I5
ssg71
g3087
sg64
(lp3094
S'None'
p3095
asbasbasbasbasbsS'etype'
p3096
S"<type 'exceptions.AttributeError'>"
p3097
sS'date'
p3098
S'Tue Feb 26 00:22:21 2013'
p3099
sS'response'
p3100
g57
(g58
g59
NtRp3101
(dp3102
g62
(dp3103
sg64
(lp3104
g57
(g66
g59
NtRp3105
(dp3106
g62
(dp3107
g70
I5
ssg71
Nsg64
(lp3108
g57
(g73
g59
NtRp3109
(dp3110
g62
(dp3111
sg71
g3105
sg64
(lp3112
g57
(g78
g59
NtRp3113
(dp3114
g62
(dp3115
g82
g83
ssg71
g3109
sg64
(lp3116
g218
asbag57
(g78
g59
NtRp3117
(dp3118
g62
(dp3119
g89
g90
ssg71
g3109
sg64
(lp3120
S':'
asbag57
(g78
g59
NtRp3121
(dp3122
g62
(dp3123
sg71
g3109
sg64
(lp3124
g57
(g58
g59
NtRp3125
(dp3126
g62
(dp3127
g70
I5
ssg71
g3121
sg64
(lp3128
S'<cStringIO.StringO object at 0xb4f80740>'
p3129
asbasbasbag57
(g73
g59
NtRp3130
(dp3131
g62
(dp3132
sg71
g3105
sg64
(lp3133
g57
(g78
g59
NtRp3134
(dp3135
g62
(dp3136
g82
g83
ssg71
g3130
sg64
(lp3137
g306
asbag57
(g78
g59
NtRp3138
(dp3139
g62
(dp3140
g89
g90
ssg71
g3130
sg64
(lp3141
S':'
asbag57
(g78
g59
NtRp3142
(dp3143
g62
(dp3144
sg71
g3130
sg64
(lp3145
g57
(g58
g59
NtRp3146
(dp3147
g62
(dp3148
g70
I5
ssg71
g3142
sg64
(lp3149
g57
(g66
g59
NtRp3150
(dp3151
g62
(dp3152
g70
I4
ssg71
Nsg64
(lp3153
g57
(g73
g59
NtRp3154
(dp3155
g62
(dp3156
sg71
g3150
sg64
(lp3157
g57
(g78
g59
NtRp3158
(dp3159
g62
(dp3160
g82
g83
ssg71
g3154
sg64
(lp3161
S'session_id_dev_bootstrap_ch'
p3162
asbag57
(g78
g59
NtRp3163
(dp3164
g62
(dp3165
g89
g90
ssg71
g3154
sg64
(lp3166
S':'
asbag57
(g78
g59
NtRp3167
(dp3168
g62
(dp3169
sg71
g3154
sg64
(lp3170
g57
(g58
g59
NtRp3171
(dp3172
g62
(dp3173
g70
I4
ssg71
g3167
sg64
(lp3174
g344
ag57
(g66
g59
NtRp3175
(dp3176
g62
(dp3177
g70
I3
ssg71
Nsg64
(lp3178
g57
(g73
g59
NtRp3179
(dp3180
g62
(dp3181
sg71
g3175
sg64
(lp3182
g57
(g78
g59
NtRp3183
(dp3184
g62
(dp3185
g82
g83
ssg71
g3179
sg64
(lp3186
g357
asbag57
(g78
g59
NtRp3187
(dp3188
g62
(dp3189
g89
g90
ssg71
g3179
sg64
(lp3190
S':'
asbag57
(g78
g59
NtRp3191
(dp3192
g62
(dp3193
sg71
g3179
sg64
(lp3194
g57
(g58
g59
NtRp3195
(dp3196
g62
(dp3197
g70
I3
ssg71
g3191
sg64
(lp3198
S''
asbasbasbag57
(g73
g59
NtRp3199
(dp3200
g62
(dp3201
sg71
g3175
sg64
(lp3202
g57
(g78
g59
NtRp3203
(dp3204
g62
(dp3205
g82
g83
ssg71
g3199
sg64
(lp3206
g378
asbag57
(g78
g59
NtRp3207
(dp3208
g62
(dp3209
g89
g90
ssg71
g3199
sg64
(lp3210
S':'
asbag57
(g78
g59
NtRp3211
(dp3212
g62
(dp3213
sg71
g3199
sg64
(lp3214
g57
(g58
g59
NtRp3215
(dp3216
g62
(dp3217
g70
I3
ssg71
g3211
sg64
(lp3218
S''
asbasbasbag57
(g73
g59
NtRp3219
(dp3220
g62
(dp3221
sg71
g3175
sg64
(lp3222
g57
(g78
g59
NtRp3223
(dp3224
g62
(dp3225
g82
g83
ssg71
g3219
sg64
(lp3226
g399
asbag57
(g78
g59
NtRp3227
(dp3228
g62
(dp3229
g89
g90
ssg71
g3219
sg64
(lp3230
S':'
asbag57
(g78
g59
NtRp3231
(dp3232
g62
(dp3233
sg71
g3219
sg64
(lp3234
g57
(g58
g59
NtRp3235
(dp3236
g62
(dp3237
g70
I3
ssg71
g3231
sg64
(lp3238
S''
asbasbasbag57
(g73
g59
NtRp3239
(dp3240
g62
(dp3241
sg71
g3175
sg64
(lp3242
g57
(g78
g59
NtRp3243
(dp3244
g62
(dp3245
g82
g83
ssg71
g3239
sg64
(lp3246
g420
asbag57
(g78
g59
NtRp3247
(dp3248
g62
(dp3249
g89
g90
ssg71
g3239
sg64
(lp3250
S':'
asbag57
(g78
g59
NtRp3251
(dp3252
g62
(dp3253
sg71
g3239
sg64
(lp3254
g57
(g58
g59
NtRp3255
(dp3256
g62
(dp3257
g70
I3
ssg71
g3251
sg64
(lp3258
S''
asbasbasbag57
(g73
g59
NtRp3259
(dp3260
g62
(dp3261
sg71
g3175
sg64
(lp3262
g57
(g78
g59
NtRp3263
(dp3264
g62
(dp3265
g82
g83
ssg71
g3259
sg64
(lp3266
g441
asbag57
(g78
g59
NtRp3267
(dp3268
g62
(dp3269
g89
g90
ssg71
g3259
sg64
(lp3270
S':'
asbag57
(g78
g59
NtRp3271
(dp3272
g62
(dp3273
sg71
g3259
sg64
(lp3274
g57
(g58
g59
NtRp3275
(dp3276
g62
(dp3277
g70
I3
ssg71
g3271
sg64
(lp3278
S''
asbasbasbag57
(g73
g59
NtRp3279
(dp3280
g62
(dp3281
sg71
g3175
sg64
(lp3282
g57
(g78
g59
NtRp3283
(dp3284
g62
(dp3285
g82
g83
ssg71
g3279
sg64
(lp3286
g462
asbag57
(g78
g59
NtRp3287
(dp3288
g62
(dp3289
g89
g90
ssg71
g3279
sg64
(lp3290
S':'
asbag57
(g78
g59
NtRp3291
(dp3292
g62
(dp3293
sg71
g3279
sg64
(lp3294
g57
(g58
g59
NtRp3295
(dp3296
g62
(dp3297
g70
I3
ssg71
g3291
sg64
(lp3298
S'/'
asbasbasbag57
(g73
g59
NtRp3299
(dp3300
g62
(dp3301
sg71
g3175
sg64
(lp3302
g57
(g78
g59
NtRp3303
(dp3304
g62
(dp3305
g82
g83
ssg71
g3299
sg64
(lp3306
g483
asbag57
(g78
g59
NtRp3307
(dp3308
g62
(dp3309
g89
g90
ssg71
g3299
sg64
(lp3310
S':'
asbag57
(g78
g59
NtRp3311
(dp3312
g62
(dp3313
sg71
g3299
sg64
(lp3314
g57
(g58
g59
NtRp3315
(dp3316
g62
(dp3317
g70
I3
ssg71
g3311
sg64
(lp3318
S''
asbasbasbag57
(g73
g59
NtRp3319
(dp3320
g62
(dp3321
sg71
g3175
sg64
(lp3322
g57
(g78
g59
NtRp3323
(dp3324
g62
(dp3325
g82
g83
ssg71
g3319
sg64
(lp3326
g504
asbag57
(g78
g59
NtRp3327
(dp3328
g62
(dp3329
g89
g90
ssg71
g3319
sg64
(lp3330
S':'
asbag57
(g78
g59
NtRp3331
(dp3332
g62
(dp3333
sg71
g3319
sg64
(lp3334
g57
(g58
g59
NtRp3335
(dp3336
g62
(dp3337
g70
I3
ssg71
g3331
sg64
(lp3338
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3339
(dp3340
g62
(dp3341
sg71
g3105
sg64
(lp3342
g57
(g78
g59
NtRp3343
(dp3344
g62
(dp3345
g82
g83
ssg71
g3339
sg64
(lp3346
S'delimiters'
p3347
asbag57
(g78
g59
NtRp3348
(dp3349
g62
(dp3350
g89
g90
ssg71
g3339
sg64
(lp3351
S':'
asbag57
(g78
g59
NtRp3352
(dp3353
g62
(dp3354
sg71
g3339
sg64
(lp3355
g57
(g58
g59
NtRp3356
(dp3357
g62
(dp3358
g70
I5
ssg71
g3352
sg64
(lp3359
g57
(g66
g59
NtRp3360
(dp3361
g62
(dp3362
g70
I4
ssg71
Nsg64
(lp3363
g57
(g73
g59
NtRp3364
(dp3365
g62
(dp3366
sg71
g3360
sg64
(lp3367
g57
(g78
g59
NtRp3368
(dp3369
g62
(dp3370
sg71
g3364
sg64
(lp3371
g57
(g58
g59
NtRp3372
(dp3373
g62
(dp3374
g70
I4
ssg71
g3368
sg64
(lp3375
S'{{'
p3376
asbasbasbag57
(g73
g59
NtRp3377
(dp3378
g62
(dp3379
sg71
g3360
sg64
(lp3380
g57
(g78
g59
NtRp3381
(dp3382
g62
(dp3383
sg71
g3377
sg64
(lp3384
g57
(g58
g59
NtRp3385
(dp3386
g62
(dp3387
g70
I4
ssg71
g3381
sg64
(lp3388
S'}}'
p3389
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3390
(dp3391
g62
(dp3392
sg71
g3105
sg64
(lp3393
g57
(g78
g59
NtRp3394
(dp3395
g62
(dp3396
g82
g83
ssg71
g3390
sg64
(lp3397
S'files'
p3398
asbag57
(g78
g59
NtRp3399
(dp3400
g62
(dp3401
g89
g90
ssg71
g3390
sg64
(lp3402
S':'
asbag57
(g78
g59
NtRp3403
(dp3404
g62
(dp3405
sg71
g3390
sg64
(lp3406
g57
(g58
g59
NtRp3407
(dp3408
g62
(dp3409
g70
I5
ssg71
g3403
sg64
(lp3410
g57
(g66
g59
NtRp3411
(dp3412
g62
(dp3413
g70
I4
ssg71
Nsg64
(lp3414
g57
(g73
g59
NtRp3415
(dp3416
g62
(dp3417
sg71
g3411
sg64
(lp3418
g57
(g78
g59
NtRp3419
(dp3420
g62
(dp3421
sg71
g3415
sg64
(lp3422
g57
(g58
g59
NtRp3423
(dp3424
g62
(dp3425
g70
I4
ssg71
g3419
sg64
(lp3426
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3427
asbasbasbag57
(g73
g59
NtRp3428
(dp3429
g62
(dp3430
sg71
g3411
sg64
(lp3431
g57
(g78
g59
NtRp3432
(dp3433
g62
(dp3434
sg71
g3428
sg64
(lp3435
g57
(g58
g59
NtRp3436
(dp3437
g62
(dp3438
g70
I4
ssg71
g3432
sg64
(lp3439
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3440
asbasbasbag57
(g73
g59
NtRp3441
(dp3442
g62
(dp3443
sg71
g3411
sg64
(lp3444
g57
(g78
g59
NtRp3445
(dp3446
g62
(dp3447
sg71
g3441
sg64
(lp3448
g57
(g58
g59
NtRp3449
(dp3450
g62
(dp3451
g70
I4
ssg71
g3445
sg64
(lp3452
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3453
asbasbasbag57
(g73
g59
NtRp3454
(dp3455
g62
(dp3456
sg71
g3411
sg64
(lp3457
g57
(g78
g59
NtRp3458
(dp3459
g62
(dp3460
sg71
g3454
sg64
(lp3461
g57
(g58
g59
NtRp3462
(dp3463
g62
(dp3464
g70
I4
ssg71
g3458
sg64
(lp3465
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3466
asbasbasbag57
(g73
g59
NtRp3467
(dp3468
g62
(dp3469
sg71
g3411
sg64
(lp3470
g57
(g78
g59
NtRp3471
(dp3472
g62
(dp3473
sg71
g3467
sg64
(lp3474
g57
(g58
g59
NtRp3475
(dp3476
g62
(dp3477
g70
I4
ssg71
g3471
sg64
(lp3478
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3479
asbasbasbag57
(g73
g59
NtRp3480
(dp3481
g62
(dp3482
sg71
g3411
sg64
(lp3483
g57
(g78
g59
NtRp3484
(dp3485
g62
(dp3486
sg71
g3480
sg64
(lp3487
g57
(g58
g59
NtRp3488
(dp3489
g62
(dp3490
g70
I4
ssg71
g3484
sg64
(lp3491
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3492
asbasbasbag57
(g73
g59
NtRp3493
(dp3494
g62
(dp3495
sg71
g3411
sg64
(lp3496
g57
(g78
g59
NtRp3497
(dp3498
g62
(dp3499
sg71
g3493
sg64
(lp3500
g57
(g58
g59
NtRp3501
(dp3502
g62
(dp3503
g70
I4
ssg71
g3497
sg64
(lp3504
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3505
asbasbasbag57
(g73
g59
NtRp3506
(dp3507
g62
(dp3508
sg71
g3411
sg64
(lp3509
g57
(g78
g59
NtRp3510
(dp3511
g62
(dp3512
sg71
g3506
sg64
(lp3513
g57
(g58
g59
NtRp3514
(dp3515
g62
(dp3516
g70
I4
ssg71
g3510
sg64
(lp3517
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3518
asbasbasbag57
(g73
g59
NtRp3519
(dp3520
g62
(dp3521
sg71
g3411
sg64
(lp3522
g57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
sg71
g3519
sg64
(lp3526
g57
(g58
g59
NtRp3527
(dp3528
g62
(dp3529
g70
I4
ssg71
g3523
sg64
(lp3530
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3531
asbasbasbag57
(g73
g59
NtRp3532
(dp3533
g62
(dp3534
sg71
g3411
sg64
(lp3535
g57
(g78
g59
NtRp3536
(dp3537
g62
(dp3538
sg71
g3532
sg64
(lp3539
g57
(g58
g59
NtRp3540
(dp3541
g62
(dp3542
g70
I4
ssg71
g3536
sg64
(lp3543
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3544
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3545
(dp3546
g62
(dp3547
sg71
g3105
sg64
(lp3548
g57
(g78
g59
NtRp3549
(dp3550
g62
(dp3551
g82
g83
ssg71
g3545
sg64
(lp3552
S'flash'
p3553
asbag57
(g78
g59
NtRp3554
(dp3555
g62
(dp3556
g89
g90
ssg71
g3545
sg64
(lp3557
S':'
asbag57
(g78
g59
NtRp3558
(dp3559
g62
(dp3560
sg71
g3545
sg64
(lp3561
g57
(g58
g59
NtRp3562
(dp3563
g62
(dp3564
g70
I5
ssg71
g3558
sg64
(lp3565
S''
asbasbasbag57
(g73
g59
NtRp3566
(dp3567
g62
(dp3568
sg71
g3105
sg64
(lp3569
g57
(g78
g59
NtRp3570
(dp3571
g62
(dp3572
g82
g83
ssg71
g3566
sg64
(lp3573
S'generic_patterns'
p3574
asbag57
(g78
g59
NtRp3575
(dp3576
g62
(dp3577
g89
g90
ssg71
g3566
sg64
(lp3578
S':'
asbag57
(g78
g59
NtRp3579
(dp3580
g62
(dp3581
sg71
g3566
sg64
(lp3582
g57
(g58
g59
NtRp3583
(dp3584
g62
(dp3585
g70
I5
ssg71
g3579
sg64
(lp3586
g57
(g66
g59
NtRp3587
(dp3588
g62
(dp3589
g70
I4
ssg71
Nsg64
(lp3590
g57
(g73
g59
NtRp3591
(dp3592
g62
(dp3593
sg71
g3587
sg64
(lp3594
g57
(g78
g59
NtRp3595
(dp3596
g62
(dp3597
sg71
g3591
sg64
(lp3598
g57
(g58
g59
NtRp3599
(dp3600
g62
(dp3601
g70
I4
ssg71
g3595
sg64
(lp3602
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3603
(dp3604
g62
(dp3605
sg71
g3105
sg64
(lp3606
g57
(g78
g59
NtRp3607
(dp3608
g62
(dp3609
g82
g83
ssg71
g3603
sg64
(lp3610
S'google_analytics_id'
p3611
asbag57
(g78
g59
NtRp3612
(dp3613
g62
(dp3614
g89
g90
ssg71
g3603
sg64
(lp3615
S':'
asbag57
(g78
g59
NtRp3616
(dp3617
g62
(dp3618
sg71
g3603
sg64
(lp3619
g57
(g58
g59
NtRp3620
(dp3621
g62
(dp3622
g70
I5
ssg71
g3616
sg64
(lp3623
S'None'
p3624
asbasbasbag57
(g73
g59
NtRp3625
(dp3626
g62
(dp3627
sg71
g3105
sg64
(lp3628
g57
(g78
g59
NtRp3629
(dp3630
g62
(dp3631
g82
g83
ssg71
g3625
sg64
(lp3632
S'headers'
p3633
asbag57
(g78
g59
NtRp3634
(dp3635
g62
(dp3636
g89
g90
ssg71
g3625
sg64
(lp3637
S':'
asbag57
(g78
g59
NtRp3638
(dp3639
g62
(dp3640
sg71
g3625
sg64
(lp3641
g57
(g58
g59
NtRp3642
(dp3643
g62
(dp3644
g70
I5
ssg71
g3638
sg64
(lp3645
g57
(g66
g59
NtRp3646
(dp3647
g62
(dp3648
g70
I4
ssg71
Nsg64
(lp3649
g57
(g73
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3646
sg64
(lp3653
g57
(g78
g59
NtRp3654
(dp3655
g62
(dp3656
g82
g83
ssg71
g3650
sg64
(lp3657
S'X-Powered-By'
p3658
asbag57
(g78
g59
NtRp3659
(dp3660
g62
(dp3661
g89
g90
ssg71
g3650
sg64
(lp3662
S':'
asbag57
(g78
g59
NtRp3663
(dp3664
g62
(dp3665
sg71
g3650
sg64
(lp3666
g57
(g58
g59
NtRp3667
(dp3668
g62
(dp3669
g70
I4
ssg71
g3663
sg64
(lp3670
S'web2py'
p3671
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3672
(dp3673
g62
(dp3674
sg71
g3105
sg64
(lp3675
g57
(g78
g59
NtRp3676
(dp3677
g62
(dp3678
g82
g83
ssg71
g3672
sg64
(lp3679
S'menu'
p3680
asbag57
(g78
g59
NtRp3681
(dp3682
g62
(dp3683
g89
g90
ssg71
g3672
sg64
(lp3684
S':'
asbag57
(g78
g59
NtRp3685
(dp3686
g62
(dp3687
sg71
g3672
sg64
(lp3688
g57
(g58
g59
NtRp3689
(dp3690
g62
(dp3691
g70
I5
ssg71
g3685
sg64
(lp3692
g57
(g66
g59
NtRp3693
(dp3694
g62
(dp3695
g70
I4
ssg71
Nsg64
(lp3696
g57
(g73
g59
NtRp3697
(dp3698
g62
(dp3699
sg71
g3693
sg64
(lp3700
g57
(g78
g59
NtRp3701
(dp3702
g62
(dp3703
sg71
g3697
sg64
(lp3704
g57
(g58
g59
NtRp3705
(dp3706
g62
(dp3707
g70
I4
ssg71
g3701
sg64
(lp3708
g57
(g66
g59
NtRp3709
(dp3710
g62
(dp3711
g70
I3
ssg71
Nsg64
(lp3712
g57
(g73
g59
NtRp3713
(dp3714
g62
(dp3715
sg71
g3709
sg64
(lp3716
g57
(g78
g59
NtRp3717
(dp3718
g62
(dp3719
sg71
g3713
sg64
(lp3720
g57
(g58
g59
NtRp3721
(dp3722
g62
(dp3723
g70
I3
ssg71
g3717
sg64
(lp3724
cgluon.languages
lazyT_unpickle
p3725
(S't\x04\x00\x00\x00Home'
tRp3726
asbasbasbag57
(g73
g59
NtRp3727
(dp3728
g62
(dp3729
sg71
g3709
sg64
(lp3730
g57
(g78
g59
NtRp3731
(dp3732
g62
(dp3733
sg71
g3727
sg64
(lp3734
g57
(g58
g59
NtRp3735
(dp3736
g62
(dp3737
g70
I3
ssg71
g3731
sg64
(lp3738
g100
asbasbasbag57
(g73
g59
NtRp3739
(dp3740
g62
(dp3741
sg71
g3709
sg64
(lp3742
g57
(g78
g59
NtRp3743
(dp3744
g62
(dp3745
sg71
g3739
sg64
(lp3746
g57
(g58
g59
NtRp3747
(dp3748
g62
(dp3749
g70
I3
ssg71
g3743
sg64
(lp3750
S'/DEV_bootstrap_ch/default/list_all_projects'
p3751
asbasbasbag57
(g73
g59
NtRp3752
(dp3753
g62
(dp3754
sg71
g3709
sg64
(lp3755
g57
(g78
g59
NtRp3756
(dp3757
g62
(dp3758
sg71
g3752
sg64
(lp3759
g57
(g58
g59
NtRp3760
(dp3761
g62
(dp3762
g70
I3
ssg71
g3756
sg64
(lp3763
g57
(g66
g59
NtRp3764
(dp3765
g62
(dp3766
g70
I2
ssg71
Nsg64
(lp3767
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3768
(dp3769
g62
(dp3770
sg71
g3105
sg64
(lp3771
g57
(g78
g59
NtRp3772
(dp3773
g62
(dp3774
g82
g83
ssg71
g3768
sg64
(lp3775
S'meta'
p3776
asbag57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
g89
g90
ssg71
g3768
sg64
(lp3780
S':'
asbag57
(g78
g59
NtRp3781
(dp3782
g62
(dp3783
sg71
g3768
sg64
(lp3784
g57
(g58
g59
NtRp3785
(dp3786
g62
(dp3787
g70
I5
ssg71
g3781
sg64
(lp3788
g57
(g66
g59
NtRp3789
(dp3790
g62
(dp3791
g70
I4
ssg71
Nsg64
(lp3792
g57
(g73
g59
NtRp3793
(dp3794
g62
(dp3795
sg71
g3789
sg64
(lp3796
g57
(g78
g59
NtRp3797
(dp3798
g62
(dp3799
g82
g83
ssg71
g3793
sg64
(lp3800
S'author'
p3801
asbag57
(g78
g59
NtRp3802
(dp3803
g62
(dp3804
g89
g90
ssg71
g3793
sg64
(lp3805
S':'
asbag57
(g78
g59
NtRp3806
(dp3807
g62
(dp3808
sg71
g3793
sg64
(lp3809
g57
(g58
g59
NtRp3810
(dp3811
g62
(dp3812
g70
I4
ssg71
g3806
sg64
(lp3813
S'Vikram Pudi <vikram@iiit.ac.in>'
p3814
asbasbasbag57
(g73
g59
NtRp3815
(dp3816
g62
(dp3817
sg71
g3789
sg64
(lp3818
g57
(g78
g59
NtRp3819
(dp3820
g62
(dp3821
g82
g83
ssg71
g3815
sg64
(lp3822
S'copyright'
p3823
asbag57
(g78
g59
NtRp3824
(dp3825
g62
(dp3826
g89
g90
ssg71
g3815
sg64
(lp3827
S':'
asbag57
(g78
g59
NtRp3828
(dp3829
g62
(dp3830
sg71
g3815
sg64
(lp3831
g57
(g58
g59
NtRp3832
(dp3833
g62
(dp3834
g70
I4
ssg71
g3828
sg64
(lp3835
S'Copyright 2011'
p3836
asbasbasbag57
(g73
g59
NtRp3837
(dp3838
g62
(dp3839
sg71
g3789
sg64
(lp3840
g57
(g78
g59
NtRp3841
(dp3842
g62
(dp3843
g82
g83
ssg71
g3837
sg64
(lp3844
S'description'
p3845
asbag57
(g78
g59
NtRp3846
(dp3847
g62
(dp3848
g89
g90
ssg71
g3837
sg64
(lp3849
S':'
asbag57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
sg71
g3837
sg64
(lp3853
g57
(g58
g59
NtRp3854
(dp3855
g62
(dp3856
g70
I4
ssg71
g3850
sg64
(lp3857
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p3858
asbasbasbag57
(g73
g59
NtRp3859
(dp3860
g62
(dp3861
sg71
g3789
sg64
(lp3862
g57
(g78
g59
NtRp3863
(dp3864
g62
(dp3865
g82
g83
ssg71
g3859
sg64
(lp3866
S'generator'
p3867
asbag57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
g89
g90
ssg71
g3859
sg64
(lp3871
S':'
asbag57
(g78
g59
NtRp3872
(dp3873
g62
(dp3874
sg71
g3859
sg64
(lp3875
g57
(g58
g59
NtRp3876
(dp3877
g62
(dp3878
g70
I4
ssg71
g3872
sg64
(lp3879
S'Web2py Web Framework'
p3880
asbasbasbag57
(g73
g59
NtRp3881
(dp3882
g62
(dp3883
sg71
g3789
sg64
(lp3884
g57
(g78
g59
NtRp3885
(dp3886
g62
(dp3887
g82
g83
ssg71
g3881
sg64
(lp3888
S'keywords'
p3889
asbag57
(g78
g59
NtRp3890
(dp3891
g62
(dp3892
g89
g90
ssg71
g3881
sg64
(lp3893
S':'
asbag57
(g78
g59
NtRp3894
(dp3895
g62
(dp3896
sg71
g3881
sg64
(lp3897
g57
(g58
g59
NtRp3898
(dp3899
g62
(dp3900
g70
I4
ssg71
g3894
sg64
(lp3901
S'web2py, python, metabolome, metabolomics'
p3902
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3903
(dp3904
g62
(dp3905
sg71
g3105
sg64
(lp3906
g57
(g78
g59
NtRp3907
(dp3908
g62
(dp3909
g82
g83
ssg71
g3903
sg64
(lp3910
S'models_to_run'
p3911
asbag57
(g78
g59
NtRp3912
(dp3913
g62
(dp3914
g89
g90
ssg71
g3903
sg64
(lp3915
S':'
asbag57
(g78
g59
NtRp3916
(dp3917
g62
(dp3918
sg71
g3903
sg64
(lp3919
g57
(g58
g59
NtRp3920
(dp3921
g62
(dp3922
g70
I5
ssg71
g3916
sg64
(lp3923
g57
(g66
g59
NtRp3924
(dp3925
g62
(dp3926
g70
I4
ssg71
Nsg64
(lp3927
g57
(g73
g59
NtRp3928
(dp3929
g62
(dp3930
sg71
g3924
sg64
(lp3931
g57
(g78
g59
NtRp3932
(dp3933
g62
(dp3934
sg71
g3928
sg64
(lp3935
g57
(g58
g59
NtRp3936
(dp3937
g62
(dp3938
g70
I4
ssg71
g3932
sg64
(lp3939
S'^\\w+\\.py$'
p3940
asbasbasbag57
(g73
g59
NtRp3941
(dp3942
g62
(dp3943
sg71
g3924
sg64
(lp3944
g57
(g78
g59
NtRp3945
(dp3946
g62
(dp3947
sg71
g3941
sg64
(lp3948
g57
(g58
g59
NtRp3949
(dp3950
g62
(dp3951
g70
I4
ssg71
g3945
sg64
(lp3952
S'^default/\\w+\\.py$'
p3953
asbasbasbag57
(g73
g59
NtRp3954
(dp3955
g62
(dp3956
sg71
g3924
sg64
(lp3957
g57
(g78
g59
NtRp3958
(dp3959
g62
(dp3960
sg71
g3954
sg64
(lp3961
g57
(g58
g59
NtRp3962
(dp3963
g62
(dp3964
g70
I4
ssg71
g3958
sg64
(lp3965
S'^default/list_all_dev_projects/\\w+\\.py$'
p3966
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3967
(dp3968
g62
(dp3969
sg71
g3105
sg64
(lp3970
g57
(g78
g59
NtRp3971
(dp3972
g62
(dp3973
g82
g83
ssg71
g3967
sg64
(lp3974
S'postprocessing'
p3975
asbag57
(g78
g59
NtRp3976
(dp3977
g62
(dp3978
g89
g90
ssg71
g3967
sg64
(lp3979
S':'
asbag57
(g78
g59
NtRp3980
(dp3981
g62
(dp3982
sg71
g3967
sg64
(lp3983
g57
(g58
g59
NtRp3984
(dp3985
g62
(dp3986
g70
I5
ssg71
g3980
sg64
(lp3987
g57
(g66
g59
NtRp3988
(dp3989
g62
(dp3990
g70
I4
ssg71
Nsg64
(lp3991
sbasbasbasbag57
(g73
g59
NtRp3992
(dp3993
g62
(dp3994
sg71
g3105
sg64
(lp3995
g57
(g78
g59
NtRp3996
(dp3997
g62
(dp3998
g82
g83
ssg71
g3992
sg64
(lp3999
S'session_cookie_expires'
p4000
asbag57
(g78
g59
NtRp4001
(dp4002
g62
(dp4003
g89
g90
ssg71
g3992
sg64
(lp4004
S':'
asbag57
(g78
g59
NtRp4005
(dp4006
g62
(dp4007
sg71
g3992
sg64
(lp4008
g57
(g58
g59
NtRp4009
(dp4010
g62
(dp4011
g70
I5
ssg71
g4005
sg64
(lp4012
S'None'
p4013
asbasbasbag57
(g73
g59
NtRp4014
(dp4015
g62
(dp4016
sg71
g3105
sg64
(lp4017
g57
(g78
g59
NtRp4018
(dp4019
g62
(dp4020
g82
g83
ssg71
g4014
sg64
(lp4021
S'session_data_name'
p4022
asbag57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
g89
g90
ssg71
g4014
sg64
(lp4026
S':'
asbag57
(g78
g59
NtRp4027
(dp4028
g62
(dp4029
sg71
g4014
sg64
(lp4030
g57
(g58
g59
NtRp4031
(dp4032
g62
(dp4033
g70
I5
ssg71
g4027
sg64
(lp4034
S'session_data_dev_bootstrap_ch'
p4035
asbasbasbag57
(g73
g59
NtRp4036
(dp4037
g62
(dp4038
sg71
g3105
sg64
(lp4039
g57
(g78
g59
NtRp4040
(dp4041
g62
(dp4042
g82
g83
ssg71
g4036
sg64
(lp4043
S'session_file'
p4044
asbag57
(g78
g59
NtRp4045
(dp4046
g62
(dp4047
g89
g90
ssg71
g4036
sg64
(lp4048
S':'
asbag57
(g78
g59
NtRp4049
(dp4050
g62
(dp4051
sg71
g4036
sg64
(lp4052
g57
(g58
g59
NtRp4053
(dp4054
g62
(dp4055
g70
I5
ssg71
g4049
sg64
(lp4056
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c', mode 'rb+' at 0xb4f98180>"
p4057
asbasbasbag57
(g73
g59
NtRp4058
(dp4059
g62
(dp4060
sg71
g3105
sg64
(lp4061
g57
(g78
g59
NtRp4062
(dp4063
g62
(dp4064
g82
g83
ssg71
g4058
sg64
(lp4065
S'session_filename'
p4066
asbag57
(g78
g59
NtRp4067
(dp4068
g62
(dp4069
g89
g90
ssg71
g4058
sg64
(lp4070
S':'
asbag57
(g78
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g4058
sg64
(lp4074
g57
(g58
g59
NtRp4075
(dp4076
g62
(dp4077
g70
I5
ssg71
g4071
sg64
(lp4078
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p4079
asbasbasbag57
(g73
g59
NtRp4080
(dp4081
g62
(dp4082
sg71
g3105
sg64
(lp4083
g57
(g78
g59
NtRp4084
(dp4085
g62
(dp4086
g82
g83
ssg71
g4080
sg64
(lp4087
S'session_id'
p4088
asbag57
(g78
g59
NtRp4089
(dp4090
g62
(dp4091
g89
g90
ssg71
g4080
sg64
(lp4092
S':'
asbag57
(g78
g59
NtRp4093
(dp4094
g62
(dp4095
sg71
g4080
sg64
(lp4096
g57
(g58
g59
NtRp4097
(dp4098
g62
(dp4099
g70
I5
ssg71
g4093
sg64
(lp4100
g344
asbasbasbag57
(g73
g59
NtRp4101
(dp4102
g62
(dp4103
sg71
g3105
sg64
(lp4104
g57
(g78
g59
NtRp4105
(dp4106
g62
(dp4107
g82
g83
ssg71
g4101
sg64
(lp4108
S'session_id_name'
p4109
asbag57
(g78
g59
NtRp4110
(dp4111
g62
(dp4112
g89
g90
ssg71
g4101
sg64
(lp4113
S':'
asbag57
(g78
g59
NtRp4114
(dp4115
g62
(dp4116
sg71
g4101
sg64
(lp4117
g57
(g58
g59
NtRp4118
(dp4119
g62
(dp4120
g70
I5
ssg71
g4114
sg64
(lp4121
g3162
asbasbasbag57
(g73
g59
NtRp4122
(dp4123
g62
(dp4124
sg71
g3105
sg64
(lp4125
g57
(g78
g59
NtRp4126
(dp4127
g62
(dp4128
g82
g83
ssg71
g4122
sg64
(lp4129
S'session_locked'
p4130
asbag57
(g78
g59
NtRp4131
(dp4132
g62
(dp4133
g89
g90
ssg71
g4122
sg64
(lp4134
S':'
asbag57
(g78
g59
NtRp4135
(dp4136
g62
(dp4137
sg71
g4122
sg64
(lp4138
g57
(g58
g59
NtRp4139
(dp4140
g62
(dp4141
g70
I5
ssg71
g4135
sg64
(lp4142
g1504
asbasbasbag57
(g73
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g3105
sg64
(lp4146
g57
(g78
g59
NtRp4147
(dp4148
g62
(dp4149
g82
g83
ssg71
g4143
sg64
(lp4150
S'session_new'
p4151
asbag57
(g78
g59
NtRp4152
(dp4153
g62
(dp4154
g89
g90
ssg71
g4143
sg64
(lp4155
S':'
asbag57
(g78
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4143
sg64
(lp4159
g57
(g58
g59
NtRp4160
(dp4161
g62
(dp4162
g70
I5
ssg71
g4156
sg64
(lp4163
g100
asbasbasbag57
(g73
g59
NtRp4164
(dp4165
g62
(dp4166
sg71
g3105
sg64
(lp4167
g57
(g78
g59
NtRp4168
(dp4169
g62
(dp4170
g82
g83
ssg71
g4164
sg64
(lp4171
S'session_storage_type'
p4172
asbag57
(g78
g59
NtRp4173
(dp4174
g62
(dp4175
g89
g90
ssg71
g4164
sg64
(lp4176
S':'
asbag57
(g78
g59
NtRp4177
(dp4178
g62
(dp4179
sg71
g4164
sg64
(lp4180
g57
(g58
g59
NtRp4181
(dp4182
g62
(dp4183
g70
I5
ssg71
g4177
sg64
(lp4184
g2978
asbasbasbag57
(g73
g59
NtRp4185
(dp4186
g62
(dp4187
sg71
g3105
sg64
(lp4188
g57
(g78
g59
NtRp4189
(dp4190
g62
(dp4191
g82
g83
ssg71
g4185
sg64
(lp4192
S'status'
p4193
asbag57
(g78
g59
NtRp4194
(dp4195
g62
(dp4196
g89
g90
ssg71
g4185
sg64
(lp4197
S':'
asbag57
(g78
g59
NtRp4198
(dp4199
g62
(dp4200
sg71
g4185
sg64
(lp4201
g57
(g58
g59
NtRp4202
(dp4203
g62
(dp4204
g70
I5
ssg71
g4198
sg64
(lp4205
S'200'
p4206
asbasbasbag57
(g73
g59
NtRp4207
(dp4208
g62
(dp4209
sg71
g3105
sg64
(lp4210
g57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
g82
g83
ssg71
g4207
sg64
(lp4214
S'subtitle'
p4215
asbag57
(g78
g59
NtRp4216
(dp4217
g62
(dp4218
g89
g90
ssg71
g4207
sg64
(lp4219
S':'
asbag57
(g78
g59
NtRp4220
(dp4221
g62
(dp4222
sg71
g4207
sg64
(lp4223
g57
(g58
g59
NtRp4224
(dp4225
g62
(dp4226
g70
I5
ssg71
g4220
sg64
(lp4227
g3725
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4228
asbasbasbag57
(g73
g59
NtRp4229
(dp4230
g62
(dp4231
sg71
g3105
sg64
(lp4232
g57
(g78
g59
NtRp4233
(dp4234
g62
(dp4235
g82
g83
ssg71
g4229
sg64
(lp4236
S'title'
p4237
asbag57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
g89
g90
ssg71
g4229
sg64
(lp4241
S':'
asbag57
(g78
g59
NtRp4242
(dp4243
g62
(dp4244
sg71
g4229
sg64
(lp4245
g57
(g58
g59
NtRp4246
(dp4247
g62
(dp4248
g70
I5
ssg71
g4242
sg64
(lp4249
g122
asbasbasbag57
(g73
g59
NtRp4250
(dp4251
g62
(dp4252
sg71
g3105
sg64
(lp4253
g57
(g78
g59
NtRp4254
(dp4255
g62
(dp4256
g82
g83
ssg71
g4250
sg64
(lp4257
S'view'
p4258
asbag57
(g78
g59
NtRp4259
(dp4260
g62
(dp4261
g89
g90
ssg71
g4250
sg64
(lp4262
S':'
asbag57
(g78
g59
NtRp4263
(dp4264
g62
(dp4265
sg71
g4250
sg64
(lp4266
g57
(g58
g59
NtRp4267
(dp4268
g62
(dp4269
g70
I5
ssg71
g4263
sg64
(lp4270
S'default/list_all_dev_projects.html'
p4271
asbasbasbasbasbsS'locals'
p4272
(dp4273
ssS'traceback'
p4274
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1141, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 294, in list_all_dev_projects\n    db.sample.experimentalist.default=auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p4275
s.