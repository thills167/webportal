(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n#           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))) \\\n        ]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'id\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'id'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'3'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g67
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
g82
g83
ssg71
g185
sg64
(lp192
S'body'
p193
asbag57
(g78
g59
NtRp194
(dp195
g62
(dp196
g89
g90
ssg71
g185
sg64
(lp197
S':'
asbag57
(g78
g59
NtRp198
(dp199
g62
(dp200
sg71
g185
sg64
(lp201
g57
(g58
g59
NtRp202
(dp203
g62
(dp204
g70
I5
ssg71
g198
sg64
(lp205
S'<cStringIO.StringO object at 0xade411a0>'
p206
asbasbasbag57
(g73
g59
NtRp207
(dp208
g62
(dp209
sg71
g67
sg64
(lp210
g57
(g78
g59
NtRp211
(dp212
g62
(dp213
g82
g83
ssg71
g207
sg64
(lp214
S'cid'
p215
asbag57
(g78
g59
NtRp216
(dp217
g62
(dp218
g89
g90
ssg71
g207
sg64
(lp219
S':'
asbag57
(g78
g59
NtRp220
(dp221
g62
(dp222
sg71
g207
sg64
(lp223
g57
(g58
g59
NtRp224
(dp225
g62
(dp226
g70
I5
ssg71
g220
sg64
(lp227
S'None'
p228
asbasbasbag57
(g73
g59
NtRp229
(dp230
g62
(dp231
sg71
g67
sg64
(lp232
g57
(g78
g59
NtRp233
(dp234
g62
(dp235
g82
g83
ssg71
g229
sg64
(lp236
S'client'
p237
asbag57
(g78
g59
NtRp238
(dp239
g62
(dp240
g89
g90
ssg71
g229
sg64
(lp241
S':'
asbag57
(g78
g59
NtRp242
(dp243
g62
(dp244
sg71
g229
sg64
(lp245
g57
(g58
g59
NtRp246
(dp247
g62
(dp248
g70
I5
ssg71
g242
sg64
(lp249
S'127.0.0.1'
p250
asbasbasbag57
(g73
g59
NtRp251
(dp252
g62
(dp253
sg71
g67
sg64
(lp254
g57
(g78
g59
NtRp255
(dp256
g62
(dp257
g82
g83
ssg71
g251
sg64
(lp258
S'controller'
p259
asbag57
(g78
g59
NtRp260
(dp261
g62
(dp262
g89
g90
ssg71
g251
sg64
(lp263
S':'
asbag57
(g78
g59
NtRp264
(dp265
g62
(dp266
sg71
g251
sg64
(lp267
g57
(g58
g59
NtRp268
(dp269
g62
(dp270
g70
I5
ssg71
g264
sg64
(lp271
S'default'
p272
asbasbasbag57
(g73
g59
NtRp273
(dp274
g62
(dp275
sg71
g67
sg64
(lp276
g57
(g78
g59
NtRp277
(dp278
g62
(dp279
g82
g83
ssg71
g273
sg64
(lp280
S'cookies'
p281
asbag57
(g78
g59
NtRp282
(dp283
g62
(dp284
g89
g90
ssg71
g273
sg64
(lp285
S':'
asbag57
(g78
g59
NtRp286
(dp287
g62
(dp288
sg71
g273
sg64
(lp289
g57
(g58
g59
NtRp290
(dp291
g62
(dp292
g70
I5
ssg71
g286
sg64
(lp293
g57
(g66
g59
NtRp294
(dp295
g62
(dp296
g70
I4
ssg71
Nsg64
(lp297
g57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g294
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'session_id_admin'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I4
ssg71
g311
sg64
(lp318
S'127.0.0.1-3b0dba09-bdae-46c4-bcf0-1e7fbef14605'
p319
ag57
(g66
g59
NtRp320
(dp321
g62
(dp322
g70
I3
ssg71
Nsg64
(lp323
g57
(g73
g59
NtRp324
(dp325
g62
(dp326
sg71
g320
sg64
(lp327
g57
(g78
g59
NtRp328
(dp329
g62
(dp330
g82
g83
ssg71
g324
sg64
(lp331
S'comment'
p332
asbag57
(g78
g59
NtRp333
(dp334
g62
(dp335
g89
g90
ssg71
g324
sg64
(lp336
S':'
asbag57
(g78
g59
NtRp337
(dp338
g62
(dp339
sg71
g324
sg64
(lp340
g57
(g58
g59
NtRp341
(dp342
g62
(dp343
g70
I3
ssg71
g337
sg64
(lp344
S''
asbasbasbag57
(g73
g59
NtRp345
(dp346
g62
(dp347
sg71
g320
sg64
(lp348
g57
(g78
g59
NtRp349
(dp350
g62
(dp351
g82
g83
ssg71
g345
sg64
(lp352
S'domain'
p353
asbag57
(g78
g59
NtRp354
(dp355
g62
(dp356
g89
g90
ssg71
g345
sg64
(lp357
S':'
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
sg71
g345
sg64
(lp361
g57
(g58
g59
NtRp362
(dp363
g62
(dp364
g70
I3
ssg71
g358
sg64
(lp365
S''
asbasbasbag57
(g73
g59
NtRp366
(dp367
g62
(dp368
sg71
g320
sg64
(lp369
g57
(g78
g59
NtRp370
(dp371
g62
(dp372
g82
g83
ssg71
g366
sg64
(lp373
S'expires'
p374
asbag57
(g78
g59
NtRp375
(dp376
g62
(dp377
g89
g90
ssg71
g366
sg64
(lp378
S':'
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
sg71
g366
sg64
(lp382
g57
(g58
g59
NtRp383
(dp384
g62
(dp385
g70
I3
ssg71
g379
sg64
(lp386
S''
asbasbasbag57
(g73
g59
NtRp387
(dp388
g62
(dp389
sg71
g320
sg64
(lp390
g57
(g78
g59
NtRp391
(dp392
g62
(dp393
g82
g83
ssg71
g387
sg64
(lp394
S'httponly'
p395
asbag57
(g78
g59
NtRp396
(dp397
g62
(dp398
g89
g90
ssg71
g387
sg64
(lp399
S':'
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
sg71
g387
sg64
(lp403
g57
(g58
g59
NtRp404
(dp405
g62
(dp406
g70
I3
ssg71
g400
sg64
(lp407
S''
asbasbasbag57
(g73
g59
NtRp408
(dp409
g62
(dp410
sg71
g320
sg64
(lp411
g57
(g78
g59
NtRp412
(dp413
g62
(dp414
g82
g83
ssg71
g408
sg64
(lp415
S'max-age'
p416
asbag57
(g78
g59
NtRp417
(dp418
g62
(dp419
g89
g90
ssg71
g408
sg64
(lp420
S':'
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
sg71
g408
sg64
(lp424
g57
(g58
g59
NtRp425
(dp426
g62
(dp427
g70
I3
ssg71
g421
sg64
(lp428
S''
asbasbasbag57
(g73
g59
NtRp429
(dp430
g62
(dp431
sg71
g320
sg64
(lp432
g57
(g78
g59
NtRp433
(dp434
g62
(dp435
g82
g83
ssg71
g429
sg64
(lp436
S'path'
p437
asbag57
(g78
g59
NtRp438
(dp439
g62
(dp440
g89
g90
ssg71
g429
sg64
(lp441
S':'
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
sg71
g429
sg64
(lp445
g57
(g58
g59
NtRp446
(dp447
g62
(dp448
g70
I3
ssg71
g442
sg64
(lp449
S''
asbasbasbag57
(g73
g59
NtRp450
(dp451
g62
(dp452
sg71
g320
sg64
(lp453
g57
(g78
g59
NtRp454
(dp455
g62
(dp456
g82
g83
ssg71
g450
sg64
(lp457
S'secure'
p458
asbag57
(g78
g59
NtRp459
(dp460
g62
(dp461
g89
g90
ssg71
g450
sg64
(lp462
S':'
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
sg71
g450
sg64
(lp466
g57
(g58
g59
NtRp467
(dp468
g62
(dp469
g70
I3
ssg71
g463
sg64
(lp470
S''
asbasbasbag57
(g73
g59
NtRp471
(dp472
g62
(dp473
sg71
g320
sg64
(lp474
g57
(g78
g59
NtRp475
(dp476
g62
(dp477
g82
g83
ssg71
g471
sg64
(lp478
S'version'
p479
asbag57
(g78
g59
NtRp480
(dp481
g62
(dp482
g89
g90
ssg71
g471
sg64
(lp483
S':'
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
sg71
g471
sg64
(lp487
g57
(g58
g59
NtRp488
(dp489
g62
(dp490
g70
I3
ssg71
g484
sg64
(lp491
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp492
(dp493
g62
(dp494
sg71
g294
sg64
(lp495
g57
(g78
g59
NtRp496
(dp497
g62
(dp498
g82
g83
ssg71
g492
sg64
(lp499
S'session_id_dev_bootstrap_ch'
p500
asbag57
(g78
g59
NtRp501
(dp502
g62
(dp503
g89
g90
ssg71
g492
sg64
(lp504
S':'
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
sg71
g492
sg64
(lp508
g57
(g58
g59
NtRp509
(dp510
g62
(dp511
g70
I4
ssg71
g505
sg64
(lp512
S'127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p513
ag57
(g66
g59
NtRp514
(dp515
g62
(dp516
g70
I3
ssg71
Nsg64
(lp517
g57
(g73
g59
NtRp518
(dp519
g62
(dp520
sg71
g514
sg64
(lp521
g57
(g78
g59
NtRp522
(dp523
g62
(dp524
g82
g83
ssg71
g518
sg64
(lp525
g332
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g518
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g518
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I3
ssg71
g530
sg64
(lp537
S''
asbasbasbag57
(g73
g59
NtRp538
(dp539
g62
(dp540
sg71
g514
sg64
(lp541
g57
(g78
g59
NtRp542
(dp543
g62
(dp544
g82
g83
ssg71
g538
sg64
(lp545
g353
asbag57
(g78
g59
NtRp546
(dp547
g62
(dp548
g89
g90
ssg71
g538
sg64
(lp549
S':'
asbag57
(g78
g59
NtRp550
(dp551
g62
(dp552
sg71
g538
sg64
(lp553
g57
(g58
g59
NtRp554
(dp555
g62
(dp556
g70
I3
ssg71
g550
sg64
(lp557
S''
asbasbasbag57
(g73
g59
NtRp558
(dp559
g62
(dp560
sg71
g514
sg64
(lp561
g57
(g78
g59
NtRp562
(dp563
g62
(dp564
g82
g83
ssg71
g558
sg64
(lp565
g374
asbag57
(g78
g59
NtRp566
(dp567
g62
(dp568
g89
g90
ssg71
g558
sg64
(lp569
S':'
asbag57
(g78
g59
NtRp570
(dp571
g62
(dp572
sg71
g558
sg64
(lp573
g57
(g58
g59
NtRp574
(dp575
g62
(dp576
g70
I3
ssg71
g570
sg64
(lp577
S''
asbasbasbag57
(g73
g59
NtRp578
(dp579
g62
(dp580
sg71
g514
sg64
(lp581
g57
(g78
g59
NtRp582
(dp583
g62
(dp584
g82
g83
ssg71
g578
sg64
(lp585
g395
asbag57
(g78
g59
NtRp586
(dp587
g62
(dp588
g89
g90
ssg71
g578
sg64
(lp589
S':'
asbag57
(g78
g59
NtRp590
(dp591
g62
(dp592
sg71
g578
sg64
(lp593
g57
(g58
g59
NtRp594
(dp595
g62
(dp596
g70
I3
ssg71
g590
sg64
(lp597
S''
asbasbasbag57
(g73
g59
NtRp598
(dp599
g62
(dp600
sg71
g514
sg64
(lp601
g57
(g78
g59
NtRp602
(dp603
g62
(dp604
g82
g83
ssg71
g598
sg64
(lp605
g416
asbag57
(g78
g59
NtRp606
(dp607
g62
(dp608
g89
g90
ssg71
g598
sg64
(lp609
S':'
asbag57
(g78
g59
NtRp610
(dp611
g62
(dp612
sg71
g598
sg64
(lp613
g57
(g58
g59
NtRp614
(dp615
g62
(dp616
g70
I3
ssg71
g610
sg64
(lp617
S''
asbasbasbag57
(g73
g59
NtRp618
(dp619
g62
(dp620
sg71
g514
sg64
(lp621
g57
(g78
g59
NtRp622
(dp623
g62
(dp624
g82
g83
ssg71
g618
sg64
(lp625
g437
asbag57
(g78
g59
NtRp626
(dp627
g62
(dp628
g89
g90
ssg71
g618
sg64
(lp629
S':'
asbag57
(g78
g59
NtRp630
(dp631
g62
(dp632
sg71
g618
sg64
(lp633
g57
(g58
g59
NtRp634
(dp635
g62
(dp636
g70
I3
ssg71
g630
sg64
(lp637
S''
asbasbasbag57
(g73
g59
NtRp638
(dp639
g62
(dp640
sg71
g514
sg64
(lp641
g57
(g78
g59
NtRp642
(dp643
g62
(dp644
g82
g83
ssg71
g638
sg64
(lp645
g458
asbag57
(g78
g59
NtRp646
(dp647
g62
(dp648
g89
g90
ssg71
g638
sg64
(lp649
S':'
asbag57
(g78
g59
NtRp650
(dp651
g62
(dp652
sg71
g638
sg64
(lp653
g57
(g58
g59
NtRp654
(dp655
g62
(dp656
g70
I3
ssg71
g650
sg64
(lp657
S''
asbasbasbag57
(g73
g59
NtRp658
(dp659
g62
(dp660
sg71
g514
sg64
(lp661
g57
(g78
g59
NtRp662
(dp663
g62
(dp664
g82
g83
ssg71
g658
sg64
(lp665
g479
asbag57
(g78
g59
NtRp666
(dp667
g62
(dp668
g89
g90
ssg71
g658
sg64
(lp669
S':'
asbag57
(g78
g59
NtRp670
(dp671
g62
(dp672
sg71
g658
sg64
(lp673
g57
(g58
g59
NtRp674
(dp675
g62
(dp676
g70
I3
ssg71
g670
sg64
(lp677
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp678
(dp679
g62
(dp680
sg71
g67
sg64
(lp681
g57
(g78
g59
NtRp682
(dp683
g62
(dp684
g82
g83
ssg71
g678
sg64
(lp685
S'env'
p686
asbag57
(g78
g59
NtRp687
(dp688
g62
(dp689
g89
g90
ssg71
g678
sg64
(lp690
S':'
asbag57
(g78
g59
NtRp691
(dp692
g62
(dp693
sg71
g678
sg64
(lp694
g57
(g58
g59
NtRp695
(dp696
g62
(dp697
g70
I5
ssg71
g691
sg64
(lp698
g57
(g66
g59
NtRp699
(dp700
g62
(dp701
g70
I4
ssg71
Nsg64
(lp702
g57
(g73
g59
NtRp703
(dp704
g62
(dp705
sg71
g699
sg64
(lp706
g57
(g78
g59
NtRp707
(dp708
g62
(dp709
g82
g83
ssg71
g703
sg64
(lp710
S'app_folders'
p711
asbag57
(g78
g59
NtRp712
(dp713
g62
(dp714
g89
g90
ssg71
g703
sg64
(lp715
S':'
asbag57
(g78
g59
NtRp716
(dp717
g62
(dp718
sg71
g703
sg64
(lp719
g57
(g58
g59
NtRp720
(dp721
g62
(dp722
g70
I4
ssg71
g716
sg64
(lp723
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p724
asbasbasbag57
(g73
g59
NtRp725
(dp726
g62
(dp727
sg71
g699
sg64
(lp728
g57
(g78
g59
NtRp729
(dp730
g62
(dp731
g82
g83
ssg71
g725
sg64
(lp732
S'applications_parent'
p733
asbag57
(g78
g59
NtRp734
(dp735
g62
(dp736
g89
g90
ssg71
g725
sg64
(lp737
S':'
asbag57
(g78
g59
NtRp738
(dp739
g62
(dp740
sg71
g725
sg64
(lp741
g57
(g58
g59
NtRp742
(dp743
g62
(dp744
g70
I4
ssg71
g738
sg64
(lp745
S'/home/anil/bootstrap/web2py'
p746
asbasbasbag57
(g73
g59
NtRp747
(dp748
g62
(dp749
sg71
g699
sg64
(lp750
g57
(g78
g59
NtRp751
(dp752
g62
(dp753
g82
g83
ssg71
g747
sg64
(lp754
S'cmd_args'
p755
asbag57
(g78
g59
NtRp756
(dp757
g62
(dp758
g89
g90
ssg71
g747
sg64
(lp759
S':'
asbag57
(g78
g59
NtRp760
(dp761
g62
(dp762
sg71
g747
sg64
(lp763
g57
(g58
g59
NtRp764
(dp765
g62
(dp766
g70
I4
ssg71
g760
sg64
(lp767
g57
(g66
g59
NtRp768
(dp769
g62
(dp770
g70
I3
ssg71
Nsg64
(lp771
sbasbasbasbag57
(g73
g59
NtRp772
(dp773
g62
(dp774
sg71
g699
sg64
(lp775
g57
(g78
g59
NtRp776
(dp777
g62
(dp778
g82
g83
ssg71
g772
sg64
(lp779
S'cmd_options'
p780
asbag57
(g78
g59
NtRp781
(dp782
g62
(dp783
g89
g90
ssg71
g772
sg64
(lp784
S':'
asbag57
(g78
g59
NtRp785
(dp786
g62
(dp787
sg71
g772
sg64
(lp788
g57
(g58
g59
NtRp789
(dp790
g62
(dp791
g70
I4
ssg71
g785
sg64
(lp792
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p793
asbasbasbag57
(g73
g59
NtRp794
(dp795
g62
(dp796
sg71
g699
sg64
(lp797
g57
(g78
g59
NtRp798
(dp799
g62
(dp800
g82
g83
ssg71
g794
sg64
(lp801
S'db_sessions'
p802
asbag57
(g78
g59
NtRp803
(dp804
g62
(dp805
g89
g90
ssg71
g794
sg64
(lp806
S':'
asbag57
(g78
g59
NtRp807
(dp808
g62
(dp809
sg71
g794
sg64
(lp810
g57
(g58
g59
NtRp811
(dp812
g62
(dp813
g70
I4
ssg71
g807
sg64
(lp814
S'set([])'
p815
asbasbasbag57
(g73
g59
NtRp816
(dp817
g62
(dp818
sg71
g699
sg64
(lp819
g57
(g78
g59
NtRp820
(dp821
g62
(dp822
g82
g83
ssg71
g816
sg64
(lp823
S'debugging'
p824
asbag57
(g78
g59
NtRp825
(dp826
g62
(dp827
g89
g90
ssg71
g816
sg64
(lp828
S':'
asbag57
(g78
g59
NtRp829
(dp830
g62
(dp831
sg71
g816
sg64
(lp832
g57
(g58
g59
NtRp833
(dp834
g62
(dp835
g70
I4
ssg71
g829
sg64
(lp836
g100
asbasbasbag57
(g73
g59
NtRp837
(dp838
g62
(dp839
sg71
g699
sg64
(lp840
g57
(g78
g59
NtRp841
(dp842
g62
(dp843
g82
g83
ssg71
g837
sg64
(lp844
S'gluon_parent'
p845
asbag57
(g78
g59
NtRp846
(dp847
g62
(dp848
g89
g90
ssg71
g837
sg64
(lp849
S':'
asbag57
(g78
g59
NtRp850
(dp851
g62
(dp852
sg71
g837
sg64
(lp853
g57
(g58
g59
NtRp854
(dp855
g62
(dp856
g70
I4
ssg71
g850
sg64
(lp857
S'/home/anil/bootstrap/web2py'
p858
asbasbasbag57
(g73
g59
NtRp859
(dp860
g62
(dp861
sg71
g699
sg64
(lp862
g57
(g78
g59
NtRp863
(dp864
g62
(dp865
g82
g83
ssg71
g859
sg64
(lp866
S'http_accept'
p867
asbag57
(g78
g59
NtRp868
(dp869
g62
(dp870
g89
g90
ssg71
g859
sg64
(lp871
S':'
asbag57
(g78
g59
NtRp872
(dp873
g62
(dp874
sg71
g859
sg64
(lp875
g57
(g58
g59
NtRp876
(dp877
g62
(dp878
g70
I4
ssg71
g872
sg64
(lp879
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p880
asbasbasbag57
(g73
g59
NtRp881
(dp882
g62
(dp883
sg71
g699
sg64
(lp884
g57
(g78
g59
NtRp885
(dp886
g62
(dp887
g82
g83
ssg71
g881
sg64
(lp888
S'http_accept_charset'
p889
asbag57
(g78
g59
NtRp890
(dp891
g62
(dp892
g89
g90
ssg71
g881
sg64
(lp893
S':'
asbag57
(g78
g59
NtRp894
(dp895
g62
(dp896
sg71
g881
sg64
(lp897
g57
(g58
g59
NtRp898
(dp899
g62
(dp900
g70
I4
ssg71
g894
sg64
(lp901
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p902
asbasbasbag57
(g73
g59
NtRp903
(dp904
g62
(dp905
sg71
g699
sg64
(lp906
g57
(g78
g59
NtRp907
(dp908
g62
(dp909
g82
g83
ssg71
g903
sg64
(lp910
S'http_accept_encoding'
p911
asbag57
(g78
g59
NtRp912
(dp913
g62
(dp914
g89
g90
ssg71
g903
sg64
(lp915
S':'
asbag57
(g78
g59
NtRp916
(dp917
g62
(dp918
sg71
g903
sg64
(lp919
g57
(g58
g59
NtRp920
(dp921
g62
(dp922
g70
I4
ssg71
g916
sg64
(lp923
S'gzip,deflate,sdch'
p924
asbasbasbag57
(g73
g59
NtRp925
(dp926
g62
(dp927
sg71
g699
sg64
(lp928
g57
(g78
g59
NtRp929
(dp930
g62
(dp931
g82
g83
ssg71
g925
sg64
(lp932
S'http_accept_language'
p933
asbag57
(g78
g59
NtRp934
(dp935
g62
(dp936
g89
g90
ssg71
g925
sg64
(lp937
S':'
asbag57
(g78
g59
NtRp938
(dp939
g62
(dp940
sg71
g925
sg64
(lp941
g57
(g58
g59
NtRp942
(dp943
g62
(dp944
g70
I4
ssg71
g938
sg64
(lp945
S'en-US,en;q=0.8'
p946
asbasbasbag57
(g73
g59
NtRp947
(dp948
g62
(dp949
sg71
g699
sg64
(lp950
g57
(g78
g59
NtRp951
(dp952
g62
(dp953
g82
g83
ssg71
g947
sg64
(lp954
S'http_connection'
p955
asbag57
(g78
g59
NtRp956
(dp957
g62
(dp958
g89
g90
ssg71
g947
sg64
(lp959
S':'
asbag57
(g78
g59
NtRp960
(dp961
g62
(dp962
sg71
g947
sg64
(lp963
g57
(g58
g59
NtRp964
(dp965
g62
(dp966
g70
I4
ssg71
g960
sg64
(lp967
S'keep-alive'
p968
asbasbasbag57
(g73
g59
NtRp969
(dp970
g62
(dp971
sg71
g699
sg64
(lp972
g57
(g78
g59
NtRp973
(dp974
g62
(dp975
g82
g83
ssg71
g969
sg64
(lp976
S'http_cookie'
p977
asbag57
(g78
g59
NtRp978
(dp979
g62
(dp980
g89
g90
ssg71
g969
sg64
(lp981
S':'
asbag57
(g78
g59
NtRp982
(dp983
g62
(dp984
sg71
g969
sg64
(lp985
g57
(g58
g59
NtRp986
(dp987
g62
(dp988
g70
I4
ssg71
g982
sg64
(lp989
S'session_id_dev_bootstrap_ch=127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c; session_id_admin=127.0.0.1-3b0dba09-bdae-46c4-bcf0-1e7fbef14605'
p990
asbasbasbag57
(g73
g59
NtRp991
(dp992
g62
(dp993
sg71
g699
sg64
(lp994
g57
(g78
g59
NtRp995
(dp996
g62
(dp997
g82
g83
ssg71
g991
sg64
(lp998
S'http_host'
p999
asbag57
(g78
g59
NtRp1000
(dp1001
g62
(dp1002
g89
g90
ssg71
g991
sg64
(lp1003
S':'
asbag57
(g78
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g991
sg64
(lp1007
g57
(g58
g59
NtRp1008
(dp1009
g62
(dp1010
g70
I4
ssg71
g1004
sg64
(lp1011
S'127.0.0.1:8000'
p1012
asbasbasbag57
(g73
g59
NtRp1013
(dp1014
g62
(dp1015
sg71
g699
sg64
(lp1016
g57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
g82
g83
ssg71
g1013
sg64
(lp1020
S'http_referer'
p1021
asbag57
(g78
g59
NtRp1022
(dp1023
g62
(dp1024
g89
g90
ssg71
g1013
sg64
(lp1025
S':'
asbag57
(g78
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g1013
sg64
(lp1029
g57
(g58
g59
NtRp1030
(dp1031
g62
(dp1032
g70
I4
ssg71
g1026
sg64
(lp1033
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/project_viewer/3'
p1034
asbasbasbag57
(g73
g59
NtRp1035
(dp1036
g62
(dp1037
sg71
g699
sg64
(lp1038
g57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
g82
g83
ssg71
g1035
sg64
(lp1042
S'http_user_agent'
p1043
asbag57
(g78
g59
NtRp1044
(dp1045
g62
(dp1046
g89
g90
ssg71
g1035
sg64
(lp1047
S':'
asbag57
(g78
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g1035
sg64
(lp1051
g57
(g58
g59
NtRp1052
(dp1053
g62
(dp1054
g70
I4
ssg71
g1048
sg64
(lp1055
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1056
asbasbasbag57
(g73
g59
NtRp1057
(dp1058
g62
(dp1059
sg71
g699
sg64
(lp1060
g57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
g82
g83
ssg71
g1057
sg64
(lp1064
S'is_jython'
p1065
asbag57
(g78
g59
NtRp1066
(dp1067
g62
(dp1068
g89
g90
ssg71
g1057
sg64
(lp1069
S':'
asbag57
(g78
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g1057
sg64
(lp1073
g57
(g58
g59
NtRp1074
(dp1075
g62
(dp1076
g70
I4
ssg71
g1070
sg64
(lp1077
g100
asbasbasbag57
(g73
g59
NtRp1078
(dp1079
g62
(dp1080
sg71
g699
sg64
(lp1081
g57
(g78
g59
NtRp1082
(dp1083
g62
(dp1084
g82
g83
ssg71
g1078
sg64
(lp1085
S'is_pypy'
p1086
asbag57
(g78
g59
NtRp1087
(dp1088
g62
(dp1089
g89
g90
ssg71
g1078
sg64
(lp1090
S':'
asbag57
(g78
g59
NtRp1091
(dp1092
g62
(dp1093
sg71
g1078
sg64
(lp1094
g57
(g58
g59
NtRp1095
(dp1096
g62
(dp1097
g70
I4
ssg71
g1091
sg64
(lp1098
g100
asbasbasbag57
(g73
g59
NtRp1099
(dp1100
g62
(dp1101
sg71
g699
sg64
(lp1102
g57
(g78
g59
NtRp1103
(dp1104
g62
(dp1105
g82
g83
ssg71
g1099
sg64
(lp1106
S'local_hosts'
p1107
asbag57
(g78
g59
NtRp1108
(dp1109
g62
(dp1110
g89
g90
ssg71
g1099
sg64
(lp1111
S':'
asbag57
(g78
g59
NtRp1112
(dp1113
g62
(dp1114
sg71
g1099
sg64
(lp1115
g57
(g58
g59
NtRp1116
(dp1117
g62
(dp1118
g70
I4
ssg71
g1112
sg64
(lp1119
g57
(g66
g59
NtRp1120
(dp1121
g62
(dp1122
g70
I3
ssg71
Nsg64
(lp1123
g57
(g73
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g1120
sg64
(lp1127
g57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
sg71
g1124
sg64
(lp1131
g57
(g58
g59
NtRp1132
(dp1133
g62
(dp1134
g70
I3
ssg71
g1128
sg64
(lp1135
S'::1'
p1136
asbasbasbag57
(g73
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1120
sg64
(lp1140
g57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
sg71
g1137
sg64
(lp1144
g57
(g58
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I3
ssg71
g1141
sg64
(lp1148
S'127.0.1.1'
p1149
asbasbasbag57
(g73
g59
NtRp1150
(dp1151
g62
(dp1152
sg71
g1120
sg64
(lp1153
g57
(g78
g59
NtRp1154
(dp1155
g62
(dp1156
sg71
g1150
sg64
(lp1157
g57
(g58
g59
NtRp1158
(dp1159
g62
(dp1160
g70
I3
ssg71
g1154
sg64
(lp1161
S'::ffff:127.0.0.1'
p1162
asbasbasbag57
(g73
g59
NtRp1163
(dp1164
g62
(dp1165
sg71
g1120
sg64
(lp1166
g57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
sg71
g1163
sg64
(lp1170
g57
(g58
g59
NtRp1171
(dp1172
g62
(dp1173
g70
I3
ssg71
g1167
sg64
(lp1174
S'127.0.0.1'
p1175
asbasbasbag57
(g73
g59
NtRp1176
(dp1177
g62
(dp1178
sg71
g1120
sg64
(lp1179
g57
(g78
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g1176
sg64
(lp1183
g57
(g58
g59
NtRp1184
(dp1185
g62
(dp1186
g70
I3
ssg71
g1180
sg64
(lp1187
S'anil-Inspiron-1525'
p1188
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1189
(dp1190
g62
(dp1191
sg71
g699
sg64
(lp1192
g57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
g82
g83
ssg71
g1189
sg64
(lp1196
S'path_info'
p1197
asbag57
(g78
g59
NtRp1198
(dp1199
g62
(dp1200
g89
g90
ssg71
g1189
sg64
(lp1201
S':'
asbag57
(g78
g59
NtRp1202
(dp1203
g62
(dp1204
sg71
g1189
sg64
(lp1205
g57
(g58
g59
NtRp1206
(dp1207
g62
(dp1208
g70
I4
ssg71
g1202
sg64
(lp1209
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/3'
p1210
asbasbasbag57
(g73
g59
NtRp1211
(dp1212
g62
(dp1213
sg71
g699
sg64
(lp1214
g57
(g78
g59
NtRp1215
(dp1216
g62
(dp1217
g82
g83
ssg71
g1211
sg64
(lp1218
S'query_string'
p1219
asbag57
(g78
g59
NtRp1220
(dp1221
g62
(dp1222
g89
g90
ssg71
g1211
sg64
(lp1223
S':'
asbag57
(g78
g59
NtRp1224
(dp1225
g62
(dp1226
sg71
g1211
sg64
(lp1227
g57
(g58
g59
NtRp1228
(dp1229
g62
(dp1230
g70
I4
ssg71
g1224
sg64
(lp1231
S''
asbasbasbag57
(g73
g59
NtRp1232
(dp1233
g62
(dp1234
sg71
g699
sg64
(lp1235
g57
(g78
g59
NtRp1236
(dp1237
g62
(dp1238
g82
g83
ssg71
g1232
sg64
(lp1239
S'remote_addr'
p1240
asbag57
(g78
g59
NtRp1241
(dp1242
g62
(dp1243
g89
g90
ssg71
g1232
sg64
(lp1244
S':'
asbag57
(g78
g59
NtRp1245
(dp1246
g62
(dp1247
sg71
g1232
sg64
(lp1248
g57
(g58
g59
NtRp1249
(dp1250
g62
(dp1251
g70
I4
ssg71
g1245
sg64
(lp1252
g250
asbasbasbag57
(g73
g59
NtRp1253
(dp1254
g62
(dp1255
sg71
g699
sg64
(lp1256
g57
(g78
g59
NtRp1257
(dp1258
g62
(dp1259
g82
g83
ssg71
g1253
sg64
(lp1260
S'remote_port'
p1261
asbag57
(g78
g59
NtRp1262
(dp1263
g62
(dp1264
g89
g90
ssg71
g1253
sg64
(lp1265
S':'
asbag57
(g78
g59
NtRp1266
(dp1267
g62
(dp1268
sg71
g1253
sg64
(lp1269
g57
(g58
g59
NtRp1270
(dp1271
g62
(dp1272
g70
I4
ssg71
g1266
sg64
(lp1273
S'37952'
p1274
asbasbasbag57
(g73
g59
NtRp1275
(dp1276
g62
(dp1277
sg71
g699
sg64
(lp1278
g57
(g78
g59
NtRp1279
(dp1280
g62
(dp1281
g82
g83
ssg71
g1275
sg64
(lp1282
S'request_method'
p1283
asbag57
(g78
g59
NtRp1284
(dp1285
g62
(dp1286
g89
g90
ssg71
g1275
sg64
(lp1287
S':'
asbag57
(g78
g59
NtRp1288
(dp1289
g62
(dp1290
sg71
g1275
sg64
(lp1291
g57
(g58
g59
NtRp1292
(dp1293
g62
(dp1294
g70
I4
ssg71
g1288
sg64
(lp1295
S'GET'
p1296
asbasbasbag57
(g73
g59
NtRp1297
(dp1298
g62
(dp1299
sg71
g699
sg64
(lp1300
g57
(g78
g59
NtRp1301
(dp1302
g62
(dp1303
g82
g83
ssg71
g1297
sg64
(lp1304
S'request_uri'
p1305
asbag57
(g78
g59
NtRp1306
(dp1307
g62
(dp1308
g89
g90
ssg71
g1297
sg64
(lp1309
S':'
asbag57
(g78
g59
NtRp1310
(dp1311
g62
(dp1312
sg71
g1297
sg64
(lp1313
g57
(g58
g59
NtRp1314
(dp1315
g62
(dp1316
g70
I4
ssg71
g1310
sg64
(lp1317
g1210
asbasbasbag57
(g73
g59
NtRp1318
(dp1319
g62
(dp1320
sg71
g699
sg64
(lp1321
g57
(g78
g59
NtRp1322
(dp1323
g62
(dp1324
g82
g83
ssg71
g1318
sg64
(lp1325
S'script_name'
p1326
asbag57
(g78
g59
NtRp1327
(dp1328
g62
(dp1329
g89
g90
ssg71
g1318
sg64
(lp1330
S':'
asbag57
(g78
g59
NtRp1331
(dp1332
g62
(dp1333
sg71
g1318
sg64
(lp1334
g57
(g58
g59
NtRp1335
(dp1336
g62
(dp1337
g70
I4
ssg71
g1331
sg64
(lp1338
S''
asbasbasbag57
(g73
g59
NtRp1339
(dp1340
g62
(dp1341
sg71
g699
sg64
(lp1342
g57
(g78
g59
NtRp1343
(dp1344
g62
(dp1345
g82
g83
ssg71
g1339
sg64
(lp1346
S'server_name'
p1347
asbag57
(g78
g59
NtRp1348
(dp1349
g62
(dp1350
g89
g90
ssg71
g1339
sg64
(lp1351
S':'
asbag57
(g78
g59
NtRp1352
(dp1353
g62
(dp1354
sg71
g1339
sg64
(lp1355
g57
(g58
g59
NtRp1356
(dp1357
g62
(dp1358
g70
I4
ssg71
g1352
sg64
(lp1359
S'anil-Inspiron-1525'
p1360
asbasbasbag57
(g73
g59
NtRp1361
(dp1362
g62
(dp1363
sg71
g699
sg64
(lp1364
g57
(g78
g59
NtRp1365
(dp1366
g62
(dp1367
g82
g83
ssg71
g1361
sg64
(lp1368
S'server_port'
p1369
asbag57
(g78
g59
NtRp1370
(dp1371
g62
(dp1372
g89
g90
ssg71
g1361
sg64
(lp1373
S':'
asbag57
(g78
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g1361
sg64
(lp1377
g57
(g58
g59
NtRp1378
(dp1379
g62
(dp1380
g70
I4
ssg71
g1374
sg64
(lp1381
S'8000'
p1382
asbasbasbag57
(g73
g59
NtRp1383
(dp1384
g62
(dp1385
sg71
g699
sg64
(lp1386
g57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
g82
g83
ssg71
g1383
sg64
(lp1390
S'server_protocol'
p1391
asbag57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
g89
g90
ssg71
g1383
sg64
(lp1395
S':'
asbag57
(g78
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g1383
sg64
(lp1399
g57
(g58
g59
NtRp1400
(dp1401
g62
(dp1402
g70
I4
ssg71
g1396
sg64
(lp1403
S'HTTP/1.1'
p1404
asbasbasbag57
(g73
g59
NtRp1405
(dp1406
g62
(dp1407
sg71
g699
sg64
(lp1408
g57
(g78
g59
NtRp1409
(dp1410
g62
(dp1411
g82
g83
ssg71
g1405
sg64
(lp1412
S'server_software'
p1413
asbag57
(g78
g59
NtRp1414
(dp1415
g62
(dp1416
g89
g90
ssg71
g1405
sg64
(lp1417
S':'
asbag57
(g78
g59
NtRp1418
(dp1419
g62
(dp1420
sg71
g1405
sg64
(lp1421
g57
(g58
g59
NtRp1422
(dp1423
g62
(dp1424
g70
I4
ssg71
g1418
sg64
(lp1425
S'Rocket 1.2.6'
p1426
asbasbasbag57
(g73
g59
NtRp1427
(dp1428
g62
(dp1429
sg71
g699
sg64
(lp1430
g57
(g78
g59
NtRp1431
(dp1432
g62
(dp1433
g82
g83
ssg71
g1427
sg64
(lp1434
S'web2py_path'
p1435
asbag57
(g78
g59
NtRp1436
(dp1437
g62
(dp1438
g89
g90
ssg71
g1427
sg64
(lp1439
S':'
asbag57
(g78
g59
NtRp1440
(dp1441
g62
(dp1442
sg71
g1427
sg64
(lp1443
g57
(g58
g59
NtRp1444
(dp1445
g62
(dp1446
g70
I4
ssg71
g1440
sg64
(lp1447
g746
asbasbasbag57
(g73
g59
NtRp1448
(dp1449
g62
(dp1450
sg71
g699
sg64
(lp1451
g57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
g82
g83
ssg71
g1448
sg64
(lp1455
S'web2py_version'
p1456
asbag57
(g78
g59
NtRp1457
(dp1458
g62
(dp1459
g89
g90
ssg71
g1448
sg64
(lp1460
S':'
asbag57
(g78
g59
NtRp1461
(dp1462
g62
(dp1463
sg71
g1448
sg64
(lp1464
g57
(g58
g59
NtRp1465
(dp1466
g62
(dp1467
g70
I4
ssg71
g1461
sg64
(lp1468
g57
(g66
g59
NtRp1469
(dp1470
g62
(dp1471
g70
I3
ssg71
Nsg64
(lp1472
g57
(g73
g59
NtRp1473
(dp1474
g62
(dp1475
sg71
g1469
sg64
(lp1476
g57
(g78
g59
NtRp1477
(dp1478
g62
(dp1479
sg71
g1473
sg64
(lp1480
g57
(g58
g59
NtRp1481
(dp1482
g62
(dp1483
g70
I3
ssg71
g1477
sg64
(lp1484
S'2'
asbasbasbag57
(g73
g59
NtRp1485
(dp1486
g62
(dp1487
sg71
g1469
sg64
(lp1488
g57
(g78
g59
NtRp1489
(dp1490
g62
(dp1491
sg71
g1485
sg64
(lp1492
g57
(g58
g59
NtRp1493
(dp1494
g62
(dp1495
g70
I3
ssg71
g1489
sg64
(lp1496
S'3'
asbasbasbag57
(g73
g59
NtRp1497
(dp1498
g62
(dp1499
sg71
g1469
sg64
(lp1500
g57
(g78
g59
NtRp1501
(dp1502
g62
(dp1503
sg71
g1497
sg64
(lp1504
g57
(g58
g59
NtRp1505
(dp1506
g62
(dp1507
g70
I3
ssg71
g1501
sg64
(lp1508
S'2'
asbasbasbag57
(g73
g59
NtRp1509
(dp1510
g62
(dp1511
sg71
g1469
sg64
(lp1512
g57
(g78
g59
NtRp1513
(dp1514
g62
(dp1515
sg71
g1509
sg64
(lp1516
g57
(g58
g59
NtRp1517
(dp1518
g62
(dp1519
g70
I3
ssg71
g1513
sg64
(lp1520
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1521
asbasbasbag57
(g73
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1469
sg64
(lp1525
g57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g1522
sg64
(lp1529
g57
(g58
g59
NtRp1530
(dp1531
g62
(dp1532
g70
I3
ssg71
g1526
sg64
(lp1533
S'stable'
p1534
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1535
(dp1536
g62
(dp1537
sg71
g699
sg64
(lp1538
g57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
g82
g83
ssg71
g1535
sg64
(lp1542
S'wsgi_errors'
p1543
asbag57
(g78
g59
NtRp1544
(dp1545
g62
(dp1546
g89
g90
ssg71
g1535
sg64
(lp1547
S':'
asbag57
(g78
g59
NtRp1548
(dp1549
g62
(dp1550
sg71
g1535
sg64
(lp1551
g57
(g58
g59
NtRp1552
(dp1553
g62
(dp1554
g70
I4
ssg71
g1548
sg64
(lp1555
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p1556
asbasbasbag57
(g73
g59
NtRp1557
(dp1558
g62
(dp1559
sg71
g699
sg64
(lp1560
g57
(g78
g59
NtRp1561
(dp1562
g62
(dp1563
g82
g83
ssg71
g1557
sg64
(lp1564
S'wsgi_file_wrapper'
p1565
asbag57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
g89
g90
ssg71
g1557
sg64
(lp1569
S':'
asbag57
(g78
g59
NtRp1570
(dp1571
g62
(dp1572
sg71
g1557
sg64
(lp1573
g57
(g58
g59
NtRp1574
(dp1575
g62
(dp1576
g70
I4
ssg71
g1570
sg64
(lp1577
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p1578
asbasbasbag57
(g73
g59
NtRp1579
(dp1580
g62
(dp1581
sg71
g699
sg64
(lp1582
g57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
g82
g83
ssg71
g1579
sg64
(lp1586
S'wsgi_input'
p1587
asbag57
(g78
g59
NtRp1588
(dp1589
g62
(dp1590
g89
g90
ssg71
g1579
sg64
(lp1591
S':'
asbag57
(g78
g59
NtRp1592
(dp1593
g62
(dp1594
sg71
g1579
sg64
(lp1595
g57
(g58
g59
NtRp1596
(dp1597
g62
(dp1598
g70
I4
ssg71
g1592
sg64
(lp1599
S'<socket._fileobject object at 0x9f5516c>'
p1600
asbasbasbag57
(g73
g59
NtRp1601
(dp1602
g62
(dp1603
sg71
g699
sg64
(lp1604
g57
(g78
g59
NtRp1605
(dp1606
g62
(dp1607
g82
g83
ssg71
g1601
sg64
(lp1608
S'wsgi_multiprocess'
p1609
asbag57
(g78
g59
NtRp1610
(dp1611
g62
(dp1612
g89
g90
ssg71
g1601
sg64
(lp1613
S':'
asbag57
(g78
g59
NtRp1614
(dp1615
g62
(dp1616
sg71
g1601
sg64
(lp1617
g57
(g58
g59
NtRp1618
(dp1619
g62
(dp1620
g70
I4
ssg71
g1614
sg64
(lp1621
g100
asbasbasbag57
(g73
g59
NtRp1622
(dp1623
g62
(dp1624
sg71
g699
sg64
(lp1625
g57
(g78
g59
NtRp1626
(dp1627
g62
(dp1628
g82
g83
ssg71
g1622
sg64
(lp1629
S'wsgi_multithread'
p1630
asbag57
(g78
g59
NtRp1631
(dp1632
g62
(dp1633
g89
g90
ssg71
g1622
sg64
(lp1634
S':'
asbag57
(g78
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g1622
sg64
(lp1638
g57
(g58
g59
NtRp1639
(dp1640
g62
(dp1641
g70
I4
ssg71
g1635
sg64
(lp1642
S'True'
p1643
asbasbasbag57
(g73
g59
NtRp1644
(dp1645
g62
(dp1646
sg71
g699
sg64
(lp1647
g57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
g82
g83
ssg71
g1644
sg64
(lp1651
S'wsgi_run_once'
p1652
asbag57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
g89
g90
ssg71
g1644
sg64
(lp1656
S':'
asbag57
(g78
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g1644
sg64
(lp1660
g57
(g58
g59
NtRp1661
(dp1662
g62
(dp1663
g70
I4
ssg71
g1657
sg64
(lp1664
g100
asbasbasbag57
(g73
g59
NtRp1665
(dp1666
g62
(dp1667
sg71
g699
sg64
(lp1668
g57
(g78
g59
NtRp1669
(dp1670
g62
(dp1671
g82
g83
ssg71
g1665
sg64
(lp1672
S'wsgi_url_scheme'
p1673
asbag57
(g78
g59
NtRp1674
(dp1675
g62
(dp1676
g89
g90
ssg71
g1665
sg64
(lp1677
S':'
asbag57
(g78
g59
NtRp1678
(dp1679
g62
(dp1680
sg71
g1665
sg64
(lp1681
g57
(g58
g59
NtRp1682
(dp1683
g62
(dp1684
g70
I4
ssg71
g1678
sg64
(lp1685
S'http'
p1686
asbasbasbag57
(g73
g59
NtRp1687
(dp1688
g62
(dp1689
sg71
g699
sg64
(lp1690
g57
(g78
g59
NtRp1691
(dp1692
g62
(dp1693
g82
g83
ssg71
g1687
sg64
(lp1694
S'wsgi_version'
p1695
asbag57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
g89
g90
ssg71
g1687
sg64
(lp1699
S':'
asbag57
(g78
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g1687
sg64
(lp1703
g57
(g58
g59
NtRp1704
(dp1705
g62
(dp1706
g70
I4
ssg71
g1700
sg64
(lp1707
g57
(g66
g59
NtRp1708
(dp1709
g62
(dp1710
g70
I3
ssg71
Nsg64
(lp1711
g57
(g73
g59
NtRp1712
(dp1713
g62
(dp1714
sg71
g1708
sg64
(lp1715
g57
(g78
g59
NtRp1716
(dp1717
g62
(dp1718
sg71
g1712
sg64
(lp1719
g57
(g58
g59
NtRp1720
(dp1721
g62
(dp1722
g70
I3
ssg71
g1716
sg64
(lp1723
S'1'
asbasbasbag57
(g73
g59
NtRp1724
(dp1725
g62
(dp1726
sg71
g1708
sg64
(lp1727
g57
(g78
g59
NtRp1728
(dp1729
g62
(dp1730
sg71
g1724
sg64
(lp1731
g57
(g58
g59
NtRp1732
(dp1733
g62
(dp1734
g70
I3
ssg71
g1728
sg64
(lp1735
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1736
(dp1737
g62
(dp1738
sg71
g67
sg64
(lp1739
g57
(g78
g59
NtRp1740
(dp1741
g62
(dp1742
g82
g83
ssg71
g1736
sg64
(lp1743
S'extension'
p1744
asbag57
(g78
g59
NtRp1745
(dp1746
g62
(dp1747
g89
g90
ssg71
g1736
sg64
(lp1748
S':'
asbag57
(g78
g59
NtRp1749
(dp1750
g62
(dp1751
sg71
g1736
sg64
(lp1752
g57
(g58
g59
NtRp1753
(dp1754
g62
(dp1755
g70
I5
ssg71
g1749
sg64
(lp1756
S'html'
p1757
asbasbasbag57
(g73
g59
NtRp1758
(dp1759
g62
(dp1760
sg71
g67
sg64
(lp1761
g57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
g82
g83
ssg71
g1758
sg64
(lp1765
S'folder'
p1766
asbag57
(g78
g59
NtRp1767
(dp1768
g62
(dp1769
g89
g90
ssg71
g1758
sg64
(lp1770
S':'
asbag57
(g78
g59
NtRp1771
(dp1772
g62
(dp1773
sg71
g1758
sg64
(lp1774
g57
(g58
g59
NtRp1775
(dp1776
g62
(dp1777
g70
I5
ssg71
g1771
sg64
(lp1778
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1779
asbasbasbag57
(g73
g59
NtRp1780
(dp1781
g62
(dp1782
sg71
g67
sg64
(lp1783
g57
(g78
g59
NtRp1784
(dp1785
g62
(dp1786
g82
g83
ssg71
g1780
sg64
(lp1787
S'function'
p1788
asbag57
(g78
g59
NtRp1789
(dp1790
g62
(dp1791
g89
g90
ssg71
g1780
sg64
(lp1792
S':'
asbag57
(g78
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g1780
sg64
(lp1796
g57
(g58
g59
NtRp1797
(dp1798
g62
(dp1799
g70
I5
ssg71
g1793
sg64
(lp1800
S'list_all_dev_projects'
p1801
asbasbasbag57
(g73
g59
NtRp1802
(dp1803
g62
(dp1804
sg71
g67
sg64
(lp1805
g57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
g82
g83
ssg71
g1802
sg64
(lp1809
S'get_vars'
p1810
asbag57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
g89
g90
ssg71
g1802
sg64
(lp1814
S':'
asbag57
(g78
g59
NtRp1815
(dp1816
g62
(dp1817
sg71
g1802
sg64
(lp1818
g57
(g58
g59
NtRp1819
(dp1820
g62
(dp1821
g70
I5
ssg71
g1815
sg64
(lp1822
g57
(g66
g59
NtRp1823
(dp1824
g62
(dp1825
g70
I4
ssg71
Nsg64
(lp1826
sbasbasbasbag57
(g73
g59
NtRp1827
(dp1828
g62
(dp1829
sg71
g67
sg64
(lp1830
g57
(g78
g59
NtRp1831
(dp1832
g62
(dp1833
g82
g83
ssg71
g1827
sg64
(lp1834
S'global_settings'
p1835
asbag57
(g78
g59
NtRp1836
(dp1837
g62
(dp1838
g89
g90
ssg71
g1827
sg64
(lp1839
S':'
asbag57
(g78
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g1827
sg64
(lp1843
g57
(g58
g59
NtRp1844
(dp1845
g62
(dp1846
g70
I5
ssg71
g1840
sg64
(lp1847
g57
(g66
g59
NtRp1848
(dp1849
g62
(dp1850
g70
I4
ssg71
Nsg64
(lp1851
g57
(g73
g59
NtRp1852
(dp1853
g62
(dp1854
sg71
g1848
sg64
(lp1855
g57
(g78
g59
NtRp1856
(dp1857
g62
(dp1858
g82
g83
ssg71
g1852
sg64
(lp1859
g711
asbag57
(g78
g59
NtRp1860
(dp1861
g62
(dp1862
g89
g90
ssg71
g1852
sg64
(lp1863
S':'
asbag57
(g78
g59
NtRp1864
(dp1865
g62
(dp1866
sg71
g1852
sg64
(lp1867
g57
(g58
g59
NtRp1868
(dp1869
g62
(dp1870
g70
I4
ssg71
g1864
sg64
(lp1871
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1872
asbasbasbag57
(g73
g59
NtRp1873
(dp1874
g62
(dp1875
sg71
g1848
sg64
(lp1876
g57
(g78
g59
NtRp1877
(dp1878
g62
(dp1879
g82
g83
ssg71
g1873
sg64
(lp1880
g733
asbag57
(g78
g59
NtRp1881
(dp1882
g62
(dp1883
g89
g90
ssg71
g1873
sg64
(lp1884
S':'
asbag57
(g78
g59
NtRp1885
(dp1886
g62
(dp1887
sg71
g1873
sg64
(lp1888
g57
(g58
g59
NtRp1889
(dp1890
g62
(dp1891
g70
I4
ssg71
g1885
sg64
(lp1892
g746
asbasbasbag57
(g73
g59
NtRp1893
(dp1894
g62
(dp1895
sg71
g1848
sg64
(lp1896
g57
(g78
g59
NtRp1897
(dp1898
g62
(dp1899
g82
g83
ssg71
g1893
sg64
(lp1900
g755
asbag57
(g78
g59
NtRp1901
(dp1902
g62
(dp1903
g89
g90
ssg71
g1893
sg64
(lp1904
S':'
asbag57
(g78
g59
NtRp1905
(dp1906
g62
(dp1907
sg71
g1893
sg64
(lp1908
g57
(g58
g59
NtRp1909
(dp1910
g62
(dp1911
g70
I4
ssg71
g1905
sg64
(lp1912
g57
(g66
g59
NtRp1913
(dp1914
g62
(dp1915
g70
I3
ssg71
Nsg64
(lp1916
sbasbasbasbag57
(g73
g59
NtRp1917
(dp1918
g62
(dp1919
sg71
g1848
sg64
(lp1920
g57
(g78
g59
NtRp1921
(dp1922
g62
(dp1923
g82
g83
ssg71
g1917
sg64
(lp1924
g780
asbag57
(g78
g59
NtRp1925
(dp1926
g62
(dp1927
g89
g90
ssg71
g1917
sg64
(lp1928
S':'
asbag57
(g78
g59
NtRp1929
(dp1930
g62
(dp1931
sg71
g1917
sg64
(lp1932
g57
(g58
g59
NtRp1933
(dp1934
g62
(dp1935
g70
I4
ssg71
g1929
sg64
(lp1936
S"<Values at 0x9becf8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1937
asbasbasbag57
(g73
g59
NtRp1938
(dp1939
g62
(dp1940
sg71
g1848
sg64
(lp1941
g57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
g82
g83
ssg71
g1938
sg64
(lp1945
g802
asbag57
(g78
g59
NtRp1946
(dp1947
g62
(dp1948
g89
g90
ssg71
g1938
sg64
(lp1949
S':'
asbag57
(g78
g59
NtRp1950
(dp1951
g62
(dp1952
sg71
g1938
sg64
(lp1953
g57
(g58
g59
NtRp1954
(dp1955
g62
(dp1956
g70
I4
ssg71
g1950
sg64
(lp1957
S'set([])'
p1958
asbasbasbag57
(g73
g59
NtRp1959
(dp1960
g62
(dp1961
sg71
g1848
sg64
(lp1962
g57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
g82
g83
ssg71
g1959
sg64
(lp1966
g824
asbag57
(g78
g59
NtRp1967
(dp1968
g62
(dp1969
g89
g90
ssg71
g1959
sg64
(lp1970
S':'
asbag57
(g78
g59
NtRp1971
(dp1972
g62
(dp1973
sg71
g1959
sg64
(lp1974
g57
(g58
g59
NtRp1975
(dp1976
g62
(dp1977
g70
I4
ssg71
g1971
sg64
(lp1978
g100
asbasbasbag57
(g73
g59
NtRp1979
(dp1980
g62
(dp1981
sg71
g1848
sg64
(lp1982
g57
(g78
g59
NtRp1983
(dp1984
g62
(dp1985
g82
g83
ssg71
g1979
sg64
(lp1986
g845
asbag57
(g78
g59
NtRp1987
(dp1988
g62
(dp1989
g89
g90
ssg71
g1979
sg64
(lp1990
S':'
asbag57
(g78
g59
NtRp1991
(dp1992
g62
(dp1993
sg71
g1979
sg64
(lp1994
g57
(g58
g59
NtRp1995
(dp1996
g62
(dp1997
g70
I4
ssg71
g1991
sg64
(lp1998
g858
asbasbasbag57
(g73
g59
NtRp1999
(dp2000
g62
(dp2001
sg71
g1848
sg64
(lp2002
g57
(g78
g59
NtRp2003
(dp2004
g62
(dp2005
g82
g83
ssg71
g1999
sg64
(lp2006
g1065
asbag57
(g78
g59
NtRp2007
(dp2008
g62
(dp2009
g89
g90
ssg71
g1999
sg64
(lp2010
S':'
asbag57
(g78
g59
NtRp2011
(dp2012
g62
(dp2013
sg71
g1999
sg64
(lp2014
g57
(g58
g59
NtRp2015
(dp2016
g62
(dp2017
g70
I4
ssg71
g2011
sg64
(lp2018
g100
asbasbasbag57
(g73
g59
NtRp2019
(dp2020
g62
(dp2021
sg71
g1848
sg64
(lp2022
g57
(g78
g59
NtRp2023
(dp2024
g62
(dp2025
g82
g83
ssg71
g2019
sg64
(lp2026
g1086
asbag57
(g78
g59
NtRp2027
(dp2028
g62
(dp2029
g89
g90
ssg71
g2019
sg64
(lp2030
S':'
asbag57
(g78
g59
NtRp2031
(dp2032
g62
(dp2033
sg71
g2019
sg64
(lp2034
g57
(g58
g59
NtRp2035
(dp2036
g62
(dp2037
g70
I4
ssg71
g2031
sg64
(lp2038
g100
asbasbasbag57
(g73
g59
NtRp2039
(dp2040
g62
(dp2041
sg71
g1848
sg64
(lp2042
g57
(g78
g59
NtRp2043
(dp2044
g62
(dp2045
g82
g83
ssg71
g2039
sg64
(lp2046
g1107
asbag57
(g78
g59
NtRp2047
(dp2048
g62
(dp2049
g89
g90
ssg71
g2039
sg64
(lp2050
S':'
asbag57
(g78
g59
NtRp2051
(dp2052
g62
(dp2053
sg71
g2039
sg64
(lp2054
g57
(g58
g59
NtRp2055
(dp2056
g62
(dp2057
g70
I4
ssg71
g2051
sg64
(lp2058
g57
(g66
g59
NtRp2059
(dp2060
g62
(dp2061
g70
I3
ssg71
Nsg64
(lp2062
g57
(g73
g59
NtRp2063
(dp2064
g62
(dp2065
sg71
g2059
sg64
(lp2066
g57
(g78
g59
NtRp2067
(dp2068
g62
(dp2069
sg71
g2063
sg64
(lp2070
g57
(g58
g59
NtRp2071
(dp2072
g62
(dp2073
g70
I3
ssg71
g2067
sg64
(lp2074
g1136
asbasbasbag57
(g73
g59
NtRp2075
(dp2076
g62
(dp2077
sg71
g2059
sg64
(lp2078
g57
(g78
g59
NtRp2079
(dp2080
g62
(dp2081
sg71
g2075
sg64
(lp2082
g57
(g58
g59
NtRp2083
(dp2084
g62
(dp2085
g70
I3
ssg71
g2079
sg64
(lp2086
g1149
asbasbasbag57
(g73
g59
NtRp2087
(dp2088
g62
(dp2089
sg71
g2059
sg64
(lp2090
g57
(g78
g59
NtRp2091
(dp2092
g62
(dp2093
sg71
g2087
sg64
(lp2094
g57
(g58
g59
NtRp2095
(dp2096
g62
(dp2097
g70
I3
ssg71
g2091
sg64
(lp2098
g1162
asbasbasbag57
(g73
g59
NtRp2099
(dp2100
g62
(dp2101
sg71
g2059
sg64
(lp2102
g57
(g78
g59
NtRp2103
(dp2104
g62
(dp2105
sg71
g2099
sg64
(lp2106
g57
(g58
g59
NtRp2107
(dp2108
g62
(dp2109
g70
I3
ssg71
g2103
sg64
(lp2110
g1175
asbasbasbag57
(g73
g59
NtRp2111
(dp2112
g62
(dp2113
sg71
g2059
sg64
(lp2114
g57
(g78
g59
NtRp2115
(dp2116
g62
(dp2117
sg71
g2111
sg64
(lp2118
g57
(g58
g59
NtRp2119
(dp2120
g62
(dp2121
g70
I3
ssg71
g2115
sg64
(lp2122
g1188
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2123
(dp2124
g62
(dp2125
sg71
g1848
sg64
(lp2126
g57
(g78
g59
NtRp2127
(dp2128
g62
(dp2129
g82
g83
ssg71
g2123
sg64
(lp2130
g1456
asbag57
(g78
g59
NtRp2131
(dp2132
g62
(dp2133
g89
g90
ssg71
g2123
sg64
(lp2134
S':'
asbag57
(g78
g59
NtRp2135
(dp2136
g62
(dp2137
sg71
g2123
sg64
(lp2138
g57
(g58
g59
NtRp2139
(dp2140
g62
(dp2141
g70
I4
ssg71
g2135
sg64
(lp2142
g57
(g66
g59
NtRp2143
(dp2144
g62
(dp2145
g70
I3
ssg71
Nsg64
(lp2146
g57
(g73
g59
NtRp2147
(dp2148
g62
(dp2149
sg71
g2143
sg64
(lp2150
g57
(g78
g59
NtRp2151
(dp2152
g62
(dp2153
sg71
g2147
sg64
(lp2154
g57
(g58
g59
NtRp2155
(dp2156
g62
(dp2157
g70
I3
ssg71
g2151
sg64
(lp2158
S'2'
asbasbasbag57
(g73
g59
NtRp2159
(dp2160
g62
(dp2161
sg71
g2143
sg64
(lp2162
g57
(g78
g59
NtRp2163
(dp2164
g62
(dp2165
sg71
g2159
sg64
(lp2166
g57
(g58
g59
NtRp2167
(dp2168
g62
(dp2169
g70
I3
ssg71
g2163
sg64
(lp2170
S'3'
asbasbasbag57
(g73
g59
NtRp2171
(dp2172
g62
(dp2173
sg71
g2143
sg64
(lp2174
g57
(g78
g59
NtRp2175
(dp2176
g62
(dp2177
sg71
g2171
sg64
(lp2178
g57
(g58
g59
NtRp2179
(dp2180
g62
(dp2181
g70
I3
ssg71
g2175
sg64
(lp2182
S'2'
asbasbasbag57
(g73
g59
NtRp2183
(dp2184
g62
(dp2185
sg71
g2143
sg64
(lp2186
g57
(g78
g59
NtRp2187
(dp2188
g62
(dp2189
sg71
g2183
sg64
(lp2190
g57
(g58
g59
NtRp2191
(dp2192
g62
(dp2193
g70
I3
ssg71
g2187
sg64
(lp2194
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2195
asbasbasbag57
(g73
g59
NtRp2196
(dp2197
g62
(dp2198
sg71
g2143
sg64
(lp2199
g57
(g78
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g2196
sg64
(lp2203
g57
(g58
g59
NtRp2204
(dp2205
g62
(dp2206
g70
I3
ssg71
g2200
sg64
(lp2207
g1534
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2208
(dp2209
g62
(dp2210
sg71
g67
sg64
(lp2211
g57
(g78
g59
NtRp2212
(dp2213
g62
(dp2214
g82
g83
ssg71
g2208
sg64
(lp2215
S'is_https'
p2216
asbag57
(g78
g59
NtRp2217
(dp2218
g62
(dp2219
g89
g90
ssg71
g2208
sg64
(lp2220
S':'
asbag57
(g78
g59
NtRp2221
(dp2222
g62
(dp2223
sg71
g2208
sg64
(lp2224
g57
(g58
g59
NtRp2225
(dp2226
g62
(dp2227
g70
I5
ssg71
g2221
sg64
(lp2228
g100
asbasbasbag57
(g73
g59
NtRp2229
(dp2230
g62
(dp2231
sg71
g67
sg64
(lp2232
g57
(g78
g59
NtRp2233
(dp2234
g62
(dp2235
g82
g83
ssg71
g2229
sg64
(lp2236
S'is_local'
p2237
asbag57
(g78
g59
NtRp2238
(dp2239
g62
(dp2240
g89
g90
ssg71
g2229
sg64
(lp2241
S':'
asbag57
(g78
g59
NtRp2242
(dp2243
g62
(dp2244
sg71
g2229
sg64
(lp2245
g57
(g58
g59
NtRp2246
(dp2247
g62
(dp2248
g70
I5
ssg71
g2242
sg64
(lp2249
g1643
asbasbasbag57
(g73
g59
NtRp2250
(dp2251
g62
(dp2252
sg71
g67
sg64
(lp2253
g57
(g78
g59
NtRp2254
(dp2255
g62
(dp2256
g82
g83
ssg71
g2250
sg64
(lp2257
S'is_restful'
p2258
asbag57
(g78
g59
NtRp2259
(dp2260
g62
(dp2261
g89
g90
ssg71
g2250
sg64
(lp2262
S':'
asbag57
(g78
g59
NtRp2263
(dp2264
g62
(dp2265
sg71
g2250
sg64
(lp2266
g57
(g58
g59
NtRp2267
(dp2268
g62
(dp2269
g70
I5
ssg71
g2263
sg64
(lp2270
g100
asbasbasbag57
(g73
g59
NtRp2271
(dp2272
g62
(dp2273
sg71
g67
sg64
(lp2274
g57
(g78
g59
NtRp2275
(dp2276
g62
(dp2277
g82
g83
ssg71
g2271
sg64
(lp2278
S'now'
p2279
asbag57
(g78
g59
NtRp2280
(dp2281
g62
(dp2282
g89
g90
ssg71
g2271
sg64
(lp2283
S':'
asbag57
(g78
g59
NtRp2284
(dp2285
g62
(dp2286
sg71
g2271
sg64
(lp2287
g57
(g58
g59
NtRp2288
(dp2289
g62
(dp2290
g70
I5
ssg71
g2284
sg64
(lp2291
S'datetime.datetime(2013, 2, 26, 0, 22, 43, 823407)'
p2292
asbasbasbag57
(g73
g59
NtRp2293
(dp2294
g62
(dp2295
sg71
g67
sg64
(lp2296
g57
(g78
g59
NtRp2297
(dp2298
g62
(dp2299
g82
g83
ssg71
g2293
sg64
(lp2300
S'post_vars'
p2301
asbag57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
g89
g90
ssg71
g2293
sg64
(lp2305
S':'
asbag57
(g78
g59
NtRp2306
(dp2307
g62
(dp2308
sg71
g2293
sg64
(lp2309
g57
(g58
g59
NtRp2310
(dp2311
g62
(dp2312
g70
I5
ssg71
g2306
sg64
(lp2313
g57
(g66
g59
NtRp2314
(dp2315
g62
(dp2316
g70
I4
ssg71
Nsg64
(lp2317
sbasbasbasbag57
(g73
g59
NtRp2318
(dp2319
g62
(dp2320
sg71
g67
sg64
(lp2321
g57
(g78
g59
NtRp2322
(dp2323
g62
(dp2324
g82
g83
ssg71
g2318
sg64
(lp2325
S'raw_args'
p2326
asbag57
(g78
g59
NtRp2327
(dp2328
g62
(dp2329
g89
g90
ssg71
g2318
sg64
(lp2330
S':'
asbag57
(g78
g59
NtRp2331
(dp2332
g62
(dp2333
sg71
g2318
sg64
(lp2334
g57
(g58
g59
NtRp2335
(dp2336
g62
(dp2337
g70
I5
ssg71
g2331
sg64
(lp2338
S'project/experiment.project/3'
p2339
asbasbasbag57
(g73
g59
NtRp2340
(dp2341
g62
(dp2342
sg71
g67
sg64
(lp2343
g57
(g78
g59
NtRp2344
(dp2345
g62
(dp2346
g82
g83
ssg71
g2340
sg64
(lp2347
S'raw_extension'
p2348
asbag57
(g78
g59
NtRp2349
(dp2350
g62
(dp2351
g89
g90
ssg71
g2340
sg64
(lp2352
S':'
asbag57
(g78
g59
NtRp2353
(dp2354
g62
(dp2355
sg71
g2340
sg64
(lp2356
g57
(g58
g59
NtRp2357
(dp2358
g62
(dp2359
g70
I5
ssg71
g2353
sg64
(lp2360
S'None'
p2361
asbasbasbag57
(g73
g59
NtRp2362
(dp2363
g62
(dp2364
sg71
g67
sg64
(lp2365
g57
(g78
g59
NtRp2366
(dp2367
g62
(dp2368
g82
g83
ssg71
g2362
sg64
(lp2369
S'url'
p2370
asbag57
(g78
g59
NtRp2371
(dp2372
g62
(dp2373
g89
g90
ssg71
g2362
sg64
(lp2374
S':'
asbag57
(g78
g59
NtRp2375
(dp2376
g62
(dp2377
sg71
g2362
sg64
(lp2378
g57
(g58
g59
NtRp2379
(dp2380
g62
(dp2381
g70
I5
ssg71
g2375
sg64
(lp2382
g1210
asbasbasbag57
(g73
g59
NtRp2383
(dp2384
g62
(dp2385
sg71
g67
sg64
(lp2386
g57
(g78
g59
NtRp2387
(dp2388
g62
(dp2389
g82
g83
ssg71
g2383
sg64
(lp2390
S'utcnow'
p2391
asbag57
(g78
g59
NtRp2392
(dp2393
g62
(dp2394
g89
g90
ssg71
g2383
sg64
(lp2395
S':'
asbag57
(g78
g59
NtRp2396
(dp2397
g62
(dp2398
sg71
g2383
sg64
(lp2399
g57
(g58
g59
NtRp2400
(dp2401
g62
(dp2402
g70
I5
ssg71
g2396
sg64
(lp2403
S'datetime.datetime(2013, 2, 25, 18, 52, 43, 823465)'
p2404
asbasbasbag57
(g73
g59
NtRp2405
(dp2406
g62
(dp2407
sg71
g67
sg64
(lp2408
g57
(g78
g59
NtRp2409
(dp2410
g62
(dp2411
g82
g83
ssg71
g2405
sg64
(lp2412
S'uuid'
p2413
asbag57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g89
g90
ssg71
g2405
sg64
(lp2417
S':'
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
sg71
g2405
sg64
(lp2421
g57
(g58
g59
NtRp2422
(dp2423
g62
(dp2424
g70
I5
ssg71
g2418
sg64
(lp2425
S'DEV_bootstrap_ch/127.0.0.1.2013-02-26.00-22-43.93c87828-934b-4fd5-b572-158fb7928488'
p2426
asbasbasbag57
(g73
g59
NtRp2427
(dp2428
g62
(dp2429
sg71
g67
sg64
(lp2430
g57
(g78
g59
NtRp2431
(dp2432
g62
(dp2433
g82
g83
ssg71
g2427
sg64
(lp2434
S'vars'
p2435
asbag57
(g78
g59
NtRp2436
(dp2437
g62
(dp2438
g89
g90
ssg71
g2427
sg64
(lp2439
S':'
asbag57
(g78
g59
NtRp2440
(dp2441
g62
(dp2442
sg71
g2427
sg64
(lp2443
g57
(g58
g59
NtRp2444
(dp2445
g62
(dp2446
g70
I5
ssg71
g2440
sg64
(lp2447
g57
(g66
g59
NtRp2448
(dp2449
g62
(dp2450
g70
I4
ssg71
Nsg64
(lp2451
sbasbasbasbag57
(g73
g59
NtRp2452
(dp2453
g62
(dp2454
sg71
g67
sg64
(lp2455
g57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
g82
g83
ssg71
g2452
sg64
(lp2459
S'wsgi'
p2460
asbag57
(g78
g59
NtRp2461
(dp2462
g62
(dp2463
g89
g90
ssg71
g2452
sg64
(lp2464
S':'
asbag57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g2452
sg64
(lp2468
g57
(g58
g59
NtRp2469
(dp2470
g62
(dp2471
g70
I5
ssg71
g2465
sg64
(lp2472
g57
(g66
g59
NtRp2473
(dp2474
g62
(dp2475
g70
I4
ssg71
Nsg64
(lp2476
g57
(g73
g59
NtRp2477
(dp2478
g62
(dp2479
sg71
g2473
sg64
(lp2480
g57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
g82
g83
ssg71
g2477
sg64
(lp2484
S'environ'
p2485
asbag57
(g78
g59
NtRp2486
(dp2487
g62
(dp2488
g89
g90
ssg71
g2477
sg64
(lp2489
S':'
asbag57
(g78
g59
NtRp2490
(dp2491
g62
(dp2492
sg71
g2477
sg64
(lp2493
g57
(g58
g59
NtRp2494
(dp2495
g62
(dp2496
g70
I4
ssg71
g2490
sg64
(lp2497
g57
(g66
g59
NtRp2498
(dp2499
g62
(dp2500
g70
I3
ssg71
Nsg64
(lp2501
g57
(g73
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g2498
sg64
(lp2505
g57
(g78
g59
NtRp2506
(dp2507
g62
(dp2508
g82
g83
ssg71
g2502
sg64
(lp2509
S'HTTP_ACCEPT'
p2510
asbag57
(g78
g59
NtRp2511
(dp2512
g62
(dp2513
g89
g90
ssg71
g2502
sg64
(lp2514
S':'
asbag57
(g78
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2502
sg64
(lp2518
g57
(g58
g59
NtRp2519
(dp2520
g62
(dp2521
g70
I3
ssg71
g2515
sg64
(lp2522
g880
asbasbasbag57
(g73
g59
NtRp2523
(dp2524
g62
(dp2525
sg71
g2498
sg64
(lp2526
g57
(g78
g59
NtRp2527
(dp2528
g62
(dp2529
g82
g83
ssg71
g2523
sg64
(lp2530
S'HTTP_ACCEPT_CHARSET'
p2531
asbag57
(g78
g59
NtRp2532
(dp2533
g62
(dp2534
g89
g90
ssg71
g2523
sg64
(lp2535
S':'
asbag57
(g78
g59
NtRp2536
(dp2537
g62
(dp2538
sg71
g2523
sg64
(lp2539
g57
(g58
g59
NtRp2540
(dp2541
g62
(dp2542
g70
I3
ssg71
g2536
sg64
(lp2543
g902
asbasbasbag57
(g73
g59
NtRp2544
(dp2545
g62
(dp2546
sg71
g2498
sg64
(lp2547
g57
(g78
g59
NtRp2548
(dp2549
g62
(dp2550
g82
g83
ssg71
g2544
sg64
(lp2551
S'HTTP_ACCEPT_ENCODING'
p2552
asbag57
(g78
g59
NtRp2553
(dp2554
g62
(dp2555
g89
g90
ssg71
g2544
sg64
(lp2556
S':'
asbag57
(g78
g59
NtRp2557
(dp2558
g62
(dp2559
sg71
g2544
sg64
(lp2560
g57
(g58
g59
NtRp2561
(dp2562
g62
(dp2563
g70
I3
ssg71
g2557
sg64
(lp2564
g924
asbasbasbag57
(g73
g59
NtRp2565
(dp2566
g62
(dp2567
sg71
g2498
sg64
(lp2568
g57
(g78
g59
NtRp2569
(dp2570
g62
(dp2571
g82
g83
ssg71
g2565
sg64
(lp2572
S'HTTP_ACCEPT_LANGUAGE'
p2573
asbag57
(g78
g59
NtRp2574
(dp2575
g62
(dp2576
g89
g90
ssg71
g2565
sg64
(lp2577
S':'
asbag57
(g78
g59
NtRp2578
(dp2579
g62
(dp2580
sg71
g2565
sg64
(lp2581
g57
(g58
g59
NtRp2582
(dp2583
g62
(dp2584
g70
I3
ssg71
g2578
sg64
(lp2585
g946
asbasbasbag57
(g73
g59
NtRp2586
(dp2587
g62
(dp2588
sg71
g2498
sg64
(lp2589
g57
(g78
g59
NtRp2590
(dp2591
g62
(dp2592
g82
g83
ssg71
g2586
sg64
(lp2593
S'HTTP_CONNECTION'
p2594
asbag57
(g78
g59
NtRp2595
(dp2596
g62
(dp2597
g89
g90
ssg71
g2586
sg64
(lp2598
S':'
asbag57
(g78
g59
NtRp2599
(dp2600
g62
(dp2601
sg71
g2586
sg64
(lp2602
g57
(g58
g59
NtRp2603
(dp2604
g62
(dp2605
g70
I3
ssg71
g2599
sg64
(lp2606
g968
asbasbasbag57
(g73
g59
NtRp2607
(dp2608
g62
(dp2609
sg71
g2498
sg64
(lp2610
g57
(g78
g59
NtRp2611
(dp2612
g62
(dp2613
g82
g83
ssg71
g2607
sg64
(lp2614
S'HTTP_COOKIE'
p2615
asbag57
(g78
g59
NtRp2616
(dp2617
g62
(dp2618
g89
g90
ssg71
g2607
sg64
(lp2619
S':'
asbag57
(g78
g59
NtRp2620
(dp2621
g62
(dp2622
sg71
g2607
sg64
(lp2623
g57
(g58
g59
NtRp2624
(dp2625
g62
(dp2626
g70
I3
ssg71
g2620
sg64
(lp2627
g990
asbasbasbag57
(g73
g59
NtRp2628
(dp2629
g62
(dp2630
sg71
g2498
sg64
(lp2631
g57
(g78
g59
NtRp2632
(dp2633
g62
(dp2634
g82
g83
ssg71
g2628
sg64
(lp2635
S'HTTP_HOST'
p2636
asbag57
(g78
g59
NtRp2637
(dp2638
g62
(dp2639
g89
g90
ssg71
g2628
sg64
(lp2640
S':'
asbag57
(g78
g59
NtRp2641
(dp2642
g62
(dp2643
sg71
g2628
sg64
(lp2644
g57
(g58
g59
NtRp2645
(dp2646
g62
(dp2647
g70
I3
ssg71
g2641
sg64
(lp2648
g1012
asbasbasbag57
(g73
g59
NtRp2649
(dp2650
g62
(dp2651
sg71
g2498
sg64
(lp2652
g57
(g78
g59
NtRp2653
(dp2654
g62
(dp2655
g82
g83
ssg71
g2649
sg64
(lp2656
S'HTTP_REFERER'
p2657
asbag57
(g78
g59
NtRp2658
(dp2659
g62
(dp2660
g89
g90
ssg71
g2649
sg64
(lp2661
S':'
asbag57
(g78
g59
NtRp2662
(dp2663
g62
(dp2664
sg71
g2649
sg64
(lp2665
g57
(g58
g59
NtRp2666
(dp2667
g62
(dp2668
g70
I3
ssg71
g2662
sg64
(lp2669
g1034
asbasbasbag57
(g73
g59
NtRp2670
(dp2671
g62
(dp2672
sg71
g2498
sg64
(lp2673
g57
(g78
g59
NtRp2674
(dp2675
g62
(dp2676
g82
g83
ssg71
g2670
sg64
(lp2677
S'HTTP_USER_AGENT'
p2678
asbag57
(g78
g59
NtRp2679
(dp2680
g62
(dp2681
g89
g90
ssg71
g2670
sg64
(lp2682
S':'
asbag57
(g78
g59
NtRp2683
(dp2684
g62
(dp2685
sg71
g2670
sg64
(lp2686
g57
(g58
g59
NtRp2687
(dp2688
g62
(dp2689
g70
I3
ssg71
g2683
sg64
(lp2690
g1056
asbasbasbag57
(g73
g59
NtRp2691
(dp2692
g62
(dp2693
sg71
g2498
sg64
(lp2694
g57
(g78
g59
NtRp2695
(dp2696
g62
(dp2697
g82
g83
ssg71
g2691
sg64
(lp2698
S'PATH_INFO'
p2699
asbag57
(g78
g59
NtRp2700
(dp2701
g62
(dp2702
g89
g90
ssg71
g2691
sg64
(lp2703
S':'
asbag57
(g78
g59
NtRp2704
(dp2705
g62
(dp2706
sg71
g2691
sg64
(lp2707
g57
(g58
g59
NtRp2708
(dp2709
g62
(dp2710
g70
I3
ssg71
g2704
sg64
(lp2711
g1210
asbasbasbag57
(g73
g59
NtRp2712
(dp2713
g62
(dp2714
sg71
g2498
sg64
(lp2715
g57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
g82
g83
ssg71
g2712
sg64
(lp2719
S'QUERY_STRING'
p2720
asbag57
(g78
g59
NtRp2721
(dp2722
g62
(dp2723
g89
g90
ssg71
g2712
sg64
(lp2724
S':'
asbag57
(g78
g59
NtRp2725
(dp2726
g62
(dp2727
sg71
g2712
sg64
(lp2728
g57
(g58
g59
NtRp2729
(dp2730
g62
(dp2731
g70
I3
ssg71
g2725
sg64
(lp2732
S''
asbasbasbag57
(g73
g59
NtRp2733
(dp2734
g62
(dp2735
sg71
g2498
sg64
(lp2736
g57
(g78
g59
NtRp2737
(dp2738
g62
(dp2739
g82
g83
ssg71
g2733
sg64
(lp2740
S'REMOTE_ADDR'
p2741
asbag57
(g78
g59
NtRp2742
(dp2743
g62
(dp2744
g89
g90
ssg71
g2733
sg64
(lp2745
S':'
asbag57
(g78
g59
NtRp2746
(dp2747
g62
(dp2748
sg71
g2733
sg64
(lp2749
g57
(g58
g59
NtRp2750
(dp2751
g62
(dp2752
g70
I3
ssg71
g2746
sg64
(lp2753
g250
asbasbasbag57
(g73
g59
NtRp2754
(dp2755
g62
(dp2756
sg71
g2498
sg64
(lp2757
g57
(g78
g59
NtRp2758
(dp2759
g62
(dp2760
g82
g83
ssg71
g2754
sg64
(lp2761
S'REMOTE_PORT'
p2762
asbag57
(g78
g59
NtRp2763
(dp2764
g62
(dp2765
g89
g90
ssg71
g2754
sg64
(lp2766
S':'
asbag57
(g78
g59
NtRp2767
(dp2768
g62
(dp2769
sg71
g2754
sg64
(lp2770
g57
(g58
g59
NtRp2771
(dp2772
g62
(dp2773
g70
I3
ssg71
g2767
sg64
(lp2774
g1274
asbasbasbag57
(g73
g59
NtRp2775
(dp2776
g62
(dp2777
sg71
g2498
sg64
(lp2778
g57
(g78
g59
NtRp2779
(dp2780
g62
(dp2781
g82
g83
ssg71
g2775
sg64
(lp2782
S'REQUEST_METHOD'
p2783
asbag57
(g78
g59
NtRp2784
(dp2785
g62
(dp2786
g89
g90
ssg71
g2775
sg64
(lp2787
S':'
asbag57
(g78
g59
NtRp2788
(dp2789
g62
(dp2790
sg71
g2775
sg64
(lp2791
g57
(g58
g59
NtRp2792
(dp2793
g62
(dp2794
g70
I3
ssg71
g2788
sg64
(lp2795
g1296
asbasbasbag57
(g73
g59
NtRp2796
(dp2797
g62
(dp2798
sg71
g2498
sg64
(lp2799
g57
(g78
g59
NtRp2800
(dp2801
g62
(dp2802
g82
g83
ssg71
g2796
sg64
(lp2803
S'REQUEST_URI'
p2804
asbag57
(g78
g59
NtRp2805
(dp2806
g62
(dp2807
g89
g90
ssg71
g2796
sg64
(lp2808
S':'
asbag57
(g78
g59
NtRp2809
(dp2810
g62
(dp2811
sg71
g2796
sg64
(lp2812
g57
(g58
g59
NtRp2813
(dp2814
g62
(dp2815
g70
I3
ssg71
g2809
sg64
(lp2816
g1210
asbasbasbag57
(g73
g59
NtRp2817
(dp2818
g62
(dp2819
sg71
g2498
sg64
(lp2820
g57
(g78
g59
NtRp2821
(dp2822
g62
(dp2823
g82
g83
ssg71
g2817
sg64
(lp2824
S'SCRIPT_NAME'
p2825
asbag57
(g78
g59
NtRp2826
(dp2827
g62
(dp2828
g89
g90
ssg71
g2817
sg64
(lp2829
S':'
asbag57
(g78
g59
NtRp2830
(dp2831
g62
(dp2832
sg71
g2817
sg64
(lp2833
g57
(g58
g59
NtRp2834
(dp2835
g62
(dp2836
g70
I3
ssg71
g2830
sg64
(lp2837
S''
asbasbasbag57
(g73
g59
NtRp2838
(dp2839
g62
(dp2840
sg71
g2498
sg64
(lp2841
g57
(g78
g59
NtRp2842
(dp2843
g62
(dp2844
g82
g83
ssg71
g2838
sg64
(lp2845
S'SERVER_NAME'
p2846
asbag57
(g78
g59
NtRp2847
(dp2848
g62
(dp2849
g89
g90
ssg71
g2838
sg64
(lp2850
S':'
asbag57
(g78
g59
NtRp2851
(dp2852
g62
(dp2853
sg71
g2838
sg64
(lp2854
g57
(g58
g59
NtRp2855
(dp2856
g62
(dp2857
g70
I3
ssg71
g2851
sg64
(lp2858
g1360
asbasbasbag57
(g73
g59
NtRp2859
(dp2860
g62
(dp2861
sg71
g2498
sg64
(lp2862
g57
(g78
g59
NtRp2863
(dp2864
g62
(dp2865
g82
g83
ssg71
g2859
sg64
(lp2866
S'SERVER_PORT'
p2867
asbag57
(g78
g59
NtRp2868
(dp2869
g62
(dp2870
g89
g90
ssg71
g2859
sg64
(lp2871
S':'
asbag57
(g78
g59
NtRp2872
(dp2873
g62
(dp2874
sg71
g2859
sg64
(lp2875
g57
(g58
g59
NtRp2876
(dp2877
g62
(dp2878
g70
I3
ssg71
g2872
sg64
(lp2879
g1382
asbasbasbag57
(g73
g59
NtRp2880
(dp2881
g62
(dp2882
sg71
g2498
sg64
(lp2883
g57
(g78
g59
NtRp2884
(dp2885
g62
(dp2886
g82
g83
ssg71
g2880
sg64
(lp2887
S'SERVER_PROTOCOL'
p2888
asbag57
(g78
g59
NtRp2889
(dp2890
g62
(dp2891
g89
g90
ssg71
g2880
sg64
(lp2892
S':'
asbag57
(g78
g59
NtRp2893
(dp2894
g62
(dp2895
sg71
g2880
sg64
(lp2896
g57
(g58
g59
NtRp2897
(dp2898
g62
(dp2899
g70
I3
ssg71
g2893
sg64
(lp2900
g1404
asbasbasbag57
(g73
g59
NtRp2901
(dp2902
g62
(dp2903
sg71
g2498
sg64
(lp2904
g57
(g78
g59
NtRp2905
(dp2906
g62
(dp2907
g82
g83
ssg71
g2901
sg64
(lp2908
S'SERVER_SOFTWARE'
p2909
asbag57
(g78
g59
NtRp2910
(dp2911
g62
(dp2912
g89
g90
ssg71
g2901
sg64
(lp2913
S':'
asbag57
(g78
g59
NtRp2914
(dp2915
g62
(dp2916
sg71
g2901
sg64
(lp2917
g57
(g58
g59
NtRp2918
(dp2919
g62
(dp2920
g70
I3
ssg71
g2914
sg64
(lp2921
g1426
asbasbasbag57
(g73
g59
NtRp2922
(dp2923
g62
(dp2924
sg71
g2498
sg64
(lp2925
g57
(g78
g59
NtRp2926
(dp2927
g62
(dp2928
g82
g83
ssg71
g2922
sg64
(lp2929
S'wsgi.errors'
p2930
asbag57
(g78
g59
NtRp2931
(dp2932
g62
(dp2933
g89
g90
ssg71
g2922
sg64
(lp2934
S':'
asbag57
(g78
g59
NtRp2935
(dp2936
g62
(dp2937
sg71
g2922
sg64
(lp2938
g57
(g58
g59
NtRp2939
(dp2940
g62
(dp2941
g70
I3
ssg71
g2935
sg64
(lp2942
S"<open file '<stderr>', mode 'w' at 0xb73510d0>"
p2943
asbasbasbag57
(g73
g59
NtRp2944
(dp2945
g62
(dp2946
sg71
g2498
sg64
(lp2947
g57
(g78
g59
NtRp2948
(dp2949
g62
(dp2950
g82
g83
ssg71
g2944
sg64
(lp2951
S'wsgi.file_wrapper'
p2952
asbag57
(g78
g59
NtRp2953
(dp2954
g62
(dp2955
g89
g90
ssg71
g2944
sg64
(lp2956
S':'
asbag57
(g78
g59
NtRp2957
(dp2958
g62
(dp2959
sg71
g2944
sg64
(lp2960
g57
(g58
g59
NtRp2961
(dp2962
g62
(dp2963
g70
I3
ssg71
g2957
sg64
(lp2964
S'<class wsgiref.util.FileWrapper at 0x9b75bcc>'
p2965
asbasbasbag57
(g73
g59
NtRp2966
(dp2967
g62
(dp2968
sg71
g2498
sg64
(lp2969
g57
(g78
g59
NtRp2970
(dp2971
g62
(dp2972
g82
g83
ssg71
g2966
sg64
(lp2973
S'wsgi.input'
p2974
asbag57
(g78
g59
NtRp2975
(dp2976
g62
(dp2977
g89
g90
ssg71
g2966
sg64
(lp2978
S':'
asbag57
(g78
g59
NtRp2979
(dp2980
g62
(dp2981
sg71
g2966
sg64
(lp2982
g57
(g58
g59
NtRp2983
(dp2984
g62
(dp2985
g70
I3
ssg71
g2979
sg64
(lp2986
S'<cStringIO.StringO object at 0xade411a0>'
p2987
asbasbasbag57
(g73
g59
NtRp2988
(dp2989
g62
(dp2990
sg71
g2498
sg64
(lp2991
g57
(g78
g59
NtRp2992
(dp2993
g62
(dp2994
g82
g83
ssg71
g2988
sg64
(lp2995
S'wsgi.multiprocess'
p2996
asbag57
(g78
g59
NtRp2997
(dp2998
g62
(dp2999
g89
g90
ssg71
g2988
sg64
(lp3000
S':'
asbag57
(g78
g59
NtRp3001
(dp3002
g62
(dp3003
sg71
g2988
sg64
(lp3004
g57
(g58
g59
NtRp3005
(dp3006
g62
(dp3007
g70
I3
ssg71
g3001
sg64
(lp3008
g100
asbasbasbag57
(g73
g59
NtRp3009
(dp3010
g62
(dp3011
sg71
g2498
sg64
(lp3012
g57
(g78
g59
NtRp3013
(dp3014
g62
(dp3015
g82
g83
ssg71
g3009
sg64
(lp3016
S'wsgi.multithread'
p3017
asbag57
(g78
g59
NtRp3018
(dp3019
g62
(dp3020
g89
g90
ssg71
g3009
sg64
(lp3021
S':'
asbag57
(g78
g59
NtRp3022
(dp3023
g62
(dp3024
sg71
g3009
sg64
(lp3025
g57
(g58
g59
NtRp3026
(dp3027
g62
(dp3028
g70
I3
ssg71
g3022
sg64
(lp3029
g1643
asbasbasbag57
(g73
g59
NtRp3030
(dp3031
g62
(dp3032
sg71
g2498
sg64
(lp3033
g57
(g78
g59
NtRp3034
(dp3035
g62
(dp3036
g82
g83
ssg71
g3030
sg64
(lp3037
S'wsgi.run_once'
p3038
asbag57
(g78
g59
NtRp3039
(dp3040
g62
(dp3041
g89
g90
ssg71
g3030
sg64
(lp3042
S':'
asbag57
(g78
g59
NtRp3043
(dp3044
g62
(dp3045
sg71
g3030
sg64
(lp3046
g57
(g58
g59
NtRp3047
(dp3048
g62
(dp3049
g70
I3
ssg71
g3043
sg64
(lp3050
g100
asbasbasbag57
(g73
g59
NtRp3051
(dp3052
g62
(dp3053
sg71
g2498
sg64
(lp3054
g57
(g78
g59
NtRp3055
(dp3056
g62
(dp3057
g82
g83
ssg71
g3051
sg64
(lp3058
S'wsgi.url_scheme'
p3059
asbag57
(g78
g59
NtRp3060
(dp3061
g62
(dp3062
g89
g90
ssg71
g3051
sg64
(lp3063
S':'
asbag57
(g78
g59
NtRp3064
(dp3065
g62
(dp3066
sg71
g3051
sg64
(lp3067
g57
(g58
g59
NtRp3068
(dp3069
g62
(dp3070
g70
I3
ssg71
g3064
sg64
(lp3071
g1686
asbasbasbag57
(g73
g59
NtRp3072
(dp3073
g62
(dp3074
sg71
g2498
sg64
(lp3075
g57
(g78
g59
NtRp3076
(dp3077
g62
(dp3078
g82
g83
ssg71
g3072
sg64
(lp3079
S'wsgi.version'
p3080
asbag57
(g78
g59
NtRp3081
(dp3082
g62
(dp3083
g89
g90
ssg71
g3072
sg64
(lp3084
S':'
asbag57
(g78
g59
NtRp3085
(dp3086
g62
(dp3087
sg71
g3072
sg64
(lp3088
g57
(g58
g59
NtRp3089
(dp3090
g62
(dp3091
g70
I3
ssg71
g3085
sg64
(lp3092
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3093
(lp3094
(dp3095
S'file'
p3096
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3097
sS'dump'
p3098
(dp3099
S'environment'
p3100
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3101
sS'ccode'
p3102
S'<code object <module> at 0xadb31ad0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3103
ssS'lnum'
p3104
I212
sS'lines'
p3105
(dp3106
I207
S'    try:'
p3107
sI208
S'        if isinstance(code, types.CodeType):'
p3108
sI209
S'            ccode = code'
p3109
sI210
S'        else:'
p3110
sI211
S'            ccode = compile2(code, layer)'
p3111
sI212
S'        exec ccode in environment'
p3112
sI213
S'    except HTTP:'
p3113
sI214
S'        raise'
p3114
sI215
S'    except RestrictedError:'
p3115
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3116
ssS'call'
p3117
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3118
sS'func'
p3119
S'restricted'
p3120
sa(dp3121
g3096
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3122
sg3098
(dp3123
sg3104
I1141
sg3105
(dp3124
I1130
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3125
sI1131
S'   """ per sample . takes id of the sample as the input """'
p3126
sI1132
S'   sid = request.args(0)'
p3127
sI1133
S'   sample = db(db.sample.id == sid).select().first()'
p3128
sI1134
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3129
sI1135
S'   form = SQLFORM(db.sample_files)'
p3130
sI1136
S'   form.vars.sample = sid'
p3131
sI1137
S'   return locals()'
p3132
sI1138
S''
sI1139
S''
ssg3117
S'()'
p3133
sg3119
S'<module>'
p3134
sa(dp3135
g3096
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3136
sg3098
(dp3137
S'self'
p3138
S'undefined'
p3139
sS'f'
S'<function list_all_dev_projects>'
p3140
ssg3104
I193
sg3105
(dp3141
I192
S'        self._vars = None'
p3142
sI193
S'        self._caller = lambda f: f()'
p3143
sI194
S'        self._view_environment = None'
p3144
sI195
S'        self._custom_commit = None'
p3145
sI196
S'        self._custom_rollback = None'
p3146
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3147
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3148
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3149
sI191
S"        self.delimiters = ('{{', '}}')"
p3150
ssg3117
S'(f=<function list_all_dev_projects>)'
p3151
sg3119
S'<lambda>'
p3152
sa(dp3153
g3096
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3154
sg3098
(dp3155
S'auth.user.id'
p3156
g3139
sS'auth.user'
p3157
S'None'
p3158
sS'global auth'
p3159
S'<gluon.tools.Auth object>'
p3160
sS'db.sample.experimentalist.default'
p3161
S'None'
p3162
sS'global db'
p3163
S'<DAL uri="sqlite://storage.sqlite">'
p3164
sS'db.sample'
p3165
S'<Table sample (id,parent,experimentalist,name,co...iment,working_status,replica,publication_status)>'
p3166
sS'db.sample.experimentalist'
p3167
S'<gluon.dal.Field object>'
p3168
ssg3104
I294
sg3105
(dp3169
I289
S''
sI290
S'def list_all_dev_projects():'
p3170
sI291
S'    response.menu = ['
p3171
sI292
S"    (T('Home'), False, URL('default','list_all_projects'), [])"
p3172
sI293
S'    ]'
p3173
sI294
S'    db.sample.experimentalist.default=auth.user.id'
p3174
sI295
S'    db.sample.experiment.writable = False'
p3175
sI296
S'    q1 = (db.project.project_status ==  0)'
p3176
sI297
S'    q2 = (db.sample.experimentalist == auth.user.id)'
p3177
sI298
S"    ck = {'project':q1,'sample':q2}"
p3178
ssg3117
S'()'
p3179
sg3119
S'list_all_dev_projects'
p3180
sasS'pyver'
p3181
S'Python 2.7.3: /usr/bin/python'
p3182
sS'session'
p3183
g57
(g58
g59
NtRp3184
(dp3185
g62
(dp3186
sg64
(lp3187
g57
(g66
g59
NtRp3188
(dp3189
g62
(dp3190
g70
I5
ssg71
Nsg64
(lp3191
g57
(g73
g59
NtRp3192
(dp3193
g62
(dp3194
sg71
g3188
sg64
(lp3195
g57
(g78
g59
NtRp3196
(dp3197
g62
(dp3198
g82
g83
ssg71
g3192
sg64
(lp3199
S'flash'
p3200
asbag57
(g78
g59
NtRp3201
(dp3202
g62
(dp3203
g89
g90
ssg71
g3192
sg64
(lp3204
S':'
asbag57
(g78
g59
NtRp3205
(dp3206
g62
(dp3207
sg71
g3192
sg64
(lp3208
g57
(g58
g59
NtRp3209
(dp3210
g62
(dp3211
g70
I5
ssg71
g3205
sg64
(lp3212
S'None'
p3213
asbasbasbasbasbsS'etype'
p3214
S"<type 'exceptions.AttributeError'>"
p3215
sS'date'
p3216
S'Tue Feb 26 00:22:44 2013'
p3217
sS'response'
p3218
g57
(g58
g59
NtRp3219
(dp3220
g62
(dp3221
sg64
(lp3222
g57
(g66
g59
NtRp3223
(dp3224
g62
(dp3225
g70
I5
ssg71
Nsg64
(lp3226
g57
(g73
g59
NtRp3227
(dp3228
g62
(dp3229
sg71
g3223
sg64
(lp3230
g57
(g78
g59
NtRp3231
(dp3232
g62
(dp3233
g82
g83
ssg71
g3227
sg64
(lp3234
g193
asbag57
(g78
g59
NtRp3235
(dp3236
g62
(dp3237
g89
g90
ssg71
g3227
sg64
(lp3238
S':'
asbag57
(g78
g59
NtRp3239
(dp3240
g62
(dp3241
sg71
g3227
sg64
(lp3242
g57
(g58
g59
NtRp3243
(dp3244
g62
(dp3245
g70
I5
ssg71
g3239
sg64
(lp3246
S'<cStringIO.StringO object at 0x9ec96e0>'
p3247
asbasbasbag57
(g73
g59
NtRp3248
(dp3249
g62
(dp3250
sg71
g3223
sg64
(lp3251
g57
(g78
g59
NtRp3252
(dp3253
g62
(dp3254
g82
g83
ssg71
g3248
sg64
(lp3255
g281
asbag57
(g78
g59
NtRp3256
(dp3257
g62
(dp3258
g89
g90
ssg71
g3248
sg64
(lp3259
S':'
asbag57
(g78
g59
NtRp3260
(dp3261
g62
(dp3262
sg71
g3248
sg64
(lp3263
g57
(g58
g59
NtRp3264
(dp3265
g62
(dp3266
g70
I5
ssg71
g3260
sg64
(lp3267
g57
(g66
g59
NtRp3268
(dp3269
g62
(dp3270
g70
I4
ssg71
Nsg64
(lp3271
g57
(g73
g59
NtRp3272
(dp3273
g62
(dp3274
sg71
g3268
sg64
(lp3275
g57
(g78
g59
NtRp3276
(dp3277
g62
(dp3278
g82
g83
ssg71
g3272
sg64
(lp3279
S'session_id_dev_bootstrap_ch'
p3280
asbag57
(g78
g59
NtRp3281
(dp3282
g62
(dp3283
g89
g90
ssg71
g3272
sg64
(lp3284
S':'
asbag57
(g78
g59
NtRp3285
(dp3286
g62
(dp3287
sg71
g3272
sg64
(lp3288
g57
(g58
g59
NtRp3289
(dp3290
g62
(dp3291
g70
I4
ssg71
g3285
sg64
(lp3292
g513
ag57
(g66
g59
NtRp3293
(dp3294
g62
(dp3295
g70
I3
ssg71
Nsg64
(lp3296
g57
(g73
g59
NtRp3297
(dp3298
g62
(dp3299
sg71
g3293
sg64
(lp3300
g57
(g78
g59
NtRp3301
(dp3302
g62
(dp3303
g82
g83
ssg71
g3297
sg64
(lp3304
g332
asbag57
(g78
g59
NtRp3305
(dp3306
g62
(dp3307
g89
g90
ssg71
g3297
sg64
(lp3308
S':'
asbag57
(g78
g59
NtRp3309
(dp3310
g62
(dp3311
sg71
g3297
sg64
(lp3312
g57
(g58
g59
NtRp3313
(dp3314
g62
(dp3315
g70
I3
ssg71
g3309
sg64
(lp3316
S''
asbasbasbag57
(g73
g59
NtRp3317
(dp3318
g62
(dp3319
sg71
g3293
sg64
(lp3320
g57
(g78
g59
NtRp3321
(dp3322
g62
(dp3323
g82
g83
ssg71
g3317
sg64
(lp3324
g353
asbag57
(g78
g59
NtRp3325
(dp3326
g62
(dp3327
g89
g90
ssg71
g3317
sg64
(lp3328
S':'
asbag57
(g78
g59
NtRp3329
(dp3330
g62
(dp3331
sg71
g3317
sg64
(lp3332
g57
(g58
g59
NtRp3333
(dp3334
g62
(dp3335
g70
I3
ssg71
g3329
sg64
(lp3336
S''
asbasbasbag57
(g73
g59
NtRp3337
(dp3338
g62
(dp3339
sg71
g3293
sg64
(lp3340
g57
(g78
g59
NtRp3341
(dp3342
g62
(dp3343
g82
g83
ssg71
g3337
sg64
(lp3344
g374
asbag57
(g78
g59
NtRp3345
(dp3346
g62
(dp3347
g89
g90
ssg71
g3337
sg64
(lp3348
S':'
asbag57
(g78
g59
NtRp3349
(dp3350
g62
(dp3351
sg71
g3337
sg64
(lp3352
g57
(g58
g59
NtRp3353
(dp3354
g62
(dp3355
g70
I3
ssg71
g3349
sg64
(lp3356
S''
asbasbasbag57
(g73
g59
NtRp3357
(dp3358
g62
(dp3359
sg71
g3293
sg64
(lp3360
g57
(g78
g59
NtRp3361
(dp3362
g62
(dp3363
g82
g83
ssg71
g3357
sg64
(lp3364
g395
asbag57
(g78
g59
NtRp3365
(dp3366
g62
(dp3367
g89
g90
ssg71
g3357
sg64
(lp3368
S':'
asbag57
(g78
g59
NtRp3369
(dp3370
g62
(dp3371
sg71
g3357
sg64
(lp3372
g57
(g58
g59
NtRp3373
(dp3374
g62
(dp3375
g70
I3
ssg71
g3369
sg64
(lp3376
S''
asbasbasbag57
(g73
g59
NtRp3377
(dp3378
g62
(dp3379
sg71
g3293
sg64
(lp3380
g57
(g78
g59
NtRp3381
(dp3382
g62
(dp3383
g82
g83
ssg71
g3377
sg64
(lp3384
g416
asbag57
(g78
g59
NtRp3385
(dp3386
g62
(dp3387
g89
g90
ssg71
g3377
sg64
(lp3388
S':'
asbag57
(g78
g59
NtRp3389
(dp3390
g62
(dp3391
sg71
g3377
sg64
(lp3392
g57
(g58
g59
NtRp3393
(dp3394
g62
(dp3395
g70
I3
ssg71
g3389
sg64
(lp3396
S''
asbasbasbag57
(g73
g59
NtRp3397
(dp3398
g62
(dp3399
sg71
g3293
sg64
(lp3400
g57
(g78
g59
NtRp3401
(dp3402
g62
(dp3403
g82
g83
ssg71
g3397
sg64
(lp3404
g437
asbag57
(g78
g59
NtRp3405
(dp3406
g62
(dp3407
g89
g90
ssg71
g3397
sg64
(lp3408
S':'
asbag57
(g78
g59
NtRp3409
(dp3410
g62
(dp3411
sg71
g3397
sg64
(lp3412
g57
(g58
g59
NtRp3413
(dp3414
g62
(dp3415
g70
I3
ssg71
g3409
sg64
(lp3416
S'/'
asbasbasbag57
(g73
g59
NtRp3417
(dp3418
g62
(dp3419
sg71
g3293
sg64
(lp3420
g57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
g82
g83
ssg71
g3417
sg64
(lp3424
g458
asbag57
(g78
g59
NtRp3425
(dp3426
g62
(dp3427
g89
g90
ssg71
g3417
sg64
(lp3428
S':'
asbag57
(g78
g59
NtRp3429
(dp3430
g62
(dp3431
sg71
g3417
sg64
(lp3432
g57
(g58
g59
NtRp3433
(dp3434
g62
(dp3435
g70
I3
ssg71
g3429
sg64
(lp3436
S''
asbasbasbag57
(g73
g59
NtRp3437
(dp3438
g62
(dp3439
sg71
g3293
sg64
(lp3440
g57
(g78
g59
NtRp3441
(dp3442
g62
(dp3443
g82
g83
ssg71
g3437
sg64
(lp3444
g479
asbag57
(g78
g59
NtRp3445
(dp3446
g62
(dp3447
g89
g90
ssg71
g3437
sg64
(lp3448
S':'
asbag57
(g78
g59
NtRp3449
(dp3450
g62
(dp3451
sg71
g3437
sg64
(lp3452
g57
(g58
g59
NtRp3453
(dp3454
g62
(dp3455
g70
I3
ssg71
g3449
sg64
(lp3456
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3457
(dp3458
g62
(dp3459
sg71
g3223
sg64
(lp3460
g57
(g78
g59
NtRp3461
(dp3462
g62
(dp3463
g82
g83
ssg71
g3457
sg64
(lp3464
S'delimiters'
p3465
asbag57
(g78
g59
NtRp3466
(dp3467
g62
(dp3468
g89
g90
ssg71
g3457
sg64
(lp3469
S':'
asbag57
(g78
g59
NtRp3470
(dp3471
g62
(dp3472
sg71
g3457
sg64
(lp3473
g57
(g58
g59
NtRp3474
(dp3475
g62
(dp3476
g70
I5
ssg71
g3470
sg64
(lp3477
g57
(g66
g59
NtRp3478
(dp3479
g62
(dp3480
g70
I4
ssg71
Nsg64
(lp3481
g57
(g73
g59
NtRp3482
(dp3483
g62
(dp3484
sg71
g3478
sg64
(lp3485
g57
(g78
g59
NtRp3486
(dp3487
g62
(dp3488
sg71
g3482
sg64
(lp3489
g57
(g58
g59
NtRp3490
(dp3491
g62
(dp3492
g70
I4
ssg71
g3486
sg64
(lp3493
S'{{'
p3494
asbasbasbag57
(g73
g59
NtRp3495
(dp3496
g62
(dp3497
sg71
g3478
sg64
(lp3498
g57
(g78
g59
NtRp3499
(dp3500
g62
(dp3501
sg71
g3495
sg64
(lp3502
g57
(g58
g59
NtRp3503
(dp3504
g62
(dp3505
g70
I4
ssg71
g3499
sg64
(lp3506
S'}}'
p3507
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3508
(dp3509
g62
(dp3510
sg71
g3223
sg64
(lp3511
g57
(g78
g59
NtRp3512
(dp3513
g62
(dp3514
g82
g83
ssg71
g3508
sg64
(lp3515
S'files'
p3516
asbag57
(g78
g59
NtRp3517
(dp3518
g62
(dp3519
g89
g90
ssg71
g3508
sg64
(lp3520
S':'
asbag57
(g78
g59
NtRp3521
(dp3522
g62
(dp3523
sg71
g3508
sg64
(lp3524
g57
(g58
g59
NtRp3525
(dp3526
g62
(dp3527
g70
I5
ssg71
g3521
sg64
(lp3528
g57
(g66
g59
NtRp3529
(dp3530
g62
(dp3531
g70
I4
ssg71
Nsg64
(lp3532
g57
(g73
g59
NtRp3533
(dp3534
g62
(dp3535
sg71
g3529
sg64
(lp3536
g57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
sg71
g3533
sg64
(lp3540
g57
(g58
g59
NtRp3541
(dp3542
g62
(dp3543
g70
I4
ssg71
g3537
sg64
(lp3544
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3545
asbasbasbag57
(g73
g59
NtRp3546
(dp3547
g62
(dp3548
sg71
g3529
sg64
(lp3549
g57
(g78
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3546
sg64
(lp3553
g57
(g58
g59
NtRp3554
(dp3555
g62
(dp3556
g70
I4
ssg71
g3550
sg64
(lp3557
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3558
asbasbasbag57
(g73
g59
NtRp3559
(dp3560
g62
(dp3561
sg71
g3529
sg64
(lp3562
g57
(g78
g59
NtRp3563
(dp3564
g62
(dp3565
sg71
g3559
sg64
(lp3566
g57
(g58
g59
NtRp3567
(dp3568
g62
(dp3569
g70
I4
ssg71
g3563
sg64
(lp3570
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3571
asbasbasbag57
(g73
g59
NtRp3572
(dp3573
g62
(dp3574
sg71
g3529
sg64
(lp3575
g57
(g78
g59
NtRp3576
(dp3577
g62
(dp3578
sg71
g3572
sg64
(lp3579
g57
(g58
g59
NtRp3580
(dp3581
g62
(dp3582
g70
I4
ssg71
g3576
sg64
(lp3583
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3584
asbasbasbag57
(g73
g59
NtRp3585
(dp3586
g62
(dp3587
sg71
g3529
sg64
(lp3588
g57
(g78
g59
NtRp3589
(dp3590
g62
(dp3591
sg71
g3585
sg64
(lp3592
g57
(g58
g59
NtRp3593
(dp3594
g62
(dp3595
g70
I4
ssg71
g3589
sg64
(lp3596
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3597
asbasbasbag57
(g73
g59
NtRp3598
(dp3599
g62
(dp3600
sg71
g3529
sg64
(lp3601
g57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3598
sg64
(lp3605
g57
(g58
g59
NtRp3606
(dp3607
g62
(dp3608
g70
I4
ssg71
g3602
sg64
(lp3609
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3610
asbasbasbag57
(g73
g59
NtRp3611
(dp3612
g62
(dp3613
sg71
g3529
sg64
(lp3614
g57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3611
sg64
(lp3618
g57
(g58
g59
NtRp3619
(dp3620
g62
(dp3621
g70
I4
ssg71
g3615
sg64
(lp3622
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3623
asbasbasbag57
(g73
g59
NtRp3624
(dp3625
g62
(dp3626
sg71
g3529
sg64
(lp3627
g57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
sg71
g3624
sg64
(lp3631
g57
(g58
g59
NtRp3632
(dp3633
g62
(dp3634
g70
I4
ssg71
g3628
sg64
(lp3635
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3636
asbasbasbag57
(g73
g59
NtRp3637
(dp3638
g62
(dp3639
sg71
g3529
sg64
(lp3640
g57
(g78
g59
NtRp3641
(dp3642
g62
(dp3643
sg71
g3637
sg64
(lp3644
g57
(g58
g59
NtRp3645
(dp3646
g62
(dp3647
g70
I4
ssg71
g3641
sg64
(lp3648
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3649
asbasbasbag57
(g73
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3529
sg64
(lp3653
g57
(g78
g59
NtRp3654
(dp3655
g62
(dp3656
sg71
g3650
sg64
(lp3657
g57
(g58
g59
NtRp3658
(dp3659
g62
(dp3660
g70
I4
ssg71
g3654
sg64
(lp3661
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3662
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3663
(dp3664
g62
(dp3665
sg71
g3223
sg64
(lp3666
g57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g82
g83
ssg71
g3663
sg64
(lp3670
S'flash'
p3671
asbag57
(g78
g59
NtRp3672
(dp3673
g62
(dp3674
g89
g90
ssg71
g3663
sg64
(lp3675
S':'
asbag57
(g78
g59
NtRp3676
(dp3677
g62
(dp3678
sg71
g3663
sg64
(lp3679
g57
(g58
g59
NtRp3680
(dp3681
g62
(dp3682
g70
I5
ssg71
g3676
sg64
(lp3683
S''
asbasbasbag57
(g73
g59
NtRp3684
(dp3685
g62
(dp3686
sg71
g3223
sg64
(lp3687
g57
(g78
g59
NtRp3688
(dp3689
g62
(dp3690
g82
g83
ssg71
g3684
sg64
(lp3691
S'generic_patterns'
p3692
asbag57
(g78
g59
NtRp3693
(dp3694
g62
(dp3695
g89
g90
ssg71
g3684
sg64
(lp3696
S':'
asbag57
(g78
g59
NtRp3697
(dp3698
g62
(dp3699
sg71
g3684
sg64
(lp3700
g57
(g58
g59
NtRp3701
(dp3702
g62
(dp3703
g70
I5
ssg71
g3697
sg64
(lp3704
g57
(g66
g59
NtRp3705
(dp3706
g62
(dp3707
g70
I4
ssg71
Nsg64
(lp3708
g57
(g73
g59
NtRp3709
(dp3710
g62
(dp3711
sg71
g3705
sg64
(lp3712
g57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
sg71
g3709
sg64
(lp3716
g57
(g58
g59
NtRp3717
(dp3718
g62
(dp3719
g70
I4
ssg71
g3713
sg64
(lp3720
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3223
sg64
(lp3724
g57
(g78
g59
NtRp3725
(dp3726
g62
(dp3727
g82
g83
ssg71
g3721
sg64
(lp3728
S'google_analytics_id'
p3729
asbag57
(g78
g59
NtRp3730
(dp3731
g62
(dp3732
g89
g90
ssg71
g3721
sg64
(lp3733
S':'
asbag57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3721
sg64
(lp3737
g57
(g58
g59
NtRp3738
(dp3739
g62
(dp3740
g70
I5
ssg71
g3734
sg64
(lp3741
S'None'
p3742
asbasbasbag57
(g73
g59
NtRp3743
(dp3744
g62
(dp3745
sg71
g3223
sg64
(lp3746
g57
(g78
g59
NtRp3747
(dp3748
g62
(dp3749
g82
g83
ssg71
g3743
sg64
(lp3750
S'headers'
p3751
asbag57
(g78
g59
NtRp3752
(dp3753
g62
(dp3754
g89
g90
ssg71
g3743
sg64
(lp3755
S':'
asbag57
(g78
g59
NtRp3756
(dp3757
g62
(dp3758
sg71
g3743
sg64
(lp3759
g57
(g58
g59
NtRp3760
(dp3761
g62
(dp3762
g70
I5
ssg71
g3756
sg64
(lp3763
g57
(g66
g59
NtRp3764
(dp3765
g62
(dp3766
g70
I4
ssg71
Nsg64
(lp3767
g57
(g73
g59
NtRp3768
(dp3769
g62
(dp3770
sg71
g3764
sg64
(lp3771
g57
(g78
g59
NtRp3772
(dp3773
g62
(dp3774
g82
g83
ssg71
g3768
sg64
(lp3775
S'X-Powered-By'
p3776
asbag57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
g89
g90
ssg71
g3768
sg64
(lp3780
S':'
asbag57
(g78
g59
NtRp3781
(dp3782
g62
(dp3783
sg71
g3768
sg64
(lp3784
g57
(g58
g59
NtRp3785
(dp3786
g62
(dp3787
g70
I4
ssg71
g3781
sg64
(lp3788
S'web2py'
p3789
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3790
(dp3791
g62
(dp3792
sg71
g3223
sg64
(lp3793
g57
(g78
g59
NtRp3794
(dp3795
g62
(dp3796
g82
g83
ssg71
g3790
sg64
(lp3797
S'menu'
p3798
asbag57
(g78
g59
NtRp3799
(dp3800
g62
(dp3801
g89
g90
ssg71
g3790
sg64
(lp3802
S':'
asbag57
(g78
g59
NtRp3803
(dp3804
g62
(dp3805
sg71
g3790
sg64
(lp3806
g57
(g58
g59
NtRp3807
(dp3808
g62
(dp3809
g70
I5
ssg71
g3803
sg64
(lp3810
g57
(g66
g59
NtRp3811
(dp3812
g62
(dp3813
g70
I4
ssg71
Nsg64
(lp3814
g57
(g73
g59
NtRp3815
(dp3816
g62
(dp3817
sg71
g3811
sg64
(lp3818
g57
(g78
g59
NtRp3819
(dp3820
g62
(dp3821
sg71
g3815
sg64
(lp3822
g57
(g58
g59
NtRp3823
(dp3824
g62
(dp3825
g70
I4
ssg71
g3819
sg64
(lp3826
g57
(g66
g59
NtRp3827
(dp3828
g62
(dp3829
g70
I3
ssg71
Nsg64
(lp3830
g57
(g73
g59
NtRp3831
(dp3832
g62
(dp3833
sg71
g3827
sg64
(lp3834
g57
(g78
g59
NtRp3835
(dp3836
g62
(dp3837
sg71
g3831
sg64
(lp3838
g57
(g58
g59
NtRp3839
(dp3840
g62
(dp3841
g70
I3
ssg71
g3835
sg64
(lp3842
cgluon.languages
lazyT_unpickle
p3843
(S't\x04\x00\x00\x00Home'
tRp3844
asbasbasbag57
(g73
g59
NtRp3845
(dp3846
g62
(dp3847
sg71
g3827
sg64
(lp3848
g57
(g78
g59
NtRp3849
(dp3850
g62
(dp3851
sg71
g3845
sg64
(lp3852
g57
(g58
g59
NtRp3853
(dp3854
g62
(dp3855
g70
I3
ssg71
g3849
sg64
(lp3856
g100
asbasbasbag57
(g73
g59
NtRp3857
(dp3858
g62
(dp3859
sg71
g3827
sg64
(lp3860
g57
(g78
g59
NtRp3861
(dp3862
g62
(dp3863
sg71
g3857
sg64
(lp3864
g57
(g58
g59
NtRp3865
(dp3866
g62
(dp3867
g70
I3
ssg71
g3861
sg64
(lp3868
S'/DEV_bootstrap_ch/default/list_all_projects'
p3869
asbasbasbag57
(g73
g59
NtRp3870
(dp3871
g62
(dp3872
sg71
g3827
sg64
(lp3873
g57
(g78
g59
NtRp3874
(dp3875
g62
(dp3876
sg71
g3870
sg64
(lp3877
g57
(g58
g59
NtRp3878
(dp3879
g62
(dp3880
g70
I3
ssg71
g3874
sg64
(lp3881
g57
(g66
g59
NtRp3882
(dp3883
g62
(dp3884
g70
I2
ssg71
Nsg64
(lp3885
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3886
(dp3887
g62
(dp3888
sg71
g3223
sg64
(lp3889
g57
(g78
g59
NtRp3890
(dp3891
g62
(dp3892
g82
g83
ssg71
g3886
sg64
(lp3893
S'meta'
p3894
asbag57
(g78
g59
NtRp3895
(dp3896
g62
(dp3897
g89
g90
ssg71
g3886
sg64
(lp3898
S':'
asbag57
(g78
g59
NtRp3899
(dp3900
g62
(dp3901
sg71
g3886
sg64
(lp3902
g57
(g58
g59
NtRp3903
(dp3904
g62
(dp3905
g70
I5
ssg71
g3899
sg64
(lp3906
g57
(g66
g59
NtRp3907
(dp3908
g62
(dp3909
g70
I4
ssg71
Nsg64
(lp3910
g57
(g73
g59
NtRp3911
(dp3912
g62
(dp3913
sg71
g3907
sg64
(lp3914
g57
(g78
g59
NtRp3915
(dp3916
g62
(dp3917
g82
g83
ssg71
g3911
sg64
(lp3918
S'author'
p3919
asbag57
(g78
g59
NtRp3920
(dp3921
g62
(dp3922
g89
g90
ssg71
g3911
sg64
(lp3923
S':'
asbag57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
sg71
g3911
sg64
(lp3927
g57
(g58
g59
NtRp3928
(dp3929
g62
(dp3930
g70
I4
ssg71
g3924
sg64
(lp3931
S'Vikram Pudi <vikram@iiit.ac.in>'
p3932
asbasbasbag57
(g73
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3907
sg64
(lp3936
g57
(g78
g59
NtRp3937
(dp3938
g62
(dp3939
g82
g83
ssg71
g3933
sg64
(lp3940
S'copyright'
p3941
asbag57
(g78
g59
NtRp3942
(dp3943
g62
(dp3944
g89
g90
ssg71
g3933
sg64
(lp3945
S':'
asbag57
(g78
g59
NtRp3946
(dp3947
g62
(dp3948
sg71
g3933
sg64
(lp3949
g57
(g58
g59
NtRp3950
(dp3951
g62
(dp3952
g70
I4
ssg71
g3946
sg64
(lp3953
S'Copyright 2011'
p3954
asbasbasbag57
(g73
g59
NtRp3955
(dp3956
g62
(dp3957
sg71
g3907
sg64
(lp3958
g57
(g78
g59
NtRp3959
(dp3960
g62
(dp3961
g82
g83
ssg71
g3955
sg64
(lp3962
S'description'
p3963
asbag57
(g78
g59
NtRp3964
(dp3965
g62
(dp3966
g89
g90
ssg71
g3955
sg64
(lp3967
S':'
asbag57
(g78
g59
NtRp3968
(dp3969
g62
(dp3970
sg71
g3955
sg64
(lp3971
g57
(g58
g59
NtRp3972
(dp3973
g62
(dp3974
g70
I4
ssg71
g3968
sg64
(lp3975
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p3976
asbasbasbag57
(g73
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3907
sg64
(lp3980
g57
(g78
g59
NtRp3981
(dp3982
g62
(dp3983
g82
g83
ssg71
g3977
sg64
(lp3984
S'generator'
p3985
asbag57
(g78
g59
NtRp3986
(dp3987
g62
(dp3988
g89
g90
ssg71
g3977
sg64
(lp3989
S':'
asbag57
(g78
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3977
sg64
(lp3993
g57
(g58
g59
NtRp3994
(dp3995
g62
(dp3996
g70
I4
ssg71
g3990
sg64
(lp3997
S'Web2py Web Framework'
p3998
asbasbasbag57
(g73
g59
NtRp3999
(dp4000
g62
(dp4001
sg71
g3907
sg64
(lp4002
g57
(g78
g59
NtRp4003
(dp4004
g62
(dp4005
g82
g83
ssg71
g3999
sg64
(lp4006
S'keywords'
p4007
asbag57
(g78
g59
NtRp4008
(dp4009
g62
(dp4010
g89
g90
ssg71
g3999
sg64
(lp4011
S':'
asbag57
(g78
g59
NtRp4012
(dp4013
g62
(dp4014
sg71
g3999
sg64
(lp4015
g57
(g58
g59
NtRp4016
(dp4017
g62
(dp4018
g70
I4
ssg71
g4012
sg64
(lp4019
S'web2py, python, metabolome, metabolomics'
p4020
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4021
(dp4022
g62
(dp4023
sg71
g3223
sg64
(lp4024
g57
(g78
g59
NtRp4025
(dp4026
g62
(dp4027
g82
g83
ssg71
g4021
sg64
(lp4028
S'models_to_run'
p4029
asbag57
(g78
g59
NtRp4030
(dp4031
g62
(dp4032
g89
g90
ssg71
g4021
sg64
(lp4033
S':'
asbag57
(g78
g59
NtRp4034
(dp4035
g62
(dp4036
sg71
g4021
sg64
(lp4037
g57
(g58
g59
NtRp4038
(dp4039
g62
(dp4040
g70
I5
ssg71
g4034
sg64
(lp4041
g57
(g66
g59
NtRp4042
(dp4043
g62
(dp4044
g70
I4
ssg71
Nsg64
(lp4045
g57
(g73
g59
NtRp4046
(dp4047
g62
(dp4048
sg71
g4042
sg64
(lp4049
g57
(g78
g59
NtRp4050
(dp4051
g62
(dp4052
sg71
g4046
sg64
(lp4053
g57
(g58
g59
NtRp4054
(dp4055
g62
(dp4056
g70
I4
ssg71
g4050
sg64
(lp4057
S'^\\w+\\.py$'
p4058
asbasbasbag57
(g73
g59
NtRp4059
(dp4060
g62
(dp4061
sg71
g4042
sg64
(lp4062
g57
(g78
g59
NtRp4063
(dp4064
g62
(dp4065
sg71
g4059
sg64
(lp4066
g57
(g58
g59
NtRp4067
(dp4068
g62
(dp4069
g70
I4
ssg71
g4063
sg64
(lp4070
S'^default/\\w+\\.py$'
p4071
asbasbasbag57
(g73
g59
NtRp4072
(dp4073
g62
(dp4074
sg71
g4042
sg64
(lp4075
g57
(g78
g59
NtRp4076
(dp4077
g62
(dp4078
sg71
g4072
sg64
(lp4079
g57
(g58
g59
NtRp4080
(dp4081
g62
(dp4082
g70
I4
ssg71
g4076
sg64
(lp4083
S'^default/list_all_dev_projects/\\w+\\.py$'
p4084
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4085
(dp4086
g62
(dp4087
sg71
g3223
sg64
(lp4088
g57
(g78
g59
NtRp4089
(dp4090
g62
(dp4091
g82
g83
ssg71
g4085
sg64
(lp4092
S'postprocessing'
p4093
asbag57
(g78
g59
NtRp4094
(dp4095
g62
(dp4096
g89
g90
ssg71
g4085
sg64
(lp4097
S':'
asbag57
(g78
g59
NtRp4098
(dp4099
g62
(dp4100
sg71
g4085
sg64
(lp4101
g57
(g58
g59
NtRp4102
(dp4103
g62
(dp4104
g70
I5
ssg71
g4098
sg64
(lp4105
g57
(g66
g59
NtRp4106
(dp4107
g62
(dp4108
g70
I4
ssg71
Nsg64
(lp4109
sbasbasbasbag57
(g73
g59
NtRp4110
(dp4111
g62
(dp4112
sg71
g3223
sg64
(lp4113
g57
(g78
g59
NtRp4114
(dp4115
g62
(dp4116
g82
g83
ssg71
g4110
sg64
(lp4117
S'session_cookie_expires'
p4118
asbag57
(g78
g59
NtRp4119
(dp4120
g62
(dp4121
g89
g90
ssg71
g4110
sg64
(lp4122
S':'
asbag57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
sg71
g4110
sg64
(lp4126
g57
(g58
g59
NtRp4127
(dp4128
g62
(dp4129
g70
I5
ssg71
g4123
sg64
(lp4130
S'None'
p4131
asbasbasbag57
(g73
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g3223
sg64
(lp4135
g57
(g78
g59
NtRp4136
(dp4137
g62
(dp4138
g82
g83
ssg71
g4132
sg64
(lp4139
S'session_data_name'
p4140
asbag57
(g78
g59
NtRp4141
(dp4142
g62
(dp4143
g89
g90
ssg71
g4132
sg64
(lp4144
S':'
asbag57
(g78
g59
NtRp4145
(dp4146
g62
(dp4147
sg71
g4132
sg64
(lp4148
g57
(g58
g59
NtRp4149
(dp4150
g62
(dp4151
g70
I5
ssg71
g4145
sg64
(lp4152
S'session_data_dev_bootstrap_ch'
p4153
asbasbasbag57
(g73
g59
NtRp4154
(dp4155
g62
(dp4156
sg71
g3223
sg64
(lp4157
g57
(g78
g59
NtRp4158
(dp4159
g62
(dp4160
g82
g83
ssg71
g4154
sg64
(lp4161
S'session_file'
p4162
asbag57
(g78
g59
NtRp4163
(dp4164
g62
(dp4165
g89
g90
ssg71
g4154
sg64
(lp4166
S':'
asbag57
(g78
g59
NtRp4167
(dp4168
g62
(dp4169
sg71
g4154
sg64
(lp4170
g57
(g58
g59
NtRp4171
(dp4172
g62
(dp4173
g70
I5
ssg71
g4167
sg64
(lp4174
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c', mode 'rb+' at 0xad7bde38>"
p4175
asbasbasbag57
(g73
g59
NtRp4176
(dp4177
g62
(dp4178
sg71
g3223
sg64
(lp4179
g57
(g78
g59
NtRp4180
(dp4181
g62
(dp4182
g82
g83
ssg71
g4176
sg64
(lp4183
S'session_filename'
p4184
asbag57
(g78
g59
NtRp4185
(dp4186
g62
(dp4187
g89
g90
ssg71
g4176
sg64
(lp4188
S':'
asbag57
(g78
g59
NtRp4189
(dp4190
g62
(dp4191
sg71
g4176
sg64
(lp4192
g57
(g58
g59
NtRp4193
(dp4194
g62
(dp4195
g70
I5
ssg71
g4189
sg64
(lp4196
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0814cdb2-cc9b-4929-a6af-c40f5839344c'
p4197
asbasbasbag57
(g73
g59
NtRp4198
(dp4199
g62
(dp4200
sg71
g3223
sg64
(lp4201
g57
(g78
g59
NtRp4202
(dp4203
g62
(dp4204
g82
g83
ssg71
g4198
sg64
(lp4205
S'session_id'
p4206
asbag57
(g78
g59
NtRp4207
(dp4208
g62
(dp4209
g89
g90
ssg71
g4198
sg64
(lp4210
S':'
asbag57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
sg71
g4198
sg64
(lp4214
g57
(g58
g59
NtRp4215
(dp4216
g62
(dp4217
g70
I5
ssg71
g4211
sg64
(lp4218
g513
asbasbasbag57
(g73
g59
NtRp4219
(dp4220
g62
(dp4221
sg71
g3223
sg64
(lp4222
g57
(g78
g59
NtRp4223
(dp4224
g62
(dp4225
g82
g83
ssg71
g4219
sg64
(lp4226
S'session_id_name'
p4227
asbag57
(g78
g59
NtRp4228
(dp4229
g62
(dp4230
g89
g90
ssg71
g4219
sg64
(lp4231
S':'
asbag57
(g78
g59
NtRp4232
(dp4233
g62
(dp4234
sg71
g4219
sg64
(lp4235
g57
(g58
g59
NtRp4236
(dp4237
g62
(dp4238
g70
I5
ssg71
g4232
sg64
(lp4239
g3280
asbasbasbag57
(g73
g59
NtRp4240
(dp4241
g62
(dp4242
sg71
g3223
sg64
(lp4243
g57
(g78
g59
NtRp4244
(dp4245
g62
(dp4246
g82
g83
ssg71
g4240
sg64
(lp4247
S'session_locked'
p4248
asbag57
(g78
g59
NtRp4249
(dp4250
g62
(dp4251
g89
g90
ssg71
g4240
sg64
(lp4252
S':'
asbag57
(g78
g59
NtRp4253
(dp4254
g62
(dp4255
sg71
g4240
sg64
(lp4256
g57
(g58
g59
NtRp4257
(dp4258
g62
(dp4259
g70
I5
ssg71
g4253
sg64
(lp4260
g1643
asbasbasbag57
(g73
g59
NtRp4261
(dp4262
g62
(dp4263
sg71
g3223
sg64
(lp4264
g57
(g78
g59
NtRp4265
(dp4266
g62
(dp4267
g82
g83
ssg71
g4261
sg64
(lp4268
S'session_new'
p4269
asbag57
(g78
g59
NtRp4270
(dp4271
g62
(dp4272
g89
g90
ssg71
g4261
sg64
(lp4273
S':'
asbag57
(g78
g59
NtRp4274
(dp4275
g62
(dp4276
sg71
g4261
sg64
(lp4277
g57
(g58
g59
NtRp4278
(dp4279
g62
(dp4280
g70
I5
ssg71
g4274
sg64
(lp4281
g100
asbasbasbag57
(g73
g59
NtRp4282
(dp4283
g62
(dp4284
sg71
g3223
sg64
(lp4285
g57
(g78
g59
NtRp4286
(dp4287
g62
(dp4288
g82
g83
ssg71
g4282
sg64
(lp4289
S'session_storage_type'
p4290
asbag57
(g78
g59
NtRp4291
(dp4292
g62
(dp4293
g89
g90
ssg71
g4282
sg64
(lp4294
S':'
asbag57
(g78
g59
NtRp4295
(dp4296
g62
(dp4297
sg71
g4282
sg64
(lp4298
g57
(g58
g59
NtRp4299
(dp4300
g62
(dp4301
g70
I5
ssg71
g4295
sg64
(lp4302
g3096
asbasbasbag57
(g73
g59
NtRp4303
(dp4304
g62
(dp4305
sg71
g3223
sg64
(lp4306
g57
(g78
g59
NtRp4307
(dp4308
g62
(dp4309
g82
g83
ssg71
g4303
sg64
(lp4310
S'status'
p4311
asbag57
(g78
g59
NtRp4312
(dp4313
g62
(dp4314
g89
g90
ssg71
g4303
sg64
(lp4315
S':'
asbag57
(g78
g59
NtRp4316
(dp4317
g62
(dp4318
sg71
g4303
sg64
(lp4319
g57
(g58
g59
NtRp4320
(dp4321
g62
(dp4322
g70
I5
ssg71
g4316
sg64
(lp4323
S'200'
p4324
asbasbasbag57
(g73
g59
NtRp4325
(dp4326
g62
(dp4327
sg71
g3223
sg64
(lp4328
g57
(g78
g59
NtRp4329
(dp4330
g62
(dp4331
g82
g83
ssg71
g4325
sg64
(lp4332
S'subtitle'
p4333
asbag57
(g78
g59
NtRp4334
(dp4335
g62
(dp4336
g89
g90
ssg71
g4325
sg64
(lp4337
S':'
asbag57
(g78
g59
NtRp4338
(dp4339
g62
(dp4340
sg71
g4325
sg64
(lp4341
g57
(g58
g59
NtRp4342
(dp4343
g62
(dp4344
g70
I5
ssg71
g4338
sg64
(lp4345
g3843
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4346
asbasbasbag57
(g73
g59
NtRp4347
(dp4348
g62
(dp4349
sg71
g3223
sg64
(lp4350
g57
(g78
g59
NtRp4351
(dp4352
g62
(dp4353
g82
g83
ssg71
g4347
sg64
(lp4354
S'title'
p4355
asbag57
(g78
g59
NtRp4356
(dp4357
g62
(dp4358
g89
g90
ssg71
g4347
sg64
(lp4359
S':'
asbag57
(g78
g59
NtRp4360
(dp4361
g62
(dp4362
sg71
g4347
sg64
(lp4363
g57
(g58
g59
NtRp4364
(dp4365
g62
(dp4366
g70
I5
ssg71
g4360
sg64
(lp4367
g122
asbasbasbag57
(g73
g59
NtRp4368
(dp4369
g62
(dp4370
sg71
g3223
sg64
(lp4371
g57
(g78
g59
NtRp4372
(dp4373
g62
(dp4374
g82
g83
ssg71
g4368
sg64
(lp4375
S'view'
p4376
asbag57
(g78
g59
NtRp4377
(dp4378
g62
(dp4379
g89
g90
ssg71
g4368
sg64
(lp4380
S':'
asbag57
(g78
g59
NtRp4381
(dp4382
g62
(dp4383
sg71
g4368
sg64
(lp4384
g57
(g58
g59
NtRp4385
(dp4386
g62
(dp4387
g70
I5
ssg71
g4381
sg64
(lp4388
S'default/list_all_dev_projects.html'
p4389
asbasbasbasbasbsS'locals'
p4390
(dp4391
ssS'traceback'
p4392
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1141, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 294, in list_all_dev_projects\n    db.sample.experimentalist.default=auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p4393
s.