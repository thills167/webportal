(dp1
S'output'
p2
S"<class 'sqlite3.IntegrityError'> column name is not unique"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+[row.id])), \\\n           lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"edit",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(replica="replicate")\n        db.sample.insert(**db.sample._filter_fields(rec))\n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(duplicate)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of IntegrityError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.IntegrityError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of IntegrityError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of IntegrityError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p45
sS'args'
p46
S"('column name is not unique',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of IntegrityError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of IntegrityError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of IntegrityError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of IntegrityError object>"
p57
ssS'evalue'
p58
S'column name is not unique'
p59
sS'request'
p60
ccopy_reg
_reconstructor
p61
(cgluon.html
BEAUTIFY
p62
c__builtin__
object
p63
NtRp64
(dp65
S'attributes'
p66
(dp67
sS'components'
p68
(lp69
g61
(cgluon.html
TABLE
p70
g63
NtRp71
(dp72
g66
(dp73
S'level'
p74
I5
ssS'parent'
p75
Nsg68
(lp76
g61
(cgluon.html
TR
p77
g63
NtRp78
(dp79
g66
(dp80
sg75
g71
sg68
(lp81
g61
(cgluon.html
TD
p82
g63
NtRp83
(dp84
g66
(dp85
S'_style'
p86
S'font-weight:bold;vertical-align:top'
p87
ssg75
g78
sg68
(lp88
S'ajax'
p89
asbag61
(g82
g63
NtRp90
(dp91
g66
(dp92
S'_valign'
p93
S'top'
p94
ssg75
g78
sg68
(lp95
S':'
asbag61
(g82
g63
NtRp96
(dp97
g66
(dp98
sg75
g78
sg68
(lp99
g61
(g62
g63
NtRp100
(dp101
g66
(dp102
g74
I5
ssg75
g96
sg68
(lp103
S'False'
p104
asbasbasbag61
(g77
g63
NtRp105
(dp106
g66
(dp107
sg75
g71
sg68
(lp108
g61
(g82
g63
NtRp109
(dp110
g66
(dp111
g86
g87
ssg75
g105
sg68
(lp112
S'application'
p113
asbag61
(g82
g63
NtRp114
(dp115
g66
(dp116
g93
g94
ssg75
g105
sg68
(lp117
S':'
asbag61
(g82
g63
NtRp118
(dp119
g66
(dp120
sg75
g105
sg68
(lp121
g61
(g62
g63
NtRp122
(dp123
g66
(dp124
g74
I5
ssg75
g118
sg68
(lp125
S'DEV_bootstrap_ch'
p126
asbasbasbag61
(g77
g63
NtRp127
(dp128
g66
(dp129
sg75
g71
sg68
(lp130
g61
(g82
g63
NtRp131
(dp132
g66
(dp133
g86
g87
ssg75
g127
sg68
(lp134
g46
asbag61
(g82
g63
NtRp135
(dp136
g66
(dp137
g93
g94
ssg75
g127
sg68
(lp138
S':'
asbag61
(g82
g63
NtRp139
(dp140
g66
(dp141
sg75
g127
sg68
(lp142
g61
(g62
g63
NtRp143
(dp144
g66
(dp145
g74
I5
ssg75
g139
sg68
(lp146
g61
(g70
g63
NtRp147
(dp148
g66
(dp149
g74
I4
ssg75
Nsg68
(lp150
g61
(g77
g63
NtRp151
(dp152
g66
(dp153
sg75
g147
sg68
(lp154
g61
(g82
g63
NtRp155
(dp156
g66
(dp157
sg75
g151
sg68
(lp158
g61
(g62
g63
NtRp159
(dp160
g66
(dp161
g74
I4
ssg75
g155
sg68
(lp162
S'project'
p163
asbasbasbag61
(g77
g63
NtRp164
(dp165
g66
(dp166
sg75
g147
sg68
(lp167
g61
(g82
g63
NtRp168
(dp169
g66
(dp170
sg75
g164
sg68
(lp171
g61
(g62
g63
NtRp172
(dp173
g66
(dp174
g74
I4
ssg75
g168
sg68
(lp175
S'experiment.project'
p176
asbasbasbag61
(g77
g63
NtRp177
(dp178
g66
(dp179
sg75
g147
sg68
(lp180
g61
(g82
g63
NtRp181
(dp182
g66
(dp183
sg75
g177
sg68
(lp184
g61
(g62
g63
NtRp185
(dp186
g66
(dp187
g74
I4
ssg75
g181
sg68
(lp188
S'1'
asbasbasbag61
(g77
g63
NtRp189
(dp190
g66
(dp191
sg75
g147
sg68
(lp192
g61
(g82
g63
NtRp193
(dp194
g66
(dp195
sg75
g189
sg68
(lp196
g61
(g62
g63
NtRp197
(dp198
g66
(dp199
g74
I4
ssg75
g193
sg68
(lp200
S'sample.experiment'
p201
asbasbasbag61
(g77
g63
NtRp202
(dp203
g66
(dp204
sg75
g147
sg68
(lp205
g61
(g82
g63
NtRp206
(dp207
g66
(dp208
sg75
g202
sg68
(lp209
g61
(g62
g63
NtRp210
(dp211
g66
(dp212
g74
I4
ssg75
g206
sg68
(lp213
S'1'
asbasbasbag61
(g77
g63
NtRp214
(dp215
g66
(dp216
sg75
g147
sg68
(lp217
g61
(g82
g63
NtRp218
(dp219
g66
(dp220
sg75
g214
sg68
(lp221
g61
(g62
g63
NtRp222
(dp223
g66
(dp224
g74
I4
ssg75
g218
sg68
(lp225
S'2'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp226
(dp227
g66
(dp228
sg75
g71
sg68
(lp229
g61
(g82
g63
NtRp230
(dp231
g66
(dp232
g86
g87
ssg75
g226
sg68
(lp233
S'body'
p234
asbag61
(g82
g63
NtRp235
(dp236
g66
(dp237
g93
g94
ssg75
g226
sg68
(lp238
S':'
asbag61
(g82
g63
NtRp239
(dp240
g66
(dp241
sg75
g226
sg68
(lp242
g61
(g62
g63
NtRp243
(dp244
g66
(dp245
g74
I5
ssg75
g239
sg68
(lp246
S'<cStringIO.StringO object at 0xadd65260>'
p247
asbasbasbag61
(g77
g63
NtRp248
(dp249
g66
(dp250
sg75
g71
sg68
(lp251
g61
(g82
g63
NtRp252
(dp253
g66
(dp254
g86
g87
ssg75
g248
sg68
(lp255
S'cid'
p256
asbag61
(g82
g63
NtRp257
(dp258
g66
(dp259
g93
g94
ssg75
g248
sg68
(lp260
S':'
asbag61
(g82
g63
NtRp261
(dp262
g66
(dp263
sg75
g248
sg68
(lp264
g61
(g62
g63
NtRp265
(dp266
g66
(dp267
g74
I5
ssg75
g261
sg68
(lp268
S'None'
p269
asbasbasbag61
(g77
g63
NtRp270
(dp271
g66
(dp272
sg75
g71
sg68
(lp273
g61
(g82
g63
NtRp274
(dp275
g66
(dp276
g86
g87
ssg75
g270
sg68
(lp277
S'client'
p278
asbag61
(g82
g63
NtRp279
(dp280
g66
(dp281
g93
g94
ssg75
g270
sg68
(lp282
S':'
asbag61
(g82
g63
NtRp283
(dp284
g66
(dp285
sg75
g270
sg68
(lp286
g61
(g62
g63
NtRp287
(dp288
g66
(dp289
g74
I5
ssg75
g283
sg68
(lp290
S'127.0.0.1'
p291
asbasbasbag61
(g77
g63
NtRp292
(dp293
g66
(dp294
sg75
g71
sg68
(lp295
g61
(g82
g63
NtRp296
(dp297
g66
(dp298
g86
g87
ssg75
g292
sg68
(lp299
S'controller'
p300
asbag61
(g82
g63
NtRp301
(dp302
g66
(dp303
g93
g94
ssg75
g292
sg68
(lp304
S':'
asbag61
(g82
g63
NtRp305
(dp306
g66
(dp307
sg75
g292
sg68
(lp308
g61
(g62
g63
NtRp309
(dp310
g66
(dp311
g74
I5
ssg75
g305
sg68
(lp312
S'default'
p313
asbasbasbag61
(g77
g63
NtRp314
(dp315
g66
(dp316
sg75
g71
sg68
(lp317
g61
(g82
g63
NtRp318
(dp319
g66
(dp320
g86
g87
ssg75
g314
sg68
(lp321
S'cookies'
p322
asbag61
(g82
g63
NtRp323
(dp324
g66
(dp325
g93
g94
ssg75
g314
sg68
(lp326
S':'
asbag61
(g82
g63
NtRp327
(dp328
g66
(dp329
sg75
g314
sg68
(lp330
g61
(g62
g63
NtRp331
(dp332
g66
(dp333
g74
I5
ssg75
g327
sg68
(lp334
g61
(g70
g63
NtRp335
(dp336
g66
(dp337
g74
I4
ssg75
Nsg68
(lp338
g61
(g77
g63
NtRp339
(dp340
g66
(dp341
sg75
g335
sg68
(lp342
g61
(g82
g63
NtRp343
(dp344
g66
(dp345
g86
g87
ssg75
g339
sg68
(lp346
S'session_id_admin'
p347
asbag61
(g82
g63
NtRp348
(dp349
g66
(dp350
g93
g94
ssg75
g339
sg68
(lp351
S':'
asbag61
(g82
g63
NtRp352
(dp353
g66
(dp354
sg75
g339
sg68
(lp355
g61
(g62
g63
NtRp356
(dp357
g66
(dp358
g74
I4
ssg75
g352
sg68
(lp359
S'127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed'
p360
ag61
(g70
g63
NtRp361
(dp362
g66
(dp363
g74
I3
ssg75
Nsg68
(lp364
g61
(g77
g63
NtRp365
(dp366
g66
(dp367
sg75
g361
sg68
(lp368
g61
(g82
g63
NtRp369
(dp370
g66
(dp371
g86
g87
ssg75
g365
sg68
(lp372
S'comment'
p373
asbag61
(g82
g63
NtRp374
(dp375
g66
(dp376
g93
g94
ssg75
g365
sg68
(lp377
S':'
asbag61
(g82
g63
NtRp378
(dp379
g66
(dp380
sg75
g365
sg68
(lp381
g61
(g62
g63
NtRp382
(dp383
g66
(dp384
g74
I3
ssg75
g378
sg68
(lp385
S''
asbasbasbag61
(g77
g63
NtRp386
(dp387
g66
(dp388
sg75
g361
sg68
(lp389
g61
(g82
g63
NtRp390
(dp391
g66
(dp392
g86
g87
ssg75
g386
sg68
(lp393
S'domain'
p394
asbag61
(g82
g63
NtRp395
(dp396
g66
(dp397
g93
g94
ssg75
g386
sg68
(lp398
S':'
asbag61
(g82
g63
NtRp399
(dp400
g66
(dp401
sg75
g386
sg68
(lp402
g61
(g62
g63
NtRp403
(dp404
g66
(dp405
g74
I3
ssg75
g399
sg68
(lp406
S''
asbasbasbag61
(g77
g63
NtRp407
(dp408
g66
(dp409
sg75
g361
sg68
(lp410
g61
(g82
g63
NtRp411
(dp412
g66
(dp413
g86
g87
ssg75
g407
sg68
(lp414
S'expires'
p415
asbag61
(g82
g63
NtRp416
(dp417
g66
(dp418
g93
g94
ssg75
g407
sg68
(lp419
S':'
asbag61
(g82
g63
NtRp420
(dp421
g66
(dp422
sg75
g407
sg68
(lp423
g61
(g62
g63
NtRp424
(dp425
g66
(dp426
g74
I3
ssg75
g420
sg68
(lp427
S''
asbasbasbag61
(g77
g63
NtRp428
(dp429
g66
(dp430
sg75
g361
sg68
(lp431
g61
(g82
g63
NtRp432
(dp433
g66
(dp434
g86
g87
ssg75
g428
sg68
(lp435
S'httponly'
p436
asbag61
(g82
g63
NtRp437
(dp438
g66
(dp439
g93
g94
ssg75
g428
sg68
(lp440
S':'
asbag61
(g82
g63
NtRp441
(dp442
g66
(dp443
sg75
g428
sg68
(lp444
g61
(g62
g63
NtRp445
(dp446
g66
(dp447
g74
I3
ssg75
g441
sg68
(lp448
S''
asbasbasbag61
(g77
g63
NtRp449
(dp450
g66
(dp451
sg75
g361
sg68
(lp452
g61
(g82
g63
NtRp453
(dp454
g66
(dp455
g86
g87
ssg75
g449
sg68
(lp456
S'max-age'
p457
asbag61
(g82
g63
NtRp458
(dp459
g66
(dp460
g93
g94
ssg75
g449
sg68
(lp461
S':'
asbag61
(g82
g63
NtRp462
(dp463
g66
(dp464
sg75
g449
sg68
(lp465
g61
(g62
g63
NtRp466
(dp467
g66
(dp468
g74
I3
ssg75
g462
sg68
(lp469
S''
asbasbasbag61
(g77
g63
NtRp470
(dp471
g66
(dp472
sg75
g361
sg68
(lp473
g61
(g82
g63
NtRp474
(dp475
g66
(dp476
g86
g87
ssg75
g470
sg68
(lp477
S'path'
p478
asbag61
(g82
g63
NtRp479
(dp480
g66
(dp481
g93
g94
ssg75
g470
sg68
(lp482
S':'
asbag61
(g82
g63
NtRp483
(dp484
g66
(dp485
sg75
g470
sg68
(lp486
g61
(g62
g63
NtRp487
(dp488
g66
(dp489
g74
I3
ssg75
g483
sg68
(lp490
S''
asbasbasbag61
(g77
g63
NtRp491
(dp492
g66
(dp493
sg75
g361
sg68
(lp494
g61
(g82
g63
NtRp495
(dp496
g66
(dp497
g86
g87
ssg75
g491
sg68
(lp498
S'secure'
p499
asbag61
(g82
g63
NtRp500
(dp501
g66
(dp502
g93
g94
ssg75
g491
sg68
(lp503
S':'
asbag61
(g82
g63
NtRp504
(dp505
g66
(dp506
sg75
g491
sg68
(lp507
g61
(g62
g63
NtRp508
(dp509
g66
(dp510
g74
I3
ssg75
g504
sg68
(lp511
S''
asbasbasbag61
(g77
g63
NtRp512
(dp513
g66
(dp514
sg75
g361
sg68
(lp515
g61
(g82
g63
NtRp516
(dp517
g66
(dp518
g86
g87
ssg75
g512
sg68
(lp519
S'version'
p520
asbag61
(g82
g63
NtRp521
(dp522
g66
(dp523
g93
g94
ssg75
g512
sg68
(lp524
S':'
asbag61
(g82
g63
NtRp525
(dp526
g66
(dp527
sg75
g512
sg68
(lp528
g61
(g62
g63
NtRp529
(dp530
g66
(dp531
g74
I3
ssg75
g525
sg68
(lp532
S''
asbasbasbasbasbasbasbag61
(g77
g63
NtRp533
(dp534
g66
(dp535
sg75
g335
sg68
(lp536
g61
(g82
g63
NtRp537
(dp538
g66
(dp539
g86
g87
ssg75
g533
sg68
(lp540
S'session_id_dev_bootstrap_ch'
p541
asbag61
(g82
g63
NtRp542
(dp543
g66
(dp544
g93
g94
ssg75
g533
sg68
(lp545
S':'
asbag61
(g82
g63
NtRp546
(dp547
g66
(dp548
sg75
g533
sg68
(lp549
g61
(g62
g63
NtRp550
(dp551
g66
(dp552
g74
I4
ssg75
g546
sg68
(lp553
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p554
ag61
(g70
g63
NtRp555
(dp556
g66
(dp557
g74
I3
ssg75
Nsg68
(lp558
g61
(g77
g63
NtRp559
(dp560
g66
(dp561
sg75
g555
sg68
(lp562
g61
(g82
g63
NtRp563
(dp564
g66
(dp565
g86
g87
ssg75
g559
sg68
(lp566
g373
asbag61
(g82
g63
NtRp567
(dp568
g66
(dp569
g93
g94
ssg75
g559
sg68
(lp570
S':'
asbag61
(g82
g63
NtRp571
(dp572
g66
(dp573
sg75
g559
sg68
(lp574
g61
(g62
g63
NtRp575
(dp576
g66
(dp577
g74
I3
ssg75
g571
sg68
(lp578
S''
asbasbasbag61
(g77
g63
NtRp579
(dp580
g66
(dp581
sg75
g555
sg68
(lp582
g61
(g82
g63
NtRp583
(dp584
g66
(dp585
g86
g87
ssg75
g579
sg68
(lp586
g394
asbag61
(g82
g63
NtRp587
(dp588
g66
(dp589
g93
g94
ssg75
g579
sg68
(lp590
S':'
asbag61
(g82
g63
NtRp591
(dp592
g66
(dp593
sg75
g579
sg68
(lp594
g61
(g62
g63
NtRp595
(dp596
g66
(dp597
g74
I3
ssg75
g591
sg68
(lp598
S''
asbasbasbag61
(g77
g63
NtRp599
(dp600
g66
(dp601
sg75
g555
sg68
(lp602
g61
(g82
g63
NtRp603
(dp604
g66
(dp605
g86
g87
ssg75
g599
sg68
(lp606
g415
asbag61
(g82
g63
NtRp607
(dp608
g66
(dp609
g93
g94
ssg75
g599
sg68
(lp610
S':'
asbag61
(g82
g63
NtRp611
(dp612
g66
(dp613
sg75
g599
sg68
(lp614
g61
(g62
g63
NtRp615
(dp616
g66
(dp617
g74
I3
ssg75
g611
sg68
(lp618
S''
asbasbasbag61
(g77
g63
NtRp619
(dp620
g66
(dp621
sg75
g555
sg68
(lp622
g61
(g82
g63
NtRp623
(dp624
g66
(dp625
g86
g87
ssg75
g619
sg68
(lp626
g436
asbag61
(g82
g63
NtRp627
(dp628
g66
(dp629
g93
g94
ssg75
g619
sg68
(lp630
S':'
asbag61
(g82
g63
NtRp631
(dp632
g66
(dp633
sg75
g619
sg68
(lp634
g61
(g62
g63
NtRp635
(dp636
g66
(dp637
g74
I3
ssg75
g631
sg68
(lp638
S''
asbasbasbag61
(g77
g63
NtRp639
(dp640
g66
(dp641
sg75
g555
sg68
(lp642
g61
(g82
g63
NtRp643
(dp644
g66
(dp645
g86
g87
ssg75
g639
sg68
(lp646
g457
asbag61
(g82
g63
NtRp647
(dp648
g66
(dp649
g93
g94
ssg75
g639
sg68
(lp650
S':'
asbag61
(g82
g63
NtRp651
(dp652
g66
(dp653
sg75
g639
sg68
(lp654
g61
(g62
g63
NtRp655
(dp656
g66
(dp657
g74
I3
ssg75
g651
sg68
(lp658
S''
asbasbasbag61
(g77
g63
NtRp659
(dp660
g66
(dp661
sg75
g555
sg68
(lp662
g61
(g82
g63
NtRp663
(dp664
g66
(dp665
g86
g87
ssg75
g659
sg68
(lp666
g478
asbag61
(g82
g63
NtRp667
(dp668
g66
(dp669
g93
g94
ssg75
g659
sg68
(lp670
S':'
asbag61
(g82
g63
NtRp671
(dp672
g66
(dp673
sg75
g659
sg68
(lp674
g61
(g62
g63
NtRp675
(dp676
g66
(dp677
g74
I3
ssg75
g671
sg68
(lp678
S''
asbasbasbag61
(g77
g63
NtRp679
(dp680
g66
(dp681
sg75
g555
sg68
(lp682
g61
(g82
g63
NtRp683
(dp684
g66
(dp685
g86
g87
ssg75
g679
sg68
(lp686
g499
asbag61
(g82
g63
NtRp687
(dp688
g66
(dp689
g93
g94
ssg75
g679
sg68
(lp690
S':'
asbag61
(g82
g63
NtRp691
(dp692
g66
(dp693
sg75
g679
sg68
(lp694
g61
(g62
g63
NtRp695
(dp696
g66
(dp697
g74
I3
ssg75
g691
sg68
(lp698
S''
asbasbasbag61
(g77
g63
NtRp699
(dp700
g66
(dp701
sg75
g555
sg68
(lp702
g61
(g82
g63
NtRp703
(dp704
g66
(dp705
g86
g87
ssg75
g699
sg68
(lp706
g520
asbag61
(g82
g63
NtRp707
(dp708
g66
(dp709
g93
g94
ssg75
g699
sg68
(lp710
S':'
asbag61
(g82
g63
NtRp711
(dp712
g66
(dp713
sg75
g699
sg68
(lp714
g61
(g62
g63
NtRp715
(dp716
g66
(dp717
g74
I3
ssg75
g711
sg68
(lp718
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp719
(dp720
g66
(dp721
sg75
g71
sg68
(lp722
g61
(g82
g63
NtRp723
(dp724
g66
(dp725
g86
g87
ssg75
g719
sg68
(lp726
S'env'
p727
asbag61
(g82
g63
NtRp728
(dp729
g66
(dp730
g93
g94
ssg75
g719
sg68
(lp731
S':'
asbag61
(g82
g63
NtRp732
(dp733
g66
(dp734
sg75
g719
sg68
(lp735
g61
(g62
g63
NtRp736
(dp737
g66
(dp738
g74
I5
ssg75
g732
sg68
(lp739
g61
(g70
g63
NtRp740
(dp741
g66
(dp742
g74
I4
ssg75
Nsg68
(lp743
g61
(g77
g63
NtRp744
(dp745
g66
(dp746
sg75
g740
sg68
(lp747
g61
(g82
g63
NtRp748
(dp749
g66
(dp750
g86
g87
ssg75
g744
sg68
(lp751
S'app_folders'
p752
asbag61
(g82
g63
NtRp753
(dp754
g66
(dp755
g93
g94
ssg75
g744
sg68
(lp756
S':'
asbag61
(g82
g63
NtRp757
(dp758
g66
(dp759
sg75
g744
sg68
(lp760
g61
(g62
g63
NtRp761
(dp762
g66
(dp763
g74
I4
ssg75
g757
sg68
(lp764
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p765
asbasbasbag61
(g77
g63
NtRp766
(dp767
g66
(dp768
sg75
g740
sg68
(lp769
g61
(g82
g63
NtRp770
(dp771
g66
(dp772
g86
g87
ssg75
g766
sg68
(lp773
S'applications_parent'
p774
asbag61
(g82
g63
NtRp775
(dp776
g66
(dp777
g93
g94
ssg75
g766
sg68
(lp778
S':'
asbag61
(g82
g63
NtRp779
(dp780
g66
(dp781
sg75
g766
sg68
(lp782
g61
(g62
g63
NtRp783
(dp784
g66
(dp785
g74
I4
ssg75
g779
sg68
(lp786
S'/home/anil/bootstrap/web2py'
p787
asbasbasbag61
(g77
g63
NtRp788
(dp789
g66
(dp790
sg75
g740
sg68
(lp791
g61
(g82
g63
NtRp792
(dp793
g66
(dp794
g86
g87
ssg75
g788
sg68
(lp795
S'cmd_args'
p796
asbag61
(g82
g63
NtRp797
(dp798
g66
(dp799
g93
g94
ssg75
g788
sg68
(lp800
S':'
asbag61
(g82
g63
NtRp801
(dp802
g66
(dp803
sg75
g788
sg68
(lp804
g61
(g62
g63
NtRp805
(dp806
g66
(dp807
g74
I4
ssg75
g801
sg68
(lp808
g61
(g70
g63
NtRp809
(dp810
g66
(dp811
g74
I3
ssg75
Nsg68
(lp812
sbasbasbasbag61
(g77
g63
NtRp813
(dp814
g66
(dp815
sg75
g740
sg68
(lp816
g61
(g82
g63
NtRp817
(dp818
g66
(dp819
g86
g87
ssg75
g813
sg68
(lp820
S'cmd_options'
p821
asbag61
(g82
g63
NtRp822
(dp823
g66
(dp824
g93
g94
ssg75
g813
sg68
(lp825
S':'
asbag61
(g82
g63
NtRp826
(dp827
g66
(dp828
sg75
g813
sg68
(lp829
g61
(g62
g63
NtRp830
(dp831
g66
(dp832
g74
I4
ssg75
g826
sg68
(lp833
S"<Values at 0x936ef8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p834
asbasbasbag61
(g77
g63
NtRp835
(dp836
g66
(dp837
sg75
g740
sg68
(lp838
g61
(g82
g63
NtRp839
(dp840
g66
(dp841
g86
g87
ssg75
g835
sg68
(lp842
S'db_sessions'
p843
asbag61
(g82
g63
NtRp844
(dp845
g66
(dp846
g93
g94
ssg75
g835
sg68
(lp847
S':'
asbag61
(g82
g63
NtRp848
(dp849
g66
(dp850
sg75
g835
sg68
(lp851
g61
(g62
g63
NtRp852
(dp853
g66
(dp854
g74
I4
ssg75
g848
sg68
(lp855
S'set([])'
p856
asbasbasbag61
(g77
g63
NtRp857
(dp858
g66
(dp859
sg75
g740
sg68
(lp860
g61
(g82
g63
NtRp861
(dp862
g66
(dp863
g86
g87
ssg75
g857
sg68
(lp864
S'debugging'
p865
asbag61
(g82
g63
NtRp866
(dp867
g66
(dp868
g93
g94
ssg75
g857
sg68
(lp869
S':'
asbag61
(g82
g63
NtRp870
(dp871
g66
(dp872
sg75
g857
sg68
(lp873
g61
(g62
g63
NtRp874
(dp875
g66
(dp876
g74
I4
ssg75
g870
sg68
(lp877
g104
asbasbasbag61
(g77
g63
NtRp878
(dp879
g66
(dp880
sg75
g740
sg68
(lp881
g61
(g82
g63
NtRp882
(dp883
g66
(dp884
g86
g87
ssg75
g878
sg68
(lp885
S'gluon_parent'
p886
asbag61
(g82
g63
NtRp887
(dp888
g66
(dp889
g93
g94
ssg75
g878
sg68
(lp890
S':'
asbag61
(g82
g63
NtRp891
(dp892
g66
(dp893
sg75
g878
sg68
(lp894
g61
(g62
g63
NtRp895
(dp896
g66
(dp897
g74
I4
ssg75
g891
sg68
(lp898
S'/home/anil/bootstrap/web2py'
p899
asbasbasbag61
(g77
g63
NtRp900
(dp901
g66
(dp902
sg75
g740
sg68
(lp903
g61
(g82
g63
NtRp904
(dp905
g66
(dp906
g86
g87
ssg75
g900
sg68
(lp907
S'http_accept'
p908
asbag61
(g82
g63
NtRp909
(dp910
g66
(dp911
g93
g94
ssg75
g900
sg68
(lp912
S':'
asbag61
(g82
g63
NtRp913
(dp914
g66
(dp915
sg75
g900
sg68
(lp916
g61
(g62
g63
NtRp917
(dp918
g66
(dp919
g74
I4
ssg75
g913
sg68
(lp920
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p921
asbasbasbag61
(g77
g63
NtRp922
(dp923
g66
(dp924
sg75
g740
sg68
(lp925
g61
(g82
g63
NtRp926
(dp927
g66
(dp928
g86
g87
ssg75
g922
sg68
(lp929
S'http_accept_charset'
p930
asbag61
(g82
g63
NtRp931
(dp932
g66
(dp933
g93
g94
ssg75
g922
sg68
(lp934
S':'
asbag61
(g82
g63
NtRp935
(dp936
g66
(dp937
sg75
g922
sg68
(lp938
g61
(g62
g63
NtRp939
(dp940
g66
(dp941
g74
I4
ssg75
g935
sg68
(lp942
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p943
asbasbasbag61
(g77
g63
NtRp944
(dp945
g66
(dp946
sg75
g740
sg68
(lp947
g61
(g82
g63
NtRp948
(dp949
g66
(dp950
g86
g87
ssg75
g944
sg68
(lp951
S'http_accept_encoding'
p952
asbag61
(g82
g63
NtRp953
(dp954
g66
(dp955
g93
g94
ssg75
g944
sg68
(lp956
S':'
asbag61
(g82
g63
NtRp957
(dp958
g66
(dp959
sg75
g944
sg68
(lp960
g61
(g62
g63
NtRp961
(dp962
g66
(dp963
g74
I4
ssg75
g957
sg68
(lp964
S'gzip,deflate,sdch'
p965
asbasbasbag61
(g77
g63
NtRp966
(dp967
g66
(dp968
sg75
g740
sg68
(lp969
g61
(g82
g63
NtRp970
(dp971
g66
(dp972
g86
g87
ssg75
g966
sg68
(lp973
S'http_accept_language'
p974
asbag61
(g82
g63
NtRp975
(dp976
g66
(dp977
g93
g94
ssg75
g966
sg68
(lp978
S':'
asbag61
(g82
g63
NtRp979
(dp980
g66
(dp981
sg75
g966
sg68
(lp982
g61
(g62
g63
NtRp983
(dp984
g66
(dp985
g74
I4
ssg75
g979
sg68
(lp986
S'en-US,en;q=0.8'
p987
asbasbasbag61
(g77
g63
NtRp988
(dp989
g66
(dp990
sg75
g740
sg68
(lp991
g61
(g82
g63
NtRp992
(dp993
g66
(dp994
g86
g87
ssg75
g988
sg68
(lp995
S'http_cache_control'
p996
asbag61
(g82
g63
NtRp997
(dp998
g66
(dp999
g93
g94
ssg75
g988
sg68
(lp1000
S':'
asbag61
(g82
g63
NtRp1001
(dp1002
g66
(dp1003
sg75
g988
sg68
(lp1004
g61
(g62
g63
NtRp1005
(dp1006
g66
(dp1007
g74
I4
ssg75
g1001
sg68
(lp1008
S'max-age=0'
p1009
asbasbasbag61
(g77
g63
NtRp1010
(dp1011
g66
(dp1012
sg75
g740
sg68
(lp1013
g61
(g82
g63
NtRp1014
(dp1015
g66
(dp1016
g86
g87
ssg75
g1010
sg68
(lp1017
S'http_connection'
p1018
asbag61
(g82
g63
NtRp1019
(dp1020
g66
(dp1021
g93
g94
ssg75
g1010
sg68
(lp1022
S':'
asbag61
(g82
g63
NtRp1023
(dp1024
g66
(dp1025
sg75
g1010
sg68
(lp1026
g61
(g62
g63
NtRp1027
(dp1028
g66
(dp1029
g74
I4
ssg75
g1023
sg68
(lp1030
S'keep-alive'
p1031
asbasbasbag61
(g77
g63
NtRp1032
(dp1033
g66
(dp1034
sg75
g740
sg68
(lp1035
g61
(g82
g63
NtRp1036
(dp1037
g66
(dp1038
g86
g87
ssg75
g1032
sg68
(lp1039
S'http_cookie'
p1040
asbag61
(g82
g63
NtRp1041
(dp1042
g66
(dp1043
g93
g94
ssg75
g1032
sg68
(lp1044
S':'
asbag61
(g82
g63
NtRp1045
(dp1046
g66
(dp1047
sg75
g1032
sg68
(lp1048
g61
(g62
g63
NtRp1049
(dp1050
g66
(dp1051
g74
I4
ssg75
g1045
sg68
(lp1052
S'session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510; session_id_admin=127.0.0.1-41fa306f-ea56-4b11-957e-d6426bfa92ed'
p1053
asbasbasbag61
(g77
g63
NtRp1054
(dp1055
g66
(dp1056
sg75
g740
sg68
(lp1057
g61
(g82
g63
NtRp1058
(dp1059
g66
(dp1060
g86
g87
ssg75
g1054
sg68
(lp1061
S'http_host'
p1062
asbag61
(g82
g63
NtRp1063
(dp1064
g66
(dp1065
g93
g94
ssg75
g1054
sg68
(lp1066
S':'
asbag61
(g82
g63
NtRp1067
(dp1068
g66
(dp1069
sg75
g1054
sg68
(lp1070
g61
(g62
g63
NtRp1071
(dp1072
g66
(dp1073
g74
I4
ssg75
g1067
sg68
(lp1074
S'127.0.0.1:8000'
p1075
asbasbasbag61
(g77
g63
NtRp1076
(dp1077
g66
(dp1078
sg75
g740
sg68
(lp1079
g61
(g82
g63
NtRp1080
(dp1081
g66
(dp1082
g86
g87
ssg75
g1076
sg68
(lp1083
S'http_referer'
p1084
asbag61
(g82
g63
NtRp1085
(dp1086
g66
(dp1087
g93
g94
ssg75
g1076
sg68
(lp1088
S':'
asbag61
(g82
g63
NtRp1089
(dp1090
g66
(dp1091
sg75
g1076
sg68
(lp1092
g61
(g62
g63
NtRp1093
(dp1094
g66
(dp1095
g74
I4
ssg75
g1089
sg68
(lp1096
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1097
asbasbasbag61
(g77
g63
NtRp1098
(dp1099
g66
(dp1100
sg75
g740
sg68
(lp1101
g61
(g82
g63
NtRp1102
(dp1103
g66
(dp1104
g86
g87
ssg75
g1098
sg68
(lp1105
S'http_user_agent'
p1106
asbag61
(g82
g63
NtRp1107
(dp1108
g66
(dp1109
g93
g94
ssg75
g1098
sg68
(lp1110
S':'
asbag61
(g82
g63
NtRp1111
(dp1112
g66
(dp1113
sg75
g1098
sg68
(lp1114
g61
(g62
g63
NtRp1115
(dp1116
g66
(dp1117
g74
I4
ssg75
g1111
sg68
(lp1118
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1119
asbasbasbag61
(g77
g63
NtRp1120
(dp1121
g66
(dp1122
sg75
g740
sg68
(lp1123
g61
(g82
g63
NtRp1124
(dp1125
g66
(dp1126
g86
g87
ssg75
g1120
sg68
(lp1127
S'is_jython'
p1128
asbag61
(g82
g63
NtRp1129
(dp1130
g66
(dp1131
g93
g94
ssg75
g1120
sg68
(lp1132
S':'
asbag61
(g82
g63
NtRp1133
(dp1134
g66
(dp1135
sg75
g1120
sg68
(lp1136
g61
(g62
g63
NtRp1137
(dp1138
g66
(dp1139
g74
I4
ssg75
g1133
sg68
(lp1140
g104
asbasbasbag61
(g77
g63
NtRp1141
(dp1142
g66
(dp1143
sg75
g740
sg68
(lp1144
g61
(g82
g63
NtRp1145
(dp1146
g66
(dp1147
g86
g87
ssg75
g1141
sg68
(lp1148
S'is_pypy'
p1149
asbag61
(g82
g63
NtRp1150
(dp1151
g66
(dp1152
g93
g94
ssg75
g1141
sg68
(lp1153
S':'
asbag61
(g82
g63
NtRp1154
(dp1155
g66
(dp1156
sg75
g1141
sg68
(lp1157
g61
(g62
g63
NtRp1158
(dp1159
g66
(dp1160
g74
I4
ssg75
g1154
sg68
(lp1161
g104
asbasbasbag61
(g77
g63
NtRp1162
(dp1163
g66
(dp1164
sg75
g740
sg68
(lp1165
g61
(g82
g63
NtRp1166
(dp1167
g66
(dp1168
g86
g87
ssg75
g1162
sg68
(lp1169
S'local_hosts'
p1170
asbag61
(g82
g63
NtRp1171
(dp1172
g66
(dp1173
g93
g94
ssg75
g1162
sg68
(lp1174
S':'
asbag61
(g82
g63
NtRp1175
(dp1176
g66
(dp1177
sg75
g1162
sg68
(lp1178
g61
(g62
g63
NtRp1179
(dp1180
g66
(dp1181
g74
I4
ssg75
g1175
sg68
(lp1182
g61
(g70
g63
NtRp1183
(dp1184
g66
(dp1185
g74
I3
ssg75
Nsg68
(lp1186
g61
(g77
g63
NtRp1187
(dp1188
g66
(dp1189
sg75
g1183
sg68
(lp1190
g61
(g82
g63
NtRp1191
(dp1192
g66
(dp1193
sg75
g1187
sg68
(lp1194
g61
(g62
g63
NtRp1195
(dp1196
g66
(dp1197
g74
I3
ssg75
g1191
sg68
(lp1198
S'::1'
p1199
asbasbasbag61
(g77
g63
NtRp1200
(dp1201
g66
(dp1202
sg75
g1183
sg68
(lp1203
g61
(g82
g63
NtRp1204
(dp1205
g66
(dp1206
sg75
g1200
sg68
(lp1207
g61
(g62
g63
NtRp1208
(dp1209
g66
(dp1210
g74
I3
ssg75
g1204
sg68
(lp1211
S'127.0.1.1'
p1212
asbasbasbag61
(g77
g63
NtRp1213
(dp1214
g66
(dp1215
sg75
g1183
sg68
(lp1216
g61
(g82
g63
NtRp1217
(dp1218
g66
(dp1219
sg75
g1213
sg68
(lp1220
g61
(g62
g63
NtRp1221
(dp1222
g66
(dp1223
g74
I3
ssg75
g1217
sg68
(lp1224
S'::ffff:127.0.0.1'
p1225
asbasbasbag61
(g77
g63
NtRp1226
(dp1227
g66
(dp1228
sg75
g1183
sg68
(lp1229
g61
(g82
g63
NtRp1230
(dp1231
g66
(dp1232
sg75
g1226
sg68
(lp1233
g61
(g62
g63
NtRp1234
(dp1235
g66
(dp1236
g74
I3
ssg75
g1230
sg68
(lp1237
S'127.0.0.1'
p1238
asbasbasbag61
(g77
g63
NtRp1239
(dp1240
g66
(dp1241
sg75
g1183
sg68
(lp1242
g61
(g82
g63
NtRp1243
(dp1244
g66
(dp1245
sg75
g1239
sg68
(lp1246
g61
(g62
g63
NtRp1247
(dp1248
g66
(dp1249
g74
I3
ssg75
g1243
sg68
(lp1250
S'anil-Inspiron-1525'
p1251
asbasbasbasbasbasbasbag61
(g77
g63
NtRp1252
(dp1253
g66
(dp1254
sg75
g740
sg68
(lp1255
g61
(g82
g63
NtRp1256
(dp1257
g66
(dp1258
g86
g87
ssg75
g1252
sg68
(lp1259
S'path_info'
p1260
asbag61
(g82
g63
NtRp1261
(dp1262
g66
(dp1263
g93
g94
ssg75
g1252
sg68
(lp1264
S':'
asbag61
(g82
g63
NtRp1265
(dp1266
g66
(dp1267
sg75
g1252
sg68
(lp1268
g61
(g62
g63
NtRp1269
(dp1270
g66
(dp1271
g74
I4
ssg75
g1265
sg68
(lp1272
S'/DEV_bootstrap_ch/default/duplicate/project/experiment.project/1/sample.experiment/1/2'
p1273
asbasbasbag61
(g77
g63
NtRp1274
(dp1275
g66
(dp1276
sg75
g740
sg68
(lp1277
g61
(g82
g63
NtRp1278
(dp1279
g66
(dp1280
g86
g87
ssg75
g1274
sg68
(lp1281
S'query_string'
p1282
asbag61
(g82
g63
NtRp1283
(dp1284
g66
(dp1285
g93
g94
ssg75
g1274
sg68
(lp1286
S':'
asbag61
(g82
g63
NtRp1287
(dp1288
g66
(dp1289
sg75
g1274
sg68
(lp1290
g61
(g62
g63
NtRp1291
(dp1292
g66
(dp1293
g74
I4
ssg75
g1287
sg68
(lp1294
S''
asbasbasbag61
(g77
g63
NtRp1295
(dp1296
g66
(dp1297
sg75
g740
sg68
(lp1298
g61
(g82
g63
NtRp1299
(dp1300
g66
(dp1301
g86
g87
ssg75
g1295
sg68
(lp1302
S'remote_addr'
p1303
asbag61
(g82
g63
NtRp1304
(dp1305
g66
(dp1306
g93
g94
ssg75
g1295
sg68
(lp1307
S':'
asbag61
(g82
g63
NtRp1308
(dp1309
g66
(dp1310
sg75
g1295
sg68
(lp1311
g61
(g62
g63
NtRp1312
(dp1313
g66
(dp1314
g74
I4
ssg75
g1308
sg68
(lp1315
g291
asbasbasbag61
(g77
g63
NtRp1316
(dp1317
g66
(dp1318
sg75
g740
sg68
(lp1319
g61
(g82
g63
NtRp1320
(dp1321
g66
(dp1322
g86
g87
ssg75
g1316
sg68
(lp1323
S'remote_port'
p1324
asbag61
(g82
g63
NtRp1325
(dp1326
g66
(dp1327
g93
g94
ssg75
g1316
sg68
(lp1328
S':'
asbag61
(g82
g63
NtRp1329
(dp1330
g66
(dp1331
sg75
g1316
sg68
(lp1332
g61
(g62
g63
NtRp1333
(dp1334
g66
(dp1335
g74
I4
ssg75
g1329
sg68
(lp1336
S'58184'
p1337
asbasbasbag61
(g77
g63
NtRp1338
(dp1339
g66
(dp1340
sg75
g740
sg68
(lp1341
g61
(g82
g63
NtRp1342
(dp1343
g66
(dp1344
g86
g87
ssg75
g1338
sg68
(lp1345
S'request_method'
p1346
asbag61
(g82
g63
NtRp1347
(dp1348
g66
(dp1349
g93
g94
ssg75
g1338
sg68
(lp1350
S':'
asbag61
(g82
g63
NtRp1351
(dp1352
g66
(dp1353
sg75
g1338
sg68
(lp1354
g61
(g62
g63
NtRp1355
(dp1356
g66
(dp1357
g74
I4
ssg75
g1351
sg68
(lp1358
S'GET'
p1359
asbasbasbag61
(g77
g63
NtRp1360
(dp1361
g66
(dp1362
sg75
g740
sg68
(lp1363
g61
(g82
g63
NtRp1364
(dp1365
g66
(dp1366
g86
g87
ssg75
g1360
sg68
(lp1367
S'request_uri'
p1368
asbag61
(g82
g63
NtRp1369
(dp1370
g66
(dp1371
g93
g94
ssg75
g1360
sg68
(lp1372
S':'
asbag61
(g82
g63
NtRp1373
(dp1374
g66
(dp1375
sg75
g1360
sg68
(lp1376
g61
(g62
g63
NtRp1377
(dp1378
g66
(dp1379
g74
I4
ssg75
g1373
sg68
(lp1380
g1273
asbasbasbag61
(g77
g63
NtRp1381
(dp1382
g66
(dp1383
sg75
g740
sg68
(lp1384
g61
(g82
g63
NtRp1385
(dp1386
g66
(dp1387
g86
g87
ssg75
g1381
sg68
(lp1388
S'script_name'
p1389
asbag61
(g82
g63
NtRp1390
(dp1391
g66
(dp1392
g93
g94
ssg75
g1381
sg68
(lp1393
S':'
asbag61
(g82
g63
NtRp1394
(dp1395
g66
(dp1396
sg75
g1381
sg68
(lp1397
g61
(g62
g63
NtRp1398
(dp1399
g66
(dp1400
g74
I4
ssg75
g1394
sg68
(lp1401
S''
asbasbasbag61
(g77
g63
NtRp1402
(dp1403
g66
(dp1404
sg75
g740
sg68
(lp1405
g61
(g82
g63
NtRp1406
(dp1407
g66
(dp1408
g86
g87
ssg75
g1402
sg68
(lp1409
S'server_name'
p1410
asbag61
(g82
g63
NtRp1411
(dp1412
g66
(dp1413
g93
g94
ssg75
g1402
sg68
(lp1414
S':'
asbag61
(g82
g63
NtRp1415
(dp1416
g66
(dp1417
sg75
g1402
sg68
(lp1418
g61
(g62
g63
NtRp1419
(dp1420
g66
(dp1421
g74
I4
ssg75
g1415
sg68
(lp1422
S'anil-Inspiron-1525'
p1423
asbasbasbag61
(g77
g63
NtRp1424
(dp1425
g66
(dp1426
sg75
g740
sg68
(lp1427
g61
(g82
g63
NtRp1428
(dp1429
g66
(dp1430
g86
g87
ssg75
g1424
sg68
(lp1431
S'server_port'
p1432
asbag61
(g82
g63
NtRp1433
(dp1434
g66
(dp1435
g93
g94
ssg75
g1424
sg68
(lp1436
S':'
asbag61
(g82
g63
NtRp1437
(dp1438
g66
(dp1439
sg75
g1424
sg68
(lp1440
g61
(g62
g63
NtRp1441
(dp1442
g66
(dp1443
g74
I4
ssg75
g1437
sg68
(lp1444
S'8000'
p1445
asbasbasbag61
(g77
g63
NtRp1446
(dp1447
g66
(dp1448
sg75
g740
sg68
(lp1449
g61
(g82
g63
NtRp1450
(dp1451
g66
(dp1452
g86
g87
ssg75
g1446
sg68
(lp1453
S'server_protocol'
p1454
asbag61
(g82
g63
NtRp1455
(dp1456
g66
(dp1457
g93
g94
ssg75
g1446
sg68
(lp1458
S':'
asbag61
(g82
g63
NtRp1459
(dp1460
g66
(dp1461
sg75
g1446
sg68
(lp1462
g61
(g62
g63
NtRp1463
(dp1464
g66
(dp1465
g74
I4
ssg75
g1459
sg68
(lp1466
S'HTTP/1.1'
p1467
asbasbasbag61
(g77
g63
NtRp1468
(dp1469
g66
(dp1470
sg75
g740
sg68
(lp1471
g61
(g82
g63
NtRp1472
(dp1473
g66
(dp1474
g86
g87
ssg75
g1468
sg68
(lp1475
S'server_software'
p1476
asbag61
(g82
g63
NtRp1477
(dp1478
g66
(dp1479
g93
g94
ssg75
g1468
sg68
(lp1480
S':'
asbag61
(g82
g63
NtRp1481
(dp1482
g66
(dp1483
sg75
g1468
sg68
(lp1484
g61
(g62
g63
NtRp1485
(dp1486
g66
(dp1487
g74
I4
ssg75
g1481
sg68
(lp1488
S'Rocket 1.2.6'
p1489
asbasbasbag61
(g77
g63
NtRp1490
(dp1491
g66
(dp1492
sg75
g740
sg68
(lp1493
g61
(g82
g63
NtRp1494
(dp1495
g66
(dp1496
g86
g87
ssg75
g1490
sg68
(lp1497
S'web2py_path'
p1498
asbag61
(g82
g63
NtRp1499
(dp1500
g66
(dp1501
g93
g94
ssg75
g1490
sg68
(lp1502
S':'
asbag61
(g82
g63
NtRp1503
(dp1504
g66
(dp1505
sg75
g1490
sg68
(lp1506
g61
(g62
g63
NtRp1507
(dp1508
g66
(dp1509
g74
I4
ssg75
g1503
sg68
(lp1510
g787
asbasbasbag61
(g77
g63
NtRp1511
(dp1512
g66
(dp1513
sg75
g740
sg68
(lp1514
g61
(g82
g63
NtRp1515
(dp1516
g66
(dp1517
g86
g87
ssg75
g1511
sg68
(lp1518
S'web2py_version'
p1519
asbag61
(g82
g63
NtRp1520
(dp1521
g66
(dp1522
g93
g94
ssg75
g1511
sg68
(lp1523
S':'
asbag61
(g82
g63
NtRp1524
(dp1525
g66
(dp1526
sg75
g1511
sg68
(lp1527
g61
(g62
g63
NtRp1528
(dp1529
g66
(dp1530
g74
I4
ssg75
g1524
sg68
(lp1531
g61
(g70
g63
NtRp1532
(dp1533
g66
(dp1534
g74
I3
ssg75
Nsg68
(lp1535
g61
(g77
g63
NtRp1536
(dp1537
g66
(dp1538
sg75
g1532
sg68
(lp1539
g61
(g82
g63
NtRp1540
(dp1541
g66
(dp1542
sg75
g1536
sg68
(lp1543
g61
(g62
g63
NtRp1544
(dp1545
g66
(dp1546
g74
I3
ssg75
g1540
sg68
(lp1547
S'2'
asbasbasbag61
(g77
g63
NtRp1548
(dp1549
g66
(dp1550
sg75
g1532
sg68
(lp1551
g61
(g82
g63
NtRp1552
(dp1553
g66
(dp1554
sg75
g1548
sg68
(lp1555
g61
(g62
g63
NtRp1556
(dp1557
g66
(dp1558
g74
I3
ssg75
g1552
sg68
(lp1559
S'3'
asbasbasbag61
(g77
g63
NtRp1560
(dp1561
g66
(dp1562
sg75
g1532
sg68
(lp1563
g61
(g82
g63
NtRp1564
(dp1565
g66
(dp1566
sg75
g1560
sg68
(lp1567
g61
(g62
g63
NtRp1568
(dp1569
g66
(dp1570
g74
I3
ssg75
g1564
sg68
(lp1571
S'2'
asbasbasbag61
(g77
g63
NtRp1572
(dp1573
g66
(dp1574
sg75
g1532
sg68
(lp1575
g61
(g82
g63
NtRp1576
(dp1577
g66
(dp1578
sg75
g1572
sg68
(lp1579
g61
(g62
g63
NtRp1580
(dp1581
g66
(dp1582
g74
I3
ssg75
g1576
sg68
(lp1583
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1584
asbasbasbag61
(g77
g63
NtRp1585
(dp1586
g66
(dp1587
sg75
g1532
sg68
(lp1588
g61
(g82
g63
NtRp1589
(dp1590
g66
(dp1591
sg75
g1585
sg68
(lp1592
g61
(g62
g63
NtRp1593
(dp1594
g66
(dp1595
g74
I3
ssg75
g1589
sg68
(lp1596
S'stable'
p1597
asbasbasbasbasbasbasbag61
(g77
g63
NtRp1598
(dp1599
g66
(dp1600
sg75
g740
sg68
(lp1601
g61
(g82
g63
NtRp1602
(dp1603
g66
(dp1604
g86
g87
ssg75
g1598
sg68
(lp1605
S'wsgi_errors'
p1606
asbag61
(g82
g63
NtRp1607
(dp1608
g66
(dp1609
g93
g94
ssg75
g1598
sg68
(lp1610
S':'
asbag61
(g82
g63
NtRp1611
(dp1612
g66
(dp1613
sg75
g1598
sg68
(lp1614
g61
(g62
g63
NtRp1615
(dp1616
g66
(dp1617
g74
I4
ssg75
g1611
sg68
(lp1618
S"<open file '<stderr>', mode 'w' at 0xb72930d0>"
p1619
asbasbasbag61
(g77
g63
NtRp1620
(dp1621
g66
(dp1622
sg75
g740
sg68
(lp1623
g61
(g82
g63
NtRp1624
(dp1625
g66
(dp1626
g86
g87
ssg75
g1620
sg68
(lp1627
S'wsgi_file_wrapper'
p1628
asbag61
(g82
g63
NtRp1629
(dp1630
g66
(dp1631
g93
g94
ssg75
g1620
sg68
(lp1632
S':'
asbag61
(g82
g63
NtRp1633
(dp1634
g66
(dp1635
sg75
g1620
sg68
(lp1636
g61
(g62
g63
NtRp1637
(dp1638
g66
(dp1639
g74
I4
ssg75
g1633
sg68
(lp1640
S'<class wsgiref.util.FileWrapper at 0x92f7bcc>'
p1641
asbasbasbag61
(g77
g63
NtRp1642
(dp1643
g66
(dp1644
sg75
g740
sg68
(lp1645
g61
(g82
g63
NtRp1646
(dp1647
g66
(dp1648
g86
g87
ssg75
g1642
sg68
(lp1649
S'wsgi_input'
p1650
asbag61
(g82
g63
NtRp1651
(dp1652
g66
(dp1653
g93
g94
ssg75
g1642
sg68
(lp1654
S':'
asbag61
(g82
g63
NtRp1655
(dp1656
g66
(dp1657
sg75
g1642
sg68
(lp1658
g61
(g62
g63
NtRp1659
(dp1660
g66
(dp1661
g74
I4
ssg75
g1655
sg68
(lp1662
S'<socket._fileobject object at 0xae51c76c>'
p1663
asbasbasbag61
(g77
g63
NtRp1664
(dp1665
g66
(dp1666
sg75
g740
sg68
(lp1667
g61
(g82
g63
NtRp1668
(dp1669
g66
(dp1670
g86
g87
ssg75
g1664
sg68
(lp1671
S'wsgi_multiprocess'
p1672
asbag61
(g82
g63
NtRp1673
(dp1674
g66
(dp1675
g93
g94
ssg75
g1664
sg68
(lp1676
S':'
asbag61
(g82
g63
NtRp1677
(dp1678
g66
(dp1679
sg75
g1664
sg68
(lp1680
g61
(g62
g63
NtRp1681
(dp1682
g66
(dp1683
g74
I4
ssg75
g1677
sg68
(lp1684
g104
asbasbasbag61
(g77
g63
NtRp1685
(dp1686
g66
(dp1687
sg75
g740
sg68
(lp1688
g61
(g82
g63
NtRp1689
(dp1690
g66
(dp1691
g86
g87
ssg75
g1685
sg68
(lp1692
S'wsgi_multithread'
p1693
asbag61
(g82
g63
NtRp1694
(dp1695
g66
(dp1696
g93
g94
ssg75
g1685
sg68
(lp1697
S':'
asbag61
(g82
g63
NtRp1698
(dp1699
g66
(dp1700
sg75
g1685
sg68
(lp1701
g61
(g62
g63
NtRp1702
(dp1703
g66
(dp1704
g74
I4
ssg75
g1698
sg68
(lp1705
S'True'
p1706
asbasbasbag61
(g77
g63
NtRp1707
(dp1708
g66
(dp1709
sg75
g740
sg68
(lp1710
g61
(g82
g63
NtRp1711
(dp1712
g66
(dp1713
g86
g87
ssg75
g1707
sg68
(lp1714
S'wsgi_run_once'
p1715
asbag61
(g82
g63
NtRp1716
(dp1717
g66
(dp1718
g93
g94
ssg75
g1707
sg68
(lp1719
S':'
asbag61
(g82
g63
NtRp1720
(dp1721
g66
(dp1722
sg75
g1707
sg68
(lp1723
g61
(g62
g63
NtRp1724
(dp1725
g66
(dp1726
g74
I4
ssg75
g1720
sg68
(lp1727
g104
asbasbasbag61
(g77
g63
NtRp1728
(dp1729
g66
(dp1730
sg75
g740
sg68
(lp1731
g61
(g82
g63
NtRp1732
(dp1733
g66
(dp1734
g86
g87
ssg75
g1728
sg68
(lp1735
S'wsgi_url_scheme'
p1736
asbag61
(g82
g63
NtRp1737
(dp1738
g66
(dp1739
g93
g94
ssg75
g1728
sg68
(lp1740
S':'
asbag61
(g82
g63
NtRp1741
(dp1742
g66
(dp1743
sg75
g1728
sg68
(lp1744
g61
(g62
g63
NtRp1745
(dp1746
g66
(dp1747
g74
I4
ssg75
g1741
sg68
(lp1748
S'http'
p1749
asbasbasbag61
(g77
g63
NtRp1750
(dp1751
g66
(dp1752
sg75
g740
sg68
(lp1753
g61
(g82
g63
NtRp1754
(dp1755
g66
(dp1756
g86
g87
ssg75
g1750
sg68
(lp1757
S'wsgi_version'
p1758
asbag61
(g82
g63
NtRp1759
(dp1760
g66
(dp1761
g93
g94
ssg75
g1750
sg68
(lp1762
S':'
asbag61
(g82
g63
NtRp1763
(dp1764
g66
(dp1765
sg75
g1750
sg68
(lp1766
g61
(g62
g63
NtRp1767
(dp1768
g66
(dp1769
g74
I4
ssg75
g1763
sg68
(lp1770
g61
(g70
g63
NtRp1771
(dp1772
g66
(dp1773
g74
I3
ssg75
Nsg68
(lp1774
g61
(g77
g63
NtRp1775
(dp1776
g66
(dp1777
sg75
g1771
sg68
(lp1778
g61
(g82
g63
NtRp1779
(dp1780
g66
(dp1781
sg75
g1775
sg68
(lp1782
g61
(g62
g63
NtRp1783
(dp1784
g66
(dp1785
g74
I3
ssg75
g1779
sg68
(lp1786
S'1'
asbasbasbag61
(g77
g63
NtRp1787
(dp1788
g66
(dp1789
sg75
g1771
sg68
(lp1790
g61
(g82
g63
NtRp1791
(dp1792
g66
(dp1793
sg75
g1787
sg68
(lp1794
g61
(g62
g63
NtRp1795
(dp1796
g66
(dp1797
g74
I3
ssg75
g1791
sg68
(lp1798
S'0'
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp1799
(dp1800
g66
(dp1801
sg75
g71
sg68
(lp1802
g61
(g82
g63
NtRp1803
(dp1804
g66
(dp1805
g86
g87
ssg75
g1799
sg68
(lp1806
S'extension'
p1807
asbag61
(g82
g63
NtRp1808
(dp1809
g66
(dp1810
g93
g94
ssg75
g1799
sg68
(lp1811
S':'
asbag61
(g82
g63
NtRp1812
(dp1813
g66
(dp1814
sg75
g1799
sg68
(lp1815
g61
(g62
g63
NtRp1816
(dp1817
g66
(dp1818
g74
I5
ssg75
g1812
sg68
(lp1819
S'html'
p1820
asbasbasbag61
(g77
g63
NtRp1821
(dp1822
g66
(dp1823
sg75
g71
sg68
(lp1824
g61
(g82
g63
NtRp1825
(dp1826
g66
(dp1827
g86
g87
ssg75
g1821
sg68
(lp1828
S'folder'
p1829
asbag61
(g82
g63
NtRp1830
(dp1831
g66
(dp1832
g93
g94
ssg75
g1821
sg68
(lp1833
S':'
asbag61
(g82
g63
NtRp1834
(dp1835
g66
(dp1836
sg75
g1821
sg68
(lp1837
g61
(g62
g63
NtRp1838
(dp1839
g66
(dp1840
g74
I5
ssg75
g1834
sg68
(lp1841
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1842
asbasbasbag61
(g77
g63
NtRp1843
(dp1844
g66
(dp1845
sg75
g71
sg68
(lp1846
g61
(g82
g63
NtRp1847
(dp1848
g66
(dp1849
g86
g87
ssg75
g1843
sg68
(lp1850
S'function'
p1851
asbag61
(g82
g63
NtRp1852
(dp1853
g66
(dp1854
g93
g94
ssg75
g1843
sg68
(lp1855
S':'
asbag61
(g82
g63
NtRp1856
(dp1857
g66
(dp1858
sg75
g1843
sg68
(lp1859
g61
(g62
g63
NtRp1860
(dp1861
g66
(dp1862
g74
I5
ssg75
g1856
sg68
(lp1863
S'duplicate'
p1864
asbasbasbag61
(g77
g63
NtRp1865
(dp1866
g66
(dp1867
sg75
g71
sg68
(lp1868
g61
(g82
g63
NtRp1869
(dp1870
g66
(dp1871
g86
g87
ssg75
g1865
sg68
(lp1872
S'get_vars'
p1873
asbag61
(g82
g63
NtRp1874
(dp1875
g66
(dp1876
g93
g94
ssg75
g1865
sg68
(lp1877
S':'
asbag61
(g82
g63
NtRp1878
(dp1879
g66
(dp1880
sg75
g1865
sg68
(lp1881
g61
(g62
g63
NtRp1882
(dp1883
g66
(dp1884
g74
I5
ssg75
g1878
sg68
(lp1885
g61
(g70
g63
NtRp1886
(dp1887
g66
(dp1888
g74
I4
ssg75
Nsg68
(lp1889
sbasbasbasbag61
(g77
g63
NtRp1890
(dp1891
g66
(dp1892
sg75
g71
sg68
(lp1893
g61
(g82
g63
NtRp1894
(dp1895
g66
(dp1896
g86
g87
ssg75
g1890
sg68
(lp1897
S'global_settings'
p1898
asbag61
(g82
g63
NtRp1899
(dp1900
g66
(dp1901
g93
g94
ssg75
g1890
sg68
(lp1902
S':'
asbag61
(g82
g63
NtRp1903
(dp1904
g66
(dp1905
sg75
g1890
sg68
(lp1906
g61
(g62
g63
NtRp1907
(dp1908
g66
(dp1909
g74
I5
ssg75
g1903
sg68
(lp1910
g61
(g70
g63
NtRp1911
(dp1912
g66
(dp1913
g74
I4
ssg75
Nsg68
(lp1914
g61
(g77
g63
NtRp1915
(dp1916
g66
(dp1917
sg75
g1911
sg68
(lp1918
g61
(g82
g63
NtRp1919
(dp1920
g66
(dp1921
g86
g87
ssg75
g1915
sg68
(lp1922
g752
asbag61
(g82
g63
NtRp1923
(dp1924
g66
(dp1925
g93
g94
ssg75
g1915
sg68
(lp1926
S':'
asbag61
(g82
g63
NtRp1927
(dp1928
g66
(dp1929
sg75
g1915
sg68
(lp1930
g61
(g62
g63
NtRp1931
(dp1932
g66
(dp1933
g74
I4
ssg75
g1927
sg68
(lp1934
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1935
asbasbasbag61
(g77
g63
NtRp1936
(dp1937
g66
(dp1938
sg75
g1911
sg68
(lp1939
g61
(g82
g63
NtRp1940
(dp1941
g66
(dp1942
g86
g87
ssg75
g1936
sg68
(lp1943
g774
asbag61
(g82
g63
NtRp1944
(dp1945
g66
(dp1946
g93
g94
ssg75
g1936
sg68
(lp1947
S':'
asbag61
(g82
g63
NtRp1948
(dp1949
g66
(dp1950
sg75
g1936
sg68
(lp1951
g61
(g62
g63
NtRp1952
(dp1953
g66
(dp1954
g74
I4
ssg75
g1948
sg68
(lp1955
g787
asbasbasbag61
(g77
g63
NtRp1956
(dp1957
g66
(dp1958
sg75
g1911
sg68
(lp1959
g61
(g82
g63
NtRp1960
(dp1961
g66
(dp1962
g86
g87
ssg75
g1956
sg68
(lp1963
g796
asbag61
(g82
g63
NtRp1964
(dp1965
g66
(dp1966
g93
g94
ssg75
g1956
sg68
(lp1967
S':'
asbag61
(g82
g63
NtRp1968
(dp1969
g66
(dp1970
sg75
g1956
sg68
(lp1971
g61
(g62
g63
NtRp1972
(dp1973
g66
(dp1974
g74
I4
ssg75
g1968
sg68
(lp1975
g61
(g70
g63
NtRp1976
(dp1977
g66
(dp1978
g74
I3
ssg75
Nsg68
(lp1979
sbasbasbasbag61
(g77
g63
NtRp1980
(dp1981
g66
(dp1982
sg75
g1911
sg68
(lp1983
g61
(g82
g63
NtRp1984
(dp1985
g66
(dp1986
g86
g87
ssg75
g1980
sg68
(lp1987
g821
asbag61
(g82
g63
NtRp1988
(dp1989
g66
(dp1990
g93
g94
ssg75
g1980
sg68
(lp1991
S':'
asbag61
(g82
g63
NtRp1992
(dp1993
g66
(dp1994
sg75
g1980
sg68
(lp1995
g61
(g62
g63
NtRp1996
(dp1997
g66
(dp1998
g74
I4
ssg75
g1992
sg68
(lp1999
S"<Values at 0x936ef8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2000
asbasbasbag61
(g77
g63
NtRp2001
(dp2002
g66
(dp2003
sg75
g1911
sg68
(lp2004
g61
(g82
g63
NtRp2005
(dp2006
g66
(dp2007
g86
g87
ssg75
g2001
sg68
(lp2008
g843
asbag61
(g82
g63
NtRp2009
(dp2010
g66
(dp2011
g93
g94
ssg75
g2001
sg68
(lp2012
S':'
asbag61
(g82
g63
NtRp2013
(dp2014
g66
(dp2015
sg75
g2001
sg68
(lp2016
g61
(g62
g63
NtRp2017
(dp2018
g66
(dp2019
g74
I4
ssg75
g2013
sg68
(lp2020
S'set([])'
p2021
asbasbasbag61
(g77
g63
NtRp2022
(dp2023
g66
(dp2024
sg75
g1911
sg68
(lp2025
g61
(g82
g63
NtRp2026
(dp2027
g66
(dp2028
g86
g87
ssg75
g2022
sg68
(lp2029
g865
asbag61
(g82
g63
NtRp2030
(dp2031
g66
(dp2032
g93
g94
ssg75
g2022
sg68
(lp2033
S':'
asbag61
(g82
g63
NtRp2034
(dp2035
g66
(dp2036
sg75
g2022
sg68
(lp2037
g61
(g62
g63
NtRp2038
(dp2039
g66
(dp2040
g74
I4
ssg75
g2034
sg68
(lp2041
g104
asbasbasbag61
(g77
g63
NtRp2042
(dp2043
g66
(dp2044
sg75
g1911
sg68
(lp2045
g61
(g82
g63
NtRp2046
(dp2047
g66
(dp2048
g86
g87
ssg75
g2042
sg68
(lp2049
g886
asbag61
(g82
g63
NtRp2050
(dp2051
g66
(dp2052
g93
g94
ssg75
g2042
sg68
(lp2053
S':'
asbag61
(g82
g63
NtRp2054
(dp2055
g66
(dp2056
sg75
g2042
sg68
(lp2057
g61
(g62
g63
NtRp2058
(dp2059
g66
(dp2060
g74
I4
ssg75
g2054
sg68
(lp2061
g899
asbasbasbag61
(g77
g63
NtRp2062
(dp2063
g66
(dp2064
sg75
g1911
sg68
(lp2065
g61
(g82
g63
NtRp2066
(dp2067
g66
(dp2068
g86
g87
ssg75
g2062
sg68
(lp2069
g1128
asbag61
(g82
g63
NtRp2070
(dp2071
g66
(dp2072
g93
g94
ssg75
g2062
sg68
(lp2073
S':'
asbag61
(g82
g63
NtRp2074
(dp2075
g66
(dp2076
sg75
g2062
sg68
(lp2077
g61
(g62
g63
NtRp2078
(dp2079
g66
(dp2080
g74
I4
ssg75
g2074
sg68
(lp2081
g104
asbasbasbag61
(g77
g63
NtRp2082
(dp2083
g66
(dp2084
sg75
g1911
sg68
(lp2085
g61
(g82
g63
NtRp2086
(dp2087
g66
(dp2088
g86
g87
ssg75
g2082
sg68
(lp2089
g1149
asbag61
(g82
g63
NtRp2090
(dp2091
g66
(dp2092
g93
g94
ssg75
g2082
sg68
(lp2093
S':'
asbag61
(g82
g63
NtRp2094
(dp2095
g66
(dp2096
sg75
g2082
sg68
(lp2097
g61
(g62
g63
NtRp2098
(dp2099
g66
(dp2100
g74
I4
ssg75
g2094
sg68
(lp2101
g104
asbasbasbag61
(g77
g63
NtRp2102
(dp2103
g66
(dp2104
sg75
g1911
sg68
(lp2105
g61
(g82
g63
NtRp2106
(dp2107
g66
(dp2108
g86
g87
ssg75
g2102
sg68
(lp2109
g1170
asbag61
(g82
g63
NtRp2110
(dp2111
g66
(dp2112
g93
g94
ssg75
g2102
sg68
(lp2113
S':'
asbag61
(g82
g63
NtRp2114
(dp2115
g66
(dp2116
sg75
g2102
sg68
(lp2117
g61
(g62
g63
NtRp2118
(dp2119
g66
(dp2120
g74
I4
ssg75
g2114
sg68
(lp2121
g61
(g70
g63
NtRp2122
(dp2123
g66
(dp2124
g74
I3
ssg75
Nsg68
(lp2125
g61
(g77
g63
NtRp2126
(dp2127
g66
(dp2128
sg75
g2122
sg68
(lp2129
g61
(g82
g63
NtRp2130
(dp2131
g66
(dp2132
sg75
g2126
sg68
(lp2133
g61
(g62
g63
NtRp2134
(dp2135
g66
(dp2136
g74
I3
ssg75
g2130
sg68
(lp2137
g1199
asbasbasbag61
(g77
g63
NtRp2138
(dp2139
g66
(dp2140
sg75
g2122
sg68
(lp2141
g61
(g82
g63
NtRp2142
(dp2143
g66
(dp2144
sg75
g2138
sg68
(lp2145
g61
(g62
g63
NtRp2146
(dp2147
g66
(dp2148
g74
I3
ssg75
g2142
sg68
(lp2149
g1212
asbasbasbag61
(g77
g63
NtRp2150
(dp2151
g66
(dp2152
sg75
g2122
sg68
(lp2153
g61
(g82
g63
NtRp2154
(dp2155
g66
(dp2156
sg75
g2150
sg68
(lp2157
g61
(g62
g63
NtRp2158
(dp2159
g66
(dp2160
g74
I3
ssg75
g2154
sg68
(lp2161
g1225
asbasbasbag61
(g77
g63
NtRp2162
(dp2163
g66
(dp2164
sg75
g2122
sg68
(lp2165
g61
(g82
g63
NtRp2166
(dp2167
g66
(dp2168
sg75
g2162
sg68
(lp2169
g61
(g62
g63
NtRp2170
(dp2171
g66
(dp2172
g74
I3
ssg75
g2166
sg68
(lp2173
g1238
asbasbasbag61
(g77
g63
NtRp2174
(dp2175
g66
(dp2176
sg75
g2122
sg68
(lp2177
g61
(g82
g63
NtRp2178
(dp2179
g66
(dp2180
sg75
g2174
sg68
(lp2181
g61
(g62
g63
NtRp2182
(dp2183
g66
(dp2184
g74
I3
ssg75
g2178
sg68
(lp2185
g1251
asbasbasbasbasbasbasbag61
(g77
g63
NtRp2186
(dp2187
g66
(dp2188
sg75
g1911
sg68
(lp2189
g61
(g82
g63
NtRp2190
(dp2191
g66
(dp2192
g86
g87
ssg75
g2186
sg68
(lp2193
g1519
asbag61
(g82
g63
NtRp2194
(dp2195
g66
(dp2196
g93
g94
ssg75
g2186
sg68
(lp2197
S':'
asbag61
(g82
g63
NtRp2198
(dp2199
g66
(dp2200
sg75
g2186
sg68
(lp2201
g61
(g62
g63
NtRp2202
(dp2203
g66
(dp2204
g74
I4
ssg75
g2198
sg68
(lp2205
g61
(g70
g63
NtRp2206
(dp2207
g66
(dp2208
g74
I3
ssg75
Nsg68
(lp2209
g61
(g77
g63
NtRp2210
(dp2211
g66
(dp2212
sg75
g2206
sg68
(lp2213
g61
(g82
g63
NtRp2214
(dp2215
g66
(dp2216
sg75
g2210
sg68
(lp2217
g61
(g62
g63
NtRp2218
(dp2219
g66
(dp2220
g74
I3
ssg75
g2214
sg68
(lp2221
S'2'
asbasbasbag61
(g77
g63
NtRp2222
(dp2223
g66
(dp2224
sg75
g2206
sg68
(lp2225
g61
(g82
g63
NtRp2226
(dp2227
g66
(dp2228
sg75
g2222
sg68
(lp2229
g61
(g62
g63
NtRp2230
(dp2231
g66
(dp2232
g74
I3
ssg75
g2226
sg68
(lp2233
S'3'
asbasbasbag61
(g77
g63
NtRp2234
(dp2235
g66
(dp2236
sg75
g2206
sg68
(lp2237
g61
(g82
g63
NtRp2238
(dp2239
g66
(dp2240
sg75
g2234
sg68
(lp2241
g61
(g62
g63
NtRp2242
(dp2243
g66
(dp2244
g74
I3
ssg75
g2238
sg68
(lp2245
S'2'
asbasbasbag61
(g77
g63
NtRp2246
(dp2247
g66
(dp2248
sg75
g2206
sg68
(lp2249
g61
(g82
g63
NtRp2250
(dp2251
g66
(dp2252
sg75
g2246
sg68
(lp2253
g61
(g62
g63
NtRp2254
(dp2255
g66
(dp2256
g74
I3
ssg75
g2250
sg68
(lp2257
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2258
asbasbasbag61
(g77
g63
NtRp2259
(dp2260
g66
(dp2261
sg75
g2206
sg68
(lp2262
g61
(g82
g63
NtRp2263
(dp2264
g66
(dp2265
sg75
g2259
sg68
(lp2266
g61
(g62
g63
NtRp2267
(dp2268
g66
(dp2269
g74
I3
ssg75
g2263
sg68
(lp2270
g1597
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp2271
(dp2272
g66
(dp2273
sg75
g71
sg68
(lp2274
g61
(g82
g63
NtRp2275
(dp2276
g66
(dp2277
g86
g87
ssg75
g2271
sg68
(lp2278
S'is_https'
p2279
asbag61
(g82
g63
NtRp2280
(dp2281
g66
(dp2282
g93
g94
ssg75
g2271
sg68
(lp2283
S':'
asbag61
(g82
g63
NtRp2284
(dp2285
g66
(dp2286
sg75
g2271
sg68
(lp2287
g61
(g62
g63
NtRp2288
(dp2289
g66
(dp2290
g74
I5
ssg75
g2284
sg68
(lp2291
g104
asbasbasbag61
(g77
g63
NtRp2292
(dp2293
g66
(dp2294
sg75
g71
sg68
(lp2295
g61
(g82
g63
NtRp2296
(dp2297
g66
(dp2298
g86
g87
ssg75
g2292
sg68
(lp2299
S'is_local'
p2300
asbag61
(g82
g63
NtRp2301
(dp2302
g66
(dp2303
g93
g94
ssg75
g2292
sg68
(lp2304
S':'
asbag61
(g82
g63
NtRp2305
(dp2306
g66
(dp2307
sg75
g2292
sg68
(lp2308
g61
(g62
g63
NtRp2309
(dp2310
g66
(dp2311
g74
I5
ssg75
g2305
sg68
(lp2312
g1706
asbasbasbag61
(g77
g63
NtRp2313
(dp2314
g66
(dp2315
sg75
g71
sg68
(lp2316
g61
(g82
g63
NtRp2317
(dp2318
g66
(dp2319
g86
g87
ssg75
g2313
sg68
(lp2320
S'is_restful'
p2321
asbag61
(g82
g63
NtRp2322
(dp2323
g66
(dp2324
g93
g94
ssg75
g2313
sg68
(lp2325
S':'
asbag61
(g82
g63
NtRp2326
(dp2327
g66
(dp2328
sg75
g2313
sg68
(lp2329
g61
(g62
g63
NtRp2330
(dp2331
g66
(dp2332
g74
I5
ssg75
g2326
sg68
(lp2333
g104
asbasbasbag61
(g77
g63
NtRp2334
(dp2335
g66
(dp2336
sg75
g71
sg68
(lp2337
g61
(g82
g63
NtRp2338
(dp2339
g66
(dp2340
g86
g87
ssg75
g2334
sg68
(lp2341
S'now'
p2342
asbag61
(g82
g63
NtRp2343
(dp2344
g66
(dp2345
g93
g94
ssg75
g2334
sg68
(lp2346
S':'
asbag61
(g82
g63
NtRp2347
(dp2348
g66
(dp2349
sg75
g2334
sg68
(lp2350
g61
(g62
g63
NtRp2351
(dp2352
g66
(dp2353
g74
I5
ssg75
g2347
sg68
(lp2354
S'datetime.datetime(2013, 2, 25, 11, 12, 49, 220728)'
p2355
asbasbasbag61
(g77
g63
NtRp2356
(dp2357
g66
(dp2358
sg75
g71
sg68
(lp2359
g61
(g82
g63
NtRp2360
(dp2361
g66
(dp2362
g86
g87
ssg75
g2356
sg68
(lp2363
S'post_vars'
p2364
asbag61
(g82
g63
NtRp2365
(dp2366
g66
(dp2367
g93
g94
ssg75
g2356
sg68
(lp2368
S':'
asbag61
(g82
g63
NtRp2369
(dp2370
g66
(dp2371
sg75
g2356
sg68
(lp2372
g61
(g62
g63
NtRp2373
(dp2374
g66
(dp2375
g74
I5
ssg75
g2369
sg68
(lp2376
g61
(g70
g63
NtRp2377
(dp2378
g66
(dp2379
g74
I4
ssg75
Nsg68
(lp2380
sbasbasbasbag61
(g77
g63
NtRp2381
(dp2382
g66
(dp2383
sg75
g71
sg68
(lp2384
g61
(g82
g63
NtRp2385
(dp2386
g66
(dp2387
g86
g87
ssg75
g2381
sg68
(lp2388
S'raw_args'
p2389
asbag61
(g82
g63
NtRp2390
(dp2391
g66
(dp2392
g93
g94
ssg75
g2381
sg68
(lp2393
S':'
asbag61
(g82
g63
NtRp2394
(dp2395
g66
(dp2396
sg75
g2381
sg68
(lp2397
g61
(g62
g63
NtRp2398
(dp2399
g66
(dp2400
g74
I5
ssg75
g2394
sg68
(lp2401
S'project/experiment.project/1/sample.experiment/1/2'
p2402
asbasbasbag61
(g77
g63
NtRp2403
(dp2404
g66
(dp2405
sg75
g71
sg68
(lp2406
g61
(g82
g63
NtRp2407
(dp2408
g66
(dp2409
g86
g87
ssg75
g2403
sg68
(lp2410
S'raw_extension'
p2411
asbag61
(g82
g63
NtRp2412
(dp2413
g66
(dp2414
g93
g94
ssg75
g2403
sg68
(lp2415
S':'
asbag61
(g82
g63
NtRp2416
(dp2417
g66
(dp2418
sg75
g2403
sg68
(lp2419
g61
(g62
g63
NtRp2420
(dp2421
g66
(dp2422
g74
I5
ssg75
g2416
sg68
(lp2423
S'None'
p2424
asbasbasbag61
(g77
g63
NtRp2425
(dp2426
g66
(dp2427
sg75
g71
sg68
(lp2428
g61
(g82
g63
NtRp2429
(dp2430
g66
(dp2431
g86
g87
ssg75
g2425
sg68
(lp2432
S'url'
p2433
asbag61
(g82
g63
NtRp2434
(dp2435
g66
(dp2436
g93
g94
ssg75
g2425
sg68
(lp2437
S':'
asbag61
(g82
g63
NtRp2438
(dp2439
g66
(dp2440
sg75
g2425
sg68
(lp2441
g61
(g62
g63
NtRp2442
(dp2443
g66
(dp2444
g74
I5
ssg75
g2438
sg68
(lp2445
g1273
asbasbasbag61
(g77
g63
NtRp2446
(dp2447
g66
(dp2448
sg75
g71
sg68
(lp2449
g61
(g82
g63
NtRp2450
(dp2451
g66
(dp2452
g86
g87
ssg75
g2446
sg68
(lp2453
S'utcnow'
p2454
asbag61
(g82
g63
NtRp2455
(dp2456
g66
(dp2457
g93
g94
ssg75
g2446
sg68
(lp2458
S':'
asbag61
(g82
g63
NtRp2459
(dp2460
g66
(dp2461
sg75
g2446
sg68
(lp2462
g61
(g62
g63
NtRp2463
(dp2464
g66
(dp2465
g74
I5
ssg75
g2459
sg68
(lp2466
S'datetime.datetime(2013, 2, 25, 5, 42, 49, 220794)'
p2467
asbasbasbag61
(g77
g63
NtRp2468
(dp2469
g66
(dp2470
sg75
g71
sg68
(lp2471
g61
(g82
g63
NtRp2472
(dp2473
g66
(dp2474
g86
g87
ssg75
g2468
sg68
(lp2475
S'uuid'
p2476
asbag61
(g82
g63
NtRp2477
(dp2478
g66
(dp2479
g93
g94
ssg75
g2468
sg68
(lp2480
S':'
asbag61
(g82
g63
NtRp2481
(dp2482
g66
(dp2483
sg75
g2468
sg68
(lp2484
g61
(g62
g63
NtRp2485
(dp2486
g66
(dp2487
g74
I5
ssg75
g2481
sg68
(lp2488
S'DEV_bootstrap_ch/127.0.0.1.2013-02-25.11-12-49.7bec1a25-3b1c-4baa-9c36-f9f9ead37c78'
p2489
asbasbasbag61
(g77
g63
NtRp2490
(dp2491
g66
(dp2492
sg75
g71
sg68
(lp2493
g61
(g82
g63
NtRp2494
(dp2495
g66
(dp2496
g86
g87
ssg75
g2490
sg68
(lp2497
S'vars'
p2498
asbag61
(g82
g63
NtRp2499
(dp2500
g66
(dp2501
g93
g94
ssg75
g2490
sg68
(lp2502
S':'
asbag61
(g82
g63
NtRp2503
(dp2504
g66
(dp2505
sg75
g2490
sg68
(lp2506
g61
(g62
g63
NtRp2507
(dp2508
g66
(dp2509
g74
I5
ssg75
g2503
sg68
(lp2510
g61
(g70
g63
NtRp2511
(dp2512
g66
(dp2513
g74
I4
ssg75
Nsg68
(lp2514
sbasbasbasbag61
(g77
g63
NtRp2515
(dp2516
g66
(dp2517
sg75
g71
sg68
(lp2518
g61
(g82
g63
NtRp2519
(dp2520
g66
(dp2521
g86
g87
ssg75
g2515
sg68
(lp2522
S'wsgi'
p2523
asbag61
(g82
g63
NtRp2524
(dp2525
g66
(dp2526
g93
g94
ssg75
g2515
sg68
(lp2527
S':'
asbag61
(g82
g63
NtRp2528
(dp2529
g66
(dp2530
sg75
g2515
sg68
(lp2531
g61
(g62
g63
NtRp2532
(dp2533
g66
(dp2534
g74
I5
ssg75
g2528
sg68
(lp2535
g61
(g70
g63
NtRp2536
(dp2537
g66
(dp2538
g74
I4
ssg75
Nsg68
(lp2539
g61
(g77
g63
NtRp2540
(dp2541
g66
(dp2542
sg75
g2536
sg68
(lp2543
g61
(g82
g63
NtRp2544
(dp2545
g66
(dp2546
g86
g87
ssg75
g2540
sg68
(lp2547
S'environ'
p2548
asbag61
(g82
g63
NtRp2549
(dp2550
g66
(dp2551
g93
g94
ssg75
g2540
sg68
(lp2552
S':'
asbag61
(g82
g63
NtRp2553
(dp2554
g66
(dp2555
sg75
g2540
sg68
(lp2556
g61
(g62
g63
NtRp2557
(dp2558
g66
(dp2559
g74
I4
ssg75
g2553
sg68
(lp2560
g61
(g70
g63
NtRp2561
(dp2562
g66
(dp2563
g74
I3
ssg75
Nsg68
(lp2564
g61
(g77
g63
NtRp2565
(dp2566
g66
(dp2567
sg75
g2561
sg68
(lp2568
g61
(g82
g63
NtRp2569
(dp2570
g66
(dp2571
g86
g87
ssg75
g2565
sg68
(lp2572
S'HTTP_ACCEPT'
p2573
asbag61
(g82
g63
NtRp2574
(dp2575
g66
(dp2576
g93
g94
ssg75
g2565
sg68
(lp2577
S':'
asbag61
(g82
g63
NtRp2578
(dp2579
g66
(dp2580
sg75
g2565
sg68
(lp2581
g61
(g62
g63
NtRp2582
(dp2583
g66
(dp2584
g74
I3
ssg75
g2578
sg68
(lp2585
g921
asbasbasbag61
(g77
g63
NtRp2586
(dp2587
g66
(dp2588
sg75
g2561
sg68
(lp2589
g61
(g82
g63
NtRp2590
(dp2591
g66
(dp2592
g86
g87
ssg75
g2586
sg68
(lp2593
S'HTTP_ACCEPT_CHARSET'
p2594
asbag61
(g82
g63
NtRp2595
(dp2596
g66
(dp2597
g93
g94
ssg75
g2586
sg68
(lp2598
S':'
asbag61
(g82
g63
NtRp2599
(dp2600
g66
(dp2601
sg75
g2586
sg68
(lp2602
g61
(g62
g63
NtRp2603
(dp2604
g66
(dp2605
g74
I3
ssg75
g2599
sg68
(lp2606
g943
asbasbasbag61
(g77
g63
NtRp2607
(dp2608
g66
(dp2609
sg75
g2561
sg68
(lp2610
g61
(g82
g63
NtRp2611
(dp2612
g66
(dp2613
g86
g87
ssg75
g2607
sg68
(lp2614
S'HTTP_ACCEPT_ENCODING'
p2615
asbag61
(g82
g63
NtRp2616
(dp2617
g66
(dp2618
g93
g94
ssg75
g2607
sg68
(lp2619
S':'
asbag61
(g82
g63
NtRp2620
(dp2621
g66
(dp2622
sg75
g2607
sg68
(lp2623
g61
(g62
g63
NtRp2624
(dp2625
g66
(dp2626
g74
I3
ssg75
g2620
sg68
(lp2627
g965
asbasbasbag61
(g77
g63
NtRp2628
(dp2629
g66
(dp2630
sg75
g2561
sg68
(lp2631
g61
(g82
g63
NtRp2632
(dp2633
g66
(dp2634
g86
g87
ssg75
g2628
sg68
(lp2635
S'HTTP_ACCEPT_LANGUAGE'
p2636
asbag61
(g82
g63
NtRp2637
(dp2638
g66
(dp2639
g93
g94
ssg75
g2628
sg68
(lp2640
S':'
asbag61
(g82
g63
NtRp2641
(dp2642
g66
(dp2643
sg75
g2628
sg68
(lp2644
g61
(g62
g63
NtRp2645
(dp2646
g66
(dp2647
g74
I3
ssg75
g2641
sg68
(lp2648
g987
asbasbasbag61
(g77
g63
NtRp2649
(dp2650
g66
(dp2651
sg75
g2561
sg68
(lp2652
g61
(g82
g63
NtRp2653
(dp2654
g66
(dp2655
g86
g87
ssg75
g2649
sg68
(lp2656
S'HTTP_CACHE_CONTROL'
p2657
asbag61
(g82
g63
NtRp2658
(dp2659
g66
(dp2660
g93
g94
ssg75
g2649
sg68
(lp2661
S':'
asbag61
(g82
g63
NtRp2662
(dp2663
g66
(dp2664
sg75
g2649
sg68
(lp2665
g61
(g62
g63
NtRp2666
(dp2667
g66
(dp2668
g74
I3
ssg75
g2662
sg68
(lp2669
g1009
asbasbasbag61
(g77
g63
NtRp2670
(dp2671
g66
(dp2672
sg75
g2561
sg68
(lp2673
g61
(g82
g63
NtRp2674
(dp2675
g66
(dp2676
g86
g87
ssg75
g2670
sg68
(lp2677
S'HTTP_CONNECTION'
p2678
asbag61
(g82
g63
NtRp2679
(dp2680
g66
(dp2681
g93
g94
ssg75
g2670
sg68
(lp2682
S':'
asbag61
(g82
g63
NtRp2683
(dp2684
g66
(dp2685
sg75
g2670
sg68
(lp2686
g61
(g62
g63
NtRp2687
(dp2688
g66
(dp2689
g74
I3
ssg75
g2683
sg68
(lp2690
g1031
asbasbasbag61
(g77
g63
NtRp2691
(dp2692
g66
(dp2693
sg75
g2561
sg68
(lp2694
g61
(g82
g63
NtRp2695
(dp2696
g66
(dp2697
g86
g87
ssg75
g2691
sg68
(lp2698
S'HTTP_COOKIE'
p2699
asbag61
(g82
g63
NtRp2700
(dp2701
g66
(dp2702
g93
g94
ssg75
g2691
sg68
(lp2703
S':'
asbag61
(g82
g63
NtRp2704
(dp2705
g66
(dp2706
sg75
g2691
sg68
(lp2707
g61
(g62
g63
NtRp2708
(dp2709
g66
(dp2710
g74
I3
ssg75
g2704
sg68
(lp2711
g1053
asbasbasbag61
(g77
g63
NtRp2712
(dp2713
g66
(dp2714
sg75
g2561
sg68
(lp2715
g61
(g82
g63
NtRp2716
(dp2717
g66
(dp2718
g86
g87
ssg75
g2712
sg68
(lp2719
S'HTTP_HOST'
p2720
asbag61
(g82
g63
NtRp2721
(dp2722
g66
(dp2723
g93
g94
ssg75
g2712
sg68
(lp2724
S':'
asbag61
(g82
g63
NtRp2725
(dp2726
g66
(dp2727
sg75
g2712
sg68
(lp2728
g61
(g62
g63
NtRp2729
(dp2730
g66
(dp2731
g74
I3
ssg75
g2725
sg68
(lp2732
g1075
asbasbasbag61
(g77
g63
NtRp2733
(dp2734
g66
(dp2735
sg75
g2561
sg68
(lp2736
g61
(g82
g63
NtRp2737
(dp2738
g66
(dp2739
g86
g87
ssg75
g2733
sg68
(lp2740
S'HTTP_REFERER'
p2741
asbag61
(g82
g63
NtRp2742
(dp2743
g66
(dp2744
g93
g94
ssg75
g2733
sg68
(lp2745
S':'
asbag61
(g82
g63
NtRp2746
(dp2747
g66
(dp2748
sg75
g2733
sg68
(lp2749
g61
(g62
g63
NtRp2750
(dp2751
g66
(dp2752
g74
I3
ssg75
g2746
sg68
(lp2753
g1097
asbasbasbag61
(g77
g63
NtRp2754
(dp2755
g66
(dp2756
sg75
g2561
sg68
(lp2757
g61
(g82
g63
NtRp2758
(dp2759
g66
(dp2760
g86
g87
ssg75
g2754
sg68
(lp2761
S'HTTP_USER_AGENT'
p2762
asbag61
(g82
g63
NtRp2763
(dp2764
g66
(dp2765
g93
g94
ssg75
g2754
sg68
(lp2766
S':'
asbag61
(g82
g63
NtRp2767
(dp2768
g66
(dp2769
sg75
g2754
sg68
(lp2770
g61
(g62
g63
NtRp2771
(dp2772
g66
(dp2773
g74
I3
ssg75
g2767
sg68
(lp2774
g1119
asbasbasbag61
(g77
g63
NtRp2775
(dp2776
g66
(dp2777
sg75
g2561
sg68
(lp2778
g61
(g82
g63
NtRp2779
(dp2780
g66
(dp2781
g86
g87
ssg75
g2775
sg68
(lp2782
S'PATH_INFO'
p2783
asbag61
(g82
g63
NtRp2784
(dp2785
g66
(dp2786
g93
g94
ssg75
g2775
sg68
(lp2787
S':'
asbag61
(g82
g63
NtRp2788
(dp2789
g66
(dp2790
sg75
g2775
sg68
(lp2791
g61
(g62
g63
NtRp2792
(dp2793
g66
(dp2794
g74
I3
ssg75
g2788
sg68
(lp2795
g1273
asbasbasbag61
(g77
g63
NtRp2796
(dp2797
g66
(dp2798
sg75
g2561
sg68
(lp2799
g61
(g82
g63
NtRp2800
(dp2801
g66
(dp2802
g86
g87
ssg75
g2796
sg68
(lp2803
S'QUERY_STRING'
p2804
asbag61
(g82
g63
NtRp2805
(dp2806
g66
(dp2807
g93
g94
ssg75
g2796
sg68
(lp2808
S':'
asbag61
(g82
g63
NtRp2809
(dp2810
g66
(dp2811
sg75
g2796
sg68
(lp2812
g61
(g62
g63
NtRp2813
(dp2814
g66
(dp2815
g74
I3
ssg75
g2809
sg68
(lp2816
S''
asbasbasbag61
(g77
g63
NtRp2817
(dp2818
g66
(dp2819
sg75
g2561
sg68
(lp2820
g61
(g82
g63
NtRp2821
(dp2822
g66
(dp2823
g86
g87
ssg75
g2817
sg68
(lp2824
S'REMOTE_ADDR'
p2825
asbag61
(g82
g63
NtRp2826
(dp2827
g66
(dp2828
g93
g94
ssg75
g2817
sg68
(lp2829
S':'
asbag61
(g82
g63
NtRp2830
(dp2831
g66
(dp2832
sg75
g2817
sg68
(lp2833
g61
(g62
g63
NtRp2834
(dp2835
g66
(dp2836
g74
I3
ssg75
g2830
sg68
(lp2837
g291
asbasbasbag61
(g77
g63
NtRp2838
(dp2839
g66
(dp2840
sg75
g2561
sg68
(lp2841
g61
(g82
g63
NtRp2842
(dp2843
g66
(dp2844
g86
g87
ssg75
g2838
sg68
(lp2845
S'REMOTE_PORT'
p2846
asbag61
(g82
g63
NtRp2847
(dp2848
g66
(dp2849
g93
g94
ssg75
g2838
sg68
(lp2850
S':'
asbag61
(g82
g63
NtRp2851
(dp2852
g66
(dp2853
sg75
g2838
sg68
(lp2854
g61
(g62
g63
NtRp2855
(dp2856
g66
(dp2857
g74
I3
ssg75
g2851
sg68
(lp2858
g1337
asbasbasbag61
(g77
g63
NtRp2859
(dp2860
g66
(dp2861
sg75
g2561
sg68
(lp2862
g61
(g82
g63
NtRp2863
(dp2864
g66
(dp2865
g86
g87
ssg75
g2859
sg68
(lp2866
S'REQUEST_METHOD'
p2867
asbag61
(g82
g63
NtRp2868
(dp2869
g66
(dp2870
g93
g94
ssg75
g2859
sg68
(lp2871
S':'
asbag61
(g82
g63
NtRp2872
(dp2873
g66
(dp2874
sg75
g2859
sg68
(lp2875
g61
(g62
g63
NtRp2876
(dp2877
g66
(dp2878
g74
I3
ssg75
g2872
sg68
(lp2879
g1359
asbasbasbag61
(g77
g63
NtRp2880
(dp2881
g66
(dp2882
sg75
g2561
sg68
(lp2883
g61
(g82
g63
NtRp2884
(dp2885
g66
(dp2886
g86
g87
ssg75
g2880
sg68
(lp2887
S'REQUEST_URI'
p2888
asbag61
(g82
g63
NtRp2889
(dp2890
g66
(dp2891
g93
g94
ssg75
g2880
sg68
(lp2892
S':'
asbag61
(g82
g63
NtRp2893
(dp2894
g66
(dp2895
sg75
g2880
sg68
(lp2896
g61
(g62
g63
NtRp2897
(dp2898
g66
(dp2899
g74
I3
ssg75
g2893
sg68
(lp2900
g1273
asbasbasbag61
(g77
g63
NtRp2901
(dp2902
g66
(dp2903
sg75
g2561
sg68
(lp2904
g61
(g82
g63
NtRp2905
(dp2906
g66
(dp2907
g86
g87
ssg75
g2901
sg68
(lp2908
S'SCRIPT_NAME'
p2909
asbag61
(g82
g63
NtRp2910
(dp2911
g66
(dp2912
g93
g94
ssg75
g2901
sg68
(lp2913
S':'
asbag61
(g82
g63
NtRp2914
(dp2915
g66
(dp2916
sg75
g2901
sg68
(lp2917
g61
(g62
g63
NtRp2918
(dp2919
g66
(dp2920
g74
I3
ssg75
g2914
sg68
(lp2921
S''
asbasbasbag61
(g77
g63
NtRp2922
(dp2923
g66
(dp2924
sg75
g2561
sg68
(lp2925
g61
(g82
g63
NtRp2926
(dp2927
g66
(dp2928
g86
g87
ssg75
g2922
sg68
(lp2929
S'SERVER_NAME'
p2930
asbag61
(g82
g63
NtRp2931
(dp2932
g66
(dp2933
g93
g94
ssg75
g2922
sg68
(lp2934
S':'
asbag61
(g82
g63
NtRp2935
(dp2936
g66
(dp2937
sg75
g2922
sg68
(lp2938
g61
(g62
g63
NtRp2939
(dp2940
g66
(dp2941
g74
I3
ssg75
g2935
sg68
(lp2942
g1423
asbasbasbag61
(g77
g63
NtRp2943
(dp2944
g66
(dp2945
sg75
g2561
sg68
(lp2946
g61
(g82
g63
NtRp2947
(dp2948
g66
(dp2949
g86
g87
ssg75
g2943
sg68
(lp2950
S'SERVER_PORT'
p2951
asbag61
(g82
g63
NtRp2952
(dp2953
g66
(dp2954
g93
g94
ssg75
g2943
sg68
(lp2955
S':'
asbag61
(g82
g63
NtRp2956
(dp2957
g66
(dp2958
sg75
g2943
sg68
(lp2959
g61
(g62
g63
NtRp2960
(dp2961
g66
(dp2962
g74
I3
ssg75
g2956
sg68
(lp2963
g1445
asbasbasbag61
(g77
g63
NtRp2964
(dp2965
g66
(dp2966
sg75
g2561
sg68
(lp2967
g61
(g82
g63
NtRp2968
(dp2969
g66
(dp2970
g86
g87
ssg75
g2964
sg68
(lp2971
S'SERVER_PROTOCOL'
p2972
asbag61
(g82
g63
NtRp2973
(dp2974
g66
(dp2975
g93
g94
ssg75
g2964
sg68
(lp2976
S':'
asbag61
(g82
g63
NtRp2977
(dp2978
g66
(dp2979
sg75
g2964
sg68
(lp2980
g61
(g62
g63
NtRp2981
(dp2982
g66
(dp2983
g74
I3
ssg75
g2977
sg68
(lp2984
g1467
asbasbasbag61
(g77
g63
NtRp2985
(dp2986
g66
(dp2987
sg75
g2561
sg68
(lp2988
g61
(g82
g63
NtRp2989
(dp2990
g66
(dp2991
g86
g87
ssg75
g2985
sg68
(lp2992
S'SERVER_SOFTWARE'
p2993
asbag61
(g82
g63
NtRp2994
(dp2995
g66
(dp2996
g93
g94
ssg75
g2985
sg68
(lp2997
S':'
asbag61
(g82
g63
NtRp2998
(dp2999
g66
(dp3000
sg75
g2985
sg68
(lp3001
g61
(g62
g63
NtRp3002
(dp3003
g66
(dp3004
g74
I3
ssg75
g2998
sg68
(lp3005
g1489
asbasbasbag61
(g77
g63
NtRp3006
(dp3007
g66
(dp3008
sg75
g2561
sg68
(lp3009
g61
(g82
g63
NtRp3010
(dp3011
g66
(dp3012
g86
g87
ssg75
g3006
sg68
(lp3013
S'wsgi.errors'
p3014
asbag61
(g82
g63
NtRp3015
(dp3016
g66
(dp3017
g93
g94
ssg75
g3006
sg68
(lp3018
S':'
asbag61
(g82
g63
NtRp3019
(dp3020
g66
(dp3021
sg75
g3006
sg68
(lp3022
g61
(g62
g63
NtRp3023
(dp3024
g66
(dp3025
g74
I3
ssg75
g3019
sg68
(lp3026
S"<open file '<stderr>', mode 'w' at 0xb72930d0>"
p3027
asbasbasbag61
(g77
g63
NtRp3028
(dp3029
g66
(dp3030
sg75
g2561
sg68
(lp3031
g61
(g82
g63
NtRp3032
(dp3033
g66
(dp3034
g86
g87
ssg75
g3028
sg68
(lp3035
S'wsgi.file_wrapper'
p3036
asbag61
(g82
g63
NtRp3037
(dp3038
g66
(dp3039
g93
g94
ssg75
g3028
sg68
(lp3040
S':'
asbag61
(g82
g63
NtRp3041
(dp3042
g66
(dp3043
sg75
g3028
sg68
(lp3044
g61
(g62
g63
NtRp3045
(dp3046
g66
(dp3047
g74
I3
ssg75
g3041
sg68
(lp3048
S'<class wsgiref.util.FileWrapper at 0x92f7bcc>'
p3049
asbasbasbag61
(g77
g63
NtRp3050
(dp3051
g66
(dp3052
sg75
g2561
sg68
(lp3053
g61
(g82
g63
NtRp3054
(dp3055
g66
(dp3056
g86
g87
ssg75
g3050
sg68
(lp3057
S'wsgi.input'
p3058
asbag61
(g82
g63
NtRp3059
(dp3060
g66
(dp3061
g93
g94
ssg75
g3050
sg68
(lp3062
S':'
asbag61
(g82
g63
NtRp3063
(dp3064
g66
(dp3065
sg75
g3050
sg68
(lp3066
g61
(g62
g63
NtRp3067
(dp3068
g66
(dp3069
g74
I3
ssg75
g3063
sg68
(lp3070
S'<cStringIO.StringO object at 0xadd65260>'
p3071
asbasbasbag61
(g77
g63
NtRp3072
(dp3073
g66
(dp3074
sg75
g2561
sg68
(lp3075
g61
(g82
g63
NtRp3076
(dp3077
g66
(dp3078
g86
g87
ssg75
g3072
sg68
(lp3079
S'wsgi.multiprocess'
p3080
asbag61
(g82
g63
NtRp3081
(dp3082
g66
(dp3083
g93
g94
ssg75
g3072
sg68
(lp3084
S':'
asbag61
(g82
g63
NtRp3085
(dp3086
g66
(dp3087
sg75
g3072
sg68
(lp3088
g61
(g62
g63
NtRp3089
(dp3090
g66
(dp3091
g74
I3
ssg75
g3085
sg68
(lp3092
g104
asbasbasbag61
(g77
g63
NtRp3093
(dp3094
g66
(dp3095
sg75
g2561
sg68
(lp3096
g61
(g82
g63
NtRp3097
(dp3098
g66
(dp3099
g86
g87
ssg75
g3093
sg68
(lp3100
S'wsgi.multithread'
p3101
asbag61
(g82
g63
NtRp3102
(dp3103
g66
(dp3104
g93
g94
ssg75
g3093
sg68
(lp3105
S':'
asbag61
(g82
g63
NtRp3106
(dp3107
g66
(dp3108
sg75
g3093
sg68
(lp3109
g61
(g62
g63
NtRp3110
(dp3111
g66
(dp3112
g74
I3
ssg75
g3106
sg68
(lp3113
g1706
asbasbasbag61
(g77
g63
NtRp3114
(dp3115
g66
(dp3116
sg75
g2561
sg68
(lp3117
g61
(g82
g63
NtRp3118
(dp3119
g66
(dp3120
g86
g87
ssg75
g3114
sg68
(lp3121
S'wsgi.run_once'
p3122
asbag61
(g82
g63
NtRp3123
(dp3124
g66
(dp3125
g93
g94
ssg75
g3114
sg68
(lp3126
S':'
asbag61
(g82
g63
NtRp3127
(dp3128
g66
(dp3129
sg75
g3114
sg68
(lp3130
g61
(g62
g63
NtRp3131
(dp3132
g66
(dp3133
g74
I3
ssg75
g3127
sg68
(lp3134
g104
asbasbasbag61
(g77
g63
NtRp3135
(dp3136
g66
(dp3137
sg75
g2561
sg68
(lp3138
g61
(g82
g63
NtRp3139
(dp3140
g66
(dp3141
g86
g87
ssg75
g3135
sg68
(lp3142
S'wsgi.url_scheme'
p3143
asbag61
(g82
g63
NtRp3144
(dp3145
g66
(dp3146
g93
g94
ssg75
g3135
sg68
(lp3147
S':'
asbag61
(g82
g63
NtRp3148
(dp3149
g66
(dp3150
sg75
g3135
sg68
(lp3151
g61
(g62
g63
NtRp3152
(dp3153
g66
(dp3154
g74
I3
ssg75
g3148
sg68
(lp3155
g1749
asbasbasbag61
(g77
g63
NtRp3156
(dp3157
g66
(dp3158
sg75
g2561
sg68
(lp3159
g61
(g82
g63
NtRp3160
(dp3161
g66
(dp3162
g86
g87
ssg75
g3156
sg68
(lp3163
S'wsgi.version'
p3164
asbag61
(g82
g63
NtRp3165
(dp3166
g66
(dp3167
g93
g94
ssg75
g3156
sg68
(lp3168
S':'
asbag61
(g82
g63
NtRp3169
(dp3170
g66
(dp3171
sg75
g3156
sg68
(lp3172
g61
(g62
g63
NtRp3173
(dp3174
g66
(dp3175
g74
I3
ssg75
g3169
sg68
(lp3176
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3177
(lp3178
(dp3179
S'file'
p3180
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3181
sS'dump'
p3182
(dp3183
S'environment'
p3184
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3185
sS'ccode'
p3186
S'<code object <module> at 0xad0cada0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3187
ssS'lnum'
p3188
I212
sS'lines'
p3189
(dp3190
I207
S'    try:'
p3191
sI208
S'        if isinstance(code, types.CodeType):'
p3192
sI209
S'            ccode = code'
p3193
sI210
S'        else:'
p3194
sI211
S'            ccode = compile2(code, layer)'
p3195
sI212
S'        exec ccode in environment'
p3196
sI213
S'    except HTTP:'
p3197
sI214
S'        raise'
p3198
sI215
S'    except RestrictedError:'
p3199
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3200
ssS'call'
p3201
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...()\\n\\n\\n\\nresponse._vars=response._caller(duplicate)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3202
sS'func'
p3203
S'restricted'
p3204
sa(dp3205
g3180
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3206
sg3182
(dp3207
sg3188
I1135
sg3189
(dp3208
I1124
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3209
sI1125
S'   """ per sample . takes id of the sample as the input """'
p3210
sI1126
S'   sid = request.args(0)'
p3211
sI1127
S'   sample = db(db.sample.id == sid).select().first()'
p3212
sI1128
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3213
sI1129
S'   form = SQLFORM(db.sample_files)'
p3214
sI1130
S'   form.vars.sample = sid'
p3215
sI1131
S'   return locals()'
p3216
sI1132
S''
sI1133
S''
ssg3201
S'()'
p3217
sg3203
S'<module>'
p3218
sa(dp3219
g3180
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3220
sg3182
(dp3221
S'self'
p3222
S'undefined'
p3223
sS'f'
S'<function duplicate>'
p3224
ssg3188
I193
sg3189
(dp3225
I192
S'        self._vars = None'
p3226
sI193
S'        self._caller = lambda f: f()'
p3227
sI194
S'        self._view_environment = None'
p3228
sI195
S'        self._custom_commit = None'
p3229
sI196
S'        self._custom_rollback = None'
p3230
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3231
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3232
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3233
sI191
S"        self.delimiters = ('{{', '}}')"
p3234
ssg3201
S'(f=<function duplicate>)'
p3235
sg3203
S'<lambda>'
p3236
sa(dp3237
g3180
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3238
sg3182
(dp3239
S'global db'
p3240
S'<DAL uri="sqlite://storage.sqlite">'
p3241
sS'rec'
p3242
S"<Row {'code': '32', 'replica': 'replicate', 'wor...eriment': 1, 'experimentalist': 2, 'name': '12'}>"
p3243
sS'db.sample'
p3244
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3245
sS'db.sample._filter_fields'
p3246
S'<bound method Table._filter_fields of <Table sam...ment,working_status,replica,publication_status)>>'
p3247
sS'db.sample.insert'
p3248
S'<bound method Table.insert of <Table sample (id,...ment,working_status,replica,publication_status)>>'
p3249
ssg3188
I357
sg3189
(dp3250
I352
S'    return()'
p3251
sI353
S'def duplicate():'
p3252
sI354
S'    if True:'
p3253
sI355
S'        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()'
p3254
sI356
S'        rec.update(replica="replicate")'
p3255
sI357
S'        db.sample.insert(**db.sample._filter_fields(rec))'
p3256
sI358
S"        redirect(URL('list_all_dev_projects',args=request.args[0:-1]))"
p3257
sI359
S"    redirect(URL('list_all_dev_projects',args=[]))"
p3258
sI360
S''
sI361
S'def my_samples():'
p3259
ssg3201
S'()'
p3260
sg3203
S'duplicate'
p3261
sa(dp3262
g3180
S'/home/anil/bootstrap/web2py/gluon/dal.py'
p3263
sg3182
(dp3264
S'self._listify'
p3265
S'<bound method Table._listify of <Table sample (i...ment,working_status,replica,publication_status)>>'
p3266
sS'fields'
p3267
S"{'code': '32', 'description': 'saf', 'experiment': 1, 'experimentalist': 2, 'name': '12', 'publication_status': False, 'replica': 'replicate', 'scientific_name': '', 'working_status': '1'}"
p3268
sS'self'
p3269
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3270
sS'ret'
p3271
g3223
sS'self._db._adapter'
p3272
S'<gluon.dal.SQLiteAdapter object>'
p3273
sS'self._db._adapter.insert'
p3274
S'<bound method SQLiteAdapter.insert of <gluon.dal.SQLiteAdapter object>>'
p3275
sS'self._db'
p3276
S'<DAL uri="sqlite://storage.sqlite">'
p3277
ssg3188
I7918
sg3189
(dp3278
I7913
S'        return self._db._adapter._insert(self,self._listify(fields))'
p3279
sI7914
S''
sI7915
S'    def insert(self, **fields):'
p3280
sI7916
S'        self._attempt_upload(fields)'
p3281
sI7917
S'        if any(f(fields) for f in self._before_insert): return 0'
p3282
sI7918
S'        ret =  self._db._adapter.insert(self,self._listify(fields))'
p3283
sI7919
S'        if ret and self._after_insert:'
p3284
sI7920
S'            fields = Row(fields)'
p3285
sI7921
S'            [f(fields,ret) for f in self._after_insert]'
p3286
sI7922
S'        return ret'
p3287
ssg3201
S"(self=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, **fields={'code': '32', 'description': 'saf', 'experiment': 1, 'experimentalist': 2, 'name': '12', 'publication_status': False, 'replica': 'replicate', 'scientific_name': '', 'working_status': '1'})"
p3288
sg3203
S'insert'
p3289
sa(dp3290
g3180
S'/home/anil/bootstrap/web2py/gluon/dal.py'
p3291
sg3182
(dp3292
S'e'
S"IntegrityError('column name is not unique',)"
p3293
ssg3188
I1176
sg3189
(dp3294
I1171
S'            self.execute(query)'
p3295
sI1172
S'        except Exception:'
p3296
sI1173
S'            e = sys.exc_info()[1]'
p3297
sI1174
S'            if isinstance(e,self.integrity_error_class()):'
p3298
sI1175
S'                return None'
p3299
sI1176
S'            raise e'
p3300
sI1177
S"        if hasattr(table,'_primarykey'):"
p3301
sI1178
S'            return dict([(k[0].name, k[1]) for k in fields \\'
p3302
sI1179
S'                             if k[0].name in table._primarykey])'
p3303
sI1180
S'        id = self.lastrowid(table)'
p3304
ssg3201
S"(self=<gluon.dal.SQLiteAdapter object>, table=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, fields=[(<gluon.dal.Field object>, False), (<gluon.dal.Field object>, '32'), (<gluon.dal.Field object>, 'saf'), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 2), (<gluon.dal.Field object>, 1), (<gluon.dal.Field object>, '1'), (<gluon.dal.Field object>, 'replicate'), (<gluon.dal.Field object>, '12')])"
p3305
sg3203
g3289
sasS'pyver'
p3306
S'Python 2.7.3: /usr/bin/python'
p3307
sS'session'
p3308
g61
(g62
g63
NtRp3309
(dp3310
g66
(dp3311
sg68
(lp3312
g61
(g70
g63
NtRp3313
(dp3314
g66
(dp3315
g74
I5
ssg75
Nsg68
(lp3316
g61
(g77
g63
NtRp3317
(dp3318
g66
(dp3319
sg75
g3313
sg68
(lp3320
g61
(g82
g63
NtRp3321
(dp3322
g66
(dp3323
g86
g87
ssg75
g3317
sg68
(lp3324
S'auth'
p3325
asbag61
(g82
g63
NtRp3326
(dp3327
g66
(dp3328
g93
g94
ssg75
g3317
sg68
(lp3329
S':'
asbag61
(g82
g63
NtRp3330
(dp3331
g66
(dp3332
sg75
g3317
sg68
(lp3333
g61
(g62
g63
NtRp3334
(dp3335
g66
(dp3336
g74
I5
ssg75
g3330
sg68
(lp3337
g61
(g70
g63
NtRp3338
(dp3339
g66
(dp3340
g74
I4
ssg75
Nsg68
(lp3341
g61
(g77
g63
NtRp3342
(dp3343
g66
(dp3344
sg75
g3338
sg68
(lp3345
g61
(g82
g63
NtRp3346
(dp3347
g66
(dp3348
g86
g87
ssg75
g3342
sg68
(lp3349
S'expiration'
p3350
asbag61
(g82
g63
NtRp3351
(dp3352
g66
(dp3353
g93
g94
ssg75
g3342
sg68
(lp3354
S':'
asbag61
(g82
g63
NtRp3355
(dp3356
g66
(dp3357
sg75
g3342
sg68
(lp3358
g61
(g62
g63
NtRp3359
(dp3360
g66
(dp3361
g74
I4
ssg75
g3355
sg68
(lp3362
S'2592000'
p3363
asbasbasbag61
(g77
g63
NtRp3364
(dp3365
g66
(dp3366
sg75
g3338
sg68
(lp3367
g61
(g82
g63
NtRp3368
(dp3369
g66
(dp3370
g86
g87
ssg75
g3364
sg68
(lp3371
S'hmac_key'
p3372
asbag61
(g82
g63
NtRp3373
(dp3374
g66
(dp3375
g93
g94
ssg75
g3364
sg68
(lp3376
S':'
asbag61
(g82
g63
NtRp3377
(dp3378
g66
(dp3379
sg75
g3364
sg68
(lp3380
g61
(g62
g63
NtRp3381
(dp3382
g66
(dp3383
g74
I4
ssg75
g3377
sg68
(lp3384
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3385
asbasbasbag61
(g77
g63
NtRp3386
(dp3387
g66
(dp3388
sg75
g3338
sg68
(lp3389
g61
(g82
g63
NtRp3390
(dp3391
g66
(dp3392
g86
g87
ssg75
g3386
sg68
(lp3393
S'last_visit'
p3394
asbag61
(g82
g63
NtRp3395
(dp3396
g66
(dp3397
g93
g94
ssg75
g3386
sg68
(lp3398
S':'
asbag61
(g82
g63
NtRp3399
(dp3400
g66
(dp3401
sg75
g3386
sg68
(lp3402
g61
(g62
g63
NtRp3403
(dp3404
g66
(dp3405
g74
I4
ssg75
g3399
sg68
(lp3406
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3407
asbasbasbag61
(g77
g63
NtRp3408
(dp3409
g66
(dp3410
sg75
g3338
sg68
(lp3411
g61
(g82
g63
NtRp3412
(dp3413
g66
(dp3414
g86
g87
ssg75
g3408
sg68
(lp3415
S'remember'
p3416
asbag61
(g82
g63
NtRp3417
(dp3418
g66
(dp3419
g93
g94
ssg75
g3408
sg68
(lp3420
S':'
asbag61
(g82
g63
NtRp3421
(dp3422
g66
(dp3423
sg75
g3408
sg68
(lp3424
g61
(g62
g63
NtRp3425
(dp3426
g66
(dp3427
g74
I4
ssg75
g3421
sg68
(lp3428
g1706
asbasbasbag61
(g77
g63
NtRp3429
(dp3430
g66
(dp3431
sg75
g3338
sg68
(lp3432
g61
(g82
g63
NtRp3433
(dp3434
g66
(dp3435
g86
g87
ssg75
g3429
sg68
(lp3436
S'user'
p3437
asbag61
(g82
g63
NtRp3438
(dp3439
g66
(dp3440
g93
g94
ssg75
g3429
sg68
(lp3441
S':'
asbag61
(g82
g63
NtRp3442
(dp3443
g66
(dp3444
sg75
g3429
sg68
(lp3445
g61
(g62
g63
NtRp3446
(dp3447
g66
(dp3448
g74
I4
ssg75
g3442
sg68
(lp3449
g61
(g70
g63
NtRp3450
(dp3451
g66
(dp3452
g74
I3
ssg75
Nsg68
(lp3453
g61
(g77
g63
NtRp3454
(dp3455
g66
(dp3456
sg75
g3450
sg68
(lp3457
g61
(g82
g63
NtRp3458
(dp3459
g66
(dp3460
g86
g87
ssg75
g3454
sg68
(lp3461
S'address'
p3462
asbag61
(g82
g63
NtRp3463
(dp3464
g66
(dp3465
g93
g94
ssg75
g3454
sg68
(lp3466
S':'
asbag61
(g82
g63
NtRp3467
(dp3468
g66
(dp3469
sg75
g3454
sg68
(lp3470
g61
(g62
g63
NtRp3471
(dp3472
g66
(dp3473
g74
I3
ssg75
g3467
sg68
(lp3474
S'a'
asbasbasbag61
(g77
g63
NtRp3475
(dp3476
g66
(dp3477
sg75
g3450
sg68
(lp3478
g61
(g82
g63
NtRp3479
(dp3480
g66
(dp3481
g86
g87
ssg75
g3475
sg68
(lp3482
S'affiliated_to'
p3483
asbag61
(g82
g63
NtRp3484
(dp3485
g66
(dp3486
g93
g94
ssg75
g3475
sg68
(lp3487
S':'
asbag61
(g82
g63
NtRp3488
(dp3489
g66
(dp3490
sg75
g3475
sg68
(lp3491
g61
(g62
g63
NtRp3492
(dp3493
g66
(dp3494
g74
I3
ssg75
g3488
sg68
(lp3495
S'a'
asbasbasbag61
(g77
g63
NtRp3496
(dp3497
g66
(dp3498
sg75
g3450
sg68
(lp3499
g61
(g82
g63
NtRp3500
(dp3501
g66
(dp3502
g86
g87
ssg75
g3496
sg68
(lp3503
S'city'
p3504
asbag61
(g82
g63
NtRp3505
(dp3506
g66
(dp3507
g93
g94
ssg75
g3496
sg68
(lp3508
S':'
asbag61
(g82
g63
NtRp3509
(dp3510
g66
(dp3511
sg75
g3496
sg68
(lp3512
g61
(g62
g63
NtRp3513
(dp3514
g66
(dp3515
g74
I3
ssg75
g3509
sg68
(lp3516
S'a'
asbasbasbag61
(g77
g63
NtRp3517
(dp3518
g66
(dp3519
sg75
g3450
sg68
(lp3520
g61
(g82
g63
NtRp3521
(dp3522
g66
(dp3523
g86
g87
ssg75
g3517
sg68
(lp3524
S'country'
p3525
asbag61
(g82
g63
NtRp3526
(dp3527
g66
(dp3528
g93
g94
ssg75
g3517
sg68
(lp3529
S':'
asbag61
(g82
g63
NtRp3530
(dp3531
g66
(dp3532
sg75
g3517
sg68
(lp3533
g61
(g62
g63
NtRp3534
(dp3535
g66
(dp3536
g74
I3
ssg75
g3530
sg68
(lp3537
S'India'
p3538
asbasbasbag61
(g77
g63
NtRp3539
(dp3540
g66
(dp3541
sg75
g3450
sg68
(lp3542
g61
(g82
g63
NtRp3543
(dp3544
g66
(dp3545
g86
g87
ssg75
g3539
sg68
(lp3546
S'email'
p3547
asbag61
(g82
g63
NtRp3548
(dp3549
g66
(dp3550
g93
g94
ssg75
g3539
sg68
(lp3551
S':'
asbag61
(g82
g63
NtRp3552
(dp3553
g66
(dp3554
sg75
g3539
sg68
(lp3555
g61
(g62
g63
NtRp3556
(dp3557
g66
(dp3558
g74
I3
ssg75
g3552
sg68
(lp3559
S'anil.iiith@gmail.com'
p3560
asbasbasbag61
(g77
g63
NtRp3561
(dp3562
g66
(dp3563
sg75
g3450
sg68
(lp3564
g61
(g82
g63
NtRp3565
(dp3566
g66
(dp3567
g86
g87
ssg75
g3561
sg68
(lp3568
S'first_name'
p3569
asbag61
(g82
g63
NtRp3570
(dp3571
g66
(dp3572
g93
g94
ssg75
g3561
sg68
(lp3573
S':'
asbag61
(g82
g63
NtRp3574
(dp3575
g66
(dp3576
sg75
g3561
sg68
(lp3577
g61
(g62
g63
NtRp3578
(dp3579
g66
(dp3580
g74
I3
ssg75
g3574
sg68
(lp3581
S'anil'
p3582
asbasbasbag61
(g77
g63
NtRp3583
(dp3584
g66
(dp3585
sg75
g3450
sg68
(lp3586
g61
(g82
g63
NtRp3587
(dp3588
g66
(dp3589
g86
g87
ssg75
g3583
sg68
(lp3590
S'id'
p3591
asbag61
(g82
g63
NtRp3592
(dp3593
g66
(dp3594
g93
g94
ssg75
g3583
sg68
(lp3595
S':'
asbag61
(g82
g63
NtRp3596
(dp3597
g66
(dp3598
sg75
g3583
sg68
(lp3599
g61
(g62
g63
NtRp3600
(dp3601
g66
(dp3602
g74
I3
ssg75
g3596
sg68
(lp3603
S'2'
asbasbasbag61
(g77
g63
NtRp3604
(dp3605
g66
(dp3606
sg75
g3450
sg68
(lp3607
g61
(g82
g63
NtRp3608
(dp3609
g66
(dp3610
g86
g87
ssg75
g3604
sg68
(lp3611
S'last_name'
p3612
asbag61
(g82
g63
NtRp3613
(dp3614
g66
(dp3615
g93
g94
ssg75
g3604
sg68
(lp3616
S':'
asbag61
(g82
g63
NtRp3617
(dp3618
g66
(dp3619
sg75
g3604
sg68
(lp3620
g61
(g62
g63
NtRp3621
(dp3622
g66
(dp3623
g74
I3
ssg75
g3617
sg68
(lp3624
S'n'
asbasbasbag61
(g77
g63
NtRp3625
(dp3626
g66
(dp3627
sg75
g3450
sg68
(lp3628
g61
(g82
g63
NtRp3629
(dp3630
g66
(dp3631
g86
g87
ssg75
g3625
sg68
(lp3632
S'mobile'
p3633
asbag61
(g82
g63
NtRp3634
(dp3635
g66
(dp3636
g93
g94
ssg75
g3625
sg68
(lp3637
S':'
asbag61
(g82
g63
NtRp3638
(dp3639
g66
(dp3640
sg75
g3625
sg68
(lp3641
g61
(g62
g63
NtRp3642
(dp3643
g66
(dp3644
g74
I3
ssg75
g3638
sg68
(lp3645
S'1233'
p3646
asbasbasbag61
(g77
g63
NtRp3647
(dp3648
g66
(dp3649
sg75
g3450
sg68
(lp3650
g61
(g82
g63
NtRp3651
(dp3652
g66
(dp3653
g86
g87
ssg75
g3647
sg68
(lp3654
S'phone'
p3655
asbag61
(g82
g63
NtRp3656
(dp3657
g66
(dp3658
g93
g94
ssg75
g3647
sg68
(lp3659
S':'
asbag61
(g82
g63
NtRp3660
(dp3661
g66
(dp3662
sg75
g3647
sg68
(lp3663
g61
(g62
g63
NtRp3664
(dp3665
g66
(dp3666
g74
I3
ssg75
g3660
sg68
(lp3667
S'123'
p3668
asbasbasbag61
(g77
g63
NtRp3669
(dp3670
g66
(dp3671
sg75
g3450
sg68
(lp3672
g61
(g82
g63
NtRp3673
(dp3674
g66
(dp3675
g86
g87
ssg75
g3669
sg68
(lp3676
S'position'
p3677
asbag61
(g82
g63
NtRp3678
(dp3679
g66
(dp3680
g93
g94
ssg75
g3669
sg68
(lp3681
S':'
asbag61
(g82
g63
NtRp3682
(dp3683
g66
(dp3684
sg75
g3669
sg68
(lp3685
g61
(g62
g63
NtRp3686
(dp3687
g66
(dp3688
g74
I3
ssg75
g3682
sg68
(lp3689
S'0'
asbasbasbag61
(g77
g63
NtRp3690
(dp3691
g66
(dp3692
sg75
g3450
sg68
(lp3693
g61
(g82
g63
NtRp3694
(dp3695
g66
(dp3696
g86
g87
ssg75
g3690
sg68
(lp3697
S'postal_code'
p3698
asbag61
(g82
g63
NtRp3699
(dp3700
g66
(dp3701
g93
g94
ssg75
g3690
sg68
(lp3702
S':'
asbag61
(g82
g63
NtRp3703
(dp3704
g66
(dp3705
sg75
g3690
sg68
(lp3706
g61
(g62
g63
NtRp3707
(dp3708
g66
(dp3709
g74
I3
ssg75
g3703
sg68
(lp3710
S'123'
p3711
asbasbasbag61
(g77
g63
NtRp3712
(dp3713
g66
(dp3714
sg75
g3450
sg68
(lp3715
g61
(g82
g63
NtRp3716
(dp3717
g66
(dp3718
g86
g87
ssg75
g3712
sg68
(lp3719
S'registration_at'
p3720
asbag61
(g82
g63
NtRp3721
(dp3722
g66
(dp3723
g93
g94
ssg75
g3712
sg68
(lp3724
S':'
asbag61
(g82
g63
NtRp3725
(dp3726
g66
(dp3727
sg75
g3712
sg68
(lp3728
g61
(g62
g63
NtRp3729
(dp3730
g66
(dp3731
g74
I3
ssg75
g3725
sg68
(lp3732
S'0'
asbasbasbag61
(g77
g63
NtRp3733
(dp3734
g66
(dp3735
sg75
g3450
sg68
(lp3736
g61
(g82
g63
NtRp3737
(dp3738
g66
(dp3739
g86
g87
ssg75
g3733
sg68
(lp3740
S'registration_id'
p3741
asbag61
(g82
g63
NtRp3742
(dp3743
g66
(dp3744
g93
g94
ssg75
g3733
sg68
(lp3745
S':'
asbag61
(g82
g63
NtRp3746
(dp3747
g66
(dp3748
sg75
g3733
sg68
(lp3749
g61
(g62
g63
NtRp3750
(dp3751
g66
(dp3752
g74
I3
ssg75
g3746
sg68
(lp3753
S''
asbasbasbag61
(g77
g63
NtRp3754
(dp3755
g66
(dp3756
sg75
g3450
sg68
(lp3757
g61
(g82
g63
NtRp3758
(dp3759
g66
(dp3760
g86
g87
ssg75
g3754
sg68
(lp3761
S'registration_key'
p3762
asbag61
(g82
g63
NtRp3763
(dp3764
g66
(dp3765
g93
g94
ssg75
g3754
sg68
(lp3766
S':'
asbag61
(g82
g63
NtRp3767
(dp3768
g66
(dp3769
sg75
g3754
sg68
(lp3770
g61
(g62
g63
NtRp3771
(dp3772
g66
(dp3773
g74
I3
ssg75
g3767
sg68
(lp3774
S''
asbasbasbag61
(g77
g63
NtRp3775
(dp3776
g66
(dp3777
sg75
g3450
sg68
(lp3778
g61
(g82
g63
NtRp3779
(dp3780
g66
(dp3781
g86
g87
ssg75
g3775
sg68
(lp3782
S'reset_password_key'
p3783
asbag61
(g82
g63
NtRp3784
(dp3785
g66
(dp3786
g93
g94
ssg75
g3775
sg68
(lp3787
S':'
asbag61
(g82
g63
NtRp3788
(dp3789
g66
(dp3790
sg75
g3775
sg68
(lp3791
g61
(g62
g63
NtRp3792
(dp3793
g66
(dp3794
g74
I3
ssg75
g3788
sg68
(lp3795
S''
asbasbasbag61
(g77
g63
NtRp3796
(dp3797
g66
(dp3798
sg75
g3450
sg68
(lp3799
g61
(g82
g63
NtRp3800
(dp3801
g66
(dp3802
g86
g87
ssg75
g3796
sg68
(lp3803
S'title'
p3804
asbag61
(g82
g63
NtRp3805
(dp3806
g66
(dp3807
g93
g94
ssg75
g3796
sg68
(lp3808
S':'
asbag61
(g82
g63
NtRp3809
(dp3810
g66
(dp3811
sg75
g3796
sg68
(lp3812
g61
(g62
g63
NtRp3813
(dp3814
g66
(dp3815
g74
I3
ssg75
g3809
sg68
(lp3816
S'0'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp3817
(dp3818
g66
(dp3819
sg75
g3338
sg68
(lp3820
g61
(g82
g63
NtRp3821
(dp3822
g66
(dp3823
g86
g87
ssg75
g3817
sg68
(lp3824
S'user_groups'
p3825
asbag61
(g82
g63
NtRp3826
(dp3827
g66
(dp3828
g93
g94
ssg75
g3817
sg68
(lp3829
S':'
asbag61
(g82
g63
NtRp3830
(dp3831
g66
(dp3832
sg75
g3817
sg68
(lp3833
g61
(g62
g63
NtRp3834
(dp3835
g66
(dp3836
g74
I4
ssg75
g3830
sg68
(lp3837
g61
(g70
g63
NtRp3838
(dp3839
g66
(dp3840
g74
I3
ssg75
Nsg68
(lp3841
g61
(g77
g63
NtRp3842
(dp3843
g66
(dp3844
sg75
g3838
sg68
(lp3845
g61
(g82
g63
NtRp3846
(dp3847
g66
(dp3848
g86
g87
ssg75
g3842
sg68
(lp3849
S'9'
asbag61
(g82
g63
NtRp3850
(dp3851
g66
(dp3852
g93
g94
ssg75
g3842
sg68
(lp3853
S':'
asbag61
(g82
g63
NtRp3854
(dp3855
g66
(dp3856
sg75
g3842
sg68
(lp3857
g61
(g62
g63
NtRp3858
(dp3859
g66
(dp3860
g74
I3
ssg75
g3854
sg68
(lp3861
S'user_2'
p3862
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp3863
(dp3864
g66
(dp3865
sg75
g3313
sg68
(lp3866
g61
(g82
g63
NtRp3867
(dp3868
g66
(dp3869
g86
g87
ssg75
g3863
sg68
(lp3870
S'flash'
p3871
asbag61
(g82
g63
NtRp3872
(dp3873
g66
(dp3874
g93
g94
ssg75
g3863
sg68
(lp3875
S':'
asbag61
(g82
g63
NtRp3876
(dp3877
g66
(dp3878
sg75
g3863
sg68
(lp3879
g61
(g62
g63
NtRp3880
(dp3881
g66
(dp3882
g74
I5
ssg75
g3876
sg68
(lp3883
S'None'
p3884
asbasbasbag61
(g77
g63
NtRp3885
(dp3886
g66
(dp3887
sg75
g3313
sg68
(lp3888
g61
(g82
g63
NtRp3889
(dp3890
g66
(dp3891
g86
g87
ssg75
g3885
sg68
(lp3892
S'last_orderby'
p3893
asbag61
(g82
g63
NtRp3894
(dp3895
g66
(dp3896
g93
g94
ssg75
g3885
sg68
(lp3897
S':'
asbag61
(g82
g63
NtRp3898
(dp3899
g66
(dp3900
sg75
g3885
sg68
(lp3901
g61
(g62
g63
NtRp3902
(dp3903
g66
(dp3904
g74
I5
ssg75
g3898
sg68
(lp3905
S'None'
p3906
asbasbasbag61
(g77
g63
NtRp3907
(dp3908
g66
(dp3909
sg75
g3313
sg68
(lp3910
g61
(g82
g63
NtRp3911
(dp3912
g66
(dp3913
g86
g87
ssg75
g3907
sg68
(lp3914
S'last_query'
p3915
asbag61
(g82
g63
NtRp3916
(dp3917
g66
(dp3918
g93
g94
ssg75
g3907
sg68
(lp3919
S':'
asbag61
(g82
g63
NtRp3920
(dp3921
g66
(dp3922
sg75
g3907
sg68
(lp3923
g61
(g62
g63
NtRp3924
(dp3925
g66
(dp3926
g74
I5
ssg75
g3920
sg68
(lp3927
S'db.project.id>0'
p3928
asbasbasbasbasbsS'etype'
p3929
S"<class 'sqlite3.IntegrityError'>"
p3930
sS'date'
p3931
S'Mon Feb 25 11:12:49 2013'
p3932
sS'response'
p3933
g61
(g62
g63
NtRp3934
(dp3935
g66
(dp3936
sg68
(lp3937
g61
(g70
g63
NtRp3938
(dp3939
g66
(dp3940
g74
I5
ssg75
Nsg68
(lp3941
g61
(g77
g63
NtRp3942
(dp3943
g66
(dp3944
sg75
g3938
sg68
(lp3945
g61
(g82
g63
NtRp3946
(dp3947
g66
(dp3948
g86
g87
ssg75
g3942
sg68
(lp3949
g234
asbag61
(g82
g63
NtRp3950
(dp3951
g66
(dp3952
g93
g94
ssg75
g3942
sg68
(lp3953
S':'
asbag61
(g82
g63
NtRp3954
(dp3955
g66
(dp3956
sg75
g3942
sg68
(lp3957
g61
(g62
g63
NtRp3958
(dp3959
g66
(dp3960
g74
I5
ssg75
g3954
sg68
(lp3961
S'<cStringIO.StringO object at 0x93e4e40>'
p3962
asbasbasbag61
(g77
g63
NtRp3963
(dp3964
g66
(dp3965
sg75
g3938
sg68
(lp3966
g61
(g82
g63
NtRp3967
(dp3968
g66
(dp3969
g86
g87
ssg75
g3963
sg68
(lp3970
g322
asbag61
(g82
g63
NtRp3971
(dp3972
g66
(dp3973
g93
g94
ssg75
g3963
sg68
(lp3974
S':'
asbag61
(g82
g63
NtRp3975
(dp3976
g66
(dp3977
sg75
g3963
sg68
(lp3978
g61
(g62
g63
NtRp3979
(dp3980
g66
(dp3981
g74
I5
ssg75
g3975
sg68
(lp3982
g61
(g70
g63
NtRp3983
(dp3984
g66
(dp3985
g74
I4
ssg75
Nsg68
(lp3986
g61
(g77
g63
NtRp3987
(dp3988
g66
(dp3989
sg75
g3983
sg68
(lp3990
g61
(g82
g63
NtRp3991
(dp3992
g66
(dp3993
g86
g87
ssg75
g3987
sg68
(lp3994
S'session_id_dev_bootstrap_ch'
p3995
asbag61
(g82
g63
NtRp3996
(dp3997
g66
(dp3998
g93
g94
ssg75
g3987
sg68
(lp3999
S':'
asbag61
(g82
g63
NtRp4000
(dp4001
g66
(dp4002
sg75
g3987
sg68
(lp4003
g61
(g62
g63
NtRp4004
(dp4005
g66
(dp4006
g74
I4
ssg75
g4000
sg68
(lp4007
g554
ag61
(g70
g63
NtRp4008
(dp4009
g66
(dp4010
g74
I3
ssg75
Nsg68
(lp4011
g61
(g77
g63
NtRp4012
(dp4013
g66
(dp4014
sg75
g4008
sg68
(lp4015
g61
(g82
g63
NtRp4016
(dp4017
g66
(dp4018
g86
g87
ssg75
g4012
sg68
(lp4019
g373
asbag61
(g82
g63
NtRp4020
(dp4021
g66
(dp4022
g93
g94
ssg75
g4012
sg68
(lp4023
S':'
asbag61
(g82
g63
NtRp4024
(dp4025
g66
(dp4026
sg75
g4012
sg68
(lp4027
g61
(g62
g63
NtRp4028
(dp4029
g66
(dp4030
g74
I3
ssg75
g4024
sg68
(lp4031
S''
asbasbasbag61
(g77
g63
NtRp4032
(dp4033
g66
(dp4034
sg75
g4008
sg68
(lp4035
g61
(g82
g63
NtRp4036
(dp4037
g66
(dp4038
g86
g87
ssg75
g4032
sg68
(lp4039
g394
asbag61
(g82
g63
NtRp4040
(dp4041
g66
(dp4042
g93
g94
ssg75
g4032
sg68
(lp4043
S':'
asbag61
(g82
g63
NtRp4044
(dp4045
g66
(dp4046
sg75
g4032
sg68
(lp4047
g61
(g62
g63
NtRp4048
(dp4049
g66
(dp4050
g74
I3
ssg75
g4044
sg68
(lp4051
S''
asbasbasbag61
(g77
g63
NtRp4052
(dp4053
g66
(dp4054
sg75
g4008
sg68
(lp4055
g61
(g82
g63
NtRp4056
(dp4057
g66
(dp4058
g86
g87
ssg75
g4052
sg68
(lp4059
g415
asbag61
(g82
g63
NtRp4060
(dp4061
g66
(dp4062
g93
g94
ssg75
g4052
sg68
(lp4063
S':'
asbag61
(g82
g63
NtRp4064
(dp4065
g66
(dp4066
sg75
g4052
sg68
(lp4067
g61
(g62
g63
NtRp4068
(dp4069
g66
(dp4070
g74
I3
ssg75
g4064
sg68
(lp4071
S'2592000'
p4072
asbasbasbag61
(g77
g63
NtRp4073
(dp4074
g66
(dp4075
sg75
g4008
sg68
(lp4076
g61
(g82
g63
NtRp4077
(dp4078
g66
(dp4079
g86
g87
ssg75
g4073
sg68
(lp4080
g436
asbag61
(g82
g63
NtRp4081
(dp4082
g66
(dp4083
g93
g94
ssg75
g4073
sg68
(lp4084
S':'
asbag61
(g82
g63
NtRp4085
(dp4086
g66
(dp4087
sg75
g4073
sg68
(lp4088
g61
(g62
g63
NtRp4089
(dp4090
g66
(dp4091
g74
I3
ssg75
g4085
sg68
(lp4092
S''
asbasbasbag61
(g77
g63
NtRp4093
(dp4094
g66
(dp4095
sg75
g4008
sg68
(lp4096
g61
(g82
g63
NtRp4097
(dp4098
g66
(dp4099
g86
g87
ssg75
g4093
sg68
(lp4100
g457
asbag61
(g82
g63
NtRp4101
(dp4102
g66
(dp4103
g93
g94
ssg75
g4093
sg68
(lp4104
S':'
asbag61
(g82
g63
NtRp4105
(dp4106
g66
(dp4107
sg75
g4093
sg68
(lp4108
g61
(g62
g63
NtRp4109
(dp4110
g66
(dp4111
g74
I3
ssg75
g4105
sg68
(lp4112
S''
asbasbasbag61
(g77
g63
NtRp4113
(dp4114
g66
(dp4115
sg75
g4008
sg68
(lp4116
g61
(g82
g63
NtRp4117
(dp4118
g66
(dp4119
g86
g87
ssg75
g4113
sg68
(lp4120
g478
asbag61
(g82
g63
NtRp4121
(dp4122
g66
(dp4123
g93
g94
ssg75
g4113
sg68
(lp4124
S':'
asbag61
(g82
g63
NtRp4125
(dp4126
g66
(dp4127
sg75
g4113
sg68
(lp4128
g61
(g62
g63
NtRp4129
(dp4130
g66
(dp4131
g74
I3
ssg75
g4125
sg68
(lp4132
S'/'
asbasbasbag61
(g77
g63
NtRp4133
(dp4134
g66
(dp4135
sg75
g4008
sg68
(lp4136
g61
(g82
g63
NtRp4137
(dp4138
g66
(dp4139
g86
g87
ssg75
g4133
sg68
(lp4140
g499
asbag61
(g82
g63
NtRp4141
(dp4142
g66
(dp4143
g93
g94
ssg75
g4133
sg68
(lp4144
S':'
asbag61
(g82
g63
NtRp4145
(dp4146
g66
(dp4147
sg75
g4133
sg68
(lp4148
g61
(g62
g63
NtRp4149
(dp4150
g66
(dp4151
g74
I3
ssg75
g4145
sg68
(lp4152
S''
asbasbasbag61
(g77
g63
NtRp4153
(dp4154
g66
(dp4155
sg75
g4008
sg68
(lp4156
g61
(g82
g63
NtRp4157
(dp4158
g66
(dp4159
g86
g87
ssg75
g4153
sg68
(lp4160
g520
asbag61
(g82
g63
NtRp4161
(dp4162
g66
(dp4163
g93
g94
ssg75
g4153
sg68
(lp4164
S':'
asbag61
(g82
g63
NtRp4165
(dp4166
g66
(dp4167
sg75
g4153
sg68
(lp4168
g61
(g62
g63
NtRp4169
(dp4170
g66
(dp4171
g74
I3
ssg75
g4165
sg68
(lp4172
S''
asbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4173
(dp4174
g66
(dp4175
sg75
g3938
sg68
(lp4176
g61
(g82
g63
NtRp4177
(dp4178
g66
(dp4179
g86
g87
ssg75
g4173
sg68
(lp4180
S'delimiters'
p4181
asbag61
(g82
g63
NtRp4182
(dp4183
g66
(dp4184
g93
g94
ssg75
g4173
sg68
(lp4185
S':'
asbag61
(g82
g63
NtRp4186
(dp4187
g66
(dp4188
sg75
g4173
sg68
(lp4189
g61
(g62
g63
NtRp4190
(dp4191
g66
(dp4192
g74
I5
ssg75
g4186
sg68
(lp4193
g61
(g70
g63
NtRp4194
(dp4195
g66
(dp4196
g74
I4
ssg75
Nsg68
(lp4197
g61
(g77
g63
NtRp4198
(dp4199
g66
(dp4200
sg75
g4194
sg68
(lp4201
g61
(g82
g63
NtRp4202
(dp4203
g66
(dp4204
sg75
g4198
sg68
(lp4205
g61
(g62
g63
NtRp4206
(dp4207
g66
(dp4208
g74
I4
ssg75
g4202
sg68
(lp4209
S'{{'
p4210
asbasbasbag61
(g77
g63
NtRp4211
(dp4212
g66
(dp4213
sg75
g4194
sg68
(lp4214
g61
(g82
g63
NtRp4215
(dp4216
g66
(dp4217
sg75
g4211
sg68
(lp4218
g61
(g62
g63
NtRp4219
(dp4220
g66
(dp4221
g74
I4
ssg75
g4215
sg68
(lp4222
S'}}'
p4223
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4224
(dp4225
g66
(dp4226
sg75
g3938
sg68
(lp4227
g61
(g82
g63
NtRp4228
(dp4229
g66
(dp4230
g86
g87
ssg75
g4224
sg68
(lp4231
S'files'
p4232
asbag61
(g82
g63
NtRp4233
(dp4234
g66
(dp4235
g93
g94
ssg75
g4224
sg68
(lp4236
S':'
asbag61
(g82
g63
NtRp4237
(dp4238
g66
(dp4239
sg75
g4224
sg68
(lp4240
g61
(g62
g63
NtRp4241
(dp4242
g66
(dp4243
g74
I5
ssg75
g4237
sg68
(lp4244
g61
(g70
g63
NtRp4245
(dp4246
g66
(dp4247
g74
I4
ssg75
Nsg68
(lp4248
g61
(g77
g63
NtRp4249
(dp4250
g66
(dp4251
sg75
g4245
sg68
(lp4252
g61
(g82
g63
NtRp4253
(dp4254
g66
(dp4255
sg75
g4249
sg68
(lp4256
g61
(g62
g63
NtRp4257
(dp4258
g66
(dp4259
g74
I4
ssg75
g4253
sg68
(lp4260
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4261
asbasbasbag61
(g77
g63
NtRp4262
(dp4263
g66
(dp4264
sg75
g4245
sg68
(lp4265
g61
(g82
g63
NtRp4266
(dp4267
g66
(dp4268
sg75
g4262
sg68
(lp4269
g61
(g62
g63
NtRp4270
(dp4271
g66
(dp4272
g74
I4
ssg75
g4266
sg68
(lp4273
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4274
asbasbasbag61
(g77
g63
NtRp4275
(dp4276
g66
(dp4277
sg75
g4245
sg68
(lp4278
g61
(g82
g63
NtRp4279
(dp4280
g66
(dp4281
sg75
g4275
sg68
(lp4282
g61
(g62
g63
NtRp4283
(dp4284
g66
(dp4285
g74
I4
ssg75
g4279
sg68
(lp4286
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4287
asbasbasbag61
(g77
g63
NtRp4288
(dp4289
g66
(dp4290
sg75
g4245
sg68
(lp4291
g61
(g82
g63
NtRp4292
(dp4293
g66
(dp4294
sg75
g4288
sg68
(lp4295
g61
(g62
g63
NtRp4296
(dp4297
g66
(dp4298
g74
I4
ssg75
g4292
sg68
(lp4299
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4300
asbasbasbag61
(g77
g63
NtRp4301
(dp4302
g66
(dp4303
sg75
g4245
sg68
(lp4304
g61
(g82
g63
NtRp4305
(dp4306
g66
(dp4307
sg75
g4301
sg68
(lp4308
g61
(g62
g63
NtRp4309
(dp4310
g66
(dp4311
g74
I4
ssg75
g4305
sg68
(lp4312
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4313
asbasbasbag61
(g77
g63
NtRp4314
(dp4315
g66
(dp4316
sg75
g4245
sg68
(lp4317
g61
(g82
g63
NtRp4318
(dp4319
g66
(dp4320
sg75
g4314
sg68
(lp4321
g61
(g62
g63
NtRp4322
(dp4323
g66
(dp4324
g74
I4
ssg75
g4318
sg68
(lp4325
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4326
asbasbasbag61
(g77
g63
NtRp4327
(dp4328
g66
(dp4329
sg75
g4245
sg68
(lp4330
g61
(g82
g63
NtRp4331
(dp4332
g66
(dp4333
sg75
g4327
sg68
(lp4334
g61
(g62
g63
NtRp4335
(dp4336
g66
(dp4337
g74
I4
ssg75
g4331
sg68
(lp4338
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4339
asbasbasbag61
(g77
g63
NtRp4340
(dp4341
g66
(dp4342
sg75
g4245
sg68
(lp4343
g61
(g82
g63
NtRp4344
(dp4345
g66
(dp4346
sg75
g4340
sg68
(lp4347
g61
(g62
g63
NtRp4348
(dp4349
g66
(dp4350
g74
I4
ssg75
g4344
sg68
(lp4351
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4352
asbasbasbag61
(g77
g63
NtRp4353
(dp4354
g66
(dp4355
sg75
g4245
sg68
(lp4356
g61
(g82
g63
NtRp4357
(dp4358
g66
(dp4359
sg75
g4353
sg68
(lp4360
g61
(g62
g63
NtRp4361
(dp4362
g66
(dp4363
g74
I4
ssg75
g4357
sg68
(lp4364
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4365
asbasbasbag61
(g77
g63
NtRp4366
(dp4367
g66
(dp4368
sg75
g4245
sg68
(lp4369
g61
(g82
g63
NtRp4370
(dp4371
g66
(dp4372
sg75
g4366
sg68
(lp4373
g61
(g62
g63
NtRp4374
(dp4375
g66
(dp4376
g74
I4
ssg75
g4370
sg68
(lp4377
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4378
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4379
(dp4380
g66
(dp4381
sg75
g3938
sg68
(lp4382
g61
(g82
g63
NtRp4383
(dp4384
g66
(dp4385
g86
g87
ssg75
g4379
sg68
(lp4386
S'flash'
p4387
asbag61
(g82
g63
NtRp4388
(dp4389
g66
(dp4390
g93
g94
ssg75
g4379
sg68
(lp4391
S':'
asbag61
(g82
g63
NtRp4392
(dp4393
g66
(dp4394
sg75
g4379
sg68
(lp4395
g61
(g62
g63
NtRp4396
(dp4397
g66
(dp4398
g74
I5
ssg75
g4392
sg68
(lp4399
S''
asbasbasbag61
(g77
g63
NtRp4400
(dp4401
g66
(dp4402
sg75
g3938
sg68
(lp4403
g61
(g82
g63
NtRp4404
(dp4405
g66
(dp4406
g86
g87
ssg75
g4400
sg68
(lp4407
S'generic_patterns'
p4408
asbag61
(g82
g63
NtRp4409
(dp4410
g66
(dp4411
g93
g94
ssg75
g4400
sg68
(lp4412
S':'
asbag61
(g82
g63
NtRp4413
(dp4414
g66
(dp4415
sg75
g4400
sg68
(lp4416
g61
(g62
g63
NtRp4417
(dp4418
g66
(dp4419
g74
I5
ssg75
g4413
sg68
(lp4420
g61
(g70
g63
NtRp4421
(dp4422
g66
(dp4423
g74
I4
ssg75
Nsg68
(lp4424
g61
(g77
g63
NtRp4425
(dp4426
g66
(dp4427
sg75
g4421
sg68
(lp4428
g61
(g82
g63
NtRp4429
(dp4430
g66
(dp4431
sg75
g4425
sg68
(lp4432
g61
(g62
g63
NtRp4433
(dp4434
g66
(dp4435
g74
I4
ssg75
g4429
sg68
(lp4436
S'*'
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4437
(dp4438
g66
(dp4439
sg75
g3938
sg68
(lp4440
g61
(g82
g63
NtRp4441
(dp4442
g66
(dp4443
g86
g87
ssg75
g4437
sg68
(lp4444
S'google_analytics_id'
p4445
asbag61
(g82
g63
NtRp4446
(dp4447
g66
(dp4448
g93
g94
ssg75
g4437
sg68
(lp4449
S':'
asbag61
(g82
g63
NtRp4450
(dp4451
g66
(dp4452
sg75
g4437
sg68
(lp4453
g61
(g62
g63
NtRp4454
(dp4455
g66
(dp4456
g74
I5
ssg75
g4450
sg68
(lp4457
S'None'
p4458
asbasbasbag61
(g77
g63
NtRp4459
(dp4460
g66
(dp4461
sg75
g3938
sg68
(lp4462
g61
(g82
g63
NtRp4463
(dp4464
g66
(dp4465
g86
g87
ssg75
g4459
sg68
(lp4466
S'headers'
p4467
asbag61
(g82
g63
NtRp4468
(dp4469
g66
(dp4470
g93
g94
ssg75
g4459
sg68
(lp4471
S':'
asbag61
(g82
g63
NtRp4472
(dp4473
g66
(dp4474
sg75
g4459
sg68
(lp4475
g61
(g62
g63
NtRp4476
(dp4477
g66
(dp4478
g74
I5
ssg75
g4472
sg68
(lp4479
g61
(g70
g63
NtRp4480
(dp4481
g66
(dp4482
g74
I4
ssg75
Nsg68
(lp4483
g61
(g77
g63
NtRp4484
(dp4485
g66
(dp4486
sg75
g4480
sg68
(lp4487
g61
(g82
g63
NtRp4488
(dp4489
g66
(dp4490
g86
g87
ssg75
g4484
sg68
(lp4491
S'X-Powered-By'
p4492
asbag61
(g82
g63
NtRp4493
(dp4494
g66
(dp4495
g93
g94
ssg75
g4484
sg68
(lp4496
S':'
asbag61
(g82
g63
NtRp4497
(dp4498
g66
(dp4499
sg75
g4484
sg68
(lp4500
g61
(g62
g63
NtRp4501
(dp4502
g66
(dp4503
g74
I4
ssg75
g4497
sg68
(lp4504
S'web2py'
p4505
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4506
(dp4507
g66
(dp4508
sg75
g3938
sg68
(lp4509
g61
(g82
g63
NtRp4510
(dp4511
g66
(dp4512
g86
g87
ssg75
g4506
sg68
(lp4513
S'menu'
p4514
asbag61
(g82
g63
NtRp4515
(dp4516
g66
(dp4517
g93
g94
ssg75
g4506
sg68
(lp4518
S':'
asbag61
(g82
g63
NtRp4519
(dp4520
g66
(dp4521
sg75
g4506
sg68
(lp4522
g61
(g62
g63
NtRp4523
(dp4524
g66
(dp4525
g74
I5
ssg75
g4519
sg68
(lp4526
g61
(g70
g63
NtRp4527
(dp4528
g66
(dp4529
g74
I4
ssg75
Nsg68
(lp4530
g61
(g77
g63
NtRp4531
(dp4532
g66
(dp4533
sg75
g4527
sg68
(lp4534
g61
(g82
g63
NtRp4535
(dp4536
g66
(dp4537
sg75
g4531
sg68
(lp4538
g61
(g62
g63
NtRp4539
(dp4540
g66
(dp4541
g74
I4
ssg75
g4535
sg68
(lp4542
g61
(g70
g63
NtRp4543
(dp4544
g66
(dp4545
g74
I3
ssg75
Nsg68
(lp4546
g61
(g77
g63
NtRp4547
(dp4548
g66
(dp4549
sg75
g4543
sg68
(lp4550
g61
(g82
g63
NtRp4551
(dp4552
g66
(dp4553
sg75
g4547
sg68
(lp4554
g61
(g62
g63
NtRp4555
(dp4556
g66
(dp4557
g74
I3
ssg75
g4551
sg68
(lp4558
cgluon.languages
lazyT_unpickle
p4559
(S't\x04\x00\x00\x00Home'
tRp4560
asbasbasbag61
(g77
g63
NtRp4561
(dp4562
g66
(dp4563
sg75
g4543
sg68
(lp4564
g61
(g82
g63
NtRp4565
(dp4566
g66
(dp4567
sg75
g4561
sg68
(lp4568
g61
(g62
g63
NtRp4569
(dp4570
g66
(dp4571
g74
I3
ssg75
g4565
sg68
(lp4572
g104
asbasbasbag61
(g77
g63
NtRp4573
(dp4574
g66
(dp4575
sg75
g4543
sg68
(lp4576
g61
(g82
g63
NtRp4577
(dp4578
g66
(dp4579
sg75
g4573
sg68
(lp4580
g61
(g62
g63
NtRp4581
(dp4582
g66
(dp4583
g74
I3
ssg75
g4577
sg68
(lp4584
S'/DEV_bootstrap_ch/default/list_all_projects'
p4585
asbasbasbag61
(g77
g63
NtRp4586
(dp4587
g66
(dp4588
sg75
g4543
sg68
(lp4589
g61
(g82
g63
NtRp4590
(dp4591
g66
(dp4592
sg75
g4586
sg68
(lp4593
g61
(g62
g63
NtRp4594
(dp4595
g66
(dp4596
g74
I3
ssg75
g4590
sg68
(lp4597
g61
(g70
g63
NtRp4598
(dp4599
g66
(dp4600
g74
I2
ssg75
Nsg68
(lp4601
sbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4602
(dp4603
g66
(dp4604
sg75
g4527
sg68
(lp4605
g61
(g82
g63
NtRp4606
(dp4607
g66
(dp4608
sg75
g4602
sg68
(lp4609
g61
(g62
g63
NtRp4610
(dp4611
g66
(dp4612
g74
I4
ssg75
g4606
sg68
(lp4613
g61
(g70
g63
NtRp4614
(dp4615
g66
(dp4616
g74
I3
ssg75
Nsg68
(lp4617
g61
(g77
g63
NtRp4618
(dp4619
g66
(dp4620
sg75
g4614
sg68
(lp4621
g61
(g82
g63
NtRp4622
(dp4623
g66
(dp4624
sg75
g4618
sg68
(lp4625
g61
(g62
g63
NtRp4626
(dp4627
g66
(dp4628
g74
I3
ssg75
g4622
sg68
(lp4629
g4559
(S's\x08\x00\x00\x00Projects'
tRp4630
asbasbasbag61
(g77
g63
NtRp4631
(dp4632
g66
(dp4633
sg75
g4614
sg68
(lp4634
g61
(g82
g63
NtRp4635
(dp4636
g66
(dp4637
sg75
g4631
sg68
(lp4638
g61
(g62
g63
NtRp4639
(dp4640
g66
(dp4641
g74
I3
ssg75
g4635
sg68
(lp4642
g104
asbasbasbag61
(g77
g63
NtRp4643
(dp4644
g66
(dp4645
sg75
g4614
sg68
(lp4646
g61
(g82
g63
NtRp4647
(dp4648
g66
(dp4649
sg75
g4643
sg68
(lp4650
g61
(g62
g63
NtRp4651
(dp4652
g66
(dp4653
g74
I3
ssg75
g4647
sg68
(lp4654
S'/DEV_bootstrap_ch/default/list_all_projects'
p4655
asbasbasbag61
(g77
g63
NtRp4656
(dp4657
g66
(dp4658
sg75
g4614
sg68
(lp4659
g61
(g82
g63
NtRp4660
(dp4661
g66
(dp4662
sg75
g4656
sg68
(lp4663
g61
(g62
g63
NtRp4664
(dp4665
g66
(dp4666
g74
I3
ssg75
g4660
sg68
(lp4667
g61
(g70
g63
NtRp4668
(dp4669
g66
(dp4670
g74
I2
ssg75
Nsg68
(lp4671
sbasbasbasbasbasbasbasbasbasbasbasbag61
(g77
g63
NtRp4672
(dp4673
g66
(dp4674
sg75
g3938
sg68
(lp4675
g61
(g82
g63
NtRp4676
(dp4677
g66
(dp4678
g86
g87
ssg75
g4672
sg68
(lp4679
S'meta'
p4680
asbag61
(g82
g63
NtRp4681
(dp4682
g66
(dp4683
g93
g94
ssg75
g4672
sg68
(lp4684
S':'
asbag61
(g82
g63
NtRp4685
(dp4686
g66
(dp4687
sg75
g4672
sg68
(lp4688
g61
(g62
g63
NtRp4689
(dp4690
g66
(dp4691
g74
I5
ssg75
g4685
sg68
(lp4692
g61
(g70
g63
NtRp4693
(dp4694
g66
(dp4695
g74
I4
ssg75
Nsg68
(lp4696
g61
(g77
g63
NtRp4697
(dp4698
g66
(dp4699
sg75
g4693
sg68
(lp4700
g61
(g82
g63
NtRp4701
(dp4702
g66
(dp4703
g86
g87
ssg75
g4697
sg68
(lp4704
S'author'
p4705
asbag61
(g82
g63
NtRp4706
(dp4707
g66
(dp4708
g93
g94
ssg75
g4697
sg68
(lp4709
S':'
asbag61
(g82
g63
NtRp4710
(dp4711
g66
(dp4712
sg75
g4697
sg68
(lp4713
g61
(g62
g63
NtRp4714
(dp4715
g66
(dp4716
g74
I4
ssg75
g4710
sg68
(lp4717
S'Vikram Pudi <vikram@iiit.ac.in>'
p4718
asbasbasbag61
(g77
g63
NtRp4719
(dp4720
g66
(dp4721
sg75
g4693
sg68
(lp4722
g61
(g82
g63
NtRp4723
(dp4724
g66
(dp4725
g86
g87
ssg75
g4719
sg68
(lp4726
S'copyright'
p4727
asbag61
(g82
g63
NtRp4728
(dp4729
g66
(dp4730
g93
g94
ssg75
g4719
sg68
(lp4731
S':'
asbag61
(g82
g63
NtRp4732
(dp4733
g66
(dp4734
sg75
g4719
sg68
(lp4735
g61
(g62
g63
NtRp4736
(dp4737
g66
(dp4738
g74
I4
ssg75
g4732
sg68
(lp4739
S'Copyright 2011'
p4740
asbasbasbag61
(g77
g63
NtRp4741
(dp4742
g66
(dp4743
sg75
g4693
sg68
(lp4744
g61
(g82
g63
NtRp4745
(dp4746
g66
(dp4747
g86
g87
ssg75
g4741
sg68
(lp4748
S'description'
p4749
asbag61
(g82
g63
NtRp4750
(dp4751
g66
(dp4752
g93
g94
ssg75
g4741
sg68
(lp4753
S':'
asbag61
(g82
g63
NtRp4754
(dp4755
g66
(dp4756
sg75
g4741
sg68
(lp4757
g61
(g62
g63
NtRp4758
(dp4759
g66
(dp4760
g74
I4
ssg75
g4754
sg68
(lp4761
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4762
asbasbasbag61
(g77
g63
NtRp4763
(dp4764
g66
(dp4765
sg75
g4693
sg68
(lp4766
g61
(g82
g63
NtRp4767
(dp4768
g66
(dp4769
g86
g87
ssg75
g4763
sg68
(lp4770
S'generator'
p4771
asbag61
(g82
g63
NtRp4772
(dp4773
g66
(dp4774
g93
g94
ssg75
g4763
sg68
(lp4775
S':'
asbag61
(g82
g63
NtRp4776
(dp4777
g66
(dp4778
sg75
g4763
sg68
(lp4779
g61
(g62
g63
NtRp4780
(dp4781
g66
(dp4782
g74
I4
ssg75
g4776
sg68
(lp4783
S'Web2py Web Framework'
p4784
asbasbasbag61
(g77
g63
NtRp4785
(dp4786
g66
(dp4787
sg75
g4693
sg68
(lp4788
g61
(g82
g63
NtRp4789
(dp4790
g66
(dp4791
g86
g87
ssg75
g4785
sg68
(lp4792
S'keywords'
p4793
asbag61
(g82
g63
NtRp4794
(dp4795
g66
(dp4796
g93
g94
ssg75
g4785
sg68
(lp4797
S':'
asbag61
(g82
g63
NtRp4798
(dp4799
g66
(dp4800
sg75
g4785
sg68
(lp4801
g61
(g62
g63
NtRp4802
(dp4803
g66
(dp4804
g74
I4
ssg75
g4798
sg68
(lp4805
S'web2py, python, metabolome, metabolomics'
p4806
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4807
(dp4808
g66
(dp4809
sg75
g3938
sg68
(lp4810
g61
(g82
g63
NtRp4811
(dp4812
g66
(dp4813
g86
g87
ssg75
g4807
sg68
(lp4814
S'models_to_run'
p4815
asbag61
(g82
g63
NtRp4816
(dp4817
g66
(dp4818
g93
g94
ssg75
g4807
sg68
(lp4819
S':'
asbag61
(g82
g63
NtRp4820
(dp4821
g66
(dp4822
sg75
g4807
sg68
(lp4823
g61
(g62
g63
NtRp4824
(dp4825
g66
(dp4826
g74
I5
ssg75
g4820
sg68
(lp4827
g61
(g70
g63
NtRp4828
(dp4829
g66
(dp4830
g74
I4
ssg75
Nsg68
(lp4831
g61
(g77
g63
NtRp4832
(dp4833
g66
(dp4834
sg75
g4828
sg68
(lp4835
g61
(g82
g63
NtRp4836
(dp4837
g66
(dp4838
sg75
g4832
sg68
(lp4839
g61
(g62
g63
NtRp4840
(dp4841
g66
(dp4842
g74
I4
ssg75
g4836
sg68
(lp4843
S'^\\w+\\.py$'
p4844
asbasbasbag61
(g77
g63
NtRp4845
(dp4846
g66
(dp4847
sg75
g4828
sg68
(lp4848
g61
(g82
g63
NtRp4849
(dp4850
g66
(dp4851
sg75
g4845
sg68
(lp4852
g61
(g62
g63
NtRp4853
(dp4854
g66
(dp4855
g74
I4
ssg75
g4849
sg68
(lp4856
S'^default/\\w+\\.py$'
p4857
asbasbasbag61
(g77
g63
NtRp4858
(dp4859
g66
(dp4860
sg75
g4828
sg68
(lp4861
g61
(g82
g63
NtRp4862
(dp4863
g66
(dp4864
sg75
g4858
sg68
(lp4865
g61
(g62
g63
NtRp4866
(dp4867
g66
(dp4868
g74
I4
ssg75
g4862
sg68
(lp4869
S'^default/duplicate/\\w+\\.py$'
p4870
asbasbasbasbasbasbasbag61
(g77
g63
NtRp4871
(dp4872
g66
(dp4873
sg75
g3938
sg68
(lp4874
g61
(g82
g63
NtRp4875
(dp4876
g66
(dp4877
g86
g87
ssg75
g4871
sg68
(lp4878
S'postprocessing'
p4879
asbag61
(g82
g63
NtRp4880
(dp4881
g66
(dp4882
g93
g94
ssg75
g4871
sg68
(lp4883
S':'
asbag61
(g82
g63
NtRp4884
(dp4885
g66
(dp4886
sg75
g4871
sg68
(lp4887
g61
(g62
g63
NtRp4888
(dp4889
g66
(dp4890
g74
I5
ssg75
g4884
sg68
(lp4891
g61
(g70
g63
NtRp4892
(dp4893
g66
(dp4894
g74
I4
ssg75
Nsg68
(lp4895
sbasbasbasbag61
(g77
g63
NtRp4896
(dp4897
g66
(dp4898
sg75
g3938
sg68
(lp4899
g61
(g82
g63
NtRp4900
(dp4901
g66
(dp4902
g86
g87
ssg75
g4896
sg68
(lp4903
S'session_cookie_expires'
p4904
asbag61
(g82
g63
NtRp4905
(dp4906
g66
(dp4907
g93
g94
ssg75
g4896
sg68
(lp4908
S':'
asbag61
(g82
g63
NtRp4909
(dp4910
g66
(dp4911
sg75
g4896
sg68
(lp4912
g61
(g62
g63
NtRp4913
(dp4914
g66
(dp4915
g74
I5
ssg75
g4909
sg68
(lp4916
S'None'
p4917
asbasbasbag61
(g77
g63
NtRp4918
(dp4919
g66
(dp4920
sg75
g3938
sg68
(lp4921
g61
(g82
g63
NtRp4922
(dp4923
g66
(dp4924
g86
g87
ssg75
g4918
sg68
(lp4925
S'session_data_name'
p4926
asbag61
(g82
g63
NtRp4927
(dp4928
g66
(dp4929
g93
g94
ssg75
g4918
sg68
(lp4930
S':'
asbag61
(g82
g63
NtRp4931
(dp4932
g66
(dp4933
sg75
g4918
sg68
(lp4934
g61
(g62
g63
NtRp4935
(dp4936
g66
(dp4937
g74
I5
ssg75
g4931
sg68
(lp4938
S'session_data_dev_bootstrap_ch'
p4939
asbasbasbag61
(g77
g63
NtRp4940
(dp4941
g66
(dp4942
sg75
g3938
sg68
(lp4943
g61
(g82
g63
NtRp4944
(dp4945
g66
(dp4946
g86
g87
ssg75
g4940
sg68
(lp4947
S'session_file'
p4948
asbag61
(g82
g63
NtRp4949
(dp4950
g66
(dp4951
g93
g94
ssg75
g4940
sg68
(lp4952
S':'
asbag61
(g82
g63
NtRp4953
(dp4954
g66
(dp4955
sg75
g4940
sg68
(lp4956
g61
(g62
g63
NtRp4957
(dp4958
g66
(dp4959
g74
I5
ssg75
g4953
sg68
(lp4960
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xae4ba4f0>"
p4961
asbasbasbag61
(g77
g63
NtRp4962
(dp4963
g66
(dp4964
sg75
g3938
sg68
(lp4965
g61
(g82
g63
NtRp4966
(dp4967
g66
(dp4968
g86
g87
ssg75
g4962
sg68
(lp4969
S'session_filename'
p4970
asbag61
(g82
g63
NtRp4971
(dp4972
g66
(dp4973
g93
g94
ssg75
g4962
sg68
(lp4974
S':'
asbag61
(g82
g63
NtRp4975
(dp4976
g66
(dp4977
sg75
g4962
sg68
(lp4978
g61
(g62
g63
NtRp4979
(dp4980
g66
(dp4981
g74
I5
ssg75
g4975
sg68
(lp4982
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4983
asbasbasbag61
(g77
g63
NtRp4984
(dp4985
g66
(dp4986
sg75
g3938
sg68
(lp4987
g61
(g82
g63
NtRp4988
(dp4989
g66
(dp4990
g86
g87
ssg75
g4984
sg68
(lp4991
S'session_id'
p4992
asbag61
(g82
g63
NtRp4993
(dp4994
g66
(dp4995
g93
g94
ssg75
g4984
sg68
(lp4996
S':'
asbag61
(g82
g63
NtRp4997
(dp4998
g66
(dp4999
sg75
g4984
sg68
(lp5000
g61
(g62
g63
NtRp5001
(dp5002
g66
(dp5003
g74
I5
ssg75
g4997
sg68
(lp5004
g554
asbasbasbag61
(g77
g63
NtRp5005
(dp5006
g66
(dp5007
sg75
g3938
sg68
(lp5008
g61
(g82
g63
NtRp5009
(dp5010
g66
(dp5011
g86
g87
ssg75
g5005
sg68
(lp5012
S'session_id_name'
p5013
asbag61
(g82
g63
NtRp5014
(dp5015
g66
(dp5016
g93
g94
ssg75
g5005
sg68
(lp5017
S':'
asbag61
(g82
g63
NtRp5018
(dp5019
g66
(dp5020
sg75
g5005
sg68
(lp5021
g61
(g62
g63
NtRp5022
(dp5023
g66
(dp5024
g74
I5
ssg75
g5018
sg68
(lp5025
g3995
asbasbasbag61
(g77
g63
NtRp5026
(dp5027
g66
(dp5028
sg75
g3938
sg68
(lp5029
g61
(g82
g63
NtRp5030
(dp5031
g66
(dp5032
g86
g87
ssg75
g5026
sg68
(lp5033
S'session_locked'
p5034
asbag61
(g82
g63
NtRp5035
(dp5036
g66
(dp5037
g93
g94
ssg75
g5026
sg68
(lp5038
S':'
asbag61
(g82
g63
NtRp5039
(dp5040
g66
(dp5041
sg75
g5026
sg68
(lp5042
g61
(g62
g63
NtRp5043
(dp5044
g66
(dp5045
g74
I5
ssg75
g5039
sg68
(lp5046
g1706
asbasbasbag61
(g77
g63
NtRp5047
(dp5048
g66
(dp5049
sg75
g3938
sg68
(lp5050
g61
(g82
g63
NtRp5051
(dp5052
g66
(dp5053
g86
g87
ssg75
g5047
sg68
(lp5054
S'session_new'
p5055
asbag61
(g82
g63
NtRp5056
(dp5057
g66
(dp5058
g93
g94
ssg75
g5047
sg68
(lp5059
S':'
asbag61
(g82
g63
NtRp5060
(dp5061
g66
(dp5062
sg75
g5047
sg68
(lp5063
g61
(g62
g63
NtRp5064
(dp5065
g66
(dp5066
g74
I5
ssg75
g5060
sg68
(lp5067
g104
asbasbasbag61
(g77
g63
NtRp5068
(dp5069
g66
(dp5070
sg75
g3938
sg68
(lp5071
g61
(g82
g63
NtRp5072
(dp5073
g66
(dp5074
g86
g87
ssg75
g5068
sg68
(lp5075
S'session_storage_type'
p5076
asbag61
(g82
g63
NtRp5077
(dp5078
g66
(dp5079
g93
g94
ssg75
g5068
sg68
(lp5080
S':'
asbag61
(g82
g63
NtRp5081
(dp5082
g66
(dp5083
sg75
g5068
sg68
(lp5084
g61
(g62
g63
NtRp5085
(dp5086
g66
(dp5087
g74
I5
ssg75
g5081
sg68
(lp5088
g3180
asbasbasbag61
(g77
g63
NtRp5089
(dp5090
g66
(dp5091
sg75
g3938
sg68
(lp5092
g61
(g82
g63
NtRp5093
(dp5094
g66
(dp5095
g86
g87
ssg75
g5089
sg68
(lp5096
S'status'
p5097
asbag61
(g82
g63
NtRp5098
(dp5099
g66
(dp5100
g93
g94
ssg75
g5089
sg68
(lp5101
S':'
asbag61
(g82
g63
NtRp5102
(dp5103
g66
(dp5104
sg75
g5089
sg68
(lp5105
g61
(g62
g63
NtRp5106
(dp5107
g66
(dp5108
g74
I5
ssg75
g5102
sg68
(lp5109
S'200'
p5110
asbasbasbag61
(g77
g63
NtRp5111
(dp5112
g66
(dp5113
sg75
g3938
sg68
(lp5114
g61
(g82
g63
NtRp5115
(dp5116
g66
(dp5117
g86
g87
ssg75
g5111
sg68
(lp5118
S'subtitle'
p5119
asbag61
(g82
g63
NtRp5120
(dp5121
g66
(dp5122
g93
g94
ssg75
g5111
sg68
(lp5123
S':'
asbag61
(g82
g63
NtRp5124
(dp5125
g66
(dp5126
sg75
g5111
sg68
(lp5127
g61
(g62
g63
NtRp5128
(dp5129
g66
(dp5130
g74
I5
ssg75
g5124
sg68
(lp5131
g4559
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5132
asbasbasbag61
(g77
g63
NtRp5133
(dp5134
g66
(dp5135
sg75
g3938
sg68
(lp5136
g61
(g82
g63
NtRp5137
(dp5138
g66
(dp5139
g86
g87
ssg75
g5133
sg68
(lp5140
g3804
asbag61
(g82
g63
NtRp5141
(dp5142
g66
(dp5143
g93
g94
ssg75
g5133
sg68
(lp5144
S':'
asbag61
(g82
g63
NtRp5145
(dp5146
g66
(dp5147
sg75
g5133
sg68
(lp5148
g61
(g62
g63
NtRp5149
(dp5150
g66
(dp5151
g74
I5
ssg75
g5145
sg68
(lp5152
g126
asbasbasbag61
(g77
g63
NtRp5153
(dp5154
g66
(dp5155
sg75
g3938
sg68
(lp5156
g61
(g82
g63
NtRp5157
(dp5158
g66
(dp5159
g86
g87
ssg75
g5153
sg68
(lp5160
S'view'
p5161
asbag61
(g82
g63
NtRp5162
(dp5163
g66
(dp5164
g93
g94
ssg75
g5153
sg68
(lp5165
S':'
asbag61
(g82
g63
NtRp5166
(dp5167
g66
(dp5168
sg75
g5153
sg68
(lp5169
g61
(g62
g63
NtRp5170
(dp5171
g66
(dp5172
g74
I5
ssg75
g5166
sg68
(lp5173
S'default/duplicate.html'
p5174
asbasbasbasbasbsS'locals'
p5175
(dp5176
S'query'
p5177
S'"INSERT INTO sample(publication_status,code,descr...UES (\'F\',\'32\',\'saf\',\'\',2,1,\'1\',\'replicate\',\'12\');"'
p5178
sS'self'
p5179
S'<gluon.dal.SQLiteAdapter object>'
p5180
sS'e'
S"IntegrityError('column name is not unique',)"
p5181
sS'fields'
p5182
S"[(<gluon.dal.Field object>, False), (<gluon.dal.Field object>, '32'), (<gluon.dal.Field object>, 'saf'), (<gluon.dal.Field object>, ''), (<gluon.dal.Field object>, 2), (<gluon.dal.Field object>, 1), (<gluon.dal.Field object>, '1'), (<gluon.dal.Field object>, 'replicate'), (<gluon.dal.Field object>, '12')]"
p5183
sS'table'
p5184
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p5185
sssS'traceback'
p5186
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1135, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 357, in duplicate\n    db.sample.insert(**db.sample._filter_fields(rec))\n  File "/home/anil/bootstrap/web2py/gluon/dal.py", line 7918, in insert\n    ret =  self._db._adapter.insert(self,self._listify(fields))\n  File "/home/anil/bootstrap/web2py/gluon/dal.py", line 1176, in insert\n    raise e\nIntegrityError: column name is not unique\n'
p5187
s.