(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'Table' object has no attribute 'project'"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args\n    l1=[lambda row: A(\'copy\',_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\']) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router(l):\n\tif \'biosource\' in l:\n\t  redirect(URL(\'insert_biosource\',args = l))\n\telif \'plant_growth_condition\' in l:\n\t  redirect(URL(\'insert_pgc\',args = l))\n\telif \'treatments\' in l:\n\t  redirect(URL(\'insert_treatments\',args = l))\n\telif \'harvests\' in l:\n\t  redirect(URL(\'insert_harvests\',args = l))\n\telif \'extraction_preparation\' in l:\n\t  redirect(URL(\'insert_ep\',args = l))\n\telif \'gas_chromatography\' in l:\n\t  redirect(URL(\'insert_gc\',args = l))\n\telif \'liquid_chromatography\' in l:\n\t  redirect(URL(\'insert_lc\',args = l))\n\telif \'mass_spectroscopy\' in l:\n\t  redirect(URL(\'insert_ms\',args = l))\n        elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n\telif \'sample\' in l and \'view\' in l:\t\t\n\t  redirect(URL(\'sample\',args=l))\n        else:\n          return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n       row = db(db.sample.id == eid).update(publication_status = True)\n    if request.args(0) == \'remove\':\n       row = db(db.sample.id == eid).update(publication_status = False)\n    return locals()\n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(home_page)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'Table\' object has no attribute \'project\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'Table' object has no attribute 'project'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
sbasbasbasbag57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g67
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
g82
g83
ssg71
g147
sg64
(lp154
S'body'
p155
asbag57
(g78
g59
NtRp156
(dp157
g62
(dp158
g89
g90
ssg71
g147
sg64
(lp159
S':'
asbag57
(g78
g59
NtRp160
(dp161
g62
(dp162
sg71
g147
sg64
(lp163
g57
(g58
g59
NtRp164
(dp165
g62
(dp166
g70
I5
ssg71
g160
sg64
(lp167
S'<cStringIO.StringO object at 0xade82580>'
p168
asbasbasbag57
(g73
g59
NtRp169
(dp170
g62
(dp171
sg71
g67
sg64
(lp172
g57
(g78
g59
NtRp173
(dp174
g62
(dp175
g82
g83
ssg71
g169
sg64
(lp176
S'cid'
p177
asbag57
(g78
g59
NtRp178
(dp179
g62
(dp180
g89
g90
ssg71
g169
sg64
(lp181
S':'
asbag57
(g78
g59
NtRp182
(dp183
g62
(dp184
sg71
g169
sg64
(lp185
g57
(g58
g59
NtRp186
(dp187
g62
(dp188
g70
I5
ssg71
g182
sg64
(lp189
S'None'
p190
asbasbasbag57
(g73
g59
NtRp191
(dp192
g62
(dp193
sg71
g67
sg64
(lp194
g57
(g78
g59
NtRp195
(dp196
g62
(dp197
g82
g83
ssg71
g191
sg64
(lp198
S'client'
p199
asbag57
(g78
g59
NtRp200
(dp201
g62
(dp202
g89
g90
ssg71
g191
sg64
(lp203
S':'
asbag57
(g78
g59
NtRp204
(dp205
g62
(dp206
sg71
g191
sg64
(lp207
g57
(g58
g59
NtRp208
(dp209
g62
(dp210
g70
I5
ssg71
g204
sg64
(lp211
S'127.0.0.1'
p212
asbasbasbag57
(g73
g59
NtRp213
(dp214
g62
(dp215
sg71
g67
sg64
(lp216
g57
(g78
g59
NtRp217
(dp218
g62
(dp219
g82
g83
ssg71
g213
sg64
(lp220
S'controller'
p221
asbag57
(g78
g59
NtRp222
(dp223
g62
(dp224
g89
g90
ssg71
g213
sg64
(lp225
S':'
asbag57
(g78
g59
NtRp226
(dp227
g62
(dp228
sg71
g213
sg64
(lp229
g57
(g58
g59
NtRp230
(dp231
g62
(dp232
g70
I5
ssg71
g226
sg64
(lp233
S'default'
p234
asbasbasbag57
(g73
g59
NtRp235
(dp236
g62
(dp237
sg71
g67
sg64
(lp238
g57
(g78
g59
NtRp239
(dp240
g62
(dp241
g82
g83
ssg71
g235
sg64
(lp242
S'cookies'
p243
asbag57
(g78
g59
NtRp244
(dp245
g62
(dp246
g89
g90
ssg71
g235
sg64
(lp247
S':'
asbag57
(g78
g59
NtRp248
(dp249
g62
(dp250
sg71
g235
sg64
(lp251
g57
(g58
g59
NtRp252
(dp253
g62
(dp254
g70
I5
ssg71
g248
sg64
(lp255
g57
(g66
g59
NtRp256
(dp257
g62
(dp258
g70
I4
ssg71
Nsg64
(lp259
g57
(g73
g59
NtRp260
(dp261
g62
(dp262
sg71
g256
sg64
(lp263
g57
(g78
g59
NtRp264
(dp265
g62
(dp266
g82
g83
ssg71
g260
sg64
(lp267
S'session_id_demo'
p268
asbag57
(g78
g59
NtRp269
(dp270
g62
(dp271
g89
g90
ssg71
g260
sg64
(lp272
S':'
asbag57
(g78
g59
NtRp273
(dp274
g62
(dp275
sg71
g260
sg64
(lp276
g57
(g58
g59
NtRp277
(dp278
g62
(dp279
g70
I4
ssg71
g273
sg64
(lp280
S'127.0.0.1-25708396-7470-407a-8d38-08ed3cbb5ed9'
p281
ag57
(g66
g59
NtRp282
(dp283
g62
(dp284
g70
I3
ssg71
Nsg64
(lp285
g57
(g73
g59
NtRp286
(dp287
g62
(dp288
sg71
g282
sg64
(lp289
g57
(g78
g59
NtRp290
(dp291
g62
(dp292
g82
g83
ssg71
g286
sg64
(lp293
S'comment'
p294
asbag57
(g78
g59
NtRp295
(dp296
g62
(dp297
g89
g90
ssg71
g286
sg64
(lp298
S':'
asbag57
(g78
g59
NtRp299
(dp300
g62
(dp301
sg71
g286
sg64
(lp302
g57
(g58
g59
NtRp303
(dp304
g62
(dp305
g70
I3
ssg71
g299
sg64
(lp306
S''
asbasbasbag57
(g73
g59
NtRp307
(dp308
g62
(dp309
sg71
g282
sg64
(lp310
g57
(g78
g59
NtRp311
(dp312
g62
(dp313
g82
g83
ssg71
g307
sg64
(lp314
S'domain'
p315
asbag57
(g78
g59
NtRp316
(dp317
g62
(dp318
g89
g90
ssg71
g307
sg64
(lp319
S':'
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
sg71
g307
sg64
(lp323
g57
(g58
g59
NtRp324
(dp325
g62
(dp326
g70
I3
ssg71
g320
sg64
(lp327
S''
asbasbasbag57
(g73
g59
NtRp328
(dp329
g62
(dp330
sg71
g282
sg64
(lp331
g57
(g78
g59
NtRp332
(dp333
g62
(dp334
g82
g83
ssg71
g328
sg64
(lp335
S'expires'
p336
asbag57
(g78
g59
NtRp337
(dp338
g62
(dp339
g89
g90
ssg71
g328
sg64
(lp340
S':'
asbag57
(g78
g59
NtRp341
(dp342
g62
(dp343
sg71
g328
sg64
(lp344
g57
(g58
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
g341
sg64
(lp348
S''
asbasbasbag57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g282
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'httponly'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g282
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'max-age'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g282
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'path'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g282
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'secure'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g282
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'version'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g256
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'session_id_dev_bootstrap'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I4
ssg71
g467
sg64
(lp474
S'127.0.0.1-4e736276-fb30-4d0d-9bbc-59a206f1e27c'
p475
ag57
(g66
g59
NtRp476
(dp477
g62
(dp478
g70
I3
ssg71
Nsg64
(lp479
g57
(g73
g59
NtRp480
(dp481
g62
(dp482
sg71
g476
sg64
(lp483
g57
(g78
g59
NtRp484
(dp485
g62
(dp486
g82
g83
ssg71
g480
sg64
(lp487
g294
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
g89
g90
ssg71
g480
sg64
(lp491
S':'
asbag57
(g78
g59
NtRp492
(dp493
g62
(dp494
sg71
g480
sg64
(lp495
g57
(g58
g59
NtRp496
(dp497
g62
(dp498
g70
I3
ssg71
g492
sg64
(lp499
S''
asbasbasbag57
(g73
g59
NtRp500
(dp501
g62
(dp502
sg71
g476
sg64
(lp503
g57
(g78
g59
NtRp504
(dp505
g62
(dp506
g82
g83
ssg71
g500
sg64
(lp507
g315
asbag57
(g78
g59
NtRp508
(dp509
g62
(dp510
g89
g90
ssg71
g500
sg64
(lp511
S':'
asbag57
(g78
g59
NtRp512
(dp513
g62
(dp514
sg71
g500
sg64
(lp515
g57
(g58
g59
NtRp516
(dp517
g62
(dp518
g70
I3
ssg71
g512
sg64
(lp519
S''
asbasbasbag57
(g73
g59
NtRp520
(dp521
g62
(dp522
sg71
g476
sg64
(lp523
g57
(g78
g59
NtRp524
(dp525
g62
(dp526
g82
g83
ssg71
g520
sg64
(lp527
g336
asbag57
(g78
g59
NtRp528
(dp529
g62
(dp530
g89
g90
ssg71
g520
sg64
(lp531
S':'
asbag57
(g78
g59
NtRp532
(dp533
g62
(dp534
sg71
g520
sg64
(lp535
g57
(g58
g59
NtRp536
(dp537
g62
(dp538
g70
I3
ssg71
g532
sg64
(lp539
S''
asbasbasbag57
(g73
g59
NtRp540
(dp541
g62
(dp542
sg71
g476
sg64
(lp543
g57
(g78
g59
NtRp544
(dp545
g62
(dp546
g82
g83
ssg71
g540
sg64
(lp547
g357
asbag57
(g78
g59
NtRp548
(dp549
g62
(dp550
g89
g90
ssg71
g540
sg64
(lp551
S':'
asbag57
(g78
g59
NtRp552
(dp553
g62
(dp554
sg71
g540
sg64
(lp555
g57
(g58
g59
NtRp556
(dp557
g62
(dp558
g70
I3
ssg71
g552
sg64
(lp559
S''
asbasbasbag57
(g73
g59
NtRp560
(dp561
g62
(dp562
sg71
g476
sg64
(lp563
g57
(g78
g59
NtRp564
(dp565
g62
(dp566
g82
g83
ssg71
g560
sg64
(lp567
g378
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
g89
g90
ssg71
g560
sg64
(lp571
S':'
asbag57
(g78
g59
NtRp572
(dp573
g62
(dp574
sg71
g560
sg64
(lp575
g57
(g58
g59
NtRp576
(dp577
g62
(dp578
g70
I3
ssg71
g572
sg64
(lp579
S''
asbasbasbag57
(g73
g59
NtRp580
(dp581
g62
(dp582
sg71
g476
sg64
(lp583
g57
(g78
g59
NtRp584
(dp585
g62
(dp586
g82
g83
ssg71
g580
sg64
(lp587
g399
asbag57
(g78
g59
NtRp588
(dp589
g62
(dp590
g89
g90
ssg71
g580
sg64
(lp591
S':'
asbag57
(g78
g59
NtRp592
(dp593
g62
(dp594
sg71
g580
sg64
(lp595
g57
(g58
g59
NtRp596
(dp597
g62
(dp598
g70
I3
ssg71
g592
sg64
(lp599
S''
asbasbasbag57
(g73
g59
NtRp600
(dp601
g62
(dp602
sg71
g476
sg64
(lp603
g57
(g78
g59
NtRp604
(dp605
g62
(dp606
g82
g83
ssg71
g600
sg64
(lp607
g420
asbag57
(g78
g59
NtRp608
(dp609
g62
(dp610
g89
g90
ssg71
g600
sg64
(lp611
S':'
asbag57
(g78
g59
NtRp612
(dp613
g62
(dp614
sg71
g600
sg64
(lp615
g57
(g58
g59
NtRp616
(dp617
g62
(dp618
g70
I3
ssg71
g612
sg64
(lp619
S''
asbasbasbag57
(g73
g59
NtRp620
(dp621
g62
(dp622
sg71
g476
sg64
(lp623
g57
(g78
g59
NtRp624
(dp625
g62
(dp626
g82
g83
ssg71
g620
sg64
(lp627
g441
asbag57
(g78
g59
NtRp628
(dp629
g62
(dp630
g89
g90
ssg71
g620
sg64
(lp631
S':'
asbag57
(g78
g59
NtRp632
(dp633
g62
(dp634
sg71
g620
sg64
(lp635
g57
(g58
g59
NtRp636
(dp637
g62
(dp638
g70
I3
ssg71
g632
sg64
(lp639
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp640
(dp641
g62
(dp642
sg71
g256
sg64
(lp643
g57
(g78
g59
NtRp644
(dp645
g62
(dp646
g82
g83
ssg71
g640
sg64
(lp647
S'session_id_dev_bootstrap_ch'
p648
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g640
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g640
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I4
ssg71
g653
sg64
(lp660
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p661
ag57
(g66
g59
NtRp662
(dp663
g62
(dp664
g70
I3
ssg71
Nsg64
(lp665
g57
(g73
g59
NtRp666
(dp667
g62
(dp668
sg71
g662
sg64
(lp669
g57
(g78
g59
NtRp670
(dp671
g62
(dp672
g82
g83
ssg71
g666
sg64
(lp673
g294
asbag57
(g78
g59
NtRp674
(dp675
g62
(dp676
g89
g90
ssg71
g666
sg64
(lp677
S':'
asbag57
(g78
g59
NtRp678
(dp679
g62
(dp680
sg71
g666
sg64
(lp681
g57
(g58
g59
NtRp682
(dp683
g62
(dp684
g70
I3
ssg71
g678
sg64
(lp685
S''
asbasbasbag57
(g73
g59
NtRp686
(dp687
g62
(dp688
sg71
g662
sg64
(lp689
g57
(g78
g59
NtRp690
(dp691
g62
(dp692
g82
g83
ssg71
g686
sg64
(lp693
g315
asbag57
(g78
g59
NtRp694
(dp695
g62
(dp696
g89
g90
ssg71
g686
sg64
(lp697
S':'
asbag57
(g78
g59
NtRp698
(dp699
g62
(dp700
sg71
g686
sg64
(lp701
g57
(g58
g59
NtRp702
(dp703
g62
(dp704
g70
I3
ssg71
g698
sg64
(lp705
S''
asbasbasbag57
(g73
g59
NtRp706
(dp707
g62
(dp708
sg71
g662
sg64
(lp709
g57
(g78
g59
NtRp710
(dp711
g62
(dp712
g82
g83
ssg71
g706
sg64
(lp713
g336
asbag57
(g78
g59
NtRp714
(dp715
g62
(dp716
g89
g90
ssg71
g706
sg64
(lp717
S':'
asbag57
(g78
g59
NtRp718
(dp719
g62
(dp720
sg71
g706
sg64
(lp721
g57
(g58
g59
NtRp722
(dp723
g62
(dp724
g70
I3
ssg71
g718
sg64
(lp725
S''
asbasbasbag57
(g73
g59
NtRp726
(dp727
g62
(dp728
sg71
g662
sg64
(lp729
g57
(g78
g59
NtRp730
(dp731
g62
(dp732
g82
g83
ssg71
g726
sg64
(lp733
g357
asbag57
(g78
g59
NtRp734
(dp735
g62
(dp736
g89
g90
ssg71
g726
sg64
(lp737
S':'
asbag57
(g78
g59
NtRp738
(dp739
g62
(dp740
sg71
g726
sg64
(lp741
g57
(g58
g59
NtRp742
(dp743
g62
(dp744
g70
I3
ssg71
g738
sg64
(lp745
S''
asbasbasbag57
(g73
g59
NtRp746
(dp747
g62
(dp748
sg71
g662
sg64
(lp749
g57
(g78
g59
NtRp750
(dp751
g62
(dp752
g82
g83
ssg71
g746
sg64
(lp753
g378
asbag57
(g78
g59
NtRp754
(dp755
g62
(dp756
g89
g90
ssg71
g746
sg64
(lp757
S':'
asbag57
(g78
g59
NtRp758
(dp759
g62
(dp760
sg71
g746
sg64
(lp761
g57
(g58
g59
NtRp762
(dp763
g62
(dp764
g70
I3
ssg71
g758
sg64
(lp765
S''
asbasbasbag57
(g73
g59
NtRp766
(dp767
g62
(dp768
sg71
g662
sg64
(lp769
g57
(g78
g59
NtRp770
(dp771
g62
(dp772
g82
g83
ssg71
g766
sg64
(lp773
g399
asbag57
(g78
g59
NtRp774
(dp775
g62
(dp776
g89
g90
ssg71
g766
sg64
(lp777
S':'
asbag57
(g78
g59
NtRp778
(dp779
g62
(dp780
sg71
g766
sg64
(lp781
g57
(g58
g59
NtRp782
(dp783
g62
(dp784
g70
I3
ssg71
g778
sg64
(lp785
S''
asbasbasbag57
(g73
g59
NtRp786
(dp787
g62
(dp788
sg71
g662
sg64
(lp789
g57
(g78
g59
NtRp790
(dp791
g62
(dp792
g82
g83
ssg71
g786
sg64
(lp793
g420
asbag57
(g78
g59
NtRp794
(dp795
g62
(dp796
g89
g90
ssg71
g786
sg64
(lp797
S':'
asbag57
(g78
g59
NtRp798
(dp799
g62
(dp800
sg71
g786
sg64
(lp801
g57
(g58
g59
NtRp802
(dp803
g62
(dp804
g70
I3
ssg71
g798
sg64
(lp805
S''
asbasbasbag57
(g73
g59
NtRp806
(dp807
g62
(dp808
sg71
g662
sg64
(lp809
g57
(g78
g59
NtRp810
(dp811
g62
(dp812
g82
g83
ssg71
g806
sg64
(lp813
g441
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
g89
g90
ssg71
g806
sg64
(lp817
S':'
asbag57
(g78
g59
NtRp818
(dp819
g62
(dp820
sg71
g806
sg64
(lp821
g57
(g58
g59
NtRp822
(dp823
g62
(dp824
g70
I3
ssg71
g818
sg64
(lp825
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp826
(dp827
g62
(dp828
sg71
g67
sg64
(lp829
g57
(g78
g59
NtRp830
(dp831
g62
(dp832
g82
g83
ssg71
g826
sg64
(lp833
S'env'
p834
asbag57
(g78
g59
NtRp835
(dp836
g62
(dp837
g89
g90
ssg71
g826
sg64
(lp838
S':'
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
sg71
g826
sg64
(lp842
g57
(g58
g59
NtRp843
(dp844
g62
(dp845
g70
I5
ssg71
g839
sg64
(lp846
g57
(g66
g59
NtRp847
(dp848
g62
(dp849
g70
I4
ssg71
Nsg64
(lp850
g57
(g73
g59
NtRp851
(dp852
g62
(dp853
sg71
g847
sg64
(lp854
g57
(g78
g59
NtRp855
(dp856
g62
(dp857
g82
g83
ssg71
g851
sg64
(lp858
S'app_folders'
p859
asbag57
(g78
g59
NtRp860
(dp861
g62
(dp862
g89
g90
ssg71
g851
sg64
(lp863
S':'
asbag57
(g78
g59
NtRp864
(dp865
g62
(dp866
sg71
g851
sg64
(lp867
g57
(g58
g59
NtRp868
(dp869
g62
(dp870
g70
I4
ssg71
g864
sg64
(lp871
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/demo/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p872
asbasbasbag57
(g73
g59
NtRp873
(dp874
g62
(dp875
sg71
g847
sg64
(lp876
g57
(g78
g59
NtRp877
(dp878
g62
(dp879
g82
g83
ssg71
g873
sg64
(lp880
S'applications_parent'
p881
asbag57
(g78
g59
NtRp882
(dp883
g62
(dp884
g89
g90
ssg71
g873
sg64
(lp885
S':'
asbag57
(g78
g59
NtRp886
(dp887
g62
(dp888
sg71
g873
sg64
(lp889
g57
(g58
g59
NtRp890
(dp891
g62
(dp892
g70
I4
ssg71
g886
sg64
(lp893
S'/home/anil/bootstrap/web2py'
p894
asbasbasbag57
(g73
g59
NtRp895
(dp896
g62
(dp897
sg71
g847
sg64
(lp898
g57
(g78
g59
NtRp899
(dp900
g62
(dp901
g82
g83
ssg71
g895
sg64
(lp902
S'cmd_args'
p903
asbag57
(g78
g59
NtRp904
(dp905
g62
(dp906
g89
g90
ssg71
g895
sg64
(lp907
S':'
asbag57
(g78
g59
NtRp908
(dp909
g62
(dp910
sg71
g895
sg64
(lp911
g57
(g58
g59
NtRp912
(dp913
g62
(dp914
g70
I4
ssg71
g908
sg64
(lp915
g57
(g66
g59
NtRp916
(dp917
g62
(dp918
g70
I3
ssg71
Nsg64
(lp919
sbasbasbasbag57
(g73
g59
NtRp920
(dp921
g62
(dp922
sg71
g847
sg64
(lp923
g57
(g78
g59
NtRp924
(dp925
g62
(dp926
g82
g83
ssg71
g920
sg64
(lp927
S'cmd_options'
p928
asbag57
(g78
g59
NtRp929
(dp930
g62
(dp931
g89
g90
ssg71
g920
sg64
(lp932
S':'
asbag57
(g78
g59
NtRp933
(dp934
g62
(dp935
sg71
g920
sg64
(lp936
g57
(g58
g59
NtRp937
(dp938
g62
(dp939
g70
I4
ssg71
g933
sg64
(lp940
S"<Values at 0xa3ed0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p941
asbasbasbag57
(g73
g59
NtRp942
(dp943
g62
(dp944
sg71
g847
sg64
(lp945
g57
(g78
g59
NtRp946
(dp947
g62
(dp948
g82
g83
ssg71
g942
sg64
(lp949
S'db_sessions'
p950
asbag57
(g78
g59
NtRp951
(dp952
g62
(dp953
g89
g90
ssg71
g942
sg64
(lp954
S':'
asbag57
(g78
g59
NtRp955
(dp956
g62
(dp957
sg71
g942
sg64
(lp958
g57
(g58
g59
NtRp959
(dp960
g62
(dp961
g70
I4
ssg71
g955
sg64
(lp962
S'set([])'
p963
asbasbasbag57
(g73
g59
NtRp964
(dp965
g62
(dp966
sg71
g847
sg64
(lp967
g57
(g78
g59
NtRp968
(dp969
g62
(dp970
g82
g83
ssg71
g964
sg64
(lp971
S'debugging'
p972
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
g89
g90
ssg71
g964
sg64
(lp976
S':'
asbag57
(g78
g59
NtRp977
(dp978
g62
(dp979
sg71
g964
sg64
(lp980
g57
(g58
g59
NtRp981
(dp982
g62
(dp983
g70
I4
ssg71
g977
sg64
(lp984
g100
asbasbasbag57
(g73
g59
NtRp985
(dp986
g62
(dp987
sg71
g847
sg64
(lp988
g57
(g78
g59
NtRp989
(dp990
g62
(dp991
g82
g83
ssg71
g985
sg64
(lp992
S'gluon_parent'
p993
asbag57
(g78
g59
NtRp994
(dp995
g62
(dp996
g89
g90
ssg71
g985
sg64
(lp997
S':'
asbag57
(g78
g59
NtRp998
(dp999
g62
(dp1000
sg71
g985
sg64
(lp1001
g57
(g58
g59
NtRp1002
(dp1003
g62
(dp1004
g70
I4
ssg71
g998
sg64
(lp1005
S'/home/anil/bootstrap/web2py'
p1006
asbasbasbag57
(g73
g59
NtRp1007
(dp1008
g62
(dp1009
sg71
g847
sg64
(lp1010
g57
(g78
g59
NtRp1011
(dp1012
g62
(dp1013
g82
g83
ssg71
g1007
sg64
(lp1014
S'http_accept'
p1015
asbag57
(g78
g59
NtRp1016
(dp1017
g62
(dp1018
g89
g90
ssg71
g1007
sg64
(lp1019
S':'
asbag57
(g78
g59
NtRp1020
(dp1021
g62
(dp1022
sg71
g1007
sg64
(lp1023
g57
(g58
g59
NtRp1024
(dp1025
g62
(dp1026
g70
I4
ssg71
g1020
sg64
(lp1027
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1028
asbasbasbag57
(g73
g59
NtRp1029
(dp1030
g62
(dp1031
sg71
g847
sg64
(lp1032
g57
(g78
g59
NtRp1033
(dp1034
g62
(dp1035
g82
g83
ssg71
g1029
sg64
(lp1036
S'http_accept_charset'
p1037
asbag57
(g78
g59
NtRp1038
(dp1039
g62
(dp1040
g89
g90
ssg71
g1029
sg64
(lp1041
S':'
asbag57
(g78
g59
NtRp1042
(dp1043
g62
(dp1044
sg71
g1029
sg64
(lp1045
g57
(g58
g59
NtRp1046
(dp1047
g62
(dp1048
g70
I4
ssg71
g1042
sg64
(lp1049
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1050
asbasbasbag57
(g73
g59
NtRp1051
(dp1052
g62
(dp1053
sg71
g847
sg64
(lp1054
g57
(g78
g59
NtRp1055
(dp1056
g62
(dp1057
g82
g83
ssg71
g1051
sg64
(lp1058
S'http_accept_encoding'
p1059
asbag57
(g78
g59
NtRp1060
(dp1061
g62
(dp1062
g89
g90
ssg71
g1051
sg64
(lp1063
S':'
asbag57
(g78
g59
NtRp1064
(dp1065
g62
(dp1066
sg71
g1051
sg64
(lp1067
g57
(g58
g59
NtRp1068
(dp1069
g62
(dp1070
g70
I4
ssg71
g1064
sg64
(lp1071
S'gzip,deflate,sdch'
p1072
asbasbasbag57
(g73
g59
NtRp1073
(dp1074
g62
(dp1075
sg71
g847
sg64
(lp1076
g57
(g78
g59
NtRp1077
(dp1078
g62
(dp1079
g82
g83
ssg71
g1073
sg64
(lp1080
S'http_accept_language'
p1081
asbag57
(g78
g59
NtRp1082
(dp1083
g62
(dp1084
g89
g90
ssg71
g1073
sg64
(lp1085
S':'
asbag57
(g78
g59
NtRp1086
(dp1087
g62
(dp1088
sg71
g1073
sg64
(lp1089
g57
(g58
g59
NtRp1090
(dp1091
g62
(dp1092
g70
I4
ssg71
g1086
sg64
(lp1093
S'en-US,en;q=0.8'
p1094
asbasbasbag57
(g73
g59
NtRp1095
(dp1096
g62
(dp1097
sg71
g847
sg64
(lp1098
g57
(g78
g59
NtRp1099
(dp1100
g62
(dp1101
g82
g83
ssg71
g1095
sg64
(lp1102
S'http_connection'
p1103
asbag57
(g78
g59
NtRp1104
(dp1105
g62
(dp1106
g89
g90
ssg71
g1095
sg64
(lp1107
S':'
asbag57
(g78
g59
NtRp1108
(dp1109
g62
(dp1110
sg71
g1095
sg64
(lp1111
g57
(g58
g59
NtRp1112
(dp1113
g62
(dp1114
g70
I4
ssg71
g1108
sg64
(lp1115
S'keep-alive'
p1116
asbasbasbag57
(g73
g59
NtRp1117
(dp1118
g62
(dp1119
sg71
g847
sg64
(lp1120
g57
(g78
g59
NtRp1121
(dp1122
g62
(dp1123
g82
g83
ssg71
g1117
sg64
(lp1124
S'http_cookie'
p1125
asbag57
(g78
g59
NtRp1126
(dp1127
g62
(dp1128
g89
g90
ssg71
g1117
sg64
(lp1129
S':'
asbag57
(g78
g59
NtRp1130
(dp1131
g62
(dp1132
sg71
g1117
sg64
(lp1133
g57
(g58
g59
NtRp1134
(dp1135
g62
(dp1136
g70
I4
ssg71
g1130
sg64
(lp1137
S'session_id_dev_bootstrap=127.0.0.1-4e736276-fb30-4d0d-9bbc-59a206f1e27c; session_id_demo=127.0.0.1-25708396-7470-407a-8d38-08ed3cbb5ed9; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1138
asbasbasbag57
(g73
g59
NtRp1139
(dp1140
g62
(dp1141
sg71
g847
sg64
(lp1142
g57
(g78
g59
NtRp1143
(dp1144
g62
(dp1145
g82
g83
ssg71
g1139
sg64
(lp1146
S'http_host'
p1147
asbag57
(g78
g59
NtRp1148
(dp1149
g62
(dp1150
g89
g90
ssg71
g1139
sg64
(lp1151
S':'
asbag57
(g78
g59
NtRp1152
(dp1153
g62
(dp1154
sg71
g1139
sg64
(lp1155
g57
(g58
g59
NtRp1156
(dp1157
g62
(dp1158
g70
I4
ssg71
g1152
sg64
(lp1159
S'127.0.0.1:8000'
p1160
asbasbasbag57
(g73
g59
NtRp1161
(dp1162
g62
(dp1163
sg71
g847
sg64
(lp1164
g57
(g78
g59
NtRp1165
(dp1166
g62
(dp1167
g82
g83
ssg71
g1161
sg64
(lp1168
S'http_user_agent'
p1169
asbag57
(g78
g59
NtRp1170
(dp1171
g62
(dp1172
g89
g90
ssg71
g1161
sg64
(lp1173
S':'
asbag57
(g78
g59
NtRp1174
(dp1175
g62
(dp1176
sg71
g1161
sg64
(lp1177
g57
(g58
g59
NtRp1178
(dp1179
g62
(dp1180
g70
I4
ssg71
g1174
sg64
(lp1181
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'
p1182
asbasbasbag57
(g73
g59
NtRp1183
(dp1184
g62
(dp1185
sg71
g847
sg64
(lp1186
g57
(g78
g59
NtRp1187
(dp1188
g62
(dp1189
g82
g83
ssg71
g1183
sg64
(lp1190
S'is_jython'
p1191
asbag57
(g78
g59
NtRp1192
(dp1193
g62
(dp1194
g89
g90
ssg71
g1183
sg64
(lp1195
S':'
asbag57
(g78
g59
NtRp1196
(dp1197
g62
(dp1198
sg71
g1183
sg64
(lp1199
g57
(g58
g59
NtRp1200
(dp1201
g62
(dp1202
g70
I4
ssg71
g1196
sg64
(lp1203
g100
asbasbasbag57
(g73
g59
NtRp1204
(dp1205
g62
(dp1206
sg71
g847
sg64
(lp1207
g57
(g78
g59
NtRp1208
(dp1209
g62
(dp1210
g82
g83
ssg71
g1204
sg64
(lp1211
S'is_pypy'
p1212
asbag57
(g78
g59
NtRp1213
(dp1214
g62
(dp1215
g89
g90
ssg71
g1204
sg64
(lp1216
S':'
asbag57
(g78
g59
NtRp1217
(dp1218
g62
(dp1219
sg71
g1204
sg64
(lp1220
g57
(g58
g59
NtRp1221
(dp1222
g62
(dp1223
g70
I4
ssg71
g1217
sg64
(lp1224
g100
asbasbasbag57
(g73
g59
NtRp1225
(dp1226
g62
(dp1227
sg71
g847
sg64
(lp1228
g57
(g78
g59
NtRp1229
(dp1230
g62
(dp1231
g82
g83
ssg71
g1225
sg64
(lp1232
S'local_hosts'
p1233
asbag57
(g78
g59
NtRp1234
(dp1235
g62
(dp1236
g89
g90
ssg71
g1225
sg64
(lp1237
S':'
asbag57
(g78
g59
NtRp1238
(dp1239
g62
(dp1240
sg71
g1225
sg64
(lp1241
g57
(g58
g59
NtRp1242
(dp1243
g62
(dp1244
g70
I4
ssg71
g1238
sg64
(lp1245
g57
(g66
g59
NtRp1246
(dp1247
g62
(dp1248
g70
I3
ssg71
Nsg64
(lp1249
g57
(g73
g59
NtRp1250
(dp1251
g62
(dp1252
sg71
g1246
sg64
(lp1253
g57
(g78
g59
NtRp1254
(dp1255
g62
(dp1256
sg71
g1250
sg64
(lp1257
g57
(g58
g59
NtRp1258
(dp1259
g62
(dp1260
g70
I3
ssg71
g1254
sg64
(lp1261
S'::1'
p1262
asbasbasbag57
(g73
g59
NtRp1263
(dp1264
g62
(dp1265
sg71
g1246
sg64
(lp1266
g57
(g78
g59
NtRp1267
(dp1268
g62
(dp1269
sg71
g1263
sg64
(lp1270
g57
(g58
g59
NtRp1271
(dp1272
g62
(dp1273
g70
I3
ssg71
g1267
sg64
(lp1274
S'127.0.1.1'
p1275
asbasbasbag57
(g73
g59
NtRp1276
(dp1277
g62
(dp1278
sg71
g1246
sg64
(lp1279
g57
(g78
g59
NtRp1280
(dp1281
g62
(dp1282
sg71
g1276
sg64
(lp1283
g57
(g58
g59
NtRp1284
(dp1285
g62
(dp1286
g70
I3
ssg71
g1280
sg64
(lp1287
S'::ffff:127.0.0.1'
p1288
asbasbasbag57
(g73
g59
NtRp1289
(dp1290
g62
(dp1291
sg71
g1246
sg64
(lp1292
g57
(g78
g59
NtRp1293
(dp1294
g62
(dp1295
sg71
g1289
sg64
(lp1296
g57
(g58
g59
NtRp1297
(dp1298
g62
(dp1299
g70
I3
ssg71
g1293
sg64
(lp1300
S'127.0.0.1'
p1301
asbasbasbag57
(g73
g59
NtRp1302
(dp1303
g62
(dp1304
sg71
g1246
sg64
(lp1305
g57
(g78
g59
NtRp1306
(dp1307
g62
(dp1308
sg71
g1302
sg64
(lp1309
g57
(g58
g59
NtRp1310
(dp1311
g62
(dp1312
g70
I3
ssg71
g1306
sg64
(lp1313
S'anil-Inspiron-1525'
p1314
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1315
(dp1316
g62
(dp1317
sg71
g847
sg64
(lp1318
g57
(g78
g59
NtRp1319
(dp1320
g62
(dp1321
g82
g83
ssg71
g1315
sg64
(lp1322
S'path_info'
p1323
asbag57
(g78
g59
NtRp1324
(dp1325
g62
(dp1326
g89
g90
ssg71
g1315
sg64
(lp1327
S':'
asbag57
(g78
g59
NtRp1328
(dp1329
g62
(dp1330
sg71
g1315
sg64
(lp1331
g57
(g58
g59
NtRp1332
(dp1333
g62
(dp1334
g70
I4
ssg71
g1328
sg64
(lp1335
S'/DEV_bootstrap_ch/default/home_page'
p1336
asbasbasbag57
(g73
g59
NtRp1337
(dp1338
g62
(dp1339
sg71
g847
sg64
(lp1340
g57
(g78
g59
NtRp1341
(dp1342
g62
(dp1343
g82
g83
ssg71
g1337
sg64
(lp1344
S'query_string'
p1345
asbag57
(g78
g59
NtRp1346
(dp1347
g62
(dp1348
g89
g90
ssg71
g1337
sg64
(lp1349
S':'
asbag57
(g78
g59
NtRp1350
(dp1351
g62
(dp1352
sg71
g1337
sg64
(lp1353
g57
(g58
g59
NtRp1354
(dp1355
g62
(dp1356
g70
I4
ssg71
g1350
sg64
(lp1357
S''
asbasbasbag57
(g73
g59
NtRp1358
(dp1359
g62
(dp1360
sg71
g847
sg64
(lp1361
g57
(g78
g59
NtRp1362
(dp1363
g62
(dp1364
g82
g83
ssg71
g1358
sg64
(lp1365
S'remote_addr'
p1366
asbag57
(g78
g59
NtRp1367
(dp1368
g62
(dp1369
g89
g90
ssg71
g1358
sg64
(lp1370
S':'
asbag57
(g78
g59
NtRp1371
(dp1372
g62
(dp1373
sg71
g1358
sg64
(lp1374
g57
(g58
g59
NtRp1375
(dp1376
g62
(dp1377
g70
I4
ssg71
g1371
sg64
(lp1378
g212
asbasbasbag57
(g73
g59
NtRp1379
(dp1380
g62
(dp1381
sg71
g847
sg64
(lp1382
g57
(g78
g59
NtRp1383
(dp1384
g62
(dp1385
g82
g83
ssg71
g1379
sg64
(lp1386
S'remote_port'
p1387
asbag57
(g78
g59
NtRp1388
(dp1389
g62
(dp1390
g89
g90
ssg71
g1379
sg64
(lp1391
S':'
asbag57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
sg71
g1379
sg64
(lp1395
g57
(g58
g59
NtRp1396
(dp1397
g62
(dp1398
g70
I4
ssg71
g1392
sg64
(lp1399
S'60850'
p1400
asbasbasbag57
(g73
g59
NtRp1401
(dp1402
g62
(dp1403
sg71
g847
sg64
(lp1404
g57
(g78
g59
NtRp1405
(dp1406
g62
(dp1407
g82
g83
ssg71
g1401
sg64
(lp1408
S'request_method'
p1409
asbag57
(g78
g59
NtRp1410
(dp1411
g62
(dp1412
g89
g90
ssg71
g1401
sg64
(lp1413
S':'
asbag57
(g78
g59
NtRp1414
(dp1415
g62
(dp1416
sg71
g1401
sg64
(lp1417
g57
(g58
g59
NtRp1418
(dp1419
g62
(dp1420
g70
I4
ssg71
g1414
sg64
(lp1421
S'GET'
p1422
asbasbasbag57
(g73
g59
NtRp1423
(dp1424
g62
(dp1425
sg71
g847
sg64
(lp1426
g57
(g78
g59
NtRp1427
(dp1428
g62
(dp1429
g82
g83
ssg71
g1423
sg64
(lp1430
S'request_uri'
p1431
asbag57
(g78
g59
NtRp1432
(dp1433
g62
(dp1434
g89
g90
ssg71
g1423
sg64
(lp1435
S':'
asbag57
(g78
g59
NtRp1436
(dp1437
g62
(dp1438
sg71
g1423
sg64
(lp1439
g57
(g58
g59
NtRp1440
(dp1441
g62
(dp1442
g70
I4
ssg71
g1436
sg64
(lp1443
g1336
asbasbasbag57
(g73
g59
NtRp1444
(dp1445
g62
(dp1446
sg71
g847
sg64
(lp1447
g57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g82
g83
ssg71
g1444
sg64
(lp1451
S'script_name'
p1452
asbag57
(g78
g59
NtRp1453
(dp1454
g62
(dp1455
g89
g90
ssg71
g1444
sg64
(lp1456
S':'
asbag57
(g78
g59
NtRp1457
(dp1458
g62
(dp1459
sg71
g1444
sg64
(lp1460
g57
(g58
g59
NtRp1461
(dp1462
g62
(dp1463
g70
I4
ssg71
g1457
sg64
(lp1464
S''
asbasbasbag57
(g73
g59
NtRp1465
(dp1466
g62
(dp1467
sg71
g847
sg64
(lp1468
g57
(g78
g59
NtRp1469
(dp1470
g62
(dp1471
g82
g83
ssg71
g1465
sg64
(lp1472
S'server_name'
p1473
asbag57
(g78
g59
NtRp1474
(dp1475
g62
(dp1476
g89
g90
ssg71
g1465
sg64
(lp1477
S':'
asbag57
(g78
g59
NtRp1478
(dp1479
g62
(dp1480
sg71
g1465
sg64
(lp1481
g57
(g58
g59
NtRp1482
(dp1483
g62
(dp1484
g70
I4
ssg71
g1478
sg64
(lp1485
S'anil-Inspiron-1525'
p1486
asbasbasbag57
(g73
g59
NtRp1487
(dp1488
g62
(dp1489
sg71
g847
sg64
(lp1490
g57
(g78
g59
NtRp1491
(dp1492
g62
(dp1493
g82
g83
ssg71
g1487
sg64
(lp1494
S'server_port'
p1495
asbag57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
g89
g90
ssg71
g1487
sg64
(lp1499
S':'
asbag57
(g78
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1487
sg64
(lp1503
g57
(g58
g59
NtRp1504
(dp1505
g62
(dp1506
g70
I4
ssg71
g1500
sg64
(lp1507
S'8000'
p1508
asbasbasbag57
(g73
g59
NtRp1509
(dp1510
g62
(dp1511
sg71
g847
sg64
(lp1512
g57
(g78
g59
NtRp1513
(dp1514
g62
(dp1515
g82
g83
ssg71
g1509
sg64
(lp1516
S'server_protocol'
p1517
asbag57
(g78
g59
NtRp1518
(dp1519
g62
(dp1520
g89
g90
ssg71
g1509
sg64
(lp1521
S':'
asbag57
(g78
g59
NtRp1522
(dp1523
g62
(dp1524
sg71
g1509
sg64
(lp1525
g57
(g58
g59
NtRp1526
(dp1527
g62
(dp1528
g70
I4
ssg71
g1522
sg64
(lp1529
S'HTTP/1.1'
p1530
asbasbasbag57
(g73
g59
NtRp1531
(dp1532
g62
(dp1533
sg71
g847
sg64
(lp1534
g57
(g78
g59
NtRp1535
(dp1536
g62
(dp1537
g82
g83
ssg71
g1531
sg64
(lp1538
S'server_software'
p1539
asbag57
(g78
g59
NtRp1540
(dp1541
g62
(dp1542
g89
g90
ssg71
g1531
sg64
(lp1543
S':'
asbag57
(g78
g59
NtRp1544
(dp1545
g62
(dp1546
sg71
g1531
sg64
(lp1547
g57
(g58
g59
NtRp1548
(dp1549
g62
(dp1550
g70
I4
ssg71
g1544
sg64
(lp1551
S'Rocket 1.2.6'
p1552
asbasbasbag57
(g73
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g847
sg64
(lp1556
g57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
g82
g83
ssg71
g1553
sg64
(lp1560
S'web2py_path'
p1561
asbag57
(g78
g59
NtRp1562
(dp1563
g62
(dp1564
g89
g90
ssg71
g1553
sg64
(lp1565
S':'
asbag57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
sg71
g1553
sg64
(lp1569
g57
(g58
g59
NtRp1570
(dp1571
g62
(dp1572
g70
I4
ssg71
g1566
sg64
(lp1573
g894
asbasbasbag57
(g73
g59
NtRp1574
(dp1575
g62
(dp1576
sg71
g847
sg64
(lp1577
g57
(g78
g59
NtRp1578
(dp1579
g62
(dp1580
g82
g83
ssg71
g1574
sg64
(lp1581
S'web2py_version'
p1582
asbag57
(g78
g59
NtRp1583
(dp1584
g62
(dp1585
g89
g90
ssg71
g1574
sg64
(lp1586
S':'
asbag57
(g78
g59
NtRp1587
(dp1588
g62
(dp1589
sg71
g1574
sg64
(lp1590
g57
(g58
g59
NtRp1591
(dp1592
g62
(dp1593
g70
I4
ssg71
g1587
sg64
(lp1594
g57
(g66
g59
NtRp1595
(dp1596
g62
(dp1597
g70
I3
ssg71
Nsg64
(lp1598
g57
(g73
g59
NtRp1599
(dp1600
g62
(dp1601
sg71
g1595
sg64
(lp1602
g57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
sg71
g1599
sg64
(lp1606
g57
(g58
g59
NtRp1607
(dp1608
g62
(dp1609
g70
I3
ssg71
g1603
sg64
(lp1610
S'2'
asbasbasbag57
(g73
g59
NtRp1611
(dp1612
g62
(dp1613
sg71
g1595
sg64
(lp1614
g57
(g78
g59
NtRp1615
(dp1616
g62
(dp1617
sg71
g1611
sg64
(lp1618
g57
(g58
g59
NtRp1619
(dp1620
g62
(dp1621
g70
I3
ssg71
g1615
sg64
(lp1622
S'3'
asbasbasbag57
(g73
g59
NtRp1623
(dp1624
g62
(dp1625
sg71
g1595
sg64
(lp1626
g57
(g78
g59
NtRp1627
(dp1628
g62
(dp1629
sg71
g1623
sg64
(lp1630
g57
(g58
g59
NtRp1631
(dp1632
g62
(dp1633
g70
I3
ssg71
g1627
sg64
(lp1634
S'2'
asbasbasbag57
(g73
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g1595
sg64
(lp1638
g57
(g78
g59
NtRp1639
(dp1640
g62
(dp1641
sg71
g1635
sg64
(lp1642
g57
(g58
g59
NtRp1643
(dp1644
g62
(dp1645
g70
I3
ssg71
g1639
sg64
(lp1646
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1647
asbasbasbag57
(g73
g59
NtRp1648
(dp1649
g62
(dp1650
sg71
g1595
sg64
(lp1651
g57
(g78
g59
NtRp1652
(dp1653
g62
(dp1654
sg71
g1648
sg64
(lp1655
g57
(g58
g59
NtRp1656
(dp1657
g62
(dp1658
g70
I3
ssg71
g1652
sg64
(lp1659
S'stable'
p1660
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1661
(dp1662
g62
(dp1663
sg71
g847
sg64
(lp1664
g57
(g78
g59
NtRp1665
(dp1666
g62
(dp1667
g82
g83
ssg71
g1661
sg64
(lp1668
S'wsgi_errors'
p1669
asbag57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
g89
g90
ssg71
g1661
sg64
(lp1673
S':'
asbag57
(g78
g59
NtRp1674
(dp1675
g62
(dp1676
sg71
g1661
sg64
(lp1677
g57
(g58
g59
NtRp1678
(dp1679
g62
(dp1680
g70
I4
ssg71
g1674
sg64
(lp1681
S"<open file '<stderr>', mode 'w' at 0xb734a0d0>"
p1682
asbasbasbag57
(g73
g59
NtRp1683
(dp1684
g62
(dp1685
sg71
g847
sg64
(lp1686
g57
(g78
g59
NtRp1687
(dp1688
g62
(dp1689
g82
g83
ssg71
g1683
sg64
(lp1690
S'wsgi_file_wrapper'
p1691
asbag57
(g78
g59
NtRp1692
(dp1693
g62
(dp1694
g89
g90
ssg71
g1683
sg64
(lp1695
S':'
asbag57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
sg71
g1683
sg64
(lp1699
g57
(g58
g59
NtRp1700
(dp1701
g62
(dp1702
g70
I4
ssg71
g1696
sg64
(lp1703
S'<class wsgiref.util.FileWrapper at 0xa376b9c>'
p1704
asbasbasbag57
(g73
g59
NtRp1705
(dp1706
g62
(dp1707
sg71
g847
sg64
(lp1708
g57
(g78
g59
NtRp1709
(dp1710
g62
(dp1711
g82
g83
ssg71
g1705
sg64
(lp1712
S'wsgi_input'
p1713
asbag57
(g78
g59
NtRp1714
(dp1715
g62
(dp1716
g89
g90
ssg71
g1705
sg64
(lp1717
S':'
asbag57
(g78
g59
NtRp1718
(dp1719
g62
(dp1720
sg71
g1705
sg64
(lp1721
g57
(g58
g59
NtRp1722
(dp1723
g62
(dp1724
g70
I4
ssg71
g1718
sg64
(lp1725
S'<socket._fileobject object at 0xade1a4ac>'
p1726
asbasbasbag57
(g73
g59
NtRp1727
(dp1728
g62
(dp1729
sg71
g847
sg64
(lp1730
g57
(g78
g59
NtRp1731
(dp1732
g62
(dp1733
g82
g83
ssg71
g1727
sg64
(lp1734
S'wsgi_multiprocess'
p1735
asbag57
(g78
g59
NtRp1736
(dp1737
g62
(dp1738
g89
g90
ssg71
g1727
sg64
(lp1739
S':'
asbag57
(g78
g59
NtRp1740
(dp1741
g62
(dp1742
sg71
g1727
sg64
(lp1743
g57
(g58
g59
NtRp1744
(dp1745
g62
(dp1746
g70
I4
ssg71
g1740
sg64
(lp1747
g100
asbasbasbag57
(g73
g59
NtRp1748
(dp1749
g62
(dp1750
sg71
g847
sg64
(lp1751
g57
(g78
g59
NtRp1752
(dp1753
g62
(dp1754
g82
g83
ssg71
g1748
sg64
(lp1755
S'wsgi_multithread'
p1756
asbag57
(g78
g59
NtRp1757
(dp1758
g62
(dp1759
g89
g90
ssg71
g1748
sg64
(lp1760
S':'
asbag57
(g78
g59
NtRp1761
(dp1762
g62
(dp1763
sg71
g1748
sg64
(lp1764
g57
(g58
g59
NtRp1765
(dp1766
g62
(dp1767
g70
I4
ssg71
g1761
sg64
(lp1768
S'True'
p1769
asbasbasbag57
(g73
g59
NtRp1770
(dp1771
g62
(dp1772
sg71
g847
sg64
(lp1773
g57
(g78
g59
NtRp1774
(dp1775
g62
(dp1776
g82
g83
ssg71
g1770
sg64
(lp1777
S'wsgi_run_once'
p1778
asbag57
(g78
g59
NtRp1779
(dp1780
g62
(dp1781
g89
g90
ssg71
g1770
sg64
(lp1782
S':'
asbag57
(g78
g59
NtRp1783
(dp1784
g62
(dp1785
sg71
g1770
sg64
(lp1786
g57
(g58
g59
NtRp1787
(dp1788
g62
(dp1789
g70
I4
ssg71
g1783
sg64
(lp1790
g100
asbasbasbag57
(g73
g59
NtRp1791
(dp1792
g62
(dp1793
sg71
g847
sg64
(lp1794
g57
(g78
g59
NtRp1795
(dp1796
g62
(dp1797
g82
g83
ssg71
g1791
sg64
(lp1798
S'wsgi_url_scheme'
p1799
asbag57
(g78
g59
NtRp1800
(dp1801
g62
(dp1802
g89
g90
ssg71
g1791
sg64
(lp1803
S':'
asbag57
(g78
g59
NtRp1804
(dp1805
g62
(dp1806
sg71
g1791
sg64
(lp1807
g57
(g58
g59
NtRp1808
(dp1809
g62
(dp1810
g70
I4
ssg71
g1804
sg64
(lp1811
S'http'
p1812
asbasbasbag57
(g73
g59
NtRp1813
(dp1814
g62
(dp1815
sg71
g847
sg64
(lp1816
g57
(g78
g59
NtRp1817
(dp1818
g62
(dp1819
g82
g83
ssg71
g1813
sg64
(lp1820
S'wsgi_version'
p1821
asbag57
(g78
g59
NtRp1822
(dp1823
g62
(dp1824
g89
g90
ssg71
g1813
sg64
(lp1825
S':'
asbag57
(g78
g59
NtRp1826
(dp1827
g62
(dp1828
sg71
g1813
sg64
(lp1829
g57
(g58
g59
NtRp1830
(dp1831
g62
(dp1832
g70
I4
ssg71
g1826
sg64
(lp1833
g57
(g66
g59
NtRp1834
(dp1835
g62
(dp1836
g70
I3
ssg71
Nsg64
(lp1837
g57
(g73
g59
NtRp1838
(dp1839
g62
(dp1840
sg71
g1834
sg64
(lp1841
g57
(g78
g59
NtRp1842
(dp1843
g62
(dp1844
sg71
g1838
sg64
(lp1845
g57
(g58
g59
NtRp1846
(dp1847
g62
(dp1848
g70
I3
ssg71
g1842
sg64
(lp1849
S'1'
asbasbasbag57
(g73
g59
NtRp1850
(dp1851
g62
(dp1852
sg71
g1834
sg64
(lp1853
g57
(g78
g59
NtRp1854
(dp1855
g62
(dp1856
sg71
g1850
sg64
(lp1857
g57
(g58
g59
NtRp1858
(dp1859
g62
(dp1860
g70
I3
ssg71
g1854
sg64
(lp1861
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1862
(dp1863
g62
(dp1864
sg71
g67
sg64
(lp1865
g57
(g78
g59
NtRp1866
(dp1867
g62
(dp1868
g82
g83
ssg71
g1862
sg64
(lp1869
S'extension'
p1870
asbag57
(g78
g59
NtRp1871
(dp1872
g62
(dp1873
g89
g90
ssg71
g1862
sg64
(lp1874
S':'
asbag57
(g78
g59
NtRp1875
(dp1876
g62
(dp1877
sg71
g1862
sg64
(lp1878
g57
(g58
g59
NtRp1879
(dp1880
g62
(dp1881
g70
I5
ssg71
g1875
sg64
(lp1882
S'html'
p1883
asbasbasbag57
(g73
g59
NtRp1884
(dp1885
g62
(dp1886
sg71
g67
sg64
(lp1887
g57
(g78
g59
NtRp1888
(dp1889
g62
(dp1890
g82
g83
ssg71
g1884
sg64
(lp1891
S'folder'
p1892
asbag57
(g78
g59
NtRp1893
(dp1894
g62
(dp1895
g89
g90
ssg71
g1884
sg64
(lp1896
S':'
asbag57
(g78
g59
NtRp1897
(dp1898
g62
(dp1899
sg71
g1884
sg64
(lp1900
g57
(g58
g59
NtRp1901
(dp1902
g62
(dp1903
g70
I5
ssg71
g1897
sg64
(lp1904
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1905
asbasbasbag57
(g73
g59
NtRp1906
(dp1907
g62
(dp1908
sg71
g67
sg64
(lp1909
g57
(g78
g59
NtRp1910
(dp1911
g62
(dp1912
g82
g83
ssg71
g1906
sg64
(lp1913
S'function'
p1914
asbag57
(g78
g59
NtRp1915
(dp1916
g62
(dp1917
g89
g90
ssg71
g1906
sg64
(lp1918
S':'
asbag57
(g78
g59
NtRp1919
(dp1920
g62
(dp1921
sg71
g1906
sg64
(lp1922
g57
(g58
g59
NtRp1923
(dp1924
g62
(dp1925
g70
I5
ssg71
g1919
sg64
(lp1926
S'home_page'
p1927
asbasbasbag57
(g73
g59
NtRp1928
(dp1929
g62
(dp1930
sg71
g67
sg64
(lp1931
g57
(g78
g59
NtRp1932
(dp1933
g62
(dp1934
g82
g83
ssg71
g1928
sg64
(lp1935
S'get_vars'
p1936
asbag57
(g78
g59
NtRp1937
(dp1938
g62
(dp1939
g89
g90
ssg71
g1928
sg64
(lp1940
S':'
asbag57
(g78
g59
NtRp1941
(dp1942
g62
(dp1943
sg71
g1928
sg64
(lp1944
g57
(g58
g59
NtRp1945
(dp1946
g62
(dp1947
g70
I5
ssg71
g1941
sg64
(lp1948
g57
(g66
g59
NtRp1949
(dp1950
g62
(dp1951
g70
I4
ssg71
Nsg64
(lp1952
sbasbasbasbag57
(g73
g59
NtRp1953
(dp1954
g62
(dp1955
sg71
g67
sg64
(lp1956
g57
(g78
g59
NtRp1957
(dp1958
g62
(dp1959
g82
g83
ssg71
g1953
sg64
(lp1960
S'global_settings'
p1961
asbag57
(g78
g59
NtRp1962
(dp1963
g62
(dp1964
g89
g90
ssg71
g1953
sg64
(lp1965
S':'
asbag57
(g78
g59
NtRp1966
(dp1967
g62
(dp1968
sg71
g1953
sg64
(lp1969
g57
(g58
g59
NtRp1970
(dp1971
g62
(dp1972
g70
I5
ssg71
g1966
sg64
(lp1973
g57
(g66
g59
NtRp1974
(dp1975
g62
(dp1976
g70
I4
ssg71
Nsg64
(lp1977
g57
(g73
g59
NtRp1978
(dp1979
g62
(dp1980
sg71
g1974
sg64
(lp1981
g57
(g78
g59
NtRp1982
(dp1983
g62
(dp1984
g82
g83
ssg71
g1978
sg64
(lp1985
g859
asbag57
(g78
g59
NtRp1986
(dp1987
g62
(dp1988
g89
g90
ssg71
g1978
sg64
(lp1989
S':'
asbag57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
sg71
g1978
sg64
(lp1993
g57
(g58
g59
NtRp1994
(dp1995
g62
(dp1996
g70
I4
ssg71
g1990
sg64
(lp1997
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/demo/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1998
asbasbasbag57
(g73
g59
NtRp1999
(dp2000
g62
(dp2001
sg71
g1974
sg64
(lp2002
g57
(g78
g59
NtRp2003
(dp2004
g62
(dp2005
g82
g83
ssg71
g1999
sg64
(lp2006
g881
asbag57
(g78
g59
NtRp2007
(dp2008
g62
(dp2009
g89
g90
ssg71
g1999
sg64
(lp2010
S':'
asbag57
(g78
g59
NtRp2011
(dp2012
g62
(dp2013
sg71
g1999
sg64
(lp2014
g57
(g58
g59
NtRp2015
(dp2016
g62
(dp2017
g70
I4
ssg71
g2011
sg64
(lp2018
g894
asbasbasbag57
(g73
g59
NtRp2019
(dp2020
g62
(dp2021
sg71
g1974
sg64
(lp2022
g57
(g78
g59
NtRp2023
(dp2024
g62
(dp2025
g82
g83
ssg71
g2019
sg64
(lp2026
g903
asbag57
(g78
g59
NtRp2027
(dp2028
g62
(dp2029
g89
g90
ssg71
g2019
sg64
(lp2030
S':'
asbag57
(g78
g59
NtRp2031
(dp2032
g62
(dp2033
sg71
g2019
sg64
(lp2034
g57
(g58
g59
NtRp2035
(dp2036
g62
(dp2037
g70
I4
ssg71
g2031
sg64
(lp2038
g57
(g66
g59
NtRp2039
(dp2040
g62
(dp2041
g70
I3
ssg71
Nsg64
(lp2042
sbasbasbasbag57
(g73
g59
NtRp2043
(dp2044
g62
(dp2045
sg71
g1974
sg64
(lp2046
g57
(g78
g59
NtRp2047
(dp2048
g62
(dp2049
g82
g83
ssg71
g2043
sg64
(lp2050
g928
asbag57
(g78
g59
NtRp2051
(dp2052
g62
(dp2053
g89
g90
ssg71
g2043
sg64
(lp2054
S':'
asbag57
(g78
g59
NtRp2055
(dp2056
g62
(dp2057
sg71
g2043
sg64
(lp2058
g57
(g58
g59
NtRp2059
(dp2060
g62
(dp2061
g70
I4
ssg71
g2055
sg64
(lp2062
S"<Values at 0xa3ed0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2063
asbasbasbag57
(g73
g59
NtRp2064
(dp2065
g62
(dp2066
sg71
g1974
sg64
(lp2067
g57
(g78
g59
NtRp2068
(dp2069
g62
(dp2070
g82
g83
ssg71
g2064
sg64
(lp2071
g950
asbag57
(g78
g59
NtRp2072
(dp2073
g62
(dp2074
g89
g90
ssg71
g2064
sg64
(lp2075
S':'
asbag57
(g78
g59
NtRp2076
(dp2077
g62
(dp2078
sg71
g2064
sg64
(lp2079
g57
(g58
g59
NtRp2080
(dp2081
g62
(dp2082
g70
I4
ssg71
g2076
sg64
(lp2083
S'set([])'
p2084
asbasbasbag57
(g73
g59
NtRp2085
(dp2086
g62
(dp2087
sg71
g1974
sg64
(lp2088
g57
(g78
g59
NtRp2089
(dp2090
g62
(dp2091
g82
g83
ssg71
g2085
sg64
(lp2092
g972
asbag57
(g78
g59
NtRp2093
(dp2094
g62
(dp2095
g89
g90
ssg71
g2085
sg64
(lp2096
S':'
asbag57
(g78
g59
NtRp2097
(dp2098
g62
(dp2099
sg71
g2085
sg64
(lp2100
g57
(g58
g59
NtRp2101
(dp2102
g62
(dp2103
g70
I4
ssg71
g2097
sg64
(lp2104
g100
asbasbasbag57
(g73
g59
NtRp2105
(dp2106
g62
(dp2107
sg71
g1974
sg64
(lp2108
g57
(g78
g59
NtRp2109
(dp2110
g62
(dp2111
g82
g83
ssg71
g2105
sg64
(lp2112
g993
asbag57
(g78
g59
NtRp2113
(dp2114
g62
(dp2115
g89
g90
ssg71
g2105
sg64
(lp2116
S':'
asbag57
(g78
g59
NtRp2117
(dp2118
g62
(dp2119
sg71
g2105
sg64
(lp2120
g57
(g58
g59
NtRp2121
(dp2122
g62
(dp2123
g70
I4
ssg71
g2117
sg64
(lp2124
g1006
asbasbasbag57
(g73
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g1974
sg64
(lp2128
g57
(g78
g59
NtRp2129
(dp2130
g62
(dp2131
g82
g83
ssg71
g2125
sg64
(lp2132
g1191
asbag57
(g78
g59
NtRp2133
(dp2134
g62
(dp2135
g89
g90
ssg71
g2125
sg64
(lp2136
S':'
asbag57
(g78
g59
NtRp2137
(dp2138
g62
(dp2139
sg71
g2125
sg64
(lp2140
g57
(g58
g59
NtRp2141
(dp2142
g62
(dp2143
g70
I4
ssg71
g2137
sg64
(lp2144
g100
asbasbasbag57
(g73
g59
NtRp2145
(dp2146
g62
(dp2147
sg71
g1974
sg64
(lp2148
g57
(g78
g59
NtRp2149
(dp2150
g62
(dp2151
g82
g83
ssg71
g2145
sg64
(lp2152
g1212
asbag57
(g78
g59
NtRp2153
(dp2154
g62
(dp2155
g89
g90
ssg71
g2145
sg64
(lp2156
S':'
asbag57
(g78
g59
NtRp2157
(dp2158
g62
(dp2159
sg71
g2145
sg64
(lp2160
g57
(g58
g59
NtRp2161
(dp2162
g62
(dp2163
g70
I4
ssg71
g2157
sg64
(lp2164
g100
asbasbasbag57
(g73
g59
NtRp2165
(dp2166
g62
(dp2167
sg71
g1974
sg64
(lp2168
g57
(g78
g59
NtRp2169
(dp2170
g62
(dp2171
g82
g83
ssg71
g2165
sg64
(lp2172
g1233
asbag57
(g78
g59
NtRp2173
(dp2174
g62
(dp2175
g89
g90
ssg71
g2165
sg64
(lp2176
S':'
asbag57
(g78
g59
NtRp2177
(dp2178
g62
(dp2179
sg71
g2165
sg64
(lp2180
g57
(g58
g59
NtRp2181
(dp2182
g62
(dp2183
g70
I4
ssg71
g2177
sg64
(lp2184
g57
(g66
g59
NtRp2185
(dp2186
g62
(dp2187
g70
I3
ssg71
Nsg64
(lp2188
g57
(g73
g59
NtRp2189
(dp2190
g62
(dp2191
sg71
g2185
sg64
(lp2192
g57
(g78
g59
NtRp2193
(dp2194
g62
(dp2195
sg71
g2189
sg64
(lp2196
g57
(g58
g59
NtRp2197
(dp2198
g62
(dp2199
g70
I3
ssg71
g2193
sg64
(lp2200
g1262
asbasbasbag57
(g73
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g2185
sg64
(lp2204
g57
(g78
g59
NtRp2205
(dp2206
g62
(dp2207
sg71
g2201
sg64
(lp2208
g57
(g58
g59
NtRp2209
(dp2210
g62
(dp2211
g70
I3
ssg71
g2205
sg64
(lp2212
g1275
asbasbasbag57
(g73
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2185
sg64
(lp2216
g57
(g78
g59
NtRp2217
(dp2218
g62
(dp2219
sg71
g2213
sg64
(lp2220
g57
(g58
g59
NtRp2221
(dp2222
g62
(dp2223
g70
I3
ssg71
g2217
sg64
(lp2224
g1288
asbasbasbag57
(g73
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g2185
sg64
(lp2228
g57
(g78
g59
NtRp2229
(dp2230
g62
(dp2231
sg71
g2225
sg64
(lp2232
g57
(g58
g59
NtRp2233
(dp2234
g62
(dp2235
g70
I3
ssg71
g2229
sg64
(lp2236
g1301
asbasbasbag57
(g73
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2185
sg64
(lp2240
g57
(g78
g59
NtRp2241
(dp2242
g62
(dp2243
sg71
g2237
sg64
(lp2244
g57
(g58
g59
NtRp2245
(dp2246
g62
(dp2247
g70
I3
ssg71
g2241
sg64
(lp2248
g1314
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2249
(dp2250
g62
(dp2251
sg71
g1974
sg64
(lp2252
g57
(g78
g59
NtRp2253
(dp2254
g62
(dp2255
g82
g83
ssg71
g2249
sg64
(lp2256
g1582
asbag57
(g78
g59
NtRp2257
(dp2258
g62
(dp2259
g89
g90
ssg71
g2249
sg64
(lp2260
S':'
asbag57
(g78
g59
NtRp2261
(dp2262
g62
(dp2263
sg71
g2249
sg64
(lp2264
g57
(g58
g59
NtRp2265
(dp2266
g62
(dp2267
g70
I4
ssg71
g2261
sg64
(lp2268
g57
(g66
g59
NtRp2269
(dp2270
g62
(dp2271
g70
I3
ssg71
Nsg64
(lp2272
g57
(g73
g59
NtRp2273
(dp2274
g62
(dp2275
sg71
g2269
sg64
(lp2276
g57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
sg71
g2273
sg64
(lp2280
g57
(g58
g59
NtRp2281
(dp2282
g62
(dp2283
g70
I3
ssg71
g2277
sg64
(lp2284
S'2'
asbasbasbag57
(g73
g59
NtRp2285
(dp2286
g62
(dp2287
sg71
g2269
sg64
(lp2288
g57
(g78
g59
NtRp2289
(dp2290
g62
(dp2291
sg71
g2285
sg64
(lp2292
g57
(g58
g59
NtRp2293
(dp2294
g62
(dp2295
g70
I3
ssg71
g2289
sg64
(lp2296
S'3'
asbasbasbag57
(g73
g59
NtRp2297
(dp2298
g62
(dp2299
sg71
g2269
sg64
(lp2300
g57
(g78
g59
NtRp2301
(dp2302
g62
(dp2303
sg71
g2297
sg64
(lp2304
g57
(g58
g59
NtRp2305
(dp2306
g62
(dp2307
g70
I3
ssg71
g2301
sg64
(lp2308
S'2'
asbasbasbag57
(g73
g59
NtRp2309
(dp2310
g62
(dp2311
sg71
g2269
sg64
(lp2312
g57
(g78
g59
NtRp2313
(dp2314
g62
(dp2315
sg71
g2309
sg64
(lp2316
g57
(g58
g59
NtRp2317
(dp2318
g62
(dp2319
g70
I3
ssg71
g2313
sg64
(lp2320
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2321
asbasbasbag57
(g73
g59
NtRp2322
(dp2323
g62
(dp2324
sg71
g2269
sg64
(lp2325
g57
(g78
g59
NtRp2326
(dp2327
g62
(dp2328
sg71
g2322
sg64
(lp2329
g57
(g58
g59
NtRp2330
(dp2331
g62
(dp2332
g70
I3
ssg71
g2326
sg64
(lp2333
g1660
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g67
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
g82
g83
ssg71
g2334
sg64
(lp2341
S'is_https'
p2342
asbag57
(g78
g59
NtRp2343
(dp2344
g62
(dp2345
g89
g90
ssg71
g2334
sg64
(lp2346
S':'
asbag57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
sg71
g2334
sg64
(lp2350
g57
(g58
g59
NtRp2351
(dp2352
g62
(dp2353
g70
I5
ssg71
g2347
sg64
(lp2354
g100
asbasbasbag57
(g73
g59
NtRp2355
(dp2356
g62
(dp2357
sg71
g67
sg64
(lp2358
g57
(g78
g59
NtRp2359
(dp2360
g62
(dp2361
g82
g83
ssg71
g2355
sg64
(lp2362
S'is_local'
p2363
asbag57
(g78
g59
NtRp2364
(dp2365
g62
(dp2366
g89
g90
ssg71
g2355
sg64
(lp2367
S':'
asbag57
(g78
g59
NtRp2368
(dp2369
g62
(dp2370
sg71
g2355
sg64
(lp2371
g57
(g58
g59
NtRp2372
(dp2373
g62
(dp2374
g70
I5
ssg71
g2368
sg64
(lp2375
g1769
asbasbasbag57
(g73
g59
NtRp2376
(dp2377
g62
(dp2378
sg71
g67
sg64
(lp2379
g57
(g78
g59
NtRp2380
(dp2381
g62
(dp2382
g82
g83
ssg71
g2376
sg64
(lp2383
S'is_restful'
p2384
asbag57
(g78
g59
NtRp2385
(dp2386
g62
(dp2387
g89
g90
ssg71
g2376
sg64
(lp2388
S':'
asbag57
(g78
g59
NtRp2389
(dp2390
g62
(dp2391
sg71
g2376
sg64
(lp2392
g57
(g58
g59
NtRp2393
(dp2394
g62
(dp2395
g70
I5
ssg71
g2389
sg64
(lp2396
g100
asbasbasbag57
(g73
g59
NtRp2397
(dp2398
g62
(dp2399
sg71
g67
sg64
(lp2400
g57
(g78
g59
NtRp2401
(dp2402
g62
(dp2403
g82
g83
ssg71
g2397
sg64
(lp2404
S'now'
p2405
asbag57
(g78
g59
NtRp2406
(dp2407
g62
(dp2408
g89
g90
ssg71
g2397
sg64
(lp2409
S':'
asbag57
(g78
g59
NtRp2410
(dp2411
g62
(dp2412
sg71
g2397
sg64
(lp2413
g57
(g58
g59
NtRp2414
(dp2415
g62
(dp2416
g70
I5
ssg71
g2410
sg64
(lp2417
S'datetime.datetime(2013, 2, 17, 12, 45, 22, 786625)'
p2418
asbasbasbag57
(g73
g59
NtRp2419
(dp2420
g62
(dp2421
sg71
g67
sg64
(lp2422
g57
(g78
g59
NtRp2423
(dp2424
g62
(dp2425
g82
g83
ssg71
g2419
sg64
(lp2426
S'post_vars'
p2427
asbag57
(g78
g59
NtRp2428
(dp2429
g62
(dp2430
g89
g90
ssg71
g2419
sg64
(lp2431
S':'
asbag57
(g78
g59
NtRp2432
(dp2433
g62
(dp2434
sg71
g2419
sg64
(lp2435
g57
(g58
g59
NtRp2436
(dp2437
g62
(dp2438
g70
I5
ssg71
g2432
sg64
(lp2439
g57
(g66
g59
NtRp2440
(dp2441
g62
(dp2442
g70
I4
ssg71
Nsg64
(lp2443
sbasbasbasbag57
(g73
g59
NtRp2444
(dp2445
g62
(dp2446
sg71
g67
sg64
(lp2447
g57
(g78
g59
NtRp2448
(dp2449
g62
(dp2450
g82
g83
ssg71
g2444
sg64
(lp2451
S'raw_args'
p2452
asbag57
(g78
g59
NtRp2453
(dp2454
g62
(dp2455
g89
g90
ssg71
g2444
sg64
(lp2456
S':'
asbag57
(g78
g59
NtRp2457
(dp2458
g62
(dp2459
sg71
g2444
sg64
(lp2460
g57
(g58
g59
NtRp2461
(dp2462
g62
(dp2463
g70
I5
ssg71
g2457
sg64
(lp2464
S''
asbasbasbag57
(g73
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g67
sg64
(lp2468
g57
(g78
g59
NtRp2469
(dp2470
g62
(dp2471
g82
g83
ssg71
g2465
sg64
(lp2472
S'raw_extension'
p2473
asbag57
(g78
g59
NtRp2474
(dp2475
g62
(dp2476
g89
g90
ssg71
g2465
sg64
(lp2477
S':'
asbag57
(g78
g59
NtRp2478
(dp2479
g62
(dp2480
sg71
g2465
sg64
(lp2481
g57
(g58
g59
NtRp2482
(dp2483
g62
(dp2484
g70
I5
ssg71
g2478
sg64
(lp2485
S'None'
p2486
asbasbasbag57
(g73
g59
NtRp2487
(dp2488
g62
(dp2489
sg71
g67
sg64
(lp2490
g57
(g78
g59
NtRp2491
(dp2492
g62
(dp2493
g82
g83
ssg71
g2487
sg64
(lp2494
S'url'
p2495
asbag57
(g78
g59
NtRp2496
(dp2497
g62
(dp2498
g89
g90
ssg71
g2487
sg64
(lp2499
S':'
asbag57
(g78
g59
NtRp2500
(dp2501
g62
(dp2502
sg71
g2487
sg64
(lp2503
g57
(g58
g59
NtRp2504
(dp2505
g62
(dp2506
g70
I5
ssg71
g2500
sg64
(lp2507
g1336
asbasbasbag57
(g73
g59
NtRp2508
(dp2509
g62
(dp2510
sg71
g67
sg64
(lp2511
g57
(g78
g59
NtRp2512
(dp2513
g62
(dp2514
g82
g83
ssg71
g2508
sg64
(lp2515
S'utcnow'
p2516
asbag57
(g78
g59
NtRp2517
(dp2518
g62
(dp2519
g89
g90
ssg71
g2508
sg64
(lp2520
S':'
asbag57
(g78
g59
NtRp2521
(dp2522
g62
(dp2523
sg71
g2508
sg64
(lp2524
g57
(g58
g59
NtRp2525
(dp2526
g62
(dp2527
g70
I5
ssg71
g2521
sg64
(lp2528
S'datetime.datetime(2013, 2, 17, 7, 15, 22, 786673)'
p2529
asbasbasbag57
(g73
g59
NtRp2530
(dp2531
g62
(dp2532
sg71
g67
sg64
(lp2533
g57
(g78
g59
NtRp2534
(dp2535
g62
(dp2536
g82
g83
ssg71
g2530
sg64
(lp2537
S'uuid'
p2538
asbag57
(g78
g59
NtRp2539
(dp2540
g62
(dp2541
g89
g90
ssg71
g2530
sg64
(lp2542
S':'
asbag57
(g78
g59
NtRp2543
(dp2544
g62
(dp2545
sg71
g2530
sg64
(lp2546
g57
(g58
g59
NtRp2547
(dp2548
g62
(dp2549
g70
I5
ssg71
g2543
sg64
(lp2550
S'DEV_bootstrap_ch/127.0.0.1.2013-02-17.12-45-22.10ad956b-4ffb-4f4d-a109-2fcf58b4d654'
p2551
asbasbasbag57
(g73
g59
NtRp2552
(dp2553
g62
(dp2554
sg71
g67
sg64
(lp2555
g57
(g78
g59
NtRp2556
(dp2557
g62
(dp2558
g82
g83
ssg71
g2552
sg64
(lp2559
S'vars'
p2560
asbag57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g89
g90
ssg71
g2552
sg64
(lp2564
S':'
asbag57
(g78
g59
NtRp2565
(dp2566
g62
(dp2567
sg71
g2552
sg64
(lp2568
g57
(g58
g59
NtRp2569
(dp2570
g62
(dp2571
g70
I5
ssg71
g2565
sg64
(lp2572
g57
(g66
g59
NtRp2573
(dp2574
g62
(dp2575
g70
I4
ssg71
Nsg64
(lp2576
sbasbasbasbag57
(g73
g59
NtRp2577
(dp2578
g62
(dp2579
sg71
g67
sg64
(lp2580
g57
(g78
g59
NtRp2581
(dp2582
g62
(dp2583
g82
g83
ssg71
g2577
sg64
(lp2584
S'wsgi'
p2585
asbag57
(g78
g59
NtRp2586
(dp2587
g62
(dp2588
g89
g90
ssg71
g2577
sg64
(lp2589
S':'
asbag57
(g78
g59
NtRp2590
(dp2591
g62
(dp2592
sg71
g2577
sg64
(lp2593
g57
(g58
g59
NtRp2594
(dp2595
g62
(dp2596
g70
I5
ssg71
g2590
sg64
(lp2597
g57
(g66
g59
NtRp2598
(dp2599
g62
(dp2600
g70
I4
ssg71
Nsg64
(lp2601
g57
(g73
g59
NtRp2602
(dp2603
g62
(dp2604
sg71
g2598
sg64
(lp2605
g57
(g78
g59
NtRp2606
(dp2607
g62
(dp2608
g82
g83
ssg71
g2602
sg64
(lp2609
S'environ'
p2610
asbag57
(g78
g59
NtRp2611
(dp2612
g62
(dp2613
g89
g90
ssg71
g2602
sg64
(lp2614
S':'
asbag57
(g78
g59
NtRp2615
(dp2616
g62
(dp2617
sg71
g2602
sg64
(lp2618
g57
(g58
g59
NtRp2619
(dp2620
g62
(dp2621
g70
I4
ssg71
g2615
sg64
(lp2622
g57
(g66
g59
NtRp2623
(dp2624
g62
(dp2625
g70
I3
ssg71
Nsg64
(lp2626
g57
(g73
g59
NtRp2627
(dp2628
g62
(dp2629
sg71
g2623
sg64
(lp2630
g57
(g78
g59
NtRp2631
(dp2632
g62
(dp2633
g82
g83
ssg71
g2627
sg64
(lp2634
S'HTTP_ACCEPT'
p2635
asbag57
(g78
g59
NtRp2636
(dp2637
g62
(dp2638
g89
g90
ssg71
g2627
sg64
(lp2639
S':'
asbag57
(g78
g59
NtRp2640
(dp2641
g62
(dp2642
sg71
g2627
sg64
(lp2643
g57
(g58
g59
NtRp2644
(dp2645
g62
(dp2646
g70
I3
ssg71
g2640
sg64
(lp2647
g1028
asbasbasbag57
(g73
g59
NtRp2648
(dp2649
g62
(dp2650
sg71
g2623
sg64
(lp2651
g57
(g78
g59
NtRp2652
(dp2653
g62
(dp2654
g82
g83
ssg71
g2648
sg64
(lp2655
S'HTTP_ACCEPT_CHARSET'
p2656
asbag57
(g78
g59
NtRp2657
(dp2658
g62
(dp2659
g89
g90
ssg71
g2648
sg64
(lp2660
S':'
asbag57
(g78
g59
NtRp2661
(dp2662
g62
(dp2663
sg71
g2648
sg64
(lp2664
g57
(g58
g59
NtRp2665
(dp2666
g62
(dp2667
g70
I3
ssg71
g2661
sg64
(lp2668
g1050
asbasbasbag57
(g73
g59
NtRp2669
(dp2670
g62
(dp2671
sg71
g2623
sg64
(lp2672
g57
(g78
g59
NtRp2673
(dp2674
g62
(dp2675
g82
g83
ssg71
g2669
sg64
(lp2676
S'HTTP_ACCEPT_ENCODING'
p2677
asbag57
(g78
g59
NtRp2678
(dp2679
g62
(dp2680
g89
g90
ssg71
g2669
sg64
(lp2681
S':'
asbag57
(g78
g59
NtRp2682
(dp2683
g62
(dp2684
sg71
g2669
sg64
(lp2685
g57
(g58
g59
NtRp2686
(dp2687
g62
(dp2688
g70
I3
ssg71
g2682
sg64
(lp2689
g1072
asbasbasbag57
(g73
g59
NtRp2690
(dp2691
g62
(dp2692
sg71
g2623
sg64
(lp2693
g57
(g78
g59
NtRp2694
(dp2695
g62
(dp2696
g82
g83
ssg71
g2690
sg64
(lp2697
S'HTTP_ACCEPT_LANGUAGE'
p2698
asbag57
(g78
g59
NtRp2699
(dp2700
g62
(dp2701
g89
g90
ssg71
g2690
sg64
(lp2702
S':'
asbag57
(g78
g59
NtRp2703
(dp2704
g62
(dp2705
sg71
g2690
sg64
(lp2706
g57
(g58
g59
NtRp2707
(dp2708
g62
(dp2709
g70
I3
ssg71
g2703
sg64
(lp2710
g1094
asbasbasbag57
(g73
g59
NtRp2711
(dp2712
g62
(dp2713
sg71
g2623
sg64
(lp2714
g57
(g78
g59
NtRp2715
(dp2716
g62
(dp2717
g82
g83
ssg71
g2711
sg64
(lp2718
S'HTTP_CONNECTION'
p2719
asbag57
(g78
g59
NtRp2720
(dp2721
g62
(dp2722
g89
g90
ssg71
g2711
sg64
(lp2723
S':'
asbag57
(g78
g59
NtRp2724
(dp2725
g62
(dp2726
sg71
g2711
sg64
(lp2727
g57
(g58
g59
NtRp2728
(dp2729
g62
(dp2730
g70
I3
ssg71
g2724
sg64
(lp2731
g1116
asbasbasbag57
(g73
g59
NtRp2732
(dp2733
g62
(dp2734
sg71
g2623
sg64
(lp2735
g57
(g78
g59
NtRp2736
(dp2737
g62
(dp2738
g82
g83
ssg71
g2732
sg64
(lp2739
S'HTTP_COOKIE'
p2740
asbag57
(g78
g59
NtRp2741
(dp2742
g62
(dp2743
g89
g90
ssg71
g2732
sg64
(lp2744
S':'
asbag57
(g78
g59
NtRp2745
(dp2746
g62
(dp2747
sg71
g2732
sg64
(lp2748
g57
(g58
g59
NtRp2749
(dp2750
g62
(dp2751
g70
I3
ssg71
g2745
sg64
(lp2752
g1138
asbasbasbag57
(g73
g59
NtRp2753
(dp2754
g62
(dp2755
sg71
g2623
sg64
(lp2756
g57
(g78
g59
NtRp2757
(dp2758
g62
(dp2759
g82
g83
ssg71
g2753
sg64
(lp2760
S'HTTP_HOST'
p2761
asbag57
(g78
g59
NtRp2762
(dp2763
g62
(dp2764
g89
g90
ssg71
g2753
sg64
(lp2765
S':'
asbag57
(g78
g59
NtRp2766
(dp2767
g62
(dp2768
sg71
g2753
sg64
(lp2769
g57
(g58
g59
NtRp2770
(dp2771
g62
(dp2772
g70
I3
ssg71
g2766
sg64
(lp2773
g1160
asbasbasbag57
(g73
g59
NtRp2774
(dp2775
g62
(dp2776
sg71
g2623
sg64
(lp2777
g57
(g78
g59
NtRp2778
(dp2779
g62
(dp2780
g82
g83
ssg71
g2774
sg64
(lp2781
S'HTTP_USER_AGENT'
p2782
asbag57
(g78
g59
NtRp2783
(dp2784
g62
(dp2785
g89
g90
ssg71
g2774
sg64
(lp2786
S':'
asbag57
(g78
g59
NtRp2787
(dp2788
g62
(dp2789
sg71
g2774
sg64
(lp2790
g57
(g58
g59
NtRp2791
(dp2792
g62
(dp2793
g70
I3
ssg71
g2787
sg64
(lp2794
g1182
asbasbasbag57
(g73
g59
NtRp2795
(dp2796
g62
(dp2797
sg71
g2623
sg64
(lp2798
g57
(g78
g59
NtRp2799
(dp2800
g62
(dp2801
g82
g83
ssg71
g2795
sg64
(lp2802
S'PATH_INFO'
p2803
asbag57
(g78
g59
NtRp2804
(dp2805
g62
(dp2806
g89
g90
ssg71
g2795
sg64
(lp2807
S':'
asbag57
(g78
g59
NtRp2808
(dp2809
g62
(dp2810
sg71
g2795
sg64
(lp2811
g57
(g58
g59
NtRp2812
(dp2813
g62
(dp2814
g70
I3
ssg71
g2808
sg64
(lp2815
g1336
asbasbasbag57
(g73
g59
NtRp2816
(dp2817
g62
(dp2818
sg71
g2623
sg64
(lp2819
g57
(g78
g59
NtRp2820
(dp2821
g62
(dp2822
g82
g83
ssg71
g2816
sg64
(lp2823
S'QUERY_STRING'
p2824
asbag57
(g78
g59
NtRp2825
(dp2826
g62
(dp2827
g89
g90
ssg71
g2816
sg64
(lp2828
S':'
asbag57
(g78
g59
NtRp2829
(dp2830
g62
(dp2831
sg71
g2816
sg64
(lp2832
g57
(g58
g59
NtRp2833
(dp2834
g62
(dp2835
g70
I3
ssg71
g2829
sg64
(lp2836
S''
asbasbasbag57
(g73
g59
NtRp2837
(dp2838
g62
(dp2839
sg71
g2623
sg64
(lp2840
g57
(g78
g59
NtRp2841
(dp2842
g62
(dp2843
g82
g83
ssg71
g2837
sg64
(lp2844
S'REMOTE_ADDR'
p2845
asbag57
(g78
g59
NtRp2846
(dp2847
g62
(dp2848
g89
g90
ssg71
g2837
sg64
(lp2849
S':'
asbag57
(g78
g59
NtRp2850
(dp2851
g62
(dp2852
sg71
g2837
sg64
(lp2853
g57
(g58
g59
NtRp2854
(dp2855
g62
(dp2856
g70
I3
ssg71
g2850
sg64
(lp2857
g212
asbasbasbag57
(g73
g59
NtRp2858
(dp2859
g62
(dp2860
sg71
g2623
sg64
(lp2861
g57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g82
g83
ssg71
g2858
sg64
(lp2865
S'REMOTE_PORT'
p2866
asbag57
(g78
g59
NtRp2867
(dp2868
g62
(dp2869
g89
g90
ssg71
g2858
sg64
(lp2870
S':'
asbag57
(g78
g59
NtRp2871
(dp2872
g62
(dp2873
sg71
g2858
sg64
(lp2874
g57
(g58
g59
NtRp2875
(dp2876
g62
(dp2877
g70
I3
ssg71
g2871
sg64
(lp2878
g1400
asbasbasbag57
(g73
g59
NtRp2879
(dp2880
g62
(dp2881
sg71
g2623
sg64
(lp2882
g57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g82
g83
ssg71
g2879
sg64
(lp2886
S'REQUEST_METHOD'
p2887
asbag57
(g78
g59
NtRp2888
(dp2889
g62
(dp2890
g89
g90
ssg71
g2879
sg64
(lp2891
S':'
asbag57
(g78
g59
NtRp2892
(dp2893
g62
(dp2894
sg71
g2879
sg64
(lp2895
g57
(g58
g59
NtRp2896
(dp2897
g62
(dp2898
g70
I3
ssg71
g2892
sg64
(lp2899
g1422
asbasbasbag57
(g73
g59
NtRp2900
(dp2901
g62
(dp2902
sg71
g2623
sg64
(lp2903
g57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g82
g83
ssg71
g2900
sg64
(lp2907
S'REQUEST_URI'
p2908
asbag57
(g78
g59
NtRp2909
(dp2910
g62
(dp2911
g89
g90
ssg71
g2900
sg64
(lp2912
S':'
asbag57
(g78
g59
NtRp2913
(dp2914
g62
(dp2915
sg71
g2900
sg64
(lp2916
g57
(g58
g59
NtRp2917
(dp2918
g62
(dp2919
g70
I3
ssg71
g2913
sg64
(lp2920
g1336
asbasbasbag57
(g73
g59
NtRp2921
(dp2922
g62
(dp2923
sg71
g2623
sg64
(lp2924
g57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g82
g83
ssg71
g2921
sg64
(lp2928
S'SCRIPT_NAME'
p2929
asbag57
(g78
g59
NtRp2930
(dp2931
g62
(dp2932
g89
g90
ssg71
g2921
sg64
(lp2933
S':'
asbag57
(g78
g59
NtRp2934
(dp2935
g62
(dp2936
sg71
g2921
sg64
(lp2937
g57
(g58
g59
NtRp2938
(dp2939
g62
(dp2940
g70
I3
ssg71
g2934
sg64
(lp2941
S''
asbasbasbag57
(g73
g59
NtRp2942
(dp2943
g62
(dp2944
sg71
g2623
sg64
(lp2945
g57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g82
g83
ssg71
g2942
sg64
(lp2949
S'SERVER_NAME'
p2950
asbag57
(g78
g59
NtRp2951
(dp2952
g62
(dp2953
g89
g90
ssg71
g2942
sg64
(lp2954
S':'
asbag57
(g78
g59
NtRp2955
(dp2956
g62
(dp2957
sg71
g2942
sg64
(lp2958
g57
(g58
g59
NtRp2959
(dp2960
g62
(dp2961
g70
I3
ssg71
g2955
sg64
(lp2962
g1486
asbasbasbag57
(g73
g59
NtRp2963
(dp2964
g62
(dp2965
sg71
g2623
sg64
(lp2966
g57
(g78
g59
NtRp2967
(dp2968
g62
(dp2969
g82
g83
ssg71
g2963
sg64
(lp2970
S'SERVER_PORT'
p2971
asbag57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
g89
g90
ssg71
g2963
sg64
(lp2975
S':'
asbag57
(g78
g59
NtRp2976
(dp2977
g62
(dp2978
sg71
g2963
sg64
(lp2979
g57
(g58
g59
NtRp2980
(dp2981
g62
(dp2982
g70
I3
ssg71
g2976
sg64
(lp2983
g1508
asbasbasbag57
(g73
g59
NtRp2984
(dp2985
g62
(dp2986
sg71
g2623
sg64
(lp2987
g57
(g78
g59
NtRp2988
(dp2989
g62
(dp2990
g82
g83
ssg71
g2984
sg64
(lp2991
S'SERVER_PROTOCOL'
p2992
asbag57
(g78
g59
NtRp2993
(dp2994
g62
(dp2995
g89
g90
ssg71
g2984
sg64
(lp2996
S':'
asbag57
(g78
g59
NtRp2997
(dp2998
g62
(dp2999
sg71
g2984
sg64
(lp3000
g57
(g58
g59
NtRp3001
(dp3002
g62
(dp3003
g70
I3
ssg71
g2997
sg64
(lp3004
g1530
asbasbasbag57
(g73
g59
NtRp3005
(dp3006
g62
(dp3007
sg71
g2623
sg64
(lp3008
g57
(g78
g59
NtRp3009
(dp3010
g62
(dp3011
g82
g83
ssg71
g3005
sg64
(lp3012
S'SERVER_SOFTWARE'
p3013
asbag57
(g78
g59
NtRp3014
(dp3015
g62
(dp3016
g89
g90
ssg71
g3005
sg64
(lp3017
S':'
asbag57
(g78
g59
NtRp3018
(dp3019
g62
(dp3020
sg71
g3005
sg64
(lp3021
g57
(g58
g59
NtRp3022
(dp3023
g62
(dp3024
g70
I3
ssg71
g3018
sg64
(lp3025
g1552
asbasbasbag57
(g73
g59
NtRp3026
(dp3027
g62
(dp3028
sg71
g2623
sg64
(lp3029
g57
(g78
g59
NtRp3030
(dp3031
g62
(dp3032
g82
g83
ssg71
g3026
sg64
(lp3033
S'wsgi.errors'
p3034
asbag57
(g78
g59
NtRp3035
(dp3036
g62
(dp3037
g89
g90
ssg71
g3026
sg64
(lp3038
S':'
asbag57
(g78
g59
NtRp3039
(dp3040
g62
(dp3041
sg71
g3026
sg64
(lp3042
g57
(g58
g59
NtRp3043
(dp3044
g62
(dp3045
g70
I3
ssg71
g3039
sg64
(lp3046
S"<open file '<stderr>', mode 'w' at 0xb734a0d0>"
p3047
asbasbasbag57
(g73
g59
NtRp3048
(dp3049
g62
(dp3050
sg71
g2623
sg64
(lp3051
g57
(g78
g59
NtRp3052
(dp3053
g62
(dp3054
g82
g83
ssg71
g3048
sg64
(lp3055
S'wsgi.file_wrapper'
p3056
asbag57
(g78
g59
NtRp3057
(dp3058
g62
(dp3059
g89
g90
ssg71
g3048
sg64
(lp3060
S':'
asbag57
(g78
g59
NtRp3061
(dp3062
g62
(dp3063
sg71
g3048
sg64
(lp3064
g57
(g58
g59
NtRp3065
(dp3066
g62
(dp3067
g70
I3
ssg71
g3061
sg64
(lp3068
S'<class wsgiref.util.FileWrapper at 0xa376b9c>'
p3069
asbasbasbag57
(g73
g59
NtRp3070
(dp3071
g62
(dp3072
sg71
g2623
sg64
(lp3073
g57
(g78
g59
NtRp3074
(dp3075
g62
(dp3076
g82
g83
ssg71
g3070
sg64
(lp3077
S'wsgi.input'
p3078
asbag57
(g78
g59
NtRp3079
(dp3080
g62
(dp3081
g89
g90
ssg71
g3070
sg64
(lp3082
S':'
asbag57
(g78
g59
NtRp3083
(dp3084
g62
(dp3085
sg71
g3070
sg64
(lp3086
g57
(g58
g59
NtRp3087
(dp3088
g62
(dp3089
g70
I3
ssg71
g3083
sg64
(lp3090
S'<cStringIO.StringO object at 0xade82580>'
p3091
asbasbasbag57
(g73
g59
NtRp3092
(dp3093
g62
(dp3094
sg71
g2623
sg64
(lp3095
g57
(g78
g59
NtRp3096
(dp3097
g62
(dp3098
g82
g83
ssg71
g3092
sg64
(lp3099
S'wsgi.multiprocess'
p3100
asbag57
(g78
g59
NtRp3101
(dp3102
g62
(dp3103
g89
g90
ssg71
g3092
sg64
(lp3104
S':'
asbag57
(g78
g59
NtRp3105
(dp3106
g62
(dp3107
sg71
g3092
sg64
(lp3108
g57
(g58
g59
NtRp3109
(dp3110
g62
(dp3111
g70
I3
ssg71
g3105
sg64
(lp3112
g100
asbasbasbag57
(g73
g59
NtRp3113
(dp3114
g62
(dp3115
sg71
g2623
sg64
(lp3116
g57
(g78
g59
NtRp3117
(dp3118
g62
(dp3119
g82
g83
ssg71
g3113
sg64
(lp3120
S'wsgi.multithread'
p3121
asbag57
(g78
g59
NtRp3122
(dp3123
g62
(dp3124
g89
g90
ssg71
g3113
sg64
(lp3125
S':'
asbag57
(g78
g59
NtRp3126
(dp3127
g62
(dp3128
sg71
g3113
sg64
(lp3129
g57
(g58
g59
NtRp3130
(dp3131
g62
(dp3132
g70
I3
ssg71
g3126
sg64
(lp3133
g1769
asbasbasbag57
(g73
g59
NtRp3134
(dp3135
g62
(dp3136
sg71
g2623
sg64
(lp3137
g57
(g78
g59
NtRp3138
(dp3139
g62
(dp3140
g82
g83
ssg71
g3134
sg64
(lp3141
S'wsgi.run_once'
p3142
asbag57
(g78
g59
NtRp3143
(dp3144
g62
(dp3145
g89
g90
ssg71
g3134
sg64
(lp3146
S':'
asbag57
(g78
g59
NtRp3147
(dp3148
g62
(dp3149
sg71
g3134
sg64
(lp3150
g57
(g58
g59
NtRp3151
(dp3152
g62
(dp3153
g70
I3
ssg71
g3147
sg64
(lp3154
g100
asbasbasbag57
(g73
g59
NtRp3155
(dp3156
g62
(dp3157
sg71
g2623
sg64
(lp3158
g57
(g78
g59
NtRp3159
(dp3160
g62
(dp3161
g82
g83
ssg71
g3155
sg64
(lp3162
S'wsgi.url_scheme'
p3163
asbag57
(g78
g59
NtRp3164
(dp3165
g62
(dp3166
g89
g90
ssg71
g3155
sg64
(lp3167
S':'
asbag57
(g78
g59
NtRp3168
(dp3169
g62
(dp3170
sg71
g3155
sg64
(lp3171
g57
(g58
g59
NtRp3172
(dp3173
g62
(dp3174
g70
I3
ssg71
g3168
sg64
(lp3175
g1812
asbasbasbag57
(g73
g59
NtRp3176
(dp3177
g62
(dp3178
sg71
g2623
sg64
(lp3179
g57
(g78
g59
NtRp3180
(dp3181
g62
(dp3182
g82
g83
ssg71
g3176
sg64
(lp3183
S'wsgi.version'
p3184
asbag57
(g78
g59
NtRp3185
(dp3186
g62
(dp3187
g89
g90
ssg71
g3176
sg64
(lp3188
S':'
asbag57
(g78
g59
NtRp3189
(dp3190
g62
(dp3191
sg71
g3176
sg64
(lp3192
g57
(g58
g59
NtRp3193
(dp3194
g62
(dp3195
g70
I3
ssg71
g3189
sg64
(lp3196
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3197
(lp3198
(dp3199
S'file'
p3200
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3201
sS'dump'
p3202
(dp3203
S'environment'
p3204
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3205
sS'ccode'
p3206
S'<code object <module> at 0xad64ada0, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3207
ssS'lnum'
p3208
I212
sS'lines'
p3209
(dp3210
I207
S'    try:'
p3211
sI208
S'        if isinstance(code, types.CodeType):'
p3212
sI209
S'            ccode = code'
p3213
sI210
S'        else:'
p3214
sI211
S'            ccode = compile2(code, layer)'
p3215
sI212
S'        exec ccode in environment'
p3216
sI213
S'    except HTTP:'
p3217
sI214
S'        raise'
p3218
sI215
S'    except RestrictedError:'
p3219
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3220
ssS'call'
p3221
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...()\\n\\n\\n\\nresponse._vars=response._caller(home_page)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3222
sS'func'
p3223
S'restricted'
p3224
sa(dp3225
g3200
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3226
sg3202
(dp3227
sg3208
I1103
sg3209
(dp3228
I1092
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3229
sI1093
S'   """ per sample . takes id of the sample as the input """'
p3230
sI1094
S'   sid = request.args(0)'
p3231
sI1095
S'   sample = db(db.sample.id == sid).select().first()'
p3232
sI1096
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3233
sI1097
S'   form = SQLFORM(db.sample_files)'
p3234
sI1098
S'   form.vars.sample = sid'
p3235
sI1099
S'   return locals()'
p3236
sI1100
S''
sI1101
S''
ssg3221
S'()'
p3237
sg3223
S'<module>'
p3238
sa(dp3239
g3200
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3240
sg3202
(dp3241
S'self'
p3242
S'undefined'
p3243
sS'f'
S'<function home_page>'
p3244
ssg3208
I193
sg3209
(dp3245
I192
S'        self._vars = None'
p3246
sI193
S'        self._caller = lambda f: f()'
p3247
sI194
S'        self._view_environment = None'
p3248
sI195
S'        self._custom_commit = None'
p3249
sI196
S'        self._custom_rollback = None'
p3250
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3251
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3252
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3253
sI191
S"        self.delimiters = ('{{', '}}')"
p3254
ssg3221
S'(f=<function home_page>)'
p3255
sg3223
S'<lambda>'
p3256
sa(dp3257
g3200
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3258
sg3202
(dp3259
S'orderby'
p3260
g3243
sS'db.project'
p3261
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p3262
sS'db.sample.ALL'
p3263
S'<gluon.dal.SQLALL object>'
p3264
sS'uid'
p3265
S'None'
p3266
sS'db.sample.code'
p3267
S'<gluon.dal.Field object>'
p3268
sS').select'
p3269
g3243
sS'db.sample.project'
p3270
g3243
sS'com_exps'
p3271
g3243
sS'db.project.name'
p3272
S'<gluon.dal.Field object>'
p3273
sS'global db'
p3274
S'<DAL uri="sqlite://storage.sqlite">'
p3275
sS'db.sample.working_status'
p3276
S'<gluon.dal.Field object>'
p3277
sS'db.sample'
p3278
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3279
sS'db.project.id'
p3280
S'<gluon.dal.Field object>'
p3281
sS'db.sample.experimentalist'
p3282
S'<gluon.dal.Field object>'
p3283
ssg3208
I491
sg3209
(dp3284
I486
S'    for row in roles:'
p3285
sI487
S'       if row.role.role not in k:'
p3286
sI488
S'          k[row.role.role] = row.project.name'
p3287
sI489
S'       else:'
p3288
sI490
S"          k[row.role.role] = k[row.role.role] + ',' + row.project.name"
p3289
sI491
S'    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)'
p3290
sI492
S'    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)'
p3291
sI493
S'    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)'
p3292
sI494
S'    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)'
p3293
sI495
S'    for p in k:'
p3294
ssg3221
S'()'
p3295
sg3223
S'home_page'
p3296
sa(dp3297
g3200
S'/home/anil/bootstrap/web2py/gluon/dal.py'
p3298
sg3202
(dp3299
S'builtinstr'
p3300
S"<type 'str'>"
p3301
sS'self'
p3302
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p3303
sS'global ogetattr'
p3304
S"<slot wrapper '__getattribute__' of 'object' objects>"
p3305
sS'key'
p3306
S"'project'"
p3307
ssg3208
I7745
sg3209
(dp3308
I7744
S'        elif key:'
p3309
sI7745
S'            return ogetattr(self, str(key))'
p3310
sI7746
S''
sI7747
S'    def __call__(self, key=DEFAULT, **kwargs):'
p3311
sI7748
S"        for_update = kwargs.get('_for_update',False)"
p3312
sI7749
S"        if '_for_update' in kwargs: del kwargs['_for_update']"
p3313
sI7740
S'                return rows[0]'
p3314
sI7741
S'            return None'
p3315
sI7742
S"        elif str(key).isdigit() or 'google' in DRIVERS and isinstance(key, Key):"
p3316
sI7743
S'            return self._db(self._id == key).select(limitby=(0,1)).first()'
p3317
ssg3221
S"(self=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, key='project')"
p3318
sg3223
g20
sasS'pyver'
p3319
S'Python 2.7.3: /usr/bin/python'
p3320
sS'session'
p3321
g57
(g58
g59
NtRp3322
(dp3323
g62
(dp3324
sg64
(lp3325
g57
(g66
g59
NtRp3326
(dp3327
g62
(dp3328
g70
I5
ssg71
Nsg64
(lp3329
sbasbsS'etype'
p3330
S"<type 'exceptions.AttributeError'>"
p3331
sS'date'
p3332
S'Sun Feb 17 12:45:23 2013'
p3333
sS'response'
p3334
g57
(g58
g59
NtRp3335
(dp3336
g62
(dp3337
sg64
(lp3338
g57
(g66
g59
NtRp3339
(dp3340
g62
(dp3341
g70
I5
ssg71
Nsg64
(lp3342
g57
(g73
g59
NtRp3343
(dp3344
g62
(dp3345
sg71
g3339
sg64
(lp3346
g57
(g78
g59
NtRp3347
(dp3348
g62
(dp3349
g82
g83
ssg71
g3343
sg64
(lp3350
g155
asbag57
(g78
g59
NtRp3351
(dp3352
g62
(dp3353
g89
g90
ssg71
g3343
sg64
(lp3354
S':'
asbag57
(g78
g59
NtRp3355
(dp3356
g62
(dp3357
sg71
g3343
sg64
(lp3358
g57
(g58
g59
NtRp3359
(dp3360
g62
(dp3361
g70
I5
ssg71
g3355
sg64
(lp3362
S'<cStringIO.StringO object at 0xade33700>'
p3363
asbasbasbag57
(g73
g59
NtRp3364
(dp3365
g62
(dp3366
sg71
g3339
sg64
(lp3367
g57
(g78
g59
NtRp3368
(dp3369
g62
(dp3370
g82
g83
ssg71
g3364
sg64
(lp3371
g243
asbag57
(g78
g59
NtRp3372
(dp3373
g62
(dp3374
g89
g90
ssg71
g3364
sg64
(lp3375
S':'
asbag57
(g78
g59
NtRp3376
(dp3377
g62
(dp3378
sg71
g3364
sg64
(lp3379
g57
(g58
g59
NtRp3380
(dp3381
g62
(dp3382
g70
I5
ssg71
g3376
sg64
(lp3383
g57
(g66
g59
NtRp3384
(dp3385
g62
(dp3386
g70
I4
ssg71
Nsg64
(lp3387
g57
(g73
g59
NtRp3388
(dp3389
g62
(dp3390
sg71
g3384
sg64
(lp3391
g57
(g78
g59
NtRp3392
(dp3393
g62
(dp3394
g82
g83
ssg71
g3388
sg64
(lp3395
S'session_id_dev_bootstrap_ch'
p3396
asbag57
(g78
g59
NtRp3397
(dp3398
g62
(dp3399
g89
g90
ssg71
g3388
sg64
(lp3400
S':'
asbag57
(g78
g59
NtRp3401
(dp3402
g62
(dp3403
sg71
g3388
sg64
(lp3404
g57
(g58
g59
NtRp3405
(dp3406
g62
(dp3407
g70
I4
ssg71
g3401
sg64
(lp3408
g661
ag57
(g66
g59
NtRp3409
(dp3410
g62
(dp3411
g70
I3
ssg71
Nsg64
(lp3412
g57
(g73
g59
NtRp3413
(dp3414
g62
(dp3415
sg71
g3409
sg64
(lp3416
g57
(g78
g59
NtRp3417
(dp3418
g62
(dp3419
g82
g83
ssg71
g3413
sg64
(lp3420
g294
asbag57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
g89
g90
ssg71
g3413
sg64
(lp3424
S':'
asbag57
(g78
g59
NtRp3425
(dp3426
g62
(dp3427
sg71
g3413
sg64
(lp3428
g57
(g58
g59
NtRp3429
(dp3430
g62
(dp3431
g70
I3
ssg71
g3425
sg64
(lp3432
S''
asbasbasbag57
(g73
g59
NtRp3433
(dp3434
g62
(dp3435
sg71
g3409
sg64
(lp3436
g57
(g78
g59
NtRp3437
(dp3438
g62
(dp3439
g82
g83
ssg71
g3433
sg64
(lp3440
g315
asbag57
(g78
g59
NtRp3441
(dp3442
g62
(dp3443
g89
g90
ssg71
g3433
sg64
(lp3444
S':'
asbag57
(g78
g59
NtRp3445
(dp3446
g62
(dp3447
sg71
g3433
sg64
(lp3448
g57
(g58
g59
NtRp3449
(dp3450
g62
(dp3451
g70
I3
ssg71
g3445
sg64
(lp3452
S''
asbasbasbag57
(g73
g59
NtRp3453
(dp3454
g62
(dp3455
sg71
g3409
sg64
(lp3456
g57
(g78
g59
NtRp3457
(dp3458
g62
(dp3459
g82
g83
ssg71
g3453
sg64
(lp3460
g336
asbag57
(g78
g59
NtRp3461
(dp3462
g62
(dp3463
g89
g90
ssg71
g3453
sg64
(lp3464
S':'
asbag57
(g78
g59
NtRp3465
(dp3466
g62
(dp3467
sg71
g3453
sg64
(lp3468
g57
(g58
g59
NtRp3469
(dp3470
g62
(dp3471
g70
I3
ssg71
g3465
sg64
(lp3472
S''
asbasbasbag57
(g73
g59
NtRp3473
(dp3474
g62
(dp3475
sg71
g3409
sg64
(lp3476
g57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g82
g83
ssg71
g3473
sg64
(lp3480
g357
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
g89
g90
ssg71
g3473
sg64
(lp3484
S':'
asbag57
(g78
g59
NtRp3485
(dp3486
g62
(dp3487
sg71
g3473
sg64
(lp3488
g57
(g58
g59
NtRp3489
(dp3490
g62
(dp3491
g70
I3
ssg71
g3485
sg64
(lp3492
S''
asbasbasbag57
(g73
g59
NtRp3493
(dp3494
g62
(dp3495
sg71
g3409
sg64
(lp3496
g57
(g78
g59
NtRp3497
(dp3498
g62
(dp3499
g82
g83
ssg71
g3493
sg64
(lp3500
g378
asbag57
(g78
g59
NtRp3501
(dp3502
g62
(dp3503
g89
g90
ssg71
g3493
sg64
(lp3504
S':'
asbag57
(g78
g59
NtRp3505
(dp3506
g62
(dp3507
sg71
g3493
sg64
(lp3508
g57
(g58
g59
NtRp3509
(dp3510
g62
(dp3511
g70
I3
ssg71
g3505
sg64
(lp3512
S''
asbasbasbag57
(g73
g59
NtRp3513
(dp3514
g62
(dp3515
sg71
g3409
sg64
(lp3516
g57
(g78
g59
NtRp3517
(dp3518
g62
(dp3519
g82
g83
ssg71
g3513
sg64
(lp3520
g399
asbag57
(g78
g59
NtRp3521
(dp3522
g62
(dp3523
g89
g90
ssg71
g3513
sg64
(lp3524
S':'
asbag57
(g78
g59
NtRp3525
(dp3526
g62
(dp3527
sg71
g3513
sg64
(lp3528
g57
(g58
g59
NtRp3529
(dp3530
g62
(dp3531
g70
I3
ssg71
g3525
sg64
(lp3532
S'/'
asbasbasbag57
(g73
g59
NtRp3533
(dp3534
g62
(dp3535
sg71
g3409
sg64
(lp3536
g57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
g82
g83
ssg71
g3533
sg64
(lp3540
g420
asbag57
(g78
g59
NtRp3541
(dp3542
g62
(dp3543
g89
g90
ssg71
g3533
sg64
(lp3544
S':'
asbag57
(g78
g59
NtRp3545
(dp3546
g62
(dp3547
sg71
g3533
sg64
(lp3548
g57
(g58
g59
NtRp3549
(dp3550
g62
(dp3551
g70
I3
ssg71
g3545
sg64
(lp3552
S''
asbasbasbag57
(g73
g59
NtRp3553
(dp3554
g62
(dp3555
sg71
g3409
sg64
(lp3556
g57
(g78
g59
NtRp3557
(dp3558
g62
(dp3559
g82
g83
ssg71
g3553
sg64
(lp3560
g441
asbag57
(g78
g59
NtRp3561
(dp3562
g62
(dp3563
g89
g90
ssg71
g3553
sg64
(lp3564
S':'
asbag57
(g78
g59
NtRp3565
(dp3566
g62
(dp3567
sg71
g3553
sg64
(lp3568
g57
(g58
g59
NtRp3569
(dp3570
g62
(dp3571
g70
I3
ssg71
g3565
sg64
(lp3572
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3573
(dp3574
g62
(dp3575
sg71
g3339
sg64
(lp3576
g57
(g78
g59
NtRp3577
(dp3578
g62
(dp3579
g82
g83
ssg71
g3573
sg64
(lp3580
S'delimiters'
p3581
asbag57
(g78
g59
NtRp3582
(dp3583
g62
(dp3584
g89
g90
ssg71
g3573
sg64
(lp3585
S':'
asbag57
(g78
g59
NtRp3586
(dp3587
g62
(dp3588
sg71
g3573
sg64
(lp3589
g57
(g58
g59
NtRp3590
(dp3591
g62
(dp3592
g70
I5
ssg71
g3586
sg64
(lp3593
g57
(g66
g59
NtRp3594
(dp3595
g62
(dp3596
g70
I4
ssg71
Nsg64
(lp3597
g57
(g73
g59
NtRp3598
(dp3599
g62
(dp3600
sg71
g3594
sg64
(lp3601
g57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3598
sg64
(lp3605
g57
(g58
g59
NtRp3606
(dp3607
g62
(dp3608
g70
I4
ssg71
g3602
sg64
(lp3609
S'{{'
p3610
asbasbasbag57
(g73
g59
NtRp3611
(dp3612
g62
(dp3613
sg71
g3594
sg64
(lp3614
g57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3611
sg64
(lp3618
g57
(g58
g59
NtRp3619
(dp3620
g62
(dp3621
g70
I4
ssg71
g3615
sg64
(lp3622
S'}}'
p3623
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3624
(dp3625
g62
(dp3626
sg71
g3339
sg64
(lp3627
g57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
g82
g83
ssg71
g3624
sg64
(lp3631
S'files'
p3632
asbag57
(g78
g59
NtRp3633
(dp3634
g62
(dp3635
g89
g90
ssg71
g3624
sg64
(lp3636
S':'
asbag57
(g78
g59
NtRp3637
(dp3638
g62
(dp3639
sg71
g3624
sg64
(lp3640
g57
(g58
g59
NtRp3641
(dp3642
g62
(dp3643
g70
I5
ssg71
g3637
sg64
(lp3644
g57
(g66
g59
NtRp3645
(dp3646
g62
(dp3647
g70
I4
ssg71
Nsg64
(lp3648
g57
(g73
g59
NtRp3649
(dp3650
g62
(dp3651
sg71
g3645
sg64
(lp3652
g57
(g78
g59
NtRp3653
(dp3654
g62
(dp3655
sg71
g3649
sg64
(lp3656
g57
(g58
g59
NtRp3657
(dp3658
g62
(dp3659
g70
I4
ssg71
g3653
sg64
(lp3660
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3661
asbasbasbag57
(g73
g59
NtRp3662
(dp3663
g62
(dp3664
sg71
g3645
sg64
(lp3665
g57
(g78
g59
NtRp3666
(dp3667
g62
(dp3668
sg71
g3662
sg64
(lp3669
g57
(g58
g59
NtRp3670
(dp3671
g62
(dp3672
g70
I4
ssg71
g3666
sg64
(lp3673
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3674
asbasbasbag57
(g73
g59
NtRp3675
(dp3676
g62
(dp3677
sg71
g3645
sg64
(lp3678
g57
(g78
g59
NtRp3679
(dp3680
g62
(dp3681
sg71
g3675
sg64
(lp3682
g57
(g58
g59
NtRp3683
(dp3684
g62
(dp3685
g70
I4
ssg71
g3679
sg64
(lp3686
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3687
asbasbasbag57
(g73
g59
NtRp3688
(dp3689
g62
(dp3690
sg71
g3645
sg64
(lp3691
g57
(g78
g59
NtRp3692
(dp3693
g62
(dp3694
sg71
g3688
sg64
(lp3695
g57
(g58
g59
NtRp3696
(dp3697
g62
(dp3698
g70
I4
ssg71
g3692
sg64
(lp3699
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3700
asbasbasbag57
(g73
g59
NtRp3701
(dp3702
g62
(dp3703
sg71
g3645
sg64
(lp3704
g57
(g78
g59
NtRp3705
(dp3706
g62
(dp3707
sg71
g3701
sg64
(lp3708
g57
(g58
g59
NtRp3709
(dp3710
g62
(dp3711
g70
I4
ssg71
g3705
sg64
(lp3712
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3713
asbasbasbag57
(g73
g59
NtRp3714
(dp3715
g62
(dp3716
sg71
g3645
sg64
(lp3717
g57
(g78
g59
NtRp3718
(dp3719
g62
(dp3720
sg71
g3714
sg64
(lp3721
g57
(g58
g59
NtRp3722
(dp3723
g62
(dp3724
g70
I4
ssg71
g3718
sg64
(lp3725
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3726
asbasbasbag57
(g73
g59
NtRp3727
(dp3728
g62
(dp3729
sg71
g3645
sg64
(lp3730
g57
(g78
g59
NtRp3731
(dp3732
g62
(dp3733
sg71
g3727
sg64
(lp3734
g57
(g58
g59
NtRp3735
(dp3736
g62
(dp3737
g70
I4
ssg71
g3731
sg64
(lp3738
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3739
asbasbasbag57
(g73
g59
NtRp3740
(dp3741
g62
(dp3742
sg71
g3645
sg64
(lp3743
g57
(g78
g59
NtRp3744
(dp3745
g62
(dp3746
sg71
g3740
sg64
(lp3747
g57
(g58
g59
NtRp3748
(dp3749
g62
(dp3750
g70
I4
ssg71
g3744
sg64
(lp3751
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3752
asbasbasbag57
(g73
g59
NtRp3753
(dp3754
g62
(dp3755
sg71
g3645
sg64
(lp3756
g57
(g78
g59
NtRp3757
(dp3758
g62
(dp3759
sg71
g3753
sg64
(lp3760
g57
(g58
g59
NtRp3761
(dp3762
g62
(dp3763
g70
I4
ssg71
g3757
sg64
(lp3764
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3765
asbasbasbag57
(g73
g59
NtRp3766
(dp3767
g62
(dp3768
sg71
g3645
sg64
(lp3769
g57
(g78
g59
NtRp3770
(dp3771
g62
(dp3772
sg71
g3766
sg64
(lp3773
g57
(g58
g59
NtRp3774
(dp3775
g62
(dp3776
g70
I4
ssg71
g3770
sg64
(lp3777
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3778
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3779
(dp3780
g62
(dp3781
sg71
g3339
sg64
(lp3782
g57
(g78
g59
NtRp3783
(dp3784
g62
(dp3785
g82
g83
ssg71
g3779
sg64
(lp3786
S'flash'
p3787
asbag57
(g78
g59
NtRp3788
(dp3789
g62
(dp3790
g89
g90
ssg71
g3779
sg64
(lp3791
S':'
asbag57
(g78
g59
NtRp3792
(dp3793
g62
(dp3794
sg71
g3779
sg64
(lp3795
g57
(g58
g59
NtRp3796
(dp3797
g62
(dp3798
g70
I5
ssg71
g3792
sg64
(lp3799
S''
asbasbasbag57
(g73
g59
NtRp3800
(dp3801
g62
(dp3802
sg71
g3339
sg64
(lp3803
g57
(g78
g59
NtRp3804
(dp3805
g62
(dp3806
g82
g83
ssg71
g3800
sg64
(lp3807
S'generic_patterns'
p3808
asbag57
(g78
g59
NtRp3809
(dp3810
g62
(dp3811
g89
g90
ssg71
g3800
sg64
(lp3812
S':'
asbag57
(g78
g59
NtRp3813
(dp3814
g62
(dp3815
sg71
g3800
sg64
(lp3816
g57
(g58
g59
NtRp3817
(dp3818
g62
(dp3819
g70
I5
ssg71
g3813
sg64
(lp3820
g57
(g66
g59
NtRp3821
(dp3822
g62
(dp3823
g70
I4
ssg71
Nsg64
(lp3824
g57
(g73
g59
NtRp3825
(dp3826
g62
(dp3827
sg71
g3821
sg64
(lp3828
g57
(g78
g59
NtRp3829
(dp3830
g62
(dp3831
sg71
g3825
sg64
(lp3832
g57
(g58
g59
NtRp3833
(dp3834
g62
(dp3835
g70
I4
ssg71
g3829
sg64
(lp3836
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3837
(dp3838
g62
(dp3839
sg71
g3339
sg64
(lp3840
g57
(g78
g59
NtRp3841
(dp3842
g62
(dp3843
g82
g83
ssg71
g3837
sg64
(lp3844
S'google_analytics_id'
p3845
asbag57
(g78
g59
NtRp3846
(dp3847
g62
(dp3848
g89
g90
ssg71
g3837
sg64
(lp3849
S':'
asbag57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
sg71
g3837
sg64
(lp3853
g57
(g58
g59
NtRp3854
(dp3855
g62
(dp3856
g70
I5
ssg71
g3850
sg64
(lp3857
S'None'
p3858
asbasbasbag57
(g73
g59
NtRp3859
(dp3860
g62
(dp3861
sg71
g3339
sg64
(lp3862
g57
(g78
g59
NtRp3863
(dp3864
g62
(dp3865
g82
g83
ssg71
g3859
sg64
(lp3866
S'headers'
p3867
asbag57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
g89
g90
ssg71
g3859
sg64
(lp3871
S':'
asbag57
(g78
g59
NtRp3872
(dp3873
g62
(dp3874
sg71
g3859
sg64
(lp3875
g57
(g58
g59
NtRp3876
(dp3877
g62
(dp3878
g70
I5
ssg71
g3872
sg64
(lp3879
g57
(g66
g59
NtRp3880
(dp3881
g62
(dp3882
g70
I4
ssg71
Nsg64
(lp3883
g57
(g73
g59
NtRp3884
(dp3885
g62
(dp3886
sg71
g3880
sg64
(lp3887
g57
(g78
g59
NtRp3888
(dp3889
g62
(dp3890
g82
g83
ssg71
g3884
sg64
(lp3891
S'X-Powered-By'
p3892
asbag57
(g78
g59
NtRp3893
(dp3894
g62
(dp3895
g89
g90
ssg71
g3884
sg64
(lp3896
S':'
asbag57
(g78
g59
NtRp3897
(dp3898
g62
(dp3899
sg71
g3884
sg64
(lp3900
g57
(g58
g59
NtRp3901
(dp3902
g62
(dp3903
g70
I4
ssg71
g3897
sg64
(lp3904
S'web2py'
p3905
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3906
(dp3907
g62
(dp3908
sg71
g3339
sg64
(lp3909
g57
(g78
g59
NtRp3910
(dp3911
g62
(dp3912
g82
g83
ssg71
g3906
sg64
(lp3913
S'menu'
p3914
asbag57
(g78
g59
NtRp3915
(dp3916
g62
(dp3917
g89
g90
ssg71
g3906
sg64
(lp3918
S':'
asbag57
(g78
g59
NtRp3919
(dp3920
g62
(dp3921
sg71
g3906
sg64
(lp3922
g57
(g58
g59
NtRp3923
(dp3924
g62
(dp3925
g70
I5
ssg71
g3919
sg64
(lp3926
g57
(g66
g59
NtRp3927
(dp3928
g62
(dp3929
g70
I4
ssg71
Nsg64
(lp3930
g57
(g73
g59
NtRp3931
(dp3932
g62
(dp3933
sg71
g3927
sg64
(lp3934
g57
(g78
g59
NtRp3935
(dp3936
g62
(dp3937
sg71
g3931
sg64
(lp3938
g57
(g58
g59
NtRp3939
(dp3940
g62
(dp3941
g70
I4
ssg71
g3935
sg64
(lp3942
g57
(g66
g59
NtRp3943
(dp3944
g62
(dp3945
g70
I3
ssg71
Nsg64
(lp3946
g57
(g73
g59
NtRp3947
(dp3948
g62
(dp3949
sg71
g3943
sg64
(lp3950
g57
(g78
g59
NtRp3951
(dp3952
g62
(dp3953
sg71
g3947
sg64
(lp3954
g57
(g58
g59
NtRp3955
(dp3956
g62
(dp3957
g70
I3
ssg71
g3951
sg64
(lp3958
cgluon.languages
lazyT_unpickle
p3959
(S't\x04\x00\x00\x00Home'
tRp3960
asbasbasbag57
(g73
g59
NtRp3961
(dp3962
g62
(dp3963
sg71
g3943
sg64
(lp3964
g57
(g78
g59
NtRp3965
(dp3966
g62
(dp3967
sg71
g3961
sg64
(lp3968
g57
(g58
g59
NtRp3969
(dp3970
g62
(dp3971
g70
I3
ssg71
g3965
sg64
(lp3972
g100
asbasbasbag57
(g73
g59
NtRp3973
(dp3974
g62
(dp3975
sg71
g3943
sg64
(lp3976
g57
(g78
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3973
sg64
(lp3980
g57
(g58
g59
NtRp3981
(dp3982
g62
(dp3983
g70
I3
ssg71
g3977
sg64
(lp3984
S'/DEV_bootstrap_ch/default/list_all_projects'
p3985
asbasbasbag57
(g73
g59
NtRp3986
(dp3987
g62
(dp3988
sg71
g3943
sg64
(lp3989
g57
(g78
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3986
sg64
(lp3993
g57
(g58
g59
NtRp3994
(dp3995
g62
(dp3996
g70
I3
ssg71
g3990
sg64
(lp3997
g57
(g66
g59
NtRp3998
(dp3999
g62
(dp4000
g70
I2
ssg71
Nsg64
(lp4001
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4002
(dp4003
g62
(dp4004
sg71
g3927
sg64
(lp4005
g57
(g78
g59
NtRp4006
(dp4007
g62
(dp4008
sg71
g4002
sg64
(lp4009
g57
(g58
g59
NtRp4010
(dp4011
g62
(dp4012
g70
I4
ssg71
g4006
sg64
(lp4013
g57
(g66
g59
NtRp4014
(dp4015
g62
(dp4016
g70
I3
ssg71
Nsg64
(lp4017
g57
(g73
g59
NtRp4018
(dp4019
g62
(dp4020
sg71
g4014
sg64
(lp4021
g57
(g78
g59
NtRp4022
(dp4023
g62
(dp4024
sg71
g4018
sg64
(lp4025
g57
(g58
g59
NtRp4026
(dp4027
g62
(dp4028
g70
I3
ssg71
g4022
sg64
(lp4029
g3959
(S't\x08\x00\x00\x00Projects'
tRp4030
asbasbasbag57
(g73
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g4014
sg64
(lp4034
g57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
sg71
g4031
sg64
(lp4038
g57
(g58
g59
NtRp4039
(dp4040
g62
(dp4041
g70
I3
ssg71
g4035
sg64
(lp4042
g100
asbasbasbag57
(g73
g59
NtRp4043
(dp4044
g62
(dp4045
sg71
g4014
sg64
(lp4046
g57
(g78
g59
NtRp4047
(dp4048
g62
(dp4049
sg71
g4043
sg64
(lp4050
g57
(g58
g59
NtRp4051
(dp4052
g62
(dp4053
g70
I3
ssg71
g4047
sg64
(lp4054
S'/DEV_bootstrap_ch/default/list_all_projects'
p4055
asbasbasbag57
(g73
g59
NtRp4056
(dp4057
g62
(dp4058
sg71
g4014
sg64
(lp4059
g57
(g78
g59
NtRp4060
(dp4061
g62
(dp4062
sg71
g4056
sg64
(lp4063
g57
(g58
g59
NtRp4064
(dp4065
g62
(dp4066
g70
I3
ssg71
g4060
sg64
(lp4067
g57
(g66
g59
NtRp4068
(dp4069
g62
(dp4070
g70
I2
ssg71
Nsg64
(lp4071
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4072
(dp4073
g62
(dp4074
sg71
g3339
sg64
(lp4075
g57
(g78
g59
NtRp4076
(dp4077
g62
(dp4078
g82
g83
ssg71
g4072
sg64
(lp4079
S'meta'
p4080
asbag57
(g78
g59
NtRp4081
(dp4082
g62
(dp4083
g89
g90
ssg71
g4072
sg64
(lp4084
S':'
asbag57
(g78
g59
NtRp4085
(dp4086
g62
(dp4087
sg71
g4072
sg64
(lp4088
g57
(g58
g59
NtRp4089
(dp4090
g62
(dp4091
g70
I5
ssg71
g4085
sg64
(lp4092
g57
(g66
g59
NtRp4093
(dp4094
g62
(dp4095
g70
I4
ssg71
Nsg64
(lp4096
g57
(g73
g59
NtRp4097
(dp4098
g62
(dp4099
sg71
g4093
sg64
(lp4100
g57
(g78
g59
NtRp4101
(dp4102
g62
(dp4103
g82
g83
ssg71
g4097
sg64
(lp4104
S'author'
p4105
asbag57
(g78
g59
NtRp4106
(dp4107
g62
(dp4108
g89
g90
ssg71
g4097
sg64
(lp4109
S':'
asbag57
(g78
g59
NtRp4110
(dp4111
g62
(dp4112
sg71
g4097
sg64
(lp4113
g57
(g58
g59
NtRp4114
(dp4115
g62
(dp4116
g70
I4
ssg71
g4110
sg64
(lp4117
S'Vikram Pudi <vikram@iiit.ac.in>'
p4118
asbasbasbag57
(g73
g59
NtRp4119
(dp4120
g62
(dp4121
sg71
g4093
sg64
(lp4122
g57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
g82
g83
ssg71
g4119
sg64
(lp4126
S'copyright'
p4127
asbag57
(g78
g59
NtRp4128
(dp4129
g62
(dp4130
g89
g90
ssg71
g4119
sg64
(lp4131
S':'
asbag57
(g78
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g4119
sg64
(lp4135
g57
(g58
g59
NtRp4136
(dp4137
g62
(dp4138
g70
I4
ssg71
g4132
sg64
(lp4139
S'Copyright 2011'
p4140
asbasbasbag57
(g73
g59
NtRp4141
(dp4142
g62
(dp4143
sg71
g4093
sg64
(lp4144
g57
(g78
g59
NtRp4145
(dp4146
g62
(dp4147
g82
g83
ssg71
g4141
sg64
(lp4148
S'description'
p4149
asbag57
(g78
g59
NtRp4150
(dp4151
g62
(dp4152
g89
g90
ssg71
g4141
sg64
(lp4153
S':'
asbag57
(g78
g59
NtRp4154
(dp4155
g62
(dp4156
sg71
g4141
sg64
(lp4157
g57
(g58
g59
NtRp4158
(dp4159
g62
(dp4160
g70
I4
ssg71
g4154
sg64
(lp4161
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4162
asbasbasbag57
(g73
g59
NtRp4163
(dp4164
g62
(dp4165
sg71
g4093
sg64
(lp4166
g57
(g78
g59
NtRp4167
(dp4168
g62
(dp4169
g82
g83
ssg71
g4163
sg64
(lp4170
S'generator'
p4171
asbag57
(g78
g59
NtRp4172
(dp4173
g62
(dp4174
g89
g90
ssg71
g4163
sg64
(lp4175
S':'
asbag57
(g78
g59
NtRp4176
(dp4177
g62
(dp4178
sg71
g4163
sg64
(lp4179
g57
(g58
g59
NtRp4180
(dp4181
g62
(dp4182
g70
I4
ssg71
g4176
sg64
(lp4183
S'Web2py Web Framework'
p4184
asbasbasbag57
(g73
g59
NtRp4185
(dp4186
g62
(dp4187
sg71
g4093
sg64
(lp4188
g57
(g78
g59
NtRp4189
(dp4190
g62
(dp4191
g82
g83
ssg71
g4185
sg64
(lp4192
S'keywords'
p4193
asbag57
(g78
g59
NtRp4194
(dp4195
g62
(dp4196
g89
g90
ssg71
g4185
sg64
(lp4197
S':'
asbag57
(g78
g59
NtRp4198
(dp4199
g62
(dp4200
sg71
g4185
sg64
(lp4201
g57
(g58
g59
NtRp4202
(dp4203
g62
(dp4204
g70
I4
ssg71
g4198
sg64
(lp4205
S'web2py, python, metabolome, metabolomics'
p4206
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4207
(dp4208
g62
(dp4209
sg71
g3339
sg64
(lp4210
g57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
g82
g83
ssg71
g4207
sg64
(lp4214
S'models_to_run'
p4215
asbag57
(g78
g59
NtRp4216
(dp4217
g62
(dp4218
g89
g90
ssg71
g4207
sg64
(lp4219
S':'
asbag57
(g78
g59
NtRp4220
(dp4221
g62
(dp4222
sg71
g4207
sg64
(lp4223
g57
(g58
g59
NtRp4224
(dp4225
g62
(dp4226
g70
I5
ssg71
g4220
sg64
(lp4227
g57
(g66
g59
NtRp4228
(dp4229
g62
(dp4230
g70
I4
ssg71
Nsg64
(lp4231
g57
(g73
g59
NtRp4232
(dp4233
g62
(dp4234
sg71
g4228
sg64
(lp4235
g57
(g78
g59
NtRp4236
(dp4237
g62
(dp4238
sg71
g4232
sg64
(lp4239
g57
(g58
g59
NtRp4240
(dp4241
g62
(dp4242
g70
I4
ssg71
g4236
sg64
(lp4243
S'^\\w+\\.py$'
p4244
asbasbasbag57
(g73
g59
NtRp4245
(dp4246
g62
(dp4247
sg71
g4228
sg64
(lp4248
g57
(g78
g59
NtRp4249
(dp4250
g62
(dp4251
sg71
g4245
sg64
(lp4252
g57
(g58
g59
NtRp4253
(dp4254
g62
(dp4255
g70
I4
ssg71
g4249
sg64
(lp4256
S'^default/\\w+\\.py$'
p4257
asbasbasbag57
(g73
g59
NtRp4258
(dp4259
g62
(dp4260
sg71
g4228
sg64
(lp4261
g57
(g78
g59
NtRp4262
(dp4263
g62
(dp4264
sg71
g4258
sg64
(lp4265
g57
(g58
g59
NtRp4266
(dp4267
g62
(dp4268
g70
I4
ssg71
g4262
sg64
(lp4269
S'^default/home_page/\\w+\\.py$'
p4270
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4271
(dp4272
g62
(dp4273
sg71
g3339
sg64
(lp4274
g57
(g78
g59
NtRp4275
(dp4276
g62
(dp4277
g82
g83
ssg71
g4271
sg64
(lp4278
S'postprocessing'
p4279
asbag57
(g78
g59
NtRp4280
(dp4281
g62
(dp4282
g89
g90
ssg71
g4271
sg64
(lp4283
S':'
asbag57
(g78
g59
NtRp4284
(dp4285
g62
(dp4286
sg71
g4271
sg64
(lp4287
g57
(g58
g59
NtRp4288
(dp4289
g62
(dp4290
g70
I5
ssg71
g4284
sg64
(lp4291
g57
(g66
g59
NtRp4292
(dp4293
g62
(dp4294
g70
I4
ssg71
Nsg64
(lp4295
sbasbasbasbag57
(g73
g59
NtRp4296
(dp4297
g62
(dp4298
sg71
g3339
sg64
(lp4299
g57
(g78
g59
NtRp4300
(dp4301
g62
(dp4302
g82
g83
ssg71
g4296
sg64
(lp4303
S'session_cookie_expires'
p4304
asbag57
(g78
g59
NtRp4305
(dp4306
g62
(dp4307
g89
g90
ssg71
g4296
sg64
(lp4308
S':'
asbag57
(g78
g59
NtRp4309
(dp4310
g62
(dp4311
sg71
g4296
sg64
(lp4312
g57
(g58
g59
NtRp4313
(dp4314
g62
(dp4315
g70
I5
ssg71
g4309
sg64
(lp4316
S'None'
p4317
asbasbasbag57
(g73
g59
NtRp4318
(dp4319
g62
(dp4320
sg71
g3339
sg64
(lp4321
g57
(g78
g59
NtRp4322
(dp4323
g62
(dp4324
g82
g83
ssg71
g4318
sg64
(lp4325
S'session_data_name'
p4326
asbag57
(g78
g59
NtRp4327
(dp4328
g62
(dp4329
g89
g90
ssg71
g4318
sg64
(lp4330
S':'
asbag57
(g78
g59
NtRp4331
(dp4332
g62
(dp4333
sg71
g4318
sg64
(lp4334
g57
(g58
g59
NtRp4335
(dp4336
g62
(dp4337
g70
I5
ssg71
g4331
sg64
(lp4338
S'session_data_dev_bootstrap_ch'
p4339
asbasbasbag57
(g73
g59
NtRp4340
(dp4341
g62
(dp4342
sg71
g3339
sg64
(lp4343
g57
(g78
g59
NtRp4344
(dp4345
g62
(dp4346
g82
g83
ssg71
g4340
sg64
(lp4347
S'session_file'
p4348
asbag57
(g78
g59
NtRp4349
(dp4350
g62
(dp4351
g89
g90
ssg71
g4340
sg64
(lp4352
S':'
asbag57
(g78
g59
NtRp4353
(dp4354
g62
(dp4355
sg71
g4340
sg64
(lp4356
g57
(g58
g59
NtRp4357
(dp4358
g62
(dp4359
g70
I5
ssg71
g4353
sg64
(lp4360
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xad103b20>"
p4361
asbasbasbag57
(g73
g59
NtRp4362
(dp4363
g62
(dp4364
sg71
g3339
sg64
(lp4365
g57
(g78
g59
NtRp4366
(dp4367
g62
(dp4368
g82
g83
ssg71
g4362
sg64
(lp4369
S'session_filename'
p4370
asbag57
(g78
g59
NtRp4371
(dp4372
g62
(dp4373
g89
g90
ssg71
g4362
sg64
(lp4374
S':'
asbag57
(g78
g59
NtRp4375
(dp4376
g62
(dp4377
sg71
g4362
sg64
(lp4378
g57
(g58
g59
NtRp4379
(dp4380
g62
(dp4381
g70
I5
ssg71
g4375
sg64
(lp4382
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4383
asbasbasbag57
(g73
g59
NtRp4384
(dp4385
g62
(dp4386
sg71
g3339
sg64
(lp4387
g57
(g78
g59
NtRp4388
(dp4389
g62
(dp4390
g82
g83
ssg71
g4384
sg64
(lp4391
S'session_id'
p4392
asbag57
(g78
g59
NtRp4393
(dp4394
g62
(dp4395
g89
g90
ssg71
g4384
sg64
(lp4396
S':'
asbag57
(g78
g59
NtRp4397
(dp4398
g62
(dp4399
sg71
g4384
sg64
(lp4400
g57
(g58
g59
NtRp4401
(dp4402
g62
(dp4403
g70
I5
ssg71
g4397
sg64
(lp4404
g661
asbasbasbag57
(g73
g59
NtRp4405
(dp4406
g62
(dp4407
sg71
g3339
sg64
(lp4408
g57
(g78
g59
NtRp4409
(dp4410
g62
(dp4411
g82
g83
ssg71
g4405
sg64
(lp4412
S'session_id_name'
p4413
asbag57
(g78
g59
NtRp4414
(dp4415
g62
(dp4416
g89
g90
ssg71
g4405
sg64
(lp4417
S':'
asbag57
(g78
g59
NtRp4418
(dp4419
g62
(dp4420
sg71
g4405
sg64
(lp4421
g57
(g58
g59
NtRp4422
(dp4423
g62
(dp4424
g70
I5
ssg71
g4418
sg64
(lp4425
g3396
asbasbasbag57
(g73
g59
NtRp4426
(dp4427
g62
(dp4428
sg71
g3339
sg64
(lp4429
g57
(g78
g59
NtRp4430
(dp4431
g62
(dp4432
g82
g83
ssg71
g4426
sg64
(lp4433
S'session_locked'
p4434
asbag57
(g78
g59
NtRp4435
(dp4436
g62
(dp4437
g89
g90
ssg71
g4426
sg64
(lp4438
S':'
asbag57
(g78
g59
NtRp4439
(dp4440
g62
(dp4441
sg71
g4426
sg64
(lp4442
g57
(g58
g59
NtRp4443
(dp4444
g62
(dp4445
g70
I5
ssg71
g4439
sg64
(lp4446
g1769
asbasbasbag57
(g73
g59
NtRp4447
(dp4448
g62
(dp4449
sg71
g3339
sg64
(lp4450
g57
(g78
g59
NtRp4451
(dp4452
g62
(dp4453
g82
g83
ssg71
g4447
sg64
(lp4454
S'session_new'
p4455
asbag57
(g78
g59
NtRp4456
(dp4457
g62
(dp4458
g89
g90
ssg71
g4447
sg64
(lp4459
S':'
asbag57
(g78
g59
NtRp4460
(dp4461
g62
(dp4462
sg71
g4447
sg64
(lp4463
g57
(g58
g59
NtRp4464
(dp4465
g62
(dp4466
g70
I5
ssg71
g4460
sg64
(lp4467
g100
asbasbasbag57
(g73
g59
NtRp4468
(dp4469
g62
(dp4470
sg71
g3339
sg64
(lp4471
g57
(g78
g59
NtRp4472
(dp4473
g62
(dp4474
g82
g83
ssg71
g4468
sg64
(lp4475
S'session_storage_type'
p4476
asbag57
(g78
g59
NtRp4477
(dp4478
g62
(dp4479
g89
g90
ssg71
g4468
sg64
(lp4480
S':'
asbag57
(g78
g59
NtRp4481
(dp4482
g62
(dp4483
sg71
g4468
sg64
(lp4484
g57
(g58
g59
NtRp4485
(dp4486
g62
(dp4487
g70
I5
ssg71
g4481
sg64
(lp4488
g3200
asbasbasbag57
(g73
g59
NtRp4489
(dp4490
g62
(dp4491
sg71
g3339
sg64
(lp4492
g57
(g78
g59
NtRp4493
(dp4494
g62
(dp4495
g82
g83
ssg71
g4489
sg64
(lp4496
S'status'
p4497
asbag57
(g78
g59
NtRp4498
(dp4499
g62
(dp4500
g89
g90
ssg71
g4489
sg64
(lp4501
S':'
asbag57
(g78
g59
NtRp4502
(dp4503
g62
(dp4504
sg71
g4489
sg64
(lp4505
g57
(g58
g59
NtRp4506
(dp4507
g62
(dp4508
g70
I5
ssg71
g4502
sg64
(lp4509
S'200'
p4510
asbasbasbag57
(g73
g59
NtRp4511
(dp4512
g62
(dp4513
sg71
g3339
sg64
(lp4514
g57
(g78
g59
NtRp4515
(dp4516
g62
(dp4517
g82
g83
ssg71
g4511
sg64
(lp4518
S'subtitle'
p4519
asbag57
(g78
g59
NtRp4520
(dp4521
g62
(dp4522
g89
g90
ssg71
g4511
sg64
(lp4523
S':'
asbag57
(g78
g59
NtRp4524
(dp4525
g62
(dp4526
sg71
g4511
sg64
(lp4527
g57
(g58
g59
NtRp4528
(dp4529
g62
(dp4530
g70
I5
ssg71
g4524
sg64
(lp4531
g3959
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4532
asbasbasbag57
(g73
g59
NtRp4533
(dp4534
g62
(dp4535
sg71
g3339
sg64
(lp4536
g57
(g78
g59
NtRp4537
(dp4538
g62
(dp4539
g82
g83
ssg71
g4533
sg64
(lp4540
S'title'
p4541
asbag57
(g78
g59
NtRp4542
(dp4543
g62
(dp4544
g89
g90
ssg71
g4533
sg64
(lp4545
S':'
asbag57
(g78
g59
NtRp4546
(dp4547
g62
(dp4548
sg71
g4533
sg64
(lp4549
g57
(g58
g59
NtRp4550
(dp4551
g62
(dp4552
g70
I5
ssg71
g4546
sg64
(lp4553
g122
asbasbasbag57
(g73
g59
NtRp4554
(dp4555
g62
(dp4556
sg71
g3339
sg64
(lp4557
g57
(g78
g59
NtRp4558
(dp4559
g62
(dp4560
g82
g83
ssg71
g4554
sg64
(lp4561
S'view'
p4562
asbag57
(g78
g59
NtRp4563
(dp4564
g62
(dp4565
g89
g90
ssg71
g4554
sg64
(lp4566
S':'
asbag57
(g78
g59
NtRp4567
(dp4568
g62
(dp4569
sg71
g4554
sg64
(lp4570
g57
(g58
g59
NtRp4571
(dp4572
g62
(dp4573
g70
I5
ssg71
g4567
sg64
(lp4574
S'default/home_page.html'
p4575
asbasbasbasbasbsS'locals'
p4576
(dp4577
S'self'
p4578
S'<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>'
p4579
sS'key'
p4580
S"'project'"
p4581
sssS'traceback'
p4582
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1103, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 491, in home_page\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n  File "/home/anil/bootstrap/web2py/gluon/dal.py", line 7745, in __getitem__\n    return ogetattr(self, str(key))\nAttributeError: \'Table\' object has no attribute \'project\'\n'
p4583
s.