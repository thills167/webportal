(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> router() takes no arguments (1 given)"
p3
sS'layer'
p4
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.approval_status==1)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\n@auth.requires_login()\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\n@auth.requires_login()\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.approval_status==1)(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\n@auth.requires_login()\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    dev_projects = db(db.project.project_status == 0)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\n@auth.requires_login()\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n    orderby_dict ={\'sample\':db.sample.name} \n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy\',_href=URL("default","copy",args=request.args[:]+[row.id])),\\\n           lambda row: A(\'replicate\',_href=URL("default","duplicate",args=request.args[:]+["replicate"]+[row.id])), \\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'biosource_\'+tes(row.id,\'biosource\'),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           lambda row: A(\'PGC_\'+tes(row.id,\'plant_growth_condition\'),_href=URL("default","router",args=getargs(row.id,args,"plant_growth_condition"))), \\\n           lambda row: A(\'treatment_\'+tes(row.id,\'treatments\'),_href=URL("default","router",args=getargs(row.id,args,"treatments"))), \\\n           lambda row: A(\'harvest_\'+tes(row.id,\'harvests\'),_href=URL("default","router",args=getargs(row.id,args,"harvests"))), \\\n           lambda row: A(\'Ext_\'+tes(row.id,\'extraction_preparation\'),_href=URL("default","router",args=getargs(row.id,args,"extraction_preparation"))), \\\n           lambda row: A(\'GC_\'+tes(row.id,\'gas_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"gas_chromatography"))), \\\n           lambda row: A(\'LC_\'+tes(row.id,\'liquid_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"liquid_chromatography"))), \\\n           lambda row: A(\'MS_\'+tes(row.id,\'mass_spectroscopy\'),_href=URL("default","router",args=getargs(row.id,args,"mass_spectroscopy"))), \\\n           lambda row: A(\'spectrophotometry_\'+tes(row.id,\'spectrophotometry\'),_href=URL("default","router",args=getargs(row.id,args,"spectrophotometry")))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    \n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,orderby=orderby_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a,table):\n    if db(db[table].sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef copy():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1",project_publication_date = now)\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0",project_publication_date= None)\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_pub_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('router() takes no arguments (1 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'router() takes no arguments (1 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'view'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'project'
p185
asbasbasbag57
(g73
g59
NtRp186
(dp187
g62
(dp188
sg71
g143
sg64
(lp189
g57
(g78
g59
NtRp190
(dp191
g62
(dp192
sg71
g186
sg64
(lp193
g57
(g58
g59
NtRp194
(dp195
g62
(dp196
g70
I4
ssg71
g190
sg64
(lp197
S'5'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g67
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
g82
g83
ssg71
g198
sg64
(lp205
S'body'
p206
asbag57
(g78
g59
NtRp207
(dp208
g62
(dp209
g89
g90
ssg71
g198
sg64
(lp210
S':'
asbag57
(g78
g59
NtRp211
(dp212
g62
(dp213
sg71
g198
sg64
(lp214
g57
(g58
g59
NtRp215
(dp216
g62
(dp217
g70
I5
ssg71
g211
sg64
(lp218
S'<cStringIO.StringO object at 0xa81c140>'
p219
asbasbasbag57
(g73
g59
NtRp220
(dp221
g62
(dp222
sg71
g67
sg64
(lp223
g57
(g78
g59
NtRp224
(dp225
g62
(dp226
g82
g83
ssg71
g220
sg64
(lp227
S'cid'
p228
asbag57
(g78
g59
NtRp229
(dp230
g62
(dp231
g89
g90
ssg71
g220
sg64
(lp232
S':'
asbag57
(g78
g59
NtRp233
(dp234
g62
(dp235
sg71
g220
sg64
(lp236
g57
(g58
g59
NtRp237
(dp238
g62
(dp239
g70
I5
ssg71
g233
sg64
(lp240
S'None'
p241
asbasbasbag57
(g73
g59
NtRp242
(dp243
g62
(dp244
sg71
g67
sg64
(lp245
g57
(g78
g59
NtRp246
(dp247
g62
(dp248
g82
g83
ssg71
g242
sg64
(lp249
S'client'
p250
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
g89
g90
ssg71
g242
sg64
(lp254
S':'
asbag57
(g78
g59
NtRp255
(dp256
g62
(dp257
sg71
g242
sg64
(lp258
g57
(g58
g59
NtRp259
(dp260
g62
(dp261
g70
I5
ssg71
g255
sg64
(lp262
S'127.0.0.1'
p263
asbasbasbag57
(g73
g59
NtRp264
(dp265
g62
(dp266
sg71
g67
sg64
(lp267
g57
(g78
g59
NtRp268
(dp269
g62
(dp270
g82
g83
ssg71
g264
sg64
(lp271
S'controller'
p272
asbag57
(g78
g59
NtRp273
(dp274
g62
(dp275
g89
g90
ssg71
g264
sg64
(lp276
S':'
asbag57
(g78
g59
NtRp277
(dp278
g62
(dp279
sg71
g264
sg64
(lp280
g57
(g58
g59
NtRp281
(dp282
g62
(dp283
g70
I5
ssg71
g277
sg64
(lp284
S'default'
p285
asbasbasbag57
(g73
g59
NtRp286
(dp287
g62
(dp288
sg71
g67
sg64
(lp289
g57
(g78
g59
NtRp290
(dp291
g62
(dp292
g82
g83
ssg71
g286
sg64
(lp293
S'cookies'
p294
asbag57
(g78
g59
NtRp295
(dp296
g62
(dp297
g89
g90
ssg71
g286
sg64
(lp298
S':'
asbag57
(g78
g59
NtRp299
(dp300
g62
(dp301
sg71
g286
sg64
(lp302
g57
(g58
g59
NtRp303
(dp304
g62
(dp305
g70
I5
ssg71
g299
sg64
(lp306
g57
(g66
g59
NtRp307
(dp308
g62
(dp309
g70
I4
ssg71
Nsg64
(lp310
g57
(g73
g59
NtRp311
(dp312
g62
(dp313
sg71
g307
sg64
(lp314
g57
(g78
g59
NtRp315
(dp316
g62
(dp317
g82
g83
ssg71
g311
sg64
(lp318
S'session_id_admin'
p319
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
g89
g90
ssg71
g311
sg64
(lp323
S':'
asbag57
(g78
g59
NtRp324
(dp325
g62
(dp326
sg71
g311
sg64
(lp327
g57
(g58
g59
NtRp328
(dp329
g62
(dp330
g70
I4
ssg71
g324
sg64
(lp331
S'127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3'
p332
ag57
(g66
g59
NtRp333
(dp334
g62
(dp335
g70
I3
ssg71
Nsg64
(lp336
g57
(g73
g59
NtRp337
(dp338
g62
(dp339
sg71
g333
sg64
(lp340
g57
(g78
g59
NtRp341
(dp342
g62
(dp343
g82
g83
ssg71
g337
sg64
(lp344
S'comment'
p345
asbag57
(g78
g59
NtRp346
(dp347
g62
(dp348
g89
g90
ssg71
g337
sg64
(lp349
S':'
asbag57
(g78
g59
NtRp350
(dp351
g62
(dp352
sg71
g337
sg64
(lp353
g57
(g58
g59
NtRp354
(dp355
g62
(dp356
g70
I3
ssg71
g350
sg64
(lp357
S''
asbasbasbag57
(g73
g59
NtRp358
(dp359
g62
(dp360
sg71
g333
sg64
(lp361
g57
(g78
g59
NtRp362
(dp363
g62
(dp364
g82
g83
ssg71
g358
sg64
(lp365
S'domain'
p366
asbag57
(g78
g59
NtRp367
(dp368
g62
(dp369
g89
g90
ssg71
g358
sg64
(lp370
S':'
asbag57
(g78
g59
NtRp371
(dp372
g62
(dp373
sg71
g358
sg64
(lp374
g57
(g58
g59
NtRp375
(dp376
g62
(dp377
g70
I3
ssg71
g371
sg64
(lp378
S''
asbasbasbag57
(g73
g59
NtRp379
(dp380
g62
(dp381
sg71
g333
sg64
(lp382
g57
(g78
g59
NtRp383
(dp384
g62
(dp385
g82
g83
ssg71
g379
sg64
(lp386
S'expires'
p387
asbag57
(g78
g59
NtRp388
(dp389
g62
(dp390
g89
g90
ssg71
g379
sg64
(lp391
S':'
asbag57
(g78
g59
NtRp392
(dp393
g62
(dp394
sg71
g379
sg64
(lp395
g57
(g58
g59
NtRp396
(dp397
g62
(dp398
g70
I3
ssg71
g392
sg64
(lp399
S''
asbasbasbag57
(g73
g59
NtRp400
(dp401
g62
(dp402
sg71
g333
sg64
(lp403
g57
(g78
g59
NtRp404
(dp405
g62
(dp406
g82
g83
ssg71
g400
sg64
(lp407
S'httponly'
p408
asbag57
(g78
g59
NtRp409
(dp410
g62
(dp411
g89
g90
ssg71
g400
sg64
(lp412
S':'
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
sg71
g400
sg64
(lp416
g57
(g58
g59
NtRp417
(dp418
g62
(dp419
g70
I3
ssg71
g413
sg64
(lp420
S''
asbasbasbag57
(g73
g59
NtRp421
(dp422
g62
(dp423
sg71
g333
sg64
(lp424
g57
(g78
g59
NtRp425
(dp426
g62
(dp427
g82
g83
ssg71
g421
sg64
(lp428
S'max-age'
p429
asbag57
(g78
g59
NtRp430
(dp431
g62
(dp432
g89
g90
ssg71
g421
sg64
(lp433
S':'
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
sg71
g421
sg64
(lp437
g57
(g58
g59
NtRp438
(dp439
g62
(dp440
g70
I3
ssg71
g434
sg64
(lp441
S''
asbasbasbag57
(g73
g59
NtRp442
(dp443
g62
(dp444
sg71
g333
sg64
(lp445
g57
(g78
g59
NtRp446
(dp447
g62
(dp448
g82
g83
ssg71
g442
sg64
(lp449
S'path'
p450
asbag57
(g78
g59
NtRp451
(dp452
g62
(dp453
g89
g90
ssg71
g442
sg64
(lp454
S':'
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
sg71
g442
sg64
(lp458
g57
(g58
g59
NtRp459
(dp460
g62
(dp461
g70
I3
ssg71
g455
sg64
(lp462
S''
asbasbasbag57
(g73
g59
NtRp463
(dp464
g62
(dp465
sg71
g333
sg64
(lp466
g57
(g78
g59
NtRp467
(dp468
g62
(dp469
g82
g83
ssg71
g463
sg64
(lp470
S'secure'
p471
asbag57
(g78
g59
NtRp472
(dp473
g62
(dp474
g89
g90
ssg71
g463
sg64
(lp475
S':'
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
sg71
g463
sg64
(lp479
g57
(g58
g59
NtRp480
(dp481
g62
(dp482
g70
I3
ssg71
g476
sg64
(lp483
S''
asbasbasbag57
(g73
g59
NtRp484
(dp485
g62
(dp486
sg71
g333
sg64
(lp487
g57
(g78
g59
NtRp488
(dp489
g62
(dp490
g82
g83
ssg71
g484
sg64
(lp491
S'version'
p492
asbag57
(g78
g59
NtRp493
(dp494
g62
(dp495
g89
g90
ssg71
g484
sg64
(lp496
S':'
asbag57
(g78
g59
NtRp497
(dp498
g62
(dp499
sg71
g484
sg64
(lp500
g57
(g58
g59
NtRp501
(dp502
g62
(dp503
g70
I3
ssg71
g497
sg64
(lp504
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp505
(dp506
g62
(dp507
sg71
g307
sg64
(lp508
g57
(g78
g59
NtRp509
(dp510
g62
(dp511
g82
g83
ssg71
g505
sg64
(lp512
S'session_id_dev_bootstrap_ch'
p513
asbag57
(g78
g59
NtRp514
(dp515
g62
(dp516
g89
g90
ssg71
g505
sg64
(lp517
S':'
asbag57
(g78
g59
NtRp518
(dp519
g62
(dp520
sg71
g505
sg64
(lp521
g57
(g58
g59
NtRp522
(dp523
g62
(dp524
g70
I4
ssg71
g518
sg64
(lp525
S'127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p526
ag57
(g66
g59
NtRp527
(dp528
g62
(dp529
g70
I3
ssg71
Nsg64
(lp530
g57
(g73
g59
NtRp531
(dp532
g62
(dp533
sg71
g527
sg64
(lp534
g57
(g78
g59
NtRp535
(dp536
g62
(dp537
g82
g83
ssg71
g531
sg64
(lp538
g345
asbag57
(g78
g59
NtRp539
(dp540
g62
(dp541
g89
g90
ssg71
g531
sg64
(lp542
S':'
asbag57
(g78
g59
NtRp543
(dp544
g62
(dp545
sg71
g531
sg64
(lp546
g57
(g58
g59
NtRp547
(dp548
g62
(dp549
g70
I3
ssg71
g543
sg64
(lp550
S''
asbasbasbag57
(g73
g59
NtRp551
(dp552
g62
(dp553
sg71
g527
sg64
(lp554
g57
(g78
g59
NtRp555
(dp556
g62
(dp557
g82
g83
ssg71
g551
sg64
(lp558
g366
asbag57
(g78
g59
NtRp559
(dp560
g62
(dp561
g89
g90
ssg71
g551
sg64
(lp562
S':'
asbag57
(g78
g59
NtRp563
(dp564
g62
(dp565
sg71
g551
sg64
(lp566
g57
(g58
g59
NtRp567
(dp568
g62
(dp569
g70
I3
ssg71
g563
sg64
(lp570
S''
asbasbasbag57
(g73
g59
NtRp571
(dp572
g62
(dp573
sg71
g527
sg64
(lp574
g57
(g78
g59
NtRp575
(dp576
g62
(dp577
g82
g83
ssg71
g571
sg64
(lp578
g387
asbag57
(g78
g59
NtRp579
(dp580
g62
(dp581
g89
g90
ssg71
g571
sg64
(lp582
S':'
asbag57
(g78
g59
NtRp583
(dp584
g62
(dp585
sg71
g571
sg64
(lp586
g57
(g58
g59
NtRp587
(dp588
g62
(dp589
g70
I3
ssg71
g583
sg64
(lp590
S''
asbasbasbag57
(g73
g59
NtRp591
(dp592
g62
(dp593
sg71
g527
sg64
(lp594
g57
(g78
g59
NtRp595
(dp596
g62
(dp597
g82
g83
ssg71
g591
sg64
(lp598
g408
asbag57
(g78
g59
NtRp599
(dp600
g62
(dp601
g89
g90
ssg71
g591
sg64
(lp602
S':'
asbag57
(g78
g59
NtRp603
(dp604
g62
(dp605
sg71
g591
sg64
(lp606
g57
(g58
g59
NtRp607
(dp608
g62
(dp609
g70
I3
ssg71
g603
sg64
(lp610
S''
asbasbasbag57
(g73
g59
NtRp611
(dp612
g62
(dp613
sg71
g527
sg64
(lp614
g57
(g78
g59
NtRp615
(dp616
g62
(dp617
g82
g83
ssg71
g611
sg64
(lp618
g429
asbag57
(g78
g59
NtRp619
(dp620
g62
(dp621
g89
g90
ssg71
g611
sg64
(lp622
S':'
asbag57
(g78
g59
NtRp623
(dp624
g62
(dp625
sg71
g611
sg64
(lp626
g57
(g58
g59
NtRp627
(dp628
g62
(dp629
g70
I3
ssg71
g623
sg64
(lp630
S''
asbasbasbag57
(g73
g59
NtRp631
(dp632
g62
(dp633
sg71
g527
sg64
(lp634
g57
(g78
g59
NtRp635
(dp636
g62
(dp637
g82
g83
ssg71
g631
sg64
(lp638
g450
asbag57
(g78
g59
NtRp639
(dp640
g62
(dp641
g89
g90
ssg71
g631
sg64
(lp642
S':'
asbag57
(g78
g59
NtRp643
(dp644
g62
(dp645
sg71
g631
sg64
(lp646
g57
(g58
g59
NtRp647
(dp648
g62
(dp649
g70
I3
ssg71
g643
sg64
(lp650
S''
asbasbasbag57
(g73
g59
NtRp651
(dp652
g62
(dp653
sg71
g527
sg64
(lp654
g57
(g78
g59
NtRp655
(dp656
g62
(dp657
g82
g83
ssg71
g651
sg64
(lp658
g471
asbag57
(g78
g59
NtRp659
(dp660
g62
(dp661
g89
g90
ssg71
g651
sg64
(lp662
S':'
asbag57
(g78
g59
NtRp663
(dp664
g62
(dp665
sg71
g651
sg64
(lp666
g57
(g58
g59
NtRp667
(dp668
g62
(dp669
g70
I3
ssg71
g663
sg64
(lp670
S''
asbasbasbag57
(g73
g59
NtRp671
(dp672
g62
(dp673
sg71
g527
sg64
(lp674
g57
(g78
g59
NtRp675
(dp676
g62
(dp677
g82
g83
ssg71
g671
sg64
(lp678
g492
asbag57
(g78
g59
NtRp679
(dp680
g62
(dp681
g89
g90
ssg71
g671
sg64
(lp682
S':'
asbag57
(g78
g59
NtRp683
(dp684
g62
(dp685
sg71
g671
sg64
(lp686
g57
(g58
g59
NtRp687
(dp688
g62
(dp689
g70
I3
ssg71
g683
sg64
(lp690
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp691
(dp692
g62
(dp693
sg71
g67
sg64
(lp694
g57
(g78
g59
NtRp695
(dp696
g62
(dp697
g82
g83
ssg71
g691
sg64
(lp698
S'env'
p699
asbag57
(g78
g59
NtRp700
(dp701
g62
(dp702
g89
g90
ssg71
g691
sg64
(lp703
S':'
asbag57
(g78
g59
NtRp704
(dp705
g62
(dp706
sg71
g691
sg64
(lp707
g57
(g58
g59
NtRp708
(dp709
g62
(dp710
g70
I5
ssg71
g704
sg64
(lp711
g57
(g66
g59
NtRp712
(dp713
g62
(dp714
g70
I4
ssg71
Nsg64
(lp715
g57
(g73
g59
NtRp716
(dp717
g62
(dp718
sg71
g712
sg64
(lp719
g57
(g78
g59
NtRp720
(dp721
g62
(dp722
g82
g83
ssg71
g716
sg64
(lp723
S'app_folders'
p724
asbag57
(g78
g59
NtRp725
(dp726
g62
(dp727
g89
g90
ssg71
g716
sg64
(lp728
S':'
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
sg71
g716
sg64
(lp732
g57
(g58
g59
NtRp733
(dp734
g62
(dp735
g70
I4
ssg71
g729
sg64
(lp736
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p737
asbasbasbag57
(g73
g59
NtRp738
(dp739
g62
(dp740
sg71
g712
sg64
(lp741
g57
(g78
g59
NtRp742
(dp743
g62
(dp744
g82
g83
ssg71
g738
sg64
(lp745
S'applications_parent'
p746
asbag57
(g78
g59
NtRp747
(dp748
g62
(dp749
g89
g90
ssg71
g738
sg64
(lp750
S':'
asbag57
(g78
g59
NtRp751
(dp752
g62
(dp753
sg71
g738
sg64
(lp754
g57
(g58
g59
NtRp755
(dp756
g62
(dp757
g70
I4
ssg71
g751
sg64
(lp758
S'/home/anil/Downloads/web2py'
p759
asbasbasbag57
(g73
g59
NtRp760
(dp761
g62
(dp762
sg71
g712
sg64
(lp763
g57
(g78
g59
NtRp764
(dp765
g62
(dp766
g82
g83
ssg71
g760
sg64
(lp767
S'cmd_args'
p768
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
g89
g90
ssg71
g760
sg64
(lp772
S':'
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
sg71
g760
sg64
(lp776
g57
(g58
g59
NtRp777
(dp778
g62
(dp779
g70
I4
ssg71
g773
sg64
(lp780
g57
(g66
g59
NtRp781
(dp782
g62
(dp783
g70
I3
ssg71
Nsg64
(lp784
sbasbasbasbag57
(g73
g59
NtRp785
(dp786
g62
(dp787
sg71
g712
sg64
(lp788
g57
(g78
g59
NtRp789
(dp790
g62
(dp791
g82
g83
ssg71
g785
sg64
(lp792
S'cmd_options'
p793
asbag57
(g78
g59
NtRp794
(dp795
g62
(dp796
g89
g90
ssg71
g785
sg64
(lp797
S':'
asbag57
(g78
g59
NtRp798
(dp799
g62
(dp800
sg71
g785
sg64
(lp801
g57
(g58
g59
NtRp802
(dp803
g62
(dp804
g70
I4
ssg71
g798
sg64
(lp805
S"<Values at 0xa513c6c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p806
asbasbasbag57
(g73
g59
NtRp807
(dp808
g62
(dp809
sg71
g712
sg64
(lp810
g57
(g78
g59
NtRp811
(dp812
g62
(dp813
g82
g83
ssg71
g807
sg64
(lp814
S'db_sessions'
p815
asbag57
(g78
g59
NtRp816
(dp817
g62
(dp818
g89
g90
ssg71
g807
sg64
(lp819
S':'
asbag57
(g78
g59
NtRp820
(dp821
g62
(dp822
sg71
g807
sg64
(lp823
g57
(g58
g59
NtRp824
(dp825
g62
(dp826
g70
I4
ssg71
g820
sg64
(lp827
S'set([])'
p828
asbasbasbag57
(g73
g59
NtRp829
(dp830
g62
(dp831
sg71
g712
sg64
(lp832
g57
(g78
g59
NtRp833
(dp834
g62
(dp835
g82
g83
ssg71
g829
sg64
(lp836
S'debugging'
p837
asbag57
(g78
g59
NtRp838
(dp839
g62
(dp840
g89
g90
ssg71
g829
sg64
(lp841
S':'
asbag57
(g78
g59
NtRp842
(dp843
g62
(dp844
sg71
g829
sg64
(lp845
g57
(g58
g59
NtRp846
(dp847
g62
(dp848
g70
I4
ssg71
g842
sg64
(lp849
g100
asbasbasbag57
(g73
g59
NtRp850
(dp851
g62
(dp852
sg71
g712
sg64
(lp853
g57
(g78
g59
NtRp854
(dp855
g62
(dp856
g82
g83
ssg71
g850
sg64
(lp857
S'gluon_parent'
p858
asbag57
(g78
g59
NtRp859
(dp860
g62
(dp861
g89
g90
ssg71
g850
sg64
(lp862
S':'
asbag57
(g78
g59
NtRp863
(dp864
g62
(dp865
sg71
g850
sg64
(lp866
g57
(g58
g59
NtRp867
(dp868
g62
(dp869
g70
I4
ssg71
g863
sg64
(lp870
S'/home/anil/Downloads/web2py'
p871
asbasbasbag57
(g73
g59
NtRp872
(dp873
g62
(dp874
sg71
g712
sg64
(lp875
g57
(g78
g59
NtRp876
(dp877
g62
(dp878
g82
g83
ssg71
g872
sg64
(lp879
S'http_accept'
p880
asbag57
(g78
g59
NtRp881
(dp882
g62
(dp883
g89
g90
ssg71
g872
sg64
(lp884
S':'
asbag57
(g78
g59
NtRp885
(dp886
g62
(dp887
sg71
g872
sg64
(lp888
g57
(g58
g59
NtRp889
(dp890
g62
(dp891
g70
I4
ssg71
g885
sg64
(lp892
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p893
asbasbasbag57
(g73
g59
NtRp894
(dp895
g62
(dp896
sg71
g712
sg64
(lp897
g57
(g78
g59
NtRp898
(dp899
g62
(dp900
g82
g83
ssg71
g894
sg64
(lp901
S'http_accept_charset'
p902
asbag57
(g78
g59
NtRp903
(dp904
g62
(dp905
g89
g90
ssg71
g894
sg64
(lp906
S':'
asbag57
(g78
g59
NtRp907
(dp908
g62
(dp909
sg71
g894
sg64
(lp910
g57
(g58
g59
NtRp911
(dp912
g62
(dp913
g70
I4
ssg71
g907
sg64
(lp914
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p915
asbasbasbag57
(g73
g59
NtRp916
(dp917
g62
(dp918
sg71
g712
sg64
(lp919
g57
(g78
g59
NtRp920
(dp921
g62
(dp922
g82
g83
ssg71
g916
sg64
(lp923
S'http_accept_encoding'
p924
asbag57
(g78
g59
NtRp925
(dp926
g62
(dp927
g89
g90
ssg71
g916
sg64
(lp928
S':'
asbag57
(g78
g59
NtRp929
(dp930
g62
(dp931
sg71
g916
sg64
(lp932
g57
(g58
g59
NtRp933
(dp934
g62
(dp935
g70
I4
ssg71
g929
sg64
(lp936
S'gzip,deflate,sdch'
p937
asbasbasbag57
(g73
g59
NtRp938
(dp939
g62
(dp940
sg71
g712
sg64
(lp941
g57
(g78
g59
NtRp942
(dp943
g62
(dp944
g82
g83
ssg71
g938
sg64
(lp945
S'http_accept_language'
p946
asbag57
(g78
g59
NtRp947
(dp948
g62
(dp949
g89
g90
ssg71
g938
sg64
(lp950
S':'
asbag57
(g78
g59
NtRp951
(dp952
g62
(dp953
sg71
g938
sg64
(lp954
g57
(g58
g59
NtRp955
(dp956
g62
(dp957
g70
I4
ssg71
g951
sg64
(lp958
S'en-US,en;q=0.8'
p959
asbasbasbag57
(g73
g59
NtRp960
(dp961
g62
(dp962
sg71
g712
sg64
(lp963
g57
(g78
g59
NtRp964
(dp965
g62
(dp966
g82
g83
ssg71
g960
sg64
(lp967
S'http_connection'
p968
asbag57
(g78
g59
NtRp969
(dp970
g62
(dp971
g89
g90
ssg71
g960
sg64
(lp972
S':'
asbag57
(g78
g59
NtRp973
(dp974
g62
(dp975
sg71
g960
sg64
(lp976
g57
(g58
g59
NtRp977
(dp978
g62
(dp979
g70
I4
ssg71
g973
sg64
(lp980
S'keep-alive'
p981
asbasbasbag57
(g73
g59
NtRp982
(dp983
g62
(dp984
sg71
g712
sg64
(lp985
g57
(g78
g59
NtRp986
(dp987
g62
(dp988
g82
g83
ssg71
g982
sg64
(lp989
S'http_cookie'
p990
asbag57
(g78
g59
NtRp991
(dp992
g62
(dp993
g89
g90
ssg71
g982
sg64
(lp994
S':'
asbag57
(g78
g59
NtRp995
(dp996
g62
(dp997
sg71
g982
sg64
(lp998
g57
(g58
g59
NtRp999
(dp1000
g62
(dp1001
g70
I4
ssg71
g995
sg64
(lp1002
S'session_id_admin=127.0.0.1-b525fb61-ea08-4c78-87c0-51b0a39c8fc3; session_id_dev_bootstrap_ch=127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p1003
asbasbasbag57
(g73
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g712
sg64
(lp1007
g57
(g78
g59
NtRp1008
(dp1009
g62
(dp1010
g82
g83
ssg71
g1004
sg64
(lp1011
S'http_host'
p1012
asbag57
(g78
g59
NtRp1013
(dp1014
g62
(dp1015
g89
g90
ssg71
g1004
sg64
(lp1016
S':'
asbag57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
sg71
g1004
sg64
(lp1020
g57
(g58
g59
NtRp1021
(dp1022
g62
(dp1023
g70
I4
ssg71
g1017
sg64
(lp1024
S'127.0.0.1:8000'
p1025
asbasbasbag57
(g73
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g712
sg64
(lp1029
g57
(g78
g59
NtRp1030
(dp1031
g62
(dp1032
g82
g83
ssg71
g1026
sg64
(lp1033
S'http_referer'
p1034
asbag57
(g78
g59
NtRp1035
(dp1036
g62
(dp1037
g89
g90
ssg71
g1026
sg64
(lp1038
S':'
asbag57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
sg71
g1026
sg64
(lp1042
g57
(g58
g59
NtRp1043
(dp1044
g62
(dp1045
g70
I4
ssg71
g1039
sg64
(lp1046
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_pub_projects/project/experiment.project/5'
p1047
asbasbasbag57
(g73
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g712
sg64
(lp1051
g57
(g78
g59
NtRp1052
(dp1053
g62
(dp1054
g82
g83
ssg71
g1048
sg64
(lp1055
S'http_user_agent'
p1056
asbag57
(g78
g59
NtRp1057
(dp1058
g62
(dp1059
g89
g90
ssg71
g1048
sg64
(lp1060
S':'
asbag57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
sg71
g1048
sg64
(lp1064
g57
(g58
g59
NtRp1065
(dp1066
g62
(dp1067
g70
I4
ssg71
g1061
sg64
(lp1068
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1069
asbasbasbag57
(g73
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g712
sg64
(lp1073
g57
(g78
g59
NtRp1074
(dp1075
g62
(dp1076
g82
g83
ssg71
g1070
sg64
(lp1077
S'is_jython'
p1078
asbag57
(g78
g59
NtRp1079
(dp1080
g62
(dp1081
g89
g90
ssg71
g1070
sg64
(lp1082
S':'
asbag57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
sg71
g1070
sg64
(lp1086
g57
(g58
g59
NtRp1087
(dp1088
g62
(dp1089
g70
I4
ssg71
g1083
sg64
(lp1090
g100
asbasbasbag57
(g73
g59
NtRp1091
(dp1092
g62
(dp1093
sg71
g712
sg64
(lp1094
g57
(g78
g59
NtRp1095
(dp1096
g62
(dp1097
g82
g83
ssg71
g1091
sg64
(lp1098
S'is_pypy'
p1099
asbag57
(g78
g59
NtRp1100
(dp1101
g62
(dp1102
g89
g90
ssg71
g1091
sg64
(lp1103
S':'
asbag57
(g78
g59
NtRp1104
(dp1105
g62
(dp1106
sg71
g1091
sg64
(lp1107
g57
(g58
g59
NtRp1108
(dp1109
g62
(dp1110
g70
I4
ssg71
g1104
sg64
(lp1111
g100
asbasbasbag57
(g73
g59
NtRp1112
(dp1113
g62
(dp1114
sg71
g712
sg64
(lp1115
g57
(g78
g59
NtRp1116
(dp1117
g62
(dp1118
g82
g83
ssg71
g1112
sg64
(lp1119
S'local_hosts'
p1120
asbag57
(g78
g59
NtRp1121
(dp1122
g62
(dp1123
g89
g90
ssg71
g1112
sg64
(lp1124
S':'
asbag57
(g78
g59
NtRp1125
(dp1126
g62
(dp1127
sg71
g1112
sg64
(lp1128
g57
(g58
g59
NtRp1129
(dp1130
g62
(dp1131
g70
I4
ssg71
g1125
sg64
(lp1132
g57
(g66
g59
NtRp1133
(dp1134
g62
(dp1135
g70
I3
ssg71
Nsg64
(lp1136
g57
(g73
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1133
sg64
(lp1140
g57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
sg71
g1137
sg64
(lp1144
g57
(g58
g59
NtRp1145
(dp1146
g62
(dp1147
g70
I3
ssg71
g1141
sg64
(lp1148
S'::1'
p1149
asbasbasbag57
(g73
g59
NtRp1150
(dp1151
g62
(dp1152
sg71
g1133
sg64
(lp1153
g57
(g78
g59
NtRp1154
(dp1155
g62
(dp1156
sg71
g1150
sg64
(lp1157
g57
(g58
g59
NtRp1158
(dp1159
g62
(dp1160
g70
I3
ssg71
g1154
sg64
(lp1161
S'127.0.1.1'
p1162
asbasbasbag57
(g73
g59
NtRp1163
(dp1164
g62
(dp1165
sg71
g1133
sg64
(lp1166
g57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
sg71
g1163
sg64
(lp1170
g57
(g58
g59
NtRp1171
(dp1172
g62
(dp1173
g70
I3
ssg71
g1167
sg64
(lp1174
S'::ffff:127.0.0.1'
p1175
asbasbasbag57
(g73
g59
NtRp1176
(dp1177
g62
(dp1178
sg71
g1133
sg64
(lp1179
g57
(g78
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g1176
sg64
(lp1183
g57
(g58
g59
NtRp1184
(dp1185
g62
(dp1186
g70
I3
ssg71
g1180
sg64
(lp1187
S'127.0.0.1'
p1188
asbasbasbag57
(g73
g59
NtRp1189
(dp1190
g62
(dp1191
sg71
g1133
sg64
(lp1192
g57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
sg71
g1189
sg64
(lp1196
g57
(g58
g59
NtRp1197
(dp1198
g62
(dp1199
g70
I3
ssg71
g1193
sg64
(lp1200
S'anil-Inspiron-1525'
p1201
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1202
(dp1203
g62
(dp1204
sg71
g712
sg64
(lp1205
g57
(g78
g59
NtRp1206
(dp1207
g62
(dp1208
g82
g83
ssg71
g1202
sg64
(lp1209
S'path_info'
p1210
asbag57
(g78
g59
NtRp1211
(dp1212
g62
(dp1213
g89
g90
ssg71
g1202
sg64
(lp1214
S':'
asbag57
(g78
g59
NtRp1215
(dp1216
g62
(dp1217
sg71
g1202
sg64
(lp1218
g57
(g58
g59
NtRp1219
(dp1220
g62
(dp1221
g70
I4
ssg71
g1215
sg64
(lp1222
S'/DEV_bootstrap_ch/default/list_all_pub_projects/project/view/project/5'
p1223
asbasbasbag57
(g73
g59
NtRp1224
(dp1225
g62
(dp1226
sg71
g712
sg64
(lp1227
g57
(g78
g59
NtRp1228
(dp1229
g62
(dp1230
g82
g83
ssg71
g1224
sg64
(lp1231
S'query_string'
p1232
asbag57
(g78
g59
NtRp1233
(dp1234
g62
(dp1235
g89
g90
ssg71
g1224
sg64
(lp1236
S':'
asbag57
(g78
g59
NtRp1237
(dp1238
g62
(dp1239
sg71
g1224
sg64
(lp1240
g57
(g58
g59
NtRp1241
(dp1242
g62
(dp1243
g70
I4
ssg71
g1237
sg64
(lp1244
S'_signature=ef19f79a252030f7f06af9175d61e71d8d1822a2'
p1245
asbasbasbag57
(g73
g59
NtRp1246
(dp1247
g62
(dp1248
sg71
g712
sg64
(lp1249
g57
(g78
g59
NtRp1250
(dp1251
g62
(dp1252
g82
g83
ssg71
g1246
sg64
(lp1253
S'remote_addr'
p1254
asbag57
(g78
g59
NtRp1255
(dp1256
g62
(dp1257
g89
g90
ssg71
g1246
sg64
(lp1258
S':'
asbag57
(g78
g59
NtRp1259
(dp1260
g62
(dp1261
sg71
g1246
sg64
(lp1262
g57
(g58
g59
NtRp1263
(dp1264
g62
(dp1265
g70
I4
ssg71
g1259
sg64
(lp1266
g263
asbasbasbag57
(g73
g59
NtRp1267
(dp1268
g62
(dp1269
sg71
g712
sg64
(lp1270
g57
(g78
g59
NtRp1271
(dp1272
g62
(dp1273
g82
g83
ssg71
g1267
sg64
(lp1274
S'remote_port'
p1275
asbag57
(g78
g59
NtRp1276
(dp1277
g62
(dp1278
g89
g90
ssg71
g1267
sg64
(lp1279
S':'
asbag57
(g78
g59
NtRp1280
(dp1281
g62
(dp1282
sg71
g1267
sg64
(lp1283
g57
(g58
g59
NtRp1284
(dp1285
g62
(dp1286
g70
I4
ssg71
g1280
sg64
(lp1287
S'58587'
p1288
asbasbasbag57
(g73
g59
NtRp1289
(dp1290
g62
(dp1291
sg71
g712
sg64
(lp1292
g57
(g78
g59
NtRp1293
(dp1294
g62
(dp1295
g82
g83
ssg71
g1289
sg64
(lp1296
S'request_method'
p1297
asbag57
(g78
g59
NtRp1298
(dp1299
g62
(dp1300
g89
g90
ssg71
g1289
sg64
(lp1301
S':'
asbag57
(g78
g59
NtRp1302
(dp1303
g62
(dp1304
sg71
g1289
sg64
(lp1305
g57
(g58
g59
NtRp1306
(dp1307
g62
(dp1308
g70
I4
ssg71
g1302
sg64
(lp1309
S'GET'
p1310
asbasbasbag57
(g73
g59
NtRp1311
(dp1312
g62
(dp1313
sg71
g712
sg64
(lp1314
g57
(g78
g59
NtRp1315
(dp1316
g62
(dp1317
g82
g83
ssg71
g1311
sg64
(lp1318
S'request_uri'
p1319
asbag57
(g78
g59
NtRp1320
(dp1321
g62
(dp1322
g89
g90
ssg71
g1311
sg64
(lp1323
S':'
asbag57
(g78
g59
NtRp1324
(dp1325
g62
(dp1326
sg71
g1311
sg64
(lp1327
g57
(g58
g59
NtRp1328
(dp1329
g62
(dp1330
g70
I4
ssg71
g1324
sg64
(lp1331
S'/DEV_bootstrap_ch/default/list_all_pub_projects/project/view/project/5?_signature=ef19f79a252030f7f06af9175d61e71d8d1822a2'
p1332
asbasbasbag57
(g73
g59
NtRp1333
(dp1334
g62
(dp1335
sg71
g712
sg64
(lp1336
g57
(g78
g59
NtRp1337
(dp1338
g62
(dp1339
g82
g83
ssg71
g1333
sg64
(lp1340
S'script_name'
p1341
asbag57
(g78
g59
NtRp1342
(dp1343
g62
(dp1344
g89
g90
ssg71
g1333
sg64
(lp1345
S':'
asbag57
(g78
g59
NtRp1346
(dp1347
g62
(dp1348
sg71
g1333
sg64
(lp1349
g57
(g58
g59
NtRp1350
(dp1351
g62
(dp1352
g70
I4
ssg71
g1346
sg64
(lp1353
S''
asbasbasbag57
(g73
g59
NtRp1354
(dp1355
g62
(dp1356
sg71
g712
sg64
(lp1357
g57
(g78
g59
NtRp1358
(dp1359
g62
(dp1360
g82
g83
ssg71
g1354
sg64
(lp1361
S'server_name'
p1362
asbag57
(g78
g59
NtRp1363
(dp1364
g62
(dp1365
g89
g90
ssg71
g1354
sg64
(lp1366
S':'
asbag57
(g78
g59
NtRp1367
(dp1368
g62
(dp1369
sg71
g1354
sg64
(lp1370
g57
(g58
g59
NtRp1371
(dp1372
g62
(dp1373
g70
I4
ssg71
g1367
sg64
(lp1374
S'anil-Inspiron-1525'
p1375
asbasbasbag57
(g73
g59
NtRp1376
(dp1377
g62
(dp1378
sg71
g712
sg64
(lp1379
g57
(g78
g59
NtRp1380
(dp1381
g62
(dp1382
g82
g83
ssg71
g1376
sg64
(lp1383
S'server_port'
p1384
asbag57
(g78
g59
NtRp1385
(dp1386
g62
(dp1387
g89
g90
ssg71
g1376
sg64
(lp1388
S':'
asbag57
(g78
g59
NtRp1389
(dp1390
g62
(dp1391
sg71
g1376
sg64
(lp1392
g57
(g58
g59
NtRp1393
(dp1394
g62
(dp1395
g70
I4
ssg71
g1389
sg64
(lp1396
S'8000'
p1397
asbasbasbag57
(g73
g59
NtRp1398
(dp1399
g62
(dp1400
sg71
g712
sg64
(lp1401
g57
(g78
g59
NtRp1402
(dp1403
g62
(dp1404
g82
g83
ssg71
g1398
sg64
(lp1405
S'server_protocol'
p1406
asbag57
(g78
g59
NtRp1407
(dp1408
g62
(dp1409
g89
g90
ssg71
g1398
sg64
(lp1410
S':'
asbag57
(g78
g59
NtRp1411
(dp1412
g62
(dp1413
sg71
g1398
sg64
(lp1414
g57
(g58
g59
NtRp1415
(dp1416
g62
(dp1417
g70
I4
ssg71
g1411
sg64
(lp1418
S'HTTP/1.1'
p1419
asbasbasbag57
(g73
g59
NtRp1420
(dp1421
g62
(dp1422
sg71
g712
sg64
(lp1423
g57
(g78
g59
NtRp1424
(dp1425
g62
(dp1426
g82
g83
ssg71
g1420
sg64
(lp1427
S'server_software'
p1428
asbag57
(g78
g59
NtRp1429
(dp1430
g62
(dp1431
g89
g90
ssg71
g1420
sg64
(lp1432
S':'
asbag57
(g78
g59
NtRp1433
(dp1434
g62
(dp1435
sg71
g1420
sg64
(lp1436
g57
(g58
g59
NtRp1437
(dp1438
g62
(dp1439
g70
I4
ssg71
g1433
sg64
(lp1440
S'Rocket 1.2.6'
p1441
asbasbasbag57
(g73
g59
NtRp1442
(dp1443
g62
(dp1444
sg71
g712
sg64
(lp1445
g57
(g78
g59
NtRp1446
(dp1447
g62
(dp1448
g82
g83
ssg71
g1442
sg64
(lp1449
S'web2py_path'
p1450
asbag57
(g78
g59
NtRp1451
(dp1452
g62
(dp1453
g89
g90
ssg71
g1442
sg64
(lp1454
S':'
asbag57
(g78
g59
NtRp1455
(dp1456
g62
(dp1457
sg71
g1442
sg64
(lp1458
g57
(g58
g59
NtRp1459
(dp1460
g62
(dp1461
g70
I4
ssg71
g1455
sg64
(lp1462
g759
asbasbasbag57
(g73
g59
NtRp1463
(dp1464
g62
(dp1465
sg71
g712
sg64
(lp1466
g57
(g78
g59
NtRp1467
(dp1468
g62
(dp1469
g82
g83
ssg71
g1463
sg64
(lp1470
S'web2py_version'
p1471
asbag57
(g78
g59
NtRp1472
(dp1473
g62
(dp1474
g89
g90
ssg71
g1463
sg64
(lp1475
S':'
asbag57
(g78
g59
NtRp1476
(dp1477
g62
(dp1478
sg71
g1463
sg64
(lp1479
g57
(g58
g59
NtRp1480
(dp1481
g62
(dp1482
g70
I4
ssg71
g1476
sg64
(lp1483
g57
(g66
g59
NtRp1484
(dp1485
g62
(dp1486
g70
I3
ssg71
Nsg64
(lp1487
g57
(g73
g59
NtRp1488
(dp1489
g62
(dp1490
sg71
g1484
sg64
(lp1491
g57
(g78
g59
NtRp1492
(dp1493
g62
(dp1494
sg71
g1488
sg64
(lp1495
g57
(g58
g59
NtRp1496
(dp1497
g62
(dp1498
g70
I3
ssg71
g1492
sg64
(lp1499
S'2'
asbasbasbag57
(g73
g59
NtRp1500
(dp1501
g62
(dp1502
sg71
g1484
sg64
(lp1503
g57
(g78
g59
NtRp1504
(dp1505
g62
(dp1506
sg71
g1500
sg64
(lp1507
g57
(g58
g59
NtRp1508
(dp1509
g62
(dp1510
g70
I3
ssg71
g1504
sg64
(lp1511
S'3'
asbasbasbag57
(g73
g59
NtRp1512
(dp1513
g62
(dp1514
sg71
g1484
sg64
(lp1515
g57
(g78
g59
NtRp1516
(dp1517
g62
(dp1518
sg71
g1512
sg64
(lp1519
g57
(g58
g59
NtRp1520
(dp1521
g62
(dp1522
g70
I3
ssg71
g1516
sg64
(lp1523
S'2'
asbasbasbag57
(g73
g59
NtRp1524
(dp1525
g62
(dp1526
sg71
g1484
sg64
(lp1527
g57
(g78
g59
NtRp1528
(dp1529
g62
(dp1530
sg71
g1524
sg64
(lp1531
g57
(g58
g59
NtRp1532
(dp1533
g62
(dp1534
g70
I3
ssg71
g1528
sg64
(lp1535
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1536
asbasbasbag57
(g73
g59
NtRp1537
(dp1538
g62
(dp1539
sg71
g1484
sg64
(lp1540
g57
(g78
g59
NtRp1541
(dp1542
g62
(dp1543
sg71
g1537
sg64
(lp1544
g57
(g58
g59
NtRp1545
(dp1546
g62
(dp1547
g70
I3
ssg71
g1541
sg64
(lp1548
S'stable'
p1549
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1550
(dp1551
g62
(dp1552
sg71
g712
sg64
(lp1553
g57
(g78
g59
NtRp1554
(dp1555
g62
(dp1556
g82
g83
ssg71
g1550
sg64
(lp1557
S'wsgi_errors'
p1558
asbag57
(g78
g59
NtRp1559
(dp1560
g62
(dp1561
g89
g90
ssg71
g1550
sg64
(lp1562
S':'
asbag57
(g78
g59
NtRp1563
(dp1564
g62
(dp1565
sg71
g1550
sg64
(lp1566
g57
(g58
g59
NtRp1567
(dp1568
g62
(dp1569
g70
I4
ssg71
g1563
sg64
(lp1570
S"<open file '<stderr>', mode 'w' at 0xb72e90d0>"
p1571
asbasbasbag57
(g73
g59
NtRp1572
(dp1573
g62
(dp1574
sg71
g712
sg64
(lp1575
g57
(g78
g59
NtRp1576
(dp1577
g62
(dp1578
g82
g83
ssg71
g1572
sg64
(lp1579
S'wsgi_file_wrapper'
p1580
asbag57
(g78
g59
NtRp1581
(dp1582
g62
(dp1583
g89
g90
ssg71
g1572
sg64
(lp1584
S':'
asbag57
(g78
g59
NtRp1585
(dp1586
g62
(dp1587
sg71
g1572
sg64
(lp1588
g57
(g58
g59
NtRp1589
(dp1590
g62
(dp1591
g70
I4
ssg71
g1585
sg64
(lp1592
S'<class wsgiref.util.FileWrapper at 0xa49cb9c>'
p1593
asbasbasbag57
(g73
g59
NtRp1594
(dp1595
g62
(dp1596
sg71
g712
sg64
(lp1597
g57
(g78
g59
NtRp1598
(dp1599
g62
(dp1600
g82
g83
ssg71
g1594
sg64
(lp1601
S'wsgi_input'
p1602
asbag57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
g89
g90
ssg71
g1594
sg64
(lp1606
S':'
asbag57
(g78
g59
NtRp1607
(dp1608
g62
(dp1609
sg71
g1594
sg64
(lp1610
g57
(g58
g59
NtRp1611
(dp1612
g62
(dp1613
g70
I4
ssg71
g1607
sg64
(lp1614
S'<socket._fileobject object at 0xa730c6c>'
p1615
asbasbasbag57
(g73
g59
NtRp1616
(dp1617
g62
(dp1618
sg71
g712
sg64
(lp1619
g57
(g78
g59
NtRp1620
(dp1621
g62
(dp1622
g82
g83
ssg71
g1616
sg64
(lp1623
S'wsgi_multiprocess'
p1624
asbag57
(g78
g59
NtRp1625
(dp1626
g62
(dp1627
g89
g90
ssg71
g1616
sg64
(lp1628
S':'
asbag57
(g78
g59
NtRp1629
(dp1630
g62
(dp1631
sg71
g1616
sg64
(lp1632
g57
(g58
g59
NtRp1633
(dp1634
g62
(dp1635
g70
I4
ssg71
g1629
sg64
(lp1636
g100
asbasbasbag57
(g73
g59
NtRp1637
(dp1638
g62
(dp1639
sg71
g712
sg64
(lp1640
g57
(g78
g59
NtRp1641
(dp1642
g62
(dp1643
g82
g83
ssg71
g1637
sg64
(lp1644
S'wsgi_multithread'
p1645
asbag57
(g78
g59
NtRp1646
(dp1647
g62
(dp1648
g89
g90
ssg71
g1637
sg64
(lp1649
S':'
asbag57
(g78
g59
NtRp1650
(dp1651
g62
(dp1652
sg71
g1637
sg64
(lp1653
g57
(g58
g59
NtRp1654
(dp1655
g62
(dp1656
g70
I4
ssg71
g1650
sg64
(lp1657
S'True'
p1658
asbasbasbag57
(g73
g59
NtRp1659
(dp1660
g62
(dp1661
sg71
g712
sg64
(lp1662
g57
(g78
g59
NtRp1663
(dp1664
g62
(dp1665
g82
g83
ssg71
g1659
sg64
(lp1666
S'wsgi_run_once'
p1667
asbag57
(g78
g59
NtRp1668
(dp1669
g62
(dp1670
g89
g90
ssg71
g1659
sg64
(lp1671
S':'
asbag57
(g78
g59
NtRp1672
(dp1673
g62
(dp1674
sg71
g1659
sg64
(lp1675
g57
(g58
g59
NtRp1676
(dp1677
g62
(dp1678
g70
I4
ssg71
g1672
sg64
(lp1679
g100
asbasbasbag57
(g73
g59
NtRp1680
(dp1681
g62
(dp1682
sg71
g712
sg64
(lp1683
g57
(g78
g59
NtRp1684
(dp1685
g62
(dp1686
g82
g83
ssg71
g1680
sg64
(lp1687
S'wsgi_url_scheme'
p1688
asbag57
(g78
g59
NtRp1689
(dp1690
g62
(dp1691
g89
g90
ssg71
g1680
sg64
(lp1692
S':'
asbag57
(g78
g59
NtRp1693
(dp1694
g62
(dp1695
sg71
g1680
sg64
(lp1696
g57
(g58
g59
NtRp1697
(dp1698
g62
(dp1699
g70
I4
ssg71
g1693
sg64
(lp1700
S'http'
p1701
asbasbasbag57
(g73
g59
NtRp1702
(dp1703
g62
(dp1704
sg71
g712
sg64
(lp1705
g57
(g78
g59
NtRp1706
(dp1707
g62
(dp1708
g82
g83
ssg71
g1702
sg64
(lp1709
S'wsgi_version'
p1710
asbag57
(g78
g59
NtRp1711
(dp1712
g62
(dp1713
g89
g90
ssg71
g1702
sg64
(lp1714
S':'
asbag57
(g78
g59
NtRp1715
(dp1716
g62
(dp1717
sg71
g1702
sg64
(lp1718
g57
(g58
g59
NtRp1719
(dp1720
g62
(dp1721
g70
I4
ssg71
g1715
sg64
(lp1722
g57
(g66
g59
NtRp1723
(dp1724
g62
(dp1725
g70
I3
ssg71
Nsg64
(lp1726
g57
(g73
g59
NtRp1727
(dp1728
g62
(dp1729
sg71
g1723
sg64
(lp1730
g57
(g78
g59
NtRp1731
(dp1732
g62
(dp1733
sg71
g1727
sg64
(lp1734
g57
(g58
g59
NtRp1735
(dp1736
g62
(dp1737
g70
I3
ssg71
g1731
sg64
(lp1738
S'1'
asbasbasbag57
(g73
g59
NtRp1739
(dp1740
g62
(dp1741
sg71
g1723
sg64
(lp1742
g57
(g78
g59
NtRp1743
(dp1744
g62
(dp1745
sg71
g1739
sg64
(lp1746
g57
(g58
g59
NtRp1747
(dp1748
g62
(dp1749
g70
I3
ssg71
g1743
sg64
(lp1750
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1751
(dp1752
g62
(dp1753
sg71
g67
sg64
(lp1754
g57
(g78
g59
NtRp1755
(dp1756
g62
(dp1757
g82
g83
ssg71
g1751
sg64
(lp1758
S'extension'
p1759
asbag57
(g78
g59
NtRp1760
(dp1761
g62
(dp1762
g89
g90
ssg71
g1751
sg64
(lp1763
S':'
asbag57
(g78
g59
NtRp1764
(dp1765
g62
(dp1766
sg71
g1751
sg64
(lp1767
g57
(g58
g59
NtRp1768
(dp1769
g62
(dp1770
g70
I5
ssg71
g1764
sg64
(lp1771
S'html'
p1772
asbasbasbag57
(g73
g59
NtRp1773
(dp1774
g62
(dp1775
sg71
g67
sg64
(lp1776
g57
(g78
g59
NtRp1777
(dp1778
g62
(dp1779
g82
g83
ssg71
g1773
sg64
(lp1780
S'folder'
p1781
asbag57
(g78
g59
NtRp1782
(dp1783
g62
(dp1784
g89
g90
ssg71
g1773
sg64
(lp1785
S':'
asbag57
(g78
g59
NtRp1786
(dp1787
g62
(dp1788
sg71
g1773
sg64
(lp1789
g57
(g58
g59
NtRp1790
(dp1791
g62
(dp1792
g70
I5
ssg71
g1786
sg64
(lp1793
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/'
p1794
asbasbasbag57
(g73
g59
NtRp1795
(dp1796
g62
(dp1797
sg71
g67
sg64
(lp1798
g57
(g78
g59
NtRp1799
(dp1800
g62
(dp1801
g82
g83
ssg71
g1795
sg64
(lp1802
S'function'
p1803
asbag57
(g78
g59
NtRp1804
(dp1805
g62
(dp1806
g89
g90
ssg71
g1795
sg64
(lp1807
S':'
asbag57
(g78
g59
NtRp1808
(dp1809
g62
(dp1810
sg71
g1795
sg64
(lp1811
g57
(g58
g59
NtRp1812
(dp1813
g62
(dp1814
g70
I5
ssg71
g1808
sg64
(lp1815
S'list_all_pub_projects'
p1816
asbasbasbag57
(g73
g59
NtRp1817
(dp1818
g62
(dp1819
sg71
g67
sg64
(lp1820
g57
(g78
g59
NtRp1821
(dp1822
g62
(dp1823
g82
g83
ssg71
g1817
sg64
(lp1824
S'get_vars'
p1825
asbag57
(g78
g59
NtRp1826
(dp1827
g62
(dp1828
g89
g90
ssg71
g1817
sg64
(lp1829
S':'
asbag57
(g78
g59
NtRp1830
(dp1831
g62
(dp1832
sg71
g1817
sg64
(lp1833
g57
(g58
g59
NtRp1834
(dp1835
g62
(dp1836
g70
I5
ssg71
g1830
sg64
(lp1837
g57
(g66
g59
NtRp1838
(dp1839
g62
(dp1840
g70
I4
ssg71
Nsg64
(lp1841
sbasbasbasbag57
(g73
g59
NtRp1842
(dp1843
g62
(dp1844
sg71
g67
sg64
(lp1845
g57
(g78
g59
NtRp1846
(dp1847
g62
(dp1848
g82
g83
ssg71
g1842
sg64
(lp1849
S'global_settings'
p1850
asbag57
(g78
g59
NtRp1851
(dp1852
g62
(dp1853
g89
g90
ssg71
g1842
sg64
(lp1854
S':'
asbag57
(g78
g59
NtRp1855
(dp1856
g62
(dp1857
sg71
g1842
sg64
(lp1858
g57
(g58
g59
NtRp1859
(dp1860
g62
(dp1861
g70
I5
ssg71
g1855
sg64
(lp1862
g57
(g66
g59
NtRp1863
(dp1864
g62
(dp1865
g70
I4
ssg71
Nsg64
(lp1866
g57
(g73
g59
NtRp1867
(dp1868
g62
(dp1869
sg71
g1863
sg64
(lp1870
g57
(g78
g59
NtRp1871
(dp1872
g62
(dp1873
g82
g83
ssg71
g1867
sg64
(lp1874
g724
asbag57
(g78
g59
NtRp1875
(dp1876
g62
(dp1877
g89
g90
ssg71
g1867
sg64
(lp1878
S':'
asbag57
(g78
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g1867
sg64
(lp1882
g57
(g58
g59
NtRp1883
(dp1884
g62
(dp1885
g70
I4
ssg71
g1879
sg64
(lp1886
S"set(['/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p1887
asbasbasbag57
(g73
g59
NtRp1888
(dp1889
g62
(dp1890
sg71
g1863
sg64
(lp1891
g57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
g82
g83
ssg71
g1888
sg64
(lp1895
g746
asbag57
(g78
g59
NtRp1896
(dp1897
g62
(dp1898
g89
g90
ssg71
g1888
sg64
(lp1899
S':'
asbag57
(g78
g59
NtRp1900
(dp1901
g62
(dp1902
sg71
g1888
sg64
(lp1903
g57
(g58
g59
NtRp1904
(dp1905
g62
(dp1906
g70
I4
ssg71
g1900
sg64
(lp1907
g759
asbasbasbag57
(g73
g59
NtRp1908
(dp1909
g62
(dp1910
sg71
g1863
sg64
(lp1911
g57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
g82
g83
ssg71
g1908
sg64
(lp1915
g768
asbag57
(g78
g59
NtRp1916
(dp1917
g62
(dp1918
g89
g90
ssg71
g1908
sg64
(lp1919
S':'
asbag57
(g78
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1908
sg64
(lp1923
g57
(g58
g59
NtRp1924
(dp1925
g62
(dp1926
g70
I4
ssg71
g1920
sg64
(lp1927
g57
(g66
g59
NtRp1928
(dp1929
g62
(dp1930
g70
I3
ssg71
Nsg64
(lp1931
sbasbasbasbag57
(g73
g59
NtRp1932
(dp1933
g62
(dp1934
sg71
g1863
sg64
(lp1935
g57
(g78
g59
NtRp1936
(dp1937
g62
(dp1938
g82
g83
ssg71
g1932
sg64
(lp1939
g793
asbag57
(g78
g59
NtRp1940
(dp1941
g62
(dp1942
g89
g90
ssg71
g1932
sg64
(lp1943
S':'
asbag57
(g78
g59
NtRp1944
(dp1945
g62
(dp1946
sg71
g1932
sg64
(lp1947
g57
(g58
g59
NtRp1948
(dp1949
g62
(dp1950
g70
I4
ssg71
g1944
sg64
(lp1951
S"<Values at 0xa513c6c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1952
asbasbasbag57
(g73
g59
NtRp1953
(dp1954
g62
(dp1955
sg71
g1863
sg64
(lp1956
g57
(g78
g59
NtRp1957
(dp1958
g62
(dp1959
g82
g83
ssg71
g1953
sg64
(lp1960
g815
asbag57
(g78
g59
NtRp1961
(dp1962
g62
(dp1963
g89
g90
ssg71
g1953
sg64
(lp1964
S':'
asbag57
(g78
g59
NtRp1965
(dp1966
g62
(dp1967
sg71
g1953
sg64
(lp1968
g57
(g58
g59
NtRp1969
(dp1970
g62
(dp1971
g70
I4
ssg71
g1965
sg64
(lp1972
S'set([])'
p1973
asbasbasbag57
(g73
g59
NtRp1974
(dp1975
g62
(dp1976
sg71
g1863
sg64
(lp1977
g57
(g78
g59
NtRp1978
(dp1979
g62
(dp1980
g82
g83
ssg71
g1974
sg64
(lp1981
g837
asbag57
(g78
g59
NtRp1982
(dp1983
g62
(dp1984
g89
g90
ssg71
g1974
sg64
(lp1985
S':'
asbag57
(g78
g59
NtRp1986
(dp1987
g62
(dp1988
sg71
g1974
sg64
(lp1989
g57
(g58
g59
NtRp1990
(dp1991
g62
(dp1992
g70
I4
ssg71
g1986
sg64
(lp1993
g100
asbasbasbag57
(g73
g59
NtRp1994
(dp1995
g62
(dp1996
sg71
g1863
sg64
(lp1997
g57
(g78
g59
NtRp1998
(dp1999
g62
(dp2000
g82
g83
ssg71
g1994
sg64
(lp2001
g858
asbag57
(g78
g59
NtRp2002
(dp2003
g62
(dp2004
g89
g90
ssg71
g1994
sg64
(lp2005
S':'
asbag57
(g78
g59
NtRp2006
(dp2007
g62
(dp2008
sg71
g1994
sg64
(lp2009
g57
(g58
g59
NtRp2010
(dp2011
g62
(dp2012
g70
I4
ssg71
g2006
sg64
(lp2013
g871
asbasbasbag57
(g73
g59
NtRp2014
(dp2015
g62
(dp2016
sg71
g1863
sg64
(lp2017
g57
(g78
g59
NtRp2018
(dp2019
g62
(dp2020
g82
g83
ssg71
g2014
sg64
(lp2021
g1078
asbag57
(g78
g59
NtRp2022
(dp2023
g62
(dp2024
g89
g90
ssg71
g2014
sg64
(lp2025
S':'
asbag57
(g78
g59
NtRp2026
(dp2027
g62
(dp2028
sg71
g2014
sg64
(lp2029
g57
(g58
g59
NtRp2030
(dp2031
g62
(dp2032
g70
I4
ssg71
g2026
sg64
(lp2033
g100
asbasbasbag57
(g73
g59
NtRp2034
(dp2035
g62
(dp2036
sg71
g1863
sg64
(lp2037
g57
(g78
g59
NtRp2038
(dp2039
g62
(dp2040
g82
g83
ssg71
g2034
sg64
(lp2041
g1099
asbag57
(g78
g59
NtRp2042
(dp2043
g62
(dp2044
g89
g90
ssg71
g2034
sg64
(lp2045
S':'
asbag57
(g78
g59
NtRp2046
(dp2047
g62
(dp2048
sg71
g2034
sg64
(lp2049
g57
(g58
g59
NtRp2050
(dp2051
g62
(dp2052
g70
I4
ssg71
g2046
sg64
(lp2053
g100
asbasbasbag57
(g73
g59
NtRp2054
(dp2055
g62
(dp2056
sg71
g1863
sg64
(lp2057
g57
(g78
g59
NtRp2058
(dp2059
g62
(dp2060
g82
g83
ssg71
g2054
sg64
(lp2061
g1120
asbag57
(g78
g59
NtRp2062
(dp2063
g62
(dp2064
g89
g90
ssg71
g2054
sg64
(lp2065
S':'
asbag57
(g78
g59
NtRp2066
(dp2067
g62
(dp2068
sg71
g2054
sg64
(lp2069
g57
(g58
g59
NtRp2070
(dp2071
g62
(dp2072
g70
I4
ssg71
g2066
sg64
(lp2073
g57
(g66
g59
NtRp2074
(dp2075
g62
(dp2076
g70
I3
ssg71
Nsg64
(lp2077
g57
(g73
g59
NtRp2078
(dp2079
g62
(dp2080
sg71
g2074
sg64
(lp2081
g57
(g78
g59
NtRp2082
(dp2083
g62
(dp2084
sg71
g2078
sg64
(lp2085
g57
(g58
g59
NtRp2086
(dp2087
g62
(dp2088
g70
I3
ssg71
g2082
sg64
(lp2089
g1149
asbasbasbag57
(g73
g59
NtRp2090
(dp2091
g62
(dp2092
sg71
g2074
sg64
(lp2093
g57
(g78
g59
NtRp2094
(dp2095
g62
(dp2096
sg71
g2090
sg64
(lp2097
g57
(g58
g59
NtRp2098
(dp2099
g62
(dp2100
g70
I3
ssg71
g2094
sg64
(lp2101
g1162
asbasbasbag57
(g73
g59
NtRp2102
(dp2103
g62
(dp2104
sg71
g2074
sg64
(lp2105
g57
(g78
g59
NtRp2106
(dp2107
g62
(dp2108
sg71
g2102
sg64
(lp2109
g57
(g58
g59
NtRp2110
(dp2111
g62
(dp2112
g70
I3
ssg71
g2106
sg64
(lp2113
g1175
asbasbasbag57
(g73
g59
NtRp2114
(dp2115
g62
(dp2116
sg71
g2074
sg64
(lp2117
g57
(g78
g59
NtRp2118
(dp2119
g62
(dp2120
sg71
g2114
sg64
(lp2121
g57
(g58
g59
NtRp2122
(dp2123
g62
(dp2124
g70
I3
ssg71
g2118
sg64
(lp2125
g1188
asbasbasbag57
(g73
g59
NtRp2126
(dp2127
g62
(dp2128
sg71
g2074
sg64
(lp2129
g57
(g78
g59
NtRp2130
(dp2131
g62
(dp2132
sg71
g2126
sg64
(lp2133
g57
(g58
g59
NtRp2134
(dp2135
g62
(dp2136
g70
I3
ssg71
g2130
sg64
(lp2137
g1201
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2138
(dp2139
g62
(dp2140
sg71
g1863
sg64
(lp2141
g57
(g78
g59
NtRp2142
(dp2143
g62
(dp2144
g82
g83
ssg71
g2138
sg64
(lp2145
g1471
asbag57
(g78
g59
NtRp2146
(dp2147
g62
(dp2148
g89
g90
ssg71
g2138
sg64
(lp2149
S':'
asbag57
(g78
g59
NtRp2150
(dp2151
g62
(dp2152
sg71
g2138
sg64
(lp2153
g57
(g58
g59
NtRp2154
(dp2155
g62
(dp2156
g70
I4
ssg71
g2150
sg64
(lp2157
g57
(g66
g59
NtRp2158
(dp2159
g62
(dp2160
g70
I3
ssg71
Nsg64
(lp2161
g57
(g73
g59
NtRp2162
(dp2163
g62
(dp2164
sg71
g2158
sg64
(lp2165
g57
(g78
g59
NtRp2166
(dp2167
g62
(dp2168
sg71
g2162
sg64
(lp2169
g57
(g58
g59
NtRp2170
(dp2171
g62
(dp2172
g70
I3
ssg71
g2166
sg64
(lp2173
S'2'
asbasbasbag57
(g73
g59
NtRp2174
(dp2175
g62
(dp2176
sg71
g2158
sg64
(lp2177
g57
(g78
g59
NtRp2178
(dp2179
g62
(dp2180
sg71
g2174
sg64
(lp2181
g57
(g58
g59
NtRp2182
(dp2183
g62
(dp2184
g70
I3
ssg71
g2178
sg64
(lp2185
S'3'
asbasbasbag57
(g73
g59
NtRp2186
(dp2187
g62
(dp2188
sg71
g2158
sg64
(lp2189
g57
(g78
g59
NtRp2190
(dp2191
g62
(dp2192
sg71
g2186
sg64
(lp2193
g57
(g58
g59
NtRp2194
(dp2195
g62
(dp2196
g70
I3
ssg71
g2190
sg64
(lp2197
S'2'
asbasbasbag57
(g73
g59
NtRp2198
(dp2199
g62
(dp2200
sg71
g2158
sg64
(lp2201
g57
(g78
g59
NtRp2202
(dp2203
g62
(dp2204
sg71
g2198
sg64
(lp2205
g57
(g58
g59
NtRp2206
(dp2207
g62
(dp2208
g70
I3
ssg71
g2202
sg64
(lp2209
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2210
asbasbasbag57
(g73
g59
NtRp2211
(dp2212
g62
(dp2213
sg71
g2158
sg64
(lp2214
g57
(g78
g59
NtRp2215
(dp2216
g62
(dp2217
sg71
g2211
sg64
(lp2218
g57
(g58
g59
NtRp2219
(dp2220
g62
(dp2221
g70
I3
ssg71
g2215
sg64
(lp2222
g1549
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2223
(dp2224
g62
(dp2225
sg71
g67
sg64
(lp2226
g57
(g78
g59
NtRp2227
(dp2228
g62
(dp2229
g82
g83
ssg71
g2223
sg64
(lp2230
S'is_https'
p2231
asbag57
(g78
g59
NtRp2232
(dp2233
g62
(dp2234
g89
g90
ssg71
g2223
sg64
(lp2235
S':'
asbag57
(g78
g59
NtRp2236
(dp2237
g62
(dp2238
sg71
g2223
sg64
(lp2239
g57
(g58
g59
NtRp2240
(dp2241
g62
(dp2242
g70
I5
ssg71
g2236
sg64
(lp2243
g100
asbasbasbag57
(g73
g59
NtRp2244
(dp2245
g62
(dp2246
sg71
g67
sg64
(lp2247
g57
(g78
g59
NtRp2248
(dp2249
g62
(dp2250
g82
g83
ssg71
g2244
sg64
(lp2251
S'is_local'
p2252
asbag57
(g78
g59
NtRp2253
(dp2254
g62
(dp2255
g89
g90
ssg71
g2244
sg64
(lp2256
S':'
asbag57
(g78
g59
NtRp2257
(dp2258
g62
(dp2259
sg71
g2244
sg64
(lp2260
g57
(g58
g59
NtRp2261
(dp2262
g62
(dp2263
g70
I5
ssg71
g2257
sg64
(lp2264
g1658
asbasbasbag57
(g73
g59
NtRp2265
(dp2266
g62
(dp2267
sg71
g67
sg64
(lp2268
g57
(g78
g59
NtRp2269
(dp2270
g62
(dp2271
g82
g83
ssg71
g2265
sg64
(lp2272
S'is_restful'
p2273
asbag57
(g78
g59
NtRp2274
(dp2275
g62
(dp2276
g89
g90
ssg71
g2265
sg64
(lp2277
S':'
asbag57
(g78
g59
NtRp2278
(dp2279
g62
(dp2280
sg71
g2265
sg64
(lp2281
g57
(g58
g59
NtRp2282
(dp2283
g62
(dp2284
g70
I5
ssg71
g2278
sg64
(lp2285
g100
asbasbasbag57
(g73
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g67
sg64
(lp2289
g57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
g82
g83
ssg71
g2286
sg64
(lp2293
S'now'
p2294
asbag57
(g78
g59
NtRp2295
(dp2296
g62
(dp2297
g89
g90
ssg71
g2286
sg64
(lp2298
S':'
asbag57
(g78
g59
NtRp2299
(dp2300
g62
(dp2301
sg71
g2286
sg64
(lp2302
g57
(g58
g59
NtRp2303
(dp2304
g62
(dp2305
g70
I5
ssg71
g2299
sg64
(lp2306
S'datetime.datetime(2013, 3, 8, 21, 37, 3, 480598)'
p2307
asbasbasbag57
(g73
g59
NtRp2308
(dp2309
g62
(dp2310
sg71
g67
sg64
(lp2311
g57
(g78
g59
NtRp2312
(dp2313
g62
(dp2314
g82
g83
ssg71
g2308
sg64
(lp2315
S'post_vars'
p2316
asbag57
(g78
g59
NtRp2317
(dp2318
g62
(dp2319
g89
g90
ssg71
g2308
sg64
(lp2320
S':'
asbag57
(g78
g59
NtRp2321
(dp2322
g62
(dp2323
sg71
g2308
sg64
(lp2324
g57
(g58
g59
NtRp2325
(dp2326
g62
(dp2327
g70
I5
ssg71
g2321
sg64
(lp2328
g57
(g66
g59
NtRp2329
(dp2330
g62
(dp2331
g70
I4
ssg71
Nsg64
(lp2332
sbasbasbasbag57
(g73
g59
NtRp2333
(dp2334
g62
(dp2335
sg71
g67
sg64
(lp2336
g57
(g78
g59
NtRp2337
(dp2338
g62
(dp2339
g82
g83
ssg71
g2333
sg64
(lp2340
S'raw_args'
p2341
asbag57
(g78
g59
NtRp2342
(dp2343
g62
(dp2344
g89
g90
ssg71
g2333
sg64
(lp2345
S':'
asbag57
(g78
g59
NtRp2346
(dp2347
g62
(dp2348
sg71
g2333
sg64
(lp2349
g57
(g58
g59
NtRp2350
(dp2351
g62
(dp2352
g70
I5
ssg71
g2346
sg64
(lp2353
S'project/view/project/5'
p2354
asbasbasbag57
(g73
g59
NtRp2355
(dp2356
g62
(dp2357
sg71
g67
sg64
(lp2358
g57
(g78
g59
NtRp2359
(dp2360
g62
(dp2361
g82
g83
ssg71
g2355
sg64
(lp2362
S'raw_extension'
p2363
asbag57
(g78
g59
NtRp2364
(dp2365
g62
(dp2366
g89
g90
ssg71
g2355
sg64
(lp2367
S':'
asbag57
(g78
g59
NtRp2368
(dp2369
g62
(dp2370
sg71
g2355
sg64
(lp2371
g57
(g58
g59
NtRp2372
(dp2373
g62
(dp2374
g70
I5
ssg71
g2368
sg64
(lp2375
S'None'
p2376
asbasbasbag57
(g73
g59
NtRp2377
(dp2378
g62
(dp2379
sg71
g67
sg64
(lp2380
g57
(g78
g59
NtRp2381
(dp2382
g62
(dp2383
g82
g83
ssg71
g2377
sg64
(lp2384
S'url'
p2385
asbag57
(g78
g59
NtRp2386
(dp2387
g62
(dp2388
g89
g90
ssg71
g2377
sg64
(lp2389
S':'
asbag57
(g78
g59
NtRp2390
(dp2391
g62
(dp2392
sg71
g2377
sg64
(lp2393
g57
(g58
g59
NtRp2394
(dp2395
g62
(dp2396
g70
I5
ssg71
g2390
sg64
(lp2397
g1223
asbasbasbag57
(g73
g59
NtRp2398
(dp2399
g62
(dp2400
sg71
g67
sg64
(lp2401
g57
(g78
g59
NtRp2402
(dp2403
g62
(dp2404
g82
g83
ssg71
g2398
sg64
(lp2405
S'utcnow'
p2406
asbag57
(g78
g59
NtRp2407
(dp2408
g62
(dp2409
g89
g90
ssg71
g2398
sg64
(lp2410
S':'
asbag57
(g78
g59
NtRp2411
(dp2412
g62
(dp2413
sg71
g2398
sg64
(lp2414
g57
(g58
g59
NtRp2415
(dp2416
g62
(dp2417
g70
I5
ssg71
g2411
sg64
(lp2418
S'datetime.datetime(2013, 3, 8, 16, 7, 3, 480647)'
p2419
asbasbasbag57
(g73
g59
NtRp2420
(dp2421
g62
(dp2422
sg71
g67
sg64
(lp2423
g57
(g78
g59
NtRp2424
(dp2425
g62
(dp2426
g82
g83
ssg71
g2420
sg64
(lp2427
S'uuid'
p2428
asbag57
(g78
g59
NtRp2429
(dp2430
g62
(dp2431
g89
g90
ssg71
g2420
sg64
(lp2432
S':'
asbag57
(g78
g59
NtRp2433
(dp2434
g62
(dp2435
sg71
g2420
sg64
(lp2436
g57
(g58
g59
NtRp2437
(dp2438
g62
(dp2439
g70
I5
ssg71
g2433
sg64
(lp2440
S'DEV_bootstrap_ch/127.0.0.1.2013-03-08.21-37-03.3017fea2-26c6-4e70-af61-e6edfd04f398'
p2441
asbasbasbag57
(g73
g59
NtRp2442
(dp2443
g62
(dp2444
sg71
g67
sg64
(lp2445
g57
(g78
g59
NtRp2446
(dp2447
g62
(dp2448
g82
g83
ssg71
g2442
sg64
(lp2449
S'vars'
p2450
asbag57
(g78
g59
NtRp2451
(dp2452
g62
(dp2453
g89
g90
ssg71
g2442
sg64
(lp2454
S':'
asbag57
(g78
g59
NtRp2455
(dp2456
g62
(dp2457
sg71
g2442
sg64
(lp2458
g57
(g58
g59
NtRp2459
(dp2460
g62
(dp2461
g70
I5
ssg71
g2455
sg64
(lp2462
g57
(g66
g59
NtRp2463
(dp2464
g62
(dp2465
g70
I4
ssg71
Nsg64
(lp2466
sbasbasbasbag57
(g73
g59
NtRp2467
(dp2468
g62
(dp2469
sg71
g67
sg64
(lp2470
g57
(g78
g59
NtRp2471
(dp2472
g62
(dp2473
g82
g83
ssg71
g2467
sg64
(lp2474
S'wsgi'
p2475
asbag57
(g78
g59
NtRp2476
(dp2477
g62
(dp2478
g89
g90
ssg71
g2467
sg64
(lp2479
S':'
asbag57
(g78
g59
NtRp2480
(dp2481
g62
(dp2482
sg71
g2467
sg64
(lp2483
g57
(g58
g59
NtRp2484
(dp2485
g62
(dp2486
g70
I5
ssg71
g2480
sg64
(lp2487
g57
(g66
g59
NtRp2488
(dp2489
g62
(dp2490
g70
I4
ssg71
Nsg64
(lp2491
g57
(g73
g59
NtRp2492
(dp2493
g62
(dp2494
sg71
g2488
sg64
(lp2495
g57
(g78
g59
NtRp2496
(dp2497
g62
(dp2498
g82
g83
ssg71
g2492
sg64
(lp2499
S'environ'
p2500
asbag57
(g78
g59
NtRp2501
(dp2502
g62
(dp2503
g89
g90
ssg71
g2492
sg64
(lp2504
S':'
asbag57
(g78
g59
NtRp2505
(dp2506
g62
(dp2507
sg71
g2492
sg64
(lp2508
g57
(g58
g59
NtRp2509
(dp2510
g62
(dp2511
g70
I4
ssg71
g2505
sg64
(lp2512
g57
(g66
g59
NtRp2513
(dp2514
g62
(dp2515
g70
I3
ssg71
Nsg64
(lp2516
g57
(g73
g59
NtRp2517
(dp2518
g62
(dp2519
sg71
g2513
sg64
(lp2520
g57
(g78
g59
NtRp2521
(dp2522
g62
(dp2523
g82
g83
ssg71
g2517
sg64
(lp2524
S'HTTP_ACCEPT'
p2525
asbag57
(g78
g59
NtRp2526
(dp2527
g62
(dp2528
g89
g90
ssg71
g2517
sg64
(lp2529
S':'
asbag57
(g78
g59
NtRp2530
(dp2531
g62
(dp2532
sg71
g2517
sg64
(lp2533
g57
(g58
g59
NtRp2534
(dp2535
g62
(dp2536
g70
I3
ssg71
g2530
sg64
(lp2537
g893
asbasbasbag57
(g73
g59
NtRp2538
(dp2539
g62
(dp2540
sg71
g2513
sg64
(lp2541
g57
(g78
g59
NtRp2542
(dp2543
g62
(dp2544
g82
g83
ssg71
g2538
sg64
(lp2545
S'HTTP_ACCEPT_CHARSET'
p2546
asbag57
(g78
g59
NtRp2547
(dp2548
g62
(dp2549
g89
g90
ssg71
g2538
sg64
(lp2550
S':'
asbag57
(g78
g59
NtRp2551
(dp2552
g62
(dp2553
sg71
g2538
sg64
(lp2554
g57
(g58
g59
NtRp2555
(dp2556
g62
(dp2557
g70
I3
ssg71
g2551
sg64
(lp2558
g915
asbasbasbag57
(g73
g59
NtRp2559
(dp2560
g62
(dp2561
sg71
g2513
sg64
(lp2562
g57
(g78
g59
NtRp2563
(dp2564
g62
(dp2565
g82
g83
ssg71
g2559
sg64
(lp2566
S'HTTP_ACCEPT_ENCODING'
p2567
asbag57
(g78
g59
NtRp2568
(dp2569
g62
(dp2570
g89
g90
ssg71
g2559
sg64
(lp2571
S':'
asbag57
(g78
g59
NtRp2572
(dp2573
g62
(dp2574
sg71
g2559
sg64
(lp2575
g57
(g58
g59
NtRp2576
(dp2577
g62
(dp2578
g70
I3
ssg71
g2572
sg64
(lp2579
g937
asbasbasbag57
(g73
g59
NtRp2580
(dp2581
g62
(dp2582
sg71
g2513
sg64
(lp2583
g57
(g78
g59
NtRp2584
(dp2585
g62
(dp2586
g82
g83
ssg71
g2580
sg64
(lp2587
S'HTTP_ACCEPT_LANGUAGE'
p2588
asbag57
(g78
g59
NtRp2589
(dp2590
g62
(dp2591
g89
g90
ssg71
g2580
sg64
(lp2592
S':'
asbag57
(g78
g59
NtRp2593
(dp2594
g62
(dp2595
sg71
g2580
sg64
(lp2596
g57
(g58
g59
NtRp2597
(dp2598
g62
(dp2599
g70
I3
ssg71
g2593
sg64
(lp2600
g959
asbasbasbag57
(g73
g59
NtRp2601
(dp2602
g62
(dp2603
sg71
g2513
sg64
(lp2604
g57
(g78
g59
NtRp2605
(dp2606
g62
(dp2607
g82
g83
ssg71
g2601
sg64
(lp2608
S'HTTP_CONNECTION'
p2609
asbag57
(g78
g59
NtRp2610
(dp2611
g62
(dp2612
g89
g90
ssg71
g2601
sg64
(lp2613
S':'
asbag57
(g78
g59
NtRp2614
(dp2615
g62
(dp2616
sg71
g2601
sg64
(lp2617
g57
(g58
g59
NtRp2618
(dp2619
g62
(dp2620
g70
I3
ssg71
g2614
sg64
(lp2621
g981
asbasbasbag57
(g73
g59
NtRp2622
(dp2623
g62
(dp2624
sg71
g2513
sg64
(lp2625
g57
(g78
g59
NtRp2626
(dp2627
g62
(dp2628
g82
g83
ssg71
g2622
sg64
(lp2629
S'HTTP_COOKIE'
p2630
asbag57
(g78
g59
NtRp2631
(dp2632
g62
(dp2633
g89
g90
ssg71
g2622
sg64
(lp2634
S':'
asbag57
(g78
g59
NtRp2635
(dp2636
g62
(dp2637
sg71
g2622
sg64
(lp2638
g57
(g58
g59
NtRp2639
(dp2640
g62
(dp2641
g70
I3
ssg71
g2635
sg64
(lp2642
g1003
asbasbasbag57
(g73
g59
NtRp2643
(dp2644
g62
(dp2645
sg71
g2513
sg64
(lp2646
g57
(g78
g59
NtRp2647
(dp2648
g62
(dp2649
g82
g83
ssg71
g2643
sg64
(lp2650
S'HTTP_HOST'
p2651
asbag57
(g78
g59
NtRp2652
(dp2653
g62
(dp2654
g89
g90
ssg71
g2643
sg64
(lp2655
S':'
asbag57
(g78
g59
NtRp2656
(dp2657
g62
(dp2658
sg71
g2643
sg64
(lp2659
g57
(g58
g59
NtRp2660
(dp2661
g62
(dp2662
g70
I3
ssg71
g2656
sg64
(lp2663
g1025
asbasbasbag57
(g73
g59
NtRp2664
(dp2665
g62
(dp2666
sg71
g2513
sg64
(lp2667
g57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
g82
g83
ssg71
g2664
sg64
(lp2671
S'HTTP_REFERER'
p2672
asbag57
(g78
g59
NtRp2673
(dp2674
g62
(dp2675
g89
g90
ssg71
g2664
sg64
(lp2676
S':'
asbag57
(g78
g59
NtRp2677
(dp2678
g62
(dp2679
sg71
g2664
sg64
(lp2680
g57
(g58
g59
NtRp2681
(dp2682
g62
(dp2683
g70
I3
ssg71
g2677
sg64
(lp2684
g1047
asbasbasbag57
(g73
g59
NtRp2685
(dp2686
g62
(dp2687
sg71
g2513
sg64
(lp2688
g57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
g82
g83
ssg71
g2685
sg64
(lp2692
S'HTTP_USER_AGENT'
p2693
asbag57
(g78
g59
NtRp2694
(dp2695
g62
(dp2696
g89
g90
ssg71
g2685
sg64
(lp2697
S':'
asbag57
(g78
g59
NtRp2698
(dp2699
g62
(dp2700
sg71
g2685
sg64
(lp2701
g57
(g58
g59
NtRp2702
(dp2703
g62
(dp2704
g70
I3
ssg71
g2698
sg64
(lp2705
g1069
asbasbasbag57
(g73
g59
NtRp2706
(dp2707
g62
(dp2708
sg71
g2513
sg64
(lp2709
g57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
g82
g83
ssg71
g2706
sg64
(lp2713
S'PATH_INFO'
p2714
asbag57
(g78
g59
NtRp2715
(dp2716
g62
(dp2717
g89
g90
ssg71
g2706
sg64
(lp2718
S':'
asbag57
(g78
g59
NtRp2719
(dp2720
g62
(dp2721
sg71
g2706
sg64
(lp2722
g57
(g58
g59
NtRp2723
(dp2724
g62
(dp2725
g70
I3
ssg71
g2719
sg64
(lp2726
g1223
asbasbasbag57
(g73
g59
NtRp2727
(dp2728
g62
(dp2729
sg71
g2513
sg64
(lp2730
g57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
g82
g83
ssg71
g2727
sg64
(lp2734
S'QUERY_STRING'
p2735
asbag57
(g78
g59
NtRp2736
(dp2737
g62
(dp2738
g89
g90
ssg71
g2727
sg64
(lp2739
S':'
asbag57
(g78
g59
NtRp2740
(dp2741
g62
(dp2742
sg71
g2727
sg64
(lp2743
g57
(g58
g59
NtRp2744
(dp2745
g62
(dp2746
g70
I3
ssg71
g2740
sg64
(lp2747
g1245
asbasbasbag57
(g73
g59
NtRp2748
(dp2749
g62
(dp2750
sg71
g2513
sg64
(lp2751
g57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
g82
g83
ssg71
g2748
sg64
(lp2755
S'REMOTE_ADDR'
p2756
asbag57
(g78
g59
NtRp2757
(dp2758
g62
(dp2759
g89
g90
ssg71
g2748
sg64
(lp2760
S':'
asbag57
(g78
g59
NtRp2761
(dp2762
g62
(dp2763
sg71
g2748
sg64
(lp2764
g57
(g58
g59
NtRp2765
(dp2766
g62
(dp2767
g70
I3
ssg71
g2761
sg64
(lp2768
g263
asbasbasbag57
(g73
g59
NtRp2769
(dp2770
g62
(dp2771
sg71
g2513
sg64
(lp2772
g57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
g82
g83
ssg71
g2769
sg64
(lp2776
S'REMOTE_PORT'
p2777
asbag57
(g78
g59
NtRp2778
(dp2779
g62
(dp2780
g89
g90
ssg71
g2769
sg64
(lp2781
S':'
asbag57
(g78
g59
NtRp2782
(dp2783
g62
(dp2784
sg71
g2769
sg64
(lp2785
g57
(g58
g59
NtRp2786
(dp2787
g62
(dp2788
g70
I3
ssg71
g2782
sg64
(lp2789
g1288
asbasbasbag57
(g73
g59
NtRp2790
(dp2791
g62
(dp2792
sg71
g2513
sg64
(lp2793
g57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
g82
g83
ssg71
g2790
sg64
(lp2797
S'REQUEST_METHOD'
p2798
asbag57
(g78
g59
NtRp2799
(dp2800
g62
(dp2801
g89
g90
ssg71
g2790
sg64
(lp2802
S':'
asbag57
(g78
g59
NtRp2803
(dp2804
g62
(dp2805
sg71
g2790
sg64
(lp2806
g57
(g58
g59
NtRp2807
(dp2808
g62
(dp2809
g70
I3
ssg71
g2803
sg64
(lp2810
g1310
asbasbasbag57
(g73
g59
NtRp2811
(dp2812
g62
(dp2813
sg71
g2513
sg64
(lp2814
g57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
g82
g83
ssg71
g2811
sg64
(lp2818
S'REQUEST_URI'
p2819
asbag57
(g78
g59
NtRp2820
(dp2821
g62
(dp2822
g89
g90
ssg71
g2811
sg64
(lp2823
S':'
asbag57
(g78
g59
NtRp2824
(dp2825
g62
(dp2826
sg71
g2811
sg64
(lp2827
g57
(g58
g59
NtRp2828
(dp2829
g62
(dp2830
g70
I3
ssg71
g2824
sg64
(lp2831
g1332
asbasbasbag57
(g73
g59
NtRp2832
(dp2833
g62
(dp2834
sg71
g2513
sg64
(lp2835
g57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
g82
g83
ssg71
g2832
sg64
(lp2839
S'SCRIPT_NAME'
p2840
asbag57
(g78
g59
NtRp2841
(dp2842
g62
(dp2843
g89
g90
ssg71
g2832
sg64
(lp2844
S':'
asbag57
(g78
g59
NtRp2845
(dp2846
g62
(dp2847
sg71
g2832
sg64
(lp2848
g57
(g58
g59
NtRp2849
(dp2850
g62
(dp2851
g70
I3
ssg71
g2845
sg64
(lp2852
S''
asbasbasbag57
(g73
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2513
sg64
(lp2856
g57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g82
g83
ssg71
g2853
sg64
(lp2860
S'SERVER_NAME'
p2861
asbag57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g89
g90
ssg71
g2853
sg64
(lp2865
S':'
asbag57
(g78
g59
NtRp2866
(dp2867
g62
(dp2868
sg71
g2853
sg64
(lp2869
g57
(g58
g59
NtRp2870
(dp2871
g62
(dp2872
g70
I3
ssg71
g2866
sg64
(lp2873
g1375
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2513
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'SERVER_PORT'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
g1397
asbasbasbag57
(g73
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2513
sg64
(lp2898
g57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g82
g83
ssg71
g2895
sg64
(lp2902
S'SERVER_PROTOCOL'
p2903
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g89
g90
ssg71
g2895
sg64
(lp2907
S':'
asbag57
(g78
g59
NtRp2908
(dp2909
g62
(dp2910
sg71
g2895
sg64
(lp2911
g57
(g58
g59
NtRp2912
(dp2913
g62
(dp2914
g70
I3
ssg71
g2908
sg64
(lp2915
g1419
asbasbasbag57
(g73
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2513
sg64
(lp2919
g57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g82
g83
ssg71
g2916
sg64
(lp2923
S'SERVER_SOFTWARE'
p2924
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g89
g90
ssg71
g2916
sg64
(lp2928
S':'
asbag57
(g78
g59
NtRp2929
(dp2930
g62
(dp2931
sg71
g2916
sg64
(lp2932
g57
(g58
g59
NtRp2933
(dp2934
g62
(dp2935
g70
I3
ssg71
g2929
sg64
(lp2936
g1441
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2513
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'wsgi.errors'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
S"<open file '<stderr>', mode 'w' at 0xb72e90d0>"
p2958
asbasbasbag57
(g73
g59
NtRp2959
(dp2960
g62
(dp2961
sg71
g2513
sg64
(lp2962
g57
(g78
g59
NtRp2963
(dp2964
g62
(dp2965
g82
g83
ssg71
g2959
sg64
(lp2966
S'wsgi.file_wrapper'
p2967
asbag57
(g78
g59
NtRp2968
(dp2969
g62
(dp2970
g89
g90
ssg71
g2959
sg64
(lp2971
S':'
asbag57
(g78
g59
NtRp2972
(dp2973
g62
(dp2974
sg71
g2959
sg64
(lp2975
g57
(g58
g59
NtRp2976
(dp2977
g62
(dp2978
g70
I3
ssg71
g2972
sg64
(lp2979
S'<class wsgiref.util.FileWrapper at 0xa49cb9c>'
p2980
asbasbasbag57
(g73
g59
NtRp2981
(dp2982
g62
(dp2983
sg71
g2513
sg64
(lp2984
g57
(g78
g59
NtRp2985
(dp2986
g62
(dp2987
g82
g83
ssg71
g2981
sg64
(lp2988
S'wsgi.input'
p2989
asbag57
(g78
g59
NtRp2990
(dp2991
g62
(dp2992
g89
g90
ssg71
g2981
sg64
(lp2993
S':'
asbag57
(g78
g59
NtRp2994
(dp2995
g62
(dp2996
sg71
g2981
sg64
(lp2997
g57
(g58
g59
NtRp2998
(dp2999
g62
(dp3000
g70
I3
ssg71
g2994
sg64
(lp3001
S'<cStringIO.StringO object at 0xa81c140>'
p3002
asbasbasbag57
(g73
g59
NtRp3003
(dp3004
g62
(dp3005
sg71
g2513
sg64
(lp3006
g57
(g78
g59
NtRp3007
(dp3008
g62
(dp3009
g82
g83
ssg71
g3003
sg64
(lp3010
S'wsgi.multiprocess'
p3011
asbag57
(g78
g59
NtRp3012
(dp3013
g62
(dp3014
g89
g90
ssg71
g3003
sg64
(lp3015
S':'
asbag57
(g78
g59
NtRp3016
(dp3017
g62
(dp3018
sg71
g3003
sg64
(lp3019
g57
(g58
g59
NtRp3020
(dp3021
g62
(dp3022
g70
I3
ssg71
g3016
sg64
(lp3023
g100
asbasbasbag57
(g73
g59
NtRp3024
(dp3025
g62
(dp3026
sg71
g2513
sg64
(lp3027
g57
(g78
g59
NtRp3028
(dp3029
g62
(dp3030
g82
g83
ssg71
g3024
sg64
(lp3031
S'wsgi.multithread'
p3032
asbag57
(g78
g59
NtRp3033
(dp3034
g62
(dp3035
g89
g90
ssg71
g3024
sg64
(lp3036
S':'
asbag57
(g78
g59
NtRp3037
(dp3038
g62
(dp3039
sg71
g3024
sg64
(lp3040
g57
(g58
g59
NtRp3041
(dp3042
g62
(dp3043
g70
I3
ssg71
g3037
sg64
(lp3044
g1658
asbasbasbag57
(g73
g59
NtRp3045
(dp3046
g62
(dp3047
sg71
g2513
sg64
(lp3048
g57
(g78
g59
NtRp3049
(dp3050
g62
(dp3051
g82
g83
ssg71
g3045
sg64
(lp3052
S'wsgi.run_once'
p3053
asbag57
(g78
g59
NtRp3054
(dp3055
g62
(dp3056
g89
g90
ssg71
g3045
sg64
(lp3057
S':'
asbag57
(g78
g59
NtRp3058
(dp3059
g62
(dp3060
sg71
g3045
sg64
(lp3061
g57
(g58
g59
NtRp3062
(dp3063
g62
(dp3064
g70
I3
ssg71
g3058
sg64
(lp3065
g100
asbasbasbag57
(g73
g59
NtRp3066
(dp3067
g62
(dp3068
sg71
g2513
sg64
(lp3069
g57
(g78
g59
NtRp3070
(dp3071
g62
(dp3072
g82
g83
ssg71
g3066
sg64
(lp3073
S'wsgi.url_scheme'
p3074
asbag57
(g78
g59
NtRp3075
(dp3076
g62
(dp3077
g89
g90
ssg71
g3066
sg64
(lp3078
S':'
asbag57
(g78
g59
NtRp3079
(dp3080
g62
(dp3081
sg71
g3066
sg64
(lp3082
g57
(g58
g59
NtRp3083
(dp3084
g62
(dp3085
g70
I3
ssg71
g3079
sg64
(lp3086
g1701
asbasbasbag57
(g73
g59
NtRp3087
(dp3088
g62
(dp3089
sg71
g2513
sg64
(lp3090
g57
(g78
g59
NtRp3091
(dp3092
g62
(dp3093
g82
g83
ssg71
g3087
sg64
(lp3094
S'wsgi.version'
p3095
asbag57
(g78
g59
NtRp3096
(dp3097
g62
(dp3098
g89
g90
ssg71
g3087
sg64
(lp3099
S':'
asbag57
(g78
g59
NtRp3100
(dp3101
g62
(dp3102
sg71
g3087
sg64
(lp3103
g57
(g58
g59
NtRp3104
(dp3105
g62
(dp3106
g70
I3
ssg71
g3100
sg64
(lp3107
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3108
(lp3109
(dp3110
S'file'
p3111
S'/home/anil/Downloads/web2py/gluon/restricted.py'
p3112
sS'dump'
p3113
(dp3114
S'environment'
p3115
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3116
sS'ccode'
p3117
S'<code object <module> at 0xaf7a2ad0, file "/home...EV_bootstrap_ch/controllers/default.py", line 16>'
p3118
ssS'lnum'
p3119
I212
sS'lines'
p3120
(dp3121
I207
S'    try:'
p3122
sI208
S'        if isinstance(code, types.CodeType):'
p3123
sI209
S'            ccode = code'
p3124
sI210
S'        else:'
p3125
sI211
S'            ccode = compile2(code, layer)'
p3126
sI212
S'        exec ccode in environment'
p3127
sI213
S'    except HTTP:'
p3128
sI214
S'        raise'
p3129
sI215
S'    except RestrictedError:'
p3130
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3131
ssS'call'
p3132
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...se._vars=response._caller(list_all_pub_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3133
sS'func'
p3134
S'restricted'
p3135
sa(dp3136
g3111
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3137
sg3113
(dp3138
sg3119
I1154
sg3120
(dp3139
I1152
S''
sI1143
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3140
sI1144
S'   """ per sample . takes id of the sample as the input """'
p3141
sI1145
S'   sid = request.args(0)'
p3142
sI1146
S'   sample = db(db.sample.id == sid).select().first()'
p3143
sI1147
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3144
sI1148
S'   form = SQLFORM(db.sample_files)'
p3145
sI1149
S'   form.vars.sample = sid'
p3146
sI1150
S'   return locals()'
p3147
sI1151
S''
ssg3132
S'()'
p3148
sg3134
S'<module>'
p3149
sa(dp3150
g3111
S'/home/anil/Downloads/web2py/gluon/globals.py'
p3151
sg3113
(dp3152
S'self'
p3153
S'undefined'
p3154
sS'f'
S'<function list_all_pub_projects>'
p3155
ssg3119
I193
sg3120
(dp3156
I192
S'        self._vars = None'
p3157
sI193
S'        self._caller = lambda f: f()'
p3158
sI194
S'        self._view_environment = None'
p3159
sI195
S'        self._custom_commit = None'
p3160
sI196
S'        self._custom_rollback = None'
p3161
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3162
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3163
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3164
sI191
S"        self.delimiters = ('{{', '}}')"
p3165
ssg3132
S'(f=<function list_all_pub_projects>)'
p3166
sg3134
S'<lambda>'
p3167
sa(dp3168
g3111
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3169
sg3113
(dp3170
S'global request'
p3171
S"<Storage {'function': 'list_all_pub_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3172
sS'global router'
p3173
S'<function router>'
p3174
sS'request.args'
p3175
S"['project', 'view', 'project', '5']"
p3176
ssg3119
I286
sg3120
(dp3177
I288
S''
sI289
S'    return locals()'
p3178
sI290
S''
sI281
S'    q1 = (db.project.project_status ==  1)'
p3179
sI282
S'    q2 = (db.sample.publication_status == True)'
p3180
sI283
S"    ck = {'project':q1,'sample':q2}"
p3181
sI284
S'    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]'
p3182
sI285
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3183
sI286
S'    \trouter(request.args)'
p3184
sI287
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','raw_data_storage_information'])"
p3185
ssg3132
S'()'
p3186
sg3134
S'list_all_pub_projects'
p3187
sasS'pyver'
p3188
S'Python 2.7.3: /usr/bin/python'
p3189
sS'session'
p3190
g57
(g58
g59
NtRp3191
(dp3192
g62
(dp3193
sg64
(lp3194
g57
(g66
g59
NtRp3195
(dp3196
g62
(dp3197
g70
I5
ssg71
Nsg64
(lp3198
g57
(g73
g59
NtRp3199
(dp3200
g62
(dp3201
sg71
g3195
sg64
(lp3202
g57
(g78
g59
NtRp3203
(dp3204
g62
(dp3205
g82
g83
ssg71
g3199
sg64
(lp3206
S'auth'
p3207
asbag57
(g78
g59
NtRp3208
(dp3209
g62
(dp3210
g89
g90
ssg71
g3199
sg64
(lp3211
S':'
asbag57
(g78
g59
NtRp3212
(dp3213
g62
(dp3214
sg71
g3199
sg64
(lp3215
g57
(g58
g59
NtRp3216
(dp3217
g62
(dp3218
g70
I5
ssg71
g3212
sg64
(lp3219
g57
(g66
g59
NtRp3220
(dp3221
g62
(dp3222
g70
I4
ssg71
Nsg64
(lp3223
g57
(g73
g59
NtRp3224
(dp3225
g62
(dp3226
sg71
g3220
sg64
(lp3227
g57
(g78
g59
NtRp3228
(dp3229
g62
(dp3230
g82
g83
ssg71
g3224
sg64
(lp3231
S'expiration'
p3232
asbag57
(g78
g59
NtRp3233
(dp3234
g62
(dp3235
g89
g90
ssg71
g3224
sg64
(lp3236
S':'
asbag57
(g78
g59
NtRp3237
(dp3238
g62
(dp3239
sg71
g3224
sg64
(lp3240
g57
(g58
g59
NtRp3241
(dp3242
g62
(dp3243
g70
I4
ssg71
g3237
sg64
(lp3244
S'3600'
p3245
asbasbasbag57
(g73
g59
NtRp3246
(dp3247
g62
(dp3248
sg71
g3220
sg64
(lp3249
g57
(g78
g59
NtRp3250
(dp3251
g62
(dp3252
g82
g83
ssg71
g3246
sg64
(lp3253
S'hmac_key'
p3254
asbag57
(g78
g59
NtRp3255
(dp3256
g62
(dp3257
g89
g90
ssg71
g3246
sg64
(lp3258
S':'
asbag57
(g78
g59
NtRp3259
(dp3260
g62
(dp3261
sg71
g3246
sg64
(lp3262
g57
(g58
g59
NtRp3263
(dp3264
g62
(dp3265
g70
I4
ssg71
g3259
sg64
(lp3266
S'682b31d8-3fbf-42f1-9951-2fa6f04803f1'
p3267
asbasbasbag57
(g73
g59
NtRp3268
(dp3269
g62
(dp3270
sg71
g3220
sg64
(lp3271
g57
(g78
g59
NtRp3272
(dp3273
g62
(dp3274
g82
g83
ssg71
g3268
sg64
(lp3275
S'last_visit'
p3276
asbag57
(g78
g59
NtRp3277
(dp3278
g62
(dp3279
g89
g90
ssg71
g3268
sg64
(lp3280
S':'
asbag57
(g78
g59
NtRp3281
(dp3282
g62
(dp3283
sg71
g3268
sg64
(lp3284
g57
(g58
g59
NtRp3285
(dp3286
g62
(dp3287
g70
I4
ssg71
g3281
sg64
(lp3288
S'datetime.datetime(2013, 3, 8, 21, 36, 36, 713224)'
p3289
asbasbasbag57
(g73
g59
NtRp3290
(dp3291
g62
(dp3292
sg71
g3220
sg64
(lp3293
g57
(g78
g59
NtRp3294
(dp3295
g62
(dp3296
g82
g83
ssg71
g3290
sg64
(lp3297
S'remember'
p3298
asbag57
(g78
g59
NtRp3299
(dp3300
g62
(dp3301
g89
g90
ssg71
g3290
sg64
(lp3302
S':'
asbag57
(g78
g59
NtRp3303
(dp3304
g62
(dp3305
sg71
g3290
sg64
(lp3306
g57
(g58
g59
NtRp3307
(dp3308
g62
(dp3309
g70
I4
ssg71
g3303
sg64
(lp3310
g100
asbasbasbag57
(g73
g59
NtRp3311
(dp3312
g62
(dp3313
sg71
g3220
sg64
(lp3314
g57
(g78
g59
NtRp3315
(dp3316
g62
(dp3317
g82
g83
ssg71
g3311
sg64
(lp3318
S'user'
p3319
asbag57
(g78
g59
NtRp3320
(dp3321
g62
(dp3322
g89
g90
ssg71
g3311
sg64
(lp3323
S':'
asbag57
(g78
g59
NtRp3324
(dp3325
g62
(dp3326
sg71
g3311
sg64
(lp3327
g57
(g58
g59
NtRp3328
(dp3329
g62
(dp3330
g70
I4
ssg71
g3324
sg64
(lp3331
g57
(g66
g59
NtRp3332
(dp3333
g62
(dp3334
g70
I3
ssg71
Nsg64
(lp3335
g57
(g73
g59
NtRp3336
(dp3337
g62
(dp3338
sg71
g3332
sg64
(lp3339
g57
(g78
g59
NtRp3340
(dp3341
g62
(dp3342
g82
g83
ssg71
g3336
sg64
(lp3343
S'address'
p3344
asbag57
(g78
g59
NtRp3345
(dp3346
g62
(dp3347
g89
g90
ssg71
g3336
sg64
(lp3348
S':'
asbag57
(g78
g59
NtRp3349
(dp3350
g62
(dp3351
sg71
g3336
sg64
(lp3352
g57
(g58
g59
NtRp3353
(dp3354
g62
(dp3355
g70
I3
ssg71
g3349
sg64
(lp3356
S'dsaf'
p3357
asbasbasbag57
(g73
g59
NtRp3358
(dp3359
g62
(dp3360
sg71
g3332
sg64
(lp3361
g57
(g78
g59
NtRp3362
(dp3363
g62
(dp3364
g82
g83
ssg71
g3358
sg64
(lp3365
S'affiliated_to'
p3366
asbag57
(g78
g59
NtRp3367
(dp3368
g62
(dp3369
g89
g90
ssg71
g3358
sg64
(lp3370
S':'
asbag57
(g78
g59
NtRp3371
(dp3372
g62
(dp3373
sg71
g3358
sg64
(lp3374
g57
(g58
g59
NtRp3375
(dp3376
g62
(dp3377
g70
I3
ssg71
g3371
sg64
(lp3378
S'fdsa'
p3379
asbasbasbag57
(g73
g59
NtRp3380
(dp3381
g62
(dp3382
sg71
g3332
sg64
(lp3383
g57
(g78
g59
NtRp3384
(dp3385
g62
(dp3386
g82
g83
ssg71
g3380
sg64
(lp3387
S'city'
p3388
asbag57
(g78
g59
NtRp3389
(dp3390
g62
(dp3391
g89
g90
ssg71
g3380
sg64
(lp3392
S':'
asbag57
(g78
g59
NtRp3393
(dp3394
g62
(dp3395
sg71
g3380
sg64
(lp3396
g57
(g58
g59
NtRp3397
(dp3398
g62
(dp3399
g70
I3
ssg71
g3393
sg64
(lp3400
S'ongole'
p3401
asbasbasbag57
(g73
g59
NtRp3402
(dp3403
g62
(dp3404
sg71
g3332
sg64
(lp3405
g57
(g78
g59
NtRp3406
(dp3407
g62
(dp3408
g82
g83
ssg71
g3402
sg64
(lp3409
S'country'
p3410
asbag57
(g78
g59
NtRp3411
(dp3412
g62
(dp3413
g89
g90
ssg71
g3402
sg64
(lp3414
S':'
asbag57
(g78
g59
NtRp3415
(dp3416
g62
(dp3417
sg71
g3402
sg64
(lp3418
g57
(g58
g59
NtRp3419
(dp3420
g62
(dp3421
g70
I3
ssg71
g3415
sg64
(lp3422
S'India'
p3423
asbasbasbag57
(g73
g59
NtRp3424
(dp3425
g62
(dp3426
sg71
g3332
sg64
(lp3427
g57
(g78
g59
NtRp3428
(dp3429
g62
(dp3430
g82
g83
ssg71
g3424
sg64
(lp3431
S'email'
p3432
asbag57
(g78
g59
NtRp3433
(dp3434
g62
(dp3435
g89
g90
ssg71
g3424
sg64
(lp3436
S':'
asbag57
(g78
g59
NtRp3437
(dp3438
g62
(dp3439
sg71
g3424
sg64
(lp3440
g57
(g58
g59
NtRp3441
(dp3442
g62
(dp3443
g70
I3
ssg71
g3437
sg64
(lp3444
S'anil1in7@gmail.com'
p3445
asbasbasbag57
(g73
g59
NtRp3446
(dp3447
g62
(dp3448
sg71
g3332
sg64
(lp3449
g57
(g78
g59
NtRp3450
(dp3451
g62
(dp3452
g82
g83
ssg71
g3446
sg64
(lp3453
S'first_name'
p3454
asbag57
(g78
g59
NtRp3455
(dp3456
g62
(dp3457
g89
g90
ssg71
g3446
sg64
(lp3458
S':'
asbag57
(g78
g59
NtRp3459
(dp3460
g62
(dp3461
sg71
g3446
sg64
(lp3462
g57
(g58
g59
NtRp3463
(dp3464
g62
(dp3465
g70
I3
ssg71
g3459
sg64
(lp3466
S'Anil Kumar'
p3467
asbasbasbag57
(g73
g59
NtRp3468
(dp3469
g62
(dp3470
sg71
g3332
sg64
(lp3471
g57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g82
g83
ssg71
g3468
sg64
(lp3475
S'id'
p3476
asbag57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g89
g90
ssg71
g3468
sg64
(lp3480
S':'
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
sg71
g3468
sg64
(lp3484
g57
(g58
g59
NtRp3485
(dp3486
g62
(dp3487
g70
I3
ssg71
g3481
sg64
(lp3488
S'1'
asbasbasbag57
(g73
g59
NtRp3489
(dp3490
g62
(dp3491
sg71
g3332
sg64
(lp3492
g57
(g78
g59
NtRp3493
(dp3494
g62
(dp3495
g82
g83
ssg71
g3489
sg64
(lp3496
S'last_name'
p3497
asbag57
(g78
g59
NtRp3498
(dp3499
g62
(dp3500
g89
g90
ssg71
g3489
sg64
(lp3501
S':'
asbag57
(g78
g59
NtRp3502
(dp3503
g62
(dp3504
sg71
g3489
sg64
(lp3505
g57
(g58
g59
NtRp3506
(dp3507
g62
(dp3508
g70
I3
ssg71
g3502
sg64
(lp3509
S'Nalamalapu'
p3510
asbasbasbag57
(g73
g59
NtRp3511
(dp3512
g62
(dp3513
sg71
g3332
sg64
(lp3514
g57
(g78
g59
NtRp3515
(dp3516
g62
(dp3517
g82
g83
ssg71
g3511
sg64
(lp3518
S'mobile'
p3519
asbag57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
g89
g90
ssg71
g3511
sg64
(lp3523
S':'
asbag57
(g78
g59
NtRp3524
(dp3525
g62
(dp3526
sg71
g3511
sg64
(lp3527
g57
(g58
g59
NtRp3528
(dp3529
g62
(dp3530
g70
I3
ssg71
g3524
sg64
(lp3531
S'918885334113'
p3532
asbasbasbag57
(g73
g59
NtRp3533
(dp3534
g62
(dp3535
sg71
g3332
sg64
(lp3536
g57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
g82
g83
ssg71
g3533
sg64
(lp3540
S'phone'
p3541
asbag57
(g78
g59
NtRp3542
(dp3543
g62
(dp3544
g89
g90
ssg71
g3533
sg64
(lp3545
S':'
asbag57
(g78
g59
NtRp3546
(dp3547
g62
(dp3548
sg71
g3533
sg64
(lp3549
g57
(g58
g59
NtRp3550
(dp3551
g62
(dp3552
g70
I3
ssg71
g3546
sg64
(lp3553
S'918885334113'
p3554
asbasbasbag57
(g73
g59
NtRp3555
(dp3556
g62
(dp3557
sg71
g3332
sg64
(lp3558
g57
(g78
g59
NtRp3559
(dp3560
g62
(dp3561
g82
g83
ssg71
g3555
sg64
(lp3562
S'position'
p3563
asbag57
(g78
g59
NtRp3564
(dp3565
g62
(dp3566
g89
g90
ssg71
g3555
sg64
(lp3567
S':'
asbag57
(g78
g59
NtRp3568
(dp3569
g62
(dp3570
sg71
g3555
sg64
(lp3571
g57
(g58
g59
NtRp3572
(dp3573
g62
(dp3574
g70
I3
ssg71
g3568
sg64
(lp3575
S'2'
asbasbasbag57
(g73
g59
NtRp3576
(dp3577
g62
(dp3578
sg71
g3332
sg64
(lp3579
g57
(g78
g59
NtRp3580
(dp3581
g62
(dp3582
g82
g83
ssg71
g3576
sg64
(lp3583
S'postal_code'
p3584
asbag57
(g78
g59
NtRp3585
(dp3586
g62
(dp3587
g89
g90
ssg71
g3576
sg64
(lp3588
S':'
asbag57
(g78
g59
NtRp3589
(dp3590
g62
(dp3591
sg71
g3576
sg64
(lp3592
g57
(g58
g59
NtRp3593
(dp3594
g62
(dp3595
g70
I3
ssg71
g3589
sg64
(lp3596
S'523182'
p3597
asbasbasbag57
(g73
g59
NtRp3598
(dp3599
g62
(dp3600
sg71
g3332
sg64
(lp3601
g57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
g82
g83
ssg71
g3598
sg64
(lp3605
S'registration_id'
p3606
asbag57
(g78
g59
NtRp3607
(dp3608
g62
(dp3609
g89
g90
ssg71
g3598
sg64
(lp3610
S':'
asbag57
(g78
g59
NtRp3611
(dp3612
g62
(dp3613
sg71
g3598
sg64
(lp3614
g57
(g58
g59
NtRp3615
(dp3616
g62
(dp3617
g70
I3
ssg71
g3611
sg64
(lp3618
S''
asbasbasbag57
(g73
g59
NtRp3619
(dp3620
g62
(dp3621
sg71
g3332
sg64
(lp3622
g57
(g78
g59
NtRp3623
(dp3624
g62
(dp3625
g82
g83
ssg71
g3619
sg64
(lp3626
S'registration_key'
p3627
asbag57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
g89
g90
ssg71
g3619
sg64
(lp3631
S':'
asbag57
(g78
g59
NtRp3632
(dp3633
g62
(dp3634
sg71
g3619
sg64
(lp3635
g57
(g58
g59
NtRp3636
(dp3637
g62
(dp3638
g70
I3
ssg71
g3632
sg64
(lp3639
S''
asbasbasbag57
(g73
g59
NtRp3640
(dp3641
g62
(dp3642
sg71
g3332
sg64
(lp3643
g57
(g78
g59
NtRp3644
(dp3645
g62
(dp3646
g82
g83
ssg71
g3640
sg64
(lp3647
S'reset_password_key'
p3648
asbag57
(g78
g59
NtRp3649
(dp3650
g62
(dp3651
g89
g90
ssg71
g3640
sg64
(lp3652
S':'
asbag57
(g78
g59
NtRp3653
(dp3654
g62
(dp3655
sg71
g3640
sg64
(lp3656
g57
(g58
g59
NtRp3657
(dp3658
g62
(dp3659
g70
I3
ssg71
g3653
sg64
(lp3660
S''
asbasbasbag57
(g73
g59
NtRp3661
(dp3662
g62
(dp3663
sg71
g3332
sg64
(lp3664
g57
(g78
g59
NtRp3665
(dp3666
g62
(dp3667
g82
g83
ssg71
g3661
sg64
(lp3668
S'title'
p3669
asbag57
(g78
g59
NtRp3670
(dp3671
g62
(dp3672
g89
g90
ssg71
g3661
sg64
(lp3673
S':'
asbag57
(g78
g59
NtRp3674
(dp3675
g62
(dp3676
sg71
g3661
sg64
(lp3677
g57
(g58
g59
NtRp3678
(dp3679
g62
(dp3680
g70
I3
ssg71
g3674
sg64
(lp3681
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3682
(dp3683
g62
(dp3684
sg71
g3220
sg64
(lp3685
g57
(g78
g59
NtRp3686
(dp3687
g62
(dp3688
g82
g83
ssg71
g3682
sg64
(lp3689
S'user_groups'
p3690
asbag57
(g78
g59
NtRp3691
(dp3692
g62
(dp3693
g89
g90
ssg71
g3682
sg64
(lp3694
S':'
asbag57
(g78
g59
NtRp3695
(dp3696
g62
(dp3697
sg71
g3682
sg64
(lp3698
g57
(g58
g59
NtRp3699
(dp3700
g62
(dp3701
g70
I4
ssg71
g3695
sg64
(lp3702
g57
(g66
g59
NtRp3703
(dp3704
g62
(dp3705
g70
I3
ssg71
Nsg64
(lp3706
g57
(g73
g59
NtRp3707
(dp3708
g62
(dp3709
sg71
g3703
sg64
(lp3710
g57
(g78
g59
NtRp3711
(dp3712
g62
(dp3713
g82
g83
ssg71
g3707
sg64
(lp3714
S'1'
asbag57
(g78
g59
NtRp3715
(dp3716
g62
(dp3717
g89
g90
ssg71
g3707
sg64
(lp3718
S':'
asbag57
(g78
g59
NtRp3719
(dp3720
g62
(dp3721
sg71
g3707
sg64
(lp3722
g57
(g58
g59
NtRp3723
(dp3724
g62
(dp3725
g70
I3
ssg71
g3719
sg64
(lp3726
S'user_1'
p3727
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3728
(dp3729
g62
(dp3730
sg71
g3195
sg64
(lp3731
g57
(g78
g59
NtRp3732
(dp3733
g62
(dp3734
g82
g83
ssg71
g3728
sg64
(lp3735
S'flash'
p3736
asbag57
(g78
g59
NtRp3737
(dp3738
g62
(dp3739
g89
g90
ssg71
g3728
sg64
(lp3740
S':'
asbag57
(g78
g59
NtRp3741
(dp3742
g62
(dp3743
sg71
g3728
sg64
(lp3744
g57
(g58
g59
NtRp3745
(dp3746
g62
(dp3747
g70
I5
ssg71
g3741
sg64
(lp3748
S'None'
p3749
asbasbasbag57
(g73
g59
NtRp3750
(dp3751
g62
(dp3752
sg71
g3195
sg64
(lp3753
g57
(g78
g59
NtRp3754
(dp3755
g62
(dp3756
g82
g83
ssg71
g3750
sg64
(lp3757
S'last_orderby'
p3758
asbag57
(g78
g59
NtRp3759
(dp3760
g62
(dp3761
g89
g90
ssg71
g3750
sg64
(lp3762
S':'
asbag57
(g78
g59
NtRp3763
(dp3764
g62
(dp3765
sg71
g3750
sg64
(lp3766
g57
(g58
g59
NtRp3767
(dp3768
g62
(dp3769
g70
I5
ssg71
g3763
sg64
(lp3770
S'None'
p3771
asbasbasbag57
(g73
g59
NtRp3772
(dp3773
g62
(dp3774
sg71
g3195
sg64
(lp3775
g57
(g78
g59
NtRp3776
(dp3777
g62
(dp3778
g82
g83
ssg71
g3772
sg64
(lp3779
S'last_query'
p3780
asbag57
(g78
g59
NtRp3781
(dp3782
g62
(dp3783
g89
g90
ssg71
g3772
sg64
(lp3784
S':'
asbag57
(g78
g59
NtRp3785
(dp3786
g62
(dp3787
sg71
g3772
sg64
(lp3788
g57
(g58
g59
NtRp3789
(dp3790
g62
(dp3791
g70
I5
ssg71
g3785
sg64
(lp3792
S'db.project.id>0'
p3793
asbasbasbasbasbsS'etype'
p3794
S"<type 'exceptions.TypeError'>"
p3795
sS'date'
p3796
S'Fri Mar  8 21:37:03 2013'
p3797
sS'response'
p3798
g57
(g58
g59
NtRp3799
(dp3800
g62
(dp3801
sg64
(lp3802
g57
(g66
g59
NtRp3803
(dp3804
g62
(dp3805
g70
I5
ssg71
Nsg64
(lp3806
g57
(g73
g59
NtRp3807
(dp3808
g62
(dp3809
sg71
g3803
sg64
(lp3810
g57
(g78
g59
NtRp3811
(dp3812
g62
(dp3813
g82
g83
ssg71
g3807
sg64
(lp3814
g206
asbag57
(g78
g59
NtRp3815
(dp3816
g62
(dp3817
g89
g90
ssg71
g3807
sg64
(lp3818
S':'
asbag57
(g78
g59
NtRp3819
(dp3820
g62
(dp3821
sg71
g3807
sg64
(lp3822
g57
(g58
g59
NtRp3823
(dp3824
g62
(dp3825
g70
I5
ssg71
g3819
sg64
(lp3826
S'<cStringIO.StringO object at 0xaffab360>'
p3827
asbasbasbag57
(g73
g59
NtRp3828
(dp3829
g62
(dp3830
sg71
g3803
sg64
(lp3831
g57
(g78
g59
NtRp3832
(dp3833
g62
(dp3834
g82
g83
ssg71
g3828
sg64
(lp3835
g294
asbag57
(g78
g59
NtRp3836
(dp3837
g62
(dp3838
g89
g90
ssg71
g3828
sg64
(lp3839
S':'
asbag57
(g78
g59
NtRp3840
(dp3841
g62
(dp3842
sg71
g3828
sg64
(lp3843
g57
(g58
g59
NtRp3844
(dp3845
g62
(dp3846
g70
I5
ssg71
g3840
sg64
(lp3847
g57
(g66
g59
NtRp3848
(dp3849
g62
(dp3850
g70
I4
ssg71
Nsg64
(lp3851
g57
(g73
g59
NtRp3852
(dp3853
g62
(dp3854
sg71
g3848
sg64
(lp3855
g57
(g78
g59
NtRp3856
(dp3857
g62
(dp3858
g82
g83
ssg71
g3852
sg64
(lp3859
S'session_id_dev_bootstrap_ch'
p3860
asbag57
(g78
g59
NtRp3861
(dp3862
g62
(dp3863
g89
g90
ssg71
g3852
sg64
(lp3864
S':'
asbag57
(g78
g59
NtRp3865
(dp3866
g62
(dp3867
sg71
g3852
sg64
(lp3868
g57
(g58
g59
NtRp3869
(dp3870
g62
(dp3871
g70
I4
ssg71
g3865
sg64
(lp3872
g526
ag57
(g66
g59
NtRp3873
(dp3874
g62
(dp3875
g70
I3
ssg71
Nsg64
(lp3876
g57
(g73
g59
NtRp3877
(dp3878
g62
(dp3879
sg71
g3873
sg64
(lp3880
g57
(g78
g59
NtRp3881
(dp3882
g62
(dp3883
g82
g83
ssg71
g3877
sg64
(lp3884
g345
asbag57
(g78
g59
NtRp3885
(dp3886
g62
(dp3887
g89
g90
ssg71
g3877
sg64
(lp3888
S':'
asbag57
(g78
g59
NtRp3889
(dp3890
g62
(dp3891
sg71
g3877
sg64
(lp3892
g57
(g58
g59
NtRp3893
(dp3894
g62
(dp3895
g70
I3
ssg71
g3889
sg64
(lp3896
S''
asbasbasbag57
(g73
g59
NtRp3897
(dp3898
g62
(dp3899
sg71
g3873
sg64
(lp3900
g57
(g78
g59
NtRp3901
(dp3902
g62
(dp3903
g82
g83
ssg71
g3897
sg64
(lp3904
g366
asbag57
(g78
g59
NtRp3905
(dp3906
g62
(dp3907
g89
g90
ssg71
g3897
sg64
(lp3908
S':'
asbag57
(g78
g59
NtRp3909
(dp3910
g62
(dp3911
sg71
g3897
sg64
(lp3912
g57
(g58
g59
NtRp3913
(dp3914
g62
(dp3915
g70
I3
ssg71
g3909
sg64
(lp3916
S''
asbasbasbag57
(g73
g59
NtRp3917
(dp3918
g62
(dp3919
sg71
g3873
sg64
(lp3920
g57
(g78
g59
NtRp3921
(dp3922
g62
(dp3923
g82
g83
ssg71
g3917
sg64
(lp3924
g387
asbag57
(g78
g59
NtRp3925
(dp3926
g62
(dp3927
g89
g90
ssg71
g3917
sg64
(lp3928
S':'
asbag57
(g78
g59
NtRp3929
(dp3930
g62
(dp3931
sg71
g3917
sg64
(lp3932
g57
(g58
g59
NtRp3933
(dp3934
g62
(dp3935
g70
I3
ssg71
g3929
sg64
(lp3936
S''
asbasbasbag57
(g73
g59
NtRp3937
(dp3938
g62
(dp3939
sg71
g3873
sg64
(lp3940
g57
(g78
g59
NtRp3941
(dp3942
g62
(dp3943
g82
g83
ssg71
g3937
sg64
(lp3944
g408
asbag57
(g78
g59
NtRp3945
(dp3946
g62
(dp3947
g89
g90
ssg71
g3937
sg64
(lp3948
S':'
asbag57
(g78
g59
NtRp3949
(dp3950
g62
(dp3951
sg71
g3937
sg64
(lp3952
g57
(g58
g59
NtRp3953
(dp3954
g62
(dp3955
g70
I3
ssg71
g3949
sg64
(lp3956
S''
asbasbasbag57
(g73
g59
NtRp3957
(dp3958
g62
(dp3959
sg71
g3873
sg64
(lp3960
g57
(g78
g59
NtRp3961
(dp3962
g62
(dp3963
g82
g83
ssg71
g3957
sg64
(lp3964
g429
asbag57
(g78
g59
NtRp3965
(dp3966
g62
(dp3967
g89
g90
ssg71
g3957
sg64
(lp3968
S':'
asbag57
(g78
g59
NtRp3969
(dp3970
g62
(dp3971
sg71
g3957
sg64
(lp3972
g57
(g58
g59
NtRp3973
(dp3974
g62
(dp3975
g70
I3
ssg71
g3969
sg64
(lp3976
S''
asbasbasbag57
(g73
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3873
sg64
(lp3980
g57
(g78
g59
NtRp3981
(dp3982
g62
(dp3983
g82
g83
ssg71
g3977
sg64
(lp3984
g450
asbag57
(g78
g59
NtRp3985
(dp3986
g62
(dp3987
g89
g90
ssg71
g3977
sg64
(lp3988
S':'
asbag57
(g78
g59
NtRp3989
(dp3990
g62
(dp3991
sg71
g3977
sg64
(lp3992
g57
(g58
g59
NtRp3993
(dp3994
g62
(dp3995
g70
I3
ssg71
g3989
sg64
(lp3996
S'/'
asbasbasbag57
(g73
g59
NtRp3997
(dp3998
g62
(dp3999
sg71
g3873
sg64
(lp4000
g57
(g78
g59
NtRp4001
(dp4002
g62
(dp4003
g82
g83
ssg71
g3997
sg64
(lp4004
g471
asbag57
(g78
g59
NtRp4005
(dp4006
g62
(dp4007
g89
g90
ssg71
g3997
sg64
(lp4008
S':'
asbag57
(g78
g59
NtRp4009
(dp4010
g62
(dp4011
sg71
g3997
sg64
(lp4012
g57
(g58
g59
NtRp4013
(dp4014
g62
(dp4015
g70
I3
ssg71
g4009
sg64
(lp4016
S''
asbasbasbag57
(g73
g59
NtRp4017
(dp4018
g62
(dp4019
sg71
g3873
sg64
(lp4020
g57
(g78
g59
NtRp4021
(dp4022
g62
(dp4023
g82
g83
ssg71
g4017
sg64
(lp4024
g492
asbag57
(g78
g59
NtRp4025
(dp4026
g62
(dp4027
g89
g90
ssg71
g4017
sg64
(lp4028
S':'
asbag57
(g78
g59
NtRp4029
(dp4030
g62
(dp4031
sg71
g4017
sg64
(lp4032
g57
(g58
g59
NtRp4033
(dp4034
g62
(dp4035
g70
I3
ssg71
g4029
sg64
(lp4036
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4037
(dp4038
g62
(dp4039
sg71
g3803
sg64
(lp4040
g57
(g78
g59
NtRp4041
(dp4042
g62
(dp4043
g82
g83
ssg71
g4037
sg64
(lp4044
S'delimiters'
p4045
asbag57
(g78
g59
NtRp4046
(dp4047
g62
(dp4048
g89
g90
ssg71
g4037
sg64
(lp4049
S':'
asbag57
(g78
g59
NtRp4050
(dp4051
g62
(dp4052
sg71
g4037
sg64
(lp4053
g57
(g58
g59
NtRp4054
(dp4055
g62
(dp4056
g70
I5
ssg71
g4050
sg64
(lp4057
g57
(g66
g59
NtRp4058
(dp4059
g62
(dp4060
g70
I4
ssg71
Nsg64
(lp4061
g57
(g73
g59
NtRp4062
(dp4063
g62
(dp4064
sg71
g4058
sg64
(lp4065
g57
(g78
g59
NtRp4066
(dp4067
g62
(dp4068
sg71
g4062
sg64
(lp4069
g57
(g58
g59
NtRp4070
(dp4071
g62
(dp4072
g70
I4
ssg71
g4066
sg64
(lp4073
S'{{'
p4074
asbasbasbag57
(g73
g59
NtRp4075
(dp4076
g62
(dp4077
sg71
g4058
sg64
(lp4078
g57
(g78
g59
NtRp4079
(dp4080
g62
(dp4081
sg71
g4075
sg64
(lp4082
g57
(g58
g59
NtRp4083
(dp4084
g62
(dp4085
g70
I4
ssg71
g4079
sg64
(lp4086
S'}}'
p4087
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4088
(dp4089
g62
(dp4090
sg71
g3803
sg64
(lp4091
g57
(g78
g59
NtRp4092
(dp4093
g62
(dp4094
g82
g83
ssg71
g4088
sg64
(lp4095
S'files'
p4096
asbag57
(g78
g59
NtRp4097
(dp4098
g62
(dp4099
g89
g90
ssg71
g4088
sg64
(lp4100
S':'
asbag57
(g78
g59
NtRp4101
(dp4102
g62
(dp4103
sg71
g4088
sg64
(lp4104
g57
(g58
g59
NtRp4105
(dp4106
g62
(dp4107
g70
I5
ssg71
g4101
sg64
(lp4108
g57
(g66
g59
NtRp4109
(dp4110
g62
(dp4111
g70
I4
ssg71
Nsg64
(lp4112
g57
(g73
g59
NtRp4113
(dp4114
g62
(dp4115
sg71
g4109
sg64
(lp4116
g57
(g78
g59
NtRp4117
(dp4118
g62
(dp4119
sg71
g4113
sg64
(lp4120
g57
(g58
g59
NtRp4121
(dp4122
g62
(dp4123
g70
I4
ssg71
g4117
sg64
(lp4124
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4125
asbasbasbag57
(g73
g59
NtRp4126
(dp4127
g62
(dp4128
sg71
g4109
sg64
(lp4129
g57
(g78
g59
NtRp4130
(dp4131
g62
(dp4132
sg71
g4126
sg64
(lp4133
g57
(g58
g59
NtRp4134
(dp4135
g62
(dp4136
g70
I4
ssg71
g4130
sg64
(lp4137
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4138
asbasbasbag57
(g73
g59
NtRp4139
(dp4140
g62
(dp4141
sg71
g4109
sg64
(lp4142
g57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
sg71
g4139
sg64
(lp4146
g57
(g58
g59
NtRp4147
(dp4148
g62
(dp4149
g70
I4
ssg71
g4143
sg64
(lp4150
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4151
asbasbasbag57
(g73
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g4109
sg64
(lp4155
g57
(g78
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4152
sg64
(lp4159
g57
(g58
g59
NtRp4160
(dp4161
g62
(dp4162
g70
I4
ssg71
g4156
sg64
(lp4163
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4164
asbasbasbag57
(g73
g59
NtRp4165
(dp4166
g62
(dp4167
sg71
g4109
sg64
(lp4168
g57
(g78
g59
NtRp4169
(dp4170
g62
(dp4171
sg71
g4165
sg64
(lp4172
g57
(g58
g59
NtRp4173
(dp4174
g62
(dp4175
g70
I4
ssg71
g4169
sg64
(lp4176
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4177
asbasbasbag57
(g73
g59
NtRp4178
(dp4179
g62
(dp4180
sg71
g4109
sg64
(lp4181
g57
(g78
g59
NtRp4182
(dp4183
g62
(dp4184
sg71
g4178
sg64
(lp4185
g57
(g58
g59
NtRp4186
(dp4187
g62
(dp4188
g70
I4
ssg71
g4182
sg64
(lp4189
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4190
asbasbasbag57
(g73
g59
NtRp4191
(dp4192
g62
(dp4193
sg71
g4109
sg64
(lp4194
g57
(g78
g59
NtRp4195
(dp4196
g62
(dp4197
sg71
g4191
sg64
(lp4198
g57
(g58
g59
NtRp4199
(dp4200
g62
(dp4201
g70
I4
ssg71
g4195
sg64
(lp4202
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4203
asbasbasbag57
(g73
g59
NtRp4204
(dp4205
g62
(dp4206
sg71
g4109
sg64
(lp4207
g57
(g78
g59
NtRp4208
(dp4209
g62
(dp4210
sg71
g4204
sg64
(lp4211
g57
(g58
g59
NtRp4212
(dp4213
g62
(dp4214
g70
I4
ssg71
g4208
sg64
(lp4215
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4216
asbasbasbag57
(g73
g59
NtRp4217
(dp4218
g62
(dp4219
sg71
g4109
sg64
(lp4220
g57
(g78
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4217
sg64
(lp4224
g57
(g58
g59
NtRp4225
(dp4226
g62
(dp4227
g70
I4
ssg71
g4221
sg64
(lp4228
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4229
asbasbasbag57
(g73
g59
NtRp4230
(dp4231
g62
(dp4232
sg71
g4109
sg64
(lp4233
g57
(g78
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4230
sg64
(lp4237
g57
(g58
g59
NtRp4238
(dp4239
g62
(dp4240
g70
I4
ssg71
g4234
sg64
(lp4241
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4242
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4243
(dp4244
g62
(dp4245
sg71
g3803
sg64
(lp4246
g57
(g78
g59
NtRp4247
(dp4248
g62
(dp4249
g82
g83
ssg71
g4243
sg64
(lp4250
S'flash'
p4251
asbag57
(g78
g59
NtRp4252
(dp4253
g62
(dp4254
g89
g90
ssg71
g4243
sg64
(lp4255
S':'
asbag57
(g78
g59
NtRp4256
(dp4257
g62
(dp4258
sg71
g4243
sg64
(lp4259
g57
(g58
g59
NtRp4260
(dp4261
g62
(dp4262
g70
I5
ssg71
g4256
sg64
(lp4263
S''
asbasbasbag57
(g73
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g3803
sg64
(lp4267
g57
(g78
g59
NtRp4268
(dp4269
g62
(dp4270
g82
g83
ssg71
g4264
sg64
(lp4271
S'generic_patterns'
p4272
asbag57
(g78
g59
NtRp4273
(dp4274
g62
(dp4275
g89
g90
ssg71
g4264
sg64
(lp4276
S':'
asbag57
(g78
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g4264
sg64
(lp4280
g57
(g58
g59
NtRp4281
(dp4282
g62
(dp4283
g70
I5
ssg71
g4277
sg64
(lp4284
g57
(g66
g59
NtRp4285
(dp4286
g62
(dp4287
g70
I4
ssg71
Nsg64
(lp4288
g57
(g73
g59
NtRp4289
(dp4290
g62
(dp4291
sg71
g4285
sg64
(lp4292
g57
(g78
g59
NtRp4293
(dp4294
g62
(dp4295
sg71
g4289
sg64
(lp4296
g57
(g58
g59
NtRp4297
(dp4298
g62
(dp4299
g70
I4
ssg71
g4293
sg64
(lp4300
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4301
(dp4302
g62
(dp4303
sg71
g3803
sg64
(lp4304
g57
(g78
g59
NtRp4305
(dp4306
g62
(dp4307
g82
g83
ssg71
g4301
sg64
(lp4308
S'google_analytics_id'
p4309
asbag57
(g78
g59
NtRp4310
(dp4311
g62
(dp4312
g89
g90
ssg71
g4301
sg64
(lp4313
S':'
asbag57
(g78
g59
NtRp4314
(dp4315
g62
(dp4316
sg71
g4301
sg64
(lp4317
g57
(g58
g59
NtRp4318
(dp4319
g62
(dp4320
g70
I5
ssg71
g4314
sg64
(lp4321
S'None'
p4322
asbasbasbag57
(g73
g59
NtRp4323
(dp4324
g62
(dp4325
sg71
g3803
sg64
(lp4326
g57
(g78
g59
NtRp4327
(dp4328
g62
(dp4329
g82
g83
ssg71
g4323
sg64
(lp4330
S'headers'
p4331
asbag57
(g78
g59
NtRp4332
(dp4333
g62
(dp4334
g89
g90
ssg71
g4323
sg64
(lp4335
S':'
asbag57
(g78
g59
NtRp4336
(dp4337
g62
(dp4338
sg71
g4323
sg64
(lp4339
g57
(g58
g59
NtRp4340
(dp4341
g62
(dp4342
g70
I5
ssg71
g4336
sg64
(lp4343
g57
(g66
g59
NtRp4344
(dp4345
g62
(dp4346
g70
I4
ssg71
Nsg64
(lp4347
g57
(g73
g59
NtRp4348
(dp4349
g62
(dp4350
sg71
g4344
sg64
(lp4351
g57
(g78
g59
NtRp4352
(dp4353
g62
(dp4354
g82
g83
ssg71
g4348
sg64
(lp4355
S'X-Powered-By'
p4356
asbag57
(g78
g59
NtRp4357
(dp4358
g62
(dp4359
g89
g90
ssg71
g4348
sg64
(lp4360
S':'
asbag57
(g78
g59
NtRp4361
(dp4362
g62
(dp4363
sg71
g4348
sg64
(lp4364
g57
(g58
g59
NtRp4365
(dp4366
g62
(dp4367
g70
I4
ssg71
g4361
sg64
(lp4368
S'web2py'
p4369
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4370
(dp4371
g62
(dp4372
sg71
g3803
sg64
(lp4373
g57
(g78
g59
NtRp4374
(dp4375
g62
(dp4376
g82
g83
ssg71
g4370
sg64
(lp4377
S'menu'
p4378
asbag57
(g78
g59
NtRp4379
(dp4380
g62
(dp4381
g89
g90
ssg71
g4370
sg64
(lp4382
S':'
asbag57
(g78
g59
NtRp4383
(dp4384
g62
(dp4385
sg71
g4370
sg64
(lp4386
g57
(g58
g59
NtRp4387
(dp4388
g62
(dp4389
g70
I5
ssg71
g4383
sg64
(lp4390
g57
(g66
g59
NtRp4391
(dp4392
g62
(dp4393
g70
I4
ssg71
Nsg64
(lp4394
g57
(g73
g59
NtRp4395
(dp4396
g62
(dp4397
sg71
g4391
sg64
(lp4398
g57
(g78
g59
NtRp4399
(dp4400
g62
(dp4401
sg71
g4395
sg64
(lp4402
g57
(g58
g59
NtRp4403
(dp4404
g62
(dp4405
g70
I4
ssg71
g4399
sg64
(lp4406
g57
(g66
g59
NtRp4407
(dp4408
g62
(dp4409
g70
I3
ssg71
Nsg64
(lp4410
g57
(g73
g59
NtRp4411
(dp4412
g62
(dp4413
sg71
g4407
sg64
(lp4414
g57
(g78
g59
NtRp4415
(dp4416
g62
(dp4417
sg71
g4411
sg64
(lp4418
g57
(g58
g59
NtRp4419
(dp4420
g62
(dp4421
g70
I3
ssg71
g4415
sg64
(lp4422
cgluon.languages
lazyT_unpickle
p4423
(S't\x04\x00\x00\x00Home'
tRp4424
asbasbasbag57
(g73
g59
NtRp4425
(dp4426
g62
(dp4427
sg71
g4407
sg64
(lp4428
g57
(g78
g59
NtRp4429
(dp4430
g62
(dp4431
sg71
g4425
sg64
(lp4432
g57
(g58
g59
NtRp4433
(dp4434
g62
(dp4435
g70
I3
ssg71
g4429
sg64
(lp4436
g100
asbasbasbag57
(g73
g59
NtRp4437
(dp4438
g62
(dp4439
sg71
g4407
sg64
(lp4440
g57
(g78
g59
NtRp4441
(dp4442
g62
(dp4443
sg71
g4437
sg64
(lp4444
g57
(g58
g59
NtRp4445
(dp4446
g62
(dp4447
g70
I3
ssg71
g4441
sg64
(lp4448
S'/DEV_bootstrap_ch/default/list_all_projects'
p4449
asbasbasbag57
(g73
g59
NtRp4450
(dp4451
g62
(dp4452
sg71
g4407
sg64
(lp4453
g57
(g78
g59
NtRp4454
(dp4455
g62
(dp4456
sg71
g4450
sg64
(lp4457
g57
(g58
g59
NtRp4458
(dp4459
g62
(dp4460
g70
I3
ssg71
g4454
sg64
(lp4461
g57
(g66
g59
NtRp4462
(dp4463
g62
(dp4464
g70
I2
ssg71
Nsg64
(lp4465
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4466
(dp4467
g62
(dp4468
sg71
g3803
sg64
(lp4469
g57
(g78
g59
NtRp4470
(dp4471
g62
(dp4472
g82
g83
ssg71
g4466
sg64
(lp4473
S'meta'
p4474
asbag57
(g78
g59
NtRp4475
(dp4476
g62
(dp4477
g89
g90
ssg71
g4466
sg64
(lp4478
S':'
asbag57
(g78
g59
NtRp4479
(dp4480
g62
(dp4481
sg71
g4466
sg64
(lp4482
g57
(g58
g59
NtRp4483
(dp4484
g62
(dp4485
g70
I5
ssg71
g4479
sg64
(lp4486
g57
(g66
g59
NtRp4487
(dp4488
g62
(dp4489
g70
I4
ssg71
Nsg64
(lp4490
g57
(g73
g59
NtRp4491
(dp4492
g62
(dp4493
sg71
g4487
sg64
(lp4494
g57
(g78
g59
NtRp4495
(dp4496
g62
(dp4497
g82
g83
ssg71
g4491
sg64
(lp4498
S'author'
p4499
asbag57
(g78
g59
NtRp4500
(dp4501
g62
(dp4502
g89
g90
ssg71
g4491
sg64
(lp4503
S':'
asbag57
(g78
g59
NtRp4504
(dp4505
g62
(dp4506
sg71
g4491
sg64
(lp4507
g57
(g58
g59
NtRp4508
(dp4509
g62
(dp4510
g70
I4
ssg71
g4504
sg64
(lp4511
S'Vikram Pudi <vikram@iiit.ac.in>'
p4512
asbasbasbag57
(g73
g59
NtRp4513
(dp4514
g62
(dp4515
sg71
g4487
sg64
(lp4516
g57
(g78
g59
NtRp4517
(dp4518
g62
(dp4519
g82
g83
ssg71
g4513
sg64
(lp4520
S'copyright'
p4521
asbag57
(g78
g59
NtRp4522
(dp4523
g62
(dp4524
g89
g90
ssg71
g4513
sg64
(lp4525
S':'
asbag57
(g78
g59
NtRp4526
(dp4527
g62
(dp4528
sg71
g4513
sg64
(lp4529
g57
(g58
g59
NtRp4530
(dp4531
g62
(dp4532
g70
I4
ssg71
g4526
sg64
(lp4533
S'Copyright 2011'
p4534
asbasbasbag57
(g73
g59
NtRp4535
(dp4536
g62
(dp4537
sg71
g4487
sg64
(lp4538
g57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
g82
g83
ssg71
g4535
sg64
(lp4542
S'description'
p4543
asbag57
(g78
g59
NtRp4544
(dp4545
g62
(dp4546
g89
g90
ssg71
g4535
sg64
(lp4547
S':'
asbag57
(g78
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g4535
sg64
(lp4551
g57
(g58
g59
NtRp4552
(dp4553
g62
(dp4554
g70
I4
ssg71
g4548
sg64
(lp4555
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4556
asbasbasbag57
(g73
g59
NtRp4557
(dp4558
g62
(dp4559
sg71
g4487
sg64
(lp4560
g57
(g78
g59
NtRp4561
(dp4562
g62
(dp4563
g82
g83
ssg71
g4557
sg64
(lp4564
S'generator'
p4565
asbag57
(g78
g59
NtRp4566
(dp4567
g62
(dp4568
g89
g90
ssg71
g4557
sg64
(lp4569
S':'
asbag57
(g78
g59
NtRp4570
(dp4571
g62
(dp4572
sg71
g4557
sg64
(lp4573
g57
(g58
g59
NtRp4574
(dp4575
g62
(dp4576
g70
I4
ssg71
g4570
sg64
(lp4577
S'Web2py Web Framework'
p4578
asbasbasbag57
(g73
g59
NtRp4579
(dp4580
g62
(dp4581
sg71
g4487
sg64
(lp4582
g57
(g78
g59
NtRp4583
(dp4584
g62
(dp4585
g82
g83
ssg71
g4579
sg64
(lp4586
S'keywords'
p4587
asbag57
(g78
g59
NtRp4588
(dp4589
g62
(dp4590
g89
g90
ssg71
g4579
sg64
(lp4591
S':'
asbag57
(g78
g59
NtRp4592
(dp4593
g62
(dp4594
sg71
g4579
sg64
(lp4595
g57
(g58
g59
NtRp4596
(dp4597
g62
(dp4598
g70
I4
ssg71
g4592
sg64
(lp4599
S'web2py, python, metabolome, metabolomics'
p4600
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4601
(dp4602
g62
(dp4603
sg71
g3803
sg64
(lp4604
g57
(g78
g59
NtRp4605
(dp4606
g62
(dp4607
g82
g83
ssg71
g4601
sg64
(lp4608
S'models_to_run'
p4609
asbag57
(g78
g59
NtRp4610
(dp4611
g62
(dp4612
g89
g90
ssg71
g4601
sg64
(lp4613
S':'
asbag57
(g78
g59
NtRp4614
(dp4615
g62
(dp4616
sg71
g4601
sg64
(lp4617
g57
(g58
g59
NtRp4618
(dp4619
g62
(dp4620
g70
I5
ssg71
g4614
sg64
(lp4621
g57
(g66
g59
NtRp4622
(dp4623
g62
(dp4624
g70
I4
ssg71
Nsg64
(lp4625
g57
(g73
g59
NtRp4626
(dp4627
g62
(dp4628
sg71
g4622
sg64
(lp4629
g57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
sg71
g4626
sg64
(lp4633
g57
(g58
g59
NtRp4634
(dp4635
g62
(dp4636
g70
I4
ssg71
g4630
sg64
(lp4637
S'^\\w+\\.py$'
p4638
asbasbasbag57
(g73
g59
NtRp4639
(dp4640
g62
(dp4641
sg71
g4622
sg64
(lp4642
g57
(g78
g59
NtRp4643
(dp4644
g62
(dp4645
sg71
g4639
sg64
(lp4646
g57
(g58
g59
NtRp4647
(dp4648
g62
(dp4649
g70
I4
ssg71
g4643
sg64
(lp4650
S'^default/\\w+\\.py$'
p4651
asbasbasbag57
(g73
g59
NtRp4652
(dp4653
g62
(dp4654
sg71
g4622
sg64
(lp4655
g57
(g78
g59
NtRp4656
(dp4657
g62
(dp4658
sg71
g4652
sg64
(lp4659
g57
(g58
g59
NtRp4660
(dp4661
g62
(dp4662
g70
I4
ssg71
g4656
sg64
(lp4663
S'^default/list_all_pub_projects/\\w+\\.py$'
p4664
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4665
(dp4666
g62
(dp4667
sg71
g3803
sg64
(lp4668
g57
(g78
g59
NtRp4669
(dp4670
g62
(dp4671
g82
g83
ssg71
g4665
sg64
(lp4672
S'postprocessing'
p4673
asbag57
(g78
g59
NtRp4674
(dp4675
g62
(dp4676
g89
g90
ssg71
g4665
sg64
(lp4677
S':'
asbag57
(g78
g59
NtRp4678
(dp4679
g62
(dp4680
sg71
g4665
sg64
(lp4681
g57
(g58
g59
NtRp4682
(dp4683
g62
(dp4684
g70
I5
ssg71
g4678
sg64
(lp4685
g57
(g66
g59
NtRp4686
(dp4687
g62
(dp4688
g70
I4
ssg71
Nsg64
(lp4689
sbasbasbasbag57
(g73
g59
NtRp4690
(dp4691
g62
(dp4692
sg71
g3803
sg64
(lp4693
g57
(g78
g59
NtRp4694
(dp4695
g62
(dp4696
g82
g83
ssg71
g4690
sg64
(lp4697
S'session_cookie_expires'
p4698
asbag57
(g78
g59
NtRp4699
(dp4700
g62
(dp4701
g89
g90
ssg71
g4690
sg64
(lp4702
S':'
asbag57
(g78
g59
NtRp4703
(dp4704
g62
(dp4705
sg71
g4690
sg64
(lp4706
g57
(g58
g59
NtRp4707
(dp4708
g62
(dp4709
g70
I5
ssg71
g4703
sg64
(lp4710
S'None'
p4711
asbasbasbag57
(g73
g59
NtRp4712
(dp4713
g62
(dp4714
sg71
g3803
sg64
(lp4715
g57
(g78
g59
NtRp4716
(dp4717
g62
(dp4718
g82
g83
ssg71
g4712
sg64
(lp4719
S'session_data_name'
p4720
asbag57
(g78
g59
NtRp4721
(dp4722
g62
(dp4723
g89
g90
ssg71
g4712
sg64
(lp4724
S':'
asbag57
(g78
g59
NtRp4725
(dp4726
g62
(dp4727
sg71
g4712
sg64
(lp4728
g57
(g58
g59
NtRp4729
(dp4730
g62
(dp4731
g70
I5
ssg71
g4725
sg64
(lp4732
S'session_data_dev_bootstrap_ch'
p4733
asbasbasbag57
(g73
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g3803
sg64
(lp4737
g57
(g78
g59
NtRp4738
(dp4739
g62
(dp4740
g82
g83
ssg71
g4734
sg64
(lp4741
S'session_file'
p4742
asbag57
(g78
g59
NtRp4743
(dp4744
g62
(dp4745
g89
g90
ssg71
g4734
sg64
(lp4746
S':'
asbag57
(g78
g59
NtRp4747
(dp4748
g62
(dp4749
sg71
g4734
sg64
(lp4750
g57
(g58
g59
NtRp4751
(dp4752
g62
(dp4753
g70
I5
ssg71
g4747
sg64
(lp4754
S"<open file '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480', mode 'rb+' at 0xafe73b20>"
p4755
asbasbasbag57
(g73
g59
NtRp4756
(dp4757
g62
(dp4758
sg71
g3803
sg64
(lp4759
g57
(g78
g59
NtRp4760
(dp4761
g62
(dp4762
g82
g83
ssg71
g4756
sg64
(lp4763
S'session_filename'
p4764
asbag57
(g78
g59
NtRp4765
(dp4766
g62
(dp4767
g89
g90
ssg71
g4756
sg64
(lp4768
S':'
asbag57
(g78
g59
NtRp4769
(dp4770
g62
(dp4771
sg71
g4756
sg64
(lp4772
g57
(g58
g59
NtRp4773
(dp4774
g62
(dp4775
g70
I5
ssg71
g4769
sg64
(lp4776
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-0786449f-0f57-4893-b642-5d65efb22480'
p4777
asbasbasbag57
(g73
g59
NtRp4778
(dp4779
g62
(dp4780
sg71
g3803
sg64
(lp4781
g57
(g78
g59
NtRp4782
(dp4783
g62
(dp4784
g82
g83
ssg71
g4778
sg64
(lp4785
S'session_id'
p4786
asbag57
(g78
g59
NtRp4787
(dp4788
g62
(dp4789
g89
g90
ssg71
g4778
sg64
(lp4790
S':'
asbag57
(g78
g59
NtRp4791
(dp4792
g62
(dp4793
sg71
g4778
sg64
(lp4794
g57
(g58
g59
NtRp4795
(dp4796
g62
(dp4797
g70
I5
ssg71
g4791
sg64
(lp4798
g526
asbasbasbag57
(g73
g59
NtRp4799
(dp4800
g62
(dp4801
sg71
g3803
sg64
(lp4802
g57
(g78
g59
NtRp4803
(dp4804
g62
(dp4805
g82
g83
ssg71
g4799
sg64
(lp4806
S'session_id_name'
p4807
asbag57
(g78
g59
NtRp4808
(dp4809
g62
(dp4810
g89
g90
ssg71
g4799
sg64
(lp4811
S':'
asbag57
(g78
g59
NtRp4812
(dp4813
g62
(dp4814
sg71
g4799
sg64
(lp4815
g57
(g58
g59
NtRp4816
(dp4817
g62
(dp4818
g70
I5
ssg71
g4812
sg64
(lp4819
g3860
asbasbasbag57
(g73
g59
NtRp4820
(dp4821
g62
(dp4822
sg71
g3803
sg64
(lp4823
g57
(g78
g59
NtRp4824
(dp4825
g62
(dp4826
g82
g83
ssg71
g4820
sg64
(lp4827
S'session_locked'
p4828
asbag57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
g89
g90
ssg71
g4820
sg64
(lp4832
S':'
asbag57
(g78
g59
NtRp4833
(dp4834
g62
(dp4835
sg71
g4820
sg64
(lp4836
g57
(g58
g59
NtRp4837
(dp4838
g62
(dp4839
g70
I5
ssg71
g4833
sg64
(lp4840
g1658
asbasbasbag57
(g73
g59
NtRp4841
(dp4842
g62
(dp4843
sg71
g3803
sg64
(lp4844
g57
(g78
g59
NtRp4845
(dp4846
g62
(dp4847
g82
g83
ssg71
g4841
sg64
(lp4848
S'session_new'
p4849
asbag57
(g78
g59
NtRp4850
(dp4851
g62
(dp4852
g89
g90
ssg71
g4841
sg64
(lp4853
S':'
asbag57
(g78
g59
NtRp4854
(dp4855
g62
(dp4856
sg71
g4841
sg64
(lp4857
g57
(g58
g59
NtRp4858
(dp4859
g62
(dp4860
g70
I5
ssg71
g4854
sg64
(lp4861
g100
asbasbasbag57
(g73
g59
NtRp4862
(dp4863
g62
(dp4864
sg71
g3803
sg64
(lp4865
g57
(g78
g59
NtRp4866
(dp4867
g62
(dp4868
g82
g83
ssg71
g4862
sg64
(lp4869
S'session_storage_type'
p4870
asbag57
(g78
g59
NtRp4871
(dp4872
g62
(dp4873
g89
g90
ssg71
g4862
sg64
(lp4874
S':'
asbag57
(g78
g59
NtRp4875
(dp4876
g62
(dp4877
sg71
g4862
sg64
(lp4878
g57
(g58
g59
NtRp4879
(dp4880
g62
(dp4881
g70
I5
ssg71
g4875
sg64
(lp4882
g3111
asbasbasbag57
(g73
g59
NtRp4883
(dp4884
g62
(dp4885
sg71
g3803
sg64
(lp4886
g57
(g78
g59
NtRp4887
(dp4888
g62
(dp4889
g82
g83
ssg71
g4883
sg64
(lp4890
S'status'
p4891
asbag57
(g78
g59
NtRp4892
(dp4893
g62
(dp4894
g89
g90
ssg71
g4883
sg64
(lp4895
S':'
asbag57
(g78
g59
NtRp4896
(dp4897
g62
(dp4898
sg71
g4883
sg64
(lp4899
g57
(g58
g59
NtRp4900
(dp4901
g62
(dp4902
g70
I5
ssg71
g4896
sg64
(lp4903
S'200'
p4904
asbasbasbag57
(g73
g59
NtRp4905
(dp4906
g62
(dp4907
sg71
g3803
sg64
(lp4908
g57
(g78
g59
NtRp4909
(dp4910
g62
(dp4911
g82
g83
ssg71
g4905
sg64
(lp4912
S'subtitle'
p4913
asbag57
(g78
g59
NtRp4914
(dp4915
g62
(dp4916
g89
g90
ssg71
g4905
sg64
(lp4917
S':'
asbag57
(g78
g59
NtRp4918
(dp4919
g62
(dp4920
sg71
g4905
sg64
(lp4921
g57
(g58
g59
NtRp4922
(dp4923
g62
(dp4924
g70
I5
ssg71
g4918
sg64
(lp4925
g4423
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4926
asbasbasbag57
(g73
g59
NtRp4927
(dp4928
g62
(dp4929
sg71
g3803
sg64
(lp4930
g57
(g78
g59
NtRp4931
(dp4932
g62
(dp4933
g82
g83
ssg71
g4927
sg64
(lp4934
g3669
asbag57
(g78
g59
NtRp4935
(dp4936
g62
(dp4937
g89
g90
ssg71
g4927
sg64
(lp4938
S':'
asbag57
(g78
g59
NtRp4939
(dp4940
g62
(dp4941
sg71
g4927
sg64
(lp4942
g57
(g58
g59
NtRp4943
(dp4944
g62
(dp4945
g70
I5
ssg71
g4939
sg64
(lp4946
g122
asbasbasbag57
(g73
g59
NtRp4947
(dp4948
g62
(dp4949
sg71
g3803
sg64
(lp4950
g57
(g78
g59
NtRp4951
(dp4952
g62
(dp4953
g82
g83
ssg71
g4947
sg64
(lp4954
S'view'
p4955
asbag57
(g78
g59
NtRp4956
(dp4957
g62
(dp4958
g89
g90
ssg71
g4947
sg64
(lp4959
S':'
asbag57
(g78
g59
NtRp4960
(dp4961
g62
(dp4962
sg71
g4947
sg64
(lp4963
g57
(g58
g59
NtRp4964
(dp4965
g62
(dp4966
g70
I5
ssg71
g4960
sg64
(lp4967
S'default/list_all_pub_projects.html'
p4968
asbasbasbasbasbsS'locals'
p4969
(dp4970
S'ck'
p4971
S"{'project': <Query (project.project_status = '1')>, 'sample': <Query (sample.publication_status = 'T')>}"
p4972
sS'fi'
p4973
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p4974
sS'q2'
p4975
S"<Query (sample.publication_status = 'T')>"
p4976
sS'q1'
p4977
S"<Query (project.project_status = '1')>"
p4978
sssS'traceback'
p4979
S'Traceback (most recent call last):\n  File "/home/anil/Downloads/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1154, in <module>\n  File "/home/anil/Downloads/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 286, in list_all_pub_projects\n    router(request.args)\nTypeError: router() takes no arguments (1 given)\n'
p4980
s.