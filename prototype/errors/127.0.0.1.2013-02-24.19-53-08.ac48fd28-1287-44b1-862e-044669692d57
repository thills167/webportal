(dp1
S'output'
p2
S"<type 'exceptions.SyntaxError'> when calling URL, function or function name required"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[1:4]\n    args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args)),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getid(a):\n    row = db(db.biosource.sample_name==a).select(db.biosource.id).first()\n    if row: \n        return row.id\n    else:\n        return 0\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.SyntaxError object>"
p13
sS'text'
p14
S'None'
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of exceptions.SyntaxError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of exceptions.SyntaxError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of exceptions.SyntaxError object>'
p23
sS'__init__'
p24
S"<method-wrapper '__init__' of exceptions.SyntaxError object>"
p25
sS'__setattr__'
p26
S"<method-wrapper '__setattr__' of exceptions.SyntaxError object>"
p27
sS'__reduce_ex__'
p28
S'<built-in method __reduce_ex__ of exceptions.SyntaxError object>'
p29
sS'__new__'
p30
S'<built-in method __new__ of type object>'
p31
sS'__format__'
p32
S'<built-in method __format__ of exceptions.SyntaxError object>'
p33
sS'__class__'
p34
S"<type 'exceptions.SyntaxError'>"
p35
sS'filename'
p36
S'None'
p37
sS'lineno'
p38
S'None'
p39
sS'msg'
p40
S"'when calling URL, function or function name required'"
p41
sS'__doc__'
p42
S"'Invalid syntax.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of exceptions.SyntaxError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of exceptions.SyntaxError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of exceptions.SyntaxError object>"
p49
sS'print_file_and_line'
p50
S'None'
p51
sS'args'
p52
S"('when calling URL, function or function name required',)"
p53
sS'__subclasshook__'
p54
S'<built-in method __subclasshook__ of type object>'
p55
sS'offset'
p56
S'None'
p57
sS'__unicode__'
p58
S'<built-in method __unicode__ of exceptions.SyntaxError object>'
p59
sS'__delattr__'
p60
S"<method-wrapper '__delattr__' of exceptions.SyntaxError object>"
p61
sS'__repr__'
p62
S"<method-wrapper '__repr__' of exceptions.SyntaxError object>"
p63
sS'__hash__'
p64
S"<method-wrapper '__hash__' of exceptions.SyntaxError object>"
p65
ssS'evalue'
p66
S'when calling URL, function or function name required'
p67
sS'request'
p68
ccopy_reg
_reconstructor
p69
(cgluon.html
BEAUTIFY
p70
c__builtin__
object
p71
NtRp72
(dp73
S'attributes'
p74
(dp75
sS'components'
p76
(lp77
g69
(cgluon.html
TABLE
p78
g71
NtRp79
(dp80
g74
(dp81
S'level'
p82
I5
ssS'parent'
p83
Nsg76
(lp84
g69
(cgluon.html
TR
p85
g71
NtRp86
(dp87
g74
(dp88
sg83
g79
sg76
(lp89
g69
(cgluon.html
TD
p90
g71
NtRp91
(dp92
g74
(dp93
S'_style'
p94
S'font-weight:bold;vertical-align:top'
p95
ssg83
g86
sg76
(lp96
S'ajax'
p97
asbag69
(g90
g71
NtRp98
(dp99
g74
(dp100
S'_valign'
p101
S'top'
p102
ssg83
g86
sg76
(lp103
S':'
asbag69
(g90
g71
NtRp104
(dp105
g74
(dp106
sg83
g86
sg76
(lp107
g69
(g70
g71
NtRp108
(dp109
g74
(dp110
g82
I5
ssg83
g104
sg76
(lp111
S'False'
p112
asbasbasbag69
(g85
g71
NtRp113
(dp114
g74
(dp115
sg83
g79
sg76
(lp116
g69
(g90
g71
NtRp117
(dp118
g74
(dp119
g94
g95
ssg83
g113
sg76
(lp120
S'application'
p121
asbag69
(g90
g71
NtRp122
(dp123
g74
(dp124
g101
g102
ssg83
g113
sg76
(lp125
S':'
asbag69
(g90
g71
NtRp126
(dp127
g74
(dp128
sg83
g113
sg76
(lp129
g69
(g70
g71
NtRp130
(dp131
g74
(dp132
g82
I5
ssg83
g126
sg76
(lp133
S'DEV_bootstrap_ch'
p134
asbasbasbag69
(g85
g71
NtRp135
(dp136
g74
(dp137
sg83
g79
sg76
(lp138
g69
(g90
g71
NtRp139
(dp140
g74
(dp141
g94
g95
ssg83
g135
sg76
(lp142
g52
asbag69
(g90
g71
NtRp143
(dp144
g74
(dp145
g101
g102
ssg83
g135
sg76
(lp146
S':'
asbag69
(g90
g71
NtRp147
(dp148
g74
(dp149
sg83
g135
sg76
(lp150
g69
(g70
g71
NtRp151
(dp152
g74
(dp153
g82
I5
ssg83
g147
sg76
(lp154
g69
(g78
g71
NtRp155
(dp156
g74
(dp157
g82
I4
ssg83
Nsg76
(lp158
g69
(g85
g71
NtRp159
(dp160
g74
(dp161
sg83
g155
sg76
(lp162
g69
(g90
g71
NtRp163
(dp164
g74
(dp165
sg83
g159
sg76
(lp166
g69
(g70
g71
NtRp167
(dp168
g74
(dp169
g82
I4
ssg83
g163
sg76
(lp170
S'project'
p171
asbasbasbag69
(g85
g71
NtRp172
(dp173
g74
(dp174
sg83
g155
sg76
(lp175
g69
(g90
g71
NtRp176
(dp177
g74
(dp178
sg83
g172
sg76
(lp179
g69
(g70
g71
NtRp180
(dp181
g74
(dp182
g82
I4
ssg83
g176
sg76
(lp183
S'experiment.project'
p184
asbasbasbag69
(g85
g71
NtRp185
(dp186
g74
(dp187
sg83
g155
sg76
(lp188
g69
(g90
g71
NtRp189
(dp190
g74
(dp191
sg83
g185
sg76
(lp192
g69
(g70
g71
NtRp193
(dp194
g74
(dp195
g82
I4
ssg83
g189
sg76
(lp196
S'1'
asbasbasbag69
(g85
g71
NtRp197
(dp198
g74
(dp199
sg83
g155
sg76
(lp200
g69
(g90
g71
NtRp201
(dp202
g74
(dp203
sg83
g197
sg76
(lp204
g69
(g70
g71
NtRp205
(dp206
g74
(dp207
g82
I4
ssg83
g201
sg76
(lp208
S'sample.experiment'
p209
asbasbasbag69
(g85
g71
NtRp210
(dp211
g74
(dp212
sg83
g155
sg76
(lp213
g69
(g90
g71
NtRp214
(dp215
g74
(dp216
sg83
g210
sg76
(lp217
g69
(g70
g71
NtRp218
(dp219
g74
(dp220
g82
I4
ssg83
g214
sg76
(lp221
S'1'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp222
(dp223
g74
(dp224
sg83
g79
sg76
(lp225
g69
(g90
g71
NtRp226
(dp227
g74
(dp228
g94
g95
ssg83
g222
sg76
(lp229
S'body'
p230
asbag69
(g90
g71
NtRp231
(dp232
g74
(dp233
g101
g102
ssg83
g222
sg76
(lp234
S':'
asbag69
(g90
g71
NtRp235
(dp236
g74
(dp237
sg83
g222
sg76
(lp238
g69
(g70
g71
NtRp239
(dp240
g74
(dp241
g82
I5
ssg83
g235
sg76
(lp242
S'<cStringIO.StringO object at 0xabb1bc0>'
p243
asbasbasbag69
(g85
g71
NtRp244
(dp245
g74
(dp246
sg83
g79
sg76
(lp247
g69
(g90
g71
NtRp248
(dp249
g74
(dp250
g94
g95
ssg83
g244
sg76
(lp251
S'cid'
p252
asbag69
(g90
g71
NtRp253
(dp254
g74
(dp255
g101
g102
ssg83
g244
sg76
(lp256
S':'
asbag69
(g90
g71
NtRp257
(dp258
g74
(dp259
sg83
g244
sg76
(lp260
g69
(g70
g71
NtRp261
(dp262
g74
(dp263
g82
I5
ssg83
g257
sg76
(lp264
S'None'
p265
asbasbasbag69
(g85
g71
NtRp266
(dp267
g74
(dp268
sg83
g79
sg76
(lp269
g69
(g90
g71
NtRp270
(dp271
g74
(dp272
g94
g95
ssg83
g266
sg76
(lp273
S'client'
p274
asbag69
(g90
g71
NtRp275
(dp276
g74
(dp277
g101
g102
ssg83
g266
sg76
(lp278
S':'
asbag69
(g90
g71
NtRp279
(dp280
g74
(dp281
sg83
g266
sg76
(lp282
g69
(g70
g71
NtRp283
(dp284
g74
(dp285
g82
I5
ssg83
g279
sg76
(lp286
S'127.0.0.1'
p287
asbasbasbag69
(g85
g71
NtRp288
(dp289
g74
(dp290
sg83
g79
sg76
(lp291
g69
(g90
g71
NtRp292
(dp293
g74
(dp294
g94
g95
ssg83
g288
sg76
(lp295
S'controller'
p296
asbag69
(g90
g71
NtRp297
(dp298
g74
(dp299
g101
g102
ssg83
g288
sg76
(lp300
S':'
asbag69
(g90
g71
NtRp301
(dp302
g74
(dp303
sg83
g288
sg76
(lp304
g69
(g70
g71
NtRp305
(dp306
g74
(dp307
g82
I5
ssg83
g301
sg76
(lp308
S'default'
p309
asbasbasbag69
(g85
g71
NtRp310
(dp311
g74
(dp312
sg83
g79
sg76
(lp313
g69
(g90
g71
NtRp314
(dp315
g74
(dp316
g94
g95
ssg83
g310
sg76
(lp317
S'cookies'
p318
asbag69
(g90
g71
NtRp319
(dp320
g74
(dp321
g101
g102
ssg83
g310
sg76
(lp322
S':'
asbag69
(g90
g71
NtRp323
(dp324
g74
(dp325
sg83
g310
sg76
(lp326
g69
(g70
g71
NtRp327
(dp328
g74
(dp329
g82
I5
ssg83
g323
sg76
(lp330
g69
(g78
g71
NtRp331
(dp332
g74
(dp333
g82
I4
ssg83
Nsg76
(lp334
g69
(g85
g71
NtRp335
(dp336
g74
(dp337
sg83
g331
sg76
(lp338
g69
(g90
g71
NtRp339
(dp340
g74
(dp341
g94
g95
ssg83
g335
sg76
(lp342
S'session_id_admin'
p343
asbag69
(g90
g71
NtRp344
(dp345
g74
(dp346
g101
g102
ssg83
g335
sg76
(lp347
S':'
asbag69
(g90
g71
NtRp348
(dp349
g74
(dp350
sg83
g335
sg76
(lp351
g69
(g70
g71
NtRp352
(dp353
g74
(dp354
g82
I4
ssg83
g348
sg76
(lp355
S'127.0.0.1-af6694ee-0328-42c6-942b-86a3eea3584b'
p356
ag69
(g78
g71
NtRp357
(dp358
g74
(dp359
g82
I3
ssg83
Nsg76
(lp360
g69
(g85
g71
NtRp361
(dp362
g74
(dp363
sg83
g357
sg76
(lp364
g69
(g90
g71
NtRp365
(dp366
g74
(dp367
g94
g95
ssg83
g361
sg76
(lp368
S'comment'
p369
asbag69
(g90
g71
NtRp370
(dp371
g74
(dp372
g101
g102
ssg83
g361
sg76
(lp373
S':'
asbag69
(g90
g71
NtRp374
(dp375
g74
(dp376
sg83
g361
sg76
(lp377
g69
(g70
g71
NtRp378
(dp379
g74
(dp380
g82
I3
ssg83
g374
sg76
(lp381
S''
asbasbasbag69
(g85
g71
NtRp382
(dp383
g74
(dp384
sg83
g357
sg76
(lp385
g69
(g90
g71
NtRp386
(dp387
g74
(dp388
g94
g95
ssg83
g382
sg76
(lp389
S'domain'
p390
asbag69
(g90
g71
NtRp391
(dp392
g74
(dp393
g101
g102
ssg83
g382
sg76
(lp394
S':'
asbag69
(g90
g71
NtRp395
(dp396
g74
(dp397
sg83
g382
sg76
(lp398
g69
(g70
g71
NtRp399
(dp400
g74
(dp401
g82
I3
ssg83
g395
sg76
(lp402
S''
asbasbasbag69
(g85
g71
NtRp403
(dp404
g74
(dp405
sg83
g357
sg76
(lp406
g69
(g90
g71
NtRp407
(dp408
g74
(dp409
g94
g95
ssg83
g403
sg76
(lp410
S'expires'
p411
asbag69
(g90
g71
NtRp412
(dp413
g74
(dp414
g101
g102
ssg83
g403
sg76
(lp415
S':'
asbag69
(g90
g71
NtRp416
(dp417
g74
(dp418
sg83
g403
sg76
(lp419
g69
(g70
g71
NtRp420
(dp421
g74
(dp422
g82
I3
ssg83
g416
sg76
(lp423
S''
asbasbasbag69
(g85
g71
NtRp424
(dp425
g74
(dp426
sg83
g357
sg76
(lp427
g69
(g90
g71
NtRp428
(dp429
g74
(dp430
g94
g95
ssg83
g424
sg76
(lp431
S'httponly'
p432
asbag69
(g90
g71
NtRp433
(dp434
g74
(dp435
g101
g102
ssg83
g424
sg76
(lp436
S':'
asbag69
(g90
g71
NtRp437
(dp438
g74
(dp439
sg83
g424
sg76
(lp440
g69
(g70
g71
NtRp441
(dp442
g74
(dp443
g82
I3
ssg83
g437
sg76
(lp444
S''
asbasbasbag69
(g85
g71
NtRp445
(dp446
g74
(dp447
sg83
g357
sg76
(lp448
g69
(g90
g71
NtRp449
(dp450
g74
(dp451
g94
g95
ssg83
g445
sg76
(lp452
S'max-age'
p453
asbag69
(g90
g71
NtRp454
(dp455
g74
(dp456
g101
g102
ssg83
g445
sg76
(lp457
S':'
asbag69
(g90
g71
NtRp458
(dp459
g74
(dp460
sg83
g445
sg76
(lp461
g69
(g70
g71
NtRp462
(dp463
g74
(dp464
g82
I3
ssg83
g458
sg76
(lp465
S''
asbasbasbag69
(g85
g71
NtRp466
(dp467
g74
(dp468
sg83
g357
sg76
(lp469
g69
(g90
g71
NtRp470
(dp471
g74
(dp472
g94
g95
ssg83
g466
sg76
(lp473
S'path'
p474
asbag69
(g90
g71
NtRp475
(dp476
g74
(dp477
g101
g102
ssg83
g466
sg76
(lp478
S':'
asbag69
(g90
g71
NtRp479
(dp480
g74
(dp481
sg83
g466
sg76
(lp482
g69
(g70
g71
NtRp483
(dp484
g74
(dp485
g82
I3
ssg83
g479
sg76
(lp486
S''
asbasbasbag69
(g85
g71
NtRp487
(dp488
g74
(dp489
sg83
g357
sg76
(lp490
g69
(g90
g71
NtRp491
(dp492
g74
(dp493
g94
g95
ssg83
g487
sg76
(lp494
S'secure'
p495
asbag69
(g90
g71
NtRp496
(dp497
g74
(dp498
g101
g102
ssg83
g487
sg76
(lp499
S':'
asbag69
(g90
g71
NtRp500
(dp501
g74
(dp502
sg83
g487
sg76
(lp503
g69
(g70
g71
NtRp504
(dp505
g74
(dp506
g82
I3
ssg83
g500
sg76
(lp507
S''
asbasbasbag69
(g85
g71
NtRp508
(dp509
g74
(dp510
sg83
g357
sg76
(lp511
g69
(g90
g71
NtRp512
(dp513
g74
(dp514
g94
g95
ssg83
g508
sg76
(lp515
S'version'
p516
asbag69
(g90
g71
NtRp517
(dp518
g74
(dp519
g101
g102
ssg83
g508
sg76
(lp520
S':'
asbag69
(g90
g71
NtRp521
(dp522
g74
(dp523
sg83
g508
sg76
(lp524
g69
(g70
g71
NtRp525
(dp526
g74
(dp527
g82
I3
ssg83
g521
sg76
(lp528
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp529
(dp530
g74
(dp531
sg83
g331
sg76
(lp532
g69
(g90
g71
NtRp533
(dp534
g74
(dp535
g94
g95
ssg83
g529
sg76
(lp536
S'session_id_dev_bootstrap'
p537
asbag69
(g90
g71
NtRp538
(dp539
g74
(dp540
g101
g102
ssg83
g529
sg76
(lp541
S':'
asbag69
(g90
g71
NtRp542
(dp543
g74
(dp544
sg83
g529
sg76
(lp545
g69
(g70
g71
NtRp546
(dp547
g74
(dp548
g82
I4
ssg83
g542
sg76
(lp549
S'127.0.0.1-d1c89174-3f24-4a7c-b8b8-87c1b3424426'
p550
ag69
(g78
g71
NtRp551
(dp552
g74
(dp553
g82
I3
ssg83
Nsg76
(lp554
g69
(g85
g71
NtRp555
(dp556
g74
(dp557
sg83
g551
sg76
(lp558
g69
(g90
g71
NtRp559
(dp560
g74
(dp561
g94
g95
ssg83
g555
sg76
(lp562
g369
asbag69
(g90
g71
NtRp563
(dp564
g74
(dp565
g101
g102
ssg83
g555
sg76
(lp566
S':'
asbag69
(g90
g71
NtRp567
(dp568
g74
(dp569
sg83
g555
sg76
(lp570
g69
(g70
g71
NtRp571
(dp572
g74
(dp573
g82
I3
ssg83
g567
sg76
(lp574
S''
asbasbasbag69
(g85
g71
NtRp575
(dp576
g74
(dp577
sg83
g551
sg76
(lp578
g69
(g90
g71
NtRp579
(dp580
g74
(dp581
g94
g95
ssg83
g575
sg76
(lp582
g390
asbag69
(g90
g71
NtRp583
(dp584
g74
(dp585
g101
g102
ssg83
g575
sg76
(lp586
S':'
asbag69
(g90
g71
NtRp587
(dp588
g74
(dp589
sg83
g575
sg76
(lp590
g69
(g70
g71
NtRp591
(dp592
g74
(dp593
g82
I3
ssg83
g587
sg76
(lp594
S''
asbasbasbag69
(g85
g71
NtRp595
(dp596
g74
(dp597
sg83
g551
sg76
(lp598
g69
(g90
g71
NtRp599
(dp600
g74
(dp601
g94
g95
ssg83
g595
sg76
(lp602
g411
asbag69
(g90
g71
NtRp603
(dp604
g74
(dp605
g101
g102
ssg83
g595
sg76
(lp606
S':'
asbag69
(g90
g71
NtRp607
(dp608
g74
(dp609
sg83
g595
sg76
(lp610
g69
(g70
g71
NtRp611
(dp612
g74
(dp613
g82
I3
ssg83
g607
sg76
(lp614
S''
asbasbasbag69
(g85
g71
NtRp615
(dp616
g74
(dp617
sg83
g551
sg76
(lp618
g69
(g90
g71
NtRp619
(dp620
g74
(dp621
g94
g95
ssg83
g615
sg76
(lp622
g432
asbag69
(g90
g71
NtRp623
(dp624
g74
(dp625
g101
g102
ssg83
g615
sg76
(lp626
S':'
asbag69
(g90
g71
NtRp627
(dp628
g74
(dp629
sg83
g615
sg76
(lp630
g69
(g70
g71
NtRp631
(dp632
g74
(dp633
g82
I3
ssg83
g627
sg76
(lp634
S''
asbasbasbag69
(g85
g71
NtRp635
(dp636
g74
(dp637
sg83
g551
sg76
(lp638
g69
(g90
g71
NtRp639
(dp640
g74
(dp641
g94
g95
ssg83
g635
sg76
(lp642
g453
asbag69
(g90
g71
NtRp643
(dp644
g74
(dp645
g101
g102
ssg83
g635
sg76
(lp646
S':'
asbag69
(g90
g71
NtRp647
(dp648
g74
(dp649
sg83
g635
sg76
(lp650
g69
(g70
g71
NtRp651
(dp652
g74
(dp653
g82
I3
ssg83
g647
sg76
(lp654
S''
asbasbasbag69
(g85
g71
NtRp655
(dp656
g74
(dp657
sg83
g551
sg76
(lp658
g69
(g90
g71
NtRp659
(dp660
g74
(dp661
g94
g95
ssg83
g655
sg76
(lp662
g474
asbag69
(g90
g71
NtRp663
(dp664
g74
(dp665
g101
g102
ssg83
g655
sg76
(lp666
S':'
asbag69
(g90
g71
NtRp667
(dp668
g74
(dp669
sg83
g655
sg76
(lp670
g69
(g70
g71
NtRp671
(dp672
g74
(dp673
g82
I3
ssg83
g667
sg76
(lp674
S''
asbasbasbag69
(g85
g71
NtRp675
(dp676
g74
(dp677
sg83
g551
sg76
(lp678
g69
(g90
g71
NtRp679
(dp680
g74
(dp681
g94
g95
ssg83
g675
sg76
(lp682
g495
asbag69
(g90
g71
NtRp683
(dp684
g74
(dp685
g101
g102
ssg83
g675
sg76
(lp686
S':'
asbag69
(g90
g71
NtRp687
(dp688
g74
(dp689
sg83
g675
sg76
(lp690
g69
(g70
g71
NtRp691
(dp692
g74
(dp693
g82
I3
ssg83
g687
sg76
(lp694
S''
asbasbasbag69
(g85
g71
NtRp695
(dp696
g74
(dp697
sg83
g551
sg76
(lp698
g69
(g90
g71
NtRp699
(dp700
g74
(dp701
g94
g95
ssg83
g695
sg76
(lp702
g516
asbag69
(g90
g71
NtRp703
(dp704
g74
(dp705
g101
g102
ssg83
g695
sg76
(lp706
S':'
asbag69
(g90
g71
NtRp707
(dp708
g74
(dp709
sg83
g695
sg76
(lp710
g69
(g70
g71
NtRp711
(dp712
g74
(dp713
g82
I3
ssg83
g707
sg76
(lp714
S''
asbasbasbasbasbasbasbag69
(g85
g71
NtRp715
(dp716
g74
(dp717
sg83
g331
sg76
(lp718
g69
(g90
g71
NtRp719
(dp720
g74
(dp721
g94
g95
ssg83
g715
sg76
(lp722
S'session_id_dev_bootstrap_ch'
p723
asbag69
(g90
g71
NtRp724
(dp725
g74
(dp726
g101
g102
ssg83
g715
sg76
(lp727
S':'
asbag69
(g90
g71
NtRp728
(dp729
g74
(dp730
sg83
g715
sg76
(lp731
g69
(g70
g71
NtRp732
(dp733
g74
(dp734
g82
I4
ssg83
g728
sg76
(lp735
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p736
ag69
(g78
g71
NtRp737
(dp738
g74
(dp739
g82
I3
ssg83
Nsg76
(lp740
g69
(g85
g71
NtRp741
(dp742
g74
(dp743
sg83
g737
sg76
(lp744
g69
(g90
g71
NtRp745
(dp746
g74
(dp747
g94
g95
ssg83
g741
sg76
(lp748
g369
asbag69
(g90
g71
NtRp749
(dp750
g74
(dp751
g101
g102
ssg83
g741
sg76
(lp752
S':'
asbag69
(g90
g71
NtRp753
(dp754
g74
(dp755
sg83
g741
sg76
(lp756
g69
(g70
g71
NtRp757
(dp758
g74
(dp759
g82
I3
ssg83
g753
sg76
(lp760
S''
asbasbasbag69
(g85
g71
NtRp761
(dp762
g74
(dp763
sg83
g737
sg76
(lp764
g69
(g90
g71
NtRp765
(dp766
g74
(dp767
g94
g95
ssg83
g761
sg76
(lp768
g390
asbag69
(g90
g71
NtRp769
(dp770
g74
(dp771
g101
g102
ssg83
g761
sg76
(lp772
S':'
asbag69
(g90
g71
NtRp773
(dp774
g74
(dp775
sg83
g761
sg76
(lp776
g69
(g70
g71
NtRp777
(dp778
g74
(dp779
g82
I3
ssg83
g773
sg76
(lp780
S''
asbasbasbag69
(g85
g71
NtRp781
(dp782
g74
(dp783
sg83
g737
sg76
(lp784
g69
(g90
g71
NtRp785
(dp786
g74
(dp787
g94
g95
ssg83
g781
sg76
(lp788
g411
asbag69
(g90
g71
NtRp789
(dp790
g74
(dp791
g101
g102
ssg83
g781
sg76
(lp792
S':'
asbag69
(g90
g71
NtRp793
(dp794
g74
(dp795
sg83
g781
sg76
(lp796
g69
(g70
g71
NtRp797
(dp798
g74
(dp799
g82
I3
ssg83
g793
sg76
(lp800
S''
asbasbasbag69
(g85
g71
NtRp801
(dp802
g74
(dp803
sg83
g737
sg76
(lp804
g69
(g90
g71
NtRp805
(dp806
g74
(dp807
g94
g95
ssg83
g801
sg76
(lp808
g432
asbag69
(g90
g71
NtRp809
(dp810
g74
(dp811
g101
g102
ssg83
g801
sg76
(lp812
S':'
asbag69
(g90
g71
NtRp813
(dp814
g74
(dp815
sg83
g801
sg76
(lp816
g69
(g70
g71
NtRp817
(dp818
g74
(dp819
g82
I3
ssg83
g813
sg76
(lp820
S''
asbasbasbag69
(g85
g71
NtRp821
(dp822
g74
(dp823
sg83
g737
sg76
(lp824
g69
(g90
g71
NtRp825
(dp826
g74
(dp827
g94
g95
ssg83
g821
sg76
(lp828
g453
asbag69
(g90
g71
NtRp829
(dp830
g74
(dp831
g101
g102
ssg83
g821
sg76
(lp832
S':'
asbag69
(g90
g71
NtRp833
(dp834
g74
(dp835
sg83
g821
sg76
(lp836
g69
(g70
g71
NtRp837
(dp838
g74
(dp839
g82
I3
ssg83
g833
sg76
(lp840
S''
asbasbasbag69
(g85
g71
NtRp841
(dp842
g74
(dp843
sg83
g737
sg76
(lp844
g69
(g90
g71
NtRp845
(dp846
g74
(dp847
g94
g95
ssg83
g841
sg76
(lp848
g474
asbag69
(g90
g71
NtRp849
(dp850
g74
(dp851
g101
g102
ssg83
g841
sg76
(lp852
S':'
asbag69
(g90
g71
NtRp853
(dp854
g74
(dp855
sg83
g841
sg76
(lp856
g69
(g70
g71
NtRp857
(dp858
g74
(dp859
g82
I3
ssg83
g853
sg76
(lp860
S''
asbasbasbag69
(g85
g71
NtRp861
(dp862
g74
(dp863
sg83
g737
sg76
(lp864
g69
(g90
g71
NtRp865
(dp866
g74
(dp867
g94
g95
ssg83
g861
sg76
(lp868
g495
asbag69
(g90
g71
NtRp869
(dp870
g74
(dp871
g101
g102
ssg83
g861
sg76
(lp872
S':'
asbag69
(g90
g71
NtRp873
(dp874
g74
(dp875
sg83
g861
sg76
(lp876
g69
(g70
g71
NtRp877
(dp878
g74
(dp879
g82
I3
ssg83
g873
sg76
(lp880
S''
asbasbasbag69
(g85
g71
NtRp881
(dp882
g74
(dp883
sg83
g737
sg76
(lp884
g69
(g90
g71
NtRp885
(dp886
g74
(dp887
g94
g95
ssg83
g881
sg76
(lp888
g516
asbag69
(g90
g71
NtRp889
(dp890
g74
(dp891
g101
g102
ssg83
g881
sg76
(lp892
S':'
asbag69
(g90
g71
NtRp893
(dp894
g74
(dp895
sg83
g881
sg76
(lp896
g69
(g70
g71
NtRp897
(dp898
g74
(dp899
g82
I3
ssg83
g893
sg76
(lp900
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp901
(dp902
g74
(dp903
sg83
g79
sg76
(lp904
g69
(g90
g71
NtRp905
(dp906
g74
(dp907
g94
g95
ssg83
g901
sg76
(lp908
S'env'
p909
asbag69
(g90
g71
NtRp910
(dp911
g74
(dp912
g101
g102
ssg83
g901
sg76
(lp913
S':'
asbag69
(g90
g71
NtRp914
(dp915
g74
(dp916
sg83
g901
sg76
(lp917
g69
(g70
g71
NtRp918
(dp919
g74
(dp920
g82
I5
ssg83
g914
sg76
(lp921
g69
(g78
g71
NtRp922
(dp923
g74
(dp924
g82
I4
ssg83
Nsg76
(lp925
g69
(g85
g71
NtRp926
(dp927
g74
(dp928
sg83
g922
sg76
(lp929
g69
(g90
g71
NtRp930
(dp931
g74
(dp932
g94
g95
ssg83
g926
sg76
(lp933
S'app_folders'
p934
asbag69
(g90
g71
NtRp935
(dp936
g74
(dp937
g101
g102
ssg83
g926
sg76
(lp938
S':'
asbag69
(g90
g71
NtRp939
(dp940
g74
(dp941
sg83
g926
sg76
(lp942
g69
(g70
g71
NtRp943
(dp944
g74
(dp945
g82
I4
ssg83
g939
sg76
(lp946
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p947
asbasbasbag69
(g85
g71
NtRp948
(dp949
g74
(dp950
sg83
g922
sg76
(lp951
g69
(g90
g71
NtRp952
(dp953
g74
(dp954
g94
g95
ssg83
g948
sg76
(lp955
S'applications_parent'
p956
asbag69
(g90
g71
NtRp957
(dp958
g74
(dp959
g101
g102
ssg83
g948
sg76
(lp960
S':'
asbag69
(g90
g71
NtRp961
(dp962
g74
(dp963
sg83
g948
sg76
(lp964
g69
(g70
g71
NtRp965
(dp966
g74
(dp967
g82
I4
ssg83
g961
sg76
(lp968
S'/home/anil/bootstrap/web2py'
p969
asbasbasbag69
(g85
g71
NtRp970
(dp971
g74
(dp972
sg83
g922
sg76
(lp973
g69
(g90
g71
NtRp974
(dp975
g74
(dp976
g94
g95
ssg83
g970
sg76
(lp977
S'cmd_args'
p978
asbag69
(g90
g71
NtRp979
(dp980
g74
(dp981
g101
g102
ssg83
g970
sg76
(lp982
S':'
asbag69
(g90
g71
NtRp983
(dp984
g74
(dp985
sg83
g970
sg76
(lp986
g69
(g70
g71
NtRp987
(dp988
g74
(dp989
g82
I4
ssg83
g983
sg76
(lp990
g69
(g78
g71
NtRp991
(dp992
g74
(dp993
g82
I3
ssg83
Nsg76
(lp994
sbasbasbasbag69
(g85
g71
NtRp995
(dp996
g74
(dp997
sg83
g922
sg76
(lp998
g69
(g90
g71
NtRp999
(dp1000
g74
(dp1001
g94
g95
ssg83
g995
sg76
(lp1002
S'cmd_options'
p1003
asbag69
(g90
g71
NtRp1004
(dp1005
g74
(dp1006
g101
g102
ssg83
g995
sg76
(lp1007
S':'
asbag69
(g90
g71
NtRp1008
(dp1009
g74
(dp1010
sg83
g995
sg76
(lp1011
g69
(g70
g71
NtRp1012
(dp1013
g74
(dp1014
g82
I4
ssg83
g1008
sg76
(lp1015
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1016
asbasbasbag69
(g85
g71
NtRp1017
(dp1018
g74
(dp1019
sg83
g922
sg76
(lp1020
g69
(g90
g71
NtRp1021
(dp1022
g74
(dp1023
g94
g95
ssg83
g1017
sg76
(lp1024
S'db_sessions'
p1025
asbag69
(g90
g71
NtRp1026
(dp1027
g74
(dp1028
g101
g102
ssg83
g1017
sg76
(lp1029
S':'
asbag69
(g90
g71
NtRp1030
(dp1031
g74
(dp1032
sg83
g1017
sg76
(lp1033
g69
(g70
g71
NtRp1034
(dp1035
g74
(dp1036
g82
I4
ssg83
g1030
sg76
(lp1037
S'set([])'
p1038
asbasbasbag69
(g85
g71
NtRp1039
(dp1040
g74
(dp1041
sg83
g922
sg76
(lp1042
g69
(g90
g71
NtRp1043
(dp1044
g74
(dp1045
g94
g95
ssg83
g1039
sg76
(lp1046
S'debugging'
p1047
asbag69
(g90
g71
NtRp1048
(dp1049
g74
(dp1050
g101
g102
ssg83
g1039
sg76
(lp1051
S':'
asbag69
(g90
g71
NtRp1052
(dp1053
g74
(dp1054
sg83
g1039
sg76
(lp1055
g69
(g70
g71
NtRp1056
(dp1057
g74
(dp1058
g82
I4
ssg83
g1052
sg76
(lp1059
g112
asbasbasbag69
(g85
g71
NtRp1060
(dp1061
g74
(dp1062
sg83
g922
sg76
(lp1063
g69
(g90
g71
NtRp1064
(dp1065
g74
(dp1066
g94
g95
ssg83
g1060
sg76
(lp1067
S'gluon_parent'
p1068
asbag69
(g90
g71
NtRp1069
(dp1070
g74
(dp1071
g101
g102
ssg83
g1060
sg76
(lp1072
S':'
asbag69
(g90
g71
NtRp1073
(dp1074
g74
(dp1075
sg83
g1060
sg76
(lp1076
g69
(g70
g71
NtRp1077
(dp1078
g74
(dp1079
g82
I4
ssg83
g1073
sg76
(lp1080
S'/home/anil/bootstrap/web2py'
p1081
asbasbasbag69
(g85
g71
NtRp1082
(dp1083
g74
(dp1084
sg83
g922
sg76
(lp1085
g69
(g90
g71
NtRp1086
(dp1087
g74
(dp1088
g94
g95
ssg83
g1082
sg76
(lp1089
S'http_accept'
p1090
asbag69
(g90
g71
NtRp1091
(dp1092
g74
(dp1093
g101
g102
ssg83
g1082
sg76
(lp1094
S':'
asbag69
(g90
g71
NtRp1095
(dp1096
g74
(dp1097
sg83
g1082
sg76
(lp1098
g69
(g70
g71
NtRp1099
(dp1100
g74
(dp1101
g82
I4
ssg83
g1095
sg76
(lp1102
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1103
asbasbasbag69
(g85
g71
NtRp1104
(dp1105
g74
(dp1106
sg83
g922
sg76
(lp1107
g69
(g90
g71
NtRp1108
(dp1109
g74
(dp1110
g94
g95
ssg83
g1104
sg76
(lp1111
S'http_accept_charset'
p1112
asbag69
(g90
g71
NtRp1113
(dp1114
g74
(dp1115
g101
g102
ssg83
g1104
sg76
(lp1116
S':'
asbag69
(g90
g71
NtRp1117
(dp1118
g74
(dp1119
sg83
g1104
sg76
(lp1120
g69
(g70
g71
NtRp1121
(dp1122
g74
(dp1123
g82
I4
ssg83
g1117
sg76
(lp1124
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1125
asbasbasbag69
(g85
g71
NtRp1126
(dp1127
g74
(dp1128
sg83
g922
sg76
(lp1129
g69
(g90
g71
NtRp1130
(dp1131
g74
(dp1132
g94
g95
ssg83
g1126
sg76
(lp1133
S'http_accept_encoding'
p1134
asbag69
(g90
g71
NtRp1135
(dp1136
g74
(dp1137
g101
g102
ssg83
g1126
sg76
(lp1138
S':'
asbag69
(g90
g71
NtRp1139
(dp1140
g74
(dp1141
sg83
g1126
sg76
(lp1142
g69
(g70
g71
NtRp1143
(dp1144
g74
(dp1145
g82
I4
ssg83
g1139
sg76
(lp1146
S'gzip,deflate,sdch'
p1147
asbasbasbag69
(g85
g71
NtRp1148
(dp1149
g74
(dp1150
sg83
g922
sg76
(lp1151
g69
(g90
g71
NtRp1152
(dp1153
g74
(dp1154
g94
g95
ssg83
g1148
sg76
(lp1155
S'http_accept_language'
p1156
asbag69
(g90
g71
NtRp1157
(dp1158
g74
(dp1159
g101
g102
ssg83
g1148
sg76
(lp1160
S':'
asbag69
(g90
g71
NtRp1161
(dp1162
g74
(dp1163
sg83
g1148
sg76
(lp1164
g69
(g70
g71
NtRp1165
(dp1166
g74
(dp1167
g82
I4
ssg83
g1161
sg76
(lp1168
S'en-US,en;q=0.8'
p1169
asbasbasbag69
(g85
g71
NtRp1170
(dp1171
g74
(dp1172
sg83
g922
sg76
(lp1173
g69
(g90
g71
NtRp1174
(dp1175
g74
(dp1176
g94
g95
ssg83
g1170
sg76
(lp1177
S'http_cache_control'
p1178
asbag69
(g90
g71
NtRp1179
(dp1180
g74
(dp1181
g101
g102
ssg83
g1170
sg76
(lp1182
S':'
asbag69
(g90
g71
NtRp1183
(dp1184
g74
(dp1185
sg83
g1170
sg76
(lp1186
g69
(g70
g71
NtRp1187
(dp1188
g74
(dp1189
g82
I4
ssg83
g1183
sg76
(lp1190
S'max-age=0'
p1191
asbasbasbag69
(g85
g71
NtRp1192
(dp1193
g74
(dp1194
sg83
g922
sg76
(lp1195
g69
(g90
g71
NtRp1196
(dp1197
g74
(dp1198
g94
g95
ssg83
g1192
sg76
(lp1199
S'http_connection'
p1200
asbag69
(g90
g71
NtRp1201
(dp1202
g74
(dp1203
g101
g102
ssg83
g1192
sg76
(lp1204
S':'
asbag69
(g90
g71
NtRp1205
(dp1206
g74
(dp1207
sg83
g1192
sg76
(lp1208
g69
(g70
g71
NtRp1209
(dp1210
g74
(dp1211
g82
I4
ssg83
g1205
sg76
(lp1212
S'keep-alive'
p1213
asbasbasbag69
(g85
g71
NtRp1214
(dp1215
g74
(dp1216
sg83
g922
sg76
(lp1217
g69
(g90
g71
NtRp1218
(dp1219
g74
(dp1220
g94
g95
ssg83
g1214
sg76
(lp1221
S'http_cookie'
p1222
asbag69
(g90
g71
NtRp1223
(dp1224
g74
(dp1225
g101
g102
ssg83
g1214
sg76
(lp1226
S':'
asbag69
(g90
g71
NtRp1227
(dp1228
g74
(dp1229
sg83
g1214
sg76
(lp1230
g69
(g70
g71
NtRp1231
(dp1232
g74
(dp1233
g82
I4
ssg83
g1227
sg76
(lp1234
S'session_id_dev_bootstrap=127.0.0.1-d1c89174-3f24-4a7c-b8b8-87c1b3424426; session_id_admin=127.0.0.1-af6694ee-0328-42c6-942b-86a3eea3584b; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1235
asbasbasbag69
(g85
g71
NtRp1236
(dp1237
g74
(dp1238
sg83
g922
sg76
(lp1239
g69
(g90
g71
NtRp1240
(dp1241
g74
(dp1242
g94
g95
ssg83
g1236
sg76
(lp1243
S'http_host'
p1244
asbag69
(g90
g71
NtRp1245
(dp1246
g74
(dp1247
g101
g102
ssg83
g1236
sg76
(lp1248
S':'
asbag69
(g90
g71
NtRp1249
(dp1250
g74
(dp1251
sg83
g1236
sg76
(lp1252
g69
(g70
g71
NtRp1253
(dp1254
g74
(dp1255
g82
I4
ssg83
g1249
sg76
(lp1256
S'127.0.0.1:8000'
p1257
asbasbasbag69
(g85
g71
NtRp1258
(dp1259
g74
(dp1260
sg83
g922
sg76
(lp1261
g69
(g90
g71
NtRp1262
(dp1263
g74
(dp1264
g94
g95
ssg83
g1258
sg76
(lp1265
S'http_referer'
p1266
asbag69
(g90
g71
NtRp1267
(dp1268
g74
(dp1269
g101
g102
ssg83
g1258
sg76
(lp1270
S':'
asbag69
(g90
g71
NtRp1271
(dp1272
g74
(dp1273
sg83
g1258
sg76
(lp1274
g69
(g70
g71
NtRp1275
(dp1276
g74
(dp1277
g82
I4
ssg83
g1271
sg76
(lp1278
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1?_signature=8aef72d33b5363f25a18293cd546d9db5dd19d0b'
p1279
asbasbasbag69
(g85
g71
NtRp1280
(dp1281
g74
(dp1282
sg83
g922
sg76
(lp1283
g69
(g90
g71
NtRp1284
(dp1285
g74
(dp1286
g94
g95
ssg83
g1280
sg76
(lp1287
S'http_user_agent'
p1288
asbag69
(g90
g71
NtRp1289
(dp1290
g74
(dp1291
g101
g102
ssg83
g1280
sg76
(lp1292
S':'
asbag69
(g90
g71
NtRp1293
(dp1294
g74
(dp1295
sg83
g1280
sg76
(lp1296
g69
(g70
g71
NtRp1297
(dp1298
g74
(dp1299
g82
I4
ssg83
g1293
sg76
(lp1300
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1301
asbasbasbag69
(g85
g71
NtRp1302
(dp1303
g74
(dp1304
sg83
g922
sg76
(lp1305
g69
(g90
g71
NtRp1306
(dp1307
g74
(dp1308
g94
g95
ssg83
g1302
sg76
(lp1309
S'is_jython'
p1310
asbag69
(g90
g71
NtRp1311
(dp1312
g74
(dp1313
g101
g102
ssg83
g1302
sg76
(lp1314
S':'
asbag69
(g90
g71
NtRp1315
(dp1316
g74
(dp1317
sg83
g1302
sg76
(lp1318
g69
(g70
g71
NtRp1319
(dp1320
g74
(dp1321
g82
I4
ssg83
g1315
sg76
(lp1322
g112
asbasbasbag69
(g85
g71
NtRp1323
(dp1324
g74
(dp1325
sg83
g922
sg76
(lp1326
g69
(g90
g71
NtRp1327
(dp1328
g74
(dp1329
g94
g95
ssg83
g1323
sg76
(lp1330
S'is_pypy'
p1331
asbag69
(g90
g71
NtRp1332
(dp1333
g74
(dp1334
g101
g102
ssg83
g1323
sg76
(lp1335
S':'
asbag69
(g90
g71
NtRp1336
(dp1337
g74
(dp1338
sg83
g1323
sg76
(lp1339
g69
(g70
g71
NtRp1340
(dp1341
g74
(dp1342
g82
I4
ssg83
g1336
sg76
(lp1343
g112
asbasbasbag69
(g85
g71
NtRp1344
(dp1345
g74
(dp1346
sg83
g922
sg76
(lp1347
g69
(g90
g71
NtRp1348
(dp1349
g74
(dp1350
g94
g95
ssg83
g1344
sg76
(lp1351
S'local_hosts'
p1352
asbag69
(g90
g71
NtRp1353
(dp1354
g74
(dp1355
g101
g102
ssg83
g1344
sg76
(lp1356
S':'
asbag69
(g90
g71
NtRp1357
(dp1358
g74
(dp1359
sg83
g1344
sg76
(lp1360
g69
(g70
g71
NtRp1361
(dp1362
g74
(dp1363
g82
I4
ssg83
g1357
sg76
(lp1364
g69
(g78
g71
NtRp1365
(dp1366
g74
(dp1367
g82
I3
ssg83
Nsg76
(lp1368
g69
(g85
g71
NtRp1369
(dp1370
g74
(dp1371
sg83
g1365
sg76
(lp1372
g69
(g90
g71
NtRp1373
(dp1374
g74
(dp1375
sg83
g1369
sg76
(lp1376
g69
(g70
g71
NtRp1377
(dp1378
g74
(dp1379
g82
I3
ssg83
g1373
sg76
(lp1380
S'::1'
p1381
asbasbasbag69
(g85
g71
NtRp1382
(dp1383
g74
(dp1384
sg83
g1365
sg76
(lp1385
g69
(g90
g71
NtRp1386
(dp1387
g74
(dp1388
sg83
g1382
sg76
(lp1389
g69
(g70
g71
NtRp1390
(dp1391
g74
(dp1392
g82
I3
ssg83
g1386
sg76
(lp1393
S'127.0.1.1'
p1394
asbasbasbag69
(g85
g71
NtRp1395
(dp1396
g74
(dp1397
sg83
g1365
sg76
(lp1398
g69
(g90
g71
NtRp1399
(dp1400
g74
(dp1401
sg83
g1395
sg76
(lp1402
g69
(g70
g71
NtRp1403
(dp1404
g74
(dp1405
g82
I3
ssg83
g1399
sg76
(lp1406
S'::ffff:127.0.0.1'
p1407
asbasbasbag69
(g85
g71
NtRp1408
(dp1409
g74
(dp1410
sg83
g1365
sg76
(lp1411
g69
(g90
g71
NtRp1412
(dp1413
g74
(dp1414
sg83
g1408
sg76
(lp1415
g69
(g70
g71
NtRp1416
(dp1417
g74
(dp1418
g82
I3
ssg83
g1412
sg76
(lp1419
S'127.0.0.1'
p1420
asbasbasbag69
(g85
g71
NtRp1421
(dp1422
g74
(dp1423
sg83
g1365
sg76
(lp1424
g69
(g90
g71
NtRp1425
(dp1426
g74
(dp1427
sg83
g1421
sg76
(lp1428
g69
(g70
g71
NtRp1429
(dp1430
g74
(dp1431
g82
I3
ssg83
g1425
sg76
(lp1432
S'anil-Inspiron-1525'
p1433
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1434
(dp1435
g74
(dp1436
sg83
g922
sg76
(lp1437
g69
(g90
g71
NtRp1438
(dp1439
g74
(dp1440
g94
g95
ssg83
g1434
sg76
(lp1441
S'path_info'
p1442
asbag69
(g90
g71
NtRp1443
(dp1444
g74
(dp1445
g101
g102
ssg83
g1434
sg76
(lp1446
S':'
asbag69
(g90
g71
NtRp1447
(dp1448
g74
(dp1449
sg83
g1434
sg76
(lp1450
g69
(g70
g71
NtRp1451
(dp1452
g74
(dp1453
g82
I4
ssg83
g1447
sg76
(lp1454
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1'
p1455
asbasbasbag69
(g85
g71
NtRp1456
(dp1457
g74
(dp1458
sg83
g922
sg76
(lp1459
g69
(g90
g71
NtRp1460
(dp1461
g74
(dp1462
g94
g95
ssg83
g1456
sg76
(lp1463
S'query_string'
p1464
asbag69
(g90
g71
NtRp1465
(dp1466
g74
(dp1467
g101
g102
ssg83
g1456
sg76
(lp1468
S':'
asbag69
(g90
g71
NtRp1469
(dp1470
g74
(dp1471
sg83
g1456
sg76
(lp1472
g69
(g70
g71
NtRp1473
(dp1474
g74
(dp1475
g82
I4
ssg83
g1469
sg76
(lp1476
S'_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1477
asbasbasbag69
(g85
g71
NtRp1478
(dp1479
g74
(dp1480
sg83
g922
sg76
(lp1481
g69
(g90
g71
NtRp1482
(dp1483
g74
(dp1484
g94
g95
ssg83
g1478
sg76
(lp1485
S'remote_addr'
p1486
asbag69
(g90
g71
NtRp1487
(dp1488
g74
(dp1489
g101
g102
ssg83
g1478
sg76
(lp1490
S':'
asbag69
(g90
g71
NtRp1491
(dp1492
g74
(dp1493
sg83
g1478
sg76
(lp1494
g69
(g70
g71
NtRp1495
(dp1496
g74
(dp1497
g82
I4
ssg83
g1491
sg76
(lp1498
g287
asbasbasbag69
(g85
g71
NtRp1499
(dp1500
g74
(dp1501
sg83
g922
sg76
(lp1502
g69
(g90
g71
NtRp1503
(dp1504
g74
(dp1505
g94
g95
ssg83
g1499
sg76
(lp1506
S'remote_port'
p1507
asbag69
(g90
g71
NtRp1508
(dp1509
g74
(dp1510
g101
g102
ssg83
g1499
sg76
(lp1511
S':'
asbag69
(g90
g71
NtRp1512
(dp1513
g74
(dp1514
sg83
g1499
sg76
(lp1515
g69
(g70
g71
NtRp1516
(dp1517
g74
(dp1518
g82
I4
ssg83
g1512
sg76
(lp1519
S'41844'
p1520
asbasbasbag69
(g85
g71
NtRp1521
(dp1522
g74
(dp1523
sg83
g922
sg76
(lp1524
g69
(g90
g71
NtRp1525
(dp1526
g74
(dp1527
g94
g95
ssg83
g1521
sg76
(lp1528
S'request_method'
p1529
asbag69
(g90
g71
NtRp1530
(dp1531
g74
(dp1532
g101
g102
ssg83
g1521
sg76
(lp1533
S':'
asbag69
(g90
g71
NtRp1534
(dp1535
g74
(dp1536
sg83
g1521
sg76
(lp1537
g69
(g70
g71
NtRp1538
(dp1539
g74
(dp1540
g82
I4
ssg83
g1534
sg76
(lp1541
S'GET'
p1542
asbasbasbag69
(g85
g71
NtRp1543
(dp1544
g74
(dp1545
sg83
g922
sg76
(lp1546
g69
(g90
g71
NtRp1547
(dp1548
g74
(dp1549
g94
g95
ssg83
g1543
sg76
(lp1550
S'request_uri'
p1551
asbag69
(g90
g71
NtRp1552
(dp1553
g74
(dp1554
g101
g102
ssg83
g1543
sg76
(lp1555
S':'
asbag69
(g90
g71
NtRp1556
(dp1557
g74
(dp1558
sg83
g1543
sg76
(lp1559
g69
(g70
g71
NtRp1560
(dp1561
g74
(dp1562
g82
I4
ssg83
g1556
sg76
(lp1563
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1564
asbasbasbag69
(g85
g71
NtRp1565
(dp1566
g74
(dp1567
sg83
g922
sg76
(lp1568
g69
(g90
g71
NtRp1569
(dp1570
g74
(dp1571
g94
g95
ssg83
g1565
sg76
(lp1572
S'script_name'
p1573
asbag69
(g90
g71
NtRp1574
(dp1575
g74
(dp1576
g101
g102
ssg83
g1565
sg76
(lp1577
S':'
asbag69
(g90
g71
NtRp1578
(dp1579
g74
(dp1580
sg83
g1565
sg76
(lp1581
g69
(g70
g71
NtRp1582
(dp1583
g74
(dp1584
g82
I4
ssg83
g1578
sg76
(lp1585
S''
asbasbasbag69
(g85
g71
NtRp1586
(dp1587
g74
(dp1588
sg83
g922
sg76
(lp1589
g69
(g90
g71
NtRp1590
(dp1591
g74
(dp1592
g94
g95
ssg83
g1586
sg76
(lp1593
S'server_name'
p1594
asbag69
(g90
g71
NtRp1595
(dp1596
g74
(dp1597
g101
g102
ssg83
g1586
sg76
(lp1598
S':'
asbag69
(g90
g71
NtRp1599
(dp1600
g74
(dp1601
sg83
g1586
sg76
(lp1602
g69
(g70
g71
NtRp1603
(dp1604
g74
(dp1605
g82
I4
ssg83
g1599
sg76
(lp1606
S'anil-Inspiron-1525'
p1607
asbasbasbag69
(g85
g71
NtRp1608
(dp1609
g74
(dp1610
sg83
g922
sg76
(lp1611
g69
(g90
g71
NtRp1612
(dp1613
g74
(dp1614
g94
g95
ssg83
g1608
sg76
(lp1615
S'server_port'
p1616
asbag69
(g90
g71
NtRp1617
(dp1618
g74
(dp1619
g101
g102
ssg83
g1608
sg76
(lp1620
S':'
asbag69
(g90
g71
NtRp1621
(dp1622
g74
(dp1623
sg83
g1608
sg76
(lp1624
g69
(g70
g71
NtRp1625
(dp1626
g74
(dp1627
g82
I4
ssg83
g1621
sg76
(lp1628
S'8000'
p1629
asbasbasbag69
(g85
g71
NtRp1630
(dp1631
g74
(dp1632
sg83
g922
sg76
(lp1633
g69
(g90
g71
NtRp1634
(dp1635
g74
(dp1636
g94
g95
ssg83
g1630
sg76
(lp1637
S'server_protocol'
p1638
asbag69
(g90
g71
NtRp1639
(dp1640
g74
(dp1641
g101
g102
ssg83
g1630
sg76
(lp1642
S':'
asbag69
(g90
g71
NtRp1643
(dp1644
g74
(dp1645
sg83
g1630
sg76
(lp1646
g69
(g70
g71
NtRp1647
(dp1648
g74
(dp1649
g82
I4
ssg83
g1643
sg76
(lp1650
S'HTTP/1.1'
p1651
asbasbasbag69
(g85
g71
NtRp1652
(dp1653
g74
(dp1654
sg83
g922
sg76
(lp1655
g69
(g90
g71
NtRp1656
(dp1657
g74
(dp1658
g94
g95
ssg83
g1652
sg76
(lp1659
S'server_software'
p1660
asbag69
(g90
g71
NtRp1661
(dp1662
g74
(dp1663
g101
g102
ssg83
g1652
sg76
(lp1664
S':'
asbag69
(g90
g71
NtRp1665
(dp1666
g74
(dp1667
sg83
g1652
sg76
(lp1668
g69
(g70
g71
NtRp1669
(dp1670
g74
(dp1671
g82
I4
ssg83
g1665
sg76
(lp1672
S'Rocket 1.2.6'
p1673
asbasbasbag69
(g85
g71
NtRp1674
(dp1675
g74
(dp1676
sg83
g922
sg76
(lp1677
g69
(g90
g71
NtRp1678
(dp1679
g74
(dp1680
g94
g95
ssg83
g1674
sg76
(lp1681
S'web2py_path'
p1682
asbag69
(g90
g71
NtRp1683
(dp1684
g74
(dp1685
g101
g102
ssg83
g1674
sg76
(lp1686
S':'
asbag69
(g90
g71
NtRp1687
(dp1688
g74
(dp1689
sg83
g1674
sg76
(lp1690
g69
(g70
g71
NtRp1691
(dp1692
g74
(dp1693
g82
I4
ssg83
g1687
sg76
(lp1694
g969
asbasbasbag69
(g85
g71
NtRp1695
(dp1696
g74
(dp1697
sg83
g922
sg76
(lp1698
g69
(g90
g71
NtRp1699
(dp1700
g74
(dp1701
g94
g95
ssg83
g1695
sg76
(lp1702
S'web2py_version'
p1703
asbag69
(g90
g71
NtRp1704
(dp1705
g74
(dp1706
g101
g102
ssg83
g1695
sg76
(lp1707
S':'
asbag69
(g90
g71
NtRp1708
(dp1709
g74
(dp1710
sg83
g1695
sg76
(lp1711
g69
(g70
g71
NtRp1712
(dp1713
g74
(dp1714
g82
I4
ssg83
g1708
sg76
(lp1715
g69
(g78
g71
NtRp1716
(dp1717
g74
(dp1718
g82
I3
ssg83
Nsg76
(lp1719
g69
(g85
g71
NtRp1720
(dp1721
g74
(dp1722
sg83
g1716
sg76
(lp1723
g69
(g90
g71
NtRp1724
(dp1725
g74
(dp1726
sg83
g1720
sg76
(lp1727
g69
(g70
g71
NtRp1728
(dp1729
g74
(dp1730
g82
I3
ssg83
g1724
sg76
(lp1731
S'2'
asbasbasbag69
(g85
g71
NtRp1732
(dp1733
g74
(dp1734
sg83
g1716
sg76
(lp1735
g69
(g90
g71
NtRp1736
(dp1737
g74
(dp1738
sg83
g1732
sg76
(lp1739
g69
(g70
g71
NtRp1740
(dp1741
g74
(dp1742
g82
I3
ssg83
g1736
sg76
(lp1743
S'3'
asbasbasbag69
(g85
g71
NtRp1744
(dp1745
g74
(dp1746
sg83
g1716
sg76
(lp1747
g69
(g90
g71
NtRp1748
(dp1749
g74
(dp1750
sg83
g1744
sg76
(lp1751
g69
(g70
g71
NtRp1752
(dp1753
g74
(dp1754
g82
I3
ssg83
g1748
sg76
(lp1755
S'2'
asbasbasbag69
(g85
g71
NtRp1756
(dp1757
g74
(dp1758
sg83
g1716
sg76
(lp1759
g69
(g90
g71
NtRp1760
(dp1761
g74
(dp1762
sg83
g1756
sg76
(lp1763
g69
(g70
g71
NtRp1764
(dp1765
g74
(dp1766
g82
I3
ssg83
g1760
sg76
(lp1767
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1768
asbasbasbag69
(g85
g71
NtRp1769
(dp1770
g74
(dp1771
sg83
g1716
sg76
(lp1772
g69
(g90
g71
NtRp1773
(dp1774
g74
(dp1775
sg83
g1769
sg76
(lp1776
g69
(g70
g71
NtRp1777
(dp1778
g74
(dp1779
g82
I3
ssg83
g1773
sg76
(lp1780
S'stable'
p1781
asbasbasbasbasbasbasbag69
(g85
g71
NtRp1782
(dp1783
g74
(dp1784
sg83
g922
sg76
(lp1785
g69
(g90
g71
NtRp1786
(dp1787
g74
(dp1788
g94
g95
ssg83
g1782
sg76
(lp1789
S'wsgi_errors'
p1790
asbag69
(g90
g71
NtRp1791
(dp1792
g74
(dp1793
g101
g102
ssg83
g1782
sg76
(lp1794
S':'
asbag69
(g90
g71
NtRp1795
(dp1796
g74
(dp1797
sg83
g1782
sg76
(lp1798
g69
(g70
g71
NtRp1799
(dp1800
g74
(dp1801
g82
I4
ssg83
g1795
sg76
(lp1802
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1803
asbasbasbag69
(g85
g71
NtRp1804
(dp1805
g74
(dp1806
sg83
g922
sg76
(lp1807
g69
(g90
g71
NtRp1808
(dp1809
g74
(dp1810
g94
g95
ssg83
g1804
sg76
(lp1811
S'wsgi_file_wrapper'
p1812
asbag69
(g90
g71
NtRp1813
(dp1814
g74
(dp1815
g101
g102
ssg83
g1804
sg76
(lp1816
S':'
asbag69
(g90
g71
NtRp1817
(dp1818
g74
(dp1819
sg83
g1804
sg76
(lp1820
g69
(g70
g71
NtRp1821
(dp1822
g74
(dp1823
g82
I4
ssg83
g1817
sg76
(lp1824
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1825
asbasbasbag69
(g85
g71
NtRp1826
(dp1827
g74
(dp1828
sg83
g922
sg76
(lp1829
g69
(g90
g71
NtRp1830
(dp1831
g74
(dp1832
g94
g95
ssg83
g1826
sg76
(lp1833
S'wsgi_input'
p1834
asbag69
(g90
g71
NtRp1835
(dp1836
g74
(dp1837
g101
g102
ssg83
g1826
sg76
(lp1838
S':'
asbag69
(g90
g71
NtRp1839
(dp1840
g74
(dp1841
sg83
g1826
sg76
(lp1842
g69
(g70
g71
NtRp1843
(dp1844
g74
(dp1845
g82
I4
ssg83
g1839
sg76
(lp1846
S'<socket._fileobject object at 0xae0b662c>'
p1847
asbasbasbag69
(g85
g71
NtRp1848
(dp1849
g74
(dp1850
sg83
g922
sg76
(lp1851
g69
(g90
g71
NtRp1852
(dp1853
g74
(dp1854
g94
g95
ssg83
g1848
sg76
(lp1855
S'wsgi_multiprocess'
p1856
asbag69
(g90
g71
NtRp1857
(dp1858
g74
(dp1859
g101
g102
ssg83
g1848
sg76
(lp1860
S':'
asbag69
(g90
g71
NtRp1861
(dp1862
g74
(dp1863
sg83
g1848
sg76
(lp1864
g69
(g70
g71
NtRp1865
(dp1866
g74
(dp1867
g82
I4
ssg83
g1861
sg76
(lp1868
g112
asbasbasbag69
(g85
g71
NtRp1869
(dp1870
g74
(dp1871
sg83
g922
sg76
(lp1872
g69
(g90
g71
NtRp1873
(dp1874
g74
(dp1875
g94
g95
ssg83
g1869
sg76
(lp1876
S'wsgi_multithread'
p1877
asbag69
(g90
g71
NtRp1878
(dp1879
g74
(dp1880
g101
g102
ssg83
g1869
sg76
(lp1881
S':'
asbag69
(g90
g71
NtRp1882
(dp1883
g74
(dp1884
sg83
g1869
sg76
(lp1885
g69
(g70
g71
NtRp1886
(dp1887
g74
(dp1888
g82
I4
ssg83
g1882
sg76
(lp1889
S'True'
p1890
asbasbasbag69
(g85
g71
NtRp1891
(dp1892
g74
(dp1893
sg83
g922
sg76
(lp1894
g69
(g90
g71
NtRp1895
(dp1896
g74
(dp1897
g94
g95
ssg83
g1891
sg76
(lp1898
S'wsgi_run_once'
p1899
asbag69
(g90
g71
NtRp1900
(dp1901
g74
(dp1902
g101
g102
ssg83
g1891
sg76
(lp1903
S':'
asbag69
(g90
g71
NtRp1904
(dp1905
g74
(dp1906
sg83
g1891
sg76
(lp1907
g69
(g70
g71
NtRp1908
(dp1909
g74
(dp1910
g82
I4
ssg83
g1904
sg76
(lp1911
g112
asbasbasbag69
(g85
g71
NtRp1912
(dp1913
g74
(dp1914
sg83
g922
sg76
(lp1915
g69
(g90
g71
NtRp1916
(dp1917
g74
(dp1918
g94
g95
ssg83
g1912
sg76
(lp1919
S'wsgi_url_scheme'
p1920
asbag69
(g90
g71
NtRp1921
(dp1922
g74
(dp1923
g101
g102
ssg83
g1912
sg76
(lp1924
S':'
asbag69
(g90
g71
NtRp1925
(dp1926
g74
(dp1927
sg83
g1912
sg76
(lp1928
g69
(g70
g71
NtRp1929
(dp1930
g74
(dp1931
g82
I4
ssg83
g1925
sg76
(lp1932
S'http'
p1933
asbasbasbag69
(g85
g71
NtRp1934
(dp1935
g74
(dp1936
sg83
g922
sg76
(lp1937
g69
(g90
g71
NtRp1938
(dp1939
g74
(dp1940
g94
g95
ssg83
g1934
sg76
(lp1941
S'wsgi_version'
p1942
asbag69
(g90
g71
NtRp1943
(dp1944
g74
(dp1945
g101
g102
ssg83
g1934
sg76
(lp1946
S':'
asbag69
(g90
g71
NtRp1947
(dp1948
g74
(dp1949
sg83
g1934
sg76
(lp1950
g69
(g70
g71
NtRp1951
(dp1952
g74
(dp1953
g82
I4
ssg83
g1947
sg76
(lp1954
g69
(g78
g71
NtRp1955
(dp1956
g74
(dp1957
g82
I3
ssg83
Nsg76
(lp1958
g69
(g85
g71
NtRp1959
(dp1960
g74
(dp1961
sg83
g1955
sg76
(lp1962
g69
(g90
g71
NtRp1963
(dp1964
g74
(dp1965
sg83
g1959
sg76
(lp1966
g69
(g70
g71
NtRp1967
(dp1968
g74
(dp1969
g82
I3
ssg83
g1963
sg76
(lp1970
S'1'
asbasbasbag69
(g85
g71
NtRp1971
(dp1972
g74
(dp1973
sg83
g1955
sg76
(lp1974
g69
(g90
g71
NtRp1975
(dp1976
g74
(dp1977
sg83
g1971
sg76
(lp1978
g69
(g70
g71
NtRp1979
(dp1980
g74
(dp1981
g82
I3
ssg83
g1975
sg76
(lp1982
S'0'
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp1983
(dp1984
g74
(dp1985
sg83
g79
sg76
(lp1986
g69
(g90
g71
NtRp1987
(dp1988
g74
(dp1989
g94
g95
ssg83
g1983
sg76
(lp1990
S'extension'
p1991
asbag69
(g90
g71
NtRp1992
(dp1993
g74
(dp1994
g101
g102
ssg83
g1983
sg76
(lp1995
S':'
asbag69
(g90
g71
NtRp1996
(dp1997
g74
(dp1998
sg83
g1983
sg76
(lp1999
g69
(g70
g71
NtRp2000
(dp2001
g74
(dp2002
g82
I5
ssg83
g1996
sg76
(lp2003
S'html'
p2004
asbasbasbag69
(g85
g71
NtRp2005
(dp2006
g74
(dp2007
sg83
g79
sg76
(lp2008
g69
(g90
g71
NtRp2009
(dp2010
g74
(dp2011
g94
g95
ssg83
g2005
sg76
(lp2012
S'folder'
p2013
asbag69
(g90
g71
NtRp2014
(dp2015
g74
(dp2016
g101
g102
ssg83
g2005
sg76
(lp2017
S':'
asbag69
(g90
g71
NtRp2018
(dp2019
g74
(dp2020
sg83
g2005
sg76
(lp2021
g69
(g70
g71
NtRp2022
(dp2023
g74
(dp2024
g82
I5
ssg83
g2018
sg76
(lp2025
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p2026
asbasbasbag69
(g85
g71
NtRp2027
(dp2028
g74
(dp2029
sg83
g79
sg76
(lp2030
g69
(g90
g71
NtRp2031
(dp2032
g74
(dp2033
g94
g95
ssg83
g2027
sg76
(lp2034
S'function'
p2035
asbag69
(g90
g71
NtRp2036
(dp2037
g74
(dp2038
g101
g102
ssg83
g2027
sg76
(lp2039
S':'
asbag69
(g90
g71
NtRp2040
(dp2041
g74
(dp2042
sg83
g2027
sg76
(lp2043
g69
(g70
g71
NtRp2044
(dp2045
g74
(dp2046
g82
I5
ssg83
g2040
sg76
(lp2047
S'list_all_dev_projects'
p2048
asbasbasbag69
(g85
g71
NtRp2049
(dp2050
g74
(dp2051
sg83
g79
sg76
(lp2052
g69
(g90
g71
NtRp2053
(dp2054
g74
(dp2055
g94
g95
ssg83
g2049
sg76
(lp2056
S'get_vars'
p2057
asbag69
(g90
g71
NtRp2058
(dp2059
g74
(dp2060
g101
g102
ssg83
g2049
sg76
(lp2061
S':'
asbag69
(g90
g71
NtRp2062
(dp2063
g74
(dp2064
sg83
g2049
sg76
(lp2065
g69
(g70
g71
NtRp2066
(dp2067
g74
(dp2068
g82
I5
ssg83
g2062
sg76
(lp2069
g69
(g78
g71
NtRp2070
(dp2071
g74
(dp2072
g82
I4
ssg83
Nsg76
(lp2073
sbasbasbasbag69
(g85
g71
NtRp2074
(dp2075
g74
(dp2076
sg83
g79
sg76
(lp2077
g69
(g90
g71
NtRp2078
(dp2079
g74
(dp2080
g94
g95
ssg83
g2074
sg76
(lp2081
S'global_settings'
p2082
asbag69
(g90
g71
NtRp2083
(dp2084
g74
(dp2085
g101
g102
ssg83
g2074
sg76
(lp2086
S':'
asbag69
(g90
g71
NtRp2087
(dp2088
g74
(dp2089
sg83
g2074
sg76
(lp2090
g69
(g70
g71
NtRp2091
(dp2092
g74
(dp2093
g82
I5
ssg83
g2087
sg76
(lp2094
g69
(g78
g71
NtRp2095
(dp2096
g74
(dp2097
g82
I4
ssg83
Nsg76
(lp2098
g69
(g85
g71
NtRp2099
(dp2100
g74
(dp2101
sg83
g2095
sg76
(lp2102
g69
(g90
g71
NtRp2103
(dp2104
g74
(dp2105
g94
g95
ssg83
g2099
sg76
(lp2106
g934
asbag69
(g90
g71
NtRp2107
(dp2108
g74
(dp2109
g101
g102
ssg83
g2099
sg76
(lp2110
S':'
asbag69
(g90
g71
NtRp2111
(dp2112
g74
(dp2113
sg83
g2099
sg76
(lp2114
g69
(g70
g71
NtRp2115
(dp2116
g74
(dp2117
g82
I4
ssg83
g2111
sg76
(lp2118
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p2119
asbasbasbag69
(g85
g71
NtRp2120
(dp2121
g74
(dp2122
sg83
g2095
sg76
(lp2123
g69
(g90
g71
NtRp2124
(dp2125
g74
(dp2126
g94
g95
ssg83
g2120
sg76
(lp2127
g956
asbag69
(g90
g71
NtRp2128
(dp2129
g74
(dp2130
g101
g102
ssg83
g2120
sg76
(lp2131
S':'
asbag69
(g90
g71
NtRp2132
(dp2133
g74
(dp2134
sg83
g2120
sg76
(lp2135
g69
(g70
g71
NtRp2136
(dp2137
g74
(dp2138
g82
I4
ssg83
g2132
sg76
(lp2139
g969
asbasbasbag69
(g85
g71
NtRp2140
(dp2141
g74
(dp2142
sg83
g2095
sg76
(lp2143
g69
(g90
g71
NtRp2144
(dp2145
g74
(dp2146
g94
g95
ssg83
g2140
sg76
(lp2147
g978
asbag69
(g90
g71
NtRp2148
(dp2149
g74
(dp2150
g101
g102
ssg83
g2140
sg76
(lp2151
S':'
asbag69
(g90
g71
NtRp2152
(dp2153
g74
(dp2154
sg83
g2140
sg76
(lp2155
g69
(g70
g71
NtRp2156
(dp2157
g74
(dp2158
g82
I4
ssg83
g2152
sg76
(lp2159
g69
(g78
g71
NtRp2160
(dp2161
g74
(dp2162
g82
I3
ssg83
Nsg76
(lp2163
sbasbasbasbag69
(g85
g71
NtRp2164
(dp2165
g74
(dp2166
sg83
g2095
sg76
(lp2167
g69
(g90
g71
NtRp2168
(dp2169
g74
(dp2170
g94
g95
ssg83
g2164
sg76
(lp2171
g1003
asbag69
(g90
g71
NtRp2172
(dp2173
g74
(dp2174
g101
g102
ssg83
g2164
sg76
(lp2175
S':'
asbag69
(g90
g71
NtRp2176
(dp2177
g74
(dp2178
sg83
g2164
sg76
(lp2179
g69
(g70
g71
NtRp2180
(dp2181
g74
(dp2182
g82
I4
ssg83
g2176
sg76
(lp2183
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2184
asbasbasbag69
(g85
g71
NtRp2185
(dp2186
g74
(dp2187
sg83
g2095
sg76
(lp2188
g69
(g90
g71
NtRp2189
(dp2190
g74
(dp2191
g94
g95
ssg83
g2185
sg76
(lp2192
g1025
asbag69
(g90
g71
NtRp2193
(dp2194
g74
(dp2195
g101
g102
ssg83
g2185
sg76
(lp2196
S':'
asbag69
(g90
g71
NtRp2197
(dp2198
g74
(dp2199
sg83
g2185
sg76
(lp2200
g69
(g70
g71
NtRp2201
(dp2202
g74
(dp2203
g82
I4
ssg83
g2197
sg76
(lp2204
S'set([])'
p2205
asbasbasbag69
(g85
g71
NtRp2206
(dp2207
g74
(dp2208
sg83
g2095
sg76
(lp2209
g69
(g90
g71
NtRp2210
(dp2211
g74
(dp2212
g94
g95
ssg83
g2206
sg76
(lp2213
g1047
asbag69
(g90
g71
NtRp2214
(dp2215
g74
(dp2216
g101
g102
ssg83
g2206
sg76
(lp2217
S':'
asbag69
(g90
g71
NtRp2218
(dp2219
g74
(dp2220
sg83
g2206
sg76
(lp2221
g69
(g70
g71
NtRp2222
(dp2223
g74
(dp2224
g82
I4
ssg83
g2218
sg76
(lp2225
g112
asbasbasbag69
(g85
g71
NtRp2226
(dp2227
g74
(dp2228
sg83
g2095
sg76
(lp2229
g69
(g90
g71
NtRp2230
(dp2231
g74
(dp2232
g94
g95
ssg83
g2226
sg76
(lp2233
g1068
asbag69
(g90
g71
NtRp2234
(dp2235
g74
(dp2236
g101
g102
ssg83
g2226
sg76
(lp2237
S':'
asbag69
(g90
g71
NtRp2238
(dp2239
g74
(dp2240
sg83
g2226
sg76
(lp2241
g69
(g70
g71
NtRp2242
(dp2243
g74
(dp2244
g82
I4
ssg83
g2238
sg76
(lp2245
g1081
asbasbasbag69
(g85
g71
NtRp2246
(dp2247
g74
(dp2248
sg83
g2095
sg76
(lp2249
g69
(g90
g71
NtRp2250
(dp2251
g74
(dp2252
g94
g95
ssg83
g2246
sg76
(lp2253
g1310
asbag69
(g90
g71
NtRp2254
(dp2255
g74
(dp2256
g101
g102
ssg83
g2246
sg76
(lp2257
S':'
asbag69
(g90
g71
NtRp2258
(dp2259
g74
(dp2260
sg83
g2246
sg76
(lp2261
g69
(g70
g71
NtRp2262
(dp2263
g74
(dp2264
g82
I4
ssg83
g2258
sg76
(lp2265
g112
asbasbasbag69
(g85
g71
NtRp2266
(dp2267
g74
(dp2268
sg83
g2095
sg76
(lp2269
g69
(g90
g71
NtRp2270
(dp2271
g74
(dp2272
g94
g95
ssg83
g2266
sg76
(lp2273
g1331
asbag69
(g90
g71
NtRp2274
(dp2275
g74
(dp2276
g101
g102
ssg83
g2266
sg76
(lp2277
S':'
asbag69
(g90
g71
NtRp2278
(dp2279
g74
(dp2280
sg83
g2266
sg76
(lp2281
g69
(g70
g71
NtRp2282
(dp2283
g74
(dp2284
g82
I4
ssg83
g2278
sg76
(lp2285
g112
asbasbasbag69
(g85
g71
NtRp2286
(dp2287
g74
(dp2288
sg83
g2095
sg76
(lp2289
g69
(g90
g71
NtRp2290
(dp2291
g74
(dp2292
g94
g95
ssg83
g2286
sg76
(lp2293
g1352
asbag69
(g90
g71
NtRp2294
(dp2295
g74
(dp2296
g101
g102
ssg83
g2286
sg76
(lp2297
S':'
asbag69
(g90
g71
NtRp2298
(dp2299
g74
(dp2300
sg83
g2286
sg76
(lp2301
g69
(g70
g71
NtRp2302
(dp2303
g74
(dp2304
g82
I4
ssg83
g2298
sg76
(lp2305
g69
(g78
g71
NtRp2306
(dp2307
g74
(dp2308
g82
I3
ssg83
Nsg76
(lp2309
g69
(g85
g71
NtRp2310
(dp2311
g74
(dp2312
sg83
g2306
sg76
(lp2313
g69
(g90
g71
NtRp2314
(dp2315
g74
(dp2316
sg83
g2310
sg76
(lp2317
g69
(g70
g71
NtRp2318
(dp2319
g74
(dp2320
g82
I3
ssg83
g2314
sg76
(lp2321
g1381
asbasbasbag69
(g85
g71
NtRp2322
(dp2323
g74
(dp2324
sg83
g2306
sg76
(lp2325
g69
(g90
g71
NtRp2326
(dp2327
g74
(dp2328
sg83
g2322
sg76
(lp2329
g69
(g70
g71
NtRp2330
(dp2331
g74
(dp2332
g82
I3
ssg83
g2326
sg76
(lp2333
g1394
asbasbasbag69
(g85
g71
NtRp2334
(dp2335
g74
(dp2336
sg83
g2306
sg76
(lp2337
g69
(g90
g71
NtRp2338
(dp2339
g74
(dp2340
sg83
g2334
sg76
(lp2341
g69
(g70
g71
NtRp2342
(dp2343
g74
(dp2344
g82
I3
ssg83
g2338
sg76
(lp2345
g1407
asbasbasbag69
(g85
g71
NtRp2346
(dp2347
g74
(dp2348
sg83
g2306
sg76
(lp2349
g69
(g90
g71
NtRp2350
(dp2351
g74
(dp2352
sg83
g2346
sg76
(lp2353
g69
(g70
g71
NtRp2354
(dp2355
g74
(dp2356
g82
I3
ssg83
g2350
sg76
(lp2357
g1420
asbasbasbag69
(g85
g71
NtRp2358
(dp2359
g74
(dp2360
sg83
g2306
sg76
(lp2361
g69
(g90
g71
NtRp2362
(dp2363
g74
(dp2364
sg83
g2358
sg76
(lp2365
g69
(g70
g71
NtRp2366
(dp2367
g74
(dp2368
g82
I3
ssg83
g2362
sg76
(lp2369
g1433
asbasbasbasbasbasbasbag69
(g85
g71
NtRp2370
(dp2371
g74
(dp2372
sg83
g2095
sg76
(lp2373
g69
(g90
g71
NtRp2374
(dp2375
g74
(dp2376
g94
g95
ssg83
g2370
sg76
(lp2377
g1703
asbag69
(g90
g71
NtRp2378
(dp2379
g74
(dp2380
g101
g102
ssg83
g2370
sg76
(lp2381
S':'
asbag69
(g90
g71
NtRp2382
(dp2383
g74
(dp2384
sg83
g2370
sg76
(lp2385
g69
(g70
g71
NtRp2386
(dp2387
g74
(dp2388
g82
I4
ssg83
g2382
sg76
(lp2389
g69
(g78
g71
NtRp2390
(dp2391
g74
(dp2392
g82
I3
ssg83
Nsg76
(lp2393
g69
(g85
g71
NtRp2394
(dp2395
g74
(dp2396
sg83
g2390
sg76
(lp2397
g69
(g90
g71
NtRp2398
(dp2399
g74
(dp2400
sg83
g2394
sg76
(lp2401
g69
(g70
g71
NtRp2402
(dp2403
g74
(dp2404
g82
I3
ssg83
g2398
sg76
(lp2405
S'2'
asbasbasbag69
(g85
g71
NtRp2406
(dp2407
g74
(dp2408
sg83
g2390
sg76
(lp2409
g69
(g90
g71
NtRp2410
(dp2411
g74
(dp2412
sg83
g2406
sg76
(lp2413
g69
(g70
g71
NtRp2414
(dp2415
g74
(dp2416
g82
I3
ssg83
g2410
sg76
(lp2417
S'3'
asbasbasbag69
(g85
g71
NtRp2418
(dp2419
g74
(dp2420
sg83
g2390
sg76
(lp2421
g69
(g90
g71
NtRp2422
(dp2423
g74
(dp2424
sg83
g2418
sg76
(lp2425
g69
(g70
g71
NtRp2426
(dp2427
g74
(dp2428
g82
I3
ssg83
g2422
sg76
(lp2429
S'2'
asbasbasbag69
(g85
g71
NtRp2430
(dp2431
g74
(dp2432
sg83
g2390
sg76
(lp2433
g69
(g90
g71
NtRp2434
(dp2435
g74
(dp2436
sg83
g2430
sg76
(lp2437
g69
(g70
g71
NtRp2438
(dp2439
g74
(dp2440
g82
I3
ssg83
g2434
sg76
(lp2441
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2442
asbasbasbag69
(g85
g71
NtRp2443
(dp2444
g74
(dp2445
sg83
g2390
sg76
(lp2446
g69
(g90
g71
NtRp2447
(dp2448
g74
(dp2449
sg83
g2443
sg76
(lp2450
g69
(g70
g71
NtRp2451
(dp2452
g74
(dp2453
g82
I3
ssg83
g2447
sg76
(lp2454
g1781
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2455
(dp2456
g74
(dp2457
sg83
g79
sg76
(lp2458
g69
(g90
g71
NtRp2459
(dp2460
g74
(dp2461
g94
g95
ssg83
g2455
sg76
(lp2462
S'is_https'
p2463
asbag69
(g90
g71
NtRp2464
(dp2465
g74
(dp2466
g101
g102
ssg83
g2455
sg76
(lp2467
S':'
asbag69
(g90
g71
NtRp2468
(dp2469
g74
(dp2470
sg83
g2455
sg76
(lp2471
g69
(g70
g71
NtRp2472
(dp2473
g74
(dp2474
g82
I5
ssg83
g2468
sg76
(lp2475
g112
asbasbasbag69
(g85
g71
NtRp2476
(dp2477
g74
(dp2478
sg83
g79
sg76
(lp2479
g69
(g90
g71
NtRp2480
(dp2481
g74
(dp2482
g94
g95
ssg83
g2476
sg76
(lp2483
S'is_local'
p2484
asbag69
(g90
g71
NtRp2485
(dp2486
g74
(dp2487
g101
g102
ssg83
g2476
sg76
(lp2488
S':'
asbag69
(g90
g71
NtRp2489
(dp2490
g74
(dp2491
sg83
g2476
sg76
(lp2492
g69
(g70
g71
NtRp2493
(dp2494
g74
(dp2495
g82
I5
ssg83
g2489
sg76
(lp2496
g1890
asbasbasbag69
(g85
g71
NtRp2497
(dp2498
g74
(dp2499
sg83
g79
sg76
(lp2500
g69
(g90
g71
NtRp2501
(dp2502
g74
(dp2503
g94
g95
ssg83
g2497
sg76
(lp2504
S'is_restful'
p2505
asbag69
(g90
g71
NtRp2506
(dp2507
g74
(dp2508
g101
g102
ssg83
g2497
sg76
(lp2509
S':'
asbag69
(g90
g71
NtRp2510
(dp2511
g74
(dp2512
sg83
g2497
sg76
(lp2513
g69
(g70
g71
NtRp2514
(dp2515
g74
(dp2516
g82
I5
ssg83
g2510
sg76
(lp2517
g112
asbasbasbag69
(g85
g71
NtRp2518
(dp2519
g74
(dp2520
sg83
g79
sg76
(lp2521
g69
(g90
g71
NtRp2522
(dp2523
g74
(dp2524
g94
g95
ssg83
g2518
sg76
(lp2525
S'now'
p2526
asbag69
(g90
g71
NtRp2527
(dp2528
g74
(dp2529
g101
g102
ssg83
g2518
sg76
(lp2530
S':'
asbag69
(g90
g71
NtRp2531
(dp2532
g74
(dp2533
sg83
g2518
sg76
(lp2534
g69
(g70
g71
NtRp2535
(dp2536
g74
(dp2537
g82
I5
ssg83
g2531
sg76
(lp2538
S'datetime.datetime(2013, 2, 24, 19, 53, 8, 843782)'
p2539
asbasbasbag69
(g85
g71
NtRp2540
(dp2541
g74
(dp2542
sg83
g79
sg76
(lp2543
g69
(g90
g71
NtRp2544
(dp2545
g74
(dp2546
g94
g95
ssg83
g2540
sg76
(lp2547
S'post_vars'
p2548
asbag69
(g90
g71
NtRp2549
(dp2550
g74
(dp2551
g101
g102
ssg83
g2540
sg76
(lp2552
S':'
asbag69
(g90
g71
NtRp2553
(dp2554
g74
(dp2555
sg83
g2540
sg76
(lp2556
g69
(g70
g71
NtRp2557
(dp2558
g74
(dp2559
g82
I5
ssg83
g2553
sg76
(lp2560
g69
(g78
g71
NtRp2561
(dp2562
g74
(dp2563
g82
I4
ssg83
Nsg76
(lp2564
sbasbasbasbag69
(g85
g71
NtRp2565
(dp2566
g74
(dp2567
sg83
g79
sg76
(lp2568
g69
(g90
g71
NtRp2569
(dp2570
g74
(dp2571
g94
g95
ssg83
g2565
sg76
(lp2572
S'raw_args'
p2573
asbag69
(g90
g71
NtRp2574
(dp2575
g74
(dp2576
g101
g102
ssg83
g2565
sg76
(lp2577
S':'
asbag69
(g90
g71
NtRp2578
(dp2579
g74
(dp2580
sg83
g2565
sg76
(lp2581
g69
(g70
g71
NtRp2582
(dp2583
g74
(dp2584
g82
I5
ssg83
g2578
sg76
(lp2585
S'project/experiment.project/1/sample.experiment/1'
p2586
asbasbasbag69
(g85
g71
NtRp2587
(dp2588
g74
(dp2589
sg83
g79
sg76
(lp2590
g69
(g90
g71
NtRp2591
(dp2592
g74
(dp2593
g94
g95
ssg83
g2587
sg76
(lp2594
S'raw_extension'
p2595
asbag69
(g90
g71
NtRp2596
(dp2597
g74
(dp2598
g101
g102
ssg83
g2587
sg76
(lp2599
S':'
asbag69
(g90
g71
NtRp2600
(dp2601
g74
(dp2602
sg83
g2587
sg76
(lp2603
g69
(g70
g71
NtRp2604
(dp2605
g74
(dp2606
g82
I5
ssg83
g2600
sg76
(lp2607
S'None'
p2608
asbasbasbag69
(g85
g71
NtRp2609
(dp2610
g74
(dp2611
sg83
g79
sg76
(lp2612
g69
(g90
g71
NtRp2613
(dp2614
g74
(dp2615
g94
g95
ssg83
g2609
sg76
(lp2616
S'url'
p2617
asbag69
(g90
g71
NtRp2618
(dp2619
g74
(dp2620
g101
g102
ssg83
g2609
sg76
(lp2621
S':'
asbag69
(g90
g71
NtRp2622
(dp2623
g74
(dp2624
sg83
g2609
sg76
(lp2625
g69
(g70
g71
NtRp2626
(dp2627
g74
(dp2628
g82
I5
ssg83
g2622
sg76
(lp2629
g1455
asbasbasbag69
(g85
g71
NtRp2630
(dp2631
g74
(dp2632
sg83
g79
sg76
(lp2633
g69
(g90
g71
NtRp2634
(dp2635
g74
(dp2636
g94
g95
ssg83
g2630
sg76
(lp2637
S'utcnow'
p2638
asbag69
(g90
g71
NtRp2639
(dp2640
g74
(dp2641
g101
g102
ssg83
g2630
sg76
(lp2642
S':'
asbag69
(g90
g71
NtRp2643
(dp2644
g74
(dp2645
sg83
g2630
sg76
(lp2646
g69
(g70
g71
NtRp2647
(dp2648
g74
(dp2649
g82
I5
ssg83
g2643
sg76
(lp2650
S'datetime.datetime(2013, 2, 24, 14, 23, 8, 843833)'
p2651
asbasbasbag69
(g85
g71
NtRp2652
(dp2653
g74
(dp2654
sg83
g79
sg76
(lp2655
g69
(g90
g71
NtRp2656
(dp2657
g74
(dp2658
g94
g95
ssg83
g2652
sg76
(lp2659
S'uuid'
p2660
asbag69
(g90
g71
NtRp2661
(dp2662
g74
(dp2663
g101
g102
ssg83
g2652
sg76
(lp2664
S':'
asbag69
(g90
g71
NtRp2665
(dp2666
g74
(dp2667
sg83
g2652
sg76
(lp2668
g69
(g70
g71
NtRp2669
(dp2670
g74
(dp2671
g82
I5
ssg83
g2665
sg76
(lp2672
S'DEV_bootstrap_ch/127.0.0.1.2013-02-24.19-53-08.ac48fd28-1287-44b1-862e-044669692d57'
p2673
asbasbasbag69
(g85
g71
NtRp2674
(dp2675
g74
(dp2676
sg83
g79
sg76
(lp2677
g69
(g90
g71
NtRp2678
(dp2679
g74
(dp2680
g94
g95
ssg83
g2674
sg76
(lp2681
S'vars'
p2682
asbag69
(g90
g71
NtRp2683
(dp2684
g74
(dp2685
g101
g102
ssg83
g2674
sg76
(lp2686
S':'
asbag69
(g90
g71
NtRp2687
(dp2688
g74
(dp2689
sg83
g2674
sg76
(lp2690
g69
(g70
g71
NtRp2691
(dp2692
g74
(dp2693
g82
I5
ssg83
g2687
sg76
(lp2694
g69
(g78
g71
NtRp2695
(dp2696
g74
(dp2697
g82
I4
ssg83
Nsg76
(lp2698
g69
(g85
g71
NtRp2699
(dp2700
g74
(dp2701
sg83
g2695
sg76
(lp2702
g69
(g90
g71
NtRp2703
(dp2704
g74
(dp2705
g94
g95
ssg83
g2699
sg76
(lp2706
S'records'
p2707
asbag69
(g90
g71
NtRp2708
(dp2709
g74
(dp2710
g101
g102
ssg83
g2699
sg76
(lp2711
S':'
asbag69
(g90
g71
NtRp2712
(dp2713
g74
(dp2714
sg83
g2699
sg76
(lp2715
g69
(g70
g71
NtRp2716
(dp2717
g74
(dp2718
g82
I4
ssg83
g2712
sg76
(lp2719
g69
(g78
g71
NtRp2720
(dp2721
g74
(dp2722
g82
I3
ssg83
Nsg76
(lp2723
sbasbasbasbasbasbasbasbag69
(g85
g71
NtRp2724
(dp2725
g74
(dp2726
sg83
g79
sg76
(lp2727
g69
(g90
g71
NtRp2728
(dp2729
g74
(dp2730
g94
g95
ssg83
g2724
sg76
(lp2731
S'wsgi'
p2732
asbag69
(g90
g71
NtRp2733
(dp2734
g74
(dp2735
g101
g102
ssg83
g2724
sg76
(lp2736
S':'
asbag69
(g90
g71
NtRp2737
(dp2738
g74
(dp2739
sg83
g2724
sg76
(lp2740
g69
(g70
g71
NtRp2741
(dp2742
g74
(dp2743
g82
I5
ssg83
g2737
sg76
(lp2744
g69
(g78
g71
NtRp2745
(dp2746
g74
(dp2747
g82
I4
ssg83
Nsg76
(lp2748
g69
(g85
g71
NtRp2749
(dp2750
g74
(dp2751
sg83
g2745
sg76
(lp2752
g69
(g90
g71
NtRp2753
(dp2754
g74
(dp2755
g94
g95
ssg83
g2749
sg76
(lp2756
S'environ'
p2757
asbag69
(g90
g71
NtRp2758
(dp2759
g74
(dp2760
g101
g102
ssg83
g2749
sg76
(lp2761
S':'
asbag69
(g90
g71
NtRp2762
(dp2763
g74
(dp2764
sg83
g2749
sg76
(lp2765
g69
(g70
g71
NtRp2766
(dp2767
g74
(dp2768
g82
I4
ssg83
g2762
sg76
(lp2769
g69
(g78
g71
NtRp2770
(dp2771
g74
(dp2772
g82
I3
ssg83
Nsg76
(lp2773
g69
(g85
g71
NtRp2774
(dp2775
g74
(dp2776
sg83
g2770
sg76
(lp2777
g69
(g90
g71
NtRp2778
(dp2779
g74
(dp2780
g94
g95
ssg83
g2774
sg76
(lp2781
S'HTTP_ACCEPT'
p2782
asbag69
(g90
g71
NtRp2783
(dp2784
g74
(dp2785
g101
g102
ssg83
g2774
sg76
(lp2786
S':'
asbag69
(g90
g71
NtRp2787
(dp2788
g74
(dp2789
sg83
g2774
sg76
(lp2790
g69
(g70
g71
NtRp2791
(dp2792
g74
(dp2793
g82
I3
ssg83
g2787
sg76
(lp2794
g1103
asbasbasbag69
(g85
g71
NtRp2795
(dp2796
g74
(dp2797
sg83
g2770
sg76
(lp2798
g69
(g90
g71
NtRp2799
(dp2800
g74
(dp2801
g94
g95
ssg83
g2795
sg76
(lp2802
S'HTTP_ACCEPT_CHARSET'
p2803
asbag69
(g90
g71
NtRp2804
(dp2805
g74
(dp2806
g101
g102
ssg83
g2795
sg76
(lp2807
S':'
asbag69
(g90
g71
NtRp2808
(dp2809
g74
(dp2810
sg83
g2795
sg76
(lp2811
g69
(g70
g71
NtRp2812
(dp2813
g74
(dp2814
g82
I3
ssg83
g2808
sg76
(lp2815
g1125
asbasbasbag69
(g85
g71
NtRp2816
(dp2817
g74
(dp2818
sg83
g2770
sg76
(lp2819
g69
(g90
g71
NtRp2820
(dp2821
g74
(dp2822
g94
g95
ssg83
g2816
sg76
(lp2823
S'HTTP_ACCEPT_ENCODING'
p2824
asbag69
(g90
g71
NtRp2825
(dp2826
g74
(dp2827
g101
g102
ssg83
g2816
sg76
(lp2828
S':'
asbag69
(g90
g71
NtRp2829
(dp2830
g74
(dp2831
sg83
g2816
sg76
(lp2832
g69
(g70
g71
NtRp2833
(dp2834
g74
(dp2835
g82
I3
ssg83
g2829
sg76
(lp2836
g1147
asbasbasbag69
(g85
g71
NtRp2837
(dp2838
g74
(dp2839
sg83
g2770
sg76
(lp2840
g69
(g90
g71
NtRp2841
(dp2842
g74
(dp2843
g94
g95
ssg83
g2837
sg76
(lp2844
S'HTTP_ACCEPT_LANGUAGE'
p2845
asbag69
(g90
g71
NtRp2846
(dp2847
g74
(dp2848
g101
g102
ssg83
g2837
sg76
(lp2849
S':'
asbag69
(g90
g71
NtRp2850
(dp2851
g74
(dp2852
sg83
g2837
sg76
(lp2853
g69
(g70
g71
NtRp2854
(dp2855
g74
(dp2856
g82
I3
ssg83
g2850
sg76
(lp2857
g1169
asbasbasbag69
(g85
g71
NtRp2858
(dp2859
g74
(dp2860
sg83
g2770
sg76
(lp2861
g69
(g90
g71
NtRp2862
(dp2863
g74
(dp2864
g94
g95
ssg83
g2858
sg76
(lp2865
S'HTTP_CACHE_CONTROL'
p2866
asbag69
(g90
g71
NtRp2867
(dp2868
g74
(dp2869
g101
g102
ssg83
g2858
sg76
(lp2870
S':'
asbag69
(g90
g71
NtRp2871
(dp2872
g74
(dp2873
sg83
g2858
sg76
(lp2874
g69
(g70
g71
NtRp2875
(dp2876
g74
(dp2877
g82
I3
ssg83
g2871
sg76
(lp2878
g1191
asbasbasbag69
(g85
g71
NtRp2879
(dp2880
g74
(dp2881
sg83
g2770
sg76
(lp2882
g69
(g90
g71
NtRp2883
(dp2884
g74
(dp2885
g94
g95
ssg83
g2879
sg76
(lp2886
S'HTTP_CONNECTION'
p2887
asbag69
(g90
g71
NtRp2888
(dp2889
g74
(dp2890
g101
g102
ssg83
g2879
sg76
(lp2891
S':'
asbag69
(g90
g71
NtRp2892
(dp2893
g74
(dp2894
sg83
g2879
sg76
(lp2895
g69
(g70
g71
NtRp2896
(dp2897
g74
(dp2898
g82
I3
ssg83
g2892
sg76
(lp2899
g1213
asbasbasbag69
(g85
g71
NtRp2900
(dp2901
g74
(dp2902
sg83
g2770
sg76
(lp2903
g69
(g90
g71
NtRp2904
(dp2905
g74
(dp2906
g94
g95
ssg83
g2900
sg76
(lp2907
S'HTTP_COOKIE'
p2908
asbag69
(g90
g71
NtRp2909
(dp2910
g74
(dp2911
g101
g102
ssg83
g2900
sg76
(lp2912
S':'
asbag69
(g90
g71
NtRp2913
(dp2914
g74
(dp2915
sg83
g2900
sg76
(lp2916
g69
(g70
g71
NtRp2917
(dp2918
g74
(dp2919
g82
I3
ssg83
g2913
sg76
(lp2920
g1235
asbasbasbag69
(g85
g71
NtRp2921
(dp2922
g74
(dp2923
sg83
g2770
sg76
(lp2924
g69
(g90
g71
NtRp2925
(dp2926
g74
(dp2927
g94
g95
ssg83
g2921
sg76
(lp2928
S'HTTP_HOST'
p2929
asbag69
(g90
g71
NtRp2930
(dp2931
g74
(dp2932
g101
g102
ssg83
g2921
sg76
(lp2933
S':'
asbag69
(g90
g71
NtRp2934
(dp2935
g74
(dp2936
sg83
g2921
sg76
(lp2937
g69
(g70
g71
NtRp2938
(dp2939
g74
(dp2940
g82
I3
ssg83
g2934
sg76
(lp2941
g1257
asbasbasbag69
(g85
g71
NtRp2942
(dp2943
g74
(dp2944
sg83
g2770
sg76
(lp2945
g69
(g90
g71
NtRp2946
(dp2947
g74
(dp2948
g94
g95
ssg83
g2942
sg76
(lp2949
S'HTTP_REFERER'
p2950
asbag69
(g90
g71
NtRp2951
(dp2952
g74
(dp2953
g101
g102
ssg83
g2942
sg76
(lp2954
S':'
asbag69
(g90
g71
NtRp2955
(dp2956
g74
(dp2957
sg83
g2942
sg76
(lp2958
g69
(g70
g71
NtRp2959
(dp2960
g74
(dp2961
g82
I3
ssg83
g2955
sg76
(lp2962
g1279
asbasbasbag69
(g85
g71
NtRp2963
(dp2964
g74
(dp2965
sg83
g2770
sg76
(lp2966
g69
(g90
g71
NtRp2967
(dp2968
g74
(dp2969
g94
g95
ssg83
g2963
sg76
(lp2970
S'HTTP_USER_AGENT'
p2971
asbag69
(g90
g71
NtRp2972
(dp2973
g74
(dp2974
g101
g102
ssg83
g2963
sg76
(lp2975
S':'
asbag69
(g90
g71
NtRp2976
(dp2977
g74
(dp2978
sg83
g2963
sg76
(lp2979
g69
(g70
g71
NtRp2980
(dp2981
g74
(dp2982
g82
I3
ssg83
g2976
sg76
(lp2983
g1301
asbasbasbag69
(g85
g71
NtRp2984
(dp2985
g74
(dp2986
sg83
g2770
sg76
(lp2987
g69
(g90
g71
NtRp2988
(dp2989
g74
(dp2990
g94
g95
ssg83
g2984
sg76
(lp2991
S'PATH_INFO'
p2992
asbag69
(g90
g71
NtRp2993
(dp2994
g74
(dp2995
g101
g102
ssg83
g2984
sg76
(lp2996
S':'
asbag69
(g90
g71
NtRp2997
(dp2998
g74
(dp2999
sg83
g2984
sg76
(lp3000
g69
(g70
g71
NtRp3001
(dp3002
g74
(dp3003
g82
I3
ssg83
g2997
sg76
(lp3004
g1455
asbasbasbag69
(g85
g71
NtRp3005
(dp3006
g74
(dp3007
sg83
g2770
sg76
(lp3008
g69
(g90
g71
NtRp3009
(dp3010
g74
(dp3011
g94
g95
ssg83
g3005
sg76
(lp3012
S'QUERY_STRING'
p3013
asbag69
(g90
g71
NtRp3014
(dp3015
g74
(dp3016
g101
g102
ssg83
g3005
sg76
(lp3017
S':'
asbag69
(g90
g71
NtRp3018
(dp3019
g74
(dp3020
sg83
g3005
sg76
(lp3021
g69
(g70
g71
NtRp3022
(dp3023
g74
(dp3024
g82
I3
ssg83
g3018
sg76
(lp3025
g1477
asbasbasbag69
(g85
g71
NtRp3026
(dp3027
g74
(dp3028
sg83
g2770
sg76
(lp3029
g69
(g90
g71
NtRp3030
(dp3031
g74
(dp3032
g94
g95
ssg83
g3026
sg76
(lp3033
S'REMOTE_ADDR'
p3034
asbag69
(g90
g71
NtRp3035
(dp3036
g74
(dp3037
g101
g102
ssg83
g3026
sg76
(lp3038
S':'
asbag69
(g90
g71
NtRp3039
(dp3040
g74
(dp3041
sg83
g3026
sg76
(lp3042
g69
(g70
g71
NtRp3043
(dp3044
g74
(dp3045
g82
I3
ssg83
g3039
sg76
(lp3046
g287
asbasbasbag69
(g85
g71
NtRp3047
(dp3048
g74
(dp3049
sg83
g2770
sg76
(lp3050
g69
(g90
g71
NtRp3051
(dp3052
g74
(dp3053
g94
g95
ssg83
g3047
sg76
(lp3054
S'REMOTE_PORT'
p3055
asbag69
(g90
g71
NtRp3056
(dp3057
g74
(dp3058
g101
g102
ssg83
g3047
sg76
(lp3059
S':'
asbag69
(g90
g71
NtRp3060
(dp3061
g74
(dp3062
sg83
g3047
sg76
(lp3063
g69
(g70
g71
NtRp3064
(dp3065
g74
(dp3066
g82
I3
ssg83
g3060
sg76
(lp3067
g1520
asbasbasbag69
(g85
g71
NtRp3068
(dp3069
g74
(dp3070
sg83
g2770
sg76
(lp3071
g69
(g90
g71
NtRp3072
(dp3073
g74
(dp3074
g94
g95
ssg83
g3068
sg76
(lp3075
S'REQUEST_METHOD'
p3076
asbag69
(g90
g71
NtRp3077
(dp3078
g74
(dp3079
g101
g102
ssg83
g3068
sg76
(lp3080
S':'
asbag69
(g90
g71
NtRp3081
(dp3082
g74
(dp3083
sg83
g3068
sg76
(lp3084
g69
(g70
g71
NtRp3085
(dp3086
g74
(dp3087
g82
I3
ssg83
g3081
sg76
(lp3088
g1542
asbasbasbag69
(g85
g71
NtRp3089
(dp3090
g74
(dp3091
sg83
g2770
sg76
(lp3092
g69
(g90
g71
NtRp3093
(dp3094
g74
(dp3095
g94
g95
ssg83
g3089
sg76
(lp3096
S'REQUEST_URI'
p3097
asbag69
(g90
g71
NtRp3098
(dp3099
g74
(dp3100
g101
g102
ssg83
g3089
sg76
(lp3101
S':'
asbag69
(g90
g71
NtRp3102
(dp3103
g74
(dp3104
sg83
g3089
sg76
(lp3105
g69
(g70
g71
NtRp3106
(dp3107
g74
(dp3108
g82
I3
ssg83
g3102
sg76
(lp3109
g1564
asbasbasbag69
(g85
g71
NtRp3110
(dp3111
g74
(dp3112
sg83
g2770
sg76
(lp3113
g69
(g90
g71
NtRp3114
(dp3115
g74
(dp3116
g94
g95
ssg83
g3110
sg76
(lp3117
S'SCRIPT_NAME'
p3118
asbag69
(g90
g71
NtRp3119
(dp3120
g74
(dp3121
g101
g102
ssg83
g3110
sg76
(lp3122
S':'
asbag69
(g90
g71
NtRp3123
(dp3124
g74
(dp3125
sg83
g3110
sg76
(lp3126
g69
(g70
g71
NtRp3127
(dp3128
g74
(dp3129
g82
I3
ssg83
g3123
sg76
(lp3130
S''
asbasbasbag69
(g85
g71
NtRp3131
(dp3132
g74
(dp3133
sg83
g2770
sg76
(lp3134
g69
(g90
g71
NtRp3135
(dp3136
g74
(dp3137
g94
g95
ssg83
g3131
sg76
(lp3138
S'SERVER_NAME'
p3139
asbag69
(g90
g71
NtRp3140
(dp3141
g74
(dp3142
g101
g102
ssg83
g3131
sg76
(lp3143
S':'
asbag69
(g90
g71
NtRp3144
(dp3145
g74
(dp3146
sg83
g3131
sg76
(lp3147
g69
(g70
g71
NtRp3148
(dp3149
g74
(dp3150
g82
I3
ssg83
g3144
sg76
(lp3151
g1607
asbasbasbag69
(g85
g71
NtRp3152
(dp3153
g74
(dp3154
sg83
g2770
sg76
(lp3155
g69
(g90
g71
NtRp3156
(dp3157
g74
(dp3158
g94
g95
ssg83
g3152
sg76
(lp3159
S'SERVER_PORT'
p3160
asbag69
(g90
g71
NtRp3161
(dp3162
g74
(dp3163
g101
g102
ssg83
g3152
sg76
(lp3164
S':'
asbag69
(g90
g71
NtRp3165
(dp3166
g74
(dp3167
sg83
g3152
sg76
(lp3168
g69
(g70
g71
NtRp3169
(dp3170
g74
(dp3171
g82
I3
ssg83
g3165
sg76
(lp3172
g1629
asbasbasbag69
(g85
g71
NtRp3173
(dp3174
g74
(dp3175
sg83
g2770
sg76
(lp3176
g69
(g90
g71
NtRp3177
(dp3178
g74
(dp3179
g94
g95
ssg83
g3173
sg76
(lp3180
S'SERVER_PROTOCOL'
p3181
asbag69
(g90
g71
NtRp3182
(dp3183
g74
(dp3184
g101
g102
ssg83
g3173
sg76
(lp3185
S':'
asbag69
(g90
g71
NtRp3186
(dp3187
g74
(dp3188
sg83
g3173
sg76
(lp3189
g69
(g70
g71
NtRp3190
(dp3191
g74
(dp3192
g82
I3
ssg83
g3186
sg76
(lp3193
g1651
asbasbasbag69
(g85
g71
NtRp3194
(dp3195
g74
(dp3196
sg83
g2770
sg76
(lp3197
g69
(g90
g71
NtRp3198
(dp3199
g74
(dp3200
g94
g95
ssg83
g3194
sg76
(lp3201
S'SERVER_SOFTWARE'
p3202
asbag69
(g90
g71
NtRp3203
(dp3204
g74
(dp3205
g101
g102
ssg83
g3194
sg76
(lp3206
S':'
asbag69
(g90
g71
NtRp3207
(dp3208
g74
(dp3209
sg83
g3194
sg76
(lp3210
g69
(g70
g71
NtRp3211
(dp3212
g74
(dp3213
g82
I3
ssg83
g3207
sg76
(lp3214
g1673
asbasbasbag69
(g85
g71
NtRp3215
(dp3216
g74
(dp3217
sg83
g2770
sg76
(lp3218
g69
(g90
g71
NtRp3219
(dp3220
g74
(dp3221
g94
g95
ssg83
g3215
sg76
(lp3222
S'wsgi.errors'
p3223
asbag69
(g90
g71
NtRp3224
(dp3225
g74
(dp3226
g101
g102
ssg83
g3215
sg76
(lp3227
S':'
asbag69
(g90
g71
NtRp3228
(dp3229
g74
(dp3230
sg83
g3215
sg76
(lp3231
g69
(g70
g71
NtRp3232
(dp3233
g74
(dp3234
g82
I3
ssg83
g3228
sg76
(lp3235
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p3236
asbasbasbag69
(g85
g71
NtRp3237
(dp3238
g74
(dp3239
sg83
g2770
sg76
(lp3240
g69
(g90
g71
NtRp3241
(dp3242
g74
(dp3243
g94
g95
ssg83
g3237
sg76
(lp3244
S'wsgi.file_wrapper'
p3245
asbag69
(g90
g71
NtRp3246
(dp3247
g74
(dp3248
g101
g102
ssg83
g3237
sg76
(lp3249
S':'
asbag69
(g90
g71
NtRp3250
(dp3251
g74
(dp3252
sg83
g3237
sg76
(lp3253
g69
(g70
g71
NtRp3254
(dp3255
g74
(dp3256
g82
I3
ssg83
g3250
sg76
(lp3257
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3258
asbasbasbag69
(g85
g71
NtRp3259
(dp3260
g74
(dp3261
sg83
g2770
sg76
(lp3262
g69
(g90
g71
NtRp3263
(dp3264
g74
(dp3265
g94
g95
ssg83
g3259
sg76
(lp3266
S'wsgi.input'
p3267
asbag69
(g90
g71
NtRp3268
(dp3269
g74
(dp3270
g101
g102
ssg83
g3259
sg76
(lp3271
S':'
asbag69
(g90
g71
NtRp3272
(dp3273
g74
(dp3274
sg83
g3259
sg76
(lp3275
g69
(g70
g71
NtRp3276
(dp3277
g74
(dp3278
g82
I3
ssg83
g3272
sg76
(lp3279
S'<cStringIO.StringO object at 0xabb1bc0>'
p3280
asbasbasbag69
(g85
g71
NtRp3281
(dp3282
g74
(dp3283
sg83
g2770
sg76
(lp3284
g69
(g90
g71
NtRp3285
(dp3286
g74
(dp3287
g94
g95
ssg83
g3281
sg76
(lp3288
S'wsgi.multiprocess'
p3289
asbag69
(g90
g71
NtRp3290
(dp3291
g74
(dp3292
g101
g102
ssg83
g3281
sg76
(lp3293
S':'
asbag69
(g90
g71
NtRp3294
(dp3295
g74
(dp3296
sg83
g3281
sg76
(lp3297
g69
(g70
g71
NtRp3298
(dp3299
g74
(dp3300
g82
I3
ssg83
g3294
sg76
(lp3301
g112
asbasbasbag69
(g85
g71
NtRp3302
(dp3303
g74
(dp3304
sg83
g2770
sg76
(lp3305
g69
(g90
g71
NtRp3306
(dp3307
g74
(dp3308
g94
g95
ssg83
g3302
sg76
(lp3309
S'wsgi.multithread'
p3310
asbag69
(g90
g71
NtRp3311
(dp3312
g74
(dp3313
g101
g102
ssg83
g3302
sg76
(lp3314
S':'
asbag69
(g90
g71
NtRp3315
(dp3316
g74
(dp3317
sg83
g3302
sg76
(lp3318
g69
(g70
g71
NtRp3319
(dp3320
g74
(dp3321
g82
I3
ssg83
g3315
sg76
(lp3322
g1890
asbasbasbag69
(g85
g71
NtRp3323
(dp3324
g74
(dp3325
sg83
g2770
sg76
(lp3326
g69
(g90
g71
NtRp3327
(dp3328
g74
(dp3329
g94
g95
ssg83
g3323
sg76
(lp3330
S'wsgi.run_once'
p3331
asbag69
(g90
g71
NtRp3332
(dp3333
g74
(dp3334
g101
g102
ssg83
g3323
sg76
(lp3335
S':'
asbag69
(g90
g71
NtRp3336
(dp3337
g74
(dp3338
sg83
g3323
sg76
(lp3339
g69
(g70
g71
NtRp3340
(dp3341
g74
(dp3342
g82
I3
ssg83
g3336
sg76
(lp3343
g112
asbasbasbag69
(g85
g71
NtRp3344
(dp3345
g74
(dp3346
sg83
g2770
sg76
(lp3347
g69
(g90
g71
NtRp3348
(dp3349
g74
(dp3350
g94
g95
ssg83
g3344
sg76
(lp3351
S'wsgi.url_scheme'
p3352
asbag69
(g90
g71
NtRp3353
(dp3354
g74
(dp3355
g101
g102
ssg83
g3344
sg76
(lp3356
S':'
asbag69
(g90
g71
NtRp3357
(dp3358
g74
(dp3359
sg83
g3344
sg76
(lp3360
g69
(g70
g71
NtRp3361
(dp3362
g74
(dp3363
g82
I3
ssg83
g3357
sg76
(lp3364
g1933
asbasbasbag69
(g85
g71
NtRp3365
(dp3366
g74
(dp3367
sg83
g2770
sg76
(lp3368
g69
(g90
g71
NtRp3369
(dp3370
g74
(dp3371
g94
g95
ssg83
g3365
sg76
(lp3372
S'wsgi.version'
p3373
asbag69
(g90
g71
NtRp3374
(dp3375
g74
(dp3376
g101
g102
ssg83
g3365
sg76
(lp3377
S':'
asbag69
(g90
g71
NtRp3378
(dp3379
g74
(dp3380
sg83
g3365
sg76
(lp3381
g69
(g70
g71
NtRp3382
(dp3383
g74
(dp3384
g82
I3
ssg83
g3378
sg76
(lp3385
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3386
(lp3387
(dp3388
S'file'
p3389
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3390
sS'dump'
p3391
(dp3392
S'environment'
p3393
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3394
sS'ccode'
p3395
S'<code object <module> at 0xaa28650, file "/home/...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3396
ssS'lnum'
p3397
I212
sS'lines'
p3398
(dp3399
I207
S'    try:'
p3400
sI208
S'        if isinstance(code, types.CodeType):'
p3401
sI209
S'            ccode = code'
p3402
sI210
S'        else:'
p3403
sI211
S'            ccode = compile2(code, layer)'
p3404
sI212
S'        exec ccode in environment'
p3405
sI213
S'    except HTTP:'
p3406
sI214
S'        raise'
p3407
sI215
S'    except RestrictedError:'
p3408
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3409
ssS'call'
p3410
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3411
sS'func'
p3412
S'restricted'
p3413
sa(dp3414
g3389
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3415
sg3391
(dp3416
sg3397
I1120
sg3398
(dp3417
I1109
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3418
sI1110
S'   """ per sample . takes id of the sample as the input """'
p3419
sI1111
S'   sid = request.args(0)'
p3420
sI1112
S'   sample = db(db.sample.id == sid).select().first()'
p3421
sI1113
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3422
sI1114
S'   form = SQLFORM(db.sample_files)'
p3423
sI1115
S'   form.vars.sample = sid'
p3424
sI1116
S'   return locals()'
p3425
sI1117
S''
sI1118
S''
ssg3410
S'()'
p3426
sg3412
S'<module>'
p3427
sa(dp3428
g3389
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3429
sg3391
(dp3430
S'self'
p3431
S'undefined'
p3432
sS'f'
S'<function list_all_dev_projects>'
p3433
ssg3397
I193
sg3398
(dp3434
I192
S'        self._vars = None'
p3435
sI193
S'        self._caller = lambda f: f()'
p3436
sI194
S'        self._view_environment = None'
p3437
sI195
S'        self._custom_commit = None'
p3438
sI196
S'        self._custom_rollback = None'
p3439
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3440
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3441
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3442
sI191
S"        self.delimiters = ('{{', '}}')"
p3443
ssg3410
S'(f=<function list_all_dev_projects>)'
p3444
sg3412
S'<lambda>'
p3445
sa(dp3446
g3389
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3447
sg3391
(dp3448
S'global grid'
p3449
S'<function grid>'
p3450
sS'ck'
p3451
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p3452
sS'links'
p3453
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>]}"
p3454
sS'db.project'
p3455
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p3456
sS'global SQLFORM'
p3457
S"<class 'gluon.sqlhtml.SQLFORM'>"
p3458
sS'create'
p3459
g3432
sS'editable'
p3460
g3432
sS'linked_tables'
p3461
g3432
sS's'
S"{'sample': <function <lambda>>}"
p3462
sS'deletable'
p3463
g3432
sS'fields'
p3464
g3432
sS'global db'
p3465
S'<DAL uri="sqlite://storage.sqlite">'
p3466
sS'fi'
p3467
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p3468
sS'SQLFORM.smartgrid'
p3469
S'<function smartgrid>'
p3470
sS'create_dict'
p3471
S"{'project': False, 'sample': True}"
p3472
sS'selectable'
p3473
g3432
sS'edit_dict'
p3474
S"{'project': False}"
p3475
sS'delete_dict'
p3476
S"{'project': False}"
p3477
ssg3397
I319
sg3398
(dp3478
I320
S'    return locals()'
p3479
sI321
S''
sI322
S'#gets table name and rowid as input and creates another row with same details as rowid recod has'
p3480
sI323
S'def tes(a):'
p3481
sI314
S"    links={'sample':l1}"
p3482
sI315
S'#customized Views for certain forms using router'
p3483
sI316
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3484
sI317
S'     \trouter(request.args)'
p3485
sI318
S"    s={'sample':lambda ids : redirect(URL('default', 'mapping_multiple', vars=dict(id=ids)))}"
p3486
sI319
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'],selectable = s)"
p3487
ssg3410
S'()'
p3488
sg3412
S'list_all_dev_projects'
p3489
sa(dp3490
g3389
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3491
sg3391
(dp3492
S'user_signature'
p3493
g1890
sS'kwargs'
p3494
S"{'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], 'selectable': <function <lambda>>}"
p3495
ssg3397
I2489
sg3398
(dp3496
I2484
S'                        A(SPAN(t), _class=trap_class(), _href=url('
p3497
sI2485
S'                          args=[args0, row[id_field_name]])))'
p3498
sI2486
S''
sI2487
S'        grid = SQLFORM.grid(query, args=request.args[:nargs], links=links,'
p3499
sI2488
S'                            links_in_grid=links_in_grid,'
p3500
sI2489
S'                            user_signature=user_signature, **kwargs)'
p3501
sI2490
S'        if isinstance(grid, DIV):'
p3502
sI2491
S"            header = table._plural + (field and ' for ' + field.name or '')"
p3503
sI2492
S'            breadcrumbs.append(LI(A(T(header), _class=trap_class(),'
p3504
sI2493
S"                                    _href=url()), _class='active w2p_grid_breadcrumb_elem'))"
p3505
ssg3410
S"(table=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, constraints={'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}, linked_tables=['experiment', 'sample', 'biosource', 'plant_growth_condition', 'treatments', 'harvests', 'extraction_preparation', 'gas_chromatography', 'liquid_chromatography', 'mass_spectroscopy', 'spectrophotometry', 'raw_data_storage_information'], links=[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, args=[], user_signature=True, divider='>', breadcrumbs_class='', **kwargs={'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], 'selectable': <function <lambda>>})"
p3506
sg3412
S'smartgrid'
p3507
sa(dp3508
g3389
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3509
sg3391
(dp3510
S'link'
p3511
S'<function <lambda>>'
p3512
sS'row'
p3513
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3514
ssg3397
I2258
sg3398
(dp3515
I2253
S'                    toadd = []'
p3516
sI2254
S'                    for link in links:'
p3517
sI2255
S'                        if isinstance(link, dict):'
p3518
sI2256
S"                            toadd.append(TD(link['body'](row)))"
p3519
sI2257
S'                        else:'
p3520
sI2258
S'                            if link(row):'
p3521
sI2259
S'                                row_buttons.append(link(row))'
p3522
sI2260
S"                    if links_placement in ['right', 'both']:"
p3523
sI2261
S'                        trcols.extend(toadd)'
p3524
sI2262
S"                    if links_placement in ['left', 'both']:"
p3525
ssg3410
S"(query=<Query ((sample.experiment = 1) AND (sample.experimentalist = 2))>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], field_id=<gluon.dal.Field object>, left=None, headers={}, orderby=None, groupby=None, searchable=True, sortable=True, paginate=20, deletable=True, editable=True, details=True, selectable=<function <lambda>>, create=True, csv=True, links=[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, upload=<function <lambda>>, args=['project', 'experiment.project', '1', 'sample.experiment', '1'], user_signature=True, maxtextlengths={}, maxtextlength=20, onvalidation=None, oncreate=None, onupdate=None, ondelete=None, sorter_icons=(<gluon.html.XML object>, <gluon.html.XML object>), ui={'button': 'ui-button-text-icon-primary', 'buttonadd': 'ui-icon ui-icon-plusthick', 'buttonback': 'ui-icon ui-icon-arrowreturnthick-1-w', 'buttondelete': 'ui-icon ui-icon-trash', 'buttonedit': 'ui-icon ui-icon-pencil', 'buttonexport': 'ui-icon ui-icon-transferthick-e-w', 'buttontable': 'ui-icon ui-icon-triangle-1-e', 'buttontext': 'ui-button-text', 'buttonview': 'ui-icon ui-icon-zoomin', 'content': 'ui-widget-content', ...}, showbuttontext=True, _class='web2py_grid', formname='web2py_grid', search_widget=<function <lambda>>, ignore_rw=False, formstyle='table3cols', exportclasses=None, formargs={}, createargs={}, editargs={}, viewargs={}, buttons_placement='right', links_placement='right')"
p3526
sg3412
S'grid'
p3527
sa(dp3528
g3389
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3529
sg3391
(dp3530
S'body'
p3531
g3432
sS'request.args'
p3532
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p3533
sS'args'
p3534
S"['experiment.project', '1', 'sample.experiment']"
p3535
sS'_href'
p3536
g3432
sS'global request'
p3537
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3538
sS'global tes'
p3539
S'<function tes>'
p3540
sS'l1'
p3541
g3432
sS'global URL'
p3542
S'<function URL>'
p3543
sS'header'
p3544
g3432
sS'row.id'
p3545
S'2'
sS'global A'
p3546
S"<class 'gluon.html.A'>"
p3547
sS'builtindict'
p3548
S"<type 'dict'>"
p3549
sS'row'
p3550
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3551
ssg3397
I313
sg3398
(dp3552
I308
S''
sI309
S"    create_dict = {'project':False,'sample':addsample}"
p3553
sI310
S'#Links for replicating samples'
p3554
sI311
S'    args= request.args[1:4]'
p3555
sI312
S'    args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]'
p3556
sI313
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args)),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3557
sI314
S"    links={'sample':l1}"
p3558
sI315
S'#customized Views for certain forms using router'
p3559
sI316
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3560
sI317
S'     \trouter(request.args)'
p3561
ssg3410
S"(row=<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>)"
p3562
sg3412
g3445
sa(dp3563
g3389
S'/home/anil/bootstrap/web2py/gluon/html.py'
p3564
sg3391
(dp3565
sg3397
I280
sg3398
(dp3566
I275
S'        if not isinstance(f, str):'
p3567
sI276
S"            if hasattr(f, '__name__'):"
p3568
sI277
S'                function = f.__name__'
p3569
sI278
S'            else:'
p3570
sI279
S'                raise SyntaxError('
p3571
sI280
S"                    'when calling URL, function or function name required')"
p3572
sI281
S"        elif '/' in f:"
p3573
sI282
S'            if f.startswith("/"):'
p3574
sI283
S'                f = f[1:]'
p3575
sI284
S"            items = f.split('/')"
p3576
ssg3410
S"(a='default', c='router', f=['experiment.project', '1', 'sample.experiment'], r=<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>, args=[], vars={}, anchor='', extension=None, env=<Storage {'debugging': False, 'http_user_agent':...6ec45b38081f44f469294d', 'wsgi_run_once': False}>, hmac_key=None, hash_vars=True, salt=None, user_signature=None, scheme=None, host=None, port=None, encode_embedded_slash=False, url_encode=True)"
p3577
sg3412
S'URL'
p3578
sasS'pyver'
p3579
S'Python 2.7.3: /usr/bin/python'
p3580
sS'session'
p3581
g69
(g70
g71
NtRp3582
(dp3583
g74
(dp3584
sg76
(lp3585
g69
(g78
g71
NtRp3586
(dp3587
g74
(dp3588
g82
I5
ssg83
Nsg76
(lp3589
g69
(g85
g71
NtRp3590
(dp3591
g74
(dp3592
sg83
g3586
sg76
(lp3593
g69
(g90
g71
NtRp3594
(dp3595
g74
(dp3596
g94
g95
ssg83
g3590
sg76
(lp3597
S'auth'
p3598
asbag69
(g90
g71
NtRp3599
(dp3600
g74
(dp3601
g101
g102
ssg83
g3590
sg76
(lp3602
S':'
asbag69
(g90
g71
NtRp3603
(dp3604
g74
(dp3605
sg83
g3590
sg76
(lp3606
g69
(g70
g71
NtRp3607
(dp3608
g74
(dp3609
g82
I5
ssg83
g3603
sg76
(lp3610
g69
(g78
g71
NtRp3611
(dp3612
g74
(dp3613
g82
I4
ssg83
Nsg76
(lp3614
g69
(g85
g71
NtRp3615
(dp3616
g74
(dp3617
sg83
g3611
sg76
(lp3618
g69
(g90
g71
NtRp3619
(dp3620
g74
(dp3621
g94
g95
ssg83
g3615
sg76
(lp3622
S'expiration'
p3623
asbag69
(g90
g71
NtRp3624
(dp3625
g74
(dp3626
g101
g102
ssg83
g3615
sg76
(lp3627
S':'
asbag69
(g90
g71
NtRp3628
(dp3629
g74
(dp3630
sg83
g3615
sg76
(lp3631
g69
(g70
g71
NtRp3632
(dp3633
g74
(dp3634
g82
I4
ssg83
g3628
sg76
(lp3635
S'2592000'
p3636
asbasbasbag69
(g85
g71
NtRp3637
(dp3638
g74
(dp3639
sg83
g3611
sg76
(lp3640
g69
(g90
g71
NtRp3641
(dp3642
g74
(dp3643
g94
g95
ssg83
g3637
sg76
(lp3644
S'hmac_key'
p3645
asbag69
(g90
g71
NtRp3646
(dp3647
g74
(dp3648
g101
g102
ssg83
g3637
sg76
(lp3649
S':'
asbag69
(g90
g71
NtRp3650
(dp3651
g74
(dp3652
sg83
g3637
sg76
(lp3653
g69
(g70
g71
NtRp3654
(dp3655
g74
(dp3656
g82
I4
ssg83
g3650
sg76
(lp3657
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3658
asbasbasbag69
(g85
g71
NtRp3659
(dp3660
g74
(dp3661
sg83
g3611
sg76
(lp3662
g69
(g90
g71
NtRp3663
(dp3664
g74
(dp3665
g94
g95
ssg83
g3659
sg76
(lp3666
S'last_visit'
p3667
asbag69
(g90
g71
NtRp3668
(dp3669
g74
(dp3670
g101
g102
ssg83
g3659
sg76
(lp3671
S':'
asbag69
(g90
g71
NtRp3672
(dp3673
g74
(dp3674
sg83
g3659
sg76
(lp3675
g69
(g70
g71
NtRp3676
(dp3677
g74
(dp3678
g82
I4
ssg83
g3672
sg76
(lp3679
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3680
asbasbasbag69
(g85
g71
NtRp3681
(dp3682
g74
(dp3683
sg83
g3611
sg76
(lp3684
g69
(g90
g71
NtRp3685
(dp3686
g74
(dp3687
g94
g95
ssg83
g3681
sg76
(lp3688
S'remember'
p3689
asbag69
(g90
g71
NtRp3690
(dp3691
g74
(dp3692
g101
g102
ssg83
g3681
sg76
(lp3693
S':'
asbag69
(g90
g71
NtRp3694
(dp3695
g74
(dp3696
sg83
g3681
sg76
(lp3697
g69
(g70
g71
NtRp3698
(dp3699
g74
(dp3700
g82
I4
ssg83
g3694
sg76
(lp3701
g1890
asbasbasbag69
(g85
g71
NtRp3702
(dp3703
g74
(dp3704
sg83
g3611
sg76
(lp3705
g69
(g90
g71
NtRp3706
(dp3707
g74
(dp3708
g94
g95
ssg83
g3702
sg76
(lp3709
S'user'
p3710
asbag69
(g90
g71
NtRp3711
(dp3712
g74
(dp3713
g101
g102
ssg83
g3702
sg76
(lp3714
S':'
asbag69
(g90
g71
NtRp3715
(dp3716
g74
(dp3717
sg83
g3702
sg76
(lp3718
g69
(g70
g71
NtRp3719
(dp3720
g74
(dp3721
g82
I4
ssg83
g3715
sg76
(lp3722
g69
(g78
g71
NtRp3723
(dp3724
g74
(dp3725
g82
I3
ssg83
Nsg76
(lp3726
g69
(g85
g71
NtRp3727
(dp3728
g74
(dp3729
sg83
g3723
sg76
(lp3730
g69
(g90
g71
NtRp3731
(dp3732
g74
(dp3733
g94
g95
ssg83
g3727
sg76
(lp3734
S'address'
p3735
asbag69
(g90
g71
NtRp3736
(dp3737
g74
(dp3738
g101
g102
ssg83
g3727
sg76
(lp3739
S':'
asbag69
(g90
g71
NtRp3740
(dp3741
g74
(dp3742
sg83
g3727
sg76
(lp3743
g69
(g70
g71
NtRp3744
(dp3745
g74
(dp3746
g82
I3
ssg83
g3740
sg76
(lp3747
S'a'
asbasbasbag69
(g85
g71
NtRp3748
(dp3749
g74
(dp3750
sg83
g3723
sg76
(lp3751
g69
(g90
g71
NtRp3752
(dp3753
g74
(dp3754
g94
g95
ssg83
g3748
sg76
(lp3755
S'affiliated_to'
p3756
asbag69
(g90
g71
NtRp3757
(dp3758
g74
(dp3759
g101
g102
ssg83
g3748
sg76
(lp3760
S':'
asbag69
(g90
g71
NtRp3761
(dp3762
g74
(dp3763
sg83
g3748
sg76
(lp3764
g69
(g70
g71
NtRp3765
(dp3766
g74
(dp3767
g82
I3
ssg83
g3761
sg76
(lp3768
S'a'
asbasbasbag69
(g85
g71
NtRp3769
(dp3770
g74
(dp3771
sg83
g3723
sg76
(lp3772
g69
(g90
g71
NtRp3773
(dp3774
g74
(dp3775
g94
g95
ssg83
g3769
sg76
(lp3776
S'city'
p3777
asbag69
(g90
g71
NtRp3778
(dp3779
g74
(dp3780
g101
g102
ssg83
g3769
sg76
(lp3781
S':'
asbag69
(g90
g71
NtRp3782
(dp3783
g74
(dp3784
sg83
g3769
sg76
(lp3785
g69
(g70
g71
NtRp3786
(dp3787
g74
(dp3788
g82
I3
ssg83
g3782
sg76
(lp3789
S'a'
asbasbasbag69
(g85
g71
NtRp3790
(dp3791
g74
(dp3792
sg83
g3723
sg76
(lp3793
g69
(g90
g71
NtRp3794
(dp3795
g74
(dp3796
g94
g95
ssg83
g3790
sg76
(lp3797
S'country'
p3798
asbag69
(g90
g71
NtRp3799
(dp3800
g74
(dp3801
g101
g102
ssg83
g3790
sg76
(lp3802
S':'
asbag69
(g90
g71
NtRp3803
(dp3804
g74
(dp3805
sg83
g3790
sg76
(lp3806
g69
(g70
g71
NtRp3807
(dp3808
g74
(dp3809
g82
I3
ssg83
g3803
sg76
(lp3810
S'India'
p3811
asbasbasbag69
(g85
g71
NtRp3812
(dp3813
g74
(dp3814
sg83
g3723
sg76
(lp3815
g69
(g90
g71
NtRp3816
(dp3817
g74
(dp3818
g94
g95
ssg83
g3812
sg76
(lp3819
S'email'
p3820
asbag69
(g90
g71
NtRp3821
(dp3822
g74
(dp3823
g101
g102
ssg83
g3812
sg76
(lp3824
S':'
asbag69
(g90
g71
NtRp3825
(dp3826
g74
(dp3827
sg83
g3812
sg76
(lp3828
g69
(g70
g71
NtRp3829
(dp3830
g74
(dp3831
g82
I3
ssg83
g3825
sg76
(lp3832
S'anil.iiith@gmail.com'
p3833
asbasbasbag69
(g85
g71
NtRp3834
(dp3835
g74
(dp3836
sg83
g3723
sg76
(lp3837
g69
(g90
g71
NtRp3838
(dp3839
g74
(dp3840
g94
g95
ssg83
g3834
sg76
(lp3841
S'first_name'
p3842
asbag69
(g90
g71
NtRp3843
(dp3844
g74
(dp3845
g101
g102
ssg83
g3834
sg76
(lp3846
S':'
asbag69
(g90
g71
NtRp3847
(dp3848
g74
(dp3849
sg83
g3834
sg76
(lp3850
g69
(g70
g71
NtRp3851
(dp3852
g74
(dp3853
g82
I3
ssg83
g3847
sg76
(lp3854
S'anil'
p3855
asbasbasbag69
(g85
g71
NtRp3856
(dp3857
g74
(dp3858
sg83
g3723
sg76
(lp3859
g69
(g90
g71
NtRp3860
(dp3861
g74
(dp3862
g94
g95
ssg83
g3856
sg76
(lp3863
S'id'
p3864
asbag69
(g90
g71
NtRp3865
(dp3866
g74
(dp3867
g101
g102
ssg83
g3856
sg76
(lp3868
S':'
asbag69
(g90
g71
NtRp3869
(dp3870
g74
(dp3871
sg83
g3856
sg76
(lp3872
g69
(g70
g71
NtRp3873
(dp3874
g74
(dp3875
g82
I3
ssg83
g3869
sg76
(lp3876
S'2'
asbasbasbag69
(g85
g71
NtRp3877
(dp3878
g74
(dp3879
sg83
g3723
sg76
(lp3880
g69
(g90
g71
NtRp3881
(dp3882
g74
(dp3883
g94
g95
ssg83
g3877
sg76
(lp3884
S'last_name'
p3885
asbag69
(g90
g71
NtRp3886
(dp3887
g74
(dp3888
g101
g102
ssg83
g3877
sg76
(lp3889
S':'
asbag69
(g90
g71
NtRp3890
(dp3891
g74
(dp3892
sg83
g3877
sg76
(lp3893
g69
(g70
g71
NtRp3894
(dp3895
g74
(dp3896
g82
I3
ssg83
g3890
sg76
(lp3897
S'n'
asbasbasbag69
(g85
g71
NtRp3898
(dp3899
g74
(dp3900
sg83
g3723
sg76
(lp3901
g69
(g90
g71
NtRp3902
(dp3903
g74
(dp3904
g94
g95
ssg83
g3898
sg76
(lp3905
S'mobile'
p3906
asbag69
(g90
g71
NtRp3907
(dp3908
g74
(dp3909
g101
g102
ssg83
g3898
sg76
(lp3910
S':'
asbag69
(g90
g71
NtRp3911
(dp3912
g74
(dp3913
sg83
g3898
sg76
(lp3914
g69
(g70
g71
NtRp3915
(dp3916
g74
(dp3917
g82
I3
ssg83
g3911
sg76
(lp3918
S'1233'
p3919
asbasbasbag69
(g85
g71
NtRp3920
(dp3921
g74
(dp3922
sg83
g3723
sg76
(lp3923
g69
(g90
g71
NtRp3924
(dp3925
g74
(dp3926
g94
g95
ssg83
g3920
sg76
(lp3927
S'phone'
p3928
asbag69
(g90
g71
NtRp3929
(dp3930
g74
(dp3931
g101
g102
ssg83
g3920
sg76
(lp3932
S':'
asbag69
(g90
g71
NtRp3933
(dp3934
g74
(dp3935
sg83
g3920
sg76
(lp3936
g69
(g70
g71
NtRp3937
(dp3938
g74
(dp3939
g82
I3
ssg83
g3933
sg76
(lp3940
S'123'
p3941
asbasbasbag69
(g85
g71
NtRp3942
(dp3943
g74
(dp3944
sg83
g3723
sg76
(lp3945
g69
(g90
g71
NtRp3946
(dp3947
g74
(dp3948
g94
g95
ssg83
g3942
sg76
(lp3949
S'position'
p3950
asbag69
(g90
g71
NtRp3951
(dp3952
g74
(dp3953
g101
g102
ssg83
g3942
sg76
(lp3954
S':'
asbag69
(g90
g71
NtRp3955
(dp3956
g74
(dp3957
sg83
g3942
sg76
(lp3958
g69
(g70
g71
NtRp3959
(dp3960
g74
(dp3961
g82
I3
ssg83
g3955
sg76
(lp3962
S'0'
asbasbasbag69
(g85
g71
NtRp3963
(dp3964
g74
(dp3965
sg83
g3723
sg76
(lp3966
g69
(g90
g71
NtRp3967
(dp3968
g74
(dp3969
g94
g95
ssg83
g3963
sg76
(lp3970
S'postal_code'
p3971
asbag69
(g90
g71
NtRp3972
(dp3973
g74
(dp3974
g101
g102
ssg83
g3963
sg76
(lp3975
S':'
asbag69
(g90
g71
NtRp3976
(dp3977
g74
(dp3978
sg83
g3963
sg76
(lp3979
g69
(g70
g71
NtRp3980
(dp3981
g74
(dp3982
g82
I3
ssg83
g3976
sg76
(lp3983
S'123'
p3984
asbasbasbag69
(g85
g71
NtRp3985
(dp3986
g74
(dp3987
sg83
g3723
sg76
(lp3988
g69
(g90
g71
NtRp3989
(dp3990
g74
(dp3991
g94
g95
ssg83
g3985
sg76
(lp3992
S'registration_at'
p3993
asbag69
(g90
g71
NtRp3994
(dp3995
g74
(dp3996
g101
g102
ssg83
g3985
sg76
(lp3997
S':'
asbag69
(g90
g71
NtRp3998
(dp3999
g74
(dp4000
sg83
g3985
sg76
(lp4001
g69
(g70
g71
NtRp4002
(dp4003
g74
(dp4004
g82
I3
ssg83
g3998
sg76
(lp4005
S'0'
asbasbasbag69
(g85
g71
NtRp4006
(dp4007
g74
(dp4008
sg83
g3723
sg76
(lp4009
g69
(g90
g71
NtRp4010
(dp4011
g74
(dp4012
g94
g95
ssg83
g4006
sg76
(lp4013
S'registration_id'
p4014
asbag69
(g90
g71
NtRp4015
(dp4016
g74
(dp4017
g101
g102
ssg83
g4006
sg76
(lp4018
S':'
asbag69
(g90
g71
NtRp4019
(dp4020
g74
(dp4021
sg83
g4006
sg76
(lp4022
g69
(g70
g71
NtRp4023
(dp4024
g74
(dp4025
g82
I3
ssg83
g4019
sg76
(lp4026
S''
asbasbasbag69
(g85
g71
NtRp4027
(dp4028
g74
(dp4029
sg83
g3723
sg76
(lp4030
g69
(g90
g71
NtRp4031
(dp4032
g74
(dp4033
g94
g95
ssg83
g4027
sg76
(lp4034
S'registration_key'
p4035
asbag69
(g90
g71
NtRp4036
(dp4037
g74
(dp4038
g101
g102
ssg83
g4027
sg76
(lp4039
S':'
asbag69
(g90
g71
NtRp4040
(dp4041
g74
(dp4042
sg83
g4027
sg76
(lp4043
g69
(g70
g71
NtRp4044
(dp4045
g74
(dp4046
g82
I3
ssg83
g4040
sg76
(lp4047
S''
asbasbasbag69
(g85
g71
NtRp4048
(dp4049
g74
(dp4050
sg83
g3723
sg76
(lp4051
g69
(g90
g71
NtRp4052
(dp4053
g74
(dp4054
g94
g95
ssg83
g4048
sg76
(lp4055
S'reset_password_key'
p4056
asbag69
(g90
g71
NtRp4057
(dp4058
g74
(dp4059
g101
g102
ssg83
g4048
sg76
(lp4060
S':'
asbag69
(g90
g71
NtRp4061
(dp4062
g74
(dp4063
sg83
g4048
sg76
(lp4064
g69
(g70
g71
NtRp4065
(dp4066
g74
(dp4067
g82
I3
ssg83
g4061
sg76
(lp4068
S''
asbasbasbag69
(g85
g71
NtRp4069
(dp4070
g74
(dp4071
sg83
g3723
sg76
(lp4072
g69
(g90
g71
NtRp4073
(dp4074
g74
(dp4075
g94
g95
ssg83
g4069
sg76
(lp4076
S'title'
p4077
asbag69
(g90
g71
NtRp4078
(dp4079
g74
(dp4080
g101
g102
ssg83
g4069
sg76
(lp4081
S':'
asbag69
(g90
g71
NtRp4082
(dp4083
g74
(dp4084
sg83
g4069
sg76
(lp4085
g69
(g70
g71
NtRp4086
(dp4087
g74
(dp4088
g82
I3
ssg83
g4082
sg76
(lp4089
S'0'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4090
(dp4091
g74
(dp4092
sg83
g3611
sg76
(lp4093
g69
(g90
g71
NtRp4094
(dp4095
g74
(dp4096
g94
g95
ssg83
g4090
sg76
(lp4097
S'user_groups'
p4098
asbag69
(g90
g71
NtRp4099
(dp4100
g74
(dp4101
g101
g102
ssg83
g4090
sg76
(lp4102
S':'
asbag69
(g90
g71
NtRp4103
(dp4104
g74
(dp4105
sg83
g4090
sg76
(lp4106
g69
(g70
g71
NtRp4107
(dp4108
g74
(dp4109
g82
I4
ssg83
g4103
sg76
(lp4110
g69
(g78
g71
NtRp4111
(dp4112
g74
(dp4113
g82
I3
ssg83
Nsg76
(lp4114
g69
(g85
g71
NtRp4115
(dp4116
g74
(dp4117
sg83
g4111
sg76
(lp4118
g69
(g90
g71
NtRp4119
(dp4120
g74
(dp4121
g94
g95
ssg83
g4115
sg76
(lp4122
S'9'
asbag69
(g90
g71
NtRp4123
(dp4124
g74
(dp4125
g101
g102
ssg83
g4115
sg76
(lp4126
S':'
asbag69
(g90
g71
NtRp4127
(dp4128
g74
(dp4129
sg83
g4115
sg76
(lp4130
g69
(g70
g71
NtRp4131
(dp4132
g74
(dp4133
g82
I3
ssg83
g4127
sg76
(lp4134
S'user_2'
p4135
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4136
(dp4137
g74
(dp4138
sg83
g3586
sg76
(lp4139
g69
(g90
g71
NtRp4140
(dp4141
g74
(dp4142
g94
g95
ssg83
g4136
sg76
(lp4143
S'flash'
p4144
asbag69
(g90
g71
NtRp4145
(dp4146
g74
(dp4147
g101
g102
ssg83
g4136
sg76
(lp4148
S':'
asbag69
(g90
g71
NtRp4149
(dp4150
g74
(dp4151
sg83
g4136
sg76
(lp4152
g69
(g70
g71
NtRp4153
(dp4154
g74
(dp4155
g82
I5
ssg83
g4149
sg76
(lp4156
S'None'
p4157
asbasbasbag69
(g85
g71
NtRp4158
(dp4159
g74
(dp4160
sg83
g3586
sg76
(lp4161
g69
(g90
g71
NtRp4162
(dp4163
g74
(dp4164
g94
g95
ssg83
g4158
sg76
(lp4165
S'last_orderby'
p4166
asbag69
(g90
g71
NtRp4167
(dp4168
g74
(dp4169
g101
g102
ssg83
g4158
sg76
(lp4170
S':'
asbag69
(g90
g71
NtRp4171
(dp4172
g74
(dp4173
sg83
g4158
sg76
(lp4174
g69
(g70
g71
NtRp4175
(dp4176
g74
(dp4177
g82
I5
ssg83
g4171
sg76
(lp4178
S'None'
p4179
asbasbasbag69
(g85
g71
NtRp4180
(dp4181
g74
(dp4182
sg83
g3586
sg76
(lp4183
g69
(g90
g71
NtRp4184
(dp4185
g74
(dp4186
g94
g95
ssg83
g4180
sg76
(lp4187
S'last_query'
p4188
asbag69
(g90
g71
NtRp4189
(dp4190
g74
(dp4191
g101
g102
ssg83
g4180
sg76
(lp4192
S':'
asbag69
(g90
g71
NtRp4193
(dp4194
g74
(dp4195
sg83
g4180
sg76
(lp4196
g69
(g70
g71
NtRp4197
(dp4198
g74
(dp4199
g82
I5
ssg83
g4193
sg76
(lp4200
S'db.project.id>0'
p4201
asbasbasbasbasbsS'etype'
p4202
S"<type 'exceptions.SyntaxError'>"
p4203
sS'date'
p4204
S'Sun Feb 24 19:53:09 2013'
p4205
sS'response'
p4206
g69
(g70
g71
NtRp4207
(dp4208
g74
(dp4209
sg76
(lp4210
g69
(g78
g71
NtRp4211
(dp4212
g74
(dp4213
g82
I5
ssg83
Nsg76
(lp4214
g69
(g85
g71
NtRp4215
(dp4216
g74
(dp4217
sg83
g4211
sg76
(lp4218
g69
(g90
g71
NtRp4219
(dp4220
g74
(dp4221
g94
g95
ssg83
g4215
sg76
(lp4222
g230
asbag69
(g90
g71
NtRp4223
(dp4224
g74
(dp4225
g101
g102
ssg83
g4215
sg76
(lp4226
S':'
asbag69
(g90
g71
NtRp4227
(dp4228
g74
(dp4229
sg83
g4215
sg76
(lp4230
g69
(g70
g71
NtRp4231
(dp4232
g74
(dp4233
g82
I5
ssg83
g4227
sg76
(lp4234
S'<cStringIO.StringO object at 0x9c62ca0>'
p4235
asbasbasbag69
(g85
g71
NtRp4236
(dp4237
g74
(dp4238
sg83
g4211
sg76
(lp4239
g69
(g90
g71
NtRp4240
(dp4241
g74
(dp4242
g94
g95
ssg83
g4236
sg76
(lp4243
g318
asbag69
(g90
g71
NtRp4244
(dp4245
g74
(dp4246
g101
g102
ssg83
g4236
sg76
(lp4247
S':'
asbag69
(g90
g71
NtRp4248
(dp4249
g74
(dp4250
sg83
g4236
sg76
(lp4251
g69
(g70
g71
NtRp4252
(dp4253
g74
(dp4254
g82
I5
ssg83
g4248
sg76
(lp4255
g69
(g78
g71
NtRp4256
(dp4257
g74
(dp4258
g82
I4
ssg83
Nsg76
(lp4259
g69
(g85
g71
NtRp4260
(dp4261
g74
(dp4262
sg83
g4256
sg76
(lp4263
g69
(g90
g71
NtRp4264
(dp4265
g74
(dp4266
g94
g95
ssg83
g4260
sg76
(lp4267
S'session_id_dev_bootstrap_ch'
p4268
asbag69
(g90
g71
NtRp4269
(dp4270
g74
(dp4271
g101
g102
ssg83
g4260
sg76
(lp4272
S':'
asbag69
(g90
g71
NtRp4273
(dp4274
g74
(dp4275
sg83
g4260
sg76
(lp4276
g69
(g70
g71
NtRp4277
(dp4278
g74
(dp4279
g82
I4
ssg83
g4273
sg76
(lp4280
g736
ag69
(g78
g71
NtRp4281
(dp4282
g74
(dp4283
g82
I3
ssg83
Nsg76
(lp4284
g69
(g85
g71
NtRp4285
(dp4286
g74
(dp4287
sg83
g4281
sg76
(lp4288
g69
(g90
g71
NtRp4289
(dp4290
g74
(dp4291
g94
g95
ssg83
g4285
sg76
(lp4292
g369
asbag69
(g90
g71
NtRp4293
(dp4294
g74
(dp4295
g101
g102
ssg83
g4285
sg76
(lp4296
S':'
asbag69
(g90
g71
NtRp4297
(dp4298
g74
(dp4299
sg83
g4285
sg76
(lp4300
g69
(g70
g71
NtRp4301
(dp4302
g74
(dp4303
g82
I3
ssg83
g4297
sg76
(lp4304
S''
asbasbasbag69
(g85
g71
NtRp4305
(dp4306
g74
(dp4307
sg83
g4281
sg76
(lp4308
g69
(g90
g71
NtRp4309
(dp4310
g74
(dp4311
g94
g95
ssg83
g4305
sg76
(lp4312
g390
asbag69
(g90
g71
NtRp4313
(dp4314
g74
(dp4315
g101
g102
ssg83
g4305
sg76
(lp4316
S':'
asbag69
(g90
g71
NtRp4317
(dp4318
g74
(dp4319
sg83
g4305
sg76
(lp4320
g69
(g70
g71
NtRp4321
(dp4322
g74
(dp4323
g82
I3
ssg83
g4317
sg76
(lp4324
S''
asbasbasbag69
(g85
g71
NtRp4325
(dp4326
g74
(dp4327
sg83
g4281
sg76
(lp4328
g69
(g90
g71
NtRp4329
(dp4330
g74
(dp4331
g94
g95
ssg83
g4325
sg76
(lp4332
g411
asbag69
(g90
g71
NtRp4333
(dp4334
g74
(dp4335
g101
g102
ssg83
g4325
sg76
(lp4336
S':'
asbag69
(g90
g71
NtRp4337
(dp4338
g74
(dp4339
sg83
g4325
sg76
(lp4340
g69
(g70
g71
NtRp4341
(dp4342
g74
(dp4343
g82
I3
ssg83
g4337
sg76
(lp4344
S'2592000'
p4345
asbasbasbag69
(g85
g71
NtRp4346
(dp4347
g74
(dp4348
sg83
g4281
sg76
(lp4349
g69
(g90
g71
NtRp4350
(dp4351
g74
(dp4352
g94
g95
ssg83
g4346
sg76
(lp4353
g432
asbag69
(g90
g71
NtRp4354
(dp4355
g74
(dp4356
g101
g102
ssg83
g4346
sg76
(lp4357
S':'
asbag69
(g90
g71
NtRp4358
(dp4359
g74
(dp4360
sg83
g4346
sg76
(lp4361
g69
(g70
g71
NtRp4362
(dp4363
g74
(dp4364
g82
I3
ssg83
g4358
sg76
(lp4365
S''
asbasbasbag69
(g85
g71
NtRp4366
(dp4367
g74
(dp4368
sg83
g4281
sg76
(lp4369
g69
(g90
g71
NtRp4370
(dp4371
g74
(dp4372
g94
g95
ssg83
g4366
sg76
(lp4373
g453
asbag69
(g90
g71
NtRp4374
(dp4375
g74
(dp4376
g101
g102
ssg83
g4366
sg76
(lp4377
S':'
asbag69
(g90
g71
NtRp4378
(dp4379
g74
(dp4380
sg83
g4366
sg76
(lp4381
g69
(g70
g71
NtRp4382
(dp4383
g74
(dp4384
g82
I3
ssg83
g4378
sg76
(lp4385
S''
asbasbasbag69
(g85
g71
NtRp4386
(dp4387
g74
(dp4388
sg83
g4281
sg76
(lp4389
g69
(g90
g71
NtRp4390
(dp4391
g74
(dp4392
g94
g95
ssg83
g4386
sg76
(lp4393
g474
asbag69
(g90
g71
NtRp4394
(dp4395
g74
(dp4396
g101
g102
ssg83
g4386
sg76
(lp4397
S':'
asbag69
(g90
g71
NtRp4398
(dp4399
g74
(dp4400
sg83
g4386
sg76
(lp4401
g69
(g70
g71
NtRp4402
(dp4403
g74
(dp4404
g82
I3
ssg83
g4398
sg76
(lp4405
S'/'
asbasbasbag69
(g85
g71
NtRp4406
(dp4407
g74
(dp4408
sg83
g4281
sg76
(lp4409
g69
(g90
g71
NtRp4410
(dp4411
g74
(dp4412
g94
g95
ssg83
g4406
sg76
(lp4413
g495
asbag69
(g90
g71
NtRp4414
(dp4415
g74
(dp4416
g101
g102
ssg83
g4406
sg76
(lp4417
S':'
asbag69
(g90
g71
NtRp4418
(dp4419
g74
(dp4420
sg83
g4406
sg76
(lp4421
g69
(g70
g71
NtRp4422
(dp4423
g74
(dp4424
g82
I3
ssg83
g4418
sg76
(lp4425
S''
asbasbasbag69
(g85
g71
NtRp4426
(dp4427
g74
(dp4428
sg83
g4281
sg76
(lp4429
g69
(g90
g71
NtRp4430
(dp4431
g74
(dp4432
g94
g95
ssg83
g4426
sg76
(lp4433
g516
asbag69
(g90
g71
NtRp4434
(dp4435
g74
(dp4436
g101
g102
ssg83
g4426
sg76
(lp4437
S':'
asbag69
(g90
g71
NtRp4438
(dp4439
g74
(dp4440
sg83
g4426
sg76
(lp4441
g69
(g70
g71
NtRp4442
(dp4443
g74
(dp4444
g82
I3
ssg83
g4438
sg76
(lp4445
S''
asbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4446
(dp4447
g74
(dp4448
sg83
g4211
sg76
(lp4449
g69
(g90
g71
NtRp4450
(dp4451
g74
(dp4452
g94
g95
ssg83
g4446
sg76
(lp4453
S'delimiters'
p4454
asbag69
(g90
g71
NtRp4455
(dp4456
g74
(dp4457
g101
g102
ssg83
g4446
sg76
(lp4458
S':'
asbag69
(g90
g71
NtRp4459
(dp4460
g74
(dp4461
sg83
g4446
sg76
(lp4462
g69
(g70
g71
NtRp4463
(dp4464
g74
(dp4465
g82
I5
ssg83
g4459
sg76
(lp4466
g69
(g78
g71
NtRp4467
(dp4468
g74
(dp4469
g82
I4
ssg83
Nsg76
(lp4470
g69
(g85
g71
NtRp4471
(dp4472
g74
(dp4473
sg83
g4467
sg76
(lp4474
g69
(g90
g71
NtRp4475
(dp4476
g74
(dp4477
sg83
g4471
sg76
(lp4478
g69
(g70
g71
NtRp4479
(dp4480
g74
(dp4481
g82
I4
ssg83
g4475
sg76
(lp4482
S'{{'
p4483
asbasbasbag69
(g85
g71
NtRp4484
(dp4485
g74
(dp4486
sg83
g4467
sg76
(lp4487
g69
(g90
g71
NtRp4488
(dp4489
g74
(dp4490
sg83
g4484
sg76
(lp4491
g69
(g70
g71
NtRp4492
(dp4493
g74
(dp4494
g82
I4
ssg83
g4488
sg76
(lp4495
S'}}'
p4496
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4497
(dp4498
g74
(dp4499
sg83
g4211
sg76
(lp4500
g69
(g90
g71
NtRp4501
(dp4502
g74
(dp4503
g94
g95
ssg83
g4497
sg76
(lp4504
S'files'
p4505
asbag69
(g90
g71
NtRp4506
(dp4507
g74
(dp4508
g101
g102
ssg83
g4497
sg76
(lp4509
S':'
asbag69
(g90
g71
NtRp4510
(dp4511
g74
(dp4512
sg83
g4497
sg76
(lp4513
g69
(g70
g71
NtRp4514
(dp4515
g74
(dp4516
g82
I5
ssg83
g4510
sg76
(lp4517
g69
(g78
g71
NtRp4518
(dp4519
g74
(dp4520
g82
I4
ssg83
Nsg76
(lp4521
g69
(g85
g71
NtRp4522
(dp4523
g74
(dp4524
sg83
g4518
sg76
(lp4525
g69
(g90
g71
NtRp4526
(dp4527
g74
(dp4528
sg83
g4522
sg76
(lp4529
g69
(g70
g71
NtRp4530
(dp4531
g74
(dp4532
g82
I4
ssg83
g4526
sg76
(lp4533
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4534
asbasbasbag69
(g85
g71
NtRp4535
(dp4536
g74
(dp4537
sg83
g4518
sg76
(lp4538
g69
(g90
g71
NtRp4539
(dp4540
g74
(dp4541
sg83
g4535
sg76
(lp4542
g69
(g70
g71
NtRp4543
(dp4544
g74
(dp4545
g82
I4
ssg83
g4539
sg76
(lp4546
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4547
asbasbasbag69
(g85
g71
NtRp4548
(dp4549
g74
(dp4550
sg83
g4518
sg76
(lp4551
g69
(g90
g71
NtRp4552
(dp4553
g74
(dp4554
sg83
g4548
sg76
(lp4555
g69
(g70
g71
NtRp4556
(dp4557
g74
(dp4558
g82
I4
ssg83
g4552
sg76
(lp4559
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4560
asbasbasbag69
(g85
g71
NtRp4561
(dp4562
g74
(dp4563
sg83
g4518
sg76
(lp4564
g69
(g90
g71
NtRp4565
(dp4566
g74
(dp4567
sg83
g4561
sg76
(lp4568
g69
(g70
g71
NtRp4569
(dp4570
g74
(dp4571
g82
I4
ssg83
g4565
sg76
(lp4572
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4573
asbasbasbag69
(g85
g71
NtRp4574
(dp4575
g74
(dp4576
sg83
g4518
sg76
(lp4577
g69
(g90
g71
NtRp4578
(dp4579
g74
(dp4580
sg83
g4574
sg76
(lp4581
g69
(g70
g71
NtRp4582
(dp4583
g74
(dp4584
g82
I4
ssg83
g4578
sg76
(lp4585
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4586
asbasbasbag69
(g85
g71
NtRp4587
(dp4588
g74
(dp4589
sg83
g4518
sg76
(lp4590
g69
(g90
g71
NtRp4591
(dp4592
g74
(dp4593
sg83
g4587
sg76
(lp4594
g69
(g70
g71
NtRp4595
(dp4596
g74
(dp4597
g82
I4
ssg83
g4591
sg76
(lp4598
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4599
asbasbasbag69
(g85
g71
NtRp4600
(dp4601
g74
(dp4602
sg83
g4518
sg76
(lp4603
g69
(g90
g71
NtRp4604
(dp4605
g74
(dp4606
sg83
g4600
sg76
(lp4607
g69
(g70
g71
NtRp4608
(dp4609
g74
(dp4610
g82
I4
ssg83
g4604
sg76
(lp4611
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4612
asbasbasbag69
(g85
g71
NtRp4613
(dp4614
g74
(dp4615
sg83
g4518
sg76
(lp4616
g69
(g90
g71
NtRp4617
(dp4618
g74
(dp4619
sg83
g4613
sg76
(lp4620
g69
(g70
g71
NtRp4621
(dp4622
g74
(dp4623
g82
I4
ssg83
g4617
sg76
(lp4624
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4625
asbasbasbag69
(g85
g71
NtRp4626
(dp4627
g74
(dp4628
sg83
g4518
sg76
(lp4629
g69
(g90
g71
NtRp4630
(dp4631
g74
(dp4632
sg83
g4626
sg76
(lp4633
g69
(g70
g71
NtRp4634
(dp4635
g74
(dp4636
g82
I4
ssg83
g4630
sg76
(lp4637
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4638
asbasbasbag69
(g85
g71
NtRp4639
(dp4640
g74
(dp4641
sg83
g4518
sg76
(lp4642
g69
(g90
g71
NtRp4643
(dp4644
g74
(dp4645
sg83
g4639
sg76
(lp4646
g69
(g70
g71
NtRp4647
(dp4648
g74
(dp4649
g82
I4
ssg83
g4643
sg76
(lp4650
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4651
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4652
(dp4653
g74
(dp4654
sg83
g4211
sg76
(lp4655
g69
(g90
g71
NtRp4656
(dp4657
g74
(dp4658
g94
g95
ssg83
g4652
sg76
(lp4659
S'flash'
p4660
asbag69
(g90
g71
NtRp4661
(dp4662
g74
(dp4663
g101
g102
ssg83
g4652
sg76
(lp4664
S':'
asbag69
(g90
g71
NtRp4665
(dp4666
g74
(dp4667
sg83
g4652
sg76
(lp4668
g69
(g70
g71
NtRp4669
(dp4670
g74
(dp4671
g82
I5
ssg83
g4665
sg76
(lp4672
S''
asbasbasbag69
(g85
g71
NtRp4673
(dp4674
g74
(dp4675
sg83
g4211
sg76
(lp4676
g69
(g90
g71
NtRp4677
(dp4678
g74
(dp4679
g94
g95
ssg83
g4673
sg76
(lp4680
S'generic_patterns'
p4681
asbag69
(g90
g71
NtRp4682
(dp4683
g74
(dp4684
g101
g102
ssg83
g4673
sg76
(lp4685
S':'
asbag69
(g90
g71
NtRp4686
(dp4687
g74
(dp4688
sg83
g4673
sg76
(lp4689
g69
(g70
g71
NtRp4690
(dp4691
g74
(dp4692
g82
I5
ssg83
g4686
sg76
(lp4693
g69
(g78
g71
NtRp4694
(dp4695
g74
(dp4696
g82
I4
ssg83
Nsg76
(lp4697
g69
(g85
g71
NtRp4698
(dp4699
g74
(dp4700
sg83
g4694
sg76
(lp4701
g69
(g90
g71
NtRp4702
(dp4703
g74
(dp4704
sg83
g4698
sg76
(lp4705
g69
(g70
g71
NtRp4706
(dp4707
g74
(dp4708
g82
I4
ssg83
g4702
sg76
(lp4709
S'*'
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4710
(dp4711
g74
(dp4712
sg83
g4211
sg76
(lp4713
g69
(g90
g71
NtRp4714
(dp4715
g74
(dp4716
g94
g95
ssg83
g4710
sg76
(lp4717
S'google_analytics_id'
p4718
asbag69
(g90
g71
NtRp4719
(dp4720
g74
(dp4721
g101
g102
ssg83
g4710
sg76
(lp4722
S':'
asbag69
(g90
g71
NtRp4723
(dp4724
g74
(dp4725
sg83
g4710
sg76
(lp4726
g69
(g70
g71
NtRp4727
(dp4728
g74
(dp4729
g82
I5
ssg83
g4723
sg76
(lp4730
S'None'
p4731
asbasbasbag69
(g85
g71
NtRp4732
(dp4733
g74
(dp4734
sg83
g4211
sg76
(lp4735
g69
(g90
g71
NtRp4736
(dp4737
g74
(dp4738
g94
g95
ssg83
g4732
sg76
(lp4739
S'headers'
p4740
asbag69
(g90
g71
NtRp4741
(dp4742
g74
(dp4743
g101
g102
ssg83
g4732
sg76
(lp4744
S':'
asbag69
(g90
g71
NtRp4745
(dp4746
g74
(dp4747
sg83
g4732
sg76
(lp4748
g69
(g70
g71
NtRp4749
(dp4750
g74
(dp4751
g82
I5
ssg83
g4745
sg76
(lp4752
g69
(g78
g71
NtRp4753
(dp4754
g74
(dp4755
g82
I4
ssg83
Nsg76
(lp4756
g69
(g85
g71
NtRp4757
(dp4758
g74
(dp4759
sg83
g4753
sg76
(lp4760
g69
(g90
g71
NtRp4761
(dp4762
g74
(dp4763
g94
g95
ssg83
g4757
sg76
(lp4764
S'X-Powered-By'
p4765
asbag69
(g90
g71
NtRp4766
(dp4767
g74
(dp4768
g101
g102
ssg83
g4757
sg76
(lp4769
S':'
asbag69
(g90
g71
NtRp4770
(dp4771
g74
(dp4772
sg83
g4757
sg76
(lp4773
g69
(g70
g71
NtRp4774
(dp4775
g74
(dp4776
g82
I4
ssg83
g4770
sg76
(lp4777
S'web2py'
p4778
asbasbasbasbasbasbasbag69
(g85
g71
NtRp4779
(dp4780
g74
(dp4781
sg83
g4211
sg76
(lp4782
g69
(g90
g71
NtRp4783
(dp4784
g74
(dp4785
g94
g95
ssg83
g4779
sg76
(lp4786
S'menu'
p4787
asbag69
(g90
g71
NtRp4788
(dp4789
g74
(dp4790
g101
g102
ssg83
g4779
sg76
(lp4791
S':'
asbag69
(g90
g71
NtRp4792
(dp4793
g74
(dp4794
sg83
g4779
sg76
(lp4795
g69
(g70
g71
NtRp4796
(dp4797
g74
(dp4798
g82
I5
ssg83
g4792
sg76
(lp4799
g69
(g78
g71
NtRp4800
(dp4801
g74
(dp4802
g82
I4
ssg83
Nsg76
(lp4803
g69
(g85
g71
NtRp4804
(dp4805
g74
(dp4806
sg83
g4800
sg76
(lp4807
g69
(g90
g71
NtRp4808
(dp4809
g74
(dp4810
sg83
g4804
sg76
(lp4811
g69
(g70
g71
NtRp4812
(dp4813
g74
(dp4814
g82
I4
ssg83
g4808
sg76
(lp4815
g69
(g78
g71
NtRp4816
(dp4817
g74
(dp4818
g82
I3
ssg83
Nsg76
(lp4819
g69
(g85
g71
NtRp4820
(dp4821
g74
(dp4822
sg83
g4816
sg76
(lp4823
g69
(g90
g71
NtRp4824
(dp4825
g74
(dp4826
sg83
g4820
sg76
(lp4827
g69
(g70
g71
NtRp4828
(dp4829
g74
(dp4830
g82
I3
ssg83
g4824
sg76
(lp4831
cgluon.languages
lazyT_unpickle
p4832
(S't\x04\x00\x00\x00Home'
tRp4833
asbasbasbag69
(g85
g71
NtRp4834
(dp4835
g74
(dp4836
sg83
g4816
sg76
(lp4837
g69
(g90
g71
NtRp4838
(dp4839
g74
(dp4840
sg83
g4834
sg76
(lp4841
g69
(g70
g71
NtRp4842
(dp4843
g74
(dp4844
g82
I3
ssg83
g4838
sg76
(lp4845
g112
asbasbasbag69
(g85
g71
NtRp4846
(dp4847
g74
(dp4848
sg83
g4816
sg76
(lp4849
g69
(g90
g71
NtRp4850
(dp4851
g74
(dp4852
sg83
g4846
sg76
(lp4853
g69
(g70
g71
NtRp4854
(dp4855
g74
(dp4856
g82
I3
ssg83
g4850
sg76
(lp4857
S'/DEV_bootstrap_ch/default/list_all_projects'
p4858
asbasbasbag69
(g85
g71
NtRp4859
(dp4860
g74
(dp4861
sg83
g4816
sg76
(lp4862
g69
(g90
g71
NtRp4863
(dp4864
g74
(dp4865
sg83
g4859
sg76
(lp4866
g69
(g70
g71
NtRp4867
(dp4868
g74
(dp4869
g82
I3
ssg83
g4863
sg76
(lp4870
g69
(g78
g71
NtRp4871
(dp4872
g74
(dp4873
g82
I2
ssg83
Nsg76
(lp4874
sbasbasbasbasbasbasbasbasbasbasbasbag69
(g85
g71
NtRp4875
(dp4876
g74
(dp4877
sg83
g4211
sg76
(lp4878
g69
(g90
g71
NtRp4879
(dp4880
g74
(dp4881
g94
g95
ssg83
g4875
sg76
(lp4882
S'meta'
p4883
asbag69
(g90
g71
NtRp4884
(dp4885
g74
(dp4886
g101
g102
ssg83
g4875
sg76
(lp4887
S':'
asbag69
(g90
g71
NtRp4888
(dp4889
g74
(dp4890
sg83
g4875
sg76
(lp4891
g69
(g70
g71
NtRp4892
(dp4893
g74
(dp4894
g82
I5
ssg83
g4888
sg76
(lp4895
g69
(g78
g71
NtRp4896
(dp4897
g74
(dp4898
g82
I4
ssg83
Nsg76
(lp4899
g69
(g85
g71
NtRp4900
(dp4901
g74
(dp4902
sg83
g4896
sg76
(lp4903
g69
(g90
g71
NtRp4904
(dp4905
g74
(dp4906
g94
g95
ssg83
g4900
sg76
(lp4907
S'author'
p4908
asbag69
(g90
g71
NtRp4909
(dp4910
g74
(dp4911
g101
g102
ssg83
g4900
sg76
(lp4912
S':'
asbag69
(g90
g71
NtRp4913
(dp4914
g74
(dp4915
sg83
g4900
sg76
(lp4916
g69
(g70
g71
NtRp4917
(dp4918
g74
(dp4919
g82
I4
ssg83
g4913
sg76
(lp4920
S'Vikram Pudi <vikram@iiit.ac.in>'
p4921
asbasbasbag69
(g85
g71
NtRp4922
(dp4923
g74
(dp4924
sg83
g4896
sg76
(lp4925
g69
(g90
g71
NtRp4926
(dp4927
g74
(dp4928
g94
g95
ssg83
g4922
sg76
(lp4929
S'copyright'
p4930
asbag69
(g90
g71
NtRp4931
(dp4932
g74
(dp4933
g101
g102
ssg83
g4922
sg76
(lp4934
S':'
asbag69
(g90
g71
NtRp4935
(dp4936
g74
(dp4937
sg83
g4922
sg76
(lp4938
g69
(g70
g71
NtRp4939
(dp4940
g74
(dp4941
g82
I4
ssg83
g4935
sg76
(lp4942
S'Copyright 2011'
p4943
asbasbasbag69
(g85
g71
NtRp4944
(dp4945
g74
(dp4946
sg83
g4896
sg76
(lp4947
g69
(g90
g71
NtRp4948
(dp4949
g74
(dp4950
g94
g95
ssg83
g4944
sg76
(lp4951
S'description'
p4952
asbag69
(g90
g71
NtRp4953
(dp4954
g74
(dp4955
g101
g102
ssg83
g4944
sg76
(lp4956
S':'
asbag69
(g90
g71
NtRp4957
(dp4958
g74
(dp4959
sg83
g4944
sg76
(lp4960
g69
(g70
g71
NtRp4961
(dp4962
g74
(dp4963
g82
I4
ssg83
g4957
sg76
(lp4964
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4965
asbasbasbag69
(g85
g71
NtRp4966
(dp4967
g74
(dp4968
sg83
g4896
sg76
(lp4969
g69
(g90
g71
NtRp4970
(dp4971
g74
(dp4972
g94
g95
ssg83
g4966
sg76
(lp4973
S'generator'
p4974
asbag69
(g90
g71
NtRp4975
(dp4976
g74
(dp4977
g101
g102
ssg83
g4966
sg76
(lp4978
S':'
asbag69
(g90
g71
NtRp4979
(dp4980
g74
(dp4981
sg83
g4966
sg76
(lp4982
g69
(g70
g71
NtRp4983
(dp4984
g74
(dp4985
g82
I4
ssg83
g4979
sg76
(lp4986
S'Web2py Web Framework'
p4987
asbasbasbag69
(g85
g71
NtRp4988
(dp4989
g74
(dp4990
sg83
g4896
sg76
(lp4991
g69
(g90
g71
NtRp4992
(dp4993
g74
(dp4994
g94
g95
ssg83
g4988
sg76
(lp4995
S'keywords'
p4996
asbag69
(g90
g71
NtRp4997
(dp4998
g74
(dp4999
g101
g102
ssg83
g4988
sg76
(lp5000
S':'
asbag69
(g90
g71
NtRp5001
(dp5002
g74
(dp5003
sg83
g4988
sg76
(lp5004
g69
(g70
g71
NtRp5005
(dp5006
g74
(dp5007
g82
I4
ssg83
g5001
sg76
(lp5008
S'web2py, python, metabolome, metabolomics'
p5009
asbasbasbasbasbasbasbag69
(g85
g71
NtRp5010
(dp5011
g74
(dp5012
sg83
g4211
sg76
(lp5013
g69
(g90
g71
NtRp5014
(dp5015
g74
(dp5016
g94
g95
ssg83
g5010
sg76
(lp5017
S'models_to_run'
p5018
asbag69
(g90
g71
NtRp5019
(dp5020
g74
(dp5021
g101
g102
ssg83
g5010
sg76
(lp5022
S':'
asbag69
(g90
g71
NtRp5023
(dp5024
g74
(dp5025
sg83
g5010
sg76
(lp5026
g69
(g70
g71
NtRp5027
(dp5028
g74
(dp5029
g82
I5
ssg83
g5023
sg76
(lp5030
g69
(g78
g71
NtRp5031
(dp5032
g74
(dp5033
g82
I4
ssg83
Nsg76
(lp5034
g69
(g85
g71
NtRp5035
(dp5036
g74
(dp5037
sg83
g5031
sg76
(lp5038
g69
(g90
g71
NtRp5039
(dp5040
g74
(dp5041
sg83
g5035
sg76
(lp5042
g69
(g70
g71
NtRp5043
(dp5044
g74
(dp5045
g82
I4
ssg83
g5039
sg76
(lp5046
S'^\\w+\\.py$'
p5047
asbasbasbag69
(g85
g71
NtRp5048
(dp5049
g74
(dp5050
sg83
g5031
sg76
(lp5051
g69
(g90
g71
NtRp5052
(dp5053
g74
(dp5054
sg83
g5048
sg76
(lp5055
g69
(g70
g71
NtRp5056
(dp5057
g74
(dp5058
g82
I4
ssg83
g5052
sg76
(lp5059
S'^default/\\w+\\.py$'
p5060
asbasbasbag69
(g85
g71
NtRp5061
(dp5062
g74
(dp5063
sg83
g5031
sg76
(lp5064
g69
(g90
g71
NtRp5065
(dp5066
g74
(dp5067
sg83
g5061
sg76
(lp5068
g69
(g70
g71
NtRp5069
(dp5070
g74
(dp5071
g82
I4
ssg83
g5065
sg76
(lp5072
S'^default/list_all_dev_projects/\\w+\\.py$'
p5073
asbasbasbasbasbasbasbag69
(g85
g71
NtRp5074
(dp5075
g74
(dp5076
sg83
g4211
sg76
(lp5077
g69
(g90
g71
NtRp5078
(dp5079
g74
(dp5080
g94
g95
ssg83
g5074
sg76
(lp5081
S'postprocessing'
p5082
asbag69
(g90
g71
NtRp5083
(dp5084
g74
(dp5085
g101
g102
ssg83
g5074
sg76
(lp5086
S':'
asbag69
(g90
g71
NtRp5087
(dp5088
g74
(dp5089
sg83
g5074
sg76
(lp5090
g69
(g70
g71
NtRp5091
(dp5092
g74
(dp5093
g82
I5
ssg83
g5087
sg76
(lp5094
g69
(g78
g71
NtRp5095
(dp5096
g74
(dp5097
g82
I4
ssg83
Nsg76
(lp5098
sbasbasbasbag69
(g85
g71
NtRp5099
(dp5100
g74
(dp5101
sg83
g4211
sg76
(lp5102
g69
(g90
g71
NtRp5103
(dp5104
g74
(dp5105
g94
g95
ssg83
g5099
sg76
(lp5106
S'session_cookie_expires'
p5107
asbag69
(g90
g71
NtRp5108
(dp5109
g74
(dp5110
g101
g102
ssg83
g5099
sg76
(lp5111
S':'
asbag69
(g90
g71
NtRp5112
(dp5113
g74
(dp5114
sg83
g5099
sg76
(lp5115
g69
(g70
g71
NtRp5116
(dp5117
g74
(dp5118
g82
I5
ssg83
g5112
sg76
(lp5119
S'None'
p5120
asbasbasbag69
(g85
g71
NtRp5121
(dp5122
g74
(dp5123
sg83
g4211
sg76
(lp5124
g69
(g90
g71
NtRp5125
(dp5126
g74
(dp5127
g94
g95
ssg83
g5121
sg76
(lp5128
S'session_data_name'
p5129
asbag69
(g90
g71
NtRp5130
(dp5131
g74
(dp5132
g101
g102
ssg83
g5121
sg76
(lp5133
S':'
asbag69
(g90
g71
NtRp5134
(dp5135
g74
(dp5136
sg83
g5121
sg76
(lp5137
g69
(g70
g71
NtRp5138
(dp5139
g74
(dp5140
g82
I5
ssg83
g5134
sg76
(lp5141
S'session_data_dev_bootstrap_ch'
p5142
asbasbasbag69
(g85
g71
NtRp5143
(dp5144
g74
(dp5145
sg83
g4211
sg76
(lp5146
g69
(g90
g71
NtRp5147
(dp5148
g74
(dp5149
g94
g95
ssg83
g5143
sg76
(lp5150
S'session_file'
p5151
asbag69
(g90
g71
NtRp5152
(dp5153
g74
(dp5154
g101
g102
ssg83
g5143
sg76
(lp5155
S':'
asbag69
(g90
g71
NtRp5156
(dp5157
g74
(dp5158
sg83
g5143
sg76
(lp5159
g69
(g70
g71
NtRp5160
(dp5161
g74
(dp5162
g82
I5
ssg83
g5156
sg76
(lp5163
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xabb4de0>"
p5164
asbasbasbag69
(g85
g71
NtRp5165
(dp5166
g74
(dp5167
sg83
g4211
sg76
(lp5168
g69
(g90
g71
NtRp5169
(dp5170
g74
(dp5171
g94
g95
ssg83
g5165
sg76
(lp5172
S'session_filename'
p5173
asbag69
(g90
g71
NtRp5174
(dp5175
g74
(dp5176
g101
g102
ssg83
g5165
sg76
(lp5177
S':'
asbag69
(g90
g71
NtRp5178
(dp5179
g74
(dp5180
sg83
g5165
sg76
(lp5181
g69
(g70
g71
NtRp5182
(dp5183
g74
(dp5184
g82
I5
ssg83
g5178
sg76
(lp5185
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p5186
asbasbasbag69
(g85
g71
NtRp5187
(dp5188
g74
(dp5189
sg83
g4211
sg76
(lp5190
g69
(g90
g71
NtRp5191
(dp5192
g74
(dp5193
g94
g95
ssg83
g5187
sg76
(lp5194
S'session_id'
p5195
asbag69
(g90
g71
NtRp5196
(dp5197
g74
(dp5198
g101
g102
ssg83
g5187
sg76
(lp5199
S':'
asbag69
(g90
g71
NtRp5200
(dp5201
g74
(dp5202
sg83
g5187
sg76
(lp5203
g69
(g70
g71
NtRp5204
(dp5205
g74
(dp5206
g82
I5
ssg83
g5200
sg76
(lp5207
g736
asbasbasbag69
(g85
g71
NtRp5208
(dp5209
g74
(dp5210
sg83
g4211
sg76
(lp5211
g69
(g90
g71
NtRp5212
(dp5213
g74
(dp5214
g94
g95
ssg83
g5208
sg76
(lp5215
S'session_id_name'
p5216
asbag69
(g90
g71
NtRp5217
(dp5218
g74
(dp5219
g101
g102
ssg83
g5208
sg76
(lp5220
S':'
asbag69
(g90
g71
NtRp5221
(dp5222
g74
(dp5223
sg83
g5208
sg76
(lp5224
g69
(g70
g71
NtRp5225
(dp5226
g74
(dp5227
g82
I5
ssg83
g5221
sg76
(lp5228
g4268
asbasbasbag69
(g85
g71
NtRp5229
(dp5230
g74
(dp5231
sg83
g4211
sg76
(lp5232
g69
(g90
g71
NtRp5233
(dp5234
g74
(dp5235
g94
g95
ssg83
g5229
sg76
(lp5236
S'session_locked'
p5237
asbag69
(g90
g71
NtRp5238
(dp5239
g74
(dp5240
g101
g102
ssg83
g5229
sg76
(lp5241
S':'
asbag69
(g90
g71
NtRp5242
(dp5243
g74
(dp5244
sg83
g5229
sg76
(lp5245
g69
(g70
g71
NtRp5246
(dp5247
g74
(dp5248
g82
I5
ssg83
g5242
sg76
(lp5249
g1890
asbasbasbag69
(g85
g71
NtRp5250
(dp5251
g74
(dp5252
sg83
g4211
sg76
(lp5253
g69
(g90
g71
NtRp5254
(dp5255
g74
(dp5256
g94
g95
ssg83
g5250
sg76
(lp5257
S'session_new'
p5258
asbag69
(g90
g71
NtRp5259
(dp5260
g74
(dp5261
g101
g102
ssg83
g5250
sg76
(lp5262
S':'
asbag69
(g90
g71
NtRp5263
(dp5264
g74
(dp5265
sg83
g5250
sg76
(lp5266
g69
(g70
g71
NtRp5267
(dp5268
g74
(dp5269
g82
I5
ssg83
g5263
sg76
(lp5270
g112
asbasbasbag69
(g85
g71
NtRp5271
(dp5272
g74
(dp5273
sg83
g4211
sg76
(lp5274
g69
(g90
g71
NtRp5275
(dp5276
g74
(dp5277
g94
g95
ssg83
g5271
sg76
(lp5278
S'session_storage_type'
p5279
asbag69
(g90
g71
NtRp5280
(dp5281
g74
(dp5282
g101
g102
ssg83
g5271
sg76
(lp5283
S':'
asbag69
(g90
g71
NtRp5284
(dp5285
g74
(dp5286
sg83
g5271
sg76
(lp5287
g69
(g70
g71
NtRp5288
(dp5289
g74
(dp5290
g82
I5
ssg83
g5284
sg76
(lp5291
g3389
asbasbasbag69
(g85
g71
NtRp5292
(dp5293
g74
(dp5294
sg83
g4211
sg76
(lp5295
g69
(g90
g71
NtRp5296
(dp5297
g74
(dp5298
g94
g95
ssg83
g5292
sg76
(lp5299
S'status'
p5300
asbag69
(g90
g71
NtRp5301
(dp5302
g74
(dp5303
g101
g102
ssg83
g5292
sg76
(lp5304
S':'
asbag69
(g90
g71
NtRp5305
(dp5306
g74
(dp5307
sg83
g5292
sg76
(lp5308
g69
(g70
g71
NtRp5309
(dp5310
g74
(dp5311
g82
I5
ssg83
g5305
sg76
(lp5312
S'200'
p5313
asbasbasbag69
(g85
g71
NtRp5314
(dp5315
g74
(dp5316
sg83
g4211
sg76
(lp5317
g69
(g90
g71
NtRp5318
(dp5319
g74
(dp5320
g94
g95
ssg83
g5314
sg76
(lp5321
S'subtitle'
p5322
asbag69
(g90
g71
NtRp5323
(dp5324
g74
(dp5325
g101
g102
ssg83
g5314
sg76
(lp5326
S':'
asbag69
(g90
g71
NtRp5327
(dp5328
g74
(dp5329
sg83
g5314
sg76
(lp5330
g69
(g70
g71
NtRp5331
(dp5332
g74
(dp5333
g82
I5
ssg83
g5327
sg76
(lp5334
g4832
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5335
asbasbasbag69
(g85
g71
NtRp5336
(dp5337
g74
(dp5338
sg83
g4211
sg76
(lp5339
g69
(g90
g71
NtRp5340
(dp5341
g74
(dp5342
g94
g95
ssg83
g5336
sg76
(lp5343
g4077
asbag69
(g90
g71
NtRp5344
(dp5345
g74
(dp5346
g101
g102
ssg83
g5336
sg76
(lp5347
S':'
asbag69
(g90
g71
NtRp5348
(dp5349
g74
(dp5350
sg83
g5336
sg76
(lp5351
g69
(g70
g71
NtRp5352
(dp5353
g74
(dp5354
g82
I5
ssg83
g5348
sg76
(lp5355
g134
asbasbasbag69
(g85
g71
NtRp5356
(dp5357
g74
(dp5358
sg83
g4211
sg76
(lp5359
g69
(g90
g71
NtRp5360
(dp5361
g74
(dp5362
g94
g95
ssg83
g5356
sg76
(lp5363
S'view'
p5364
asbag69
(g90
g71
NtRp5365
(dp5366
g74
(dp5367
g101
g102
ssg83
g5356
sg76
(lp5368
S':'
asbag69
(g90
g71
NtRp5369
(dp5370
g74
(dp5371
sg83
g5356
sg76
(lp5372
g69
(g70
g71
NtRp5373
(dp5374
g74
(dp5375
g82
I5
ssg83
g5369
sg76
(lp5376
S'default/list_all_dev_projects.html'
p5377
asbasbasbasbasbsS'locals'
p5378
(dp5379
g2682
g21
sS'hash_vars'
p5380
g1890
sS'port'
p5381
S'None'
p5382
sS'current'
p5383
S'<thread._local object>'
p5384
sg121
S"'default'"
p5385
sS'user_signature'
p5386
S'None'
p5387
sg909
S"<Storage {'debugging': False, 'http_user_agent':...6ec45b38081f44f469294d', 'wsgi_run_once': False}>"
p5388
sS'url_encode'
p5389
g1890
sS'scheme'
p5390
S'None'
p5391
sg2035
S"'list_all_dev_projects'"
p5392
sS'encode_embedded_slash'
p5393
g112
sg52
S'[]'
p5394
sS'url_out'
p5395
S'<function url_out>'
p5396
sg296
S"'router'"
p5397
sS'a'
S"'default'"
p5398
sS'c'
S"'router'"
p5399
sg1991
S'None'
p5400
sS'f'
S"['experiment.project', '1', 'sample.experiment']"
p5401
sS'host'
p5402
S'None'
p5403
sS'hmac_key'
p5404
S'None'
p5405
sS'r'
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p5406
sS'salt'
p5407
S'None'
p5408
sS'anchor'
p5409
S"''"
p5410
sssS'traceback'
p5411
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1120, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 319, in list_all_dev_projects\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2489, in smartgrid\n    user_signature=user_signature, **kwargs)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2258, in grid\n    if link(row):\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 313, in <lambda>\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args)),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n  File "/home/anil/bootstrap/web2py/gluon/html.py", line 280, in URL\n    \'when calling URL, function or function name required\')\nSyntaxError: when calling URL, function or function name required\n'
p5412
s.