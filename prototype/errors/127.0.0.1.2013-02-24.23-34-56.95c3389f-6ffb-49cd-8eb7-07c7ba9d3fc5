(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> router() takes no arguments (1 given)"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args):\n    row = db(db.biosource.sample_name==a).select(db.biosource.id).first()\n    if row:\n        args=args+["biosource.sample_name",a,"edit","biosource",row.id]\n        return args\n    else:\n        args = args+["biosource.sample_name",a,"new","biosource"]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('router() takes no arguments (1 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'router() takes no arguments (1 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g143
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
sg71
g210
sg64
(lp217
g57
(g58
g59
NtRp218
(dp219
g62
(dp220
g70
I4
ssg71
g214
sg64
(lp221
S'biosource.sample_name'
p222
asbasbasbag57
(g73
g59
NtRp223
(dp224
g62
(dp225
sg71
g143
sg64
(lp226
g57
(g78
g59
NtRp227
(dp228
g62
(dp229
sg71
g223
sg64
(lp230
g57
(g58
g59
NtRp231
(dp232
g62
(dp233
g70
I4
ssg71
g227
sg64
(lp234
S'3'
asbasbasbag57
(g73
g59
NtRp235
(dp236
g62
(dp237
sg71
g143
sg64
(lp238
g57
(g78
g59
NtRp239
(dp240
g62
(dp241
sg71
g235
sg64
(lp242
g57
(g58
g59
NtRp243
(dp244
g62
(dp245
g70
I4
ssg71
g239
sg64
(lp246
S'view'
p247
asbasbasbag57
(g73
g59
NtRp248
(dp249
g62
(dp250
sg71
g143
sg64
(lp251
g57
(g78
g59
NtRp252
(dp253
g62
(dp254
sg71
g248
sg64
(lp255
g57
(g58
g59
NtRp256
(dp257
g62
(dp258
g70
I4
ssg71
g252
sg64
(lp259
S'biosource'
p260
asbasbasbag57
(g73
g59
NtRp261
(dp262
g62
(dp263
sg71
g143
sg64
(lp264
g57
(g78
g59
NtRp265
(dp266
g62
(dp267
sg71
g261
sg64
(lp268
g57
(g58
g59
NtRp269
(dp270
g62
(dp271
g70
I4
ssg71
g265
sg64
(lp272
S'2'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp273
(dp274
g62
(dp275
sg71
g67
sg64
(lp276
g57
(g78
g59
NtRp277
(dp278
g62
(dp279
g82
g83
ssg71
g273
sg64
(lp280
S'body'
p281
asbag57
(g78
g59
NtRp282
(dp283
g62
(dp284
g89
g90
ssg71
g273
sg64
(lp285
S':'
asbag57
(g78
g59
NtRp286
(dp287
g62
(dp288
sg71
g273
sg64
(lp289
g57
(g58
g59
NtRp290
(dp291
g62
(dp292
g70
I5
ssg71
g286
sg64
(lp293
S'<cStringIO.StringO object at 0xaceb800>'
p294
asbasbasbag57
(g73
g59
NtRp295
(dp296
g62
(dp297
sg71
g67
sg64
(lp298
g57
(g78
g59
NtRp299
(dp300
g62
(dp301
g82
g83
ssg71
g295
sg64
(lp302
S'cid'
p303
asbag57
(g78
g59
NtRp304
(dp305
g62
(dp306
g89
g90
ssg71
g295
sg64
(lp307
S':'
asbag57
(g78
g59
NtRp308
(dp309
g62
(dp310
sg71
g295
sg64
(lp311
g57
(g58
g59
NtRp312
(dp313
g62
(dp314
g70
I5
ssg71
g308
sg64
(lp315
S'None'
p316
asbasbasbag57
(g73
g59
NtRp317
(dp318
g62
(dp319
sg71
g67
sg64
(lp320
g57
(g78
g59
NtRp321
(dp322
g62
(dp323
g82
g83
ssg71
g317
sg64
(lp324
S'client'
p325
asbag57
(g78
g59
NtRp326
(dp327
g62
(dp328
g89
g90
ssg71
g317
sg64
(lp329
S':'
asbag57
(g78
g59
NtRp330
(dp331
g62
(dp332
sg71
g317
sg64
(lp333
g57
(g58
g59
NtRp334
(dp335
g62
(dp336
g70
I5
ssg71
g330
sg64
(lp337
S'127.0.0.1'
p338
asbasbasbag57
(g73
g59
NtRp339
(dp340
g62
(dp341
sg71
g67
sg64
(lp342
g57
(g78
g59
NtRp343
(dp344
g62
(dp345
g82
g83
ssg71
g339
sg64
(lp346
S'controller'
p347
asbag57
(g78
g59
NtRp348
(dp349
g62
(dp350
g89
g90
ssg71
g339
sg64
(lp351
S':'
asbag57
(g78
g59
NtRp352
(dp353
g62
(dp354
sg71
g339
sg64
(lp355
g57
(g58
g59
NtRp356
(dp357
g62
(dp358
g70
I5
ssg71
g352
sg64
(lp359
S'default'
p360
asbasbasbag57
(g73
g59
NtRp361
(dp362
g62
(dp363
sg71
g67
sg64
(lp364
g57
(g78
g59
NtRp365
(dp366
g62
(dp367
g82
g83
ssg71
g361
sg64
(lp368
S'cookies'
p369
asbag57
(g78
g59
NtRp370
(dp371
g62
(dp372
g89
g90
ssg71
g361
sg64
(lp373
S':'
asbag57
(g78
g59
NtRp374
(dp375
g62
(dp376
sg71
g361
sg64
(lp377
g57
(g58
g59
NtRp378
(dp379
g62
(dp380
g70
I5
ssg71
g374
sg64
(lp381
g57
(g66
g59
NtRp382
(dp383
g62
(dp384
g70
I4
ssg71
Nsg64
(lp385
g57
(g73
g59
NtRp386
(dp387
g62
(dp388
sg71
g382
sg64
(lp389
g57
(g78
g59
NtRp390
(dp391
g62
(dp392
g82
g83
ssg71
g386
sg64
(lp393
S'session_id_admin'
p394
asbag57
(g78
g59
NtRp395
(dp396
g62
(dp397
g89
g90
ssg71
g386
sg64
(lp398
S':'
asbag57
(g78
g59
NtRp399
(dp400
g62
(dp401
sg71
g386
sg64
(lp402
g57
(g58
g59
NtRp403
(dp404
g62
(dp405
g70
I4
ssg71
g399
sg64
(lp406
S'127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb'
p407
ag57
(g66
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
Nsg64
(lp411
g57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g408
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'comment'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g408
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'domain'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g408
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'expires'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g408
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'httponly'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g408
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'max-age'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g408
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'path'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I3
ssg71
g530
sg64
(lp537
S''
asbasbasbag57
(g73
g59
NtRp538
(dp539
g62
(dp540
sg71
g408
sg64
(lp541
g57
(g78
g59
NtRp542
(dp543
g62
(dp544
g82
g83
ssg71
g538
sg64
(lp545
S'secure'
p546
asbag57
(g78
g59
NtRp547
(dp548
g62
(dp549
g89
g90
ssg71
g538
sg64
(lp550
S':'
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
sg71
g538
sg64
(lp554
g57
(g58
g59
NtRp555
(dp556
g62
(dp557
g70
I3
ssg71
g551
sg64
(lp558
S''
asbasbasbag57
(g73
g59
NtRp559
(dp560
g62
(dp561
sg71
g408
sg64
(lp562
g57
(g78
g59
NtRp563
(dp564
g62
(dp565
g82
g83
ssg71
g559
sg64
(lp566
S'version'
p567
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
g89
g90
ssg71
g559
sg64
(lp571
S':'
asbag57
(g78
g59
NtRp572
(dp573
g62
(dp574
sg71
g559
sg64
(lp575
g57
(g58
g59
NtRp576
(dp577
g62
(dp578
g70
I3
ssg71
g572
sg64
(lp579
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp580
(dp581
g62
(dp582
sg71
g382
sg64
(lp583
g57
(g78
g59
NtRp584
(dp585
g62
(dp586
g82
g83
ssg71
g580
sg64
(lp587
S'session_id_dev_bootstrap_ch'
p588
asbag57
(g78
g59
NtRp589
(dp590
g62
(dp591
g89
g90
ssg71
g580
sg64
(lp592
S':'
asbag57
(g78
g59
NtRp593
(dp594
g62
(dp595
sg71
g580
sg64
(lp596
g57
(g58
g59
NtRp597
(dp598
g62
(dp599
g70
I4
ssg71
g593
sg64
(lp600
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p601
ag57
(g66
g59
NtRp602
(dp603
g62
(dp604
g70
I3
ssg71
Nsg64
(lp605
g57
(g73
g59
NtRp606
(dp607
g62
(dp608
sg71
g602
sg64
(lp609
g57
(g78
g59
NtRp610
(dp611
g62
(dp612
g82
g83
ssg71
g606
sg64
(lp613
g420
asbag57
(g78
g59
NtRp614
(dp615
g62
(dp616
g89
g90
ssg71
g606
sg64
(lp617
S':'
asbag57
(g78
g59
NtRp618
(dp619
g62
(dp620
sg71
g606
sg64
(lp621
g57
(g58
g59
NtRp622
(dp623
g62
(dp624
g70
I3
ssg71
g618
sg64
(lp625
S''
asbasbasbag57
(g73
g59
NtRp626
(dp627
g62
(dp628
sg71
g602
sg64
(lp629
g57
(g78
g59
NtRp630
(dp631
g62
(dp632
g82
g83
ssg71
g626
sg64
(lp633
g441
asbag57
(g78
g59
NtRp634
(dp635
g62
(dp636
g89
g90
ssg71
g626
sg64
(lp637
S':'
asbag57
(g78
g59
NtRp638
(dp639
g62
(dp640
sg71
g626
sg64
(lp641
g57
(g58
g59
NtRp642
(dp643
g62
(dp644
g70
I3
ssg71
g638
sg64
(lp645
S''
asbasbasbag57
(g73
g59
NtRp646
(dp647
g62
(dp648
sg71
g602
sg64
(lp649
g57
(g78
g59
NtRp650
(dp651
g62
(dp652
g82
g83
ssg71
g646
sg64
(lp653
g462
asbag57
(g78
g59
NtRp654
(dp655
g62
(dp656
g89
g90
ssg71
g646
sg64
(lp657
S':'
asbag57
(g78
g59
NtRp658
(dp659
g62
(dp660
sg71
g646
sg64
(lp661
g57
(g58
g59
NtRp662
(dp663
g62
(dp664
g70
I3
ssg71
g658
sg64
(lp665
S''
asbasbasbag57
(g73
g59
NtRp666
(dp667
g62
(dp668
sg71
g602
sg64
(lp669
g57
(g78
g59
NtRp670
(dp671
g62
(dp672
g82
g83
ssg71
g666
sg64
(lp673
g483
asbag57
(g78
g59
NtRp674
(dp675
g62
(dp676
g89
g90
ssg71
g666
sg64
(lp677
S':'
asbag57
(g78
g59
NtRp678
(dp679
g62
(dp680
sg71
g666
sg64
(lp681
g57
(g58
g59
NtRp682
(dp683
g62
(dp684
g70
I3
ssg71
g678
sg64
(lp685
S''
asbasbasbag57
(g73
g59
NtRp686
(dp687
g62
(dp688
sg71
g602
sg64
(lp689
g57
(g78
g59
NtRp690
(dp691
g62
(dp692
g82
g83
ssg71
g686
sg64
(lp693
g504
asbag57
(g78
g59
NtRp694
(dp695
g62
(dp696
g89
g90
ssg71
g686
sg64
(lp697
S':'
asbag57
(g78
g59
NtRp698
(dp699
g62
(dp700
sg71
g686
sg64
(lp701
g57
(g58
g59
NtRp702
(dp703
g62
(dp704
g70
I3
ssg71
g698
sg64
(lp705
S''
asbasbasbag57
(g73
g59
NtRp706
(dp707
g62
(dp708
sg71
g602
sg64
(lp709
g57
(g78
g59
NtRp710
(dp711
g62
(dp712
g82
g83
ssg71
g706
sg64
(lp713
g525
asbag57
(g78
g59
NtRp714
(dp715
g62
(dp716
g89
g90
ssg71
g706
sg64
(lp717
S':'
asbag57
(g78
g59
NtRp718
(dp719
g62
(dp720
sg71
g706
sg64
(lp721
g57
(g58
g59
NtRp722
(dp723
g62
(dp724
g70
I3
ssg71
g718
sg64
(lp725
S''
asbasbasbag57
(g73
g59
NtRp726
(dp727
g62
(dp728
sg71
g602
sg64
(lp729
g57
(g78
g59
NtRp730
(dp731
g62
(dp732
g82
g83
ssg71
g726
sg64
(lp733
g546
asbag57
(g78
g59
NtRp734
(dp735
g62
(dp736
g89
g90
ssg71
g726
sg64
(lp737
S':'
asbag57
(g78
g59
NtRp738
(dp739
g62
(dp740
sg71
g726
sg64
(lp741
g57
(g58
g59
NtRp742
(dp743
g62
(dp744
g70
I3
ssg71
g738
sg64
(lp745
S''
asbasbasbag57
(g73
g59
NtRp746
(dp747
g62
(dp748
sg71
g602
sg64
(lp749
g57
(g78
g59
NtRp750
(dp751
g62
(dp752
g82
g83
ssg71
g746
sg64
(lp753
g567
asbag57
(g78
g59
NtRp754
(dp755
g62
(dp756
g89
g90
ssg71
g746
sg64
(lp757
S':'
asbag57
(g78
g59
NtRp758
(dp759
g62
(dp760
sg71
g746
sg64
(lp761
g57
(g58
g59
NtRp762
(dp763
g62
(dp764
g70
I3
ssg71
g758
sg64
(lp765
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp766
(dp767
g62
(dp768
sg71
g67
sg64
(lp769
g57
(g78
g59
NtRp770
(dp771
g62
(dp772
g82
g83
ssg71
g766
sg64
(lp773
S'env'
p774
asbag57
(g78
g59
NtRp775
(dp776
g62
(dp777
g89
g90
ssg71
g766
sg64
(lp778
S':'
asbag57
(g78
g59
NtRp779
(dp780
g62
(dp781
sg71
g766
sg64
(lp782
g57
(g58
g59
NtRp783
(dp784
g62
(dp785
g70
I5
ssg71
g779
sg64
(lp786
g57
(g66
g59
NtRp787
(dp788
g62
(dp789
g70
I4
ssg71
Nsg64
(lp790
g57
(g73
g59
NtRp791
(dp792
g62
(dp793
sg71
g787
sg64
(lp794
g57
(g78
g59
NtRp795
(dp796
g62
(dp797
g82
g83
ssg71
g791
sg64
(lp798
S'app_folders'
p799
asbag57
(g78
g59
NtRp800
(dp801
g62
(dp802
g89
g90
ssg71
g791
sg64
(lp803
S':'
asbag57
(g78
g59
NtRp804
(dp805
g62
(dp806
sg71
g791
sg64
(lp807
g57
(g58
g59
NtRp808
(dp809
g62
(dp810
g70
I4
ssg71
g804
sg64
(lp811
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p812
asbasbasbag57
(g73
g59
NtRp813
(dp814
g62
(dp815
sg71
g787
sg64
(lp816
g57
(g78
g59
NtRp817
(dp818
g62
(dp819
g82
g83
ssg71
g813
sg64
(lp820
S'applications_parent'
p821
asbag57
(g78
g59
NtRp822
(dp823
g62
(dp824
g89
g90
ssg71
g813
sg64
(lp825
S':'
asbag57
(g78
g59
NtRp826
(dp827
g62
(dp828
sg71
g813
sg64
(lp829
g57
(g58
g59
NtRp830
(dp831
g62
(dp832
g70
I4
ssg71
g826
sg64
(lp833
S'/home/anil/bootstrap/web2py'
p834
asbasbasbag57
(g73
g59
NtRp835
(dp836
g62
(dp837
sg71
g787
sg64
(lp838
g57
(g78
g59
NtRp839
(dp840
g62
(dp841
g82
g83
ssg71
g835
sg64
(lp842
S'cmd_args'
p843
asbag57
(g78
g59
NtRp844
(dp845
g62
(dp846
g89
g90
ssg71
g835
sg64
(lp847
S':'
asbag57
(g78
g59
NtRp848
(dp849
g62
(dp850
sg71
g835
sg64
(lp851
g57
(g58
g59
NtRp852
(dp853
g62
(dp854
g70
I4
ssg71
g848
sg64
(lp855
g57
(g66
g59
NtRp856
(dp857
g62
(dp858
g70
I3
ssg71
Nsg64
(lp859
sbasbasbasbag57
(g73
g59
NtRp860
(dp861
g62
(dp862
sg71
g787
sg64
(lp863
g57
(g78
g59
NtRp864
(dp865
g62
(dp866
g82
g83
ssg71
g860
sg64
(lp867
S'cmd_options'
p868
asbag57
(g78
g59
NtRp869
(dp870
g62
(dp871
g89
g90
ssg71
g860
sg64
(lp872
S':'
asbag57
(g78
g59
NtRp873
(dp874
g62
(dp875
sg71
g860
sg64
(lp876
g57
(g58
g59
NtRp877
(dp878
g62
(dp879
g70
I4
ssg71
g873
sg64
(lp880
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p881
asbasbasbag57
(g73
g59
NtRp882
(dp883
g62
(dp884
sg71
g787
sg64
(lp885
g57
(g78
g59
NtRp886
(dp887
g62
(dp888
g82
g83
ssg71
g882
sg64
(lp889
S'db_sessions'
p890
asbag57
(g78
g59
NtRp891
(dp892
g62
(dp893
g89
g90
ssg71
g882
sg64
(lp894
S':'
asbag57
(g78
g59
NtRp895
(dp896
g62
(dp897
sg71
g882
sg64
(lp898
g57
(g58
g59
NtRp899
(dp900
g62
(dp901
g70
I4
ssg71
g895
sg64
(lp902
S'set([])'
p903
asbasbasbag57
(g73
g59
NtRp904
(dp905
g62
(dp906
sg71
g787
sg64
(lp907
g57
(g78
g59
NtRp908
(dp909
g62
(dp910
g82
g83
ssg71
g904
sg64
(lp911
S'debugging'
p912
asbag57
(g78
g59
NtRp913
(dp914
g62
(dp915
g89
g90
ssg71
g904
sg64
(lp916
S':'
asbag57
(g78
g59
NtRp917
(dp918
g62
(dp919
sg71
g904
sg64
(lp920
g57
(g58
g59
NtRp921
(dp922
g62
(dp923
g70
I4
ssg71
g917
sg64
(lp924
g100
asbasbasbag57
(g73
g59
NtRp925
(dp926
g62
(dp927
sg71
g787
sg64
(lp928
g57
(g78
g59
NtRp929
(dp930
g62
(dp931
g82
g83
ssg71
g925
sg64
(lp932
S'gluon_parent'
p933
asbag57
(g78
g59
NtRp934
(dp935
g62
(dp936
g89
g90
ssg71
g925
sg64
(lp937
S':'
asbag57
(g78
g59
NtRp938
(dp939
g62
(dp940
sg71
g925
sg64
(lp941
g57
(g58
g59
NtRp942
(dp943
g62
(dp944
g70
I4
ssg71
g938
sg64
(lp945
S'/home/anil/bootstrap/web2py'
p946
asbasbasbag57
(g73
g59
NtRp947
(dp948
g62
(dp949
sg71
g787
sg64
(lp950
g57
(g78
g59
NtRp951
(dp952
g62
(dp953
g82
g83
ssg71
g947
sg64
(lp954
S'http_accept'
p955
asbag57
(g78
g59
NtRp956
(dp957
g62
(dp958
g89
g90
ssg71
g947
sg64
(lp959
S':'
asbag57
(g78
g59
NtRp960
(dp961
g62
(dp962
sg71
g947
sg64
(lp963
g57
(g58
g59
NtRp964
(dp965
g62
(dp966
g70
I4
ssg71
g960
sg64
(lp967
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p968
asbasbasbag57
(g73
g59
NtRp969
(dp970
g62
(dp971
sg71
g787
sg64
(lp972
g57
(g78
g59
NtRp973
(dp974
g62
(dp975
g82
g83
ssg71
g969
sg64
(lp976
S'http_accept_charset'
p977
asbag57
(g78
g59
NtRp978
(dp979
g62
(dp980
g89
g90
ssg71
g969
sg64
(lp981
S':'
asbag57
(g78
g59
NtRp982
(dp983
g62
(dp984
sg71
g969
sg64
(lp985
g57
(g58
g59
NtRp986
(dp987
g62
(dp988
g70
I4
ssg71
g982
sg64
(lp989
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p990
asbasbasbag57
(g73
g59
NtRp991
(dp992
g62
(dp993
sg71
g787
sg64
(lp994
g57
(g78
g59
NtRp995
(dp996
g62
(dp997
g82
g83
ssg71
g991
sg64
(lp998
S'http_accept_encoding'
p999
asbag57
(g78
g59
NtRp1000
(dp1001
g62
(dp1002
g89
g90
ssg71
g991
sg64
(lp1003
S':'
asbag57
(g78
g59
NtRp1004
(dp1005
g62
(dp1006
sg71
g991
sg64
(lp1007
g57
(g58
g59
NtRp1008
(dp1009
g62
(dp1010
g70
I4
ssg71
g1004
sg64
(lp1011
S'gzip,deflate,sdch'
p1012
asbasbasbag57
(g73
g59
NtRp1013
(dp1014
g62
(dp1015
sg71
g787
sg64
(lp1016
g57
(g78
g59
NtRp1017
(dp1018
g62
(dp1019
g82
g83
ssg71
g1013
sg64
(lp1020
S'http_accept_language'
p1021
asbag57
(g78
g59
NtRp1022
(dp1023
g62
(dp1024
g89
g90
ssg71
g1013
sg64
(lp1025
S':'
asbag57
(g78
g59
NtRp1026
(dp1027
g62
(dp1028
sg71
g1013
sg64
(lp1029
g57
(g58
g59
NtRp1030
(dp1031
g62
(dp1032
g70
I4
ssg71
g1026
sg64
(lp1033
S'en-US,en;q=0.8'
p1034
asbasbasbag57
(g73
g59
NtRp1035
(dp1036
g62
(dp1037
sg71
g787
sg64
(lp1038
g57
(g78
g59
NtRp1039
(dp1040
g62
(dp1041
g82
g83
ssg71
g1035
sg64
(lp1042
S'http_connection'
p1043
asbag57
(g78
g59
NtRp1044
(dp1045
g62
(dp1046
g89
g90
ssg71
g1035
sg64
(lp1047
S':'
asbag57
(g78
g59
NtRp1048
(dp1049
g62
(dp1050
sg71
g1035
sg64
(lp1051
g57
(g58
g59
NtRp1052
(dp1053
g62
(dp1054
g70
I4
ssg71
g1048
sg64
(lp1055
S'keep-alive'
p1056
asbasbasbag57
(g73
g59
NtRp1057
(dp1058
g62
(dp1059
sg71
g787
sg64
(lp1060
g57
(g78
g59
NtRp1061
(dp1062
g62
(dp1063
g82
g83
ssg71
g1057
sg64
(lp1064
S'http_cookie'
p1065
asbag57
(g78
g59
NtRp1066
(dp1067
g62
(dp1068
g89
g90
ssg71
g1057
sg64
(lp1069
S':'
asbag57
(g78
g59
NtRp1070
(dp1071
g62
(dp1072
sg71
g1057
sg64
(lp1073
g57
(g58
g59
NtRp1074
(dp1075
g62
(dp1076
g70
I4
ssg71
g1070
sg64
(lp1077
S'session_id_admin=127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1078
asbasbasbag57
(g73
g59
NtRp1079
(dp1080
g62
(dp1081
sg71
g787
sg64
(lp1082
g57
(g78
g59
NtRp1083
(dp1084
g62
(dp1085
g82
g83
ssg71
g1079
sg64
(lp1086
S'http_host'
p1087
asbag57
(g78
g59
NtRp1088
(dp1089
g62
(dp1090
g89
g90
ssg71
g1079
sg64
(lp1091
S':'
asbag57
(g78
g59
NtRp1092
(dp1093
g62
(dp1094
sg71
g1079
sg64
(lp1095
g57
(g58
g59
NtRp1096
(dp1097
g62
(dp1098
g70
I4
ssg71
g1092
sg64
(lp1099
S'127.0.0.1:8000'
p1100
asbasbasbag57
(g73
g59
NtRp1101
(dp1102
g62
(dp1103
sg71
g787
sg64
(lp1104
g57
(g78
g59
NtRp1105
(dp1106
g62
(dp1107
g82
g83
ssg71
g1101
sg64
(lp1108
S'http_referer'
p1109
asbag57
(g78
g59
NtRp1110
(dp1111
g62
(dp1112
g89
g90
ssg71
g1101
sg64
(lp1113
S':'
asbag57
(g78
g59
NtRp1114
(dp1115
g62
(dp1116
sg71
g1101
sg64
(lp1117
g57
(g58
g59
NtRp1118
(dp1119
g62
(dp1120
g70
I4
ssg71
g1114
sg64
(lp1121
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3'
p1122
asbasbasbag57
(g73
g59
NtRp1123
(dp1124
g62
(dp1125
sg71
g787
sg64
(lp1126
g57
(g78
g59
NtRp1127
(dp1128
g62
(dp1129
g82
g83
ssg71
g1123
sg64
(lp1130
S'http_user_agent'
p1131
asbag57
(g78
g59
NtRp1132
(dp1133
g62
(dp1134
g89
g90
ssg71
g1123
sg64
(lp1135
S':'
asbag57
(g78
g59
NtRp1136
(dp1137
g62
(dp1138
sg71
g1123
sg64
(lp1139
g57
(g58
g59
NtRp1140
(dp1141
g62
(dp1142
g70
I4
ssg71
g1136
sg64
(lp1143
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1144
asbasbasbag57
(g73
g59
NtRp1145
(dp1146
g62
(dp1147
sg71
g787
sg64
(lp1148
g57
(g78
g59
NtRp1149
(dp1150
g62
(dp1151
g82
g83
ssg71
g1145
sg64
(lp1152
S'is_jython'
p1153
asbag57
(g78
g59
NtRp1154
(dp1155
g62
(dp1156
g89
g90
ssg71
g1145
sg64
(lp1157
S':'
asbag57
(g78
g59
NtRp1158
(dp1159
g62
(dp1160
sg71
g1145
sg64
(lp1161
g57
(g58
g59
NtRp1162
(dp1163
g62
(dp1164
g70
I4
ssg71
g1158
sg64
(lp1165
g100
asbasbasbag57
(g73
g59
NtRp1166
(dp1167
g62
(dp1168
sg71
g787
sg64
(lp1169
g57
(g78
g59
NtRp1170
(dp1171
g62
(dp1172
g82
g83
ssg71
g1166
sg64
(lp1173
S'is_pypy'
p1174
asbag57
(g78
g59
NtRp1175
(dp1176
g62
(dp1177
g89
g90
ssg71
g1166
sg64
(lp1178
S':'
asbag57
(g78
g59
NtRp1179
(dp1180
g62
(dp1181
sg71
g1166
sg64
(lp1182
g57
(g58
g59
NtRp1183
(dp1184
g62
(dp1185
g70
I4
ssg71
g1179
sg64
(lp1186
g100
asbasbasbag57
(g73
g59
NtRp1187
(dp1188
g62
(dp1189
sg71
g787
sg64
(lp1190
g57
(g78
g59
NtRp1191
(dp1192
g62
(dp1193
g82
g83
ssg71
g1187
sg64
(lp1194
S'local_hosts'
p1195
asbag57
(g78
g59
NtRp1196
(dp1197
g62
(dp1198
g89
g90
ssg71
g1187
sg64
(lp1199
S':'
asbag57
(g78
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g1187
sg64
(lp1203
g57
(g58
g59
NtRp1204
(dp1205
g62
(dp1206
g70
I4
ssg71
g1200
sg64
(lp1207
g57
(g66
g59
NtRp1208
(dp1209
g62
(dp1210
g70
I3
ssg71
Nsg64
(lp1211
g57
(g73
g59
NtRp1212
(dp1213
g62
(dp1214
sg71
g1208
sg64
(lp1215
g57
(g78
g59
NtRp1216
(dp1217
g62
(dp1218
sg71
g1212
sg64
(lp1219
g57
(g58
g59
NtRp1220
(dp1221
g62
(dp1222
g70
I3
ssg71
g1216
sg64
(lp1223
S'::1'
p1224
asbasbasbag57
(g73
g59
NtRp1225
(dp1226
g62
(dp1227
sg71
g1208
sg64
(lp1228
g57
(g78
g59
NtRp1229
(dp1230
g62
(dp1231
sg71
g1225
sg64
(lp1232
g57
(g58
g59
NtRp1233
(dp1234
g62
(dp1235
g70
I3
ssg71
g1229
sg64
(lp1236
S'127.0.1.1'
p1237
asbasbasbag57
(g73
g59
NtRp1238
(dp1239
g62
(dp1240
sg71
g1208
sg64
(lp1241
g57
(g78
g59
NtRp1242
(dp1243
g62
(dp1244
sg71
g1238
sg64
(lp1245
g57
(g58
g59
NtRp1246
(dp1247
g62
(dp1248
g70
I3
ssg71
g1242
sg64
(lp1249
S'::ffff:127.0.0.1'
p1250
asbasbasbag57
(g73
g59
NtRp1251
(dp1252
g62
(dp1253
sg71
g1208
sg64
(lp1254
g57
(g78
g59
NtRp1255
(dp1256
g62
(dp1257
sg71
g1251
sg64
(lp1258
g57
(g58
g59
NtRp1259
(dp1260
g62
(dp1261
g70
I3
ssg71
g1255
sg64
(lp1262
S'127.0.0.1'
p1263
asbasbasbag57
(g73
g59
NtRp1264
(dp1265
g62
(dp1266
sg71
g1208
sg64
(lp1267
g57
(g78
g59
NtRp1268
(dp1269
g62
(dp1270
sg71
g1264
sg64
(lp1271
g57
(g58
g59
NtRp1272
(dp1273
g62
(dp1274
g70
I3
ssg71
g1268
sg64
(lp1275
S'anil-Inspiron-1525'
p1276
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1277
(dp1278
g62
(dp1279
sg71
g787
sg64
(lp1280
g57
(g78
g59
NtRp1281
(dp1282
g62
(dp1283
g82
g83
ssg71
g1277
sg64
(lp1284
S'path_info'
p1285
asbag57
(g78
g59
NtRp1286
(dp1287
g62
(dp1288
g89
g90
ssg71
g1277
sg64
(lp1289
S':'
asbag57
(g78
g59
NtRp1290
(dp1291
g62
(dp1292
sg71
g1277
sg64
(lp1293
g57
(g58
g59
NtRp1294
(dp1295
g62
(dp1296
g70
I4
ssg71
g1290
sg64
(lp1297
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/view/biosource/2'
p1298
asbasbasbag57
(g73
g59
NtRp1299
(dp1300
g62
(dp1301
sg71
g787
sg64
(lp1302
g57
(g78
g59
NtRp1303
(dp1304
g62
(dp1305
g82
g83
ssg71
g1299
sg64
(lp1306
S'query_string'
p1307
asbag57
(g78
g59
NtRp1308
(dp1309
g62
(dp1310
g89
g90
ssg71
g1299
sg64
(lp1311
S':'
asbag57
(g78
g59
NtRp1312
(dp1313
g62
(dp1314
sg71
g1299
sg64
(lp1315
g57
(g58
g59
NtRp1316
(dp1317
g62
(dp1318
g70
I4
ssg71
g1312
sg64
(lp1319
S'_signature=989584ebb954e46e850736855ab3be4ef3582b48'
p1320
asbasbasbag57
(g73
g59
NtRp1321
(dp1322
g62
(dp1323
sg71
g787
sg64
(lp1324
g57
(g78
g59
NtRp1325
(dp1326
g62
(dp1327
g82
g83
ssg71
g1321
sg64
(lp1328
S'remote_addr'
p1329
asbag57
(g78
g59
NtRp1330
(dp1331
g62
(dp1332
g89
g90
ssg71
g1321
sg64
(lp1333
S':'
asbag57
(g78
g59
NtRp1334
(dp1335
g62
(dp1336
sg71
g1321
sg64
(lp1337
g57
(g58
g59
NtRp1338
(dp1339
g62
(dp1340
g70
I4
ssg71
g1334
sg64
(lp1341
g338
asbasbasbag57
(g73
g59
NtRp1342
(dp1343
g62
(dp1344
sg71
g787
sg64
(lp1345
g57
(g78
g59
NtRp1346
(dp1347
g62
(dp1348
g82
g83
ssg71
g1342
sg64
(lp1349
S'remote_port'
p1350
asbag57
(g78
g59
NtRp1351
(dp1352
g62
(dp1353
g89
g90
ssg71
g1342
sg64
(lp1354
S':'
asbag57
(g78
g59
NtRp1355
(dp1356
g62
(dp1357
sg71
g1342
sg64
(lp1358
g57
(g58
g59
NtRp1359
(dp1360
g62
(dp1361
g70
I4
ssg71
g1355
sg64
(lp1362
S'42948'
p1363
asbasbasbag57
(g73
g59
NtRp1364
(dp1365
g62
(dp1366
sg71
g787
sg64
(lp1367
g57
(g78
g59
NtRp1368
(dp1369
g62
(dp1370
g82
g83
ssg71
g1364
sg64
(lp1371
S'request_method'
p1372
asbag57
(g78
g59
NtRp1373
(dp1374
g62
(dp1375
g89
g90
ssg71
g1364
sg64
(lp1376
S':'
asbag57
(g78
g59
NtRp1377
(dp1378
g62
(dp1379
sg71
g1364
sg64
(lp1380
g57
(g58
g59
NtRp1381
(dp1382
g62
(dp1383
g70
I4
ssg71
g1377
sg64
(lp1384
S'GET'
p1385
asbasbasbag57
(g73
g59
NtRp1386
(dp1387
g62
(dp1388
sg71
g787
sg64
(lp1389
g57
(g78
g59
NtRp1390
(dp1391
g62
(dp1392
g82
g83
ssg71
g1386
sg64
(lp1393
S'request_uri'
p1394
asbag57
(g78
g59
NtRp1395
(dp1396
g62
(dp1397
g89
g90
ssg71
g1386
sg64
(lp1398
S':'
asbag57
(g78
g59
NtRp1399
(dp1400
g62
(dp1401
sg71
g1386
sg64
(lp1402
g57
(g58
g59
NtRp1403
(dp1404
g62
(dp1405
g70
I4
ssg71
g1399
sg64
(lp1406
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/view/biosource/2?_signature=989584ebb954e46e850736855ab3be4ef3582b48'
p1407
asbasbasbag57
(g73
g59
NtRp1408
(dp1409
g62
(dp1410
sg71
g787
sg64
(lp1411
g57
(g78
g59
NtRp1412
(dp1413
g62
(dp1414
g82
g83
ssg71
g1408
sg64
(lp1415
S'script_name'
p1416
asbag57
(g78
g59
NtRp1417
(dp1418
g62
(dp1419
g89
g90
ssg71
g1408
sg64
(lp1420
S':'
asbag57
(g78
g59
NtRp1421
(dp1422
g62
(dp1423
sg71
g1408
sg64
(lp1424
g57
(g58
g59
NtRp1425
(dp1426
g62
(dp1427
g70
I4
ssg71
g1421
sg64
(lp1428
S''
asbasbasbag57
(g73
g59
NtRp1429
(dp1430
g62
(dp1431
sg71
g787
sg64
(lp1432
g57
(g78
g59
NtRp1433
(dp1434
g62
(dp1435
g82
g83
ssg71
g1429
sg64
(lp1436
S'server_name'
p1437
asbag57
(g78
g59
NtRp1438
(dp1439
g62
(dp1440
g89
g90
ssg71
g1429
sg64
(lp1441
S':'
asbag57
(g78
g59
NtRp1442
(dp1443
g62
(dp1444
sg71
g1429
sg64
(lp1445
g57
(g58
g59
NtRp1446
(dp1447
g62
(dp1448
g70
I4
ssg71
g1442
sg64
(lp1449
S'anil-Inspiron-1525'
p1450
asbasbasbag57
(g73
g59
NtRp1451
(dp1452
g62
(dp1453
sg71
g787
sg64
(lp1454
g57
(g78
g59
NtRp1455
(dp1456
g62
(dp1457
g82
g83
ssg71
g1451
sg64
(lp1458
S'server_port'
p1459
asbag57
(g78
g59
NtRp1460
(dp1461
g62
(dp1462
g89
g90
ssg71
g1451
sg64
(lp1463
S':'
asbag57
(g78
g59
NtRp1464
(dp1465
g62
(dp1466
sg71
g1451
sg64
(lp1467
g57
(g58
g59
NtRp1468
(dp1469
g62
(dp1470
g70
I4
ssg71
g1464
sg64
(lp1471
S'8000'
p1472
asbasbasbag57
(g73
g59
NtRp1473
(dp1474
g62
(dp1475
sg71
g787
sg64
(lp1476
g57
(g78
g59
NtRp1477
(dp1478
g62
(dp1479
g82
g83
ssg71
g1473
sg64
(lp1480
S'server_protocol'
p1481
asbag57
(g78
g59
NtRp1482
(dp1483
g62
(dp1484
g89
g90
ssg71
g1473
sg64
(lp1485
S':'
asbag57
(g78
g59
NtRp1486
(dp1487
g62
(dp1488
sg71
g1473
sg64
(lp1489
g57
(g58
g59
NtRp1490
(dp1491
g62
(dp1492
g70
I4
ssg71
g1486
sg64
(lp1493
S'HTTP/1.1'
p1494
asbasbasbag57
(g73
g59
NtRp1495
(dp1496
g62
(dp1497
sg71
g787
sg64
(lp1498
g57
(g78
g59
NtRp1499
(dp1500
g62
(dp1501
g82
g83
ssg71
g1495
sg64
(lp1502
S'server_software'
p1503
asbag57
(g78
g59
NtRp1504
(dp1505
g62
(dp1506
g89
g90
ssg71
g1495
sg64
(lp1507
S':'
asbag57
(g78
g59
NtRp1508
(dp1509
g62
(dp1510
sg71
g1495
sg64
(lp1511
g57
(g58
g59
NtRp1512
(dp1513
g62
(dp1514
g70
I4
ssg71
g1508
sg64
(lp1515
S'Rocket 1.2.6'
p1516
asbasbasbag57
(g73
g59
NtRp1517
(dp1518
g62
(dp1519
sg71
g787
sg64
(lp1520
g57
(g78
g59
NtRp1521
(dp1522
g62
(dp1523
g82
g83
ssg71
g1517
sg64
(lp1524
S'web2py_path'
p1525
asbag57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
g89
g90
ssg71
g1517
sg64
(lp1529
S':'
asbag57
(g78
g59
NtRp1530
(dp1531
g62
(dp1532
sg71
g1517
sg64
(lp1533
g57
(g58
g59
NtRp1534
(dp1535
g62
(dp1536
g70
I4
ssg71
g1530
sg64
(lp1537
g834
asbasbasbag57
(g73
g59
NtRp1538
(dp1539
g62
(dp1540
sg71
g787
sg64
(lp1541
g57
(g78
g59
NtRp1542
(dp1543
g62
(dp1544
g82
g83
ssg71
g1538
sg64
(lp1545
S'web2py_version'
p1546
asbag57
(g78
g59
NtRp1547
(dp1548
g62
(dp1549
g89
g90
ssg71
g1538
sg64
(lp1550
S':'
asbag57
(g78
g59
NtRp1551
(dp1552
g62
(dp1553
sg71
g1538
sg64
(lp1554
g57
(g58
g59
NtRp1555
(dp1556
g62
(dp1557
g70
I4
ssg71
g1551
sg64
(lp1558
g57
(g66
g59
NtRp1559
(dp1560
g62
(dp1561
g70
I3
ssg71
Nsg64
(lp1562
g57
(g73
g59
NtRp1563
(dp1564
g62
(dp1565
sg71
g1559
sg64
(lp1566
g57
(g78
g59
NtRp1567
(dp1568
g62
(dp1569
sg71
g1563
sg64
(lp1570
g57
(g58
g59
NtRp1571
(dp1572
g62
(dp1573
g70
I3
ssg71
g1567
sg64
(lp1574
S'2'
asbasbasbag57
(g73
g59
NtRp1575
(dp1576
g62
(dp1577
sg71
g1559
sg64
(lp1578
g57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
sg71
g1575
sg64
(lp1582
g57
(g58
g59
NtRp1583
(dp1584
g62
(dp1585
g70
I3
ssg71
g1579
sg64
(lp1586
S'3'
asbasbasbag57
(g73
g59
NtRp1587
(dp1588
g62
(dp1589
sg71
g1559
sg64
(lp1590
g57
(g78
g59
NtRp1591
(dp1592
g62
(dp1593
sg71
g1587
sg64
(lp1594
g57
(g58
g59
NtRp1595
(dp1596
g62
(dp1597
g70
I3
ssg71
g1591
sg64
(lp1598
S'2'
asbasbasbag57
(g73
g59
NtRp1599
(dp1600
g62
(dp1601
sg71
g1559
sg64
(lp1602
g57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
sg71
g1599
sg64
(lp1606
g57
(g58
g59
NtRp1607
(dp1608
g62
(dp1609
g70
I3
ssg71
g1603
sg64
(lp1610
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1611
asbasbasbag57
(g73
g59
NtRp1612
(dp1613
g62
(dp1614
sg71
g1559
sg64
(lp1615
g57
(g78
g59
NtRp1616
(dp1617
g62
(dp1618
sg71
g1612
sg64
(lp1619
g57
(g58
g59
NtRp1620
(dp1621
g62
(dp1622
g70
I3
ssg71
g1616
sg64
(lp1623
S'stable'
p1624
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1625
(dp1626
g62
(dp1627
sg71
g787
sg64
(lp1628
g57
(g78
g59
NtRp1629
(dp1630
g62
(dp1631
g82
g83
ssg71
g1625
sg64
(lp1632
S'wsgi_errors'
p1633
asbag57
(g78
g59
NtRp1634
(dp1635
g62
(dp1636
g89
g90
ssg71
g1625
sg64
(lp1637
S':'
asbag57
(g78
g59
NtRp1638
(dp1639
g62
(dp1640
sg71
g1625
sg64
(lp1641
g57
(g58
g59
NtRp1642
(dp1643
g62
(dp1644
g70
I4
ssg71
g1638
sg64
(lp1645
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1646
asbasbasbag57
(g73
g59
NtRp1647
(dp1648
g62
(dp1649
sg71
g787
sg64
(lp1650
g57
(g78
g59
NtRp1651
(dp1652
g62
(dp1653
g82
g83
ssg71
g1647
sg64
(lp1654
S'wsgi_file_wrapper'
p1655
asbag57
(g78
g59
NtRp1656
(dp1657
g62
(dp1658
g89
g90
ssg71
g1647
sg64
(lp1659
S':'
asbag57
(g78
g59
NtRp1660
(dp1661
g62
(dp1662
sg71
g1647
sg64
(lp1663
g57
(g58
g59
NtRp1664
(dp1665
g62
(dp1666
g70
I4
ssg71
g1660
sg64
(lp1667
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1668
asbasbasbag57
(g73
g59
NtRp1669
(dp1670
g62
(dp1671
sg71
g787
sg64
(lp1672
g57
(g78
g59
NtRp1673
(dp1674
g62
(dp1675
g82
g83
ssg71
g1669
sg64
(lp1676
S'wsgi_input'
p1677
asbag57
(g78
g59
NtRp1678
(dp1679
g62
(dp1680
g89
g90
ssg71
g1669
sg64
(lp1681
S':'
asbag57
(g78
g59
NtRp1682
(dp1683
g62
(dp1684
sg71
g1669
sg64
(lp1685
g57
(g58
g59
NtRp1686
(dp1687
g62
(dp1688
g70
I4
ssg71
g1682
sg64
(lp1689
S'<socket._fileobject object at 0xaed94c2c>'
p1690
asbasbasbag57
(g73
g59
NtRp1691
(dp1692
g62
(dp1693
sg71
g787
sg64
(lp1694
g57
(g78
g59
NtRp1695
(dp1696
g62
(dp1697
g82
g83
ssg71
g1691
sg64
(lp1698
S'wsgi_multiprocess'
p1699
asbag57
(g78
g59
NtRp1700
(dp1701
g62
(dp1702
g89
g90
ssg71
g1691
sg64
(lp1703
S':'
asbag57
(g78
g59
NtRp1704
(dp1705
g62
(dp1706
sg71
g1691
sg64
(lp1707
g57
(g58
g59
NtRp1708
(dp1709
g62
(dp1710
g70
I4
ssg71
g1704
sg64
(lp1711
g100
asbasbasbag57
(g73
g59
NtRp1712
(dp1713
g62
(dp1714
sg71
g787
sg64
(lp1715
g57
(g78
g59
NtRp1716
(dp1717
g62
(dp1718
g82
g83
ssg71
g1712
sg64
(lp1719
S'wsgi_multithread'
p1720
asbag57
(g78
g59
NtRp1721
(dp1722
g62
(dp1723
g89
g90
ssg71
g1712
sg64
(lp1724
S':'
asbag57
(g78
g59
NtRp1725
(dp1726
g62
(dp1727
sg71
g1712
sg64
(lp1728
g57
(g58
g59
NtRp1729
(dp1730
g62
(dp1731
g70
I4
ssg71
g1725
sg64
(lp1732
S'True'
p1733
asbasbasbag57
(g73
g59
NtRp1734
(dp1735
g62
(dp1736
sg71
g787
sg64
(lp1737
g57
(g78
g59
NtRp1738
(dp1739
g62
(dp1740
g82
g83
ssg71
g1734
sg64
(lp1741
S'wsgi_run_once'
p1742
asbag57
(g78
g59
NtRp1743
(dp1744
g62
(dp1745
g89
g90
ssg71
g1734
sg64
(lp1746
S':'
asbag57
(g78
g59
NtRp1747
(dp1748
g62
(dp1749
sg71
g1734
sg64
(lp1750
g57
(g58
g59
NtRp1751
(dp1752
g62
(dp1753
g70
I4
ssg71
g1747
sg64
(lp1754
g100
asbasbasbag57
(g73
g59
NtRp1755
(dp1756
g62
(dp1757
sg71
g787
sg64
(lp1758
g57
(g78
g59
NtRp1759
(dp1760
g62
(dp1761
g82
g83
ssg71
g1755
sg64
(lp1762
S'wsgi_url_scheme'
p1763
asbag57
(g78
g59
NtRp1764
(dp1765
g62
(dp1766
g89
g90
ssg71
g1755
sg64
(lp1767
S':'
asbag57
(g78
g59
NtRp1768
(dp1769
g62
(dp1770
sg71
g1755
sg64
(lp1771
g57
(g58
g59
NtRp1772
(dp1773
g62
(dp1774
g70
I4
ssg71
g1768
sg64
(lp1775
S'http'
p1776
asbasbasbag57
(g73
g59
NtRp1777
(dp1778
g62
(dp1779
sg71
g787
sg64
(lp1780
g57
(g78
g59
NtRp1781
(dp1782
g62
(dp1783
g82
g83
ssg71
g1777
sg64
(lp1784
S'wsgi_version'
p1785
asbag57
(g78
g59
NtRp1786
(dp1787
g62
(dp1788
g89
g90
ssg71
g1777
sg64
(lp1789
S':'
asbag57
(g78
g59
NtRp1790
(dp1791
g62
(dp1792
sg71
g1777
sg64
(lp1793
g57
(g58
g59
NtRp1794
(dp1795
g62
(dp1796
g70
I4
ssg71
g1790
sg64
(lp1797
g57
(g66
g59
NtRp1798
(dp1799
g62
(dp1800
g70
I3
ssg71
Nsg64
(lp1801
g57
(g73
g59
NtRp1802
(dp1803
g62
(dp1804
sg71
g1798
sg64
(lp1805
g57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
sg71
g1802
sg64
(lp1809
g57
(g58
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I3
ssg71
g1806
sg64
(lp1813
S'1'
asbasbasbag57
(g73
g59
NtRp1814
(dp1815
g62
(dp1816
sg71
g1798
sg64
(lp1817
g57
(g78
g59
NtRp1818
(dp1819
g62
(dp1820
sg71
g1814
sg64
(lp1821
g57
(g58
g59
NtRp1822
(dp1823
g62
(dp1824
g70
I3
ssg71
g1818
sg64
(lp1825
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1826
(dp1827
g62
(dp1828
sg71
g67
sg64
(lp1829
g57
(g78
g59
NtRp1830
(dp1831
g62
(dp1832
g82
g83
ssg71
g1826
sg64
(lp1833
S'extension'
p1834
asbag57
(g78
g59
NtRp1835
(dp1836
g62
(dp1837
g89
g90
ssg71
g1826
sg64
(lp1838
S':'
asbag57
(g78
g59
NtRp1839
(dp1840
g62
(dp1841
sg71
g1826
sg64
(lp1842
g57
(g58
g59
NtRp1843
(dp1844
g62
(dp1845
g70
I5
ssg71
g1839
sg64
(lp1846
S'html'
p1847
asbasbasbag57
(g73
g59
NtRp1848
(dp1849
g62
(dp1850
sg71
g67
sg64
(lp1851
g57
(g78
g59
NtRp1852
(dp1853
g62
(dp1854
g82
g83
ssg71
g1848
sg64
(lp1855
S'folder'
p1856
asbag57
(g78
g59
NtRp1857
(dp1858
g62
(dp1859
g89
g90
ssg71
g1848
sg64
(lp1860
S':'
asbag57
(g78
g59
NtRp1861
(dp1862
g62
(dp1863
sg71
g1848
sg64
(lp1864
g57
(g58
g59
NtRp1865
(dp1866
g62
(dp1867
g70
I5
ssg71
g1861
sg64
(lp1868
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1869
asbasbasbag57
(g73
g59
NtRp1870
(dp1871
g62
(dp1872
sg71
g67
sg64
(lp1873
g57
(g78
g59
NtRp1874
(dp1875
g62
(dp1876
g82
g83
ssg71
g1870
sg64
(lp1877
S'function'
p1878
asbag57
(g78
g59
NtRp1879
(dp1880
g62
(dp1881
g89
g90
ssg71
g1870
sg64
(lp1882
S':'
asbag57
(g78
g59
NtRp1883
(dp1884
g62
(dp1885
sg71
g1870
sg64
(lp1886
g57
(g58
g59
NtRp1887
(dp1888
g62
(dp1889
g70
I5
ssg71
g1883
sg64
(lp1890
S'list_all_dev_projects'
p1891
asbasbasbag57
(g73
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g67
sg64
(lp1895
g57
(g78
g59
NtRp1896
(dp1897
g62
(dp1898
g82
g83
ssg71
g1892
sg64
(lp1899
S'get_vars'
p1900
asbag57
(g78
g59
NtRp1901
(dp1902
g62
(dp1903
g89
g90
ssg71
g1892
sg64
(lp1904
S':'
asbag57
(g78
g59
NtRp1905
(dp1906
g62
(dp1907
sg71
g1892
sg64
(lp1908
g57
(g58
g59
NtRp1909
(dp1910
g62
(dp1911
g70
I5
ssg71
g1905
sg64
(lp1912
g57
(g66
g59
NtRp1913
(dp1914
g62
(dp1915
g70
I4
ssg71
Nsg64
(lp1916
sbasbasbasbag57
(g73
g59
NtRp1917
(dp1918
g62
(dp1919
sg71
g67
sg64
(lp1920
g57
(g78
g59
NtRp1921
(dp1922
g62
(dp1923
g82
g83
ssg71
g1917
sg64
(lp1924
S'global_settings'
p1925
asbag57
(g78
g59
NtRp1926
(dp1927
g62
(dp1928
g89
g90
ssg71
g1917
sg64
(lp1929
S':'
asbag57
(g78
g59
NtRp1930
(dp1931
g62
(dp1932
sg71
g1917
sg64
(lp1933
g57
(g58
g59
NtRp1934
(dp1935
g62
(dp1936
g70
I5
ssg71
g1930
sg64
(lp1937
g57
(g66
g59
NtRp1938
(dp1939
g62
(dp1940
g70
I4
ssg71
Nsg64
(lp1941
g57
(g73
g59
NtRp1942
(dp1943
g62
(dp1944
sg71
g1938
sg64
(lp1945
g57
(g78
g59
NtRp1946
(dp1947
g62
(dp1948
g82
g83
ssg71
g1942
sg64
(lp1949
g799
asbag57
(g78
g59
NtRp1950
(dp1951
g62
(dp1952
g89
g90
ssg71
g1942
sg64
(lp1953
S':'
asbag57
(g78
g59
NtRp1954
(dp1955
g62
(dp1956
sg71
g1942
sg64
(lp1957
g57
(g58
g59
NtRp1958
(dp1959
g62
(dp1960
g70
I4
ssg71
g1954
sg64
(lp1961
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1962
asbasbasbag57
(g73
g59
NtRp1963
(dp1964
g62
(dp1965
sg71
g1938
sg64
(lp1966
g57
(g78
g59
NtRp1967
(dp1968
g62
(dp1969
g82
g83
ssg71
g1963
sg64
(lp1970
g821
asbag57
(g78
g59
NtRp1971
(dp1972
g62
(dp1973
g89
g90
ssg71
g1963
sg64
(lp1974
S':'
asbag57
(g78
g59
NtRp1975
(dp1976
g62
(dp1977
sg71
g1963
sg64
(lp1978
g57
(g58
g59
NtRp1979
(dp1980
g62
(dp1981
g70
I4
ssg71
g1975
sg64
(lp1982
g834
asbasbasbag57
(g73
g59
NtRp1983
(dp1984
g62
(dp1985
sg71
g1938
sg64
(lp1986
g57
(g78
g59
NtRp1987
(dp1988
g62
(dp1989
g82
g83
ssg71
g1983
sg64
(lp1990
g843
asbag57
(g78
g59
NtRp1991
(dp1992
g62
(dp1993
g89
g90
ssg71
g1983
sg64
(lp1994
S':'
asbag57
(g78
g59
NtRp1995
(dp1996
g62
(dp1997
sg71
g1983
sg64
(lp1998
g57
(g58
g59
NtRp1999
(dp2000
g62
(dp2001
g70
I4
ssg71
g1995
sg64
(lp2002
g57
(g66
g59
NtRp2003
(dp2004
g62
(dp2005
g70
I3
ssg71
Nsg64
(lp2006
sbasbasbasbag57
(g73
g59
NtRp2007
(dp2008
g62
(dp2009
sg71
g1938
sg64
(lp2010
g57
(g78
g59
NtRp2011
(dp2012
g62
(dp2013
g82
g83
ssg71
g2007
sg64
(lp2014
g868
asbag57
(g78
g59
NtRp2015
(dp2016
g62
(dp2017
g89
g90
ssg71
g2007
sg64
(lp2018
S':'
asbag57
(g78
g59
NtRp2019
(dp2020
g62
(dp2021
sg71
g2007
sg64
(lp2022
g57
(g58
g59
NtRp2023
(dp2024
g62
(dp2025
g70
I4
ssg71
g2019
sg64
(lp2026
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2027
asbasbasbag57
(g73
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g1938
sg64
(lp2031
g57
(g78
g59
NtRp2032
(dp2033
g62
(dp2034
g82
g83
ssg71
g2028
sg64
(lp2035
g890
asbag57
(g78
g59
NtRp2036
(dp2037
g62
(dp2038
g89
g90
ssg71
g2028
sg64
(lp2039
S':'
asbag57
(g78
g59
NtRp2040
(dp2041
g62
(dp2042
sg71
g2028
sg64
(lp2043
g57
(g58
g59
NtRp2044
(dp2045
g62
(dp2046
g70
I4
ssg71
g2040
sg64
(lp2047
S'set([])'
p2048
asbasbasbag57
(g73
g59
NtRp2049
(dp2050
g62
(dp2051
sg71
g1938
sg64
(lp2052
g57
(g78
g59
NtRp2053
(dp2054
g62
(dp2055
g82
g83
ssg71
g2049
sg64
(lp2056
g912
asbag57
(g78
g59
NtRp2057
(dp2058
g62
(dp2059
g89
g90
ssg71
g2049
sg64
(lp2060
S':'
asbag57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
sg71
g2049
sg64
(lp2064
g57
(g58
g59
NtRp2065
(dp2066
g62
(dp2067
g70
I4
ssg71
g2061
sg64
(lp2068
g100
asbasbasbag57
(g73
g59
NtRp2069
(dp2070
g62
(dp2071
sg71
g1938
sg64
(lp2072
g57
(g78
g59
NtRp2073
(dp2074
g62
(dp2075
g82
g83
ssg71
g2069
sg64
(lp2076
g933
asbag57
(g78
g59
NtRp2077
(dp2078
g62
(dp2079
g89
g90
ssg71
g2069
sg64
(lp2080
S':'
asbag57
(g78
g59
NtRp2081
(dp2082
g62
(dp2083
sg71
g2069
sg64
(lp2084
g57
(g58
g59
NtRp2085
(dp2086
g62
(dp2087
g70
I4
ssg71
g2081
sg64
(lp2088
g946
asbasbasbag57
(g73
g59
NtRp2089
(dp2090
g62
(dp2091
sg71
g1938
sg64
(lp2092
g57
(g78
g59
NtRp2093
(dp2094
g62
(dp2095
g82
g83
ssg71
g2089
sg64
(lp2096
g1153
asbag57
(g78
g59
NtRp2097
(dp2098
g62
(dp2099
g89
g90
ssg71
g2089
sg64
(lp2100
S':'
asbag57
(g78
g59
NtRp2101
(dp2102
g62
(dp2103
sg71
g2089
sg64
(lp2104
g57
(g58
g59
NtRp2105
(dp2106
g62
(dp2107
g70
I4
ssg71
g2101
sg64
(lp2108
g100
asbasbasbag57
(g73
g59
NtRp2109
(dp2110
g62
(dp2111
sg71
g1938
sg64
(lp2112
g57
(g78
g59
NtRp2113
(dp2114
g62
(dp2115
g82
g83
ssg71
g2109
sg64
(lp2116
g1174
asbag57
(g78
g59
NtRp2117
(dp2118
g62
(dp2119
g89
g90
ssg71
g2109
sg64
(lp2120
S':'
asbag57
(g78
g59
NtRp2121
(dp2122
g62
(dp2123
sg71
g2109
sg64
(lp2124
g57
(g58
g59
NtRp2125
(dp2126
g62
(dp2127
g70
I4
ssg71
g2121
sg64
(lp2128
g100
asbasbasbag57
(g73
g59
NtRp2129
(dp2130
g62
(dp2131
sg71
g1938
sg64
(lp2132
g57
(g78
g59
NtRp2133
(dp2134
g62
(dp2135
g82
g83
ssg71
g2129
sg64
(lp2136
g1195
asbag57
(g78
g59
NtRp2137
(dp2138
g62
(dp2139
g89
g90
ssg71
g2129
sg64
(lp2140
S':'
asbag57
(g78
g59
NtRp2141
(dp2142
g62
(dp2143
sg71
g2129
sg64
(lp2144
g57
(g58
g59
NtRp2145
(dp2146
g62
(dp2147
g70
I4
ssg71
g2141
sg64
(lp2148
g57
(g66
g59
NtRp2149
(dp2150
g62
(dp2151
g70
I3
ssg71
Nsg64
(lp2152
g57
(g73
g59
NtRp2153
(dp2154
g62
(dp2155
sg71
g2149
sg64
(lp2156
g57
(g78
g59
NtRp2157
(dp2158
g62
(dp2159
sg71
g2153
sg64
(lp2160
g57
(g58
g59
NtRp2161
(dp2162
g62
(dp2163
g70
I3
ssg71
g2157
sg64
(lp2164
g1224
asbasbasbag57
(g73
g59
NtRp2165
(dp2166
g62
(dp2167
sg71
g2149
sg64
(lp2168
g57
(g78
g59
NtRp2169
(dp2170
g62
(dp2171
sg71
g2165
sg64
(lp2172
g57
(g58
g59
NtRp2173
(dp2174
g62
(dp2175
g70
I3
ssg71
g2169
sg64
(lp2176
g1237
asbasbasbag57
(g73
g59
NtRp2177
(dp2178
g62
(dp2179
sg71
g2149
sg64
(lp2180
g57
(g78
g59
NtRp2181
(dp2182
g62
(dp2183
sg71
g2177
sg64
(lp2184
g57
(g58
g59
NtRp2185
(dp2186
g62
(dp2187
g70
I3
ssg71
g2181
sg64
(lp2188
g1250
asbasbasbag57
(g73
g59
NtRp2189
(dp2190
g62
(dp2191
sg71
g2149
sg64
(lp2192
g57
(g78
g59
NtRp2193
(dp2194
g62
(dp2195
sg71
g2189
sg64
(lp2196
g57
(g58
g59
NtRp2197
(dp2198
g62
(dp2199
g70
I3
ssg71
g2193
sg64
(lp2200
g1263
asbasbasbag57
(g73
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g2149
sg64
(lp2204
g57
(g78
g59
NtRp2205
(dp2206
g62
(dp2207
sg71
g2201
sg64
(lp2208
g57
(g58
g59
NtRp2209
(dp2210
g62
(dp2211
g70
I3
ssg71
g2205
sg64
(lp2212
g1276
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g1938
sg64
(lp2216
g57
(g78
g59
NtRp2217
(dp2218
g62
(dp2219
g82
g83
ssg71
g2213
sg64
(lp2220
g1546
asbag57
(g78
g59
NtRp2221
(dp2222
g62
(dp2223
g89
g90
ssg71
g2213
sg64
(lp2224
S':'
asbag57
(g78
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g2213
sg64
(lp2228
g57
(g58
g59
NtRp2229
(dp2230
g62
(dp2231
g70
I4
ssg71
g2225
sg64
(lp2232
g57
(g66
g59
NtRp2233
(dp2234
g62
(dp2235
g70
I3
ssg71
Nsg64
(lp2236
g57
(g73
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2233
sg64
(lp2240
g57
(g78
g59
NtRp2241
(dp2242
g62
(dp2243
sg71
g2237
sg64
(lp2244
g57
(g58
g59
NtRp2245
(dp2246
g62
(dp2247
g70
I3
ssg71
g2241
sg64
(lp2248
S'2'
asbasbasbag57
(g73
g59
NtRp2249
(dp2250
g62
(dp2251
sg71
g2233
sg64
(lp2252
g57
(g78
g59
NtRp2253
(dp2254
g62
(dp2255
sg71
g2249
sg64
(lp2256
g57
(g58
g59
NtRp2257
(dp2258
g62
(dp2259
g70
I3
ssg71
g2253
sg64
(lp2260
S'3'
asbasbasbag57
(g73
g59
NtRp2261
(dp2262
g62
(dp2263
sg71
g2233
sg64
(lp2264
g57
(g78
g59
NtRp2265
(dp2266
g62
(dp2267
sg71
g2261
sg64
(lp2268
g57
(g58
g59
NtRp2269
(dp2270
g62
(dp2271
g70
I3
ssg71
g2265
sg64
(lp2272
S'2'
asbasbasbag57
(g73
g59
NtRp2273
(dp2274
g62
(dp2275
sg71
g2233
sg64
(lp2276
g57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
sg71
g2273
sg64
(lp2280
g57
(g58
g59
NtRp2281
(dp2282
g62
(dp2283
g70
I3
ssg71
g2277
sg64
(lp2284
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2285
asbasbasbag57
(g73
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g2233
sg64
(lp2289
g57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
sg71
g2286
sg64
(lp2293
g57
(g58
g59
NtRp2294
(dp2295
g62
(dp2296
g70
I3
ssg71
g2290
sg64
(lp2297
g1624
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2298
(dp2299
g62
(dp2300
sg71
g67
sg64
(lp2301
g57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
g82
g83
ssg71
g2298
sg64
(lp2305
S'is_https'
p2306
asbag57
(g78
g59
NtRp2307
(dp2308
g62
(dp2309
g89
g90
ssg71
g2298
sg64
(lp2310
S':'
asbag57
(g78
g59
NtRp2311
(dp2312
g62
(dp2313
sg71
g2298
sg64
(lp2314
g57
(g58
g59
NtRp2315
(dp2316
g62
(dp2317
g70
I5
ssg71
g2311
sg64
(lp2318
g100
asbasbasbag57
(g73
g59
NtRp2319
(dp2320
g62
(dp2321
sg71
g67
sg64
(lp2322
g57
(g78
g59
NtRp2323
(dp2324
g62
(dp2325
g82
g83
ssg71
g2319
sg64
(lp2326
S'is_local'
p2327
asbag57
(g78
g59
NtRp2328
(dp2329
g62
(dp2330
g89
g90
ssg71
g2319
sg64
(lp2331
S':'
asbag57
(g78
g59
NtRp2332
(dp2333
g62
(dp2334
sg71
g2319
sg64
(lp2335
g57
(g58
g59
NtRp2336
(dp2337
g62
(dp2338
g70
I5
ssg71
g2332
sg64
(lp2339
g1733
asbasbasbag57
(g73
g59
NtRp2340
(dp2341
g62
(dp2342
sg71
g67
sg64
(lp2343
g57
(g78
g59
NtRp2344
(dp2345
g62
(dp2346
g82
g83
ssg71
g2340
sg64
(lp2347
S'is_restful'
p2348
asbag57
(g78
g59
NtRp2349
(dp2350
g62
(dp2351
g89
g90
ssg71
g2340
sg64
(lp2352
S':'
asbag57
(g78
g59
NtRp2353
(dp2354
g62
(dp2355
sg71
g2340
sg64
(lp2356
g57
(g58
g59
NtRp2357
(dp2358
g62
(dp2359
g70
I5
ssg71
g2353
sg64
(lp2360
g100
asbasbasbag57
(g73
g59
NtRp2361
(dp2362
g62
(dp2363
sg71
g67
sg64
(lp2364
g57
(g78
g59
NtRp2365
(dp2366
g62
(dp2367
g82
g83
ssg71
g2361
sg64
(lp2368
S'now'
p2369
asbag57
(g78
g59
NtRp2370
(dp2371
g62
(dp2372
g89
g90
ssg71
g2361
sg64
(lp2373
S':'
asbag57
(g78
g59
NtRp2374
(dp2375
g62
(dp2376
sg71
g2361
sg64
(lp2377
g57
(g58
g59
NtRp2378
(dp2379
g62
(dp2380
g70
I5
ssg71
g2374
sg64
(lp2381
S'datetime.datetime(2013, 2, 24, 23, 34, 56, 896279)'
p2382
asbasbasbag57
(g73
g59
NtRp2383
(dp2384
g62
(dp2385
sg71
g67
sg64
(lp2386
g57
(g78
g59
NtRp2387
(dp2388
g62
(dp2389
g82
g83
ssg71
g2383
sg64
(lp2390
S'post_vars'
p2391
asbag57
(g78
g59
NtRp2392
(dp2393
g62
(dp2394
g89
g90
ssg71
g2383
sg64
(lp2395
S':'
asbag57
(g78
g59
NtRp2396
(dp2397
g62
(dp2398
sg71
g2383
sg64
(lp2399
g57
(g58
g59
NtRp2400
(dp2401
g62
(dp2402
g70
I5
ssg71
g2396
sg64
(lp2403
g57
(g66
g59
NtRp2404
(dp2405
g62
(dp2406
g70
I4
ssg71
Nsg64
(lp2407
sbasbasbasbag57
(g73
g59
NtRp2408
(dp2409
g62
(dp2410
sg71
g67
sg64
(lp2411
g57
(g78
g59
NtRp2412
(dp2413
g62
(dp2414
g82
g83
ssg71
g2408
sg64
(lp2415
S'raw_args'
p2416
asbag57
(g78
g59
NtRp2417
(dp2418
g62
(dp2419
g89
g90
ssg71
g2408
sg64
(lp2420
S':'
asbag57
(g78
g59
NtRp2421
(dp2422
g62
(dp2423
sg71
g2408
sg64
(lp2424
g57
(g58
g59
NtRp2425
(dp2426
g62
(dp2427
g70
I5
ssg71
g2421
sg64
(lp2428
S'project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/view/biosource/2'
p2429
asbasbasbag57
(g73
g59
NtRp2430
(dp2431
g62
(dp2432
sg71
g67
sg64
(lp2433
g57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
g82
g83
ssg71
g2430
sg64
(lp2437
S'raw_extension'
p2438
asbag57
(g78
g59
NtRp2439
(dp2440
g62
(dp2441
g89
g90
ssg71
g2430
sg64
(lp2442
S':'
asbag57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g2430
sg64
(lp2446
g57
(g58
g59
NtRp2447
(dp2448
g62
(dp2449
g70
I5
ssg71
g2443
sg64
(lp2450
S'None'
p2451
asbasbasbag57
(g73
g59
NtRp2452
(dp2453
g62
(dp2454
sg71
g67
sg64
(lp2455
g57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
g82
g83
ssg71
g2452
sg64
(lp2459
S'url'
p2460
asbag57
(g78
g59
NtRp2461
(dp2462
g62
(dp2463
g89
g90
ssg71
g2452
sg64
(lp2464
S':'
asbag57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g2452
sg64
(lp2468
g57
(g58
g59
NtRp2469
(dp2470
g62
(dp2471
g70
I5
ssg71
g2465
sg64
(lp2472
g1298
asbasbasbag57
(g73
g59
NtRp2473
(dp2474
g62
(dp2475
sg71
g67
sg64
(lp2476
g57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
g82
g83
ssg71
g2473
sg64
(lp2480
S'utcnow'
p2481
asbag57
(g78
g59
NtRp2482
(dp2483
g62
(dp2484
g89
g90
ssg71
g2473
sg64
(lp2485
S':'
asbag57
(g78
g59
NtRp2486
(dp2487
g62
(dp2488
sg71
g2473
sg64
(lp2489
g57
(g58
g59
NtRp2490
(dp2491
g62
(dp2492
g70
I5
ssg71
g2486
sg64
(lp2493
S'datetime.datetime(2013, 2, 24, 18, 4, 56, 896325)'
p2494
asbasbasbag57
(g73
g59
NtRp2495
(dp2496
g62
(dp2497
sg71
g67
sg64
(lp2498
g57
(g78
g59
NtRp2499
(dp2500
g62
(dp2501
g82
g83
ssg71
g2495
sg64
(lp2502
S'uuid'
p2503
asbag57
(g78
g59
NtRp2504
(dp2505
g62
(dp2506
g89
g90
ssg71
g2495
sg64
(lp2507
S':'
asbag57
(g78
g59
NtRp2508
(dp2509
g62
(dp2510
sg71
g2495
sg64
(lp2511
g57
(g58
g59
NtRp2512
(dp2513
g62
(dp2514
g70
I5
ssg71
g2508
sg64
(lp2515
S'DEV_bootstrap_ch/127.0.0.1.2013-02-24.23-34-56.95c3389f-6ffb-49cd-8eb7-07c7ba9d3fc5'
p2516
asbasbasbag57
(g73
g59
NtRp2517
(dp2518
g62
(dp2519
sg71
g67
sg64
(lp2520
g57
(g78
g59
NtRp2521
(dp2522
g62
(dp2523
g82
g83
ssg71
g2517
sg64
(lp2524
S'vars'
p2525
asbag57
(g78
g59
NtRp2526
(dp2527
g62
(dp2528
g89
g90
ssg71
g2517
sg64
(lp2529
S':'
asbag57
(g78
g59
NtRp2530
(dp2531
g62
(dp2532
sg71
g2517
sg64
(lp2533
g57
(g58
g59
NtRp2534
(dp2535
g62
(dp2536
g70
I5
ssg71
g2530
sg64
(lp2537
g57
(g66
g59
NtRp2538
(dp2539
g62
(dp2540
g70
I4
ssg71
Nsg64
(lp2541
sbasbasbasbag57
(g73
g59
NtRp2542
(dp2543
g62
(dp2544
sg71
g67
sg64
(lp2545
g57
(g78
g59
NtRp2546
(dp2547
g62
(dp2548
g82
g83
ssg71
g2542
sg64
(lp2549
S'wsgi'
p2550
asbag57
(g78
g59
NtRp2551
(dp2552
g62
(dp2553
g89
g90
ssg71
g2542
sg64
(lp2554
S':'
asbag57
(g78
g59
NtRp2555
(dp2556
g62
(dp2557
sg71
g2542
sg64
(lp2558
g57
(g58
g59
NtRp2559
(dp2560
g62
(dp2561
g70
I5
ssg71
g2555
sg64
(lp2562
g57
(g66
g59
NtRp2563
(dp2564
g62
(dp2565
g70
I4
ssg71
Nsg64
(lp2566
g57
(g73
g59
NtRp2567
(dp2568
g62
(dp2569
sg71
g2563
sg64
(lp2570
g57
(g78
g59
NtRp2571
(dp2572
g62
(dp2573
g82
g83
ssg71
g2567
sg64
(lp2574
S'environ'
p2575
asbag57
(g78
g59
NtRp2576
(dp2577
g62
(dp2578
g89
g90
ssg71
g2567
sg64
(lp2579
S':'
asbag57
(g78
g59
NtRp2580
(dp2581
g62
(dp2582
sg71
g2567
sg64
(lp2583
g57
(g58
g59
NtRp2584
(dp2585
g62
(dp2586
g70
I4
ssg71
g2580
sg64
(lp2587
g57
(g66
g59
NtRp2588
(dp2589
g62
(dp2590
g70
I3
ssg71
Nsg64
(lp2591
g57
(g73
g59
NtRp2592
(dp2593
g62
(dp2594
sg71
g2588
sg64
(lp2595
g57
(g78
g59
NtRp2596
(dp2597
g62
(dp2598
g82
g83
ssg71
g2592
sg64
(lp2599
S'HTTP_ACCEPT'
p2600
asbag57
(g78
g59
NtRp2601
(dp2602
g62
(dp2603
g89
g90
ssg71
g2592
sg64
(lp2604
S':'
asbag57
(g78
g59
NtRp2605
(dp2606
g62
(dp2607
sg71
g2592
sg64
(lp2608
g57
(g58
g59
NtRp2609
(dp2610
g62
(dp2611
g70
I3
ssg71
g2605
sg64
(lp2612
g968
asbasbasbag57
(g73
g59
NtRp2613
(dp2614
g62
(dp2615
sg71
g2588
sg64
(lp2616
g57
(g78
g59
NtRp2617
(dp2618
g62
(dp2619
g82
g83
ssg71
g2613
sg64
(lp2620
S'HTTP_ACCEPT_CHARSET'
p2621
asbag57
(g78
g59
NtRp2622
(dp2623
g62
(dp2624
g89
g90
ssg71
g2613
sg64
(lp2625
S':'
asbag57
(g78
g59
NtRp2626
(dp2627
g62
(dp2628
sg71
g2613
sg64
(lp2629
g57
(g58
g59
NtRp2630
(dp2631
g62
(dp2632
g70
I3
ssg71
g2626
sg64
(lp2633
g990
asbasbasbag57
(g73
g59
NtRp2634
(dp2635
g62
(dp2636
sg71
g2588
sg64
(lp2637
g57
(g78
g59
NtRp2638
(dp2639
g62
(dp2640
g82
g83
ssg71
g2634
sg64
(lp2641
S'HTTP_ACCEPT_ENCODING'
p2642
asbag57
(g78
g59
NtRp2643
(dp2644
g62
(dp2645
g89
g90
ssg71
g2634
sg64
(lp2646
S':'
asbag57
(g78
g59
NtRp2647
(dp2648
g62
(dp2649
sg71
g2634
sg64
(lp2650
g57
(g58
g59
NtRp2651
(dp2652
g62
(dp2653
g70
I3
ssg71
g2647
sg64
(lp2654
g1012
asbasbasbag57
(g73
g59
NtRp2655
(dp2656
g62
(dp2657
sg71
g2588
sg64
(lp2658
g57
(g78
g59
NtRp2659
(dp2660
g62
(dp2661
g82
g83
ssg71
g2655
sg64
(lp2662
S'HTTP_ACCEPT_LANGUAGE'
p2663
asbag57
(g78
g59
NtRp2664
(dp2665
g62
(dp2666
g89
g90
ssg71
g2655
sg64
(lp2667
S':'
asbag57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
sg71
g2655
sg64
(lp2671
g57
(g58
g59
NtRp2672
(dp2673
g62
(dp2674
g70
I3
ssg71
g2668
sg64
(lp2675
g1034
asbasbasbag57
(g73
g59
NtRp2676
(dp2677
g62
(dp2678
sg71
g2588
sg64
(lp2679
g57
(g78
g59
NtRp2680
(dp2681
g62
(dp2682
g82
g83
ssg71
g2676
sg64
(lp2683
S'HTTP_CONNECTION'
p2684
asbag57
(g78
g59
NtRp2685
(dp2686
g62
(dp2687
g89
g90
ssg71
g2676
sg64
(lp2688
S':'
asbag57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
sg71
g2676
sg64
(lp2692
g57
(g58
g59
NtRp2693
(dp2694
g62
(dp2695
g70
I3
ssg71
g2689
sg64
(lp2696
g1056
asbasbasbag57
(g73
g59
NtRp2697
(dp2698
g62
(dp2699
sg71
g2588
sg64
(lp2700
g57
(g78
g59
NtRp2701
(dp2702
g62
(dp2703
g82
g83
ssg71
g2697
sg64
(lp2704
S'HTTP_COOKIE'
p2705
asbag57
(g78
g59
NtRp2706
(dp2707
g62
(dp2708
g89
g90
ssg71
g2697
sg64
(lp2709
S':'
asbag57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
sg71
g2697
sg64
(lp2713
g57
(g58
g59
NtRp2714
(dp2715
g62
(dp2716
g70
I3
ssg71
g2710
sg64
(lp2717
g1078
asbasbasbag57
(g73
g59
NtRp2718
(dp2719
g62
(dp2720
sg71
g2588
sg64
(lp2721
g57
(g78
g59
NtRp2722
(dp2723
g62
(dp2724
g82
g83
ssg71
g2718
sg64
(lp2725
S'HTTP_HOST'
p2726
asbag57
(g78
g59
NtRp2727
(dp2728
g62
(dp2729
g89
g90
ssg71
g2718
sg64
(lp2730
S':'
asbag57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
sg71
g2718
sg64
(lp2734
g57
(g58
g59
NtRp2735
(dp2736
g62
(dp2737
g70
I3
ssg71
g2731
sg64
(lp2738
g1100
asbasbasbag57
(g73
g59
NtRp2739
(dp2740
g62
(dp2741
sg71
g2588
sg64
(lp2742
g57
(g78
g59
NtRp2743
(dp2744
g62
(dp2745
g82
g83
ssg71
g2739
sg64
(lp2746
S'HTTP_REFERER'
p2747
asbag57
(g78
g59
NtRp2748
(dp2749
g62
(dp2750
g89
g90
ssg71
g2739
sg64
(lp2751
S':'
asbag57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
sg71
g2739
sg64
(lp2755
g57
(g58
g59
NtRp2756
(dp2757
g62
(dp2758
g70
I3
ssg71
g2752
sg64
(lp2759
g1122
asbasbasbag57
(g73
g59
NtRp2760
(dp2761
g62
(dp2762
sg71
g2588
sg64
(lp2763
g57
(g78
g59
NtRp2764
(dp2765
g62
(dp2766
g82
g83
ssg71
g2760
sg64
(lp2767
S'HTTP_USER_AGENT'
p2768
asbag57
(g78
g59
NtRp2769
(dp2770
g62
(dp2771
g89
g90
ssg71
g2760
sg64
(lp2772
S':'
asbag57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
sg71
g2760
sg64
(lp2776
g57
(g58
g59
NtRp2777
(dp2778
g62
(dp2779
g70
I3
ssg71
g2773
sg64
(lp2780
g1144
asbasbasbag57
(g73
g59
NtRp2781
(dp2782
g62
(dp2783
sg71
g2588
sg64
(lp2784
g57
(g78
g59
NtRp2785
(dp2786
g62
(dp2787
g82
g83
ssg71
g2781
sg64
(lp2788
S'PATH_INFO'
p2789
asbag57
(g78
g59
NtRp2790
(dp2791
g62
(dp2792
g89
g90
ssg71
g2781
sg64
(lp2793
S':'
asbag57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
sg71
g2781
sg64
(lp2797
g57
(g58
g59
NtRp2798
(dp2799
g62
(dp2800
g70
I3
ssg71
g2794
sg64
(lp2801
g1298
asbasbasbag57
(g73
g59
NtRp2802
(dp2803
g62
(dp2804
sg71
g2588
sg64
(lp2805
g57
(g78
g59
NtRp2806
(dp2807
g62
(dp2808
g82
g83
ssg71
g2802
sg64
(lp2809
S'QUERY_STRING'
p2810
asbag57
(g78
g59
NtRp2811
(dp2812
g62
(dp2813
g89
g90
ssg71
g2802
sg64
(lp2814
S':'
asbag57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
sg71
g2802
sg64
(lp2818
g57
(g58
g59
NtRp2819
(dp2820
g62
(dp2821
g70
I3
ssg71
g2815
sg64
(lp2822
g1320
asbasbasbag57
(g73
g59
NtRp2823
(dp2824
g62
(dp2825
sg71
g2588
sg64
(lp2826
g57
(g78
g59
NtRp2827
(dp2828
g62
(dp2829
g82
g83
ssg71
g2823
sg64
(lp2830
S'REMOTE_ADDR'
p2831
asbag57
(g78
g59
NtRp2832
(dp2833
g62
(dp2834
g89
g90
ssg71
g2823
sg64
(lp2835
S':'
asbag57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
sg71
g2823
sg64
(lp2839
g57
(g58
g59
NtRp2840
(dp2841
g62
(dp2842
g70
I3
ssg71
g2836
sg64
(lp2843
g338
asbasbasbag57
(g73
g59
NtRp2844
(dp2845
g62
(dp2846
sg71
g2588
sg64
(lp2847
g57
(g78
g59
NtRp2848
(dp2849
g62
(dp2850
g82
g83
ssg71
g2844
sg64
(lp2851
S'REMOTE_PORT'
p2852
asbag57
(g78
g59
NtRp2853
(dp2854
g62
(dp2855
g89
g90
ssg71
g2844
sg64
(lp2856
S':'
asbag57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
sg71
g2844
sg64
(lp2860
g57
(g58
g59
NtRp2861
(dp2862
g62
(dp2863
g70
I3
ssg71
g2857
sg64
(lp2864
g1363
asbasbasbag57
(g73
g59
NtRp2865
(dp2866
g62
(dp2867
sg71
g2588
sg64
(lp2868
g57
(g78
g59
NtRp2869
(dp2870
g62
(dp2871
g82
g83
ssg71
g2865
sg64
(lp2872
S'REQUEST_METHOD'
p2873
asbag57
(g78
g59
NtRp2874
(dp2875
g62
(dp2876
g89
g90
ssg71
g2865
sg64
(lp2877
S':'
asbag57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
sg71
g2865
sg64
(lp2881
g57
(g58
g59
NtRp2882
(dp2883
g62
(dp2884
g70
I3
ssg71
g2878
sg64
(lp2885
g1385
asbasbasbag57
(g73
g59
NtRp2886
(dp2887
g62
(dp2888
sg71
g2588
sg64
(lp2889
g57
(g78
g59
NtRp2890
(dp2891
g62
(dp2892
g82
g83
ssg71
g2886
sg64
(lp2893
S'REQUEST_URI'
p2894
asbag57
(g78
g59
NtRp2895
(dp2896
g62
(dp2897
g89
g90
ssg71
g2886
sg64
(lp2898
S':'
asbag57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
sg71
g2886
sg64
(lp2902
g57
(g58
g59
NtRp2903
(dp2904
g62
(dp2905
g70
I3
ssg71
g2899
sg64
(lp2906
g1407
asbasbasbag57
(g73
g59
NtRp2907
(dp2908
g62
(dp2909
sg71
g2588
sg64
(lp2910
g57
(g78
g59
NtRp2911
(dp2912
g62
(dp2913
g82
g83
ssg71
g2907
sg64
(lp2914
S'SCRIPT_NAME'
p2915
asbag57
(g78
g59
NtRp2916
(dp2917
g62
(dp2918
g89
g90
ssg71
g2907
sg64
(lp2919
S':'
asbag57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
sg71
g2907
sg64
(lp2923
g57
(g58
g59
NtRp2924
(dp2925
g62
(dp2926
g70
I3
ssg71
g2920
sg64
(lp2927
S''
asbasbasbag57
(g73
g59
NtRp2928
(dp2929
g62
(dp2930
sg71
g2588
sg64
(lp2931
g57
(g78
g59
NtRp2932
(dp2933
g62
(dp2934
g82
g83
ssg71
g2928
sg64
(lp2935
S'SERVER_NAME'
p2936
asbag57
(g78
g59
NtRp2937
(dp2938
g62
(dp2939
g89
g90
ssg71
g2928
sg64
(lp2940
S':'
asbag57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
sg71
g2928
sg64
(lp2944
g57
(g58
g59
NtRp2945
(dp2946
g62
(dp2947
g70
I3
ssg71
g2941
sg64
(lp2948
g1450
asbasbasbag57
(g73
g59
NtRp2949
(dp2950
g62
(dp2951
sg71
g2588
sg64
(lp2952
g57
(g78
g59
NtRp2953
(dp2954
g62
(dp2955
g82
g83
ssg71
g2949
sg64
(lp2956
S'SERVER_PORT'
p2957
asbag57
(g78
g59
NtRp2958
(dp2959
g62
(dp2960
g89
g90
ssg71
g2949
sg64
(lp2961
S':'
asbag57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
sg71
g2949
sg64
(lp2965
g57
(g58
g59
NtRp2966
(dp2967
g62
(dp2968
g70
I3
ssg71
g2962
sg64
(lp2969
g1472
asbasbasbag57
(g73
g59
NtRp2970
(dp2971
g62
(dp2972
sg71
g2588
sg64
(lp2973
g57
(g78
g59
NtRp2974
(dp2975
g62
(dp2976
g82
g83
ssg71
g2970
sg64
(lp2977
S'SERVER_PROTOCOL'
p2978
asbag57
(g78
g59
NtRp2979
(dp2980
g62
(dp2981
g89
g90
ssg71
g2970
sg64
(lp2982
S':'
asbag57
(g78
g59
NtRp2983
(dp2984
g62
(dp2985
sg71
g2970
sg64
(lp2986
g57
(g58
g59
NtRp2987
(dp2988
g62
(dp2989
g70
I3
ssg71
g2983
sg64
(lp2990
g1494
asbasbasbag57
(g73
g59
NtRp2991
(dp2992
g62
(dp2993
sg71
g2588
sg64
(lp2994
g57
(g78
g59
NtRp2995
(dp2996
g62
(dp2997
g82
g83
ssg71
g2991
sg64
(lp2998
S'SERVER_SOFTWARE'
p2999
asbag57
(g78
g59
NtRp3000
(dp3001
g62
(dp3002
g89
g90
ssg71
g2991
sg64
(lp3003
S':'
asbag57
(g78
g59
NtRp3004
(dp3005
g62
(dp3006
sg71
g2991
sg64
(lp3007
g57
(g58
g59
NtRp3008
(dp3009
g62
(dp3010
g70
I3
ssg71
g3004
sg64
(lp3011
g1516
asbasbasbag57
(g73
g59
NtRp3012
(dp3013
g62
(dp3014
sg71
g2588
sg64
(lp3015
g57
(g78
g59
NtRp3016
(dp3017
g62
(dp3018
g82
g83
ssg71
g3012
sg64
(lp3019
S'wsgi.errors'
p3020
asbag57
(g78
g59
NtRp3021
(dp3022
g62
(dp3023
g89
g90
ssg71
g3012
sg64
(lp3024
S':'
asbag57
(g78
g59
NtRp3025
(dp3026
g62
(dp3027
sg71
g3012
sg64
(lp3028
g57
(g58
g59
NtRp3029
(dp3030
g62
(dp3031
g70
I3
ssg71
g3025
sg64
(lp3032
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p3033
asbasbasbag57
(g73
g59
NtRp3034
(dp3035
g62
(dp3036
sg71
g2588
sg64
(lp3037
g57
(g78
g59
NtRp3038
(dp3039
g62
(dp3040
g82
g83
ssg71
g3034
sg64
(lp3041
S'wsgi.file_wrapper'
p3042
asbag57
(g78
g59
NtRp3043
(dp3044
g62
(dp3045
g89
g90
ssg71
g3034
sg64
(lp3046
S':'
asbag57
(g78
g59
NtRp3047
(dp3048
g62
(dp3049
sg71
g3034
sg64
(lp3050
g57
(g58
g59
NtRp3051
(dp3052
g62
(dp3053
g70
I3
ssg71
g3047
sg64
(lp3054
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3055
asbasbasbag57
(g73
g59
NtRp3056
(dp3057
g62
(dp3058
sg71
g2588
sg64
(lp3059
g57
(g78
g59
NtRp3060
(dp3061
g62
(dp3062
g82
g83
ssg71
g3056
sg64
(lp3063
S'wsgi.input'
p3064
asbag57
(g78
g59
NtRp3065
(dp3066
g62
(dp3067
g89
g90
ssg71
g3056
sg64
(lp3068
S':'
asbag57
(g78
g59
NtRp3069
(dp3070
g62
(dp3071
sg71
g3056
sg64
(lp3072
g57
(g58
g59
NtRp3073
(dp3074
g62
(dp3075
g70
I3
ssg71
g3069
sg64
(lp3076
S'<cStringIO.StringO object at 0xaceb800>'
p3077
asbasbasbag57
(g73
g59
NtRp3078
(dp3079
g62
(dp3080
sg71
g2588
sg64
(lp3081
g57
(g78
g59
NtRp3082
(dp3083
g62
(dp3084
g82
g83
ssg71
g3078
sg64
(lp3085
S'wsgi.multiprocess'
p3086
asbag57
(g78
g59
NtRp3087
(dp3088
g62
(dp3089
g89
g90
ssg71
g3078
sg64
(lp3090
S':'
asbag57
(g78
g59
NtRp3091
(dp3092
g62
(dp3093
sg71
g3078
sg64
(lp3094
g57
(g58
g59
NtRp3095
(dp3096
g62
(dp3097
g70
I3
ssg71
g3091
sg64
(lp3098
g100
asbasbasbag57
(g73
g59
NtRp3099
(dp3100
g62
(dp3101
sg71
g2588
sg64
(lp3102
g57
(g78
g59
NtRp3103
(dp3104
g62
(dp3105
g82
g83
ssg71
g3099
sg64
(lp3106
S'wsgi.multithread'
p3107
asbag57
(g78
g59
NtRp3108
(dp3109
g62
(dp3110
g89
g90
ssg71
g3099
sg64
(lp3111
S':'
asbag57
(g78
g59
NtRp3112
(dp3113
g62
(dp3114
sg71
g3099
sg64
(lp3115
g57
(g58
g59
NtRp3116
(dp3117
g62
(dp3118
g70
I3
ssg71
g3112
sg64
(lp3119
g1733
asbasbasbag57
(g73
g59
NtRp3120
(dp3121
g62
(dp3122
sg71
g2588
sg64
(lp3123
g57
(g78
g59
NtRp3124
(dp3125
g62
(dp3126
g82
g83
ssg71
g3120
sg64
(lp3127
S'wsgi.run_once'
p3128
asbag57
(g78
g59
NtRp3129
(dp3130
g62
(dp3131
g89
g90
ssg71
g3120
sg64
(lp3132
S':'
asbag57
(g78
g59
NtRp3133
(dp3134
g62
(dp3135
sg71
g3120
sg64
(lp3136
g57
(g58
g59
NtRp3137
(dp3138
g62
(dp3139
g70
I3
ssg71
g3133
sg64
(lp3140
g100
asbasbasbag57
(g73
g59
NtRp3141
(dp3142
g62
(dp3143
sg71
g2588
sg64
(lp3144
g57
(g78
g59
NtRp3145
(dp3146
g62
(dp3147
g82
g83
ssg71
g3141
sg64
(lp3148
S'wsgi.url_scheme'
p3149
asbag57
(g78
g59
NtRp3150
(dp3151
g62
(dp3152
g89
g90
ssg71
g3141
sg64
(lp3153
S':'
asbag57
(g78
g59
NtRp3154
(dp3155
g62
(dp3156
sg71
g3141
sg64
(lp3157
g57
(g58
g59
NtRp3158
(dp3159
g62
(dp3160
g70
I3
ssg71
g3154
sg64
(lp3161
g1776
asbasbasbag57
(g73
g59
NtRp3162
(dp3163
g62
(dp3164
sg71
g2588
sg64
(lp3165
g57
(g78
g59
NtRp3166
(dp3167
g62
(dp3168
g82
g83
ssg71
g3162
sg64
(lp3169
S'wsgi.version'
p3170
asbag57
(g78
g59
NtRp3171
(dp3172
g62
(dp3173
g89
g90
ssg71
g3162
sg64
(lp3174
S':'
asbag57
(g78
g59
NtRp3175
(dp3176
g62
(dp3177
sg71
g3162
sg64
(lp3178
g57
(g58
g59
NtRp3179
(dp3180
g62
(dp3181
g70
I3
ssg71
g3175
sg64
(lp3182
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3183
(lp3184
(dp3185
S'file'
p3186
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3187
sS'dump'
p3188
(dp3189
S'environment'
p3190
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3191
sS'ccode'
p3192
S'<code object <module> at 0xafe3e968, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3193
ssS'lnum'
p3194
I212
sS'lines'
p3195
(dp3196
I207
S'    try:'
p3197
sI208
S'        if isinstance(code, types.CodeType):'
p3198
sI209
S'            ccode = code'
p3199
sI210
S'        else:'
p3200
sI211
S'            ccode = compile2(code, layer)'
p3201
sI212
S'        exec ccode in environment'
p3202
sI213
S'    except HTTP:'
p3203
sI214
S'        raise'
p3204
sI215
S'    except RestrictedError:'
p3205
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3206
ssS'call'
p3207
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3208
sS'func'
p3209
S'restricted'
p3210
sa(dp3211
g3186
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3212
sg3188
(dp3213
sg3194
I1126
sg3195
(dp3214
I1120
S'   form = SQLFORM(db.sample_files)'
p3215
sI1121
S'   form.vars.sample = sid'
p3216
sI1122
S'   return locals()'
p3217
sI1123
S''
sI1124
S''
sI1115
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3218
sI1116
S'   """ per sample . takes id of the sample as the input """'
p3219
sI1117
S'   sid = request.args(0)'
p3220
sI1118
S'   sample = db(db.sample.id == sid).select().first()'
p3221
sI1119
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3222
ssg3207
S'()'
p3223
sg3209
S'<module>'
p3224
sa(dp3225
g3186
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3226
sg3188
(dp3227
S'self'
p3228
S'undefined'
p3229
sS'f'
S'<function list_all_dev_projects>'
p3230
ssg3194
I193
sg3195
(dp3231
I192
S'        self._vars = None'
p3232
sI193
S'        self._caller = lambda f: f()'
p3233
sI194
S'        self._view_environment = None'
p3234
sI195
S'        self._custom_commit = None'
p3235
sI196
S'        self._custom_rollback = None'
p3236
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3237
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3238
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3239
sI191
S"        self.delimiters = ('{{', '}}')"
p3240
ssg3207
S'(f=<function list_all_dev_projects>)'
p3241
sg3209
S'<lambda>'
p3242
sa(dp3243
g3186
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3244
sg3188
(dp3245
S'global request'
p3246
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3247
sS'global router'
p3248
S'<function router>'
p3249
sS'request.args'
p3250
S"['project', 'experiment.project', '1', 'sample.e...urce.sample_name', '3', 'view', 'biosource', '2']"
p3251
ssg3194
I321
sg3195
(dp3252
I320
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3253
sI321
S'     \trouter(request.args)'
p3254
sI322
S"    s={'sample':lambda ids : redirect(URL('default', 'mapping_multiple', vars=dict(id=ids)))}"
p3255
sI323
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'],selectable = s)"
p3256
sI324
S'    return locals()'
p3257
sI325
S''
sI316
S'    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]'
p3258
sI317
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3259
sI318
S"    links={'sample':l1}"
p3260
sI319
S'#customized Views for certain forms using router'
p3261
ssg3207
S'()'
p3262
sg3209
S'list_all_dev_projects'
p3263
sasS'pyver'
p3264
S'Python 2.7.3: /usr/bin/python'
p3265
sS'session'
p3266
g57
(g58
g59
NtRp3267
(dp3268
g62
(dp3269
sg64
(lp3270
g57
(g66
g59
NtRp3271
(dp3272
g62
(dp3273
g70
I5
ssg71
Nsg64
(lp3274
g57
(g73
g59
NtRp3275
(dp3276
g62
(dp3277
sg71
g3271
sg64
(lp3278
g57
(g78
g59
NtRp3279
(dp3280
g62
(dp3281
g82
g83
ssg71
g3275
sg64
(lp3282
S'auth'
p3283
asbag57
(g78
g59
NtRp3284
(dp3285
g62
(dp3286
g89
g90
ssg71
g3275
sg64
(lp3287
S':'
asbag57
(g78
g59
NtRp3288
(dp3289
g62
(dp3290
sg71
g3275
sg64
(lp3291
g57
(g58
g59
NtRp3292
(dp3293
g62
(dp3294
g70
I5
ssg71
g3288
sg64
(lp3295
g57
(g66
g59
NtRp3296
(dp3297
g62
(dp3298
g70
I4
ssg71
Nsg64
(lp3299
g57
(g73
g59
NtRp3300
(dp3301
g62
(dp3302
sg71
g3296
sg64
(lp3303
g57
(g78
g59
NtRp3304
(dp3305
g62
(dp3306
g82
g83
ssg71
g3300
sg64
(lp3307
S'expiration'
p3308
asbag57
(g78
g59
NtRp3309
(dp3310
g62
(dp3311
g89
g90
ssg71
g3300
sg64
(lp3312
S':'
asbag57
(g78
g59
NtRp3313
(dp3314
g62
(dp3315
sg71
g3300
sg64
(lp3316
g57
(g58
g59
NtRp3317
(dp3318
g62
(dp3319
g70
I4
ssg71
g3313
sg64
(lp3320
S'2592000'
p3321
asbasbasbag57
(g73
g59
NtRp3322
(dp3323
g62
(dp3324
sg71
g3296
sg64
(lp3325
g57
(g78
g59
NtRp3326
(dp3327
g62
(dp3328
g82
g83
ssg71
g3322
sg64
(lp3329
S'hmac_key'
p3330
asbag57
(g78
g59
NtRp3331
(dp3332
g62
(dp3333
g89
g90
ssg71
g3322
sg64
(lp3334
S':'
asbag57
(g78
g59
NtRp3335
(dp3336
g62
(dp3337
sg71
g3322
sg64
(lp3338
g57
(g58
g59
NtRp3339
(dp3340
g62
(dp3341
g70
I4
ssg71
g3335
sg64
(lp3342
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3343
asbasbasbag57
(g73
g59
NtRp3344
(dp3345
g62
(dp3346
sg71
g3296
sg64
(lp3347
g57
(g78
g59
NtRp3348
(dp3349
g62
(dp3350
g82
g83
ssg71
g3344
sg64
(lp3351
S'last_visit'
p3352
asbag57
(g78
g59
NtRp3353
(dp3354
g62
(dp3355
g89
g90
ssg71
g3344
sg64
(lp3356
S':'
asbag57
(g78
g59
NtRp3357
(dp3358
g62
(dp3359
sg71
g3344
sg64
(lp3360
g57
(g58
g59
NtRp3361
(dp3362
g62
(dp3363
g70
I4
ssg71
g3357
sg64
(lp3364
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3365
asbasbasbag57
(g73
g59
NtRp3366
(dp3367
g62
(dp3368
sg71
g3296
sg64
(lp3369
g57
(g78
g59
NtRp3370
(dp3371
g62
(dp3372
g82
g83
ssg71
g3366
sg64
(lp3373
S'remember'
p3374
asbag57
(g78
g59
NtRp3375
(dp3376
g62
(dp3377
g89
g90
ssg71
g3366
sg64
(lp3378
S':'
asbag57
(g78
g59
NtRp3379
(dp3380
g62
(dp3381
sg71
g3366
sg64
(lp3382
g57
(g58
g59
NtRp3383
(dp3384
g62
(dp3385
g70
I4
ssg71
g3379
sg64
(lp3386
g1733
asbasbasbag57
(g73
g59
NtRp3387
(dp3388
g62
(dp3389
sg71
g3296
sg64
(lp3390
g57
(g78
g59
NtRp3391
(dp3392
g62
(dp3393
g82
g83
ssg71
g3387
sg64
(lp3394
S'user'
p3395
asbag57
(g78
g59
NtRp3396
(dp3397
g62
(dp3398
g89
g90
ssg71
g3387
sg64
(lp3399
S':'
asbag57
(g78
g59
NtRp3400
(dp3401
g62
(dp3402
sg71
g3387
sg64
(lp3403
g57
(g58
g59
NtRp3404
(dp3405
g62
(dp3406
g70
I4
ssg71
g3400
sg64
(lp3407
g57
(g66
g59
NtRp3408
(dp3409
g62
(dp3410
g70
I3
ssg71
Nsg64
(lp3411
g57
(g73
g59
NtRp3412
(dp3413
g62
(dp3414
sg71
g3408
sg64
(lp3415
g57
(g78
g59
NtRp3416
(dp3417
g62
(dp3418
g82
g83
ssg71
g3412
sg64
(lp3419
S'address'
p3420
asbag57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
g89
g90
ssg71
g3412
sg64
(lp3424
S':'
asbag57
(g78
g59
NtRp3425
(dp3426
g62
(dp3427
sg71
g3412
sg64
(lp3428
g57
(g58
g59
NtRp3429
(dp3430
g62
(dp3431
g70
I3
ssg71
g3425
sg64
(lp3432
S'a'
asbasbasbag57
(g73
g59
NtRp3433
(dp3434
g62
(dp3435
sg71
g3408
sg64
(lp3436
g57
(g78
g59
NtRp3437
(dp3438
g62
(dp3439
g82
g83
ssg71
g3433
sg64
(lp3440
S'affiliated_to'
p3441
asbag57
(g78
g59
NtRp3442
(dp3443
g62
(dp3444
g89
g90
ssg71
g3433
sg64
(lp3445
S':'
asbag57
(g78
g59
NtRp3446
(dp3447
g62
(dp3448
sg71
g3433
sg64
(lp3449
g57
(g58
g59
NtRp3450
(dp3451
g62
(dp3452
g70
I3
ssg71
g3446
sg64
(lp3453
S'a'
asbasbasbag57
(g73
g59
NtRp3454
(dp3455
g62
(dp3456
sg71
g3408
sg64
(lp3457
g57
(g78
g59
NtRp3458
(dp3459
g62
(dp3460
g82
g83
ssg71
g3454
sg64
(lp3461
S'city'
p3462
asbag57
(g78
g59
NtRp3463
(dp3464
g62
(dp3465
g89
g90
ssg71
g3454
sg64
(lp3466
S':'
asbag57
(g78
g59
NtRp3467
(dp3468
g62
(dp3469
sg71
g3454
sg64
(lp3470
g57
(g58
g59
NtRp3471
(dp3472
g62
(dp3473
g70
I3
ssg71
g3467
sg64
(lp3474
S'a'
asbasbasbag57
(g73
g59
NtRp3475
(dp3476
g62
(dp3477
sg71
g3408
sg64
(lp3478
g57
(g78
g59
NtRp3479
(dp3480
g62
(dp3481
g82
g83
ssg71
g3475
sg64
(lp3482
S'country'
p3483
asbag57
(g78
g59
NtRp3484
(dp3485
g62
(dp3486
g89
g90
ssg71
g3475
sg64
(lp3487
S':'
asbag57
(g78
g59
NtRp3488
(dp3489
g62
(dp3490
sg71
g3475
sg64
(lp3491
g57
(g58
g59
NtRp3492
(dp3493
g62
(dp3494
g70
I3
ssg71
g3488
sg64
(lp3495
S'India'
p3496
asbasbasbag57
(g73
g59
NtRp3497
(dp3498
g62
(dp3499
sg71
g3408
sg64
(lp3500
g57
(g78
g59
NtRp3501
(dp3502
g62
(dp3503
g82
g83
ssg71
g3497
sg64
(lp3504
S'email'
p3505
asbag57
(g78
g59
NtRp3506
(dp3507
g62
(dp3508
g89
g90
ssg71
g3497
sg64
(lp3509
S':'
asbag57
(g78
g59
NtRp3510
(dp3511
g62
(dp3512
sg71
g3497
sg64
(lp3513
g57
(g58
g59
NtRp3514
(dp3515
g62
(dp3516
g70
I3
ssg71
g3510
sg64
(lp3517
S'anil.iiith@gmail.com'
p3518
asbasbasbag57
(g73
g59
NtRp3519
(dp3520
g62
(dp3521
sg71
g3408
sg64
(lp3522
g57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
g82
g83
ssg71
g3519
sg64
(lp3526
S'first_name'
p3527
asbag57
(g78
g59
NtRp3528
(dp3529
g62
(dp3530
g89
g90
ssg71
g3519
sg64
(lp3531
S':'
asbag57
(g78
g59
NtRp3532
(dp3533
g62
(dp3534
sg71
g3519
sg64
(lp3535
g57
(g58
g59
NtRp3536
(dp3537
g62
(dp3538
g70
I3
ssg71
g3532
sg64
(lp3539
S'anil'
p3540
asbasbasbag57
(g73
g59
NtRp3541
(dp3542
g62
(dp3543
sg71
g3408
sg64
(lp3544
g57
(g78
g59
NtRp3545
(dp3546
g62
(dp3547
g82
g83
ssg71
g3541
sg64
(lp3548
S'id'
p3549
asbag57
(g78
g59
NtRp3550
(dp3551
g62
(dp3552
g89
g90
ssg71
g3541
sg64
(lp3553
S':'
asbag57
(g78
g59
NtRp3554
(dp3555
g62
(dp3556
sg71
g3541
sg64
(lp3557
g57
(g58
g59
NtRp3558
(dp3559
g62
(dp3560
g70
I3
ssg71
g3554
sg64
(lp3561
S'2'
asbasbasbag57
(g73
g59
NtRp3562
(dp3563
g62
(dp3564
sg71
g3408
sg64
(lp3565
g57
(g78
g59
NtRp3566
(dp3567
g62
(dp3568
g82
g83
ssg71
g3562
sg64
(lp3569
S'last_name'
p3570
asbag57
(g78
g59
NtRp3571
(dp3572
g62
(dp3573
g89
g90
ssg71
g3562
sg64
(lp3574
S':'
asbag57
(g78
g59
NtRp3575
(dp3576
g62
(dp3577
sg71
g3562
sg64
(lp3578
g57
(g58
g59
NtRp3579
(dp3580
g62
(dp3581
g70
I3
ssg71
g3575
sg64
(lp3582
S'n'
asbasbasbag57
(g73
g59
NtRp3583
(dp3584
g62
(dp3585
sg71
g3408
sg64
(lp3586
g57
(g78
g59
NtRp3587
(dp3588
g62
(dp3589
g82
g83
ssg71
g3583
sg64
(lp3590
S'mobile'
p3591
asbag57
(g78
g59
NtRp3592
(dp3593
g62
(dp3594
g89
g90
ssg71
g3583
sg64
(lp3595
S':'
asbag57
(g78
g59
NtRp3596
(dp3597
g62
(dp3598
sg71
g3583
sg64
(lp3599
g57
(g58
g59
NtRp3600
(dp3601
g62
(dp3602
g70
I3
ssg71
g3596
sg64
(lp3603
S'1233'
p3604
asbasbasbag57
(g73
g59
NtRp3605
(dp3606
g62
(dp3607
sg71
g3408
sg64
(lp3608
g57
(g78
g59
NtRp3609
(dp3610
g62
(dp3611
g82
g83
ssg71
g3605
sg64
(lp3612
S'phone'
p3613
asbag57
(g78
g59
NtRp3614
(dp3615
g62
(dp3616
g89
g90
ssg71
g3605
sg64
(lp3617
S':'
asbag57
(g78
g59
NtRp3618
(dp3619
g62
(dp3620
sg71
g3605
sg64
(lp3621
g57
(g58
g59
NtRp3622
(dp3623
g62
(dp3624
g70
I3
ssg71
g3618
sg64
(lp3625
S'123'
p3626
asbasbasbag57
(g73
g59
NtRp3627
(dp3628
g62
(dp3629
sg71
g3408
sg64
(lp3630
g57
(g78
g59
NtRp3631
(dp3632
g62
(dp3633
g82
g83
ssg71
g3627
sg64
(lp3634
S'position'
p3635
asbag57
(g78
g59
NtRp3636
(dp3637
g62
(dp3638
g89
g90
ssg71
g3627
sg64
(lp3639
S':'
asbag57
(g78
g59
NtRp3640
(dp3641
g62
(dp3642
sg71
g3627
sg64
(lp3643
g57
(g58
g59
NtRp3644
(dp3645
g62
(dp3646
g70
I3
ssg71
g3640
sg64
(lp3647
S'0'
asbasbasbag57
(g73
g59
NtRp3648
(dp3649
g62
(dp3650
sg71
g3408
sg64
(lp3651
g57
(g78
g59
NtRp3652
(dp3653
g62
(dp3654
g82
g83
ssg71
g3648
sg64
(lp3655
S'postal_code'
p3656
asbag57
(g78
g59
NtRp3657
(dp3658
g62
(dp3659
g89
g90
ssg71
g3648
sg64
(lp3660
S':'
asbag57
(g78
g59
NtRp3661
(dp3662
g62
(dp3663
sg71
g3648
sg64
(lp3664
g57
(g58
g59
NtRp3665
(dp3666
g62
(dp3667
g70
I3
ssg71
g3661
sg64
(lp3668
S'123'
p3669
asbasbasbag57
(g73
g59
NtRp3670
(dp3671
g62
(dp3672
sg71
g3408
sg64
(lp3673
g57
(g78
g59
NtRp3674
(dp3675
g62
(dp3676
g82
g83
ssg71
g3670
sg64
(lp3677
S'registration_at'
p3678
asbag57
(g78
g59
NtRp3679
(dp3680
g62
(dp3681
g89
g90
ssg71
g3670
sg64
(lp3682
S':'
asbag57
(g78
g59
NtRp3683
(dp3684
g62
(dp3685
sg71
g3670
sg64
(lp3686
g57
(g58
g59
NtRp3687
(dp3688
g62
(dp3689
g70
I3
ssg71
g3683
sg64
(lp3690
S'0'
asbasbasbag57
(g73
g59
NtRp3691
(dp3692
g62
(dp3693
sg71
g3408
sg64
(lp3694
g57
(g78
g59
NtRp3695
(dp3696
g62
(dp3697
g82
g83
ssg71
g3691
sg64
(lp3698
S'registration_id'
p3699
asbag57
(g78
g59
NtRp3700
(dp3701
g62
(dp3702
g89
g90
ssg71
g3691
sg64
(lp3703
S':'
asbag57
(g78
g59
NtRp3704
(dp3705
g62
(dp3706
sg71
g3691
sg64
(lp3707
g57
(g58
g59
NtRp3708
(dp3709
g62
(dp3710
g70
I3
ssg71
g3704
sg64
(lp3711
S''
asbasbasbag57
(g73
g59
NtRp3712
(dp3713
g62
(dp3714
sg71
g3408
sg64
(lp3715
g57
(g78
g59
NtRp3716
(dp3717
g62
(dp3718
g82
g83
ssg71
g3712
sg64
(lp3719
S'registration_key'
p3720
asbag57
(g78
g59
NtRp3721
(dp3722
g62
(dp3723
g89
g90
ssg71
g3712
sg64
(lp3724
S':'
asbag57
(g78
g59
NtRp3725
(dp3726
g62
(dp3727
sg71
g3712
sg64
(lp3728
g57
(g58
g59
NtRp3729
(dp3730
g62
(dp3731
g70
I3
ssg71
g3725
sg64
(lp3732
S''
asbasbasbag57
(g73
g59
NtRp3733
(dp3734
g62
(dp3735
sg71
g3408
sg64
(lp3736
g57
(g78
g59
NtRp3737
(dp3738
g62
(dp3739
g82
g83
ssg71
g3733
sg64
(lp3740
S'reset_password_key'
p3741
asbag57
(g78
g59
NtRp3742
(dp3743
g62
(dp3744
g89
g90
ssg71
g3733
sg64
(lp3745
S':'
asbag57
(g78
g59
NtRp3746
(dp3747
g62
(dp3748
sg71
g3733
sg64
(lp3749
g57
(g58
g59
NtRp3750
(dp3751
g62
(dp3752
g70
I3
ssg71
g3746
sg64
(lp3753
S''
asbasbasbag57
(g73
g59
NtRp3754
(dp3755
g62
(dp3756
sg71
g3408
sg64
(lp3757
g57
(g78
g59
NtRp3758
(dp3759
g62
(dp3760
g82
g83
ssg71
g3754
sg64
(lp3761
S'title'
p3762
asbag57
(g78
g59
NtRp3763
(dp3764
g62
(dp3765
g89
g90
ssg71
g3754
sg64
(lp3766
S':'
asbag57
(g78
g59
NtRp3767
(dp3768
g62
(dp3769
sg71
g3754
sg64
(lp3770
g57
(g58
g59
NtRp3771
(dp3772
g62
(dp3773
g70
I3
ssg71
g3767
sg64
(lp3774
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3775
(dp3776
g62
(dp3777
sg71
g3296
sg64
(lp3778
g57
(g78
g59
NtRp3779
(dp3780
g62
(dp3781
g82
g83
ssg71
g3775
sg64
(lp3782
S'user_groups'
p3783
asbag57
(g78
g59
NtRp3784
(dp3785
g62
(dp3786
g89
g90
ssg71
g3775
sg64
(lp3787
S':'
asbag57
(g78
g59
NtRp3788
(dp3789
g62
(dp3790
sg71
g3775
sg64
(lp3791
g57
(g58
g59
NtRp3792
(dp3793
g62
(dp3794
g70
I4
ssg71
g3788
sg64
(lp3795
g57
(g66
g59
NtRp3796
(dp3797
g62
(dp3798
g70
I3
ssg71
Nsg64
(lp3799
g57
(g73
g59
NtRp3800
(dp3801
g62
(dp3802
sg71
g3796
sg64
(lp3803
g57
(g78
g59
NtRp3804
(dp3805
g62
(dp3806
g82
g83
ssg71
g3800
sg64
(lp3807
S'9'
asbag57
(g78
g59
NtRp3808
(dp3809
g62
(dp3810
g89
g90
ssg71
g3800
sg64
(lp3811
S':'
asbag57
(g78
g59
NtRp3812
(dp3813
g62
(dp3814
sg71
g3800
sg64
(lp3815
g57
(g58
g59
NtRp3816
(dp3817
g62
(dp3818
g70
I3
ssg71
g3812
sg64
(lp3819
S'user_2'
p3820
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3821
(dp3822
g62
(dp3823
sg71
g3271
sg64
(lp3824
g57
(g78
g59
NtRp3825
(dp3826
g62
(dp3827
g82
g83
ssg71
g3821
sg64
(lp3828
S'flash'
p3829
asbag57
(g78
g59
NtRp3830
(dp3831
g62
(dp3832
g89
g90
ssg71
g3821
sg64
(lp3833
S':'
asbag57
(g78
g59
NtRp3834
(dp3835
g62
(dp3836
sg71
g3821
sg64
(lp3837
g57
(g58
g59
NtRp3838
(dp3839
g62
(dp3840
g70
I5
ssg71
g3834
sg64
(lp3841
S'None'
p3842
asbasbasbag57
(g73
g59
NtRp3843
(dp3844
g62
(dp3845
sg71
g3271
sg64
(lp3846
g57
(g78
g59
NtRp3847
(dp3848
g62
(dp3849
g82
g83
ssg71
g3843
sg64
(lp3850
S'last_orderby'
p3851
asbag57
(g78
g59
NtRp3852
(dp3853
g62
(dp3854
g89
g90
ssg71
g3843
sg64
(lp3855
S':'
asbag57
(g78
g59
NtRp3856
(dp3857
g62
(dp3858
sg71
g3843
sg64
(lp3859
g57
(g58
g59
NtRp3860
(dp3861
g62
(dp3862
g70
I5
ssg71
g3856
sg64
(lp3863
S'None'
p3864
asbasbasbag57
(g73
g59
NtRp3865
(dp3866
g62
(dp3867
sg71
g3271
sg64
(lp3868
g57
(g78
g59
NtRp3869
(dp3870
g62
(dp3871
g82
g83
ssg71
g3865
sg64
(lp3872
S'last_query'
p3873
asbag57
(g78
g59
NtRp3874
(dp3875
g62
(dp3876
g89
g90
ssg71
g3865
sg64
(lp3877
S':'
asbag57
(g78
g59
NtRp3878
(dp3879
g62
(dp3880
sg71
g3865
sg64
(lp3881
g57
(g58
g59
NtRp3882
(dp3883
g62
(dp3884
g70
I5
ssg71
g3878
sg64
(lp3885
S'db.project.id>0'
p3886
asbasbasbasbasbsS'etype'
p3887
S"<type 'exceptions.TypeError'>"
p3888
sS'date'
p3889
S'Sun Feb 24 23:34:57 2013'
p3890
sS'response'
p3891
g57
(g58
g59
NtRp3892
(dp3893
g62
(dp3894
sg64
(lp3895
g57
(g66
g59
NtRp3896
(dp3897
g62
(dp3898
g70
I5
ssg71
Nsg64
(lp3899
g57
(g73
g59
NtRp3900
(dp3901
g62
(dp3902
sg71
g3896
sg64
(lp3903
g57
(g78
g59
NtRp3904
(dp3905
g62
(dp3906
g82
g83
ssg71
g3900
sg64
(lp3907
g281
asbag57
(g78
g59
NtRp3908
(dp3909
g62
(dp3910
g89
g90
ssg71
g3900
sg64
(lp3911
S':'
asbag57
(g78
g59
NtRp3912
(dp3913
g62
(dp3914
sg71
g3900
sg64
(lp3915
g57
(g58
g59
NtRp3916
(dp3917
g62
(dp3918
g70
I5
ssg71
g3912
sg64
(lp3919
S'<cStringIO.StringO object at 0xaa9ae20>'
p3920
asbasbasbag57
(g73
g59
NtRp3921
(dp3922
g62
(dp3923
sg71
g3896
sg64
(lp3924
g57
(g78
g59
NtRp3925
(dp3926
g62
(dp3927
g82
g83
ssg71
g3921
sg64
(lp3928
g369
asbag57
(g78
g59
NtRp3929
(dp3930
g62
(dp3931
g89
g90
ssg71
g3921
sg64
(lp3932
S':'
asbag57
(g78
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3921
sg64
(lp3936
g57
(g58
g59
NtRp3937
(dp3938
g62
(dp3939
g70
I5
ssg71
g3933
sg64
(lp3940
g57
(g66
g59
NtRp3941
(dp3942
g62
(dp3943
g70
I4
ssg71
Nsg64
(lp3944
g57
(g73
g59
NtRp3945
(dp3946
g62
(dp3947
sg71
g3941
sg64
(lp3948
g57
(g78
g59
NtRp3949
(dp3950
g62
(dp3951
g82
g83
ssg71
g3945
sg64
(lp3952
S'session_id_dev_bootstrap_ch'
p3953
asbag57
(g78
g59
NtRp3954
(dp3955
g62
(dp3956
g89
g90
ssg71
g3945
sg64
(lp3957
S':'
asbag57
(g78
g59
NtRp3958
(dp3959
g62
(dp3960
sg71
g3945
sg64
(lp3961
g57
(g58
g59
NtRp3962
(dp3963
g62
(dp3964
g70
I4
ssg71
g3958
sg64
(lp3965
g601
ag57
(g66
g59
NtRp3966
(dp3967
g62
(dp3968
g70
I3
ssg71
Nsg64
(lp3969
g57
(g73
g59
NtRp3970
(dp3971
g62
(dp3972
sg71
g3966
sg64
(lp3973
g57
(g78
g59
NtRp3974
(dp3975
g62
(dp3976
g82
g83
ssg71
g3970
sg64
(lp3977
g420
asbag57
(g78
g59
NtRp3978
(dp3979
g62
(dp3980
g89
g90
ssg71
g3970
sg64
(lp3981
S':'
asbag57
(g78
g59
NtRp3982
(dp3983
g62
(dp3984
sg71
g3970
sg64
(lp3985
g57
(g58
g59
NtRp3986
(dp3987
g62
(dp3988
g70
I3
ssg71
g3982
sg64
(lp3989
S''
asbasbasbag57
(g73
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3966
sg64
(lp3993
g57
(g78
g59
NtRp3994
(dp3995
g62
(dp3996
g82
g83
ssg71
g3990
sg64
(lp3997
g441
asbag57
(g78
g59
NtRp3998
(dp3999
g62
(dp4000
g89
g90
ssg71
g3990
sg64
(lp4001
S':'
asbag57
(g78
g59
NtRp4002
(dp4003
g62
(dp4004
sg71
g3990
sg64
(lp4005
g57
(g58
g59
NtRp4006
(dp4007
g62
(dp4008
g70
I3
ssg71
g4002
sg64
(lp4009
S''
asbasbasbag57
(g73
g59
NtRp4010
(dp4011
g62
(dp4012
sg71
g3966
sg64
(lp4013
g57
(g78
g59
NtRp4014
(dp4015
g62
(dp4016
g82
g83
ssg71
g4010
sg64
(lp4017
g462
asbag57
(g78
g59
NtRp4018
(dp4019
g62
(dp4020
g89
g90
ssg71
g4010
sg64
(lp4021
S':'
asbag57
(g78
g59
NtRp4022
(dp4023
g62
(dp4024
sg71
g4010
sg64
(lp4025
g57
(g58
g59
NtRp4026
(dp4027
g62
(dp4028
g70
I3
ssg71
g4022
sg64
(lp4029
S'2592000'
p4030
asbasbasbag57
(g73
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g3966
sg64
(lp4034
g57
(g78
g59
NtRp4035
(dp4036
g62
(dp4037
g82
g83
ssg71
g4031
sg64
(lp4038
g483
asbag57
(g78
g59
NtRp4039
(dp4040
g62
(dp4041
g89
g90
ssg71
g4031
sg64
(lp4042
S':'
asbag57
(g78
g59
NtRp4043
(dp4044
g62
(dp4045
sg71
g4031
sg64
(lp4046
g57
(g58
g59
NtRp4047
(dp4048
g62
(dp4049
g70
I3
ssg71
g4043
sg64
(lp4050
S''
asbasbasbag57
(g73
g59
NtRp4051
(dp4052
g62
(dp4053
sg71
g3966
sg64
(lp4054
g57
(g78
g59
NtRp4055
(dp4056
g62
(dp4057
g82
g83
ssg71
g4051
sg64
(lp4058
g504
asbag57
(g78
g59
NtRp4059
(dp4060
g62
(dp4061
g89
g90
ssg71
g4051
sg64
(lp4062
S':'
asbag57
(g78
g59
NtRp4063
(dp4064
g62
(dp4065
sg71
g4051
sg64
(lp4066
g57
(g58
g59
NtRp4067
(dp4068
g62
(dp4069
g70
I3
ssg71
g4063
sg64
(lp4070
S''
asbasbasbag57
(g73
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g3966
sg64
(lp4074
g57
(g78
g59
NtRp4075
(dp4076
g62
(dp4077
g82
g83
ssg71
g4071
sg64
(lp4078
g525
asbag57
(g78
g59
NtRp4079
(dp4080
g62
(dp4081
g89
g90
ssg71
g4071
sg64
(lp4082
S':'
asbag57
(g78
g59
NtRp4083
(dp4084
g62
(dp4085
sg71
g4071
sg64
(lp4086
g57
(g58
g59
NtRp4087
(dp4088
g62
(dp4089
g70
I3
ssg71
g4083
sg64
(lp4090
S'/'
asbasbasbag57
(g73
g59
NtRp4091
(dp4092
g62
(dp4093
sg71
g3966
sg64
(lp4094
g57
(g78
g59
NtRp4095
(dp4096
g62
(dp4097
g82
g83
ssg71
g4091
sg64
(lp4098
g546
asbag57
(g78
g59
NtRp4099
(dp4100
g62
(dp4101
g89
g90
ssg71
g4091
sg64
(lp4102
S':'
asbag57
(g78
g59
NtRp4103
(dp4104
g62
(dp4105
sg71
g4091
sg64
(lp4106
g57
(g58
g59
NtRp4107
(dp4108
g62
(dp4109
g70
I3
ssg71
g4103
sg64
(lp4110
S''
asbasbasbag57
(g73
g59
NtRp4111
(dp4112
g62
(dp4113
sg71
g3966
sg64
(lp4114
g57
(g78
g59
NtRp4115
(dp4116
g62
(dp4117
g82
g83
ssg71
g4111
sg64
(lp4118
g567
asbag57
(g78
g59
NtRp4119
(dp4120
g62
(dp4121
g89
g90
ssg71
g4111
sg64
(lp4122
S':'
asbag57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
sg71
g4111
sg64
(lp4126
g57
(g58
g59
NtRp4127
(dp4128
g62
(dp4129
g70
I3
ssg71
g4123
sg64
(lp4130
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4131
(dp4132
g62
(dp4133
sg71
g3896
sg64
(lp4134
g57
(g78
g59
NtRp4135
(dp4136
g62
(dp4137
g82
g83
ssg71
g4131
sg64
(lp4138
S'delimiters'
p4139
asbag57
(g78
g59
NtRp4140
(dp4141
g62
(dp4142
g89
g90
ssg71
g4131
sg64
(lp4143
S':'
asbag57
(g78
g59
NtRp4144
(dp4145
g62
(dp4146
sg71
g4131
sg64
(lp4147
g57
(g58
g59
NtRp4148
(dp4149
g62
(dp4150
g70
I5
ssg71
g4144
sg64
(lp4151
g57
(g66
g59
NtRp4152
(dp4153
g62
(dp4154
g70
I4
ssg71
Nsg64
(lp4155
g57
(g73
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4152
sg64
(lp4159
g57
(g78
g59
NtRp4160
(dp4161
g62
(dp4162
sg71
g4156
sg64
(lp4163
g57
(g58
g59
NtRp4164
(dp4165
g62
(dp4166
g70
I4
ssg71
g4160
sg64
(lp4167
S'{{'
p4168
asbasbasbag57
(g73
g59
NtRp4169
(dp4170
g62
(dp4171
sg71
g4152
sg64
(lp4172
g57
(g78
g59
NtRp4173
(dp4174
g62
(dp4175
sg71
g4169
sg64
(lp4176
g57
(g58
g59
NtRp4177
(dp4178
g62
(dp4179
g70
I4
ssg71
g4173
sg64
(lp4180
S'}}'
p4181
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4182
(dp4183
g62
(dp4184
sg71
g3896
sg64
(lp4185
g57
(g78
g59
NtRp4186
(dp4187
g62
(dp4188
g82
g83
ssg71
g4182
sg64
(lp4189
S'files'
p4190
asbag57
(g78
g59
NtRp4191
(dp4192
g62
(dp4193
g89
g90
ssg71
g4182
sg64
(lp4194
S':'
asbag57
(g78
g59
NtRp4195
(dp4196
g62
(dp4197
sg71
g4182
sg64
(lp4198
g57
(g58
g59
NtRp4199
(dp4200
g62
(dp4201
g70
I5
ssg71
g4195
sg64
(lp4202
g57
(g66
g59
NtRp4203
(dp4204
g62
(dp4205
g70
I4
ssg71
Nsg64
(lp4206
g57
(g73
g59
NtRp4207
(dp4208
g62
(dp4209
sg71
g4203
sg64
(lp4210
g57
(g78
g59
NtRp4211
(dp4212
g62
(dp4213
sg71
g4207
sg64
(lp4214
g57
(g58
g59
NtRp4215
(dp4216
g62
(dp4217
g70
I4
ssg71
g4211
sg64
(lp4218
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4219
asbasbasbag57
(g73
g59
NtRp4220
(dp4221
g62
(dp4222
sg71
g4203
sg64
(lp4223
g57
(g78
g59
NtRp4224
(dp4225
g62
(dp4226
sg71
g4220
sg64
(lp4227
g57
(g58
g59
NtRp4228
(dp4229
g62
(dp4230
g70
I4
ssg71
g4224
sg64
(lp4231
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4232
asbasbasbag57
(g73
g59
NtRp4233
(dp4234
g62
(dp4235
sg71
g4203
sg64
(lp4236
g57
(g78
g59
NtRp4237
(dp4238
g62
(dp4239
sg71
g4233
sg64
(lp4240
g57
(g58
g59
NtRp4241
(dp4242
g62
(dp4243
g70
I4
ssg71
g4237
sg64
(lp4244
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4245
asbasbasbag57
(g73
g59
NtRp4246
(dp4247
g62
(dp4248
sg71
g4203
sg64
(lp4249
g57
(g78
g59
NtRp4250
(dp4251
g62
(dp4252
sg71
g4246
sg64
(lp4253
g57
(g58
g59
NtRp4254
(dp4255
g62
(dp4256
g70
I4
ssg71
g4250
sg64
(lp4257
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4258
asbasbasbag57
(g73
g59
NtRp4259
(dp4260
g62
(dp4261
sg71
g4203
sg64
(lp4262
g57
(g78
g59
NtRp4263
(dp4264
g62
(dp4265
sg71
g4259
sg64
(lp4266
g57
(g58
g59
NtRp4267
(dp4268
g62
(dp4269
g70
I4
ssg71
g4263
sg64
(lp4270
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4271
asbasbasbag57
(g73
g59
NtRp4272
(dp4273
g62
(dp4274
sg71
g4203
sg64
(lp4275
g57
(g78
g59
NtRp4276
(dp4277
g62
(dp4278
sg71
g4272
sg64
(lp4279
g57
(g58
g59
NtRp4280
(dp4281
g62
(dp4282
g70
I4
ssg71
g4276
sg64
(lp4283
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4284
asbasbasbag57
(g73
g59
NtRp4285
(dp4286
g62
(dp4287
sg71
g4203
sg64
(lp4288
g57
(g78
g59
NtRp4289
(dp4290
g62
(dp4291
sg71
g4285
sg64
(lp4292
g57
(g58
g59
NtRp4293
(dp4294
g62
(dp4295
g70
I4
ssg71
g4289
sg64
(lp4296
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4297
asbasbasbag57
(g73
g59
NtRp4298
(dp4299
g62
(dp4300
sg71
g4203
sg64
(lp4301
g57
(g78
g59
NtRp4302
(dp4303
g62
(dp4304
sg71
g4298
sg64
(lp4305
g57
(g58
g59
NtRp4306
(dp4307
g62
(dp4308
g70
I4
ssg71
g4302
sg64
(lp4309
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4310
asbasbasbag57
(g73
g59
NtRp4311
(dp4312
g62
(dp4313
sg71
g4203
sg64
(lp4314
g57
(g78
g59
NtRp4315
(dp4316
g62
(dp4317
sg71
g4311
sg64
(lp4318
g57
(g58
g59
NtRp4319
(dp4320
g62
(dp4321
g70
I4
ssg71
g4315
sg64
(lp4322
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4323
asbasbasbag57
(g73
g59
NtRp4324
(dp4325
g62
(dp4326
sg71
g4203
sg64
(lp4327
g57
(g78
g59
NtRp4328
(dp4329
g62
(dp4330
sg71
g4324
sg64
(lp4331
g57
(g58
g59
NtRp4332
(dp4333
g62
(dp4334
g70
I4
ssg71
g4328
sg64
(lp4335
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4336
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4337
(dp4338
g62
(dp4339
sg71
g3896
sg64
(lp4340
g57
(g78
g59
NtRp4341
(dp4342
g62
(dp4343
g82
g83
ssg71
g4337
sg64
(lp4344
S'flash'
p4345
asbag57
(g78
g59
NtRp4346
(dp4347
g62
(dp4348
g89
g90
ssg71
g4337
sg64
(lp4349
S':'
asbag57
(g78
g59
NtRp4350
(dp4351
g62
(dp4352
sg71
g4337
sg64
(lp4353
g57
(g58
g59
NtRp4354
(dp4355
g62
(dp4356
g70
I5
ssg71
g4350
sg64
(lp4357
S''
asbasbasbag57
(g73
g59
NtRp4358
(dp4359
g62
(dp4360
sg71
g3896
sg64
(lp4361
g57
(g78
g59
NtRp4362
(dp4363
g62
(dp4364
g82
g83
ssg71
g4358
sg64
(lp4365
S'generic_patterns'
p4366
asbag57
(g78
g59
NtRp4367
(dp4368
g62
(dp4369
g89
g90
ssg71
g4358
sg64
(lp4370
S':'
asbag57
(g78
g59
NtRp4371
(dp4372
g62
(dp4373
sg71
g4358
sg64
(lp4374
g57
(g58
g59
NtRp4375
(dp4376
g62
(dp4377
g70
I5
ssg71
g4371
sg64
(lp4378
g57
(g66
g59
NtRp4379
(dp4380
g62
(dp4381
g70
I4
ssg71
Nsg64
(lp4382
g57
(g73
g59
NtRp4383
(dp4384
g62
(dp4385
sg71
g4379
sg64
(lp4386
g57
(g78
g59
NtRp4387
(dp4388
g62
(dp4389
sg71
g4383
sg64
(lp4390
g57
(g58
g59
NtRp4391
(dp4392
g62
(dp4393
g70
I4
ssg71
g4387
sg64
(lp4394
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4395
(dp4396
g62
(dp4397
sg71
g3896
sg64
(lp4398
g57
(g78
g59
NtRp4399
(dp4400
g62
(dp4401
g82
g83
ssg71
g4395
sg64
(lp4402
S'google_analytics_id'
p4403
asbag57
(g78
g59
NtRp4404
(dp4405
g62
(dp4406
g89
g90
ssg71
g4395
sg64
(lp4407
S':'
asbag57
(g78
g59
NtRp4408
(dp4409
g62
(dp4410
sg71
g4395
sg64
(lp4411
g57
(g58
g59
NtRp4412
(dp4413
g62
(dp4414
g70
I5
ssg71
g4408
sg64
(lp4415
S'None'
p4416
asbasbasbag57
(g73
g59
NtRp4417
(dp4418
g62
(dp4419
sg71
g3896
sg64
(lp4420
g57
(g78
g59
NtRp4421
(dp4422
g62
(dp4423
g82
g83
ssg71
g4417
sg64
(lp4424
S'headers'
p4425
asbag57
(g78
g59
NtRp4426
(dp4427
g62
(dp4428
g89
g90
ssg71
g4417
sg64
(lp4429
S':'
asbag57
(g78
g59
NtRp4430
(dp4431
g62
(dp4432
sg71
g4417
sg64
(lp4433
g57
(g58
g59
NtRp4434
(dp4435
g62
(dp4436
g70
I5
ssg71
g4430
sg64
(lp4437
g57
(g66
g59
NtRp4438
(dp4439
g62
(dp4440
g70
I4
ssg71
Nsg64
(lp4441
g57
(g73
g59
NtRp4442
(dp4443
g62
(dp4444
sg71
g4438
sg64
(lp4445
g57
(g78
g59
NtRp4446
(dp4447
g62
(dp4448
g82
g83
ssg71
g4442
sg64
(lp4449
S'X-Powered-By'
p4450
asbag57
(g78
g59
NtRp4451
(dp4452
g62
(dp4453
g89
g90
ssg71
g4442
sg64
(lp4454
S':'
asbag57
(g78
g59
NtRp4455
(dp4456
g62
(dp4457
sg71
g4442
sg64
(lp4458
g57
(g58
g59
NtRp4459
(dp4460
g62
(dp4461
g70
I4
ssg71
g4455
sg64
(lp4462
S'web2py'
p4463
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4464
(dp4465
g62
(dp4466
sg71
g3896
sg64
(lp4467
g57
(g78
g59
NtRp4468
(dp4469
g62
(dp4470
g82
g83
ssg71
g4464
sg64
(lp4471
S'menu'
p4472
asbag57
(g78
g59
NtRp4473
(dp4474
g62
(dp4475
g89
g90
ssg71
g4464
sg64
(lp4476
S':'
asbag57
(g78
g59
NtRp4477
(dp4478
g62
(dp4479
sg71
g4464
sg64
(lp4480
g57
(g58
g59
NtRp4481
(dp4482
g62
(dp4483
g70
I5
ssg71
g4477
sg64
(lp4484
g57
(g66
g59
NtRp4485
(dp4486
g62
(dp4487
g70
I4
ssg71
Nsg64
(lp4488
g57
(g73
g59
NtRp4489
(dp4490
g62
(dp4491
sg71
g4485
sg64
(lp4492
g57
(g78
g59
NtRp4493
(dp4494
g62
(dp4495
sg71
g4489
sg64
(lp4496
g57
(g58
g59
NtRp4497
(dp4498
g62
(dp4499
g70
I4
ssg71
g4493
sg64
(lp4500
g57
(g66
g59
NtRp4501
(dp4502
g62
(dp4503
g70
I3
ssg71
Nsg64
(lp4504
g57
(g73
g59
NtRp4505
(dp4506
g62
(dp4507
sg71
g4501
sg64
(lp4508
g57
(g78
g59
NtRp4509
(dp4510
g62
(dp4511
sg71
g4505
sg64
(lp4512
g57
(g58
g59
NtRp4513
(dp4514
g62
(dp4515
g70
I3
ssg71
g4509
sg64
(lp4516
cgluon.languages
lazyT_unpickle
p4517
(S't\x04\x00\x00\x00Home'
tRp4518
asbasbasbag57
(g73
g59
NtRp4519
(dp4520
g62
(dp4521
sg71
g4501
sg64
(lp4522
g57
(g78
g59
NtRp4523
(dp4524
g62
(dp4525
sg71
g4519
sg64
(lp4526
g57
(g58
g59
NtRp4527
(dp4528
g62
(dp4529
g70
I3
ssg71
g4523
sg64
(lp4530
g100
asbasbasbag57
(g73
g59
NtRp4531
(dp4532
g62
(dp4533
sg71
g4501
sg64
(lp4534
g57
(g78
g59
NtRp4535
(dp4536
g62
(dp4537
sg71
g4531
sg64
(lp4538
g57
(g58
g59
NtRp4539
(dp4540
g62
(dp4541
g70
I3
ssg71
g4535
sg64
(lp4542
S'/DEV_bootstrap_ch/default/list_all_projects'
p4543
asbasbasbag57
(g73
g59
NtRp4544
(dp4545
g62
(dp4546
sg71
g4501
sg64
(lp4547
g57
(g78
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g4544
sg64
(lp4551
g57
(g58
g59
NtRp4552
(dp4553
g62
(dp4554
g70
I3
ssg71
g4548
sg64
(lp4555
g57
(g66
g59
NtRp4556
(dp4557
g62
(dp4558
g70
I2
ssg71
Nsg64
(lp4559
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4560
(dp4561
g62
(dp4562
sg71
g3896
sg64
(lp4563
g57
(g78
g59
NtRp4564
(dp4565
g62
(dp4566
g82
g83
ssg71
g4560
sg64
(lp4567
S'meta'
p4568
asbag57
(g78
g59
NtRp4569
(dp4570
g62
(dp4571
g89
g90
ssg71
g4560
sg64
(lp4572
S':'
asbag57
(g78
g59
NtRp4573
(dp4574
g62
(dp4575
sg71
g4560
sg64
(lp4576
g57
(g58
g59
NtRp4577
(dp4578
g62
(dp4579
g70
I5
ssg71
g4573
sg64
(lp4580
g57
(g66
g59
NtRp4581
(dp4582
g62
(dp4583
g70
I4
ssg71
Nsg64
(lp4584
g57
(g73
g59
NtRp4585
(dp4586
g62
(dp4587
sg71
g4581
sg64
(lp4588
g57
(g78
g59
NtRp4589
(dp4590
g62
(dp4591
g82
g83
ssg71
g4585
sg64
(lp4592
S'author'
p4593
asbag57
(g78
g59
NtRp4594
(dp4595
g62
(dp4596
g89
g90
ssg71
g4585
sg64
(lp4597
S':'
asbag57
(g78
g59
NtRp4598
(dp4599
g62
(dp4600
sg71
g4585
sg64
(lp4601
g57
(g58
g59
NtRp4602
(dp4603
g62
(dp4604
g70
I4
ssg71
g4598
sg64
(lp4605
S'Vikram Pudi <vikram@iiit.ac.in>'
p4606
asbasbasbag57
(g73
g59
NtRp4607
(dp4608
g62
(dp4609
sg71
g4581
sg64
(lp4610
g57
(g78
g59
NtRp4611
(dp4612
g62
(dp4613
g82
g83
ssg71
g4607
sg64
(lp4614
S'copyright'
p4615
asbag57
(g78
g59
NtRp4616
(dp4617
g62
(dp4618
g89
g90
ssg71
g4607
sg64
(lp4619
S':'
asbag57
(g78
g59
NtRp4620
(dp4621
g62
(dp4622
sg71
g4607
sg64
(lp4623
g57
(g58
g59
NtRp4624
(dp4625
g62
(dp4626
g70
I4
ssg71
g4620
sg64
(lp4627
S'Copyright 2011'
p4628
asbasbasbag57
(g73
g59
NtRp4629
(dp4630
g62
(dp4631
sg71
g4581
sg64
(lp4632
g57
(g78
g59
NtRp4633
(dp4634
g62
(dp4635
g82
g83
ssg71
g4629
sg64
(lp4636
S'description'
p4637
asbag57
(g78
g59
NtRp4638
(dp4639
g62
(dp4640
g89
g90
ssg71
g4629
sg64
(lp4641
S':'
asbag57
(g78
g59
NtRp4642
(dp4643
g62
(dp4644
sg71
g4629
sg64
(lp4645
g57
(g58
g59
NtRp4646
(dp4647
g62
(dp4648
g70
I4
ssg71
g4642
sg64
(lp4649
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4650
asbasbasbag57
(g73
g59
NtRp4651
(dp4652
g62
(dp4653
sg71
g4581
sg64
(lp4654
g57
(g78
g59
NtRp4655
(dp4656
g62
(dp4657
g82
g83
ssg71
g4651
sg64
(lp4658
S'generator'
p4659
asbag57
(g78
g59
NtRp4660
(dp4661
g62
(dp4662
g89
g90
ssg71
g4651
sg64
(lp4663
S':'
asbag57
(g78
g59
NtRp4664
(dp4665
g62
(dp4666
sg71
g4651
sg64
(lp4667
g57
(g58
g59
NtRp4668
(dp4669
g62
(dp4670
g70
I4
ssg71
g4664
sg64
(lp4671
S'Web2py Web Framework'
p4672
asbasbasbag57
(g73
g59
NtRp4673
(dp4674
g62
(dp4675
sg71
g4581
sg64
(lp4676
g57
(g78
g59
NtRp4677
(dp4678
g62
(dp4679
g82
g83
ssg71
g4673
sg64
(lp4680
S'keywords'
p4681
asbag57
(g78
g59
NtRp4682
(dp4683
g62
(dp4684
g89
g90
ssg71
g4673
sg64
(lp4685
S':'
asbag57
(g78
g59
NtRp4686
(dp4687
g62
(dp4688
sg71
g4673
sg64
(lp4689
g57
(g58
g59
NtRp4690
(dp4691
g62
(dp4692
g70
I4
ssg71
g4686
sg64
(lp4693
S'web2py, python, metabolome, metabolomics'
p4694
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4695
(dp4696
g62
(dp4697
sg71
g3896
sg64
(lp4698
g57
(g78
g59
NtRp4699
(dp4700
g62
(dp4701
g82
g83
ssg71
g4695
sg64
(lp4702
S'models_to_run'
p4703
asbag57
(g78
g59
NtRp4704
(dp4705
g62
(dp4706
g89
g90
ssg71
g4695
sg64
(lp4707
S':'
asbag57
(g78
g59
NtRp4708
(dp4709
g62
(dp4710
sg71
g4695
sg64
(lp4711
g57
(g58
g59
NtRp4712
(dp4713
g62
(dp4714
g70
I5
ssg71
g4708
sg64
(lp4715
g57
(g66
g59
NtRp4716
(dp4717
g62
(dp4718
g70
I4
ssg71
Nsg64
(lp4719
g57
(g73
g59
NtRp4720
(dp4721
g62
(dp4722
sg71
g4716
sg64
(lp4723
g57
(g78
g59
NtRp4724
(dp4725
g62
(dp4726
sg71
g4720
sg64
(lp4727
g57
(g58
g59
NtRp4728
(dp4729
g62
(dp4730
g70
I4
ssg71
g4724
sg64
(lp4731
S'^\\w+\\.py$'
p4732
asbasbasbag57
(g73
g59
NtRp4733
(dp4734
g62
(dp4735
sg71
g4716
sg64
(lp4736
g57
(g78
g59
NtRp4737
(dp4738
g62
(dp4739
sg71
g4733
sg64
(lp4740
g57
(g58
g59
NtRp4741
(dp4742
g62
(dp4743
g70
I4
ssg71
g4737
sg64
(lp4744
S'^default/\\w+\\.py$'
p4745
asbasbasbag57
(g73
g59
NtRp4746
(dp4747
g62
(dp4748
sg71
g4716
sg64
(lp4749
g57
(g78
g59
NtRp4750
(dp4751
g62
(dp4752
sg71
g4746
sg64
(lp4753
g57
(g58
g59
NtRp4754
(dp4755
g62
(dp4756
g70
I4
ssg71
g4750
sg64
(lp4757
S'^default/list_all_dev_projects/\\w+\\.py$'
p4758
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4759
(dp4760
g62
(dp4761
sg71
g3896
sg64
(lp4762
g57
(g78
g59
NtRp4763
(dp4764
g62
(dp4765
g82
g83
ssg71
g4759
sg64
(lp4766
S'postprocessing'
p4767
asbag57
(g78
g59
NtRp4768
(dp4769
g62
(dp4770
g89
g90
ssg71
g4759
sg64
(lp4771
S':'
asbag57
(g78
g59
NtRp4772
(dp4773
g62
(dp4774
sg71
g4759
sg64
(lp4775
g57
(g58
g59
NtRp4776
(dp4777
g62
(dp4778
g70
I5
ssg71
g4772
sg64
(lp4779
g57
(g66
g59
NtRp4780
(dp4781
g62
(dp4782
g70
I4
ssg71
Nsg64
(lp4783
sbasbasbasbag57
(g73
g59
NtRp4784
(dp4785
g62
(dp4786
sg71
g3896
sg64
(lp4787
g57
(g78
g59
NtRp4788
(dp4789
g62
(dp4790
g82
g83
ssg71
g4784
sg64
(lp4791
S'session_cookie_expires'
p4792
asbag57
(g78
g59
NtRp4793
(dp4794
g62
(dp4795
g89
g90
ssg71
g4784
sg64
(lp4796
S':'
asbag57
(g78
g59
NtRp4797
(dp4798
g62
(dp4799
sg71
g4784
sg64
(lp4800
g57
(g58
g59
NtRp4801
(dp4802
g62
(dp4803
g70
I5
ssg71
g4797
sg64
(lp4804
S'None'
p4805
asbasbasbag57
(g73
g59
NtRp4806
(dp4807
g62
(dp4808
sg71
g3896
sg64
(lp4809
g57
(g78
g59
NtRp4810
(dp4811
g62
(dp4812
g82
g83
ssg71
g4806
sg64
(lp4813
S'session_data_name'
p4814
asbag57
(g78
g59
NtRp4815
(dp4816
g62
(dp4817
g89
g90
ssg71
g4806
sg64
(lp4818
S':'
asbag57
(g78
g59
NtRp4819
(dp4820
g62
(dp4821
sg71
g4806
sg64
(lp4822
g57
(g58
g59
NtRp4823
(dp4824
g62
(dp4825
g70
I5
ssg71
g4819
sg64
(lp4826
S'session_data_dev_bootstrap_ch'
p4827
asbasbasbag57
(g73
g59
NtRp4828
(dp4829
g62
(dp4830
sg71
g3896
sg64
(lp4831
g57
(g78
g59
NtRp4832
(dp4833
g62
(dp4834
g82
g83
ssg71
g4828
sg64
(lp4835
S'session_file'
p4836
asbag57
(g78
g59
NtRp4837
(dp4838
g62
(dp4839
g89
g90
ssg71
g4828
sg64
(lp4840
S':'
asbag57
(g78
g59
NtRp4841
(dp4842
g62
(dp4843
sg71
g4828
sg64
(lp4844
g57
(g58
g59
NtRp4845
(dp4846
g62
(dp4847
g70
I5
ssg71
g4841
sg64
(lp4848
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xb004be38>"
p4849
asbasbasbag57
(g73
g59
NtRp4850
(dp4851
g62
(dp4852
sg71
g3896
sg64
(lp4853
g57
(g78
g59
NtRp4854
(dp4855
g62
(dp4856
g82
g83
ssg71
g4850
sg64
(lp4857
S'session_filename'
p4858
asbag57
(g78
g59
NtRp4859
(dp4860
g62
(dp4861
g89
g90
ssg71
g4850
sg64
(lp4862
S':'
asbag57
(g78
g59
NtRp4863
(dp4864
g62
(dp4865
sg71
g4850
sg64
(lp4866
g57
(g58
g59
NtRp4867
(dp4868
g62
(dp4869
g70
I5
ssg71
g4863
sg64
(lp4870
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4871
asbasbasbag57
(g73
g59
NtRp4872
(dp4873
g62
(dp4874
sg71
g3896
sg64
(lp4875
g57
(g78
g59
NtRp4876
(dp4877
g62
(dp4878
g82
g83
ssg71
g4872
sg64
(lp4879
S'session_id'
p4880
asbag57
(g78
g59
NtRp4881
(dp4882
g62
(dp4883
g89
g90
ssg71
g4872
sg64
(lp4884
S':'
asbag57
(g78
g59
NtRp4885
(dp4886
g62
(dp4887
sg71
g4872
sg64
(lp4888
g57
(g58
g59
NtRp4889
(dp4890
g62
(dp4891
g70
I5
ssg71
g4885
sg64
(lp4892
g601
asbasbasbag57
(g73
g59
NtRp4893
(dp4894
g62
(dp4895
sg71
g3896
sg64
(lp4896
g57
(g78
g59
NtRp4897
(dp4898
g62
(dp4899
g82
g83
ssg71
g4893
sg64
(lp4900
S'session_id_name'
p4901
asbag57
(g78
g59
NtRp4902
(dp4903
g62
(dp4904
g89
g90
ssg71
g4893
sg64
(lp4905
S':'
asbag57
(g78
g59
NtRp4906
(dp4907
g62
(dp4908
sg71
g4893
sg64
(lp4909
g57
(g58
g59
NtRp4910
(dp4911
g62
(dp4912
g70
I5
ssg71
g4906
sg64
(lp4913
g3953
asbasbasbag57
(g73
g59
NtRp4914
(dp4915
g62
(dp4916
sg71
g3896
sg64
(lp4917
g57
(g78
g59
NtRp4918
(dp4919
g62
(dp4920
g82
g83
ssg71
g4914
sg64
(lp4921
S'session_locked'
p4922
asbag57
(g78
g59
NtRp4923
(dp4924
g62
(dp4925
g89
g90
ssg71
g4914
sg64
(lp4926
S':'
asbag57
(g78
g59
NtRp4927
(dp4928
g62
(dp4929
sg71
g4914
sg64
(lp4930
g57
(g58
g59
NtRp4931
(dp4932
g62
(dp4933
g70
I5
ssg71
g4927
sg64
(lp4934
g1733
asbasbasbag57
(g73
g59
NtRp4935
(dp4936
g62
(dp4937
sg71
g3896
sg64
(lp4938
g57
(g78
g59
NtRp4939
(dp4940
g62
(dp4941
g82
g83
ssg71
g4935
sg64
(lp4942
S'session_new'
p4943
asbag57
(g78
g59
NtRp4944
(dp4945
g62
(dp4946
g89
g90
ssg71
g4935
sg64
(lp4947
S':'
asbag57
(g78
g59
NtRp4948
(dp4949
g62
(dp4950
sg71
g4935
sg64
(lp4951
g57
(g58
g59
NtRp4952
(dp4953
g62
(dp4954
g70
I5
ssg71
g4948
sg64
(lp4955
g100
asbasbasbag57
(g73
g59
NtRp4956
(dp4957
g62
(dp4958
sg71
g3896
sg64
(lp4959
g57
(g78
g59
NtRp4960
(dp4961
g62
(dp4962
g82
g83
ssg71
g4956
sg64
(lp4963
S'session_storage_type'
p4964
asbag57
(g78
g59
NtRp4965
(dp4966
g62
(dp4967
g89
g90
ssg71
g4956
sg64
(lp4968
S':'
asbag57
(g78
g59
NtRp4969
(dp4970
g62
(dp4971
sg71
g4956
sg64
(lp4972
g57
(g58
g59
NtRp4973
(dp4974
g62
(dp4975
g70
I5
ssg71
g4969
sg64
(lp4976
g3186
asbasbasbag57
(g73
g59
NtRp4977
(dp4978
g62
(dp4979
sg71
g3896
sg64
(lp4980
g57
(g78
g59
NtRp4981
(dp4982
g62
(dp4983
g82
g83
ssg71
g4977
sg64
(lp4984
S'status'
p4985
asbag57
(g78
g59
NtRp4986
(dp4987
g62
(dp4988
g89
g90
ssg71
g4977
sg64
(lp4989
S':'
asbag57
(g78
g59
NtRp4990
(dp4991
g62
(dp4992
sg71
g4977
sg64
(lp4993
g57
(g58
g59
NtRp4994
(dp4995
g62
(dp4996
g70
I5
ssg71
g4990
sg64
(lp4997
S'200'
p4998
asbasbasbag57
(g73
g59
NtRp4999
(dp5000
g62
(dp5001
sg71
g3896
sg64
(lp5002
g57
(g78
g59
NtRp5003
(dp5004
g62
(dp5005
g82
g83
ssg71
g4999
sg64
(lp5006
S'subtitle'
p5007
asbag57
(g78
g59
NtRp5008
(dp5009
g62
(dp5010
g89
g90
ssg71
g4999
sg64
(lp5011
S':'
asbag57
(g78
g59
NtRp5012
(dp5013
g62
(dp5014
sg71
g4999
sg64
(lp5015
g57
(g58
g59
NtRp5016
(dp5017
g62
(dp5018
g70
I5
ssg71
g5012
sg64
(lp5019
g4517
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5020
asbasbasbag57
(g73
g59
NtRp5021
(dp5022
g62
(dp5023
sg71
g3896
sg64
(lp5024
g57
(g78
g59
NtRp5025
(dp5026
g62
(dp5027
g82
g83
ssg71
g5021
sg64
(lp5028
g3762
asbag57
(g78
g59
NtRp5029
(dp5030
g62
(dp5031
g89
g90
ssg71
g5021
sg64
(lp5032
S':'
asbag57
(g78
g59
NtRp5033
(dp5034
g62
(dp5035
sg71
g5021
sg64
(lp5036
g57
(g58
g59
NtRp5037
(dp5038
g62
(dp5039
g70
I5
ssg71
g5033
sg64
(lp5040
g122
asbasbasbag57
(g73
g59
NtRp5041
(dp5042
g62
(dp5043
sg71
g3896
sg64
(lp5044
g57
(g78
g59
NtRp5045
(dp5046
g62
(dp5047
g82
g83
ssg71
g5041
sg64
(lp5048
S'view'
p5049
asbag57
(g78
g59
NtRp5050
(dp5051
g62
(dp5052
g89
g90
ssg71
g5041
sg64
(lp5053
S':'
asbag57
(g78
g59
NtRp5054
(dp5055
g62
(dp5056
sg71
g5041
sg64
(lp5057
g57
(g58
g59
NtRp5058
(dp5059
g62
(dp5060
g70
I5
ssg71
g5054
sg64
(lp5061
S'default/list_all_dev_projects.html'
p5062
asbasbasbasbasbsS'locals'
p5063
(dp5064
S'ck'
p5065
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p5066
sS'q1'
p5067
S"<Query (project.project_status = '0')>"
p5068
sS'q2'
p5069
S'<Query (sample.experimentalist = 2)>'
p5070
sS'links'
p5071
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]}"
p5072
sS'addsample'
p5073
g1733
sg42
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p5074
sS'l1'
p5075
S"[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]"
p5076
sS'fi'
p5077
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p5078
sS'create_dict'
p5079
S"{'project': False, 'sample': True}"
p5080
sS'edit_dict'
p5081
S"{'project': False}"
p5082
sS'delete_dict'
p5083
S"{'project': False}"
p5084
sssS'traceback'
p5085
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1126, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 321, in list_all_dev_projects\n    router(request.args)\nTypeError: router() takes no arguments (1 given)\n'
p5086
s.