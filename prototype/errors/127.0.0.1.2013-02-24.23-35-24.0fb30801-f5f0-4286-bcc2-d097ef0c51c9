(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> router() takes no arguments (1 given)"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args):\n    row = db(db.biosource.sample_name==a).select(db.biosource.id).first()\n    if row:\n        args=args+["biosource.sample_name",a,"edit","biosource",row.id]\n        return args\n    else:\n        args = args+["biosource.sample_name",a,"new","biosource"]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('router() takes no arguments (1 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'router() takes no arguments (1 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g143
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
sg71
g210
sg64
(lp217
g57
(g58
g59
NtRp218
(dp219
g62
(dp220
g70
I4
ssg71
g214
sg64
(lp221
S'view'
p222
asbasbasbag57
(g73
g59
NtRp223
(dp224
g62
(dp225
sg71
g143
sg64
(lp226
g57
(g78
g59
NtRp227
(dp228
g62
(dp229
sg71
g223
sg64
(lp230
g57
(g58
g59
NtRp231
(dp232
g62
(dp233
g70
I4
ssg71
g227
sg64
(lp234
S'sample'
p235
asbasbasbag57
(g73
g59
NtRp236
(dp237
g62
(dp238
sg71
g143
sg64
(lp239
g57
(g78
g59
NtRp240
(dp241
g62
(dp242
sg71
g236
sg64
(lp243
g57
(g58
g59
NtRp244
(dp245
g62
(dp246
g70
I4
ssg71
g240
sg64
(lp247
S'3'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp248
(dp249
g62
(dp250
sg71
g67
sg64
(lp251
g57
(g78
g59
NtRp252
(dp253
g62
(dp254
g82
g83
ssg71
g248
sg64
(lp255
S'body'
p256
asbag57
(g78
g59
NtRp257
(dp258
g62
(dp259
g89
g90
ssg71
g248
sg64
(lp260
S':'
asbag57
(g78
g59
NtRp261
(dp262
g62
(dp263
sg71
g248
sg64
(lp264
g57
(g58
g59
NtRp265
(dp266
g62
(dp267
g70
I5
ssg71
g261
sg64
(lp268
S'<cStringIO.StringO object at 0xae524e80>'
p269
asbasbasbag57
(g73
g59
NtRp270
(dp271
g62
(dp272
sg71
g67
sg64
(lp273
g57
(g78
g59
NtRp274
(dp275
g62
(dp276
g82
g83
ssg71
g270
sg64
(lp277
S'cid'
p278
asbag57
(g78
g59
NtRp279
(dp280
g62
(dp281
g89
g90
ssg71
g270
sg64
(lp282
S':'
asbag57
(g78
g59
NtRp283
(dp284
g62
(dp285
sg71
g270
sg64
(lp286
g57
(g58
g59
NtRp287
(dp288
g62
(dp289
g70
I5
ssg71
g283
sg64
(lp290
S'None'
p291
asbasbasbag57
(g73
g59
NtRp292
(dp293
g62
(dp294
sg71
g67
sg64
(lp295
g57
(g78
g59
NtRp296
(dp297
g62
(dp298
g82
g83
ssg71
g292
sg64
(lp299
S'client'
p300
asbag57
(g78
g59
NtRp301
(dp302
g62
(dp303
g89
g90
ssg71
g292
sg64
(lp304
S':'
asbag57
(g78
g59
NtRp305
(dp306
g62
(dp307
sg71
g292
sg64
(lp308
g57
(g58
g59
NtRp309
(dp310
g62
(dp311
g70
I5
ssg71
g305
sg64
(lp312
S'127.0.0.1'
p313
asbasbasbag57
(g73
g59
NtRp314
(dp315
g62
(dp316
sg71
g67
sg64
(lp317
g57
(g78
g59
NtRp318
(dp319
g62
(dp320
g82
g83
ssg71
g314
sg64
(lp321
S'controller'
p322
asbag57
(g78
g59
NtRp323
(dp324
g62
(dp325
g89
g90
ssg71
g314
sg64
(lp326
S':'
asbag57
(g78
g59
NtRp327
(dp328
g62
(dp329
sg71
g314
sg64
(lp330
g57
(g58
g59
NtRp331
(dp332
g62
(dp333
g70
I5
ssg71
g327
sg64
(lp334
S'default'
p335
asbasbasbag57
(g73
g59
NtRp336
(dp337
g62
(dp338
sg71
g67
sg64
(lp339
g57
(g78
g59
NtRp340
(dp341
g62
(dp342
g82
g83
ssg71
g336
sg64
(lp343
S'cookies'
p344
asbag57
(g78
g59
NtRp345
(dp346
g62
(dp347
g89
g90
ssg71
g336
sg64
(lp348
S':'
asbag57
(g78
g59
NtRp349
(dp350
g62
(dp351
sg71
g336
sg64
(lp352
g57
(g58
g59
NtRp353
(dp354
g62
(dp355
g70
I5
ssg71
g349
sg64
(lp356
g57
(g66
g59
NtRp357
(dp358
g62
(dp359
g70
I4
ssg71
Nsg64
(lp360
g57
(g73
g59
NtRp361
(dp362
g62
(dp363
sg71
g357
sg64
(lp364
g57
(g78
g59
NtRp365
(dp366
g62
(dp367
g82
g83
ssg71
g361
sg64
(lp368
S'session_id_admin'
p369
asbag57
(g78
g59
NtRp370
(dp371
g62
(dp372
g89
g90
ssg71
g361
sg64
(lp373
S':'
asbag57
(g78
g59
NtRp374
(dp375
g62
(dp376
sg71
g361
sg64
(lp377
g57
(g58
g59
NtRp378
(dp379
g62
(dp380
g70
I4
ssg71
g374
sg64
(lp381
S'127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb'
p382
ag57
(g66
g59
NtRp383
(dp384
g62
(dp385
g70
I3
ssg71
Nsg64
(lp386
g57
(g73
g59
NtRp387
(dp388
g62
(dp389
sg71
g383
sg64
(lp390
g57
(g78
g59
NtRp391
(dp392
g62
(dp393
g82
g83
ssg71
g387
sg64
(lp394
S'comment'
p395
asbag57
(g78
g59
NtRp396
(dp397
g62
(dp398
g89
g90
ssg71
g387
sg64
(lp399
S':'
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
sg71
g387
sg64
(lp403
g57
(g58
g59
NtRp404
(dp405
g62
(dp406
g70
I3
ssg71
g400
sg64
(lp407
S''
asbasbasbag57
(g73
g59
NtRp408
(dp409
g62
(dp410
sg71
g383
sg64
(lp411
g57
(g78
g59
NtRp412
(dp413
g62
(dp414
g82
g83
ssg71
g408
sg64
(lp415
S'domain'
p416
asbag57
(g78
g59
NtRp417
(dp418
g62
(dp419
g89
g90
ssg71
g408
sg64
(lp420
S':'
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
sg71
g408
sg64
(lp424
g57
(g58
g59
NtRp425
(dp426
g62
(dp427
g70
I3
ssg71
g421
sg64
(lp428
S''
asbasbasbag57
(g73
g59
NtRp429
(dp430
g62
(dp431
sg71
g383
sg64
(lp432
g57
(g78
g59
NtRp433
(dp434
g62
(dp435
g82
g83
ssg71
g429
sg64
(lp436
S'expires'
p437
asbag57
(g78
g59
NtRp438
(dp439
g62
(dp440
g89
g90
ssg71
g429
sg64
(lp441
S':'
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
sg71
g429
sg64
(lp445
g57
(g58
g59
NtRp446
(dp447
g62
(dp448
g70
I3
ssg71
g442
sg64
(lp449
S''
asbasbasbag57
(g73
g59
NtRp450
(dp451
g62
(dp452
sg71
g383
sg64
(lp453
g57
(g78
g59
NtRp454
(dp455
g62
(dp456
g82
g83
ssg71
g450
sg64
(lp457
S'httponly'
p458
asbag57
(g78
g59
NtRp459
(dp460
g62
(dp461
g89
g90
ssg71
g450
sg64
(lp462
S':'
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
sg71
g450
sg64
(lp466
g57
(g58
g59
NtRp467
(dp468
g62
(dp469
g70
I3
ssg71
g463
sg64
(lp470
S''
asbasbasbag57
(g73
g59
NtRp471
(dp472
g62
(dp473
sg71
g383
sg64
(lp474
g57
(g78
g59
NtRp475
(dp476
g62
(dp477
g82
g83
ssg71
g471
sg64
(lp478
S'max-age'
p479
asbag57
(g78
g59
NtRp480
(dp481
g62
(dp482
g89
g90
ssg71
g471
sg64
(lp483
S':'
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
sg71
g471
sg64
(lp487
g57
(g58
g59
NtRp488
(dp489
g62
(dp490
g70
I3
ssg71
g484
sg64
(lp491
S''
asbasbasbag57
(g73
g59
NtRp492
(dp493
g62
(dp494
sg71
g383
sg64
(lp495
g57
(g78
g59
NtRp496
(dp497
g62
(dp498
g82
g83
ssg71
g492
sg64
(lp499
S'path'
p500
asbag57
(g78
g59
NtRp501
(dp502
g62
(dp503
g89
g90
ssg71
g492
sg64
(lp504
S':'
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
sg71
g492
sg64
(lp508
g57
(g58
g59
NtRp509
(dp510
g62
(dp511
g70
I3
ssg71
g505
sg64
(lp512
S''
asbasbasbag57
(g73
g59
NtRp513
(dp514
g62
(dp515
sg71
g383
sg64
(lp516
g57
(g78
g59
NtRp517
(dp518
g62
(dp519
g82
g83
ssg71
g513
sg64
(lp520
S'secure'
p521
asbag57
(g78
g59
NtRp522
(dp523
g62
(dp524
g89
g90
ssg71
g513
sg64
(lp525
S':'
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
sg71
g513
sg64
(lp529
g57
(g58
g59
NtRp530
(dp531
g62
(dp532
g70
I3
ssg71
g526
sg64
(lp533
S''
asbasbasbag57
(g73
g59
NtRp534
(dp535
g62
(dp536
sg71
g383
sg64
(lp537
g57
(g78
g59
NtRp538
(dp539
g62
(dp540
g82
g83
ssg71
g534
sg64
(lp541
S'version'
p542
asbag57
(g78
g59
NtRp543
(dp544
g62
(dp545
g89
g90
ssg71
g534
sg64
(lp546
S':'
asbag57
(g78
g59
NtRp547
(dp548
g62
(dp549
sg71
g534
sg64
(lp550
g57
(g58
g59
NtRp551
(dp552
g62
(dp553
g70
I3
ssg71
g547
sg64
(lp554
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp555
(dp556
g62
(dp557
sg71
g357
sg64
(lp558
g57
(g78
g59
NtRp559
(dp560
g62
(dp561
g82
g83
ssg71
g555
sg64
(lp562
S'session_id_dev_bootstrap_ch'
p563
asbag57
(g78
g59
NtRp564
(dp565
g62
(dp566
g89
g90
ssg71
g555
sg64
(lp567
S':'
asbag57
(g78
g59
NtRp568
(dp569
g62
(dp570
sg71
g555
sg64
(lp571
g57
(g58
g59
NtRp572
(dp573
g62
(dp574
g70
I4
ssg71
g568
sg64
(lp575
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p576
ag57
(g66
g59
NtRp577
(dp578
g62
(dp579
g70
I3
ssg71
Nsg64
(lp580
g57
(g73
g59
NtRp581
(dp582
g62
(dp583
sg71
g577
sg64
(lp584
g57
(g78
g59
NtRp585
(dp586
g62
(dp587
g82
g83
ssg71
g581
sg64
(lp588
g395
asbag57
(g78
g59
NtRp589
(dp590
g62
(dp591
g89
g90
ssg71
g581
sg64
(lp592
S':'
asbag57
(g78
g59
NtRp593
(dp594
g62
(dp595
sg71
g581
sg64
(lp596
g57
(g58
g59
NtRp597
(dp598
g62
(dp599
g70
I3
ssg71
g593
sg64
(lp600
S''
asbasbasbag57
(g73
g59
NtRp601
(dp602
g62
(dp603
sg71
g577
sg64
(lp604
g57
(g78
g59
NtRp605
(dp606
g62
(dp607
g82
g83
ssg71
g601
sg64
(lp608
g416
asbag57
(g78
g59
NtRp609
(dp610
g62
(dp611
g89
g90
ssg71
g601
sg64
(lp612
S':'
asbag57
(g78
g59
NtRp613
(dp614
g62
(dp615
sg71
g601
sg64
(lp616
g57
(g58
g59
NtRp617
(dp618
g62
(dp619
g70
I3
ssg71
g613
sg64
(lp620
S''
asbasbasbag57
(g73
g59
NtRp621
(dp622
g62
(dp623
sg71
g577
sg64
(lp624
g57
(g78
g59
NtRp625
(dp626
g62
(dp627
g82
g83
ssg71
g621
sg64
(lp628
g437
asbag57
(g78
g59
NtRp629
(dp630
g62
(dp631
g89
g90
ssg71
g621
sg64
(lp632
S':'
asbag57
(g78
g59
NtRp633
(dp634
g62
(dp635
sg71
g621
sg64
(lp636
g57
(g58
g59
NtRp637
(dp638
g62
(dp639
g70
I3
ssg71
g633
sg64
(lp640
S''
asbasbasbag57
(g73
g59
NtRp641
(dp642
g62
(dp643
sg71
g577
sg64
(lp644
g57
(g78
g59
NtRp645
(dp646
g62
(dp647
g82
g83
ssg71
g641
sg64
(lp648
g458
asbag57
(g78
g59
NtRp649
(dp650
g62
(dp651
g89
g90
ssg71
g641
sg64
(lp652
S':'
asbag57
(g78
g59
NtRp653
(dp654
g62
(dp655
sg71
g641
sg64
(lp656
g57
(g58
g59
NtRp657
(dp658
g62
(dp659
g70
I3
ssg71
g653
sg64
(lp660
S''
asbasbasbag57
(g73
g59
NtRp661
(dp662
g62
(dp663
sg71
g577
sg64
(lp664
g57
(g78
g59
NtRp665
(dp666
g62
(dp667
g82
g83
ssg71
g661
sg64
(lp668
g479
asbag57
(g78
g59
NtRp669
(dp670
g62
(dp671
g89
g90
ssg71
g661
sg64
(lp672
S':'
asbag57
(g78
g59
NtRp673
(dp674
g62
(dp675
sg71
g661
sg64
(lp676
g57
(g58
g59
NtRp677
(dp678
g62
(dp679
g70
I3
ssg71
g673
sg64
(lp680
S''
asbasbasbag57
(g73
g59
NtRp681
(dp682
g62
(dp683
sg71
g577
sg64
(lp684
g57
(g78
g59
NtRp685
(dp686
g62
(dp687
g82
g83
ssg71
g681
sg64
(lp688
g500
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
g89
g90
ssg71
g681
sg64
(lp692
S':'
asbag57
(g78
g59
NtRp693
(dp694
g62
(dp695
sg71
g681
sg64
(lp696
g57
(g58
g59
NtRp697
(dp698
g62
(dp699
g70
I3
ssg71
g693
sg64
(lp700
S''
asbasbasbag57
(g73
g59
NtRp701
(dp702
g62
(dp703
sg71
g577
sg64
(lp704
g57
(g78
g59
NtRp705
(dp706
g62
(dp707
g82
g83
ssg71
g701
sg64
(lp708
g521
asbag57
(g78
g59
NtRp709
(dp710
g62
(dp711
g89
g90
ssg71
g701
sg64
(lp712
S':'
asbag57
(g78
g59
NtRp713
(dp714
g62
(dp715
sg71
g701
sg64
(lp716
g57
(g58
g59
NtRp717
(dp718
g62
(dp719
g70
I3
ssg71
g713
sg64
(lp720
S''
asbasbasbag57
(g73
g59
NtRp721
(dp722
g62
(dp723
sg71
g577
sg64
(lp724
g57
(g78
g59
NtRp725
(dp726
g62
(dp727
g82
g83
ssg71
g721
sg64
(lp728
g542
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g721
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g721
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I3
ssg71
g733
sg64
(lp740
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp741
(dp742
g62
(dp743
sg71
g67
sg64
(lp744
g57
(g78
g59
NtRp745
(dp746
g62
(dp747
g82
g83
ssg71
g741
sg64
(lp748
S'env'
p749
asbag57
(g78
g59
NtRp750
(dp751
g62
(dp752
g89
g90
ssg71
g741
sg64
(lp753
S':'
asbag57
(g78
g59
NtRp754
(dp755
g62
(dp756
sg71
g741
sg64
(lp757
g57
(g58
g59
NtRp758
(dp759
g62
(dp760
g70
I5
ssg71
g754
sg64
(lp761
g57
(g66
g59
NtRp762
(dp763
g62
(dp764
g70
I4
ssg71
Nsg64
(lp765
g57
(g73
g59
NtRp766
(dp767
g62
(dp768
sg71
g762
sg64
(lp769
g57
(g78
g59
NtRp770
(dp771
g62
(dp772
g82
g83
ssg71
g766
sg64
(lp773
S'app_folders'
p774
asbag57
(g78
g59
NtRp775
(dp776
g62
(dp777
g89
g90
ssg71
g766
sg64
(lp778
S':'
asbag57
(g78
g59
NtRp779
(dp780
g62
(dp781
sg71
g766
sg64
(lp782
g57
(g58
g59
NtRp783
(dp784
g62
(dp785
g70
I4
ssg71
g779
sg64
(lp786
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p787
asbasbasbag57
(g73
g59
NtRp788
(dp789
g62
(dp790
sg71
g762
sg64
(lp791
g57
(g78
g59
NtRp792
(dp793
g62
(dp794
g82
g83
ssg71
g788
sg64
(lp795
S'applications_parent'
p796
asbag57
(g78
g59
NtRp797
(dp798
g62
(dp799
g89
g90
ssg71
g788
sg64
(lp800
S':'
asbag57
(g78
g59
NtRp801
(dp802
g62
(dp803
sg71
g788
sg64
(lp804
g57
(g58
g59
NtRp805
(dp806
g62
(dp807
g70
I4
ssg71
g801
sg64
(lp808
S'/home/anil/bootstrap/web2py'
p809
asbasbasbag57
(g73
g59
NtRp810
(dp811
g62
(dp812
sg71
g762
sg64
(lp813
g57
(g78
g59
NtRp814
(dp815
g62
(dp816
g82
g83
ssg71
g810
sg64
(lp817
S'cmd_args'
p818
asbag57
(g78
g59
NtRp819
(dp820
g62
(dp821
g89
g90
ssg71
g810
sg64
(lp822
S':'
asbag57
(g78
g59
NtRp823
(dp824
g62
(dp825
sg71
g810
sg64
(lp826
g57
(g58
g59
NtRp827
(dp828
g62
(dp829
g70
I4
ssg71
g823
sg64
(lp830
g57
(g66
g59
NtRp831
(dp832
g62
(dp833
g70
I3
ssg71
Nsg64
(lp834
sbasbasbasbag57
(g73
g59
NtRp835
(dp836
g62
(dp837
sg71
g762
sg64
(lp838
g57
(g78
g59
NtRp839
(dp840
g62
(dp841
g82
g83
ssg71
g835
sg64
(lp842
S'cmd_options'
p843
asbag57
(g78
g59
NtRp844
(dp845
g62
(dp846
g89
g90
ssg71
g835
sg64
(lp847
S':'
asbag57
(g78
g59
NtRp848
(dp849
g62
(dp850
sg71
g835
sg64
(lp851
g57
(g58
g59
NtRp852
(dp853
g62
(dp854
g70
I4
ssg71
g848
sg64
(lp855
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p856
asbasbasbag57
(g73
g59
NtRp857
(dp858
g62
(dp859
sg71
g762
sg64
(lp860
g57
(g78
g59
NtRp861
(dp862
g62
(dp863
g82
g83
ssg71
g857
sg64
(lp864
S'db_sessions'
p865
asbag57
(g78
g59
NtRp866
(dp867
g62
(dp868
g89
g90
ssg71
g857
sg64
(lp869
S':'
asbag57
(g78
g59
NtRp870
(dp871
g62
(dp872
sg71
g857
sg64
(lp873
g57
(g58
g59
NtRp874
(dp875
g62
(dp876
g70
I4
ssg71
g870
sg64
(lp877
S'set([])'
p878
asbasbasbag57
(g73
g59
NtRp879
(dp880
g62
(dp881
sg71
g762
sg64
(lp882
g57
(g78
g59
NtRp883
(dp884
g62
(dp885
g82
g83
ssg71
g879
sg64
(lp886
S'debugging'
p887
asbag57
(g78
g59
NtRp888
(dp889
g62
(dp890
g89
g90
ssg71
g879
sg64
(lp891
S':'
asbag57
(g78
g59
NtRp892
(dp893
g62
(dp894
sg71
g879
sg64
(lp895
g57
(g58
g59
NtRp896
(dp897
g62
(dp898
g70
I4
ssg71
g892
sg64
(lp899
g100
asbasbasbag57
(g73
g59
NtRp900
(dp901
g62
(dp902
sg71
g762
sg64
(lp903
g57
(g78
g59
NtRp904
(dp905
g62
(dp906
g82
g83
ssg71
g900
sg64
(lp907
S'gluon_parent'
p908
asbag57
(g78
g59
NtRp909
(dp910
g62
(dp911
g89
g90
ssg71
g900
sg64
(lp912
S':'
asbag57
(g78
g59
NtRp913
(dp914
g62
(dp915
sg71
g900
sg64
(lp916
g57
(g58
g59
NtRp917
(dp918
g62
(dp919
g70
I4
ssg71
g913
sg64
(lp920
S'/home/anil/bootstrap/web2py'
p921
asbasbasbag57
(g73
g59
NtRp922
(dp923
g62
(dp924
sg71
g762
sg64
(lp925
g57
(g78
g59
NtRp926
(dp927
g62
(dp928
g82
g83
ssg71
g922
sg64
(lp929
S'http_accept'
p930
asbag57
(g78
g59
NtRp931
(dp932
g62
(dp933
g89
g90
ssg71
g922
sg64
(lp934
S':'
asbag57
(g78
g59
NtRp935
(dp936
g62
(dp937
sg71
g922
sg64
(lp938
g57
(g58
g59
NtRp939
(dp940
g62
(dp941
g70
I4
ssg71
g935
sg64
(lp942
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p943
asbasbasbag57
(g73
g59
NtRp944
(dp945
g62
(dp946
sg71
g762
sg64
(lp947
g57
(g78
g59
NtRp948
(dp949
g62
(dp950
g82
g83
ssg71
g944
sg64
(lp951
S'http_accept_charset'
p952
asbag57
(g78
g59
NtRp953
(dp954
g62
(dp955
g89
g90
ssg71
g944
sg64
(lp956
S':'
asbag57
(g78
g59
NtRp957
(dp958
g62
(dp959
sg71
g944
sg64
(lp960
g57
(g58
g59
NtRp961
(dp962
g62
(dp963
g70
I4
ssg71
g957
sg64
(lp964
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p965
asbasbasbag57
(g73
g59
NtRp966
(dp967
g62
(dp968
sg71
g762
sg64
(lp969
g57
(g78
g59
NtRp970
(dp971
g62
(dp972
g82
g83
ssg71
g966
sg64
(lp973
S'http_accept_encoding'
p974
asbag57
(g78
g59
NtRp975
(dp976
g62
(dp977
g89
g90
ssg71
g966
sg64
(lp978
S':'
asbag57
(g78
g59
NtRp979
(dp980
g62
(dp981
sg71
g966
sg64
(lp982
g57
(g58
g59
NtRp983
(dp984
g62
(dp985
g70
I4
ssg71
g979
sg64
(lp986
S'gzip,deflate,sdch'
p987
asbasbasbag57
(g73
g59
NtRp988
(dp989
g62
(dp990
sg71
g762
sg64
(lp991
g57
(g78
g59
NtRp992
(dp993
g62
(dp994
g82
g83
ssg71
g988
sg64
(lp995
S'http_accept_language'
p996
asbag57
(g78
g59
NtRp997
(dp998
g62
(dp999
g89
g90
ssg71
g988
sg64
(lp1000
S':'
asbag57
(g78
g59
NtRp1001
(dp1002
g62
(dp1003
sg71
g988
sg64
(lp1004
g57
(g58
g59
NtRp1005
(dp1006
g62
(dp1007
g70
I4
ssg71
g1001
sg64
(lp1008
S'en-US,en;q=0.8'
p1009
asbasbasbag57
(g73
g59
NtRp1010
(dp1011
g62
(dp1012
sg71
g762
sg64
(lp1013
g57
(g78
g59
NtRp1014
(dp1015
g62
(dp1016
g82
g83
ssg71
g1010
sg64
(lp1017
S'http_connection'
p1018
asbag57
(g78
g59
NtRp1019
(dp1020
g62
(dp1021
g89
g90
ssg71
g1010
sg64
(lp1022
S':'
asbag57
(g78
g59
NtRp1023
(dp1024
g62
(dp1025
sg71
g1010
sg64
(lp1026
g57
(g58
g59
NtRp1027
(dp1028
g62
(dp1029
g70
I4
ssg71
g1023
sg64
(lp1030
S'keep-alive'
p1031
asbasbasbag57
(g73
g59
NtRp1032
(dp1033
g62
(dp1034
sg71
g762
sg64
(lp1035
g57
(g78
g59
NtRp1036
(dp1037
g62
(dp1038
g82
g83
ssg71
g1032
sg64
(lp1039
S'http_cookie'
p1040
asbag57
(g78
g59
NtRp1041
(dp1042
g62
(dp1043
g89
g90
ssg71
g1032
sg64
(lp1044
S':'
asbag57
(g78
g59
NtRp1045
(dp1046
g62
(dp1047
sg71
g1032
sg64
(lp1048
g57
(g58
g59
NtRp1049
(dp1050
g62
(dp1051
g70
I4
ssg71
g1045
sg64
(lp1052
S'session_id_admin=127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1053
asbasbasbag57
(g73
g59
NtRp1054
(dp1055
g62
(dp1056
sg71
g762
sg64
(lp1057
g57
(g78
g59
NtRp1058
(dp1059
g62
(dp1060
g82
g83
ssg71
g1054
sg64
(lp1061
S'http_host'
p1062
asbag57
(g78
g59
NtRp1063
(dp1064
g62
(dp1065
g89
g90
ssg71
g1054
sg64
(lp1066
S':'
asbag57
(g78
g59
NtRp1067
(dp1068
g62
(dp1069
sg71
g1054
sg64
(lp1070
g57
(g58
g59
NtRp1071
(dp1072
g62
(dp1073
g70
I4
ssg71
g1067
sg64
(lp1074
S'127.0.0.1:8000'
p1075
asbasbasbag57
(g73
g59
NtRp1076
(dp1077
g62
(dp1078
sg71
g762
sg64
(lp1079
g57
(g78
g59
NtRp1080
(dp1081
g62
(dp1082
g82
g83
ssg71
g1076
sg64
(lp1083
S'http_referer'
p1084
asbag57
(g78
g59
NtRp1085
(dp1086
g62
(dp1087
g89
g90
ssg71
g1076
sg64
(lp1088
S':'
asbag57
(g78
g59
NtRp1089
(dp1090
g62
(dp1091
sg71
g1076
sg64
(lp1092
g57
(g58
g59
NtRp1093
(dp1094
g62
(dp1095
g70
I4
ssg71
g1089
sg64
(lp1096
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3'
p1097
asbasbasbag57
(g73
g59
NtRp1098
(dp1099
g62
(dp1100
sg71
g762
sg64
(lp1101
g57
(g78
g59
NtRp1102
(dp1103
g62
(dp1104
g82
g83
ssg71
g1098
sg64
(lp1105
S'http_user_agent'
p1106
asbag57
(g78
g59
NtRp1107
(dp1108
g62
(dp1109
g89
g90
ssg71
g1098
sg64
(lp1110
S':'
asbag57
(g78
g59
NtRp1111
(dp1112
g62
(dp1113
sg71
g1098
sg64
(lp1114
g57
(g58
g59
NtRp1115
(dp1116
g62
(dp1117
g70
I4
ssg71
g1111
sg64
(lp1118
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1119
asbasbasbag57
(g73
g59
NtRp1120
(dp1121
g62
(dp1122
sg71
g762
sg64
(lp1123
g57
(g78
g59
NtRp1124
(dp1125
g62
(dp1126
g82
g83
ssg71
g1120
sg64
(lp1127
S'is_jython'
p1128
asbag57
(g78
g59
NtRp1129
(dp1130
g62
(dp1131
g89
g90
ssg71
g1120
sg64
(lp1132
S':'
asbag57
(g78
g59
NtRp1133
(dp1134
g62
(dp1135
sg71
g1120
sg64
(lp1136
g57
(g58
g59
NtRp1137
(dp1138
g62
(dp1139
g70
I4
ssg71
g1133
sg64
(lp1140
g100
asbasbasbag57
(g73
g59
NtRp1141
(dp1142
g62
(dp1143
sg71
g762
sg64
(lp1144
g57
(g78
g59
NtRp1145
(dp1146
g62
(dp1147
g82
g83
ssg71
g1141
sg64
(lp1148
S'is_pypy'
p1149
asbag57
(g78
g59
NtRp1150
(dp1151
g62
(dp1152
g89
g90
ssg71
g1141
sg64
(lp1153
S':'
asbag57
(g78
g59
NtRp1154
(dp1155
g62
(dp1156
sg71
g1141
sg64
(lp1157
g57
(g58
g59
NtRp1158
(dp1159
g62
(dp1160
g70
I4
ssg71
g1154
sg64
(lp1161
g100
asbasbasbag57
(g73
g59
NtRp1162
(dp1163
g62
(dp1164
sg71
g762
sg64
(lp1165
g57
(g78
g59
NtRp1166
(dp1167
g62
(dp1168
g82
g83
ssg71
g1162
sg64
(lp1169
S'local_hosts'
p1170
asbag57
(g78
g59
NtRp1171
(dp1172
g62
(dp1173
g89
g90
ssg71
g1162
sg64
(lp1174
S':'
asbag57
(g78
g59
NtRp1175
(dp1176
g62
(dp1177
sg71
g1162
sg64
(lp1178
g57
(g58
g59
NtRp1179
(dp1180
g62
(dp1181
g70
I4
ssg71
g1175
sg64
(lp1182
g57
(g66
g59
NtRp1183
(dp1184
g62
(dp1185
g70
I3
ssg71
Nsg64
(lp1186
g57
(g73
g59
NtRp1187
(dp1188
g62
(dp1189
sg71
g1183
sg64
(lp1190
g57
(g78
g59
NtRp1191
(dp1192
g62
(dp1193
sg71
g1187
sg64
(lp1194
g57
(g58
g59
NtRp1195
(dp1196
g62
(dp1197
g70
I3
ssg71
g1191
sg64
(lp1198
S'::1'
p1199
asbasbasbag57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g1183
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
sg71
g1200
sg64
(lp1207
g57
(g58
g59
NtRp1208
(dp1209
g62
(dp1210
g70
I3
ssg71
g1204
sg64
(lp1211
S'127.0.1.1'
p1212
asbasbasbag57
(g73
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1183
sg64
(lp1216
g57
(g78
g59
NtRp1217
(dp1218
g62
(dp1219
sg71
g1213
sg64
(lp1220
g57
(g58
g59
NtRp1221
(dp1222
g62
(dp1223
g70
I3
ssg71
g1217
sg64
(lp1224
S'::ffff:127.0.0.1'
p1225
asbasbasbag57
(g73
g59
NtRp1226
(dp1227
g62
(dp1228
sg71
g1183
sg64
(lp1229
g57
(g78
g59
NtRp1230
(dp1231
g62
(dp1232
sg71
g1226
sg64
(lp1233
g57
(g58
g59
NtRp1234
(dp1235
g62
(dp1236
g70
I3
ssg71
g1230
sg64
(lp1237
S'127.0.0.1'
p1238
asbasbasbag57
(g73
g59
NtRp1239
(dp1240
g62
(dp1241
sg71
g1183
sg64
(lp1242
g57
(g78
g59
NtRp1243
(dp1244
g62
(dp1245
sg71
g1239
sg64
(lp1246
g57
(g58
g59
NtRp1247
(dp1248
g62
(dp1249
g70
I3
ssg71
g1243
sg64
(lp1250
S'anil-Inspiron-1525'
p1251
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1252
(dp1253
g62
(dp1254
sg71
g762
sg64
(lp1255
g57
(g78
g59
NtRp1256
(dp1257
g62
(dp1258
g82
g83
ssg71
g1252
sg64
(lp1259
S'path_info'
p1260
asbag57
(g78
g59
NtRp1261
(dp1262
g62
(dp1263
g89
g90
ssg71
g1252
sg64
(lp1264
S':'
asbag57
(g78
g59
NtRp1265
(dp1266
g62
(dp1267
sg71
g1252
sg64
(lp1268
g57
(g58
g59
NtRp1269
(dp1270
g62
(dp1271
g70
I4
ssg71
g1265
sg64
(lp1272
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/view/sample/3'
p1273
asbasbasbag57
(g73
g59
NtRp1274
(dp1275
g62
(dp1276
sg71
g762
sg64
(lp1277
g57
(g78
g59
NtRp1278
(dp1279
g62
(dp1280
g82
g83
ssg71
g1274
sg64
(lp1281
S'query_string'
p1282
asbag57
(g78
g59
NtRp1283
(dp1284
g62
(dp1285
g89
g90
ssg71
g1274
sg64
(lp1286
S':'
asbag57
(g78
g59
NtRp1287
(dp1288
g62
(dp1289
sg71
g1274
sg64
(lp1290
g57
(g58
g59
NtRp1291
(dp1292
g62
(dp1293
g70
I4
ssg71
g1287
sg64
(lp1294
S'_signature=bca248645fd63d0bc81855cc316c814f22cc8172'
p1295
asbasbasbag57
(g73
g59
NtRp1296
(dp1297
g62
(dp1298
sg71
g762
sg64
(lp1299
g57
(g78
g59
NtRp1300
(dp1301
g62
(dp1302
g82
g83
ssg71
g1296
sg64
(lp1303
S'remote_addr'
p1304
asbag57
(g78
g59
NtRp1305
(dp1306
g62
(dp1307
g89
g90
ssg71
g1296
sg64
(lp1308
S':'
asbag57
(g78
g59
NtRp1309
(dp1310
g62
(dp1311
sg71
g1296
sg64
(lp1312
g57
(g58
g59
NtRp1313
(dp1314
g62
(dp1315
g70
I4
ssg71
g1309
sg64
(lp1316
g313
asbasbasbag57
(g73
g59
NtRp1317
(dp1318
g62
(dp1319
sg71
g762
sg64
(lp1320
g57
(g78
g59
NtRp1321
(dp1322
g62
(dp1323
g82
g83
ssg71
g1317
sg64
(lp1324
S'remote_port'
p1325
asbag57
(g78
g59
NtRp1326
(dp1327
g62
(dp1328
g89
g90
ssg71
g1317
sg64
(lp1329
S':'
asbag57
(g78
g59
NtRp1330
(dp1331
g62
(dp1332
sg71
g1317
sg64
(lp1333
g57
(g58
g59
NtRp1334
(dp1335
g62
(dp1336
g70
I4
ssg71
g1330
sg64
(lp1337
S'42954'
p1338
asbasbasbag57
(g73
g59
NtRp1339
(dp1340
g62
(dp1341
sg71
g762
sg64
(lp1342
g57
(g78
g59
NtRp1343
(dp1344
g62
(dp1345
g82
g83
ssg71
g1339
sg64
(lp1346
S'request_method'
p1347
asbag57
(g78
g59
NtRp1348
(dp1349
g62
(dp1350
g89
g90
ssg71
g1339
sg64
(lp1351
S':'
asbag57
(g78
g59
NtRp1352
(dp1353
g62
(dp1354
sg71
g1339
sg64
(lp1355
g57
(g58
g59
NtRp1356
(dp1357
g62
(dp1358
g70
I4
ssg71
g1352
sg64
(lp1359
S'GET'
p1360
asbasbasbag57
(g73
g59
NtRp1361
(dp1362
g62
(dp1363
sg71
g762
sg64
(lp1364
g57
(g78
g59
NtRp1365
(dp1366
g62
(dp1367
g82
g83
ssg71
g1361
sg64
(lp1368
S'request_uri'
p1369
asbag57
(g78
g59
NtRp1370
(dp1371
g62
(dp1372
g89
g90
ssg71
g1361
sg64
(lp1373
S':'
asbag57
(g78
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g1361
sg64
(lp1377
g57
(g58
g59
NtRp1378
(dp1379
g62
(dp1380
g70
I4
ssg71
g1374
sg64
(lp1381
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/view/sample/3?_signature=bca248645fd63d0bc81855cc316c814f22cc8172'
p1382
asbasbasbag57
(g73
g59
NtRp1383
(dp1384
g62
(dp1385
sg71
g762
sg64
(lp1386
g57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
g82
g83
ssg71
g1383
sg64
(lp1390
S'script_name'
p1391
asbag57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
g89
g90
ssg71
g1383
sg64
(lp1395
S':'
asbag57
(g78
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g1383
sg64
(lp1399
g57
(g58
g59
NtRp1400
(dp1401
g62
(dp1402
g70
I4
ssg71
g1396
sg64
(lp1403
S''
asbasbasbag57
(g73
g59
NtRp1404
(dp1405
g62
(dp1406
sg71
g762
sg64
(lp1407
g57
(g78
g59
NtRp1408
(dp1409
g62
(dp1410
g82
g83
ssg71
g1404
sg64
(lp1411
S'server_name'
p1412
asbag57
(g78
g59
NtRp1413
(dp1414
g62
(dp1415
g89
g90
ssg71
g1404
sg64
(lp1416
S':'
asbag57
(g78
g59
NtRp1417
(dp1418
g62
(dp1419
sg71
g1404
sg64
(lp1420
g57
(g58
g59
NtRp1421
(dp1422
g62
(dp1423
g70
I4
ssg71
g1417
sg64
(lp1424
S'anil-Inspiron-1525'
p1425
asbasbasbag57
(g73
g59
NtRp1426
(dp1427
g62
(dp1428
sg71
g762
sg64
(lp1429
g57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
g82
g83
ssg71
g1426
sg64
(lp1433
S'server_port'
p1434
asbag57
(g78
g59
NtRp1435
(dp1436
g62
(dp1437
g89
g90
ssg71
g1426
sg64
(lp1438
S':'
asbag57
(g78
g59
NtRp1439
(dp1440
g62
(dp1441
sg71
g1426
sg64
(lp1442
g57
(g58
g59
NtRp1443
(dp1444
g62
(dp1445
g70
I4
ssg71
g1439
sg64
(lp1446
S'8000'
p1447
asbasbasbag57
(g73
g59
NtRp1448
(dp1449
g62
(dp1450
sg71
g762
sg64
(lp1451
g57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
g82
g83
ssg71
g1448
sg64
(lp1455
S'server_protocol'
p1456
asbag57
(g78
g59
NtRp1457
(dp1458
g62
(dp1459
g89
g90
ssg71
g1448
sg64
(lp1460
S':'
asbag57
(g78
g59
NtRp1461
(dp1462
g62
(dp1463
sg71
g1448
sg64
(lp1464
g57
(g58
g59
NtRp1465
(dp1466
g62
(dp1467
g70
I4
ssg71
g1461
sg64
(lp1468
S'HTTP/1.1'
p1469
asbasbasbag57
(g73
g59
NtRp1470
(dp1471
g62
(dp1472
sg71
g762
sg64
(lp1473
g57
(g78
g59
NtRp1474
(dp1475
g62
(dp1476
g82
g83
ssg71
g1470
sg64
(lp1477
S'server_software'
p1478
asbag57
(g78
g59
NtRp1479
(dp1480
g62
(dp1481
g89
g90
ssg71
g1470
sg64
(lp1482
S':'
asbag57
(g78
g59
NtRp1483
(dp1484
g62
(dp1485
sg71
g1470
sg64
(lp1486
g57
(g58
g59
NtRp1487
(dp1488
g62
(dp1489
g70
I4
ssg71
g1483
sg64
(lp1490
S'Rocket 1.2.6'
p1491
asbasbasbag57
(g73
g59
NtRp1492
(dp1493
g62
(dp1494
sg71
g762
sg64
(lp1495
g57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
g82
g83
ssg71
g1492
sg64
(lp1499
S'web2py_path'
p1500
asbag57
(g78
g59
NtRp1501
(dp1502
g62
(dp1503
g89
g90
ssg71
g1492
sg64
(lp1504
S':'
asbag57
(g78
g59
NtRp1505
(dp1506
g62
(dp1507
sg71
g1492
sg64
(lp1508
g57
(g58
g59
NtRp1509
(dp1510
g62
(dp1511
g70
I4
ssg71
g1505
sg64
(lp1512
g809
asbasbasbag57
(g73
g59
NtRp1513
(dp1514
g62
(dp1515
sg71
g762
sg64
(lp1516
g57
(g78
g59
NtRp1517
(dp1518
g62
(dp1519
g82
g83
ssg71
g1513
sg64
(lp1520
S'web2py_version'
p1521
asbag57
(g78
g59
NtRp1522
(dp1523
g62
(dp1524
g89
g90
ssg71
g1513
sg64
(lp1525
S':'
asbag57
(g78
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g1513
sg64
(lp1529
g57
(g58
g59
NtRp1530
(dp1531
g62
(dp1532
g70
I4
ssg71
g1526
sg64
(lp1533
g57
(g66
g59
NtRp1534
(dp1535
g62
(dp1536
g70
I3
ssg71
Nsg64
(lp1537
g57
(g73
g59
NtRp1538
(dp1539
g62
(dp1540
sg71
g1534
sg64
(lp1541
g57
(g78
g59
NtRp1542
(dp1543
g62
(dp1544
sg71
g1538
sg64
(lp1545
g57
(g58
g59
NtRp1546
(dp1547
g62
(dp1548
g70
I3
ssg71
g1542
sg64
(lp1549
S'2'
asbasbasbag57
(g73
g59
NtRp1550
(dp1551
g62
(dp1552
sg71
g1534
sg64
(lp1553
g57
(g78
g59
NtRp1554
(dp1555
g62
(dp1556
sg71
g1550
sg64
(lp1557
g57
(g58
g59
NtRp1558
(dp1559
g62
(dp1560
g70
I3
ssg71
g1554
sg64
(lp1561
S'3'
asbasbasbag57
(g73
g59
NtRp1562
(dp1563
g62
(dp1564
sg71
g1534
sg64
(lp1565
g57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
sg71
g1562
sg64
(lp1569
g57
(g58
g59
NtRp1570
(dp1571
g62
(dp1572
g70
I3
ssg71
g1566
sg64
(lp1573
S'2'
asbasbasbag57
(g73
g59
NtRp1574
(dp1575
g62
(dp1576
sg71
g1534
sg64
(lp1577
g57
(g78
g59
NtRp1578
(dp1579
g62
(dp1580
sg71
g1574
sg64
(lp1581
g57
(g58
g59
NtRp1582
(dp1583
g62
(dp1584
g70
I3
ssg71
g1578
sg64
(lp1585
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1586
asbasbasbag57
(g73
g59
NtRp1587
(dp1588
g62
(dp1589
sg71
g1534
sg64
(lp1590
g57
(g78
g59
NtRp1591
(dp1592
g62
(dp1593
sg71
g1587
sg64
(lp1594
g57
(g58
g59
NtRp1595
(dp1596
g62
(dp1597
g70
I3
ssg71
g1591
sg64
(lp1598
S'stable'
p1599
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1600
(dp1601
g62
(dp1602
sg71
g762
sg64
(lp1603
g57
(g78
g59
NtRp1604
(dp1605
g62
(dp1606
g82
g83
ssg71
g1600
sg64
(lp1607
S'wsgi_errors'
p1608
asbag57
(g78
g59
NtRp1609
(dp1610
g62
(dp1611
g89
g90
ssg71
g1600
sg64
(lp1612
S':'
asbag57
(g78
g59
NtRp1613
(dp1614
g62
(dp1615
sg71
g1600
sg64
(lp1616
g57
(g58
g59
NtRp1617
(dp1618
g62
(dp1619
g70
I4
ssg71
g1613
sg64
(lp1620
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1621
asbasbasbag57
(g73
g59
NtRp1622
(dp1623
g62
(dp1624
sg71
g762
sg64
(lp1625
g57
(g78
g59
NtRp1626
(dp1627
g62
(dp1628
g82
g83
ssg71
g1622
sg64
(lp1629
S'wsgi_file_wrapper'
p1630
asbag57
(g78
g59
NtRp1631
(dp1632
g62
(dp1633
g89
g90
ssg71
g1622
sg64
(lp1634
S':'
asbag57
(g78
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g1622
sg64
(lp1638
g57
(g58
g59
NtRp1639
(dp1640
g62
(dp1641
g70
I4
ssg71
g1635
sg64
(lp1642
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1643
asbasbasbag57
(g73
g59
NtRp1644
(dp1645
g62
(dp1646
sg71
g762
sg64
(lp1647
g57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
g82
g83
ssg71
g1644
sg64
(lp1651
S'wsgi_input'
p1652
asbag57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
g89
g90
ssg71
g1644
sg64
(lp1656
S':'
asbag57
(g78
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g1644
sg64
(lp1660
g57
(g58
g59
NtRp1661
(dp1662
g62
(dp1663
g70
I4
ssg71
g1657
sg64
(lp1664
S'<socket._fileobject object at 0xb6267a2c>'
p1665
asbasbasbag57
(g73
g59
NtRp1666
(dp1667
g62
(dp1668
sg71
g762
sg64
(lp1669
g57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
g82
g83
ssg71
g1666
sg64
(lp1673
S'wsgi_multiprocess'
p1674
asbag57
(g78
g59
NtRp1675
(dp1676
g62
(dp1677
g89
g90
ssg71
g1666
sg64
(lp1678
S':'
asbag57
(g78
g59
NtRp1679
(dp1680
g62
(dp1681
sg71
g1666
sg64
(lp1682
g57
(g58
g59
NtRp1683
(dp1684
g62
(dp1685
g70
I4
ssg71
g1679
sg64
(lp1686
g100
asbasbasbag57
(g73
g59
NtRp1687
(dp1688
g62
(dp1689
sg71
g762
sg64
(lp1690
g57
(g78
g59
NtRp1691
(dp1692
g62
(dp1693
g82
g83
ssg71
g1687
sg64
(lp1694
S'wsgi_multithread'
p1695
asbag57
(g78
g59
NtRp1696
(dp1697
g62
(dp1698
g89
g90
ssg71
g1687
sg64
(lp1699
S':'
asbag57
(g78
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g1687
sg64
(lp1703
g57
(g58
g59
NtRp1704
(dp1705
g62
(dp1706
g70
I4
ssg71
g1700
sg64
(lp1707
S'True'
p1708
asbasbasbag57
(g73
g59
NtRp1709
(dp1710
g62
(dp1711
sg71
g762
sg64
(lp1712
g57
(g78
g59
NtRp1713
(dp1714
g62
(dp1715
g82
g83
ssg71
g1709
sg64
(lp1716
S'wsgi_run_once'
p1717
asbag57
(g78
g59
NtRp1718
(dp1719
g62
(dp1720
g89
g90
ssg71
g1709
sg64
(lp1721
S':'
asbag57
(g78
g59
NtRp1722
(dp1723
g62
(dp1724
sg71
g1709
sg64
(lp1725
g57
(g58
g59
NtRp1726
(dp1727
g62
(dp1728
g70
I4
ssg71
g1722
sg64
(lp1729
g100
asbasbasbag57
(g73
g59
NtRp1730
(dp1731
g62
(dp1732
sg71
g762
sg64
(lp1733
g57
(g78
g59
NtRp1734
(dp1735
g62
(dp1736
g82
g83
ssg71
g1730
sg64
(lp1737
S'wsgi_url_scheme'
p1738
asbag57
(g78
g59
NtRp1739
(dp1740
g62
(dp1741
g89
g90
ssg71
g1730
sg64
(lp1742
S':'
asbag57
(g78
g59
NtRp1743
(dp1744
g62
(dp1745
sg71
g1730
sg64
(lp1746
g57
(g58
g59
NtRp1747
(dp1748
g62
(dp1749
g70
I4
ssg71
g1743
sg64
(lp1750
S'http'
p1751
asbasbasbag57
(g73
g59
NtRp1752
(dp1753
g62
(dp1754
sg71
g762
sg64
(lp1755
g57
(g78
g59
NtRp1756
(dp1757
g62
(dp1758
g82
g83
ssg71
g1752
sg64
(lp1759
S'wsgi_version'
p1760
asbag57
(g78
g59
NtRp1761
(dp1762
g62
(dp1763
g89
g90
ssg71
g1752
sg64
(lp1764
S':'
asbag57
(g78
g59
NtRp1765
(dp1766
g62
(dp1767
sg71
g1752
sg64
(lp1768
g57
(g58
g59
NtRp1769
(dp1770
g62
(dp1771
g70
I4
ssg71
g1765
sg64
(lp1772
g57
(g66
g59
NtRp1773
(dp1774
g62
(dp1775
g70
I3
ssg71
Nsg64
(lp1776
g57
(g73
g59
NtRp1777
(dp1778
g62
(dp1779
sg71
g1773
sg64
(lp1780
g57
(g78
g59
NtRp1781
(dp1782
g62
(dp1783
sg71
g1777
sg64
(lp1784
g57
(g58
g59
NtRp1785
(dp1786
g62
(dp1787
g70
I3
ssg71
g1781
sg64
(lp1788
S'1'
asbasbasbag57
(g73
g59
NtRp1789
(dp1790
g62
(dp1791
sg71
g1773
sg64
(lp1792
g57
(g78
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g1789
sg64
(lp1796
g57
(g58
g59
NtRp1797
(dp1798
g62
(dp1799
g70
I3
ssg71
g1793
sg64
(lp1800
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1801
(dp1802
g62
(dp1803
sg71
g67
sg64
(lp1804
g57
(g78
g59
NtRp1805
(dp1806
g62
(dp1807
g82
g83
ssg71
g1801
sg64
(lp1808
S'extension'
p1809
asbag57
(g78
g59
NtRp1810
(dp1811
g62
(dp1812
g89
g90
ssg71
g1801
sg64
(lp1813
S':'
asbag57
(g78
g59
NtRp1814
(dp1815
g62
(dp1816
sg71
g1801
sg64
(lp1817
g57
(g58
g59
NtRp1818
(dp1819
g62
(dp1820
g70
I5
ssg71
g1814
sg64
(lp1821
S'html'
p1822
asbasbasbag57
(g73
g59
NtRp1823
(dp1824
g62
(dp1825
sg71
g67
sg64
(lp1826
g57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
g82
g83
ssg71
g1823
sg64
(lp1830
S'folder'
p1831
asbag57
(g78
g59
NtRp1832
(dp1833
g62
(dp1834
g89
g90
ssg71
g1823
sg64
(lp1835
S':'
asbag57
(g78
g59
NtRp1836
(dp1837
g62
(dp1838
sg71
g1823
sg64
(lp1839
g57
(g58
g59
NtRp1840
(dp1841
g62
(dp1842
g70
I5
ssg71
g1836
sg64
(lp1843
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1844
asbasbasbag57
(g73
g59
NtRp1845
(dp1846
g62
(dp1847
sg71
g67
sg64
(lp1848
g57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
g82
g83
ssg71
g1845
sg64
(lp1852
S'function'
p1853
asbag57
(g78
g59
NtRp1854
(dp1855
g62
(dp1856
g89
g90
ssg71
g1845
sg64
(lp1857
S':'
asbag57
(g78
g59
NtRp1858
(dp1859
g62
(dp1860
sg71
g1845
sg64
(lp1861
g57
(g58
g59
NtRp1862
(dp1863
g62
(dp1864
g70
I5
ssg71
g1858
sg64
(lp1865
S'list_all_dev_projects'
p1866
asbasbasbag57
(g73
g59
NtRp1867
(dp1868
g62
(dp1869
sg71
g67
sg64
(lp1870
g57
(g78
g59
NtRp1871
(dp1872
g62
(dp1873
g82
g83
ssg71
g1867
sg64
(lp1874
S'get_vars'
p1875
asbag57
(g78
g59
NtRp1876
(dp1877
g62
(dp1878
g89
g90
ssg71
g1867
sg64
(lp1879
S':'
asbag57
(g78
g59
NtRp1880
(dp1881
g62
(dp1882
sg71
g1867
sg64
(lp1883
g57
(g58
g59
NtRp1884
(dp1885
g62
(dp1886
g70
I5
ssg71
g1880
sg64
(lp1887
g57
(g66
g59
NtRp1888
(dp1889
g62
(dp1890
g70
I4
ssg71
Nsg64
(lp1891
sbasbasbasbag57
(g73
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g67
sg64
(lp1895
g57
(g78
g59
NtRp1896
(dp1897
g62
(dp1898
g82
g83
ssg71
g1892
sg64
(lp1899
S'global_settings'
p1900
asbag57
(g78
g59
NtRp1901
(dp1902
g62
(dp1903
g89
g90
ssg71
g1892
sg64
(lp1904
S':'
asbag57
(g78
g59
NtRp1905
(dp1906
g62
(dp1907
sg71
g1892
sg64
(lp1908
g57
(g58
g59
NtRp1909
(dp1910
g62
(dp1911
g70
I5
ssg71
g1905
sg64
(lp1912
g57
(g66
g59
NtRp1913
(dp1914
g62
(dp1915
g70
I4
ssg71
Nsg64
(lp1916
g57
(g73
g59
NtRp1917
(dp1918
g62
(dp1919
sg71
g1913
sg64
(lp1920
g57
(g78
g59
NtRp1921
(dp1922
g62
(dp1923
g82
g83
ssg71
g1917
sg64
(lp1924
g774
asbag57
(g78
g59
NtRp1925
(dp1926
g62
(dp1927
g89
g90
ssg71
g1917
sg64
(lp1928
S':'
asbag57
(g78
g59
NtRp1929
(dp1930
g62
(dp1931
sg71
g1917
sg64
(lp1932
g57
(g58
g59
NtRp1933
(dp1934
g62
(dp1935
g70
I4
ssg71
g1929
sg64
(lp1936
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1937
asbasbasbag57
(g73
g59
NtRp1938
(dp1939
g62
(dp1940
sg71
g1913
sg64
(lp1941
g57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
g82
g83
ssg71
g1938
sg64
(lp1945
g796
asbag57
(g78
g59
NtRp1946
(dp1947
g62
(dp1948
g89
g90
ssg71
g1938
sg64
(lp1949
S':'
asbag57
(g78
g59
NtRp1950
(dp1951
g62
(dp1952
sg71
g1938
sg64
(lp1953
g57
(g58
g59
NtRp1954
(dp1955
g62
(dp1956
g70
I4
ssg71
g1950
sg64
(lp1957
g809
asbasbasbag57
(g73
g59
NtRp1958
(dp1959
g62
(dp1960
sg71
g1913
sg64
(lp1961
g57
(g78
g59
NtRp1962
(dp1963
g62
(dp1964
g82
g83
ssg71
g1958
sg64
(lp1965
g818
asbag57
(g78
g59
NtRp1966
(dp1967
g62
(dp1968
g89
g90
ssg71
g1958
sg64
(lp1969
S':'
asbag57
(g78
g59
NtRp1970
(dp1971
g62
(dp1972
sg71
g1958
sg64
(lp1973
g57
(g58
g59
NtRp1974
(dp1975
g62
(dp1976
g70
I4
ssg71
g1970
sg64
(lp1977
g57
(g66
g59
NtRp1978
(dp1979
g62
(dp1980
g70
I3
ssg71
Nsg64
(lp1981
sbasbasbasbag57
(g73
g59
NtRp1982
(dp1983
g62
(dp1984
sg71
g1913
sg64
(lp1985
g57
(g78
g59
NtRp1986
(dp1987
g62
(dp1988
g82
g83
ssg71
g1982
sg64
(lp1989
g843
asbag57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
g89
g90
ssg71
g1982
sg64
(lp1993
S':'
asbag57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
sg71
g1982
sg64
(lp1997
g57
(g58
g59
NtRp1998
(dp1999
g62
(dp2000
g70
I4
ssg71
g1994
sg64
(lp2001
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2002
asbasbasbag57
(g73
g59
NtRp2003
(dp2004
g62
(dp2005
sg71
g1913
sg64
(lp2006
g57
(g78
g59
NtRp2007
(dp2008
g62
(dp2009
g82
g83
ssg71
g2003
sg64
(lp2010
g865
asbag57
(g78
g59
NtRp2011
(dp2012
g62
(dp2013
g89
g90
ssg71
g2003
sg64
(lp2014
S':'
asbag57
(g78
g59
NtRp2015
(dp2016
g62
(dp2017
sg71
g2003
sg64
(lp2018
g57
(g58
g59
NtRp2019
(dp2020
g62
(dp2021
g70
I4
ssg71
g2015
sg64
(lp2022
S'set([])'
p2023
asbasbasbag57
(g73
g59
NtRp2024
(dp2025
g62
(dp2026
sg71
g1913
sg64
(lp2027
g57
(g78
g59
NtRp2028
(dp2029
g62
(dp2030
g82
g83
ssg71
g2024
sg64
(lp2031
g887
asbag57
(g78
g59
NtRp2032
(dp2033
g62
(dp2034
g89
g90
ssg71
g2024
sg64
(lp2035
S':'
asbag57
(g78
g59
NtRp2036
(dp2037
g62
(dp2038
sg71
g2024
sg64
(lp2039
g57
(g58
g59
NtRp2040
(dp2041
g62
(dp2042
g70
I4
ssg71
g2036
sg64
(lp2043
g100
asbasbasbag57
(g73
g59
NtRp2044
(dp2045
g62
(dp2046
sg71
g1913
sg64
(lp2047
g57
(g78
g59
NtRp2048
(dp2049
g62
(dp2050
g82
g83
ssg71
g2044
sg64
(lp2051
g908
asbag57
(g78
g59
NtRp2052
(dp2053
g62
(dp2054
g89
g90
ssg71
g2044
sg64
(lp2055
S':'
asbag57
(g78
g59
NtRp2056
(dp2057
g62
(dp2058
sg71
g2044
sg64
(lp2059
g57
(g58
g59
NtRp2060
(dp2061
g62
(dp2062
g70
I4
ssg71
g2056
sg64
(lp2063
g921
asbasbasbag57
(g73
g59
NtRp2064
(dp2065
g62
(dp2066
sg71
g1913
sg64
(lp2067
g57
(g78
g59
NtRp2068
(dp2069
g62
(dp2070
g82
g83
ssg71
g2064
sg64
(lp2071
g1128
asbag57
(g78
g59
NtRp2072
(dp2073
g62
(dp2074
g89
g90
ssg71
g2064
sg64
(lp2075
S':'
asbag57
(g78
g59
NtRp2076
(dp2077
g62
(dp2078
sg71
g2064
sg64
(lp2079
g57
(g58
g59
NtRp2080
(dp2081
g62
(dp2082
g70
I4
ssg71
g2076
sg64
(lp2083
g100
asbasbasbag57
(g73
g59
NtRp2084
(dp2085
g62
(dp2086
sg71
g1913
sg64
(lp2087
g57
(g78
g59
NtRp2088
(dp2089
g62
(dp2090
g82
g83
ssg71
g2084
sg64
(lp2091
g1149
asbag57
(g78
g59
NtRp2092
(dp2093
g62
(dp2094
g89
g90
ssg71
g2084
sg64
(lp2095
S':'
asbag57
(g78
g59
NtRp2096
(dp2097
g62
(dp2098
sg71
g2084
sg64
(lp2099
g57
(g58
g59
NtRp2100
(dp2101
g62
(dp2102
g70
I4
ssg71
g2096
sg64
(lp2103
g100
asbasbasbag57
(g73
g59
NtRp2104
(dp2105
g62
(dp2106
sg71
g1913
sg64
(lp2107
g57
(g78
g59
NtRp2108
(dp2109
g62
(dp2110
g82
g83
ssg71
g2104
sg64
(lp2111
g1170
asbag57
(g78
g59
NtRp2112
(dp2113
g62
(dp2114
g89
g90
ssg71
g2104
sg64
(lp2115
S':'
asbag57
(g78
g59
NtRp2116
(dp2117
g62
(dp2118
sg71
g2104
sg64
(lp2119
g57
(g58
g59
NtRp2120
(dp2121
g62
(dp2122
g70
I4
ssg71
g2116
sg64
(lp2123
g57
(g66
g59
NtRp2124
(dp2125
g62
(dp2126
g70
I3
ssg71
Nsg64
(lp2127
g57
(g73
g59
NtRp2128
(dp2129
g62
(dp2130
sg71
g2124
sg64
(lp2131
g57
(g78
g59
NtRp2132
(dp2133
g62
(dp2134
sg71
g2128
sg64
(lp2135
g57
(g58
g59
NtRp2136
(dp2137
g62
(dp2138
g70
I3
ssg71
g2132
sg64
(lp2139
g1199
asbasbasbag57
(g73
g59
NtRp2140
(dp2141
g62
(dp2142
sg71
g2124
sg64
(lp2143
g57
(g78
g59
NtRp2144
(dp2145
g62
(dp2146
sg71
g2140
sg64
(lp2147
g57
(g58
g59
NtRp2148
(dp2149
g62
(dp2150
g70
I3
ssg71
g2144
sg64
(lp2151
g1212
asbasbasbag57
(g73
g59
NtRp2152
(dp2153
g62
(dp2154
sg71
g2124
sg64
(lp2155
g57
(g78
g59
NtRp2156
(dp2157
g62
(dp2158
sg71
g2152
sg64
(lp2159
g57
(g58
g59
NtRp2160
(dp2161
g62
(dp2162
g70
I3
ssg71
g2156
sg64
(lp2163
g1225
asbasbasbag57
(g73
g59
NtRp2164
(dp2165
g62
(dp2166
sg71
g2124
sg64
(lp2167
g57
(g78
g59
NtRp2168
(dp2169
g62
(dp2170
sg71
g2164
sg64
(lp2171
g57
(g58
g59
NtRp2172
(dp2173
g62
(dp2174
g70
I3
ssg71
g2168
sg64
(lp2175
g1238
asbasbasbag57
(g73
g59
NtRp2176
(dp2177
g62
(dp2178
sg71
g2124
sg64
(lp2179
g57
(g78
g59
NtRp2180
(dp2181
g62
(dp2182
sg71
g2176
sg64
(lp2183
g57
(g58
g59
NtRp2184
(dp2185
g62
(dp2186
g70
I3
ssg71
g2180
sg64
(lp2187
g1251
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2188
(dp2189
g62
(dp2190
sg71
g1913
sg64
(lp2191
g57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
g82
g83
ssg71
g2188
sg64
(lp2195
g1521
asbag57
(g78
g59
NtRp2196
(dp2197
g62
(dp2198
g89
g90
ssg71
g2188
sg64
(lp2199
S':'
asbag57
(g78
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g2188
sg64
(lp2203
g57
(g58
g59
NtRp2204
(dp2205
g62
(dp2206
g70
I4
ssg71
g2200
sg64
(lp2207
g57
(g66
g59
NtRp2208
(dp2209
g62
(dp2210
g70
I3
ssg71
Nsg64
(lp2211
g57
(g73
g59
NtRp2212
(dp2213
g62
(dp2214
sg71
g2208
sg64
(lp2215
g57
(g78
g59
NtRp2216
(dp2217
g62
(dp2218
sg71
g2212
sg64
(lp2219
g57
(g58
g59
NtRp2220
(dp2221
g62
(dp2222
g70
I3
ssg71
g2216
sg64
(lp2223
S'2'
asbasbasbag57
(g73
g59
NtRp2224
(dp2225
g62
(dp2226
sg71
g2208
sg64
(lp2227
g57
(g78
g59
NtRp2228
(dp2229
g62
(dp2230
sg71
g2224
sg64
(lp2231
g57
(g58
g59
NtRp2232
(dp2233
g62
(dp2234
g70
I3
ssg71
g2228
sg64
(lp2235
S'3'
asbasbasbag57
(g73
g59
NtRp2236
(dp2237
g62
(dp2238
sg71
g2208
sg64
(lp2239
g57
(g78
g59
NtRp2240
(dp2241
g62
(dp2242
sg71
g2236
sg64
(lp2243
g57
(g58
g59
NtRp2244
(dp2245
g62
(dp2246
g70
I3
ssg71
g2240
sg64
(lp2247
S'2'
asbasbasbag57
(g73
g59
NtRp2248
(dp2249
g62
(dp2250
sg71
g2208
sg64
(lp2251
g57
(g78
g59
NtRp2252
(dp2253
g62
(dp2254
sg71
g2248
sg64
(lp2255
g57
(g58
g59
NtRp2256
(dp2257
g62
(dp2258
g70
I3
ssg71
g2252
sg64
(lp2259
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2260
asbasbasbag57
(g73
g59
NtRp2261
(dp2262
g62
(dp2263
sg71
g2208
sg64
(lp2264
g57
(g78
g59
NtRp2265
(dp2266
g62
(dp2267
sg71
g2261
sg64
(lp2268
g57
(g58
g59
NtRp2269
(dp2270
g62
(dp2271
g70
I3
ssg71
g2265
sg64
(lp2272
g1599
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2273
(dp2274
g62
(dp2275
sg71
g67
sg64
(lp2276
g57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
g82
g83
ssg71
g2273
sg64
(lp2280
S'is_https'
p2281
asbag57
(g78
g59
NtRp2282
(dp2283
g62
(dp2284
g89
g90
ssg71
g2273
sg64
(lp2285
S':'
asbag57
(g78
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g2273
sg64
(lp2289
g57
(g58
g59
NtRp2290
(dp2291
g62
(dp2292
g70
I5
ssg71
g2286
sg64
(lp2293
g100
asbasbasbag57
(g73
g59
NtRp2294
(dp2295
g62
(dp2296
sg71
g67
sg64
(lp2297
g57
(g78
g59
NtRp2298
(dp2299
g62
(dp2300
g82
g83
ssg71
g2294
sg64
(lp2301
S'is_local'
p2302
asbag57
(g78
g59
NtRp2303
(dp2304
g62
(dp2305
g89
g90
ssg71
g2294
sg64
(lp2306
S':'
asbag57
(g78
g59
NtRp2307
(dp2308
g62
(dp2309
sg71
g2294
sg64
(lp2310
g57
(g58
g59
NtRp2311
(dp2312
g62
(dp2313
g70
I5
ssg71
g2307
sg64
(lp2314
g1708
asbasbasbag57
(g73
g59
NtRp2315
(dp2316
g62
(dp2317
sg71
g67
sg64
(lp2318
g57
(g78
g59
NtRp2319
(dp2320
g62
(dp2321
g82
g83
ssg71
g2315
sg64
(lp2322
S'is_restful'
p2323
asbag57
(g78
g59
NtRp2324
(dp2325
g62
(dp2326
g89
g90
ssg71
g2315
sg64
(lp2327
S':'
asbag57
(g78
g59
NtRp2328
(dp2329
g62
(dp2330
sg71
g2315
sg64
(lp2331
g57
(g58
g59
NtRp2332
(dp2333
g62
(dp2334
g70
I5
ssg71
g2328
sg64
(lp2335
g100
asbasbasbag57
(g73
g59
NtRp2336
(dp2337
g62
(dp2338
sg71
g67
sg64
(lp2339
g57
(g78
g59
NtRp2340
(dp2341
g62
(dp2342
g82
g83
ssg71
g2336
sg64
(lp2343
S'now'
p2344
asbag57
(g78
g59
NtRp2345
(dp2346
g62
(dp2347
g89
g90
ssg71
g2336
sg64
(lp2348
S':'
asbag57
(g78
g59
NtRp2349
(dp2350
g62
(dp2351
sg71
g2336
sg64
(lp2352
g57
(g58
g59
NtRp2353
(dp2354
g62
(dp2355
g70
I5
ssg71
g2349
sg64
(lp2356
S'datetime.datetime(2013, 2, 24, 23, 35, 24, 413639)'
p2357
asbasbasbag57
(g73
g59
NtRp2358
(dp2359
g62
(dp2360
sg71
g67
sg64
(lp2361
g57
(g78
g59
NtRp2362
(dp2363
g62
(dp2364
g82
g83
ssg71
g2358
sg64
(lp2365
S'post_vars'
p2366
asbag57
(g78
g59
NtRp2367
(dp2368
g62
(dp2369
g89
g90
ssg71
g2358
sg64
(lp2370
S':'
asbag57
(g78
g59
NtRp2371
(dp2372
g62
(dp2373
sg71
g2358
sg64
(lp2374
g57
(g58
g59
NtRp2375
(dp2376
g62
(dp2377
g70
I5
ssg71
g2371
sg64
(lp2378
g57
(g66
g59
NtRp2379
(dp2380
g62
(dp2381
g70
I4
ssg71
Nsg64
(lp2382
sbasbasbasbag57
(g73
g59
NtRp2383
(dp2384
g62
(dp2385
sg71
g67
sg64
(lp2386
g57
(g78
g59
NtRp2387
(dp2388
g62
(dp2389
g82
g83
ssg71
g2383
sg64
(lp2390
S'raw_args'
p2391
asbag57
(g78
g59
NtRp2392
(dp2393
g62
(dp2394
g89
g90
ssg71
g2383
sg64
(lp2395
S':'
asbag57
(g78
g59
NtRp2396
(dp2397
g62
(dp2398
sg71
g2383
sg64
(lp2399
g57
(g58
g59
NtRp2400
(dp2401
g62
(dp2402
g70
I5
ssg71
g2396
sg64
(lp2403
S'project/experiment.project/1/sample.experiment/1/view/sample/3'
p2404
asbasbasbag57
(g73
g59
NtRp2405
(dp2406
g62
(dp2407
sg71
g67
sg64
(lp2408
g57
(g78
g59
NtRp2409
(dp2410
g62
(dp2411
g82
g83
ssg71
g2405
sg64
(lp2412
S'raw_extension'
p2413
asbag57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g89
g90
ssg71
g2405
sg64
(lp2417
S':'
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
sg71
g2405
sg64
(lp2421
g57
(g58
g59
NtRp2422
(dp2423
g62
(dp2424
g70
I5
ssg71
g2418
sg64
(lp2425
S'None'
p2426
asbasbasbag57
(g73
g59
NtRp2427
(dp2428
g62
(dp2429
sg71
g67
sg64
(lp2430
g57
(g78
g59
NtRp2431
(dp2432
g62
(dp2433
g82
g83
ssg71
g2427
sg64
(lp2434
S'url'
p2435
asbag57
(g78
g59
NtRp2436
(dp2437
g62
(dp2438
g89
g90
ssg71
g2427
sg64
(lp2439
S':'
asbag57
(g78
g59
NtRp2440
(dp2441
g62
(dp2442
sg71
g2427
sg64
(lp2443
g57
(g58
g59
NtRp2444
(dp2445
g62
(dp2446
g70
I5
ssg71
g2440
sg64
(lp2447
g1273
asbasbasbag57
(g73
g59
NtRp2448
(dp2449
g62
(dp2450
sg71
g67
sg64
(lp2451
g57
(g78
g59
NtRp2452
(dp2453
g62
(dp2454
g82
g83
ssg71
g2448
sg64
(lp2455
S'utcnow'
p2456
asbag57
(g78
g59
NtRp2457
(dp2458
g62
(dp2459
g89
g90
ssg71
g2448
sg64
(lp2460
S':'
asbag57
(g78
g59
NtRp2461
(dp2462
g62
(dp2463
sg71
g2448
sg64
(lp2464
g57
(g58
g59
NtRp2465
(dp2466
g62
(dp2467
g70
I5
ssg71
g2461
sg64
(lp2468
S'datetime.datetime(2013, 2, 24, 18, 5, 24, 413761)'
p2469
asbasbasbag57
(g73
g59
NtRp2470
(dp2471
g62
(dp2472
sg71
g67
sg64
(lp2473
g57
(g78
g59
NtRp2474
(dp2475
g62
(dp2476
g82
g83
ssg71
g2470
sg64
(lp2477
S'uuid'
p2478
asbag57
(g78
g59
NtRp2479
(dp2480
g62
(dp2481
g89
g90
ssg71
g2470
sg64
(lp2482
S':'
asbag57
(g78
g59
NtRp2483
(dp2484
g62
(dp2485
sg71
g2470
sg64
(lp2486
g57
(g58
g59
NtRp2487
(dp2488
g62
(dp2489
g70
I5
ssg71
g2483
sg64
(lp2490
S'DEV_bootstrap_ch/127.0.0.1.2013-02-24.23-35-24.0fb30801-f5f0-4286-bcc2-d097ef0c51c9'
p2491
asbasbasbag57
(g73
g59
NtRp2492
(dp2493
g62
(dp2494
sg71
g67
sg64
(lp2495
g57
(g78
g59
NtRp2496
(dp2497
g62
(dp2498
g82
g83
ssg71
g2492
sg64
(lp2499
S'vars'
p2500
asbag57
(g78
g59
NtRp2501
(dp2502
g62
(dp2503
g89
g90
ssg71
g2492
sg64
(lp2504
S':'
asbag57
(g78
g59
NtRp2505
(dp2506
g62
(dp2507
sg71
g2492
sg64
(lp2508
g57
(g58
g59
NtRp2509
(dp2510
g62
(dp2511
g70
I5
ssg71
g2505
sg64
(lp2512
g57
(g66
g59
NtRp2513
(dp2514
g62
(dp2515
g70
I4
ssg71
Nsg64
(lp2516
sbasbasbasbag57
(g73
g59
NtRp2517
(dp2518
g62
(dp2519
sg71
g67
sg64
(lp2520
g57
(g78
g59
NtRp2521
(dp2522
g62
(dp2523
g82
g83
ssg71
g2517
sg64
(lp2524
S'wsgi'
p2525
asbag57
(g78
g59
NtRp2526
(dp2527
g62
(dp2528
g89
g90
ssg71
g2517
sg64
(lp2529
S':'
asbag57
(g78
g59
NtRp2530
(dp2531
g62
(dp2532
sg71
g2517
sg64
(lp2533
g57
(g58
g59
NtRp2534
(dp2535
g62
(dp2536
g70
I5
ssg71
g2530
sg64
(lp2537
g57
(g66
g59
NtRp2538
(dp2539
g62
(dp2540
g70
I4
ssg71
Nsg64
(lp2541
g57
(g73
g59
NtRp2542
(dp2543
g62
(dp2544
sg71
g2538
sg64
(lp2545
g57
(g78
g59
NtRp2546
(dp2547
g62
(dp2548
g82
g83
ssg71
g2542
sg64
(lp2549
S'environ'
p2550
asbag57
(g78
g59
NtRp2551
(dp2552
g62
(dp2553
g89
g90
ssg71
g2542
sg64
(lp2554
S':'
asbag57
(g78
g59
NtRp2555
(dp2556
g62
(dp2557
sg71
g2542
sg64
(lp2558
g57
(g58
g59
NtRp2559
(dp2560
g62
(dp2561
g70
I4
ssg71
g2555
sg64
(lp2562
g57
(g66
g59
NtRp2563
(dp2564
g62
(dp2565
g70
I3
ssg71
Nsg64
(lp2566
g57
(g73
g59
NtRp2567
(dp2568
g62
(dp2569
sg71
g2563
sg64
(lp2570
g57
(g78
g59
NtRp2571
(dp2572
g62
(dp2573
g82
g83
ssg71
g2567
sg64
(lp2574
S'HTTP_ACCEPT'
p2575
asbag57
(g78
g59
NtRp2576
(dp2577
g62
(dp2578
g89
g90
ssg71
g2567
sg64
(lp2579
S':'
asbag57
(g78
g59
NtRp2580
(dp2581
g62
(dp2582
sg71
g2567
sg64
(lp2583
g57
(g58
g59
NtRp2584
(dp2585
g62
(dp2586
g70
I3
ssg71
g2580
sg64
(lp2587
g943
asbasbasbag57
(g73
g59
NtRp2588
(dp2589
g62
(dp2590
sg71
g2563
sg64
(lp2591
g57
(g78
g59
NtRp2592
(dp2593
g62
(dp2594
g82
g83
ssg71
g2588
sg64
(lp2595
S'HTTP_ACCEPT_CHARSET'
p2596
asbag57
(g78
g59
NtRp2597
(dp2598
g62
(dp2599
g89
g90
ssg71
g2588
sg64
(lp2600
S':'
asbag57
(g78
g59
NtRp2601
(dp2602
g62
(dp2603
sg71
g2588
sg64
(lp2604
g57
(g58
g59
NtRp2605
(dp2606
g62
(dp2607
g70
I3
ssg71
g2601
sg64
(lp2608
g965
asbasbasbag57
(g73
g59
NtRp2609
(dp2610
g62
(dp2611
sg71
g2563
sg64
(lp2612
g57
(g78
g59
NtRp2613
(dp2614
g62
(dp2615
g82
g83
ssg71
g2609
sg64
(lp2616
S'HTTP_ACCEPT_ENCODING'
p2617
asbag57
(g78
g59
NtRp2618
(dp2619
g62
(dp2620
g89
g90
ssg71
g2609
sg64
(lp2621
S':'
asbag57
(g78
g59
NtRp2622
(dp2623
g62
(dp2624
sg71
g2609
sg64
(lp2625
g57
(g58
g59
NtRp2626
(dp2627
g62
(dp2628
g70
I3
ssg71
g2622
sg64
(lp2629
g987
asbasbasbag57
(g73
g59
NtRp2630
(dp2631
g62
(dp2632
sg71
g2563
sg64
(lp2633
g57
(g78
g59
NtRp2634
(dp2635
g62
(dp2636
g82
g83
ssg71
g2630
sg64
(lp2637
S'HTTP_ACCEPT_LANGUAGE'
p2638
asbag57
(g78
g59
NtRp2639
(dp2640
g62
(dp2641
g89
g90
ssg71
g2630
sg64
(lp2642
S':'
asbag57
(g78
g59
NtRp2643
(dp2644
g62
(dp2645
sg71
g2630
sg64
(lp2646
g57
(g58
g59
NtRp2647
(dp2648
g62
(dp2649
g70
I3
ssg71
g2643
sg64
(lp2650
g1009
asbasbasbag57
(g73
g59
NtRp2651
(dp2652
g62
(dp2653
sg71
g2563
sg64
(lp2654
g57
(g78
g59
NtRp2655
(dp2656
g62
(dp2657
g82
g83
ssg71
g2651
sg64
(lp2658
S'HTTP_CONNECTION'
p2659
asbag57
(g78
g59
NtRp2660
(dp2661
g62
(dp2662
g89
g90
ssg71
g2651
sg64
(lp2663
S':'
asbag57
(g78
g59
NtRp2664
(dp2665
g62
(dp2666
sg71
g2651
sg64
(lp2667
g57
(g58
g59
NtRp2668
(dp2669
g62
(dp2670
g70
I3
ssg71
g2664
sg64
(lp2671
g1031
asbasbasbag57
(g73
g59
NtRp2672
(dp2673
g62
(dp2674
sg71
g2563
sg64
(lp2675
g57
(g78
g59
NtRp2676
(dp2677
g62
(dp2678
g82
g83
ssg71
g2672
sg64
(lp2679
S'HTTP_COOKIE'
p2680
asbag57
(g78
g59
NtRp2681
(dp2682
g62
(dp2683
g89
g90
ssg71
g2672
sg64
(lp2684
S':'
asbag57
(g78
g59
NtRp2685
(dp2686
g62
(dp2687
sg71
g2672
sg64
(lp2688
g57
(g58
g59
NtRp2689
(dp2690
g62
(dp2691
g70
I3
ssg71
g2685
sg64
(lp2692
g1053
asbasbasbag57
(g73
g59
NtRp2693
(dp2694
g62
(dp2695
sg71
g2563
sg64
(lp2696
g57
(g78
g59
NtRp2697
(dp2698
g62
(dp2699
g82
g83
ssg71
g2693
sg64
(lp2700
S'HTTP_HOST'
p2701
asbag57
(g78
g59
NtRp2702
(dp2703
g62
(dp2704
g89
g90
ssg71
g2693
sg64
(lp2705
S':'
asbag57
(g78
g59
NtRp2706
(dp2707
g62
(dp2708
sg71
g2693
sg64
(lp2709
g57
(g58
g59
NtRp2710
(dp2711
g62
(dp2712
g70
I3
ssg71
g2706
sg64
(lp2713
g1075
asbasbasbag57
(g73
g59
NtRp2714
(dp2715
g62
(dp2716
sg71
g2563
sg64
(lp2717
g57
(g78
g59
NtRp2718
(dp2719
g62
(dp2720
g82
g83
ssg71
g2714
sg64
(lp2721
S'HTTP_REFERER'
p2722
asbag57
(g78
g59
NtRp2723
(dp2724
g62
(dp2725
g89
g90
ssg71
g2714
sg64
(lp2726
S':'
asbag57
(g78
g59
NtRp2727
(dp2728
g62
(dp2729
sg71
g2714
sg64
(lp2730
g57
(g58
g59
NtRp2731
(dp2732
g62
(dp2733
g70
I3
ssg71
g2727
sg64
(lp2734
g1097
asbasbasbag57
(g73
g59
NtRp2735
(dp2736
g62
(dp2737
sg71
g2563
sg64
(lp2738
g57
(g78
g59
NtRp2739
(dp2740
g62
(dp2741
g82
g83
ssg71
g2735
sg64
(lp2742
S'HTTP_USER_AGENT'
p2743
asbag57
(g78
g59
NtRp2744
(dp2745
g62
(dp2746
g89
g90
ssg71
g2735
sg64
(lp2747
S':'
asbag57
(g78
g59
NtRp2748
(dp2749
g62
(dp2750
sg71
g2735
sg64
(lp2751
g57
(g58
g59
NtRp2752
(dp2753
g62
(dp2754
g70
I3
ssg71
g2748
sg64
(lp2755
g1119
asbasbasbag57
(g73
g59
NtRp2756
(dp2757
g62
(dp2758
sg71
g2563
sg64
(lp2759
g57
(g78
g59
NtRp2760
(dp2761
g62
(dp2762
g82
g83
ssg71
g2756
sg64
(lp2763
S'PATH_INFO'
p2764
asbag57
(g78
g59
NtRp2765
(dp2766
g62
(dp2767
g89
g90
ssg71
g2756
sg64
(lp2768
S':'
asbag57
(g78
g59
NtRp2769
(dp2770
g62
(dp2771
sg71
g2756
sg64
(lp2772
g57
(g58
g59
NtRp2773
(dp2774
g62
(dp2775
g70
I3
ssg71
g2769
sg64
(lp2776
g1273
asbasbasbag57
(g73
g59
NtRp2777
(dp2778
g62
(dp2779
sg71
g2563
sg64
(lp2780
g57
(g78
g59
NtRp2781
(dp2782
g62
(dp2783
g82
g83
ssg71
g2777
sg64
(lp2784
S'QUERY_STRING'
p2785
asbag57
(g78
g59
NtRp2786
(dp2787
g62
(dp2788
g89
g90
ssg71
g2777
sg64
(lp2789
S':'
asbag57
(g78
g59
NtRp2790
(dp2791
g62
(dp2792
sg71
g2777
sg64
(lp2793
g57
(g58
g59
NtRp2794
(dp2795
g62
(dp2796
g70
I3
ssg71
g2790
sg64
(lp2797
g1295
asbasbasbag57
(g73
g59
NtRp2798
(dp2799
g62
(dp2800
sg71
g2563
sg64
(lp2801
g57
(g78
g59
NtRp2802
(dp2803
g62
(dp2804
g82
g83
ssg71
g2798
sg64
(lp2805
S'REMOTE_ADDR'
p2806
asbag57
(g78
g59
NtRp2807
(dp2808
g62
(dp2809
g89
g90
ssg71
g2798
sg64
(lp2810
S':'
asbag57
(g78
g59
NtRp2811
(dp2812
g62
(dp2813
sg71
g2798
sg64
(lp2814
g57
(g58
g59
NtRp2815
(dp2816
g62
(dp2817
g70
I3
ssg71
g2811
sg64
(lp2818
g313
asbasbasbag57
(g73
g59
NtRp2819
(dp2820
g62
(dp2821
sg71
g2563
sg64
(lp2822
g57
(g78
g59
NtRp2823
(dp2824
g62
(dp2825
g82
g83
ssg71
g2819
sg64
(lp2826
S'REMOTE_PORT'
p2827
asbag57
(g78
g59
NtRp2828
(dp2829
g62
(dp2830
g89
g90
ssg71
g2819
sg64
(lp2831
S':'
asbag57
(g78
g59
NtRp2832
(dp2833
g62
(dp2834
sg71
g2819
sg64
(lp2835
g57
(g58
g59
NtRp2836
(dp2837
g62
(dp2838
g70
I3
ssg71
g2832
sg64
(lp2839
g1338
asbasbasbag57
(g73
g59
NtRp2840
(dp2841
g62
(dp2842
sg71
g2563
sg64
(lp2843
g57
(g78
g59
NtRp2844
(dp2845
g62
(dp2846
g82
g83
ssg71
g2840
sg64
(lp2847
S'REQUEST_METHOD'
p2848
asbag57
(g78
g59
NtRp2849
(dp2850
g62
(dp2851
g89
g90
ssg71
g2840
sg64
(lp2852
S':'
asbag57
(g78
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2840
sg64
(lp2856
g57
(g58
g59
NtRp2857
(dp2858
g62
(dp2859
g70
I3
ssg71
g2853
sg64
(lp2860
g1360
asbasbasbag57
(g73
g59
NtRp2861
(dp2862
g62
(dp2863
sg71
g2563
sg64
(lp2864
g57
(g78
g59
NtRp2865
(dp2866
g62
(dp2867
g82
g83
ssg71
g2861
sg64
(lp2868
S'REQUEST_URI'
p2869
asbag57
(g78
g59
NtRp2870
(dp2871
g62
(dp2872
g89
g90
ssg71
g2861
sg64
(lp2873
S':'
asbag57
(g78
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2861
sg64
(lp2877
g57
(g58
g59
NtRp2878
(dp2879
g62
(dp2880
g70
I3
ssg71
g2874
sg64
(lp2881
g1382
asbasbasbag57
(g73
g59
NtRp2882
(dp2883
g62
(dp2884
sg71
g2563
sg64
(lp2885
g57
(g78
g59
NtRp2886
(dp2887
g62
(dp2888
g82
g83
ssg71
g2882
sg64
(lp2889
S'SCRIPT_NAME'
p2890
asbag57
(g78
g59
NtRp2891
(dp2892
g62
(dp2893
g89
g90
ssg71
g2882
sg64
(lp2894
S':'
asbag57
(g78
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2882
sg64
(lp2898
g57
(g58
g59
NtRp2899
(dp2900
g62
(dp2901
g70
I3
ssg71
g2895
sg64
(lp2902
S''
asbasbasbag57
(g73
g59
NtRp2903
(dp2904
g62
(dp2905
sg71
g2563
sg64
(lp2906
g57
(g78
g59
NtRp2907
(dp2908
g62
(dp2909
g82
g83
ssg71
g2903
sg64
(lp2910
S'SERVER_NAME'
p2911
asbag57
(g78
g59
NtRp2912
(dp2913
g62
(dp2914
g89
g90
ssg71
g2903
sg64
(lp2915
S':'
asbag57
(g78
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2903
sg64
(lp2919
g57
(g58
g59
NtRp2920
(dp2921
g62
(dp2922
g70
I3
ssg71
g2916
sg64
(lp2923
g1425
asbasbasbag57
(g73
g59
NtRp2924
(dp2925
g62
(dp2926
sg71
g2563
sg64
(lp2927
g57
(g78
g59
NtRp2928
(dp2929
g62
(dp2930
g82
g83
ssg71
g2924
sg64
(lp2931
S'SERVER_PORT'
p2932
asbag57
(g78
g59
NtRp2933
(dp2934
g62
(dp2935
g89
g90
ssg71
g2924
sg64
(lp2936
S':'
asbag57
(g78
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2924
sg64
(lp2940
g57
(g58
g59
NtRp2941
(dp2942
g62
(dp2943
g70
I3
ssg71
g2937
sg64
(lp2944
g1447
asbasbasbag57
(g73
g59
NtRp2945
(dp2946
g62
(dp2947
sg71
g2563
sg64
(lp2948
g57
(g78
g59
NtRp2949
(dp2950
g62
(dp2951
g82
g83
ssg71
g2945
sg64
(lp2952
S'SERVER_PROTOCOL'
p2953
asbag57
(g78
g59
NtRp2954
(dp2955
g62
(dp2956
g89
g90
ssg71
g2945
sg64
(lp2957
S':'
asbag57
(g78
g59
NtRp2958
(dp2959
g62
(dp2960
sg71
g2945
sg64
(lp2961
g57
(g58
g59
NtRp2962
(dp2963
g62
(dp2964
g70
I3
ssg71
g2958
sg64
(lp2965
g1469
asbasbasbag57
(g73
g59
NtRp2966
(dp2967
g62
(dp2968
sg71
g2563
sg64
(lp2969
g57
(g78
g59
NtRp2970
(dp2971
g62
(dp2972
g82
g83
ssg71
g2966
sg64
(lp2973
S'SERVER_SOFTWARE'
p2974
asbag57
(g78
g59
NtRp2975
(dp2976
g62
(dp2977
g89
g90
ssg71
g2966
sg64
(lp2978
S':'
asbag57
(g78
g59
NtRp2979
(dp2980
g62
(dp2981
sg71
g2966
sg64
(lp2982
g57
(g58
g59
NtRp2983
(dp2984
g62
(dp2985
g70
I3
ssg71
g2979
sg64
(lp2986
g1491
asbasbasbag57
(g73
g59
NtRp2987
(dp2988
g62
(dp2989
sg71
g2563
sg64
(lp2990
g57
(g78
g59
NtRp2991
(dp2992
g62
(dp2993
g82
g83
ssg71
g2987
sg64
(lp2994
S'wsgi.errors'
p2995
asbag57
(g78
g59
NtRp2996
(dp2997
g62
(dp2998
g89
g90
ssg71
g2987
sg64
(lp2999
S':'
asbag57
(g78
g59
NtRp3000
(dp3001
g62
(dp3002
sg71
g2987
sg64
(lp3003
g57
(g58
g59
NtRp3004
(dp3005
g62
(dp3006
g70
I3
ssg71
g3000
sg64
(lp3007
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p3008
asbasbasbag57
(g73
g59
NtRp3009
(dp3010
g62
(dp3011
sg71
g2563
sg64
(lp3012
g57
(g78
g59
NtRp3013
(dp3014
g62
(dp3015
g82
g83
ssg71
g3009
sg64
(lp3016
S'wsgi.file_wrapper'
p3017
asbag57
(g78
g59
NtRp3018
(dp3019
g62
(dp3020
g89
g90
ssg71
g3009
sg64
(lp3021
S':'
asbag57
(g78
g59
NtRp3022
(dp3023
g62
(dp3024
sg71
g3009
sg64
(lp3025
g57
(g58
g59
NtRp3026
(dp3027
g62
(dp3028
g70
I3
ssg71
g3022
sg64
(lp3029
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3030
asbasbasbag57
(g73
g59
NtRp3031
(dp3032
g62
(dp3033
sg71
g2563
sg64
(lp3034
g57
(g78
g59
NtRp3035
(dp3036
g62
(dp3037
g82
g83
ssg71
g3031
sg64
(lp3038
S'wsgi.input'
p3039
asbag57
(g78
g59
NtRp3040
(dp3041
g62
(dp3042
g89
g90
ssg71
g3031
sg64
(lp3043
S':'
asbag57
(g78
g59
NtRp3044
(dp3045
g62
(dp3046
sg71
g3031
sg64
(lp3047
g57
(g58
g59
NtRp3048
(dp3049
g62
(dp3050
g70
I3
ssg71
g3044
sg64
(lp3051
S'<cStringIO.StringO object at 0xae524e80>'
p3052
asbasbasbag57
(g73
g59
NtRp3053
(dp3054
g62
(dp3055
sg71
g2563
sg64
(lp3056
g57
(g78
g59
NtRp3057
(dp3058
g62
(dp3059
g82
g83
ssg71
g3053
sg64
(lp3060
S'wsgi.multiprocess'
p3061
asbag57
(g78
g59
NtRp3062
(dp3063
g62
(dp3064
g89
g90
ssg71
g3053
sg64
(lp3065
S':'
asbag57
(g78
g59
NtRp3066
(dp3067
g62
(dp3068
sg71
g3053
sg64
(lp3069
g57
(g58
g59
NtRp3070
(dp3071
g62
(dp3072
g70
I3
ssg71
g3066
sg64
(lp3073
g100
asbasbasbag57
(g73
g59
NtRp3074
(dp3075
g62
(dp3076
sg71
g2563
sg64
(lp3077
g57
(g78
g59
NtRp3078
(dp3079
g62
(dp3080
g82
g83
ssg71
g3074
sg64
(lp3081
S'wsgi.multithread'
p3082
asbag57
(g78
g59
NtRp3083
(dp3084
g62
(dp3085
g89
g90
ssg71
g3074
sg64
(lp3086
S':'
asbag57
(g78
g59
NtRp3087
(dp3088
g62
(dp3089
sg71
g3074
sg64
(lp3090
g57
(g58
g59
NtRp3091
(dp3092
g62
(dp3093
g70
I3
ssg71
g3087
sg64
(lp3094
g1708
asbasbasbag57
(g73
g59
NtRp3095
(dp3096
g62
(dp3097
sg71
g2563
sg64
(lp3098
g57
(g78
g59
NtRp3099
(dp3100
g62
(dp3101
g82
g83
ssg71
g3095
sg64
(lp3102
S'wsgi.run_once'
p3103
asbag57
(g78
g59
NtRp3104
(dp3105
g62
(dp3106
g89
g90
ssg71
g3095
sg64
(lp3107
S':'
asbag57
(g78
g59
NtRp3108
(dp3109
g62
(dp3110
sg71
g3095
sg64
(lp3111
g57
(g58
g59
NtRp3112
(dp3113
g62
(dp3114
g70
I3
ssg71
g3108
sg64
(lp3115
g100
asbasbasbag57
(g73
g59
NtRp3116
(dp3117
g62
(dp3118
sg71
g2563
sg64
(lp3119
g57
(g78
g59
NtRp3120
(dp3121
g62
(dp3122
g82
g83
ssg71
g3116
sg64
(lp3123
S'wsgi.url_scheme'
p3124
asbag57
(g78
g59
NtRp3125
(dp3126
g62
(dp3127
g89
g90
ssg71
g3116
sg64
(lp3128
S':'
asbag57
(g78
g59
NtRp3129
(dp3130
g62
(dp3131
sg71
g3116
sg64
(lp3132
g57
(g58
g59
NtRp3133
(dp3134
g62
(dp3135
g70
I3
ssg71
g3129
sg64
(lp3136
g1751
asbasbasbag57
(g73
g59
NtRp3137
(dp3138
g62
(dp3139
sg71
g2563
sg64
(lp3140
g57
(g78
g59
NtRp3141
(dp3142
g62
(dp3143
g82
g83
ssg71
g3137
sg64
(lp3144
S'wsgi.version'
p3145
asbag57
(g78
g59
NtRp3146
(dp3147
g62
(dp3148
g89
g90
ssg71
g3137
sg64
(lp3149
S':'
asbag57
(g78
g59
NtRp3150
(dp3151
g62
(dp3152
sg71
g3137
sg64
(lp3153
g57
(g58
g59
NtRp3154
(dp3155
g62
(dp3156
g70
I3
ssg71
g3150
sg64
(lp3157
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3158
(lp3159
(dp3160
S'file'
p3161
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3162
sS'dump'
p3163
(dp3164
S'environment'
p3165
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3166
sS'ccode'
p3167
S'<code object <module> at 0xa889da0, file "/home/...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3168
ssS'lnum'
p3169
I212
sS'lines'
p3170
(dp3171
I207
S'    try:'
p3172
sI208
S'        if isinstance(code, types.CodeType):'
p3173
sI209
S'            ccode = code'
p3174
sI210
S'        else:'
p3175
sI211
S'            ccode = compile2(code, layer)'
p3176
sI212
S'        exec ccode in environment'
p3177
sI213
S'    except HTTP:'
p3178
sI214
S'        raise'
p3179
sI215
S'    except RestrictedError:'
p3180
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3181
ssS'call'
p3182
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3183
sS'func'
p3184
S'restricted'
p3185
sa(dp3186
g3161
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3187
sg3163
(dp3188
sg3169
I1126
sg3170
(dp3189
I1120
S'   form = SQLFORM(db.sample_files)'
p3190
sI1121
S'   form.vars.sample = sid'
p3191
sI1122
S'   return locals()'
p3192
sI1123
S''
sI1124
S''
sI1115
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3193
sI1116
S'   """ per sample . takes id of the sample as the input """'
p3194
sI1117
S'   sid = request.args(0)'
p3195
sI1118
S'   sample = db(db.sample.id == sid).select().first()'
p3196
sI1119
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3197
ssg3182
S'()'
p3198
sg3184
S'<module>'
p3199
sa(dp3200
g3161
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3201
sg3163
(dp3202
S'self'
p3203
S'undefined'
p3204
sS'f'
S'<function list_all_dev_projects>'
p3205
ssg3169
I193
sg3170
(dp3206
I192
S'        self._vars = None'
p3207
sI193
S'        self._caller = lambda f: f()'
p3208
sI194
S'        self._view_environment = None'
p3209
sI195
S'        self._custom_commit = None'
p3210
sI196
S'        self._custom_rollback = None'
p3211
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3212
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3213
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3214
sI191
S"        self.delimiters = ('{{', '}}')"
p3215
ssg3182
S'(f=<function list_all_dev_projects>)'
p3216
sg3184
S'<lambda>'
p3217
sa(dp3218
g3161
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3219
sg3163
(dp3220
S'global request'
p3221
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3222
sS'global router'
p3223
S'<function router>'
p3224
sS'request.args'
p3225
S"['project', 'experiment.project', '1', 'sample.experiment', '1', 'view', 'sample', '3']"
p3226
ssg3169
I321
sg3170
(dp3227
I320
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3228
sI321
S'     \trouter(request.args)'
p3229
sI322
S"    s={'sample':lambda ids : redirect(URL('default', 'mapping_multiple', vars=dict(id=ids)))}"
p3230
sI323
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'],selectable = s)"
p3231
sI324
S'    return locals()'
p3232
sI325
S''
sI316
S'    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]'
p3233
sI317
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3234
sI318
S"    links={'sample':l1}"
p3235
sI319
S'#customized Views for certain forms using router'
p3236
ssg3182
S'()'
p3237
sg3184
S'list_all_dev_projects'
p3238
sasS'pyver'
p3239
S'Python 2.7.3: /usr/bin/python'
p3240
sS'session'
p3241
g57
(g58
g59
NtRp3242
(dp3243
g62
(dp3244
sg64
(lp3245
g57
(g66
g59
NtRp3246
(dp3247
g62
(dp3248
g70
I5
ssg71
Nsg64
(lp3249
g57
(g73
g59
NtRp3250
(dp3251
g62
(dp3252
sg71
g3246
sg64
(lp3253
g57
(g78
g59
NtRp3254
(dp3255
g62
(dp3256
g82
g83
ssg71
g3250
sg64
(lp3257
S'auth'
p3258
asbag57
(g78
g59
NtRp3259
(dp3260
g62
(dp3261
g89
g90
ssg71
g3250
sg64
(lp3262
S':'
asbag57
(g78
g59
NtRp3263
(dp3264
g62
(dp3265
sg71
g3250
sg64
(lp3266
g57
(g58
g59
NtRp3267
(dp3268
g62
(dp3269
g70
I5
ssg71
g3263
sg64
(lp3270
g57
(g66
g59
NtRp3271
(dp3272
g62
(dp3273
g70
I4
ssg71
Nsg64
(lp3274
g57
(g73
g59
NtRp3275
(dp3276
g62
(dp3277
sg71
g3271
sg64
(lp3278
g57
(g78
g59
NtRp3279
(dp3280
g62
(dp3281
g82
g83
ssg71
g3275
sg64
(lp3282
S'expiration'
p3283
asbag57
(g78
g59
NtRp3284
(dp3285
g62
(dp3286
g89
g90
ssg71
g3275
sg64
(lp3287
S':'
asbag57
(g78
g59
NtRp3288
(dp3289
g62
(dp3290
sg71
g3275
sg64
(lp3291
g57
(g58
g59
NtRp3292
(dp3293
g62
(dp3294
g70
I4
ssg71
g3288
sg64
(lp3295
S'2592000'
p3296
asbasbasbag57
(g73
g59
NtRp3297
(dp3298
g62
(dp3299
sg71
g3271
sg64
(lp3300
g57
(g78
g59
NtRp3301
(dp3302
g62
(dp3303
g82
g83
ssg71
g3297
sg64
(lp3304
S'hmac_key'
p3305
asbag57
(g78
g59
NtRp3306
(dp3307
g62
(dp3308
g89
g90
ssg71
g3297
sg64
(lp3309
S':'
asbag57
(g78
g59
NtRp3310
(dp3311
g62
(dp3312
sg71
g3297
sg64
(lp3313
g57
(g58
g59
NtRp3314
(dp3315
g62
(dp3316
g70
I4
ssg71
g3310
sg64
(lp3317
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3318
asbasbasbag57
(g73
g59
NtRp3319
(dp3320
g62
(dp3321
sg71
g3271
sg64
(lp3322
g57
(g78
g59
NtRp3323
(dp3324
g62
(dp3325
g82
g83
ssg71
g3319
sg64
(lp3326
S'last_visit'
p3327
asbag57
(g78
g59
NtRp3328
(dp3329
g62
(dp3330
g89
g90
ssg71
g3319
sg64
(lp3331
S':'
asbag57
(g78
g59
NtRp3332
(dp3333
g62
(dp3334
sg71
g3319
sg64
(lp3335
g57
(g58
g59
NtRp3336
(dp3337
g62
(dp3338
g70
I4
ssg71
g3332
sg64
(lp3339
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3340
asbasbasbag57
(g73
g59
NtRp3341
(dp3342
g62
(dp3343
sg71
g3271
sg64
(lp3344
g57
(g78
g59
NtRp3345
(dp3346
g62
(dp3347
g82
g83
ssg71
g3341
sg64
(lp3348
S'remember'
p3349
asbag57
(g78
g59
NtRp3350
(dp3351
g62
(dp3352
g89
g90
ssg71
g3341
sg64
(lp3353
S':'
asbag57
(g78
g59
NtRp3354
(dp3355
g62
(dp3356
sg71
g3341
sg64
(lp3357
g57
(g58
g59
NtRp3358
(dp3359
g62
(dp3360
g70
I4
ssg71
g3354
sg64
(lp3361
g1708
asbasbasbag57
(g73
g59
NtRp3362
(dp3363
g62
(dp3364
sg71
g3271
sg64
(lp3365
g57
(g78
g59
NtRp3366
(dp3367
g62
(dp3368
g82
g83
ssg71
g3362
sg64
(lp3369
S'user'
p3370
asbag57
(g78
g59
NtRp3371
(dp3372
g62
(dp3373
g89
g90
ssg71
g3362
sg64
(lp3374
S':'
asbag57
(g78
g59
NtRp3375
(dp3376
g62
(dp3377
sg71
g3362
sg64
(lp3378
g57
(g58
g59
NtRp3379
(dp3380
g62
(dp3381
g70
I4
ssg71
g3375
sg64
(lp3382
g57
(g66
g59
NtRp3383
(dp3384
g62
(dp3385
g70
I3
ssg71
Nsg64
(lp3386
g57
(g73
g59
NtRp3387
(dp3388
g62
(dp3389
sg71
g3383
sg64
(lp3390
g57
(g78
g59
NtRp3391
(dp3392
g62
(dp3393
g82
g83
ssg71
g3387
sg64
(lp3394
S'address'
p3395
asbag57
(g78
g59
NtRp3396
(dp3397
g62
(dp3398
g89
g90
ssg71
g3387
sg64
(lp3399
S':'
asbag57
(g78
g59
NtRp3400
(dp3401
g62
(dp3402
sg71
g3387
sg64
(lp3403
g57
(g58
g59
NtRp3404
(dp3405
g62
(dp3406
g70
I3
ssg71
g3400
sg64
(lp3407
S'a'
asbasbasbag57
(g73
g59
NtRp3408
(dp3409
g62
(dp3410
sg71
g3383
sg64
(lp3411
g57
(g78
g59
NtRp3412
(dp3413
g62
(dp3414
g82
g83
ssg71
g3408
sg64
(lp3415
S'affiliated_to'
p3416
asbag57
(g78
g59
NtRp3417
(dp3418
g62
(dp3419
g89
g90
ssg71
g3408
sg64
(lp3420
S':'
asbag57
(g78
g59
NtRp3421
(dp3422
g62
(dp3423
sg71
g3408
sg64
(lp3424
g57
(g58
g59
NtRp3425
(dp3426
g62
(dp3427
g70
I3
ssg71
g3421
sg64
(lp3428
S'a'
asbasbasbag57
(g73
g59
NtRp3429
(dp3430
g62
(dp3431
sg71
g3383
sg64
(lp3432
g57
(g78
g59
NtRp3433
(dp3434
g62
(dp3435
g82
g83
ssg71
g3429
sg64
(lp3436
S'city'
p3437
asbag57
(g78
g59
NtRp3438
(dp3439
g62
(dp3440
g89
g90
ssg71
g3429
sg64
(lp3441
S':'
asbag57
(g78
g59
NtRp3442
(dp3443
g62
(dp3444
sg71
g3429
sg64
(lp3445
g57
(g58
g59
NtRp3446
(dp3447
g62
(dp3448
g70
I3
ssg71
g3442
sg64
(lp3449
S'a'
asbasbasbag57
(g73
g59
NtRp3450
(dp3451
g62
(dp3452
sg71
g3383
sg64
(lp3453
g57
(g78
g59
NtRp3454
(dp3455
g62
(dp3456
g82
g83
ssg71
g3450
sg64
(lp3457
S'country'
p3458
asbag57
(g78
g59
NtRp3459
(dp3460
g62
(dp3461
g89
g90
ssg71
g3450
sg64
(lp3462
S':'
asbag57
(g78
g59
NtRp3463
(dp3464
g62
(dp3465
sg71
g3450
sg64
(lp3466
g57
(g58
g59
NtRp3467
(dp3468
g62
(dp3469
g70
I3
ssg71
g3463
sg64
(lp3470
S'India'
p3471
asbasbasbag57
(g73
g59
NtRp3472
(dp3473
g62
(dp3474
sg71
g3383
sg64
(lp3475
g57
(g78
g59
NtRp3476
(dp3477
g62
(dp3478
g82
g83
ssg71
g3472
sg64
(lp3479
S'email'
p3480
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
g89
g90
ssg71
g3472
sg64
(lp3484
S':'
asbag57
(g78
g59
NtRp3485
(dp3486
g62
(dp3487
sg71
g3472
sg64
(lp3488
g57
(g58
g59
NtRp3489
(dp3490
g62
(dp3491
g70
I3
ssg71
g3485
sg64
(lp3492
S'anil.iiith@gmail.com'
p3493
asbasbasbag57
(g73
g59
NtRp3494
(dp3495
g62
(dp3496
sg71
g3383
sg64
(lp3497
g57
(g78
g59
NtRp3498
(dp3499
g62
(dp3500
g82
g83
ssg71
g3494
sg64
(lp3501
S'first_name'
p3502
asbag57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
g89
g90
ssg71
g3494
sg64
(lp3506
S':'
asbag57
(g78
g59
NtRp3507
(dp3508
g62
(dp3509
sg71
g3494
sg64
(lp3510
g57
(g58
g59
NtRp3511
(dp3512
g62
(dp3513
g70
I3
ssg71
g3507
sg64
(lp3514
S'anil'
p3515
asbasbasbag57
(g73
g59
NtRp3516
(dp3517
g62
(dp3518
sg71
g3383
sg64
(lp3519
g57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
g82
g83
ssg71
g3516
sg64
(lp3523
S'id'
p3524
asbag57
(g78
g59
NtRp3525
(dp3526
g62
(dp3527
g89
g90
ssg71
g3516
sg64
(lp3528
S':'
asbag57
(g78
g59
NtRp3529
(dp3530
g62
(dp3531
sg71
g3516
sg64
(lp3532
g57
(g58
g59
NtRp3533
(dp3534
g62
(dp3535
g70
I3
ssg71
g3529
sg64
(lp3536
S'2'
asbasbasbag57
(g73
g59
NtRp3537
(dp3538
g62
(dp3539
sg71
g3383
sg64
(lp3540
g57
(g78
g59
NtRp3541
(dp3542
g62
(dp3543
g82
g83
ssg71
g3537
sg64
(lp3544
S'last_name'
p3545
asbag57
(g78
g59
NtRp3546
(dp3547
g62
(dp3548
g89
g90
ssg71
g3537
sg64
(lp3549
S':'
asbag57
(g78
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3537
sg64
(lp3553
g57
(g58
g59
NtRp3554
(dp3555
g62
(dp3556
g70
I3
ssg71
g3550
sg64
(lp3557
S'n'
asbasbasbag57
(g73
g59
NtRp3558
(dp3559
g62
(dp3560
sg71
g3383
sg64
(lp3561
g57
(g78
g59
NtRp3562
(dp3563
g62
(dp3564
g82
g83
ssg71
g3558
sg64
(lp3565
S'mobile'
p3566
asbag57
(g78
g59
NtRp3567
(dp3568
g62
(dp3569
g89
g90
ssg71
g3558
sg64
(lp3570
S':'
asbag57
(g78
g59
NtRp3571
(dp3572
g62
(dp3573
sg71
g3558
sg64
(lp3574
g57
(g58
g59
NtRp3575
(dp3576
g62
(dp3577
g70
I3
ssg71
g3571
sg64
(lp3578
S'1233'
p3579
asbasbasbag57
(g73
g59
NtRp3580
(dp3581
g62
(dp3582
sg71
g3383
sg64
(lp3583
g57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
g82
g83
ssg71
g3580
sg64
(lp3587
S'phone'
p3588
asbag57
(g78
g59
NtRp3589
(dp3590
g62
(dp3591
g89
g90
ssg71
g3580
sg64
(lp3592
S':'
asbag57
(g78
g59
NtRp3593
(dp3594
g62
(dp3595
sg71
g3580
sg64
(lp3596
g57
(g58
g59
NtRp3597
(dp3598
g62
(dp3599
g70
I3
ssg71
g3593
sg64
(lp3600
S'123'
p3601
asbasbasbag57
(g73
g59
NtRp3602
(dp3603
g62
(dp3604
sg71
g3383
sg64
(lp3605
g57
(g78
g59
NtRp3606
(dp3607
g62
(dp3608
g82
g83
ssg71
g3602
sg64
(lp3609
S'position'
p3610
asbag57
(g78
g59
NtRp3611
(dp3612
g62
(dp3613
g89
g90
ssg71
g3602
sg64
(lp3614
S':'
asbag57
(g78
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3602
sg64
(lp3618
g57
(g58
g59
NtRp3619
(dp3620
g62
(dp3621
g70
I3
ssg71
g3615
sg64
(lp3622
S'0'
asbasbasbag57
(g73
g59
NtRp3623
(dp3624
g62
(dp3625
sg71
g3383
sg64
(lp3626
g57
(g78
g59
NtRp3627
(dp3628
g62
(dp3629
g82
g83
ssg71
g3623
sg64
(lp3630
S'postal_code'
p3631
asbag57
(g78
g59
NtRp3632
(dp3633
g62
(dp3634
g89
g90
ssg71
g3623
sg64
(lp3635
S':'
asbag57
(g78
g59
NtRp3636
(dp3637
g62
(dp3638
sg71
g3623
sg64
(lp3639
g57
(g58
g59
NtRp3640
(dp3641
g62
(dp3642
g70
I3
ssg71
g3636
sg64
(lp3643
S'123'
p3644
asbasbasbag57
(g73
g59
NtRp3645
(dp3646
g62
(dp3647
sg71
g3383
sg64
(lp3648
g57
(g78
g59
NtRp3649
(dp3650
g62
(dp3651
g82
g83
ssg71
g3645
sg64
(lp3652
S'registration_at'
p3653
asbag57
(g78
g59
NtRp3654
(dp3655
g62
(dp3656
g89
g90
ssg71
g3645
sg64
(lp3657
S':'
asbag57
(g78
g59
NtRp3658
(dp3659
g62
(dp3660
sg71
g3645
sg64
(lp3661
g57
(g58
g59
NtRp3662
(dp3663
g62
(dp3664
g70
I3
ssg71
g3658
sg64
(lp3665
S'0'
asbasbasbag57
(g73
g59
NtRp3666
(dp3667
g62
(dp3668
sg71
g3383
sg64
(lp3669
g57
(g78
g59
NtRp3670
(dp3671
g62
(dp3672
g82
g83
ssg71
g3666
sg64
(lp3673
S'registration_id'
p3674
asbag57
(g78
g59
NtRp3675
(dp3676
g62
(dp3677
g89
g90
ssg71
g3666
sg64
(lp3678
S':'
asbag57
(g78
g59
NtRp3679
(dp3680
g62
(dp3681
sg71
g3666
sg64
(lp3682
g57
(g58
g59
NtRp3683
(dp3684
g62
(dp3685
g70
I3
ssg71
g3679
sg64
(lp3686
S''
asbasbasbag57
(g73
g59
NtRp3687
(dp3688
g62
(dp3689
sg71
g3383
sg64
(lp3690
g57
(g78
g59
NtRp3691
(dp3692
g62
(dp3693
g82
g83
ssg71
g3687
sg64
(lp3694
S'registration_key'
p3695
asbag57
(g78
g59
NtRp3696
(dp3697
g62
(dp3698
g89
g90
ssg71
g3687
sg64
(lp3699
S':'
asbag57
(g78
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3687
sg64
(lp3703
g57
(g58
g59
NtRp3704
(dp3705
g62
(dp3706
g70
I3
ssg71
g3700
sg64
(lp3707
S''
asbasbasbag57
(g73
g59
NtRp3708
(dp3709
g62
(dp3710
sg71
g3383
sg64
(lp3711
g57
(g78
g59
NtRp3712
(dp3713
g62
(dp3714
g82
g83
ssg71
g3708
sg64
(lp3715
S'reset_password_key'
p3716
asbag57
(g78
g59
NtRp3717
(dp3718
g62
(dp3719
g89
g90
ssg71
g3708
sg64
(lp3720
S':'
asbag57
(g78
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3708
sg64
(lp3724
g57
(g58
g59
NtRp3725
(dp3726
g62
(dp3727
g70
I3
ssg71
g3721
sg64
(lp3728
S''
asbasbasbag57
(g73
g59
NtRp3729
(dp3730
g62
(dp3731
sg71
g3383
sg64
(lp3732
g57
(g78
g59
NtRp3733
(dp3734
g62
(dp3735
g82
g83
ssg71
g3729
sg64
(lp3736
S'title'
p3737
asbag57
(g78
g59
NtRp3738
(dp3739
g62
(dp3740
g89
g90
ssg71
g3729
sg64
(lp3741
S':'
asbag57
(g78
g59
NtRp3742
(dp3743
g62
(dp3744
sg71
g3729
sg64
(lp3745
g57
(g58
g59
NtRp3746
(dp3747
g62
(dp3748
g70
I3
ssg71
g3742
sg64
(lp3749
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3750
(dp3751
g62
(dp3752
sg71
g3271
sg64
(lp3753
g57
(g78
g59
NtRp3754
(dp3755
g62
(dp3756
g82
g83
ssg71
g3750
sg64
(lp3757
S'user_groups'
p3758
asbag57
(g78
g59
NtRp3759
(dp3760
g62
(dp3761
g89
g90
ssg71
g3750
sg64
(lp3762
S':'
asbag57
(g78
g59
NtRp3763
(dp3764
g62
(dp3765
sg71
g3750
sg64
(lp3766
g57
(g58
g59
NtRp3767
(dp3768
g62
(dp3769
g70
I4
ssg71
g3763
sg64
(lp3770
g57
(g66
g59
NtRp3771
(dp3772
g62
(dp3773
g70
I3
ssg71
Nsg64
(lp3774
g57
(g73
g59
NtRp3775
(dp3776
g62
(dp3777
sg71
g3771
sg64
(lp3778
g57
(g78
g59
NtRp3779
(dp3780
g62
(dp3781
g82
g83
ssg71
g3775
sg64
(lp3782
S'9'
asbag57
(g78
g59
NtRp3783
(dp3784
g62
(dp3785
g89
g90
ssg71
g3775
sg64
(lp3786
S':'
asbag57
(g78
g59
NtRp3787
(dp3788
g62
(dp3789
sg71
g3775
sg64
(lp3790
g57
(g58
g59
NtRp3791
(dp3792
g62
(dp3793
g70
I3
ssg71
g3787
sg64
(lp3794
S'user_2'
p3795
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3796
(dp3797
g62
(dp3798
sg71
g3246
sg64
(lp3799
g57
(g78
g59
NtRp3800
(dp3801
g62
(dp3802
g82
g83
ssg71
g3796
sg64
(lp3803
S'flash'
p3804
asbag57
(g78
g59
NtRp3805
(dp3806
g62
(dp3807
g89
g90
ssg71
g3796
sg64
(lp3808
S':'
asbag57
(g78
g59
NtRp3809
(dp3810
g62
(dp3811
sg71
g3796
sg64
(lp3812
g57
(g58
g59
NtRp3813
(dp3814
g62
(dp3815
g70
I5
ssg71
g3809
sg64
(lp3816
S'None'
p3817
asbasbasbag57
(g73
g59
NtRp3818
(dp3819
g62
(dp3820
sg71
g3246
sg64
(lp3821
g57
(g78
g59
NtRp3822
(dp3823
g62
(dp3824
g82
g83
ssg71
g3818
sg64
(lp3825
S'last_orderby'
p3826
asbag57
(g78
g59
NtRp3827
(dp3828
g62
(dp3829
g89
g90
ssg71
g3818
sg64
(lp3830
S':'
asbag57
(g78
g59
NtRp3831
(dp3832
g62
(dp3833
sg71
g3818
sg64
(lp3834
g57
(g58
g59
NtRp3835
(dp3836
g62
(dp3837
g70
I5
ssg71
g3831
sg64
(lp3838
S'None'
p3839
asbasbasbag57
(g73
g59
NtRp3840
(dp3841
g62
(dp3842
sg71
g3246
sg64
(lp3843
g57
(g78
g59
NtRp3844
(dp3845
g62
(dp3846
g82
g83
ssg71
g3840
sg64
(lp3847
S'last_query'
p3848
asbag57
(g78
g59
NtRp3849
(dp3850
g62
(dp3851
g89
g90
ssg71
g3840
sg64
(lp3852
S':'
asbag57
(g78
g59
NtRp3853
(dp3854
g62
(dp3855
sg71
g3840
sg64
(lp3856
g57
(g58
g59
NtRp3857
(dp3858
g62
(dp3859
g70
I5
ssg71
g3853
sg64
(lp3860
S'db.project.id>0'
p3861
asbasbasbasbasbsS'etype'
p3862
S"<type 'exceptions.TypeError'>"
p3863
sS'date'
p3864
S'Sun Feb 24 23:35:24 2013'
p3865
sS'response'
p3866
g57
(g58
g59
NtRp3867
(dp3868
g62
(dp3869
sg64
(lp3870
g57
(g66
g59
NtRp3871
(dp3872
g62
(dp3873
g70
I5
ssg71
Nsg64
(lp3874
g57
(g73
g59
NtRp3875
(dp3876
g62
(dp3877
sg71
g3871
sg64
(lp3878
g57
(g78
g59
NtRp3879
(dp3880
g62
(dp3881
g82
g83
ssg71
g3875
sg64
(lp3882
g256
asbag57
(g78
g59
NtRp3883
(dp3884
g62
(dp3885
g89
g90
ssg71
g3875
sg64
(lp3886
S':'
asbag57
(g78
g59
NtRp3887
(dp3888
g62
(dp3889
sg71
g3875
sg64
(lp3890
g57
(g58
g59
NtRp3891
(dp3892
g62
(dp3893
g70
I5
ssg71
g3887
sg64
(lp3894
S'<cStringIO.StringO object at 0xb011e140>'
p3895
asbasbasbag57
(g73
g59
NtRp3896
(dp3897
g62
(dp3898
sg71
g3871
sg64
(lp3899
g57
(g78
g59
NtRp3900
(dp3901
g62
(dp3902
g82
g83
ssg71
g3896
sg64
(lp3903
g344
asbag57
(g78
g59
NtRp3904
(dp3905
g62
(dp3906
g89
g90
ssg71
g3896
sg64
(lp3907
S':'
asbag57
(g78
g59
NtRp3908
(dp3909
g62
(dp3910
sg71
g3896
sg64
(lp3911
g57
(g58
g59
NtRp3912
(dp3913
g62
(dp3914
g70
I5
ssg71
g3908
sg64
(lp3915
g57
(g66
g59
NtRp3916
(dp3917
g62
(dp3918
g70
I4
ssg71
Nsg64
(lp3919
g57
(g73
g59
NtRp3920
(dp3921
g62
(dp3922
sg71
g3916
sg64
(lp3923
g57
(g78
g59
NtRp3924
(dp3925
g62
(dp3926
g82
g83
ssg71
g3920
sg64
(lp3927
S'session_id_dev_bootstrap_ch'
p3928
asbag57
(g78
g59
NtRp3929
(dp3930
g62
(dp3931
g89
g90
ssg71
g3920
sg64
(lp3932
S':'
asbag57
(g78
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3920
sg64
(lp3936
g57
(g58
g59
NtRp3937
(dp3938
g62
(dp3939
g70
I4
ssg71
g3933
sg64
(lp3940
g576
ag57
(g66
g59
NtRp3941
(dp3942
g62
(dp3943
g70
I3
ssg71
Nsg64
(lp3944
g57
(g73
g59
NtRp3945
(dp3946
g62
(dp3947
sg71
g3941
sg64
(lp3948
g57
(g78
g59
NtRp3949
(dp3950
g62
(dp3951
g82
g83
ssg71
g3945
sg64
(lp3952
g395
asbag57
(g78
g59
NtRp3953
(dp3954
g62
(dp3955
g89
g90
ssg71
g3945
sg64
(lp3956
S':'
asbag57
(g78
g59
NtRp3957
(dp3958
g62
(dp3959
sg71
g3945
sg64
(lp3960
g57
(g58
g59
NtRp3961
(dp3962
g62
(dp3963
g70
I3
ssg71
g3957
sg64
(lp3964
S''
asbasbasbag57
(g73
g59
NtRp3965
(dp3966
g62
(dp3967
sg71
g3941
sg64
(lp3968
g57
(g78
g59
NtRp3969
(dp3970
g62
(dp3971
g82
g83
ssg71
g3965
sg64
(lp3972
g416
asbag57
(g78
g59
NtRp3973
(dp3974
g62
(dp3975
g89
g90
ssg71
g3965
sg64
(lp3976
S':'
asbag57
(g78
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3965
sg64
(lp3980
g57
(g58
g59
NtRp3981
(dp3982
g62
(dp3983
g70
I3
ssg71
g3977
sg64
(lp3984
S''
asbasbasbag57
(g73
g59
NtRp3985
(dp3986
g62
(dp3987
sg71
g3941
sg64
(lp3988
g57
(g78
g59
NtRp3989
(dp3990
g62
(dp3991
g82
g83
ssg71
g3985
sg64
(lp3992
g437
asbag57
(g78
g59
NtRp3993
(dp3994
g62
(dp3995
g89
g90
ssg71
g3985
sg64
(lp3996
S':'
asbag57
(g78
g59
NtRp3997
(dp3998
g62
(dp3999
sg71
g3985
sg64
(lp4000
g57
(g58
g59
NtRp4001
(dp4002
g62
(dp4003
g70
I3
ssg71
g3997
sg64
(lp4004
S'2592000'
p4005
asbasbasbag57
(g73
g59
NtRp4006
(dp4007
g62
(dp4008
sg71
g3941
sg64
(lp4009
g57
(g78
g59
NtRp4010
(dp4011
g62
(dp4012
g82
g83
ssg71
g4006
sg64
(lp4013
g458
asbag57
(g78
g59
NtRp4014
(dp4015
g62
(dp4016
g89
g90
ssg71
g4006
sg64
(lp4017
S':'
asbag57
(g78
g59
NtRp4018
(dp4019
g62
(dp4020
sg71
g4006
sg64
(lp4021
g57
(g58
g59
NtRp4022
(dp4023
g62
(dp4024
g70
I3
ssg71
g4018
sg64
(lp4025
S''
asbasbasbag57
(g73
g59
NtRp4026
(dp4027
g62
(dp4028
sg71
g3941
sg64
(lp4029
g57
(g78
g59
NtRp4030
(dp4031
g62
(dp4032
g82
g83
ssg71
g4026
sg64
(lp4033
g479
asbag57
(g78
g59
NtRp4034
(dp4035
g62
(dp4036
g89
g90
ssg71
g4026
sg64
(lp4037
S':'
asbag57
(g78
g59
NtRp4038
(dp4039
g62
(dp4040
sg71
g4026
sg64
(lp4041
g57
(g58
g59
NtRp4042
(dp4043
g62
(dp4044
g70
I3
ssg71
g4038
sg64
(lp4045
S''
asbasbasbag57
(g73
g59
NtRp4046
(dp4047
g62
(dp4048
sg71
g3941
sg64
(lp4049
g57
(g78
g59
NtRp4050
(dp4051
g62
(dp4052
g82
g83
ssg71
g4046
sg64
(lp4053
g500
asbag57
(g78
g59
NtRp4054
(dp4055
g62
(dp4056
g89
g90
ssg71
g4046
sg64
(lp4057
S':'
asbag57
(g78
g59
NtRp4058
(dp4059
g62
(dp4060
sg71
g4046
sg64
(lp4061
g57
(g58
g59
NtRp4062
(dp4063
g62
(dp4064
g70
I3
ssg71
g4058
sg64
(lp4065
S'/'
asbasbasbag57
(g73
g59
NtRp4066
(dp4067
g62
(dp4068
sg71
g3941
sg64
(lp4069
g57
(g78
g59
NtRp4070
(dp4071
g62
(dp4072
g82
g83
ssg71
g4066
sg64
(lp4073
g521
asbag57
(g78
g59
NtRp4074
(dp4075
g62
(dp4076
g89
g90
ssg71
g4066
sg64
(lp4077
S':'
asbag57
(g78
g59
NtRp4078
(dp4079
g62
(dp4080
sg71
g4066
sg64
(lp4081
g57
(g58
g59
NtRp4082
(dp4083
g62
(dp4084
g70
I3
ssg71
g4078
sg64
(lp4085
S''
asbasbasbag57
(g73
g59
NtRp4086
(dp4087
g62
(dp4088
sg71
g3941
sg64
(lp4089
g57
(g78
g59
NtRp4090
(dp4091
g62
(dp4092
g82
g83
ssg71
g4086
sg64
(lp4093
g542
asbag57
(g78
g59
NtRp4094
(dp4095
g62
(dp4096
g89
g90
ssg71
g4086
sg64
(lp4097
S':'
asbag57
(g78
g59
NtRp4098
(dp4099
g62
(dp4100
sg71
g4086
sg64
(lp4101
g57
(g58
g59
NtRp4102
(dp4103
g62
(dp4104
g70
I3
ssg71
g4098
sg64
(lp4105
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4106
(dp4107
g62
(dp4108
sg71
g3871
sg64
(lp4109
g57
(g78
g59
NtRp4110
(dp4111
g62
(dp4112
g82
g83
ssg71
g4106
sg64
(lp4113
S'delimiters'
p4114
asbag57
(g78
g59
NtRp4115
(dp4116
g62
(dp4117
g89
g90
ssg71
g4106
sg64
(lp4118
S':'
asbag57
(g78
g59
NtRp4119
(dp4120
g62
(dp4121
sg71
g4106
sg64
(lp4122
g57
(g58
g59
NtRp4123
(dp4124
g62
(dp4125
g70
I5
ssg71
g4119
sg64
(lp4126
g57
(g66
g59
NtRp4127
(dp4128
g62
(dp4129
g70
I4
ssg71
Nsg64
(lp4130
g57
(g73
g59
NtRp4131
(dp4132
g62
(dp4133
sg71
g4127
sg64
(lp4134
g57
(g78
g59
NtRp4135
(dp4136
g62
(dp4137
sg71
g4131
sg64
(lp4138
g57
(g58
g59
NtRp4139
(dp4140
g62
(dp4141
g70
I4
ssg71
g4135
sg64
(lp4142
S'{{'
p4143
asbasbasbag57
(g73
g59
NtRp4144
(dp4145
g62
(dp4146
sg71
g4127
sg64
(lp4147
g57
(g78
g59
NtRp4148
(dp4149
g62
(dp4150
sg71
g4144
sg64
(lp4151
g57
(g58
g59
NtRp4152
(dp4153
g62
(dp4154
g70
I4
ssg71
g4148
sg64
(lp4155
S'}}'
p4156
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4157
(dp4158
g62
(dp4159
sg71
g3871
sg64
(lp4160
g57
(g78
g59
NtRp4161
(dp4162
g62
(dp4163
g82
g83
ssg71
g4157
sg64
(lp4164
S'files'
p4165
asbag57
(g78
g59
NtRp4166
(dp4167
g62
(dp4168
g89
g90
ssg71
g4157
sg64
(lp4169
S':'
asbag57
(g78
g59
NtRp4170
(dp4171
g62
(dp4172
sg71
g4157
sg64
(lp4173
g57
(g58
g59
NtRp4174
(dp4175
g62
(dp4176
g70
I5
ssg71
g4170
sg64
(lp4177
g57
(g66
g59
NtRp4178
(dp4179
g62
(dp4180
g70
I4
ssg71
Nsg64
(lp4181
g57
(g73
g59
NtRp4182
(dp4183
g62
(dp4184
sg71
g4178
sg64
(lp4185
g57
(g78
g59
NtRp4186
(dp4187
g62
(dp4188
sg71
g4182
sg64
(lp4189
g57
(g58
g59
NtRp4190
(dp4191
g62
(dp4192
g70
I4
ssg71
g4186
sg64
(lp4193
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4194
asbasbasbag57
(g73
g59
NtRp4195
(dp4196
g62
(dp4197
sg71
g4178
sg64
(lp4198
g57
(g78
g59
NtRp4199
(dp4200
g62
(dp4201
sg71
g4195
sg64
(lp4202
g57
(g58
g59
NtRp4203
(dp4204
g62
(dp4205
g70
I4
ssg71
g4199
sg64
(lp4206
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4207
asbasbasbag57
(g73
g59
NtRp4208
(dp4209
g62
(dp4210
sg71
g4178
sg64
(lp4211
g57
(g78
g59
NtRp4212
(dp4213
g62
(dp4214
sg71
g4208
sg64
(lp4215
g57
(g58
g59
NtRp4216
(dp4217
g62
(dp4218
g70
I4
ssg71
g4212
sg64
(lp4219
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4220
asbasbasbag57
(g73
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4178
sg64
(lp4224
g57
(g78
g59
NtRp4225
(dp4226
g62
(dp4227
sg71
g4221
sg64
(lp4228
g57
(g58
g59
NtRp4229
(dp4230
g62
(dp4231
g70
I4
ssg71
g4225
sg64
(lp4232
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4233
asbasbasbag57
(g73
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4178
sg64
(lp4237
g57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4234
sg64
(lp4241
g57
(g58
g59
NtRp4242
(dp4243
g62
(dp4244
g70
I4
ssg71
g4238
sg64
(lp4245
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4246
asbasbasbag57
(g73
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g4178
sg64
(lp4250
g57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4247
sg64
(lp4254
g57
(g58
g59
NtRp4255
(dp4256
g62
(dp4257
g70
I4
ssg71
g4251
sg64
(lp4258
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4259
asbasbasbag57
(g73
g59
NtRp4260
(dp4261
g62
(dp4262
sg71
g4178
sg64
(lp4263
g57
(g78
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g4260
sg64
(lp4267
g57
(g58
g59
NtRp4268
(dp4269
g62
(dp4270
g70
I4
ssg71
g4264
sg64
(lp4271
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4272
asbasbasbag57
(g73
g59
NtRp4273
(dp4274
g62
(dp4275
sg71
g4178
sg64
(lp4276
g57
(g78
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g4273
sg64
(lp4280
g57
(g58
g59
NtRp4281
(dp4282
g62
(dp4283
g70
I4
ssg71
g4277
sg64
(lp4284
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4285
asbasbasbag57
(g73
g59
NtRp4286
(dp4287
g62
(dp4288
sg71
g4178
sg64
(lp4289
g57
(g78
g59
NtRp4290
(dp4291
g62
(dp4292
sg71
g4286
sg64
(lp4293
g57
(g58
g59
NtRp4294
(dp4295
g62
(dp4296
g70
I4
ssg71
g4290
sg64
(lp4297
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4298
asbasbasbag57
(g73
g59
NtRp4299
(dp4300
g62
(dp4301
sg71
g4178
sg64
(lp4302
g57
(g78
g59
NtRp4303
(dp4304
g62
(dp4305
sg71
g4299
sg64
(lp4306
g57
(g58
g59
NtRp4307
(dp4308
g62
(dp4309
g70
I4
ssg71
g4303
sg64
(lp4310
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4311
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4312
(dp4313
g62
(dp4314
sg71
g3871
sg64
(lp4315
g57
(g78
g59
NtRp4316
(dp4317
g62
(dp4318
g82
g83
ssg71
g4312
sg64
(lp4319
S'flash'
p4320
asbag57
(g78
g59
NtRp4321
(dp4322
g62
(dp4323
g89
g90
ssg71
g4312
sg64
(lp4324
S':'
asbag57
(g78
g59
NtRp4325
(dp4326
g62
(dp4327
sg71
g4312
sg64
(lp4328
g57
(g58
g59
NtRp4329
(dp4330
g62
(dp4331
g70
I5
ssg71
g4325
sg64
(lp4332
S''
asbasbasbag57
(g73
g59
NtRp4333
(dp4334
g62
(dp4335
sg71
g3871
sg64
(lp4336
g57
(g78
g59
NtRp4337
(dp4338
g62
(dp4339
g82
g83
ssg71
g4333
sg64
(lp4340
S'generic_patterns'
p4341
asbag57
(g78
g59
NtRp4342
(dp4343
g62
(dp4344
g89
g90
ssg71
g4333
sg64
(lp4345
S':'
asbag57
(g78
g59
NtRp4346
(dp4347
g62
(dp4348
sg71
g4333
sg64
(lp4349
g57
(g58
g59
NtRp4350
(dp4351
g62
(dp4352
g70
I5
ssg71
g4346
sg64
(lp4353
g57
(g66
g59
NtRp4354
(dp4355
g62
(dp4356
g70
I4
ssg71
Nsg64
(lp4357
g57
(g73
g59
NtRp4358
(dp4359
g62
(dp4360
sg71
g4354
sg64
(lp4361
g57
(g78
g59
NtRp4362
(dp4363
g62
(dp4364
sg71
g4358
sg64
(lp4365
g57
(g58
g59
NtRp4366
(dp4367
g62
(dp4368
g70
I4
ssg71
g4362
sg64
(lp4369
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4370
(dp4371
g62
(dp4372
sg71
g3871
sg64
(lp4373
g57
(g78
g59
NtRp4374
(dp4375
g62
(dp4376
g82
g83
ssg71
g4370
sg64
(lp4377
S'google_analytics_id'
p4378
asbag57
(g78
g59
NtRp4379
(dp4380
g62
(dp4381
g89
g90
ssg71
g4370
sg64
(lp4382
S':'
asbag57
(g78
g59
NtRp4383
(dp4384
g62
(dp4385
sg71
g4370
sg64
(lp4386
g57
(g58
g59
NtRp4387
(dp4388
g62
(dp4389
g70
I5
ssg71
g4383
sg64
(lp4390
S'None'
p4391
asbasbasbag57
(g73
g59
NtRp4392
(dp4393
g62
(dp4394
sg71
g3871
sg64
(lp4395
g57
(g78
g59
NtRp4396
(dp4397
g62
(dp4398
g82
g83
ssg71
g4392
sg64
(lp4399
S'headers'
p4400
asbag57
(g78
g59
NtRp4401
(dp4402
g62
(dp4403
g89
g90
ssg71
g4392
sg64
(lp4404
S':'
asbag57
(g78
g59
NtRp4405
(dp4406
g62
(dp4407
sg71
g4392
sg64
(lp4408
g57
(g58
g59
NtRp4409
(dp4410
g62
(dp4411
g70
I5
ssg71
g4405
sg64
(lp4412
g57
(g66
g59
NtRp4413
(dp4414
g62
(dp4415
g70
I4
ssg71
Nsg64
(lp4416
g57
(g73
g59
NtRp4417
(dp4418
g62
(dp4419
sg71
g4413
sg64
(lp4420
g57
(g78
g59
NtRp4421
(dp4422
g62
(dp4423
g82
g83
ssg71
g4417
sg64
(lp4424
S'X-Powered-By'
p4425
asbag57
(g78
g59
NtRp4426
(dp4427
g62
(dp4428
g89
g90
ssg71
g4417
sg64
(lp4429
S':'
asbag57
(g78
g59
NtRp4430
(dp4431
g62
(dp4432
sg71
g4417
sg64
(lp4433
g57
(g58
g59
NtRp4434
(dp4435
g62
(dp4436
g70
I4
ssg71
g4430
sg64
(lp4437
S'web2py'
p4438
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4439
(dp4440
g62
(dp4441
sg71
g3871
sg64
(lp4442
g57
(g78
g59
NtRp4443
(dp4444
g62
(dp4445
g82
g83
ssg71
g4439
sg64
(lp4446
S'menu'
p4447
asbag57
(g78
g59
NtRp4448
(dp4449
g62
(dp4450
g89
g90
ssg71
g4439
sg64
(lp4451
S':'
asbag57
(g78
g59
NtRp4452
(dp4453
g62
(dp4454
sg71
g4439
sg64
(lp4455
g57
(g58
g59
NtRp4456
(dp4457
g62
(dp4458
g70
I5
ssg71
g4452
sg64
(lp4459
g57
(g66
g59
NtRp4460
(dp4461
g62
(dp4462
g70
I4
ssg71
Nsg64
(lp4463
g57
(g73
g59
NtRp4464
(dp4465
g62
(dp4466
sg71
g4460
sg64
(lp4467
g57
(g78
g59
NtRp4468
(dp4469
g62
(dp4470
sg71
g4464
sg64
(lp4471
g57
(g58
g59
NtRp4472
(dp4473
g62
(dp4474
g70
I4
ssg71
g4468
sg64
(lp4475
g57
(g66
g59
NtRp4476
(dp4477
g62
(dp4478
g70
I3
ssg71
Nsg64
(lp4479
g57
(g73
g59
NtRp4480
(dp4481
g62
(dp4482
sg71
g4476
sg64
(lp4483
g57
(g78
g59
NtRp4484
(dp4485
g62
(dp4486
sg71
g4480
sg64
(lp4487
g57
(g58
g59
NtRp4488
(dp4489
g62
(dp4490
g70
I3
ssg71
g4484
sg64
(lp4491
cgluon.languages
lazyT_unpickle
p4492
(S't\x04\x00\x00\x00Home'
tRp4493
asbasbasbag57
(g73
g59
NtRp4494
(dp4495
g62
(dp4496
sg71
g4476
sg64
(lp4497
g57
(g78
g59
NtRp4498
(dp4499
g62
(dp4500
sg71
g4494
sg64
(lp4501
g57
(g58
g59
NtRp4502
(dp4503
g62
(dp4504
g70
I3
ssg71
g4498
sg64
(lp4505
g100
asbasbasbag57
(g73
g59
NtRp4506
(dp4507
g62
(dp4508
sg71
g4476
sg64
(lp4509
g57
(g78
g59
NtRp4510
(dp4511
g62
(dp4512
sg71
g4506
sg64
(lp4513
g57
(g58
g59
NtRp4514
(dp4515
g62
(dp4516
g70
I3
ssg71
g4510
sg64
(lp4517
S'/DEV_bootstrap_ch/default/list_all_projects'
p4518
asbasbasbag57
(g73
g59
NtRp4519
(dp4520
g62
(dp4521
sg71
g4476
sg64
(lp4522
g57
(g78
g59
NtRp4523
(dp4524
g62
(dp4525
sg71
g4519
sg64
(lp4526
g57
(g58
g59
NtRp4527
(dp4528
g62
(dp4529
g70
I3
ssg71
g4523
sg64
(lp4530
g57
(g66
g59
NtRp4531
(dp4532
g62
(dp4533
g70
I2
ssg71
Nsg64
(lp4534
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4535
(dp4536
g62
(dp4537
sg71
g3871
sg64
(lp4538
g57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
g82
g83
ssg71
g4535
sg64
(lp4542
S'meta'
p4543
asbag57
(g78
g59
NtRp4544
(dp4545
g62
(dp4546
g89
g90
ssg71
g4535
sg64
(lp4547
S':'
asbag57
(g78
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g4535
sg64
(lp4551
g57
(g58
g59
NtRp4552
(dp4553
g62
(dp4554
g70
I5
ssg71
g4548
sg64
(lp4555
g57
(g66
g59
NtRp4556
(dp4557
g62
(dp4558
g70
I4
ssg71
Nsg64
(lp4559
g57
(g73
g59
NtRp4560
(dp4561
g62
(dp4562
sg71
g4556
sg64
(lp4563
g57
(g78
g59
NtRp4564
(dp4565
g62
(dp4566
g82
g83
ssg71
g4560
sg64
(lp4567
S'author'
p4568
asbag57
(g78
g59
NtRp4569
(dp4570
g62
(dp4571
g89
g90
ssg71
g4560
sg64
(lp4572
S':'
asbag57
(g78
g59
NtRp4573
(dp4574
g62
(dp4575
sg71
g4560
sg64
(lp4576
g57
(g58
g59
NtRp4577
(dp4578
g62
(dp4579
g70
I4
ssg71
g4573
sg64
(lp4580
S'Vikram Pudi <vikram@iiit.ac.in>'
p4581
asbasbasbag57
(g73
g59
NtRp4582
(dp4583
g62
(dp4584
sg71
g4556
sg64
(lp4585
g57
(g78
g59
NtRp4586
(dp4587
g62
(dp4588
g82
g83
ssg71
g4582
sg64
(lp4589
S'copyright'
p4590
asbag57
(g78
g59
NtRp4591
(dp4592
g62
(dp4593
g89
g90
ssg71
g4582
sg64
(lp4594
S':'
asbag57
(g78
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4582
sg64
(lp4598
g57
(g58
g59
NtRp4599
(dp4600
g62
(dp4601
g70
I4
ssg71
g4595
sg64
(lp4602
S'Copyright 2011'
p4603
asbasbasbag57
(g73
g59
NtRp4604
(dp4605
g62
(dp4606
sg71
g4556
sg64
(lp4607
g57
(g78
g59
NtRp4608
(dp4609
g62
(dp4610
g82
g83
ssg71
g4604
sg64
(lp4611
S'description'
p4612
asbag57
(g78
g59
NtRp4613
(dp4614
g62
(dp4615
g89
g90
ssg71
g4604
sg64
(lp4616
S':'
asbag57
(g78
g59
NtRp4617
(dp4618
g62
(dp4619
sg71
g4604
sg64
(lp4620
g57
(g58
g59
NtRp4621
(dp4622
g62
(dp4623
g70
I4
ssg71
g4617
sg64
(lp4624
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4625
asbasbasbag57
(g73
g59
NtRp4626
(dp4627
g62
(dp4628
sg71
g4556
sg64
(lp4629
g57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
g82
g83
ssg71
g4626
sg64
(lp4633
S'generator'
p4634
asbag57
(g78
g59
NtRp4635
(dp4636
g62
(dp4637
g89
g90
ssg71
g4626
sg64
(lp4638
S':'
asbag57
(g78
g59
NtRp4639
(dp4640
g62
(dp4641
sg71
g4626
sg64
(lp4642
g57
(g58
g59
NtRp4643
(dp4644
g62
(dp4645
g70
I4
ssg71
g4639
sg64
(lp4646
S'Web2py Web Framework'
p4647
asbasbasbag57
(g73
g59
NtRp4648
(dp4649
g62
(dp4650
sg71
g4556
sg64
(lp4651
g57
(g78
g59
NtRp4652
(dp4653
g62
(dp4654
g82
g83
ssg71
g4648
sg64
(lp4655
S'keywords'
p4656
asbag57
(g78
g59
NtRp4657
(dp4658
g62
(dp4659
g89
g90
ssg71
g4648
sg64
(lp4660
S':'
asbag57
(g78
g59
NtRp4661
(dp4662
g62
(dp4663
sg71
g4648
sg64
(lp4664
g57
(g58
g59
NtRp4665
(dp4666
g62
(dp4667
g70
I4
ssg71
g4661
sg64
(lp4668
S'web2py, python, metabolome, metabolomics'
p4669
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4670
(dp4671
g62
(dp4672
sg71
g3871
sg64
(lp4673
g57
(g78
g59
NtRp4674
(dp4675
g62
(dp4676
g82
g83
ssg71
g4670
sg64
(lp4677
S'models_to_run'
p4678
asbag57
(g78
g59
NtRp4679
(dp4680
g62
(dp4681
g89
g90
ssg71
g4670
sg64
(lp4682
S':'
asbag57
(g78
g59
NtRp4683
(dp4684
g62
(dp4685
sg71
g4670
sg64
(lp4686
g57
(g58
g59
NtRp4687
(dp4688
g62
(dp4689
g70
I5
ssg71
g4683
sg64
(lp4690
g57
(g66
g59
NtRp4691
(dp4692
g62
(dp4693
g70
I4
ssg71
Nsg64
(lp4694
g57
(g73
g59
NtRp4695
(dp4696
g62
(dp4697
sg71
g4691
sg64
(lp4698
g57
(g78
g59
NtRp4699
(dp4700
g62
(dp4701
sg71
g4695
sg64
(lp4702
g57
(g58
g59
NtRp4703
(dp4704
g62
(dp4705
g70
I4
ssg71
g4699
sg64
(lp4706
S'^\\w+\\.py$'
p4707
asbasbasbag57
(g73
g59
NtRp4708
(dp4709
g62
(dp4710
sg71
g4691
sg64
(lp4711
g57
(g78
g59
NtRp4712
(dp4713
g62
(dp4714
sg71
g4708
sg64
(lp4715
g57
(g58
g59
NtRp4716
(dp4717
g62
(dp4718
g70
I4
ssg71
g4712
sg64
(lp4719
S'^default/\\w+\\.py$'
p4720
asbasbasbag57
(g73
g59
NtRp4721
(dp4722
g62
(dp4723
sg71
g4691
sg64
(lp4724
g57
(g78
g59
NtRp4725
(dp4726
g62
(dp4727
sg71
g4721
sg64
(lp4728
g57
(g58
g59
NtRp4729
(dp4730
g62
(dp4731
g70
I4
ssg71
g4725
sg64
(lp4732
S'^default/list_all_dev_projects/\\w+\\.py$'
p4733
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g3871
sg64
(lp4737
g57
(g78
g59
NtRp4738
(dp4739
g62
(dp4740
g82
g83
ssg71
g4734
sg64
(lp4741
S'postprocessing'
p4742
asbag57
(g78
g59
NtRp4743
(dp4744
g62
(dp4745
g89
g90
ssg71
g4734
sg64
(lp4746
S':'
asbag57
(g78
g59
NtRp4747
(dp4748
g62
(dp4749
sg71
g4734
sg64
(lp4750
g57
(g58
g59
NtRp4751
(dp4752
g62
(dp4753
g70
I5
ssg71
g4747
sg64
(lp4754
g57
(g66
g59
NtRp4755
(dp4756
g62
(dp4757
g70
I4
ssg71
Nsg64
(lp4758
sbasbasbasbag57
(g73
g59
NtRp4759
(dp4760
g62
(dp4761
sg71
g3871
sg64
(lp4762
g57
(g78
g59
NtRp4763
(dp4764
g62
(dp4765
g82
g83
ssg71
g4759
sg64
(lp4766
S'session_cookie_expires'
p4767
asbag57
(g78
g59
NtRp4768
(dp4769
g62
(dp4770
g89
g90
ssg71
g4759
sg64
(lp4771
S':'
asbag57
(g78
g59
NtRp4772
(dp4773
g62
(dp4774
sg71
g4759
sg64
(lp4775
g57
(g58
g59
NtRp4776
(dp4777
g62
(dp4778
g70
I5
ssg71
g4772
sg64
(lp4779
S'None'
p4780
asbasbasbag57
(g73
g59
NtRp4781
(dp4782
g62
(dp4783
sg71
g3871
sg64
(lp4784
g57
(g78
g59
NtRp4785
(dp4786
g62
(dp4787
g82
g83
ssg71
g4781
sg64
(lp4788
S'session_data_name'
p4789
asbag57
(g78
g59
NtRp4790
(dp4791
g62
(dp4792
g89
g90
ssg71
g4781
sg64
(lp4793
S':'
asbag57
(g78
g59
NtRp4794
(dp4795
g62
(dp4796
sg71
g4781
sg64
(lp4797
g57
(g58
g59
NtRp4798
(dp4799
g62
(dp4800
g70
I5
ssg71
g4794
sg64
(lp4801
S'session_data_dev_bootstrap_ch'
p4802
asbasbasbag57
(g73
g59
NtRp4803
(dp4804
g62
(dp4805
sg71
g3871
sg64
(lp4806
g57
(g78
g59
NtRp4807
(dp4808
g62
(dp4809
g82
g83
ssg71
g4803
sg64
(lp4810
S'session_file'
p4811
asbag57
(g78
g59
NtRp4812
(dp4813
g62
(dp4814
g89
g90
ssg71
g4803
sg64
(lp4815
S':'
asbag57
(g78
g59
NtRp4816
(dp4817
g62
(dp4818
sg71
g4803
sg64
(lp4819
g57
(g58
g59
NtRp4820
(dp4821
g62
(dp4822
g70
I5
ssg71
g4816
sg64
(lp4823
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xadbaa860>"
p4824
asbasbasbag57
(g73
g59
NtRp4825
(dp4826
g62
(dp4827
sg71
g3871
sg64
(lp4828
g57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
g82
g83
ssg71
g4825
sg64
(lp4832
S'session_filename'
p4833
asbag57
(g78
g59
NtRp4834
(dp4835
g62
(dp4836
g89
g90
ssg71
g4825
sg64
(lp4837
S':'
asbag57
(g78
g59
NtRp4838
(dp4839
g62
(dp4840
sg71
g4825
sg64
(lp4841
g57
(g58
g59
NtRp4842
(dp4843
g62
(dp4844
g70
I5
ssg71
g4838
sg64
(lp4845
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4846
asbasbasbag57
(g73
g59
NtRp4847
(dp4848
g62
(dp4849
sg71
g3871
sg64
(lp4850
g57
(g78
g59
NtRp4851
(dp4852
g62
(dp4853
g82
g83
ssg71
g4847
sg64
(lp4854
S'session_id'
p4855
asbag57
(g78
g59
NtRp4856
(dp4857
g62
(dp4858
g89
g90
ssg71
g4847
sg64
(lp4859
S':'
asbag57
(g78
g59
NtRp4860
(dp4861
g62
(dp4862
sg71
g4847
sg64
(lp4863
g57
(g58
g59
NtRp4864
(dp4865
g62
(dp4866
g70
I5
ssg71
g4860
sg64
(lp4867
g576
asbasbasbag57
(g73
g59
NtRp4868
(dp4869
g62
(dp4870
sg71
g3871
sg64
(lp4871
g57
(g78
g59
NtRp4872
(dp4873
g62
(dp4874
g82
g83
ssg71
g4868
sg64
(lp4875
S'session_id_name'
p4876
asbag57
(g78
g59
NtRp4877
(dp4878
g62
(dp4879
g89
g90
ssg71
g4868
sg64
(lp4880
S':'
asbag57
(g78
g59
NtRp4881
(dp4882
g62
(dp4883
sg71
g4868
sg64
(lp4884
g57
(g58
g59
NtRp4885
(dp4886
g62
(dp4887
g70
I5
ssg71
g4881
sg64
(lp4888
g3928
asbasbasbag57
(g73
g59
NtRp4889
(dp4890
g62
(dp4891
sg71
g3871
sg64
(lp4892
g57
(g78
g59
NtRp4893
(dp4894
g62
(dp4895
g82
g83
ssg71
g4889
sg64
(lp4896
S'session_locked'
p4897
asbag57
(g78
g59
NtRp4898
(dp4899
g62
(dp4900
g89
g90
ssg71
g4889
sg64
(lp4901
S':'
asbag57
(g78
g59
NtRp4902
(dp4903
g62
(dp4904
sg71
g4889
sg64
(lp4905
g57
(g58
g59
NtRp4906
(dp4907
g62
(dp4908
g70
I5
ssg71
g4902
sg64
(lp4909
g1708
asbasbasbag57
(g73
g59
NtRp4910
(dp4911
g62
(dp4912
sg71
g3871
sg64
(lp4913
g57
(g78
g59
NtRp4914
(dp4915
g62
(dp4916
g82
g83
ssg71
g4910
sg64
(lp4917
S'session_new'
p4918
asbag57
(g78
g59
NtRp4919
(dp4920
g62
(dp4921
g89
g90
ssg71
g4910
sg64
(lp4922
S':'
asbag57
(g78
g59
NtRp4923
(dp4924
g62
(dp4925
sg71
g4910
sg64
(lp4926
g57
(g58
g59
NtRp4927
(dp4928
g62
(dp4929
g70
I5
ssg71
g4923
sg64
(lp4930
g100
asbasbasbag57
(g73
g59
NtRp4931
(dp4932
g62
(dp4933
sg71
g3871
sg64
(lp4934
g57
(g78
g59
NtRp4935
(dp4936
g62
(dp4937
g82
g83
ssg71
g4931
sg64
(lp4938
S'session_storage_type'
p4939
asbag57
(g78
g59
NtRp4940
(dp4941
g62
(dp4942
g89
g90
ssg71
g4931
sg64
(lp4943
S':'
asbag57
(g78
g59
NtRp4944
(dp4945
g62
(dp4946
sg71
g4931
sg64
(lp4947
g57
(g58
g59
NtRp4948
(dp4949
g62
(dp4950
g70
I5
ssg71
g4944
sg64
(lp4951
g3161
asbasbasbag57
(g73
g59
NtRp4952
(dp4953
g62
(dp4954
sg71
g3871
sg64
(lp4955
g57
(g78
g59
NtRp4956
(dp4957
g62
(dp4958
g82
g83
ssg71
g4952
sg64
(lp4959
S'status'
p4960
asbag57
(g78
g59
NtRp4961
(dp4962
g62
(dp4963
g89
g90
ssg71
g4952
sg64
(lp4964
S':'
asbag57
(g78
g59
NtRp4965
(dp4966
g62
(dp4967
sg71
g4952
sg64
(lp4968
g57
(g58
g59
NtRp4969
(dp4970
g62
(dp4971
g70
I5
ssg71
g4965
sg64
(lp4972
S'200'
p4973
asbasbasbag57
(g73
g59
NtRp4974
(dp4975
g62
(dp4976
sg71
g3871
sg64
(lp4977
g57
(g78
g59
NtRp4978
(dp4979
g62
(dp4980
g82
g83
ssg71
g4974
sg64
(lp4981
S'subtitle'
p4982
asbag57
(g78
g59
NtRp4983
(dp4984
g62
(dp4985
g89
g90
ssg71
g4974
sg64
(lp4986
S':'
asbag57
(g78
g59
NtRp4987
(dp4988
g62
(dp4989
sg71
g4974
sg64
(lp4990
g57
(g58
g59
NtRp4991
(dp4992
g62
(dp4993
g70
I5
ssg71
g4987
sg64
(lp4994
g4492
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4995
asbasbasbag57
(g73
g59
NtRp4996
(dp4997
g62
(dp4998
sg71
g3871
sg64
(lp4999
g57
(g78
g59
NtRp5000
(dp5001
g62
(dp5002
g82
g83
ssg71
g4996
sg64
(lp5003
g3737
asbag57
(g78
g59
NtRp5004
(dp5005
g62
(dp5006
g89
g90
ssg71
g4996
sg64
(lp5007
S':'
asbag57
(g78
g59
NtRp5008
(dp5009
g62
(dp5010
sg71
g4996
sg64
(lp5011
g57
(g58
g59
NtRp5012
(dp5013
g62
(dp5014
g70
I5
ssg71
g5008
sg64
(lp5015
g122
asbasbasbag57
(g73
g59
NtRp5016
(dp5017
g62
(dp5018
sg71
g3871
sg64
(lp5019
g57
(g78
g59
NtRp5020
(dp5021
g62
(dp5022
g82
g83
ssg71
g5016
sg64
(lp5023
S'view'
p5024
asbag57
(g78
g59
NtRp5025
(dp5026
g62
(dp5027
g89
g90
ssg71
g5016
sg64
(lp5028
S':'
asbag57
(g78
g59
NtRp5029
(dp5030
g62
(dp5031
sg71
g5016
sg64
(lp5032
g57
(g58
g59
NtRp5033
(dp5034
g62
(dp5035
g70
I5
ssg71
g5029
sg64
(lp5036
S'default/list_all_dev_projects.html'
p5037
asbasbasbasbasbsS'locals'
p5038
(dp5039
S'ck'
p5040
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p5041
sS'q1'
p5042
S"<Query (project.project_status = '0')>"
p5043
sS'q2'
p5044
S'<Query (sample.experimentalist = 2)>'
p5045
sS'links'
p5046
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]}"
p5047
sS'addsample'
p5048
g1708
sg42
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p5049
sS'l1'
p5050
S"[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]"
p5051
sS'fi'
p5052
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p5053
sS'create_dict'
p5054
S"{'project': False, 'sample': True}"
p5055
sS'edit_dict'
p5056
S"{'project': False}"
p5057
sS'delete_dict'
p5058
S"{'project': False}"
p5059
sssS'traceback'
p5060
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1126, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 321, in list_all_dev_projects\n    router(request.args)\nTypeError: router() takes no arguments (1 given)\n'
p5061
s.