(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.approval_status==1)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.approval_status==1)(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    dev_projects = db(db.project.project_status == 0)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy\',_href=URL("default","replicate",args=request.args[:]+[row.id])),\\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'biosource_\'+tes(row.id,\'biosource\'),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           lambda row: A(\'PGC_\'+tes(row.id,\'plant_growth_condition\'),_href=URL("default","router",args=getargs(row.id,args,"plant_growth_condition"))), \\\n           lambda row: A(\'treatment_\'+tes(row.id,\'treatments\'),_href=URL("default","router",args=getargs(row.id,args,"treatments"))), \\\n           lambda row: A(\'harvest_\'+tes(row.id,\'harvests\'),_href=URL("default","router",args=getargs(row.id,args,"harvests"))), \\\n           lambda row: A(\'Ext_\'+tes(row.id,\'extraction_preparation\'),_href=URL("default","router",args=getargs(row.id,args,"extraction_preparation"))), \\\n           lambda row: A(\'GC_\'+tes(row.id,\'gas_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"gas_chromatography"))), \\\n           lambda row: A(\'LC_\'+tes(row.id,\'liquid_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"liquid_chromatography"))), \\\n           lambda row: A(\'MS_\'+tes(row.id,\'mass_spectroscopy\'),_href=URL("default","router",args=getargs(row.id,args,"mass_spectroscopy"))), \\\n           lambda row: A(\'spectrophotometry_\'+tes(row.id,\'spectrophotometry\'),_href=URL("default","router",args=getargs(row.id,args,"spectrophotometry")))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a,table):\n    if db(db[table].sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'id\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'id'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbasbasbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g67
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
g82
g83
ssg71
g160
sg64
(lp167
S'body'
p168
asbag57
(g78
g59
NtRp169
(dp170
g62
(dp171
g89
g90
ssg71
g160
sg64
(lp172
S':'
asbag57
(g78
g59
NtRp173
(dp174
g62
(dp175
sg71
g160
sg64
(lp176
g57
(g58
g59
NtRp177
(dp178
g62
(dp179
g70
I5
ssg71
g173
sg64
(lp180
S'<cStringIO.StringO object at 0x8e581e0>'
p181
asbasbasbag57
(g73
g59
NtRp182
(dp183
g62
(dp184
sg71
g67
sg64
(lp185
g57
(g78
g59
NtRp186
(dp187
g62
(dp188
g82
g83
ssg71
g182
sg64
(lp189
S'cid'
p190
asbag57
(g78
g59
NtRp191
(dp192
g62
(dp193
g89
g90
ssg71
g182
sg64
(lp194
S':'
asbag57
(g78
g59
NtRp195
(dp196
g62
(dp197
sg71
g182
sg64
(lp198
g57
(g58
g59
NtRp199
(dp200
g62
(dp201
g70
I5
ssg71
g195
sg64
(lp202
S'None'
p203
asbasbasbag57
(g73
g59
NtRp204
(dp205
g62
(dp206
sg71
g67
sg64
(lp207
g57
(g78
g59
NtRp208
(dp209
g62
(dp210
g82
g83
ssg71
g204
sg64
(lp211
S'client'
p212
asbag57
(g78
g59
NtRp213
(dp214
g62
(dp215
g89
g90
ssg71
g204
sg64
(lp216
S':'
asbag57
(g78
g59
NtRp217
(dp218
g62
(dp219
sg71
g204
sg64
(lp220
g57
(g58
g59
NtRp221
(dp222
g62
(dp223
g70
I5
ssg71
g217
sg64
(lp224
S'127.0.0.1'
p225
asbasbasbag57
(g73
g59
NtRp226
(dp227
g62
(dp228
sg71
g67
sg64
(lp229
g57
(g78
g59
NtRp230
(dp231
g62
(dp232
g82
g83
ssg71
g226
sg64
(lp233
S'controller'
p234
asbag57
(g78
g59
NtRp235
(dp236
g62
(dp237
g89
g90
ssg71
g226
sg64
(lp238
S':'
asbag57
(g78
g59
NtRp239
(dp240
g62
(dp241
sg71
g226
sg64
(lp242
g57
(g58
g59
NtRp243
(dp244
g62
(dp245
g70
I5
ssg71
g239
sg64
(lp246
S'default'
p247
asbasbasbag57
(g73
g59
NtRp248
(dp249
g62
(dp250
sg71
g67
sg64
(lp251
g57
(g78
g59
NtRp252
(dp253
g62
(dp254
g82
g83
ssg71
g248
sg64
(lp255
S'cookies'
p256
asbag57
(g78
g59
NtRp257
(dp258
g62
(dp259
g89
g90
ssg71
g248
sg64
(lp260
S':'
asbag57
(g78
g59
NtRp261
(dp262
g62
(dp263
sg71
g248
sg64
(lp264
g57
(g58
g59
NtRp265
(dp266
g62
(dp267
g70
I5
ssg71
g261
sg64
(lp268
g57
(g66
g59
NtRp269
(dp270
g62
(dp271
g70
I4
ssg71
Nsg64
(lp272
g57
(g73
g59
NtRp273
(dp274
g62
(dp275
sg71
g269
sg64
(lp276
g57
(g78
g59
NtRp277
(dp278
g62
(dp279
g82
g83
ssg71
g273
sg64
(lp280
S'session_id_admin'
p281
asbag57
(g78
g59
NtRp282
(dp283
g62
(dp284
g89
g90
ssg71
g273
sg64
(lp285
S':'
asbag57
(g78
g59
NtRp286
(dp287
g62
(dp288
sg71
g273
sg64
(lp289
g57
(g58
g59
NtRp290
(dp291
g62
(dp292
g70
I4
ssg71
g286
sg64
(lp293
S'127.0.0.1-139d73ee-0525-46bf-aeb6-deeffe5cb9b3'
p294
ag57
(g66
g59
NtRp295
(dp296
g62
(dp297
g70
I3
ssg71
Nsg64
(lp298
g57
(g73
g59
NtRp299
(dp300
g62
(dp301
sg71
g295
sg64
(lp302
g57
(g78
g59
NtRp303
(dp304
g62
(dp305
g82
g83
ssg71
g299
sg64
(lp306
S'comment'
p307
asbag57
(g78
g59
NtRp308
(dp309
g62
(dp310
g89
g90
ssg71
g299
sg64
(lp311
S':'
asbag57
(g78
g59
NtRp312
(dp313
g62
(dp314
sg71
g299
sg64
(lp315
g57
(g58
g59
NtRp316
(dp317
g62
(dp318
g70
I3
ssg71
g312
sg64
(lp319
S''
asbasbasbag57
(g73
g59
NtRp320
(dp321
g62
(dp322
sg71
g295
sg64
(lp323
g57
(g78
g59
NtRp324
(dp325
g62
(dp326
g82
g83
ssg71
g320
sg64
(lp327
S'domain'
p328
asbag57
(g78
g59
NtRp329
(dp330
g62
(dp331
g89
g90
ssg71
g320
sg64
(lp332
S':'
asbag57
(g78
g59
NtRp333
(dp334
g62
(dp335
sg71
g320
sg64
(lp336
g57
(g58
g59
NtRp337
(dp338
g62
(dp339
g70
I3
ssg71
g333
sg64
(lp340
S''
asbasbasbag57
(g73
g59
NtRp341
(dp342
g62
(dp343
sg71
g295
sg64
(lp344
g57
(g78
g59
NtRp345
(dp346
g62
(dp347
g82
g83
ssg71
g341
sg64
(lp348
S'expires'
p349
asbag57
(g78
g59
NtRp350
(dp351
g62
(dp352
g89
g90
ssg71
g341
sg64
(lp353
S':'
asbag57
(g78
g59
NtRp354
(dp355
g62
(dp356
sg71
g341
sg64
(lp357
g57
(g58
g59
NtRp358
(dp359
g62
(dp360
g70
I3
ssg71
g354
sg64
(lp361
S''
asbasbasbag57
(g73
g59
NtRp362
(dp363
g62
(dp364
sg71
g295
sg64
(lp365
g57
(g78
g59
NtRp366
(dp367
g62
(dp368
g82
g83
ssg71
g362
sg64
(lp369
S'httponly'
p370
asbag57
(g78
g59
NtRp371
(dp372
g62
(dp373
g89
g90
ssg71
g362
sg64
(lp374
S':'
asbag57
(g78
g59
NtRp375
(dp376
g62
(dp377
sg71
g362
sg64
(lp378
g57
(g58
g59
NtRp379
(dp380
g62
(dp381
g70
I3
ssg71
g375
sg64
(lp382
S''
asbasbasbag57
(g73
g59
NtRp383
(dp384
g62
(dp385
sg71
g295
sg64
(lp386
g57
(g78
g59
NtRp387
(dp388
g62
(dp389
g82
g83
ssg71
g383
sg64
(lp390
S'max-age'
p391
asbag57
(g78
g59
NtRp392
(dp393
g62
(dp394
g89
g90
ssg71
g383
sg64
(lp395
S':'
asbag57
(g78
g59
NtRp396
(dp397
g62
(dp398
sg71
g383
sg64
(lp399
g57
(g58
g59
NtRp400
(dp401
g62
(dp402
g70
I3
ssg71
g396
sg64
(lp403
S''
asbasbasbag57
(g73
g59
NtRp404
(dp405
g62
(dp406
sg71
g295
sg64
(lp407
g57
(g78
g59
NtRp408
(dp409
g62
(dp410
g82
g83
ssg71
g404
sg64
(lp411
S'path'
p412
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
g89
g90
ssg71
g404
sg64
(lp416
S':'
asbag57
(g78
g59
NtRp417
(dp418
g62
(dp419
sg71
g404
sg64
(lp420
g57
(g58
g59
NtRp421
(dp422
g62
(dp423
g70
I3
ssg71
g417
sg64
(lp424
S''
asbasbasbag57
(g73
g59
NtRp425
(dp426
g62
(dp427
sg71
g295
sg64
(lp428
g57
(g78
g59
NtRp429
(dp430
g62
(dp431
g82
g83
ssg71
g425
sg64
(lp432
S'secure'
p433
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
g89
g90
ssg71
g425
sg64
(lp437
S':'
asbag57
(g78
g59
NtRp438
(dp439
g62
(dp440
sg71
g425
sg64
(lp441
g57
(g58
g59
NtRp442
(dp443
g62
(dp444
g70
I3
ssg71
g438
sg64
(lp445
S''
asbasbasbag57
(g73
g59
NtRp446
(dp447
g62
(dp448
sg71
g295
sg64
(lp449
g57
(g78
g59
NtRp450
(dp451
g62
(dp452
g82
g83
ssg71
g446
sg64
(lp453
S'version'
p454
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
g89
g90
ssg71
g446
sg64
(lp458
S':'
asbag57
(g78
g59
NtRp459
(dp460
g62
(dp461
sg71
g446
sg64
(lp462
g57
(g58
g59
NtRp463
(dp464
g62
(dp465
g70
I3
ssg71
g459
sg64
(lp466
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp467
(dp468
g62
(dp469
sg71
g269
sg64
(lp470
g57
(g78
g59
NtRp471
(dp472
g62
(dp473
g82
g83
ssg71
g467
sg64
(lp474
S'session_id_dev_bootstrap_ch'
p475
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
g89
g90
ssg71
g467
sg64
(lp479
S':'
asbag57
(g78
g59
NtRp480
(dp481
g62
(dp482
sg71
g467
sg64
(lp483
g57
(g58
g59
NtRp484
(dp485
g62
(dp486
g70
I4
ssg71
g480
sg64
(lp487
S'127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a'
p488
ag57
(g66
g59
NtRp489
(dp490
g62
(dp491
g70
I3
ssg71
Nsg64
(lp492
g57
(g73
g59
NtRp493
(dp494
g62
(dp495
sg71
g489
sg64
(lp496
g57
(g78
g59
NtRp497
(dp498
g62
(dp499
g82
g83
ssg71
g493
sg64
(lp500
g307
asbag57
(g78
g59
NtRp501
(dp502
g62
(dp503
g89
g90
ssg71
g493
sg64
(lp504
S':'
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
sg71
g493
sg64
(lp508
g57
(g58
g59
NtRp509
(dp510
g62
(dp511
g70
I3
ssg71
g505
sg64
(lp512
S''
asbasbasbag57
(g73
g59
NtRp513
(dp514
g62
(dp515
sg71
g489
sg64
(lp516
g57
(g78
g59
NtRp517
(dp518
g62
(dp519
g82
g83
ssg71
g513
sg64
(lp520
g328
asbag57
(g78
g59
NtRp521
(dp522
g62
(dp523
g89
g90
ssg71
g513
sg64
(lp524
S':'
asbag57
(g78
g59
NtRp525
(dp526
g62
(dp527
sg71
g513
sg64
(lp528
g57
(g58
g59
NtRp529
(dp530
g62
(dp531
g70
I3
ssg71
g525
sg64
(lp532
S''
asbasbasbag57
(g73
g59
NtRp533
(dp534
g62
(dp535
sg71
g489
sg64
(lp536
g57
(g78
g59
NtRp537
(dp538
g62
(dp539
g82
g83
ssg71
g533
sg64
(lp540
g349
asbag57
(g78
g59
NtRp541
(dp542
g62
(dp543
g89
g90
ssg71
g533
sg64
(lp544
S':'
asbag57
(g78
g59
NtRp545
(dp546
g62
(dp547
sg71
g533
sg64
(lp548
g57
(g58
g59
NtRp549
(dp550
g62
(dp551
g70
I3
ssg71
g545
sg64
(lp552
S''
asbasbasbag57
(g73
g59
NtRp553
(dp554
g62
(dp555
sg71
g489
sg64
(lp556
g57
(g78
g59
NtRp557
(dp558
g62
(dp559
g82
g83
ssg71
g553
sg64
(lp560
g370
asbag57
(g78
g59
NtRp561
(dp562
g62
(dp563
g89
g90
ssg71
g553
sg64
(lp564
S':'
asbag57
(g78
g59
NtRp565
(dp566
g62
(dp567
sg71
g553
sg64
(lp568
g57
(g58
g59
NtRp569
(dp570
g62
(dp571
g70
I3
ssg71
g565
sg64
(lp572
S''
asbasbasbag57
(g73
g59
NtRp573
(dp574
g62
(dp575
sg71
g489
sg64
(lp576
g57
(g78
g59
NtRp577
(dp578
g62
(dp579
g82
g83
ssg71
g573
sg64
(lp580
g391
asbag57
(g78
g59
NtRp581
(dp582
g62
(dp583
g89
g90
ssg71
g573
sg64
(lp584
S':'
asbag57
(g78
g59
NtRp585
(dp586
g62
(dp587
sg71
g573
sg64
(lp588
g57
(g58
g59
NtRp589
(dp590
g62
(dp591
g70
I3
ssg71
g585
sg64
(lp592
S''
asbasbasbag57
(g73
g59
NtRp593
(dp594
g62
(dp595
sg71
g489
sg64
(lp596
g57
(g78
g59
NtRp597
(dp598
g62
(dp599
g82
g83
ssg71
g593
sg64
(lp600
g412
asbag57
(g78
g59
NtRp601
(dp602
g62
(dp603
g89
g90
ssg71
g593
sg64
(lp604
S':'
asbag57
(g78
g59
NtRp605
(dp606
g62
(dp607
sg71
g593
sg64
(lp608
g57
(g58
g59
NtRp609
(dp610
g62
(dp611
g70
I3
ssg71
g605
sg64
(lp612
S''
asbasbasbag57
(g73
g59
NtRp613
(dp614
g62
(dp615
sg71
g489
sg64
(lp616
g57
(g78
g59
NtRp617
(dp618
g62
(dp619
g82
g83
ssg71
g613
sg64
(lp620
g433
asbag57
(g78
g59
NtRp621
(dp622
g62
(dp623
g89
g90
ssg71
g613
sg64
(lp624
S':'
asbag57
(g78
g59
NtRp625
(dp626
g62
(dp627
sg71
g613
sg64
(lp628
g57
(g58
g59
NtRp629
(dp630
g62
(dp631
g70
I3
ssg71
g625
sg64
(lp632
S''
asbasbasbag57
(g73
g59
NtRp633
(dp634
g62
(dp635
sg71
g489
sg64
(lp636
g57
(g78
g59
NtRp637
(dp638
g62
(dp639
g82
g83
ssg71
g633
sg64
(lp640
g454
asbag57
(g78
g59
NtRp641
(dp642
g62
(dp643
g89
g90
ssg71
g633
sg64
(lp644
S':'
asbag57
(g78
g59
NtRp645
(dp646
g62
(dp647
sg71
g633
sg64
(lp648
g57
(g58
g59
NtRp649
(dp650
g62
(dp651
g70
I3
ssg71
g645
sg64
(lp652
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp653
(dp654
g62
(dp655
sg71
g269
sg64
(lp656
g57
(g78
g59
NtRp657
(dp658
g62
(dp659
g82
g83
ssg71
g653
sg64
(lp660
S'session_id_welcome'
p661
asbag57
(g78
g59
NtRp662
(dp663
g62
(dp664
g89
g90
ssg71
g653
sg64
(lp665
S':'
asbag57
(g78
g59
NtRp666
(dp667
g62
(dp668
sg71
g653
sg64
(lp669
g57
(g58
g59
NtRp670
(dp671
g62
(dp672
g70
I4
ssg71
g666
sg64
(lp673
S'127.0.0.1-73acd783-e52e-42fb-8ab7-4f6570d093df'
p674
ag57
(g66
g59
NtRp675
(dp676
g62
(dp677
g70
I3
ssg71
Nsg64
(lp678
g57
(g73
g59
NtRp679
(dp680
g62
(dp681
sg71
g675
sg64
(lp682
g57
(g78
g59
NtRp683
(dp684
g62
(dp685
g82
g83
ssg71
g679
sg64
(lp686
g307
asbag57
(g78
g59
NtRp687
(dp688
g62
(dp689
g89
g90
ssg71
g679
sg64
(lp690
S':'
asbag57
(g78
g59
NtRp691
(dp692
g62
(dp693
sg71
g679
sg64
(lp694
g57
(g58
g59
NtRp695
(dp696
g62
(dp697
g70
I3
ssg71
g691
sg64
(lp698
S''
asbasbasbag57
(g73
g59
NtRp699
(dp700
g62
(dp701
sg71
g675
sg64
(lp702
g57
(g78
g59
NtRp703
(dp704
g62
(dp705
g82
g83
ssg71
g699
sg64
(lp706
g328
asbag57
(g78
g59
NtRp707
(dp708
g62
(dp709
g89
g90
ssg71
g699
sg64
(lp710
S':'
asbag57
(g78
g59
NtRp711
(dp712
g62
(dp713
sg71
g699
sg64
(lp714
g57
(g58
g59
NtRp715
(dp716
g62
(dp717
g70
I3
ssg71
g711
sg64
(lp718
S''
asbasbasbag57
(g73
g59
NtRp719
(dp720
g62
(dp721
sg71
g675
sg64
(lp722
g57
(g78
g59
NtRp723
(dp724
g62
(dp725
g82
g83
ssg71
g719
sg64
(lp726
g349
asbag57
(g78
g59
NtRp727
(dp728
g62
(dp729
g89
g90
ssg71
g719
sg64
(lp730
S':'
asbag57
(g78
g59
NtRp731
(dp732
g62
(dp733
sg71
g719
sg64
(lp734
g57
(g58
g59
NtRp735
(dp736
g62
(dp737
g70
I3
ssg71
g731
sg64
(lp738
S''
asbasbasbag57
(g73
g59
NtRp739
(dp740
g62
(dp741
sg71
g675
sg64
(lp742
g57
(g78
g59
NtRp743
(dp744
g62
(dp745
g82
g83
ssg71
g739
sg64
(lp746
g370
asbag57
(g78
g59
NtRp747
(dp748
g62
(dp749
g89
g90
ssg71
g739
sg64
(lp750
S':'
asbag57
(g78
g59
NtRp751
(dp752
g62
(dp753
sg71
g739
sg64
(lp754
g57
(g58
g59
NtRp755
(dp756
g62
(dp757
g70
I3
ssg71
g751
sg64
(lp758
S''
asbasbasbag57
(g73
g59
NtRp759
(dp760
g62
(dp761
sg71
g675
sg64
(lp762
g57
(g78
g59
NtRp763
(dp764
g62
(dp765
g82
g83
ssg71
g759
sg64
(lp766
g391
asbag57
(g78
g59
NtRp767
(dp768
g62
(dp769
g89
g90
ssg71
g759
sg64
(lp770
S':'
asbag57
(g78
g59
NtRp771
(dp772
g62
(dp773
sg71
g759
sg64
(lp774
g57
(g58
g59
NtRp775
(dp776
g62
(dp777
g70
I3
ssg71
g771
sg64
(lp778
S''
asbasbasbag57
(g73
g59
NtRp779
(dp780
g62
(dp781
sg71
g675
sg64
(lp782
g57
(g78
g59
NtRp783
(dp784
g62
(dp785
g82
g83
ssg71
g779
sg64
(lp786
g412
asbag57
(g78
g59
NtRp787
(dp788
g62
(dp789
g89
g90
ssg71
g779
sg64
(lp790
S':'
asbag57
(g78
g59
NtRp791
(dp792
g62
(dp793
sg71
g779
sg64
(lp794
g57
(g58
g59
NtRp795
(dp796
g62
(dp797
g70
I3
ssg71
g791
sg64
(lp798
S''
asbasbasbag57
(g73
g59
NtRp799
(dp800
g62
(dp801
sg71
g675
sg64
(lp802
g57
(g78
g59
NtRp803
(dp804
g62
(dp805
g82
g83
ssg71
g799
sg64
(lp806
g433
asbag57
(g78
g59
NtRp807
(dp808
g62
(dp809
g89
g90
ssg71
g799
sg64
(lp810
S':'
asbag57
(g78
g59
NtRp811
(dp812
g62
(dp813
sg71
g799
sg64
(lp814
g57
(g58
g59
NtRp815
(dp816
g62
(dp817
g70
I3
ssg71
g811
sg64
(lp818
S''
asbasbasbag57
(g73
g59
NtRp819
(dp820
g62
(dp821
sg71
g675
sg64
(lp822
g57
(g78
g59
NtRp823
(dp824
g62
(dp825
g82
g83
ssg71
g819
sg64
(lp826
g454
asbag57
(g78
g59
NtRp827
(dp828
g62
(dp829
g89
g90
ssg71
g819
sg64
(lp830
S':'
asbag57
(g78
g59
NtRp831
(dp832
g62
(dp833
sg71
g819
sg64
(lp834
g57
(g58
g59
NtRp835
(dp836
g62
(dp837
g70
I3
ssg71
g831
sg64
(lp838
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp839
(dp840
g62
(dp841
sg71
g67
sg64
(lp842
g57
(g78
g59
NtRp843
(dp844
g62
(dp845
g82
g83
ssg71
g839
sg64
(lp846
S'env'
p847
asbag57
(g78
g59
NtRp848
(dp849
g62
(dp850
g89
g90
ssg71
g839
sg64
(lp851
S':'
asbag57
(g78
g59
NtRp852
(dp853
g62
(dp854
sg71
g839
sg64
(lp855
g57
(g58
g59
NtRp856
(dp857
g62
(dp858
g70
I5
ssg71
g852
sg64
(lp859
g57
(g66
g59
NtRp860
(dp861
g62
(dp862
g70
I4
ssg71
Nsg64
(lp863
g57
(g73
g59
NtRp864
(dp865
g62
(dp866
sg71
g860
sg64
(lp867
g57
(g78
g59
NtRp868
(dp869
g62
(dp870
g82
g83
ssg71
g864
sg64
(lp871
S'app_folders'
p872
asbag57
(g78
g59
NtRp873
(dp874
g62
(dp875
g89
g90
ssg71
g864
sg64
(lp876
S':'
asbag57
(g78
g59
NtRp877
(dp878
g62
(dp879
sg71
g864
sg64
(lp880
g57
(g58
g59
NtRp881
(dp882
g62
(dp883
g70
I4
ssg71
g877
sg64
(lp884
S"set(['/home/anil/Downloads/web2py/applications/welcome/', '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p885
asbasbasbag57
(g73
g59
NtRp886
(dp887
g62
(dp888
sg71
g860
sg64
(lp889
g57
(g78
g59
NtRp890
(dp891
g62
(dp892
g82
g83
ssg71
g886
sg64
(lp893
S'applications_parent'
p894
asbag57
(g78
g59
NtRp895
(dp896
g62
(dp897
g89
g90
ssg71
g886
sg64
(lp898
S':'
asbag57
(g78
g59
NtRp899
(dp900
g62
(dp901
sg71
g886
sg64
(lp902
g57
(g58
g59
NtRp903
(dp904
g62
(dp905
g70
I4
ssg71
g899
sg64
(lp906
S'/home/anil/Downloads/web2py'
p907
asbasbasbag57
(g73
g59
NtRp908
(dp909
g62
(dp910
sg71
g860
sg64
(lp911
g57
(g78
g59
NtRp912
(dp913
g62
(dp914
g82
g83
ssg71
g908
sg64
(lp915
S'cmd_args'
p916
asbag57
(g78
g59
NtRp917
(dp918
g62
(dp919
g89
g90
ssg71
g908
sg64
(lp920
S':'
asbag57
(g78
g59
NtRp921
(dp922
g62
(dp923
sg71
g908
sg64
(lp924
g57
(g58
g59
NtRp925
(dp926
g62
(dp927
g70
I4
ssg71
g921
sg64
(lp928
g57
(g66
g59
NtRp929
(dp930
g62
(dp931
g70
I3
ssg71
Nsg64
(lp932
sbasbasbasbag57
(g73
g59
NtRp933
(dp934
g62
(dp935
sg71
g860
sg64
(lp936
g57
(g78
g59
NtRp937
(dp938
g62
(dp939
g82
g83
ssg71
g933
sg64
(lp940
S'cmd_options'
p941
asbag57
(g78
g59
NtRp942
(dp943
g62
(dp944
g89
g90
ssg71
g933
sg64
(lp945
S':'
asbag57
(g78
g59
NtRp946
(dp947
g62
(dp948
sg71
g933
sg64
(lp949
g57
(g58
g59
NtRp950
(dp951
g62
(dp952
g70
I4
ssg71
g946
sg64
(lp953
S"<Values at 0x8936a4c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p954
asbasbasbag57
(g73
g59
NtRp955
(dp956
g62
(dp957
sg71
g860
sg64
(lp958
g57
(g78
g59
NtRp959
(dp960
g62
(dp961
g82
g83
ssg71
g955
sg64
(lp962
S'db_sessions'
p963
asbag57
(g78
g59
NtRp964
(dp965
g62
(dp966
g89
g90
ssg71
g955
sg64
(lp967
S':'
asbag57
(g78
g59
NtRp968
(dp969
g62
(dp970
sg71
g955
sg64
(lp971
g57
(g58
g59
NtRp972
(dp973
g62
(dp974
g70
I4
ssg71
g968
sg64
(lp975
S'set([])'
p976
asbasbasbag57
(g73
g59
NtRp977
(dp978
g62
(dp979
sg71
g860
sg64
(lp980
g57
(g78
g59
NtRp981
(dp982
g62
(dp983
g82
g83
ssg71
g977
sg64
(lp984
S'debugging'
p985
asbag57
(g78
g59
NtRp986
(dp987
g62
(dp988
g89
g90
ssg71
g977
sg64
(lp989
S':'
asbag57
(g78
g59
NtRp990
(dp991
g62
(dp992
sg71
g977
sg64
(lp993
g57
(g58
g59
NtRp994
(dp995
g62
(dp996
g70
I4
ssg71
g990
sg64
(lp997
g100
asbasbasbag57
(g73
g59
NtRp998
(dp999
g62
(dp1000
sg71
g860
sg64
(lp1001
g57
(g78
g59
NtRp1002
(dp1003
g62
(dp1004
g82
g83
ssg71
g998
sg64
(lp1005
S'gluon_parent'
p1006
asbag57
(g78
g59
NtRp1007
(dp1008
g62
(dp1009
g89
g90
ssg71
g998
sg64
(lp1010
S':'
asbag57
(g78
g59
NtRp1011
(dp1012
g62
(dp1013
sg71
g998
sg64
(lp1014
g57
(g58
g59
NtRp1015
(dp1016
g62
(dp1017
g70
I4
ssg71
g1011
sg64
(lp1018
S'/home/anil/Downloads/web2py'
p1019
asbasbasbag57
(g73
g59
NtRp1020
(dp1021
g62
(dp1022
sg71
g860
sg64
(lp1023
g57
(g78
g59
NtRp1024
(dp1025
g62
(dp1026
g82
g83
ssg71
g1020
sg64
(lp1027
S'http_accept'
p1028
asbag57
(g78
g59
NtRp1029
(dp1030
g62
(dp1031
g89
g90
ssg71
g1020
sg64
(lp1032
S':'
asbag57
(g78
g59
NtRp1033
(dp1034
g62
(dp1035
sg71
g1020
sg64
(lp1036
g57
(g58
g59
NtRp1037
(dp1038
g62
(dp1039
g70
I4
ssg71
g1033
sg64
(lp1040
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1041
asbasbasbag57
(g73
g59
NtRp1042
(dp1043
g62
(dp1044
sg71
g860
sg64
(lp1045
g57
(g78
g59
NtRp1046
(dp1047
g62
(dp1048
g82
g83
ssg71
g1042
sg64
(lp1049
S'http_accept_charset'
p1050
asbag57
(g78
g59
NtRp1051
(dp1052
g62
(dp1053
g89
g90
ssg71
g1042
sg64
(lp1054
S':'
asbag57
(g78
g59
NtRp1055
(dp1056
g62
(dp1057
sg71
g1042
sg64
(lp1058
g57
(g58
g59
NtRp1059
(dp1060
g62
(dp1061
g70
I4
ssg71
g1055
sg64
(lp1062
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1063
asbasbasbag57
(g73
g59
NtRp1064
(dp1065
g62
(dp1066
sg71
g860
sg64
(lp1067
g57
(g78
g59
NtRp1068
(dp1069
g62
(dp1070
g82
g83
ssg71
g1064
sg64
(lp1071
S'http_accept_encoding'
p1072
asbag57
(g78
g59
NtRp1073
(dp1074
g62
(dp1075
g89
g90
ssg71
g1064
sg64
(lp1076
S':'
asbag57
(g78
g59
NtRp1077
(dp1078
g62
(dp1079
sg71
g1064
sg64
(lp1080
g57
(g58
g59
NtRp1081
(dp1082
g62
(dp1083
g70
I4
ssg71
g1077
sg64
(lp1084
S'gzip,deflate,sdch'
p1085
asbasbasbag57
(g73
g59
NtRp1086
(dp1087
g62
(dp1088
sg71
g860
sg64
(lp1089
g57
(g78
g59
NtRp1090
(dp1091
g62
(dp1092
g82
g83
ssg71
g1086
sg64
(lp1093
S'http_accept_language'
p1094
asbag57
(g78
g59
NtRp1095
(dp1096
g62
(dp1097
g89
g90
ssg71
g1086
sg64
(lp1098
S':'
asbag57
(g78
g59
NtRp1099
(dp1100
g62
(dp1101
sg71
g1086
sg64
(lp1102
g57
(g58
g59
NtRp1103
(dp1104
g62
(dp1105
g70
I4
ssg71
g1099
sg64
(lp1106
S'en-US,en;q=0.8'
p1107
asbasbasbag57
(g73
g59
NtRp1108
(dp1109
g62
(dp1110
sg71
g860
sg64
(lp1111
g57
(g78
g59
NtRp1112
(dp1113
g62
(dp1114
g82
g83
ssg71
g1108
sg64
(lp1115
S'http_connection'
p1116
asbag57
(g78
g59
NtRp1117
(dp1118
g62
(dp1119
g89
g90
ssg71
g1108
sg64
(lp1120
S':'
asbag57
(g78
g59
NtRp1121
(dp1122
g62
(dp1123
sg71
g1108
sg64
(lp1124
g57
(g58
g59
NtRp1125
(dp1126
g62
(dp1127
g70
I4
ssg71
g1121
sg64
(lp1128
S'keep-alive'
p1129
asbasbasbag57
(g73
g59
NtRp1130
(dp1131
g62
(dp1132
sg71
g860
sg64
(lp1133
g57
(g78
g59
NtRp1134
(dp1135
g62
(dp1136
g82
g83
ssg71
g1130
sg64
(lp1137
S'http_cookie'
p1138
asbag57
(g78
g59
NtRp1139
(dp1140
g62
(dp1141
g89
g90
ssg71
g1130
sg64
(lp1142
S':'
asbag57
(g78
g59
NtRp1143
(dp1144
g62
(dp1145
sg71
g1130
sg64
(lp1146
g57
(g58
g59
NtRp1147
(dp1148
g62
(dp1149
g70
I4
ssg71
g1143
sg64
(lp1150
S'session_id_welcome=127.0.0.1-73acd783-e52e-42fb-8ab7-4f6570d093df; session_id_dev_bootstrap_ch=127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a; session_id_admin=127.0.0.1-139d73ee-0525-46bf-aeb6-deeffe5cb9b3'
p1151
asbasbasbag57
(g73
g59
NtRp1152
(dp1153
g62
(dp1154
sg71
g860
sg64
(lp1155
g57
(g78
g59
NtRp1156
(dp1157
g62
(dp1158
g82
g83
ssg71
g1152
sg64
(lp1159
S'http_host'
p1160
asbag57
(g78
g59
NtRp1161
(dp1162
g62
(dp1163
g89
g90
ssg71
g1152
sg64
(lp1164
S':'
asbag57
(g78
g59
NtRp1165
(dp1166
g62
(dp1167
sg71
g1152
sg64
(lp1168
g57
(g58
g59
NtRp1169
(dp1170
g62
(dp1171
g70
I4
ssg71
g1165
sg64
(lp1172
S'127.0.0.1:8000'
p1173
asbasbasbag57
(g73
g59
NtRp1174
(dp1175
g62
(dp1176
sg71
g860
sg64
(lp1177
g57
(g78
g59
NtRp1178
(dp1179
g62
(dp1180
g82
g83
ssg71
g1174
sg64
(lp1181
S'http_referer'
p1182
asbag57
(g78
g59
NtRp1183
(dp1184
g62
(dp1185
g89
g90
ssg71
g1174
sg64
(lp1186
S':'
asbag57
(g78
g59
NtRp1187
(dp1188
g62
(dp1189
sg71
g1174
sg64
(lp1190
g57
(g58
g59
NtRp1191
(dp1192
g62
(dp1193
g70
I4
ssg71
g1187
sg64
(lp1194
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/5?_signature=184953c84482004fc5d24ec5108a55dce9c1b12f'
p1195
asbasbasbag57
(g73
g59
NtRp1196
(dp1197
g62
(dp1198
sg71
g860
sg64
(lp1199
g57
(g78
g59
NtRp1200
(dp1201
g62
(dp1202
g82
g83
ssg71
g1196
sg64
(lp1203
S'http_user_agent'
p1204
asbag57
(g78
g59
NtRp1205
(dp1206
g62
(dp1207
g89
g90
ssg71
g1196
sg64
(lp1208
S':'
asbag57
(g78
g59
NtRp1209
(dp1210
g62
(dp1211
sg71
g1196
sg64
(lp1212
g57
(g58
g59
NtRp1213
(dp1214
g62
(dp1215
g70
I4
ssg71
g1209
sg64
(lp1216
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1217
asbasbasbag57
(g73
g59
NtRp1218
(dp1219
g62
(dp1220
sg71
g860
sg64
(lp1221
g57
(g78
g59
NtRp1222
(dp1223
g62
(dp1224
g82
g83
ssg71
g1218
sg64
(lp1225
S'is_jython'
p1226
asbag57
(g78
g59
NtRp1227
(dp1228
g62
(dp1229
g89
g90
ssg71
g1218
sg64
(lp1230
S':'
asbag57
(g78
g59
NtRp1231
(dp1232
g62
(dp1233
sg71
g1218
sg64
(lp1234
g57
(g58
g59
NtRp1235
(dp1236
g62
(dp1237
g70
I4
ssg71
g1231
sg64
(lp1238
g100
asbasbasbag57
(g73
g59
NtRp1239
(dp1240
g62
(dp1241
sg71
g860
sg64
(lp1242
g57
(g78
g59
NtRp1243
(dp1244
g62
(dp1245
g82
g83
ssg71
g1239
sg64
(lp1246
S'is_pypy'
p1247
asbag57
(g78
g59
NtRp1248
(dp1249
g62
(dp1250
g89
g90
ssg71
g1239
sg64
(lp1251
S':'
asbag57
(g78
g59
NtRp1252
(dp1253
g62
(dp1254
sg71
g1239
sg64
(lp1255
g57
(g58
g59
NtRp1256
(dp1257
g62
(dp1258
g70
I4
ssg71
g1252
sg64
(lp1259
g100
asbasbasbag57
(g73
g59
NtRp1260
(dp1261
g62
(dp1262
sg71
g860
sg64
(lp1263
g57
(g78
g59
NtRp1264
(dp1265
g62
(dp1266
g82
g83
ssg71
g1260
sg64
(lp1267
S'local_hosts'
p1268
asbag57
(g78
g59
NtRp1269
(dp1270
g62
(dp1271
g89
g90
ssg71
g1260
sg64
(lp1272
S':'
asbag57
(g78
g59
NtRp1273
(dp1274
g62
(dp1275
sg71
g1260
sg64
(lp1276
g57
(g58
g59
NtRp1277
(dp1278
g62
(dp1279
g70
I4
ssg71
g1273
sg64
(lp1280
g57
(g66
g59
NtRp1281
(dp1282
g62
(dp1283
g70
I3
ssg71
Nsg64
(lp1284
g57
(g73
g59
NtRp1285
(dp1286
g62
(dp1287
sg71
g1281
sg64
(lp1288
g57
(g78
g59
NtRp1289
(dp1290
g62
(dp1291
sg71
g1285
sg64
(lp1292
g57
(g58
g59
NtRp1293
(dp1294
g62
(dp1295
g70
I3
ssg71
g1289
sg64
(lp1296
S'::1'
p1297
asbasbasbag57
(g73
g59
NtRp1298
(dp1299
g62
(dp1300
sg71
g1281
sg64
(lp1301
g57
(g78
g59
NtRp1302
(dp1303
g62
(dp1304
sg71
g1298
sg64
(lp1305
g57
(g58
g59
NtRp1306
(dp1307
g62
(dp1308
g70
I3
ssg71
g1302
sg64
(lp1309
S'127.0.1.1'
p1310
asbasbasbag57
(g73
g59
NtRp1311
(dp1312
g62
(dp1313
sg71
g1281
sg64
(lp1314
g57
(g78
g59
NtRp1315
(dp1316
g62
(dp1317
sg71
g1311
sg64
(lp1318
g57
(g58
g59
NtRp1319
(dp1320
g62
(dp1321
g70
I3
ssg71
g1315
sg64
(lp1322
S'::ffff:127.0.0.1'
p1323
asbasbasbag57
(g73
g59
NtRp1324
(dp1325
g62
(dp1326
sg71
g1281
sg64
(lp1327
g57
(g78
g59
NtRp1328
(dp1329
g62
(dp1330
sg71
g1324
sg64
(lp1331
g57
(g58
g59
NtRp1332
(dp1333
g62
(dp1334
g70
I3
ssg71
g1328
sg64
(lp1335
S'127.0.0.1'
p1336
asbasbasbag57
(g73
g59
NtRp1337
(dp1338
g62
(dp1339
sg71
g1281
sg64
(lp1340
g57
(g78
g59
NtRp1341
(dp1342
g62
(dp1343
sg71
g1337
sg64
(lp1344
g57
(g58
g59
NtRp1345
(dp1346
g62
(dp1347
g70
I3
ssg71
g1341
sg64
(lp1348
S'anil-Inspiron-1525'
p1349
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1350
(dp1351
g62
(dp1352
sg71
g860
sg64
(lp1353
g57
(g78
g59
NtRp1354
(dp1355
g62
(dp1356
g82
g83
ssg71
g1350
sg64
(lp1357
S'path_info'
p1358
asbag57
(g78
g59
NtRp1359
(dp1360
g62
(dp1361
g89
g90
ssg71
g1350
sg64
(lp1362
S':'
asbag57
(g78
g59
NtRp1363
(dp1364
g62
(dp1365
sg71
g1350
sg64
(lp1366
g57
(g58
g59
NtRp1367
(dp1368
g62
(dp1369
g70
I4
ssg71
g1363
sg64
(lp1370
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project'
p1371
asbasbasbag57
(g73
g59
NtRp1372
(dp1373
g62
(dp1374
sg71
g860
sg64
(lp1375
g57
(g78
g59
NtRp1376
(dp1377
g62
(dp1378
g82
g83
ssg71
g1372
sg64
(lp1379
S'query_string'
p1380
asbag57
(g78
g59
NtRp1381
(dp1382
g62
(dp1383
g89
g90
ssg71
g1372
sg64
(lp1384
S':'
asbag57
(g78
g59
NtRp1385
(dp1386
g62
(dp1387
sg71
g1372
sg64
(lp1388
g57
(g58
g59
NtRp1389
(dp1390
g62
(dp1391
g70
I4
ssg71
g1385
sg64
(lp1392
S'_signature=5d8143659bc8a714fbfb62b66a3684de1a378515'
p1393
asbasbasbag57
(g73
g59
NtRp1394
(dp1395
g62
(dp1396
sg71
g860
sg64
(lp1397
g57
(g78
g59
NtRp1398
(dp1399
g62
(dp1400
g82
g83
ssg71
g1394
sg64
(lp1401
S'remote_addr'
p1402
asbag57
(g78
g59
NtRp1403
(dp1404
g62
(dp1405
g89
g90
ssg71
g1394
sg64
(lp1406
S':'
asbag57
(g78
g59
NtRp1407
(dp1408
g62
(dp1409
sg71
g1394
sg64
(lp1410
g57
(g58
g59
NtRp1411
(dp1412
g62
(dp1413
g70
I4
ssg71
g1407
sg64
(lp1414
g225
asbasbasbag57
(g73
g59
NtRp1415
(dp1416
g62
(dp1417
sg71
g860
sg64
(lp1418
g57
(g78
g59
NtRp1419
(dp1420
g62
(dp1421
g82
g83
ssg71
g1415
sg64
(lp1422
S'remote_port'
p1423
asbag57
(g78
g59
NtRp1424
(dp1425
g62
(dp1426
g89
g90
ssg71
g1415
sg64
(lp1427
S':'
asbag57
(g78
g59
NtRp1428
(dp1429
g62
(dp1430
sg71
g1415
sg64
(lp1431
g57
(g58
g59
NtRp1432
(dp1433
g62
(dp1434
g70
I4
ssg71
g1428
sg64
(lp1435
S'43084'
p1436
asbasbasbag57
(g73
g59
NtRp1437
(dp1438
g62
(dp1439
sg71
g860
sg64
(lp1440
g57
(g78
g59
NtRp1441
(dp1442
g62
(dp1443
g82
g83
ssg71
g1437
sg64
(lp1444
S'request_method'
p1445
asbag57
(g78
g59
NtRp1446
(dp1447
g62
(dp1448
g89
g90
ssg71
g1437
sg64
(lp1449
S':'
asbag57
(g78
g59
NtRp1450
(dp1451
g62
(dp1452
sg71
g1437
sg64
(lp1453
g57
(g58
g59
NtRp1454
(dp1455
g62
(dp1456
g70
I4
ssg71
g1450
sg64
(lp1457
S'GET'
p1458
asbasbasbag57
(g73
g59
NtRp1459
(dp1460
g62
(dp1461
sg71
g860
sg64
(lp1462
g57
(g78
g59
NtRp1463
(dp1464
g62
(dp1465
g82
g83
ssg71
g1459
sg64
(lp1466
S'request_uri'
p1467
asbag57
(g78
g59
NtRp1468
(dp1469
g62
(dp1470
g89
g90
ssg71
g1459
sg64
(lp1471
S':'
asbag57
(g78
g59
NtRp1472
(dp1473
g62
(dp1474
sg71
g1459
sg64
(lp1475
g57
(g58
g59
NtRp1476
(dp1477
g62
(dp1478
g70
I4
ssg71
g1472
sg64
(lp1479
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project?_signature=5d8143659bc8a714fbfb62b66a3684de1a378515'
p1480
asbasbasbag57
(g73
g59
NtRp1481
(dp1482
g62
(dp1483
sg71
g860
sg64
(lp1484
g57
(g78
g59
NtRp1485
(dp1486
g62
(dp1487
g82
g83
ssg71
g1481
sg64
(lp1488
S'script_name'
p1489
asbag57
(g78
g59
NtRp1490
(dp1491
g62
(dp1492
g89
g90
ssg71
g1481
sg64
(lp1493
S':'
asbag57
(g78
g59
NtRp1494
(dp1495
g62
(dp1496
sg71
g1481
sg64
(lp1497
g57
(g58
g59
NtRp1498
(dp1499
g62
(dp1500
g70
I4
ssg71
g1494
sg64
(lp1501
S''
asbasbasbag57
(g73
g59
NtRp1502
(dp1503
g62
(dp1504
sg71
g860
sg64
(lp1505
g57
(g78
g59
NtRp1506
(dp1507
g62
(dp1508
g82
g83
ssg71
g1502
sg64
(lp1509
S'server_name'
p1510
asbag57
(g78
g59
NtRp1511
(dp1512
g62
(dp1513
g89
g90
ssg71
g1502
sg64
(lp1514
S':'
asbag57
(g78
g59
NtRp1515
(dp1516
g62
(dp1517
sg71
g1502
sg64
(lp1518
g57
(g58
g59
NtRp1519
(dp1520
g62
(dp1521
g70
I4
ssg71
g1515
sg64
(lp1522
S'anil-Inspiron-1525'
p1523
asbasbasbag57
(g73
g59
NtRp1524
(dp1525
g62
(dp1526
sg71
g860
sg64
(lp1527
g57
(g78
g59
NtRp1528
(dp1529
g62
(dp1530
g82
g83
ssg71
g1524
sg64
(lp1531
S'server_port'
p1532
asbag57
(g78
g59
NtRp1533
(dp1534
g62
(dp1535
g89
g90
ssg71
g1524
sg64
(lp1536
S':'
asbag57
(g78
g59
NtRp1537
(dp1538
g62
(dp1539
sg71
g1524
sg64
(lp1540
g57
(g58
g59
NtRp1541
(dp1542
g62
(dp1543
g70
I4
ssg71
g1537
sg64
(lp1544
S'8000'
p1545
asbasbasbag57
(g73
g59
NtRp1546
(dp1547
g62
(dp1548
sg71
g860
sg64
(lp1549
g57
(g78
g59
NtRp1550
(dp1551
g62
(dp1552
g82
g83
ssg71
g1546
sg64
(lp1553
S'server_protocol'
p1554
asbag57
(g78
g59
NtRp1555
(dp1556
g62
(dp1557
g89
g90
ssg71
g1546
sg64
(lp1558
S':'
asbag57
(g78
g59
NtRp1559
(dp1560
g62
(dp1561
sg71
g1546
sg64
(lp1562
g57
(g58
g59
NtRp1563
(dp1564
g62
(dp1565
g70
I4
ssg71
g1559
sg64
(lp1566
S'HTTP/1.1'
p1567
asbasbasbag57
(g73
g59
NtRp1568
(dp1569
g62
(dp1570
sg71
g860
sg64
(lp1571
g57
(g78
g59
NtRp1572
(dp1573
g62
(dp1574
g82
g83
ssg71
g1568
sg64
(lp1575
S'server_software'
p1576
asbag57
(g78
g59
NtRp1577
(dp1578
g62
(dp1579
g89
g90
ssg71
g1568
sg64
(lp1580
S':'
asbag57
(g78
g59
NtRp1581
(dp1582
g62
(dp1583
sg71
g1568
sg64
(lp1584
g57
(g58
g59
NtRp1585
(dp1586
g62
(dp1587
g70
I4
ssg71
g1581
sg64
(lp1588
S'Rocket 1.2.6'
p1589
asbasbasbag57
(g73
g59
NtRp1590
(dp1591
g62
(dp1592
sg71
g860
sg64
(lp1593
g57
(g78
g59
NtRp1594
(dp1595
g62
(dp1596
g82
g83
ssg71
g1590
sg64
(lp1597
S'web2py_path'
p1598
asbag57
(g78
g59
NtRp1599
(dp1600
g62
(dp1601
g89
g90
ssg71
g1590
sg64
(lp1602
S':'
asbag57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
sg71
g1590
sg64
(lp1606
g57
(g58
g59
NtRp1607
(dp1608
g62
(dp1609
g70
I4
ssg71
g1603
sg64
(lp1610
g907
asbasbasbag57
(g73
g59
NtRp1611
(dp1612
g62
(dp1613
sg71
g860
sg64
(lp1614
g57
(g78
g59
NtRp1615
(dp1616
g62
(dp1617
g82
g83
ssg71
g1611
sg64
(lp1618
S'web2py_version'
p1619
asbag57
(g78
g59
NtRp1620
(dp1621
g62
(dp1622
g89
g90
ssg71
g1611
sg64
(lp1623
S':'
asbag57
(g78
g59
NtRp1624
(dp1625
g62
(dp1626
sg71
g1611
sg64
(lp1627
g57
(g58
g59
NtRp1628
(dp1629
g62
(dp1630
g70
I4
ssg71
g1624
sg64
(lp1631
g57
(g66
g59
NtRp1632
(dp1633
g62
(dp1634
g70
I3
ssg71
Nsg64
(lp1635
g57
(g73
g59
NtRp1636
(dp1637
g62
(dp1638
sg71
g1632
sg64
(lp1639
g57
(g78
g59
NtRp1640
(dp1641
g62
(dp1642
sg71
g1636
sg64
(lp1643
g57
(g58
g59
NtRp1644
(dp1645
g62
(dp1646
g70
I3
ssg71
g1640
sg64
(lp1647
S'2'
asbasbasbag57
(g73
g59
NtRp1648
(dp1649
g62
(dp1650
sg71
g1632
sg64
(lp1651
g57
(g78
g59
NtRp1652
(dp1653
g62
(dp1654
sg71
g1648
sg64
(lp1655
g57
(g58
g59
NtRp1656
(dp1657
g62
(dp1658
g70
I3
ssg71
g1652
sg64
(lp1659
S'3'
asbasbasbag57
(g73
g59
NtRp1660
(dp1661
g62
(dp1662
sg71
g1632
sg64
(lp1663
g57
(g78
g59
NtRp1664
(dp1665
g62
(dp1666
sg71
g1660
sg64
(lp1667
g57
(g58
g59
NtRp1668
(dp1669
g62
(dp1670
g70
I3
ssg71
g1664
sg64
(lp1671
S'2'
asbasbasbag57
(g73
g59
NtRp1672
(dp1673
g62
(dp1674
sg71
g1632
sg64
(lp1675
g57
(g78
g59
NtRp1676
(dp1677
g62
(dp1678
sg71
g1672
sg64
(lp1679
g57
(g58
g59
NtRp1680
(dp1681
g62
(dp1682
g70
I3
ssg71
g1676
sg64
(lp1683
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1684
asbasbasbag57
(g73
g59
NtRp1685
(dp1686
g62
(dp1687
sg71
g1632
sg64
(lp1688
g57
(g78
g59
NtRp1689
(dp1690
g62
(dp1691
sg71
g1685
sg64
(lp1692
g57
(g58
g59
NtRp1693
(dp1694
g62
(dp1695
g70
I3
ssg71
g1689
sg64
(lp1696
S'stable'
p1697
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1698
(dp1699
g62
(dp1700
sg71
g860
sg64
(lp1701
g57
(g78
g59
NtRp1702
(dp1703
g62
(dp1704
g82
g83
ssg71
g1698
sg64
(lp1705
S'wsgi_errors'
p1706
asbag57
(g78
g59
NtRp1707
(dp1708
g62
(dp1709
g89
g90
ssg71
g1698
sg64
(lp1710
S':'
asbag57
(g78
g59
NtRp1711
(dp1712
g62
(dp1713
sg71
g1698
sg64
(lp1714
g57
(g58
g59
NtRp1715
(dp1716
g62
(dp1717
g70
I4
ssg71
g1711
sg64
(lp1718
S"<open file '<stderr>', mode 'w' at 0xb729e0d0>"
p1719
asbasbasbag57
(g73
g59
NtRp1720
(dp1721
g62
(dp1722
sg71
g860
sg64
(lp1723
g57
(g78
g59
NtRp1724
(dp1725
g62
(dp1726
g82
g83
ssg71
g1720
sg64
(lp1727
S'wsgi_file_wrapper'
p1728
asbag57
(g78
g59
NtRp1729
(dp1730
g62
(dp1731
g89
g90
ssg71
g1720
sg64
(lp1732
S':'
asbag57
(g78
g59
NtRp1733
(dp1734
g62
(dp1735
sg71
g1720
sg64
(lp1736
g57
(g58
g59
NtRp1737
(dp1738
g62
(dp1739
g70
I4
ssg71
g1733
sg64
(lp1740
S'<class wsgiref.util.FileWrapper at 0x88bfb6c>'
p1741
asbasbasbag57
(g73
g59
NtRp1742
(dp1743
g62
(dp1744
sg71
g860
sg64
(lp1745
g57
(g78
g59
NtRp1746
(dp1747
g62
(dp1748
g82
g83
ssg71
g1742
sg64
(lp1749
S'wsgi_input'
p1750
asbag57
(g78
g59
NtRp1751
(dp1752
g62
(dp1753
g89
g90
ssg71
g1742
sg64
(lp1754
S':'
asbag57
(g78
g59
NtRp1755
(dp1756
g62
(dp1757
sg71
g1742
sg64
(lp1758
g57
(g58
g59
NtRp1759
(dp1760
g62
(dp1761
g70
I4
ssg71
g1755
sg64
(lp1762
S'<socket._fileobject object at 0xad37202c>'
p1763
asbasbasbag57
(g73
g59
NtRp1764
(dp1765
g62
(dp1766
sg71
g860
sg64
(lp1767
g57
(g78
g59
NtRp1768
(dp1769
g62
(dp1770
g82
g83
ssg71
g1764
sg64
(lp1771
S'wsgi_multiprocess'
p1772
asbag57
(g78
g59
NtRp1773
(dp1774
g62
(dp1775
g89
g90
ssg71
g1764
sg64
(lp1776
S':'
asbag57
(g78
g59
NtRp1777
(dp1778
g62
(dp1779
sg71
g1764
sg64
(lp1780
g57
(g58
g59
NtRp1781
(dp1782
g62
(dp1783
g70
I4
ssg71
g1777
sg64
(lp1784
g100
asbasbasbag57
(g73
g59
NtRp1785
(dp1786
g62
(dp1787
sg71
g860
sg64
(lp1788
g57
(g78
g59
NtRp1789
(dp1790
g62
(dp1791
g82
g83
ssg71
g1785
sg64
(lp1792
S'wsgi_multithread'
p1793
asbag57
(g78
g59
NtRp1794
(dp1795
g62
(dp1796
g89
g90
ssg71
g1785
sg64
(lp1797
S':'
asbag57
(g78
g59
NtRp1798
(dp1799
g62
(dp1800
sg71
g1785
sg64
(lp1801
g57
(g58
g59
NtRp1802
(dp1803
g62
(dp1804
g70
I4
ssg71
g1798
sg64
(lp1805
S'True'
p1806
asbasbasbag57
(g73
g59
NtRp1807
(dp1808
g62
(dp1809
sg71
g860
sg64
(lp1810
g57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
g82
g83
ssg71
g1807
sg64
(lp1814
S'wsgi_run_once'
p1815
asbag57
(g78
g59
NtRp1816
(dp1817
g62
(dp1818
g89
g90
ssg71
g1807
sg64
(lp1819
S':'
asbag57
(g78
g59
NtRp1820
(dp1821
g62
(dp1822
sg71
g1807
sg64
(lp1823
g57
(g58
g59
NtRp1824
(dp1825
g62
(dp1826
g70
I4
ssg71
g1820
sg64
(lp1827
g100
asbasbasbag57
(g73
g59
NtRp1828
(dp1829
g62
(dp1830
sg71
g860
sg64
(lp1831
g57
(g78
g59
NtRp1832
(dp1833
g62
(dp1834
g82
g83
ssg71
g1828
sg64
(lp1835
S'wsgi_url_scheme'
p1836
asbag57
(g78
g59
NtRp1837
(dp1838
g62
(dp1839
g89
g90
ssg71
g1828
sg64
(lp1840
S':'
asbag57
(g78
g59
NtRp1841
(dp1842
g62
(dp1843
sg71
g1828
sg64
(lp1844
g57
(g58
g59
NtRp1845
(dp1846
g62
(dp1847
g70
I4
ssg71
g1841
sg64
(lp1848
S'http'
p1849
asbasbasbag57
(g73
g59
NtRp1850
(dp1851
g62
(dp1852
sg71
g860
sg64
(lp1853
g57
(g78
g59
NtRp1854
(dp1855
g62
(dp1856
g82
g83
ssg71
g1850
sg64
(lp1857
S'wsgi_version'
p1858
asbag57
(g78
g59
NtRp1859
(dp1860
g62
(dp1861
g89
g90
ssg71
g1850
sg64
(lp1862
S':'
asbag57
(g78
g59
NtRp1863
(dp1864
g62
(dp1865
sg71
g1850
sg64
(lp1866
g57
(g58
g59
NtRp1867
(dp1868
g62
(dp1869
g70
I4
ssg71
g1863
sg64
(lp1870
g57
(g66
g59
NtRp1871
(dp1872
g62
(dp1873
g70
I3
ssg71
Nsg64
(lp1874
g57
(g73
g59
NtRp1875
(dp1876
g62
(dp1877
sg71
g1871
sg64
(lp1878
g57
(g78
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g1875
sg64
(lp1882
g57
(g58
g59
NtRp1883
(dp1884
g62
(dp1885
g70
I3
ssg71
g1879
sg64
(lp1886
S'1'
asbasbasbag57
(g73
g59
NtRp1887
(dp1888
g62
(dp1889
sg71
g1871
sg64
(lp1890
g57
(g78
g59
NtRp1891
(dp1892
g62
(dp1893
sg71
g1887
sg64
(lp1894
g57
(g58
g59
NtRp1895
(dp1896
g62
(dp1897
g70
I3
ssg71
g1891
sg64
(lp1898
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1899
(dp1900
g62
(dp1901
sg71
g67
sg64
(lp1902
g57
(g78
g59
NtRp1903
(dp1904
g62
(dp1905
g82
g83
ssg71
g1899
sg64
(lp1906
S'extension'
p1907
asbag57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
g89
g90
ssg71
g1899
sg64
(lp1911
S':'
asbag57
(g78
g59
NtRp1912
(dp1913
g62
(dp1914
sg71
g1899
sg64
(lp1915
g57
(g58
g59
NtRp1916
(dp1917
g62
(dp1918
g70
I5
ssg71
g1912
sg64
(lp1919
S'html'
p1920
asbasbasbag57
(g73
g59
NtRp1921
(dp1922
g62
(dp1923
sg71
g67
sg64
(lp1924
g57
(g78
g59
NtRp1925
(dp1926
g62
(dp1927
g82
g83
ssg71
g1921
sg64
(lp1928
S'folder'
p1929
asbag57
(g78
g59
NtRp1930
(dp1931
g62
(dp1932
g89
g90
ssg71
g1921
sg64
(lp1933
S':'
asbag57
(g78
g59
NtRp1934
(dp1935
g62
(dp1936
sg71
g1921
sg64
(lp1937
g57
(g58
g59
NtRp1938
(dp1939
g62
(dp1940
g70
I5
ssg71
g1934
sg64
(lp1941
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/'
p1942
asbasbasbag57
(g73
g59
NtRp1943
(dp1944
g62
(dp1945
sg71
g67
sg64
(lp1946
g57
(g78
g59
NtRp1947
(dp1948
g62
(dp1949
g82
g83
ssg71
g1943
sg64
(lp1950
S'function'
p1951
asbag57
(g78
g59
NtRp1952
(dp1953
g62
(dp1954
g89
g90
ssg71
g1943
sg64
(lp1955
S':'
asbag57
(g78
g59
NtRp1956
(dp1957
g62
(dp1958
sg71
g1943
sg64
(lp1959
g57
(g58
g59
NtRp1960
(dp1961
g62
(dp1962
g70
I5
ssg71
g1956
sg64
(lp1963
S'list_all_dev_projects'
p1964
asbasbasbag57
(g73
g59
NtRp1965
(dp1966
g62
(dp1967
sg71
g67
sg64
(lp1968
g57
(g78
g59
NtRp1969
(dp1970
g62
(dp1971
g82
g83
ssg71
g1965
sg64
(lp1972
S'get_vars'
p1973
asbag57
(g78
g59
NtRp1974
(dp1975
g62
(dp1976
g89
g90
ssg71
g1965
sg64
(lp1977
S':'
asbag57
(g78
g59
NtRp1978
(dp1979
g62
(dp1980
sg71
g1965
sg64
(lp1981
g57
(g58
g59
NtRp1982
(dp1983
g62
(dp1984
g70
I5
ssg71
g1978
sg64
(lp1985
g57
(g66
g59
NtRp1986
(dp1987
g62
(dp1988
g70
I4
ssg71
Nsg64
(lp1989
sbasbasbasbag57
(g73
g59
NtRp1990
(dp1991
g62
(dp1992
sg71
g67
sg64
(lp1993
g57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
g82
g83
ssg71
g1990
sg64
(lp1997
S'global_settings'
p1998
asbag57
(g78
g59
NtRp1999
(dp2000
g62
(dp2001
g89
g90
ssg71
g1990
sg64
(lp2002
S':'
asbag57
(g78
g59
NtRp2003
(dp2004
g62
(dp2005
sg71
g1990
sg64
(lp2006
g57
(g58
g59
NtRp2007
(dp2008
g62
(dp2009
g70
I5
ssg71
g2003
sg64
(lp2010
g57
(g66
g59
NtRp2011
(dp2012
g62
(dp2013
g70
I4
ssg71
Nsg64
(lp2014
g57
(g73
g59
NtRp2015
(dp2016
g62
(dp2017
sg71
g2011
sg64
(lp2018
g57
(g78
g59
NtRp2019
(dp2020
g62
(dp2021
g82
g83
ssg71
g2015
sg64
(lp2022
g872
asbag57
(g78
g59
NtRp2023
(dp2024
g62
(dp2025
g89
g90
ssg71
g2015
sg64
(lp2026
S':'
asbag57
(g78
g59
NtRp2027
(dp2028
g62
(dp2029
sg71
g2015
sg64
(lp2030
g57
(g58
g59
NtRp2031
(dp2032
g62
(dp2033
g70
I4
ssg71
g2027
sg64
(lp2034
S"set(['/home/anil/Downloads/web2py/applications/welcome/', '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p2035
asbasbasbag57
(g73
g59
NtRp2036
(dp2037
g62
(dp2038
sg71
g2011
sg64
(lp2039
g57
(g78
g59
NtRp2040
(dp2041
g62
(dp2042
g82
g83
ssg71
g2036
sg64
(lp2043
g894
asbag57
(g78
g59
NtRp2044
(dp2045
g62
(dp2046
g89
g90
ssg71
g2036
sg64
(lp2047
S':'
asbag57
(g78
g59
NtRp2048
(dp2049
g62
(dp2050
sg71
g2036
sg64
(lp2051
g57
(g58
g59
NtRp2052
(dp2053
g62
(dp2054
g70
I4
ssg71
g2048
sg64
(lp2055
g907
asbasbasbag57
(g73
g59
NtRp2056
(dp2057
g62
(dp2058
sg71
g2011
sg64
(lp2059
g57
(g78
g59
NtRp2060
(dp2061
g62
(dp2062
g82
g83
ssg71
g2056
sg64
(lp2063
g916
asbag57
(g78
g59
NtRp2064
(dp2065
g62
(dp2066
g89
g90
ssg71
g2056
sg64
(lp2067
S':'
asbag57
(g78
g59
NtRp2068
(dp2069
g62
(dp2070
sg71
g2056
sg64
(lp2071
g57
(g58
g59
NtRp2072
(dp2073
g62
(dp2074
g70
I4
ssg71
g2068
sg64
(lp2075
g57
(g66
g59
NtRp2076
(dp2077
g62
(dp2078
g70
I3
ssg71
Nsg64
(lp2079
sbasbasbasbag57
(g73
g59
NtRp2080
(dp2081
g62
(dp2082
sg71
g2011
sg64
(lp2083
g57
(g78
g59
NtRp2084
(dp2085
g62
(dp2086
g82
g83
ssg71
g2080
sg64
(lp2087
g941
asbag57
(g78
g59
NtRp2088
(dp2089
g62
(dp2090
g89
g90
ssg71
g2080
sg64
(lp2091
S':'
asbag57
(g78
g59
NtRp2092
(dp2093
g62
(dp2094
sg71
g2080
sg64
(lp2095
g57
(g58
g59
NtRp2096
(dp2097
g62
(dp2098
g70
I4
ssg71
g2092
sg64
(lp2099
S"<Values at 0x8936a4c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2100
asbasbasbag57
(g73
g59
NtRp2101
(dp2102
g62
(dp2103
sg71
g2011
sg64
(lp2104
g57
(g78
g59
NtRp2105
(dp2106
g62
(dp2107
g82
g83
ssg71
g2101
sg64
(lp2108
g963
asbag57
(g78
g59
NtRp2109
(dp2110
g62
(dp2111
g89
g90
ssg71
g2101
sg64
(lp2112
S':'
asbag57
(g78
g59
NtRp2113
(dp2114
g62
(dp2115
sg71
g2101
sg64
(lp2116
g57
(g58
g59
NtRp2117
(dp2118
g62
(dp2119
g70
I4
ssg71
g2113
sg64
(lp2120
S'set([])'
p2121
asbasbasbag57
(g73
g59
NtRp2122
(dp2123
g62
(dp2124
sg71
g2011
sg64
(lp2125
g57
(g78
g59
NtRp2126
(dp2127
g62
(dp2128
g82
g83
ssg71
g2122
sg64
(lp2129
g985
asbag57
(g78
g59
NtRp2130
(dp2131
g62
(dp2132
g89
g90
ssg71
g2122
sg64
(lp2133
S':'
asbag57
(g78
g59
NtRp2134
(dp2135
g62
(dp2136
sg71
g2122
sg64
(lp2137
g57
(g58
g59
NtRp2138
(dp2139
g62
(dp2140
g70
I4
ssg71
g2134
sg64
(lp2141
g100
asbasbasbag57
(g73
g59
NtRp2142
(dp2143
g62
(dp2144
sg71
g2011
sg64
(lp2145
g57
(g78
g59
NtRp2146
(dp2147
g62
(dp2148
g82
g83
ssg71
g2142
sg64
(lp2149
g1006
asbag57
(g78
g59
NtRp2150
(dp2151
g62
(dp2152
g89
g90
ssg71
g2142
sg64
(lp2153
S':'
asbag57
(g78
g59
NtRp2154
(dp2155
g62
(dp2156
sg71
g2142
sg64
(lp2157
g57
(g58
g59
NtRp2158
(dp2159
g62
(dp2160
g70
I4
ssg71
g2154
sg64
(lp2161
g1019
asbasbasbag57
(g73
g59
NtRp2162
(dp2163
g62
(dp2164
sg71
g2011
sg64
(lp2165
g57
(g78
g59
NtRp2166
(dp2167
g62
(dp2168
g82
g83
ssg71
g2162
sg64
(lp2169
g1226
asbag57
(g78
g59
NtRp2170
(dp2171
g62
(dp2172
g89
g90
ssg71
g2162
sg64
(lp2173
S':'
asbag57
(g78
g59
NtRp2174
(dp2175
g62
(dp2176
sg71
g2162
sg64
(lp2177
g57
(g58
g59
NtRp2178
(dp2179
g62
(dp2180
g70
I4
ssg71
g2174
sg64
(lp2181
g100
asbasbasbag57
(g73
g59
NtRp2182
(dp2183
g62
(dp2184
sg71
g2011
sg64
(lp2185
g57
(g78
g59
NtRp2186
(dp2187
g62
(dp2188
g82
g83
ssg71
g2182
sg64
(lp2189
g1247
asbag57
(g78
g59
NtRp2190
(dp2191
g62
(dp2192
g89
g90
ssg71
g2182
sg64
(lp2193
S':'
asbag57
(g78
g59
NtRp2194
(dp2195
g62
(dp2196
sg71
g2182
sg64
(lp2197
g57
(g58
g59
NtRp2198
(dp2199
g62
(dp2200
g70
I4
ssg71
g2194
sg64
(lp2201
g100
asbasbasbag57
(g73
g59
NtRp2202
(dp2203
g62
(dp2204
sg71
g2011
sg64
(lp2205
g57
(g78
g59
NtRp2206
(dp2207
g62
(dp2208
g82
g83
ssg71
g2202
sg64
(lp2209
g1268
asbag57
(g78
g59
NtRp2210
(dp2211
g62
(dp2212
g89
g90
ssg71
g2202
sg64
(lp2213
S':'
asbag57
(g78
g59
NtRp2214
(dp2215
g62
(dp2216
sg71
g2202
sg64
(lp2217
g57
(g58
g59
NtRp2218
(dp2219
g62
(dp2220
g70
I4
ssg71
g2214
sg64
(lp2221
g57
(g66
g59
NtRp2222
(dp2223
g62
(dp2224
g70
I3
ssg71
Nsg64
(lp2225
g57
(g73
g59
NtRp2226
(dp2227
g62
(dp2228
sg71
g2222
sg64
(lp2229
g57
(g78
g59
NtRp2230
(dp2231
g62
(dp2232
sg71
g2226
sg64
(lp2233
g57
(g58
g59
NtRp2234
(dp2235
g62
(dp2236
g70
I3
ssg71
g2230
sg64
(lp2237
g1297
asbasbasbag57
(g73
g59
NtRp2238
(dp2239
g62
(dp2240
sg71
g2222
sg64
(lp2241
g57
(g78
g59
NtRp2242
(dp2243
g62
(dp2244
sg71
g2238
sg64
(lp2245
g57
(g58
g59
NtRp2246
(dp2247
g62
(dp2248
g70
I3
ssg71
g2242
sg64
(lp2249
g1310
asbasbasbag57
(g73
g59
NtRp2250
(dp2251
g62
(dp2252
sg71
g2222
sg64
(lp2253
g57
(g78
g59
NtRp2254
(dp2255
g62
(dp2256
sg71
g2250
sg64
(lp2257
g57
(g58
g59
NtRp2258
(dp2259
g62
(dp2260
g70
I3
ssg71
g2254
sg64
(lp2261
g1323
asbasbasbag57
(g73
g59
NtRp2262
(dp2263
g62
(dp2264
sg71
g2222
sg64
(lp2265
g57
(g78
g59
NtRp2266
(dp2267
g62
(dp2268
sg71
g2262
sg64
(lp2269
g57
(g58
g59
NtRp2270
(dp2271
g62
(dp2272
g70
I3
ssg71
g2266
sg64
(lp2273
g1336
asbasbasbag57
(g73
g59
NtRp2274
(dp2275
g62
(dp2276
sg71
g2222
sg64
(lp2277
g57
(g78
g59
NtRp2278
(dp2279
g62
(dp2280
sg71
g2274
sg64
(lp2281
g57
(g58
g59
NtRp2282
(dp2283
g62
(dp2284
g70
I3
ssg71
g2278
sg64
(lp2285
g1349
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g2011
sg64
(lp2289
g57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
g82
g83
ssg71
g2286
sg64
(lp2293
g1619
asbag57
(g78
g59
NtRp2294
(dp2295
g62
(dp2296
g89
g90
ssg71
g2286
sg64
(lp2297
S':'
asbag57
(g78
g59
NtRp2298
(dp2299
g62
(dp2300
sg71
g2286
sg64
(lp2301
g57
(g58
g59
NtRp2302
(dp2303
g62
(dp2304
g70
I4
ssg71
g2298
sg64
(lp2305
g57
(g66
g59
NtRp2306
(dp2307
g62
(dp2308
g70
I3
ssg71
Nsg64
(lp2309
g57
(g73
g59
NtRp2310
(dp2311
g62
(dp2312
sg71
g2306
sg64
(lp2313
g57
(g78
g59
NtRp2314
(dp2315
g62
(dp2316
sg71
g2310
sg64
(lp2317
g57
(g58
g59
NtRp2318
(dp2319
g62
(dp2320
g70
I3
ssg71
g2314
sg64
(lp2321
S'2'
asbasbasbag57
(g73
g59
NtRp2322
(dp2323
g62
(dp2324
sg71
g2306
sg64
(lp2325
g57
(g78
g59
NtRp2326
(dp2327
g62
(dp2328
sg71
g2322
sg64
(lp2329
g57
(g58
g59
NtRp2330
(dp2331
g62
(dp2332
g70
I3
ssg71
g2326
sg64
(lp2333
S'3'
asbasbasbag57
(g73
g59
NtRp2334
(dp2335
g62
(dp2336
sg71
g2306
sg64
(lp2337
g57
(g78
g59
NtRp2338
(dp2339
g62
(dp2340
sg71
g2334
sg64
(lp2341
g57
(g58
g59
NtRp2342
(dp2343
g62
(dp2344
g70
I3
ssg71
g2338
sg64
(lp2345
S'2'
asbasbasbag57
(g73
g59
NtRp2346
(dp2347
g62
(dp2348
sg71
g2306
sg64
(lp2349
g57
(g78
g59
NtRp2350
(dp2351
g62
(dp2352
sg71
g2346
sg64
(lp2353
g57
(g58
g59
NtRp2354
(dp2355
g62
(dp2356
g70
I3
ssg71
g2350
sg64
(lp2357
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2358
asbasbasbag57
(g73
g59
NtRp2359
(dp2360
g62
(dp2361
sg71
g2306
sg64
(lp2362
g57
(g78
g59
NtRp2363
(dp2364
g62
(dp2365
sg71
g2359
sg64
(lp2366
g57
(g58
g59
NtRp2367
(dp2368
g62
(dp2369
g70
I3
ssg71
g2363
sg64
(lp2370
g1697
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2371
(dp2372
g62
(dp2373
sg71
g67
sg64
(lp2374
g57
(g78
g59
NtRp2375
(dp2376
g62
(dp2377
g82
g83
ssg71
g2371
sg64
(lp2378
S'is_https'
p2379
asbag57
(g78
g59
NtRp2380
(dp2381
g62
(dp2382
g89
g90
ssg71
g2371
sg64
(lp2383
S':'
asbag57
(g78
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2371
sg64
(lp2387
g57
(g58
g59
NtRp2388
(dp2389
g62
(dp2390
g70
I5
ssg71
g2384
sg64
(lp2391
g100
asbasbasbag57
(g73
g59
NtRp2392
(dp2393
g62
(dp2394
sg71
g67
sg64
(lp2395
g57
(g78
g59
NtRp2396
(dp2397
g62
(dp2398
g82
g83
ssg71
g2392
sg64
(lp2399
S'is_local'
p2400
asbag57
(g78
g59
NtRp2401
(dp2402
g62
(dp2403
g89
g90
ssg71
g2392
sg64
(lp2404
S':'
asbag57
(g78
g59
NtRp2405
(dp2406
g62
(dp2407
sg71
g2392
sg64
(lp2408
g57
(g58
g59
NtRp2409
(dp2410
g62
(dp2411
g70
I5
ssg71
g2405
sg64
(lp2412
g1806
asbasbasbag57
(g73
g59
NtRp2413
(dp2414
g62
(dp2415
sg71
g67
sg64
(lp2416
g57
(g78
g59
NtRp2417
(dp2418
g62
(dp2419
g82
g83
ssg71
g2413
sg64
(lp2420
S'is_restful'
p2421
asbag57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
g89
g90
ssg71
g2413
sg64
(lp2425
S':'
asbag57
(g78
g59
NtRp2426
(dp2427
g62
(dp2428
sg71
g2413
sg64
(lp2429
g57
(g58
g59
NtRp2430
(dp2431
g62
(dp2432
g70
I5
ssg71
g2426
sg64
(lp2433
g100
asbasbasbag57
(g73
g59
NtRp2434
(dp2435
g62
(dp2436
sg71
g67
sg64
(lp2437
g57
(g78
g59
NtRp2438
(dp2439
g62
(dp2440
g82
g83
ssg71
g2434
sg64
(lp2441
S'now'
p2442
asbag57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
g89
g90
ssg71
g2434
sg64
(lp2446
S':'
asbag57
(g78
g59
NtRp2447
(dp2448
g62
(dp2449
sg71
g2434
sg64
(lp2450
g57
(g58
g59
NtRp2451
(dp2452
g62
(dp2453
g70
I5
ssg71
g2447
sg64
(lp2454
S'datetime.datetime(2013, 3, 4, 15, 55, 40, 124203)'
p2455
asbasbasbag57
(g73
g59
NtRp2456
(dp2457
g62
(dp2458
sg71
g67
sg64
(lp2459
g57
(g78
g59
NtRp2460
(dp2461
g62
(dp2462
g82
g83
ssg71
g2456
sg64
(lp2463
S'post_vars'
p2464
asbag57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
g89
g90
ssg71
g2456
sg64
(lp2468
S':'
asbag57
(g78
g59
NtRp2469
(dp2470
g62
(dp2471
sg71
g2456
sg64
(lp2472
g57
(g58
g59
NtRp2473
(dp2474
g62
(dp2475
g70
I5
ssg71
g2469
sg64
(lp2476
g57
(g66
g59
NtRp2477
(dp2478
g62
(dp2479
g70
I4
ssg71
Nsg64
(lp2480
sbasbasbasbag57
(g73
g59
NtRp2481
(dp2482
g62
(dp2483
sg71
g67
sg64
(lp2484
g57
(g78
g59
NtRp2485
(dp2486
g62
(dp2487
g82
g83
ssg71
g2481
sg64
(lp2488
S'raw_args'
p2489
asbag57
(g78
g59
NtRp2490
(dp2491
g62
(dp2492
g89
g90
ssg71
g2481
sg64
(lp2493
S':'
asbag57
(g78
g59
NtRp2494
(dp2495
g62
(dp2496
sg71
g2481
sg64
(lp2497
g57
(g58
g59
NtRp2498
(dp2499
g62
(dp2500
g70
I5
ssg71
g2494
sg64
(lp2501
g159
asbasbasbag57
(g73
g59
NtRp2502
(dp2503
g62
(dp2504
sg71
g67
sg64
(lp2505
g57
(g78
g59
NtRp2506
(dp2507
g62
(dp2508
g82
g83
ssg71
g2502
sg64
(lp2509
S'raw_extension'
p2510
asbag57
(g78
g59
NtRp2511
(dp2512
g62
(dp2513
g89
g90
ssg71
g2502
sg64
(lp2514
S':'
asbag57
(g78
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2502
sg64
(lp2518
g57
(g58
g59
NtRp2519
(dp2520
g62
(dp2521
g70
I5
ssg71
g2515
sg64
(lp2522
S'None'
p2523
asbasbasbag57
(g73
g59
NtRp2524
(dp2525
g62
(dp2526
sg71
g67
sg64
(lp2527
g57
(g78
g59
NtRp2528
(dp2529
g62
(dp2530
g82
g83
ssg71
g2524
sg64
(lp2531
S'url'
p2532
asbag57
(g78
g59
NtRp2533
(dp2534
g62
(dp2535
g89
g90
ssg71
g2524
sg64
(lp2536
S':'
asbag57
(g78
g59
NtRp2537
(dp2538
g62
(dp2539
sg71
g2524
sg64
(lp2540
g57
(g58
g59
NtRp2541
(dp2542
g62
(dp2543
g70
I5
ssg71
g2537
sg64
(lp2544
g1371
asbasbasbag57
(g73
g59
NtRp2545
(dp2546
g62
(dp2547
sg71
g67
sg64
(lp2548
g57
(g78
g59
NtRp2549
(dp2550
g62
(dp2551
g82
g83
ssg71
g2545
sg64
(lp2552
S'utcnow'
p2553
asbag57
(g78
g59
NtRp2554
(dp2555
g62
(dp2556
g89
g90
ssg71
g2545
sg64
(lp2557
S':'
asbag57
(g78
g59
NtRp2558
(dp2559
g62
(dp2560
sg71
g2545
sg64
(lp2561
g57
(g58
g59
NtRp2562
(dp2563
g62
(dp2564
g70
I5
ssg71
g2558
sg64
(lp2565
S'datetime.datetime(2013, 3, 4, 10, 25, 40, 124255)'
p2566
asbasbasbag57
(g73
g59
NtRp2567
(dp2568
g62
(dp2569
sg71
g67
sg64
(lp2570
g57
(g78
g59
NtRp2571
(dp2572
g62
(dp2573
g82
g83
ssg71
g2567
sg64
(lp2574
S'uuid'
p2575
asbag57
(g78
g59
NtRp2576
(dp2577
g62
(dp2578
g89
g90
ssg71
g2567
sg64
(lp2579
S':'
asbag57
(g78
g59
NtRp2580
(dp2581
g62
(dp2582
sg71
g2567
sg64
(lp2583
g57
(g58
g59
NtRp2584
(dp2585
g62
(dp2586
g70
I5
ssg71
g2580
sg64
(lp2587
S'DEV_bootstrap_ch/127.0.0.1.2013-03-04.15-55-40.19596abf-3a01-4a4a-9a3c-374148553e3c'
p2588
asbasbasbag57
(g73
g59
NtRp2589
(dp2590
g62
(dp2591
sg71
g67
sg64
(lp2592
g57
(g78
g59
NtRp2593
(dp2594
g62
(dp2595
g82
g83
ssg71
g2589
sg64
(lp2596
S'vars'
p2597
asbag57
(g78
g59
NtRp2598
(dp2599
g62
(dp2600
g89
g90
ssg71
g2589
sg64
(lp2601
S':'
asbag57
(g78
g59
NtRp2602
(dp2603
g62
(dp2604
sg71
g2589
sg64
(lp2605
g57
(g58
g59
NtRp2606
(dp2607
g62
(dp2608
g70
I5
ssg71
g2602
sg64
(lp2609
g57
(g66
g59
NtRp2610
(dp2611
g62
(dp2612
g70
I4
ssg71
Nsg64
(lp2613
sbasbasbasbag57
(g73
g59
NtRp2614
(dp2615
g62
(dp2616
sg71
g67
sg64
(lp2617
g57
(g78
g59
NtRp2618
(dp2619
g62
(dp2620
g82
g83
ssg71
g2614
sg64
(lp2621
S'wsgi'
p2622
asbag57
(g78
g59
NtRp2623
(dp2624
g62
(dp2625
g89
g90
ssg71
g2614
sg64
(lp2626
S':'
asbag57
(g78
g59
NtRp2627
(dp2628
g62
(dp2629
sg71
g2614
sg64
(lp2630
g57
(g58
g59
NtRp2631
(dp2632
g62
(dp2633
g70
I5
ssg71
g2627
sg64
(lp2634
g57
(g66
g59
NtRp2635
(dp2636
g62
(dp2637
g70
I4
ssg71
Nsg64
(lp2638
g57
(g73
g59
NtRp2639
(dp2640
g62
(dp2641
sg71
g2635
sg64
(lp2642
g57
(g78
g59
NtRp2643
(dp2644
g62
(dp2645
g82
g83
ssg71
g2639
sg64
(lp2646
S'environ'
p2647
asbag57
(g78
g59
NtRp2648
(dp2649
g62
(dp2650
g89
g90
ssg71
g2639
sg64
(lp2651
S':'
asbag57
(g78
g59
NtRp2652
(dp2653
g62
(dp2654
sg71
g2639
sg64
(lp2655
g57
(g58
g59
NtRp2656
(dp2657
g62
(dp2658
g70
I4
ssg71
g2652
sg64
(lp2659
g57
(g66
g59
NtRp2660
(dp2661
g62
(dp2662
g70
I3
ssg71
Nsg64
(lp2663
g57
(g73
g59
NtRp2664
(dp2665
g62
(dp2666
sg71
g2660
sg64
(lp2667
g57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
g82
g83
ssg71
g2664
sg64
(lp2671
S'HTTP_ACCEPT'
p2672
asbag57
(g78
g59
NtRp2673
(dp2674
g62
(dp2675
g89
g90
ssg71
g2664
sg64
(lp2676
S':'
asbag57
(g78
g59
NtRp2677
(dp2678
g62
(dp2679
sg71
g2664
sg64
(lp2680
g57
(g58
g59
NtRp2681
(dp2682
g62
(dp2683
g70
I3
ssg71
g2677
sg64
(lp2684
g1041
asbasbasbag57
(g73
g59
NtRp2685
(dp2686
g62
(dp2687
sg71
g2660
sg64
(lp2688
g57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
g82
g83
ssg71
g2685
sg64
(lp2692
S'HTTP_ACCEPT_CHARSET'
p2693
asbag57
(g78
g59
NtRp2694
(dp2695
g62
(dp2696
g89
g90
ssg71
g2685
sg64
(lp2697
S':'
asbag57
(g78
g59
NtRp2698
(dp2699
g62
(dp2700
sg71
g2685
sg64
(lp2701
g57
(g58
g59
NtRp2702
(dp2703
g62
(dp2704
g70
I3
ssg71
g2698
sg64
(lp2705
g1063
asbasbasbag57
(g73
g59
NtRp2706
(dp2707
g62
(dp2708
sg71
g2660
sg64
(lp2709
g57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
g82
g83
ssg71
g2706
sg64
(lp2713
S'HTTP_ACCEPT_ENCODING'
p2714
asbag57
(g78
g59
NtRp2715
(dp2716
g62
(dp2717
g89
g90
ssg71
g2706
sg64
(lp2718
S':'
asbag57
(g78
g59
NtRp2719
(dp2720
g62
(dp2721
sg71
g2706
sg64
(lp2722
g57
(g58
g59
NtRp2723
(dp2724
g62
(dp2725
g70
I3
ssg71
g2719
sg64
(lp2726
g1085
asbasbasbag57
(g73
g59
NtRp2727
(dp2728
g62
(dp2729
sg71
g2660
sg64
(lp2730
g57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
g82
g83
ssg71
g2727
sg64
(lp2734
S'HTTP_ACCEPT_LANGUAGE'
p2735
asbag57
(g78
g59
NtRp2736
(dp2737
g62
(dp2738
g89
g90
ssg71
g2727
sg64
(lp2739
S':'
asbag57
(g78
g59
NtRp2740
(dp2741
g62
(dp2742
sg71
g2727
sg64
(lp2743
g57
(g58
g59
NtRp2744
(dp2745
g62
(dp2746
g70
I3
ssg71
g2740
sg64
(lp2747
g1107
asbasbasbag57
(g73
g59
NtRp2748
(dp2749
g62
(dp2750
sg71
g2660
sg64
(lp2751
g57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
g82
g83
ssg71
g2748
sg64
(lp2755
S'HTTP_CONNECTION'
p2756
asbag57
(g78
g59
NtRp2757
(dp2758
g62
(dp2759
g89
g90
ssg71
g2748
sg64
(lp2760
S':'
asbag57
(g78
g59
NtRp2761
(dp2762
g62
(dp2763
sg71
g2748
sg64
(lp2764
g57
(g58
g59
NtRp2765
(dp2766
g62
(dp2767
g70
I3
ssg71
g2761
sg64
(lp2768
g1129
asbasbasbag57
(g73
g59
NtRp2769
(dp2770
g62
(dp2771
sg71
g2660
sg64
(lp2772
g57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
g82
g83
ssg71
g2769
sg64
(lp2776
S'HTTP_COOKIE'
p2777
asbag57
(g78
g59
NtRp2778
(dp2779
g62
(dp2780
g89
g90
ssg71
g2769
sg64
(lp2781
S':'
asbag57
(g78
g59
NtRp2782
(dp2783
g62
(dp2784
sg71
g2769
sg64
(lp2785
g57
(g58
g59
NtRp2786
(dp2787
g62
(dp2788
g70
I3
ssg71
g2782
sg64
(lp2789
g1151
asbasbasbag57
(g73
g59
NtRp2790
(dp2791
g62
(dp2792
sg71
g2660
sg64
(lp2793
g57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
g82
g83
ssg71
g2790
sg64
(lp2797
S'HTTP_HOST'
p2798
asbag57
(g78
g59
NtRp2799
(dp2800
g62
(dp2801
g89
g90
ssg71
g2790
sg64
(lp2802
S':'
asbag57
(g78
g59
NtRp2803
(dp2804
g62
(dp2805
sg71
g2790
sg64
(lp2806
g57
(g58
g59
NtRp2807
(dp2808
g62
(dp2809
g70
I3
ssg71
g2803
sg64
(lp2810
g1173
asbasbasbag57
(g73
g59
NtRp2811
(dp2812
g62
(dp2813
sg71
g2660
sg64
(lp2814
g57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
g82
g83
ssg71
g2811
sg64
(lp2818
S'HTTP_REFERER'
p2819
asbag57
(g78
g59
NtRp2820
(dp2821
g62
(dp2822
g89
g90
ssg71
g2811
sg64
(lp2823
S':'
asbag57
(g78
g59
NtRp2824
(dp2825
g62
(dp2826
sg71
g2811
sg64
(lp2827
g57
(g58
g59
NtRp2828
(dp2829
g62
(dp2830
g70
I3
ssg71
g2824
sg64
(lp2831
g1195
asbasbasbag57
(g73
g59
NtRp2832
(dp2833
g62
(dp2834
sg71
g2660
sg64
(lp2835
g57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
g82
g83
ssg71
g2832
sg64
(lp2839
S'HTTP_USER_AGENT'
p2840
asbag57
(g78
g59
NtRp2841
(dp2842
g62
(dp2843
g89
g90
ssg71
g2832
sg64
(lp2844
S':'
asbag57
(g78
g59
NtRp2845
(dp2846
g62
(dp2847
sg71
g2832
sg64
(lp2848
g57
(g58
g59
NtRp2849
(dp2850
g62
(dp2851
g70
I3
ssg71
g2845
sg64
(lp2852
g1217
asbasbasbag57
(g73
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2660
sg64
(lp2856
g57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g82
g83
ssg71
g2853
sg64
(lp2860
S'PATH_INFO'
p2861
asbag57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g89
g90
ssg71
g2853
sg64
(lp2865
S':'
asbag57
(g78
g59
NtRp2866
(dp2867
g62
(dp2868
sg71
g2853
sg64
(lp2869
g57
(g58
g59
NtRp2870
(dp2871
g62
(dp2872
g70
I3
ssg71
g2866
sg64
(lp2873
g1371
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2660
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'QUERY_STRING'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
g1393
asbasbasbag57
(g73
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2660
sg64
(lp2898
g57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g82
g83
ssg71
g2895
sg64
(lp2902
S'REMOTE_ADDR'
p2903
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g89
g90
ssg71
g2895
sg64
(lp2907
S':'
asbag57
(g78
g59
NtRp2908
(dp2909
g62
(dp2910
sg71
g2895
sg64
(lp2911
g57
(g58
g59
NtRp2912
(dp2913
g62
(dp2914
g70
I3
ssg71
g2908
sg64
(lp2915
g225
asbasbasbag57
(g73
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2660
sg64
(lp2919
g57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g82
g83
ssg71
g2916
sg64
(lp2923
S'REMOTE_PORT'
p2924
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g89
g90
ssg71
g2916
sg64
(lp2928
S':'
asbag57
(g78
g59
NtRp2929
(dp2930
g62
(dp2931
sg71
g2916
sg64
(lp2932
g57
(g58
g59
NtRp2933
(dp2934
g62
(dp2935
g70
I3
ssg71
g2929
sg64
(lp2936
g1436
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2660
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'REQUEST_METHOD'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
g1458
asbasbasbag57
(g73
g59
NtRp2958
(dp2959
g62
(dp2960
sg71
g2660
sg64
(lp2961
g57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
g82
g83
ssg71
g2958
sg64
(lp2965
S'REQUEST_URI'
p2966
asbag57
(g78
g59
NtRp2967
(dp2968
g62
(dp2969
g89
g90
ssg71
g2958
sg64
(lp2970
S':'
asbag57
(g78
g59
NtRp2971
(dp2972
g62
(dp2973
sg71
g2958
sg64
(lp2974
g57
(g58
g59
NtRp2975
(dp2976
g62
(dp2977
g70
I3
ssg71
g2971
sg64
(lp2978
g1480
asbasbasbag57
(g73
g59
NtRp2979
(dp2980
g62
(dp2981
sg71
g2660
sg64
(lp2982
g57
(g78
g59
NtRp2983
(dp2984
g62
(dp2985
g82
g83
ssg71
g2979
sg64
(lp2986
S'SCRIPT_NAME'
p2987
asbag57
(g78
g59
NtRp2988
(dp2989
g62
(dp2990
g89
g90
ssg71
g2979
sg64
(lp2991
S':'
asbag57
(g78
g59
NtRp2992
(dp2993
g62
(dp2994
sg71
g2979
sg64
(lp2995
g57
(g58
g59
NtRp2996
(dp2997
g62
(dp2998
g70
I3
ssg71
g2992
sg64
(lp2999
S''
asbasbasbag57
(g73
g59
NtRp3000
(dp3001
g62
(dp3002
sg71
g2660
sg64
(lp3003
g57
(g78
g59
NtRp3004
(dp3005
g62
(dp3006
g82
g83
ssg71
g3000
sg64
(lp3007
S'SERVER_NAME'
p3008
asbag57
(g78
g59
NtRp3009
(dp3010
g62
(dp3011
g89
g90
ssg71
g3000
sg64
(lp3012
S':'
asbag57
(g78
g59
NtRp3013
(dp3014
g62
(dp3015
sg71
g3000
sg64
(lp3016
g57
(g58
g59
NtRp3017
(dp3018
g62
(dp3019
g70
I3
ssg71
g3013
sg64
(lp3020
g1523
asbasbasbag57
(g73
g59
NtRp3021
(dp3022
g62
(dp3023
sg71
g2660
sg64
(lp3024
g57
(g78
g59
NtRp3025
(dp3026
g62
(dp3027
g82
g83
ssg71
g3021
sg64
(lp3028
S'SERVER_PORT'
p3029
asbag57
(g78
g59
NtRp3030
(dp3031
g62
(dp3032
g89
g90
ssg71
g3021
sg64
(lp3033
S':'
asbag57
(g78
g59
NtRp3034
(dp3035
g62
(dp3036
sg71
g3021
sg64
(lp3037
g57
(g58
g59
NtRp3038
(dp3039
g62
(dp3040
g70
I3
ssg71
g3034
sg64
(lp3041
g1545
asbasbasbag57
(g73
g59
NtRp3042
(dp3043
g62
(dp3044
sg71
g2660
sg64
(lp3045
g57
(g78
g59
NtRp3046
(dp3047
g62
(dp3048
g82
g83
ssg71
g3042
sg64
(lp3049
S'SERVER_PROTOCOL'
p3050
asbag57
(g78
g59
NtRp3051
(dp3052
g62
(dp3053
g89
g90
ssg71
g3042
sg64
(lp3054
S':'
asbag57
(g78
g59
NtRp3055
(dp3056
g62
(dp3057
sg71
g3042
sg64
(lp3058
g57
(g58
g59
NtRp3059
(dp3060
g62
(dp3061
g70
I3
ssg71
g3055
sg64
(lp3062
g1567
asbasbasbag57
(g73
g59
NtRp3063
(dp3064
g62
(dp3065
sg71
g2660
sg64
(lp3066
g57
(g78
g59
NtRp3067
(dp3068
g62
(dp3069
g82
g83
ssg71
g3063
sg64
(lp3070
S'SERVER_SOFTWARE'
p3071
asbag57
(g78
g59
NtRp3072
(dp3073
g62
(dp3074
g89
g90
ssg71
g3063
sg64
(lp3075
S':'
asbag57
(g78
g59
NtRp3076
(dp3077
g62
(dp3078
sg71
g3063
sg64
(lp3079
g57
(g58
g59
NtRp3080
(dp3081
g62
(dp3082
g70
I3
ssg71
g3076
sg64
(lp3083
g1589
asbasbasbag57
(g73
g59
NtRp3084
(dp3085
g62
(dp3086
sg71
g2660
sg64
(lp3087
g57
(g78
g59
NtRp3088
(dp3089
g62
(dp3090
g82
g83
ssg71
g3084
sg64
(lp3091
S'wsgi.errors'
p3092
asbag57
(g78
g59
NtRp3093
(dp3094
g62
(dp3095
g89
g90
ssg71
g3084
sg64
(lp3096
S':'
asbag57
(g78
g59
NtRp3097
(dp3098
g62
(dp3099
sg71
g3084
sg64
(lp3100
g57
(g58
g59
NtRp3101
(dp3102
g62
(dp3103
g70
I3
ssg71
g3097
sg64
(lp3104
S"<open file '<stderr>', mode 'w' at 0xb729e0d0>"
p3105
asbasbasbag57
(g73
g59
NtRp3106
(dp3107
g62
(dp3108
sg71
g2660
sg64
(lp3109
g57
(g78
g59
NtRp3110
(dp3111
g62
(dp3112
g82
g83
ssg71
g3106
sg64
(lp3113
S'wsgi.file_wrapper'
p3114
asbag57
(g78
g59
NtRp3115
(dp3116
g62
(dp3117
g89
g90
ssg71
g3106
sg64
(lp3118
S':'
asbag57
(g78
g59
NtRp3119
(dp3120
g62
(dp3121
sg71
g3106
sg64
(lp3122
g57
(g58
g59
NtRp3123
(dp3124
g62
(dp3125
g70
I3
ssg71
g3119
sg64
(lp3126
S'<class wsgiref.util.FileWrapper at 0x88bfb6c>'
p3127
asbasbasbag57
(g73
g59
NtRp3128
(dp3129
g62
(dp3130
sg71
g2660
sg64
(lp3131
g57
(g78
g59
NtRp3132
(dp3133
g62
(dp3134
g82
g83
ssg71
g3128
sg64
(lp3135
S'wsgi.input'
p3136
asbag57
(g78
g59
NtRp3137
(dp3138
g62
(dp3139
g89
g90
ssg71
g3128
sg64
(lp3140
S':'
asbag57
(g78
g59
NtRp3141
(dp3142
g62
(dp3143
sg71
g3128
sg64
(lp3144
g57
(g58
g59
NtRp3145
(dp3146
g62
(dp3147
g70
I3
ssg71
g3141
sg64
(lp3148
S'<cStringIO.StringO object at 0x8e581e0>'
p3149
asbasbasbag57
(g73
g59
NtRp3150
(dp3151
g62
(dp3152
sg71
g2660
sg64
(lp3153
g57
(g78
g59
NtRp3154
(dp3155
g62
(dp3156
g82
g83
ssg71
g3150
sg64
(lp3157
S'wsgi.multiprocess'
p3158
asbag57
(g78
g59
NtRp3159
(dp3160
g62
(dp3161
g89
g90
ssg71
g3150
sg64
(lp3162
S':'
asbag57
(g78
g59
NtRp3163
(dp3164
g62
(dp3165
sg71
g3150
sg64
(lp3166
g57
(g58
g59
NtRp3167
(dp3168
g62
(dp3169
g70
I3
ssg71
g3163
sg64
(lp3170
g100
asbasbasbag57
(g73
g59
NtRp3171
(dp3172
g62
(dp3173
sg71
g2660
sg64
(lp3174
g57
(g78
g59
NtRp3175
(dp3176
g62
(dp3177
g82
g83
ssg71
g3171
sg64
(lp3178
S'wsgi.multithread'
p3179
asbag57
(g78
g59
NtRp3180
(dp3181
g62
(dp3182
g89
g90
ssg71
g3171
sg64
(lp3183
S':'
asbag57
(g78
g59
NtRp3184
(dp3185
g62
(dp3186
sg71
g3171
sg64
(lp3187
g57
(g58
g59
NtRp3188
(dp3189
g62
(dp3190
g70
I3
ssg71
g3184
sg64
(lp3191
g1806
asbasbasbag57
(g73
g59
NtRp3192
(dp3193
g62
(dp3194
sg71
g2660
sg64
(lp3195
g57
(g78
g59
NtRp3196
(dp3197
g62
(dp3198
g82
g83
ssg71
g3192
sg64
(lp3199
S'wsgi.run_once'
p3200
asbag57
(g78
g59
NtRp3201
(dp3202
g62
(dp3203
g89
g90
ssg71
g3192
sg64
(lp3204
S':'
asbag57
(g78
g59
NtRp3205
(dp3206
g62
(dp3207
sg71
g3192
sg64
(lp3208
g57
(g58
g59
NtRp3209
(dp3210
g62
(dp3211
g70
I3
ssg71
g3205
sg64
(lp3212
g100
asbasbasbag57
(g73
g59
NtRp3213
(dp3214
g62
(dp3215
sg71
g2660
sg64
(lp3216
g57
(g78
g59
NtRp3217
(dp3218
g62
(dp3219
g82
g83
ssg71
g3213
sg64
(lp3220
S'wsgi.url_scheme'
p3221
asbag57
(g78
g59
NtRp3222
(dp3223
g62
(dp3224
g89
g90
ssg71
g3213
sg64
(lp3225
S':'
asbag57
(g78
g59
NtRp3226
(dp3227
g62
(dp3228
sg71
g3213
sg64
(lp3229
g57
(g58
g59
NtRp3230
(dp3231
g62
(dp3232
g70
I3
ssg71
g3226
sg64
(lp3233
g1849
asbasbasbag57
(g73
g59
NtRp3234
(dp3235
g62
(dp3236
sg71
g2660
sg64
(lp3237
g57
(g78
g59
NtRp3238
(dp3239
g62
(dp3240
g82
g83
ssg71
g3234
sg64
(lp3241
S'wsgi.version'
p3242
asbag57
(g78
g59
NtRp3243
(dp3244
g62
(dp3245
g89
g90
ssg71
g3234
sg64
(lp3246
S':'
asbag57
(g78
g59
NtRp3247
(dp3248
g62
(dp3249
sg71
g3234
sg64
(lp3250
g57
(g58
g59
NtRp3251
(dp3252
g62
(dp3253
g70
I3
ssg71
g3247
sg64
(lp3254
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3255
(lp3256
(dp3257
S'file'
p3258
S'/home/anil/Downloads/web2py/gluon/restricted.py'
p3259
sS'dump'
p3260
(dp3261
S'environment'
p3262
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3263
sS'ccode'
p3264
S'<code object <module> at 0xada860f8, file "/home...EV_bootstrap_ch/controllers/default.py", line 16>'
p3265
ssS'lnum'
p3266
I212
sS'lines'
p3267
(dp3268
I207
S'    try:'
p3269
sI208
S'        if isinstance(code, types.CodeType):'
p3270
sI209
S'            ccode = code'
p3271
sI210
S'        else:'
p3272
sI211
S'            ccode = compile2(code, layer)'
p3273
sI212
S'        exec ccode in environment'
p3274
sI213
S'    except HTTP:'
p3275
sI214
S'        raise'
p3276
sI215
S'    except RestrictedError:'
p3277
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3278
ssS'call'
p3279
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3280
sS'func'
p3281
S'restricted'
p3282
sa(dp3283
g3258
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3284
sg3260
(dp3285
sg3266
I1148
sg3267
(dp3286
I1137
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3287
sI1138
S'   """ per sample . takes id of the sample as the input """'
p3288
sI1139
S'   sid = request.args(0)'
p3289
sI1140
S'   sample = db(db.sample.id == sid).select().first()'
p3290
sI1141
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3291
sI1142
S'   form = SQLFORM(db.sample_files)'
p3292
sI1143
S'   form.vars.sample = sid'
p3293
sI1144
S'   return locals()'
p3294
sI1145
S''
sI1146
S''
ssg3279
S'()'
p3295
sg3281
S'<module>'
p3296
sa(dp3297
g3258
S'/home/anil/Downloads/web2py/gluon/globals.py'
p3298
sg3260
(dp3299
S'self'
p3300
S'undefined'
p3301
sS'f'
S'<function list_all_dev_projects>'
p3302
ssg3266
I193
sg3267
(dp3303
I192
S'        self._vars = None'
p3304
sI193
S'        self._caller = lambda f: f()'
p3305
sI194
S'        self._view_environment = None'
p3306
sI195
S'        self._custom_commit = None'
p3307
sI196
S'        self._custom_rollback = None'
p3308
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3309
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3310
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3311
sI191
S"        self.delimiters = ('{{', '}}')"
p3312
ssg3279
S'(f=<function list_all_dev_projects>)'
p3313
sg3281
S'<lambda>'
p3314
sa(dp3315
g3258
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3316
sg3260
(dp3317
S'auth.user.id'
p3318
g3301
sS'auth.user'
p3319
S'None'
p3320
sS'global auth'
p3321
S'<gluon.tools.Auth object>'
p3322
sS'db.sample.experimentalist.default'
p3323
S'None'
p3324
sS'global db'
p3325
S'<DAL uri="sqlite://storage.sqlite">'
p3326
sS'db.sample'
p3327
S'<Table sample (id,parent,experimentalist,name,co...iment,working_status,replica,publication_status)>'
p3328
sS'db.sample.experimentalist'
p3329
S'<gluon.dal.Field object>'
p3330
ssg3266
I292
sg3267
(dp3331
I288
S'def list_all_dev_projects():'
p3332
sI289
S'    response.menu = ['
p3333
sI290
S"    (T('Home'), False, URL('default','list_all_projects'), [])"
p3334
sI291
S'    ]'
p3335
sI292
S'    db.sample.experimentalist.default=auth.user.id'
p3336
sI293
S'    db.sample.experiment.writable = False'
p3337
sI294
S'    q1 = (db.project.project_status ==  0)'
p3338
sI295
S'    q2 = (db.sample.experimentalist == auth.user.id)'
p3339
sI296
S"    ck = {'project':q1,'sample':q2}"
p3340
sI287
S''
ssg3279
S'()'
p3341
sg3281
S'list_all_dev_projects'
p3342
sasS'pyver'
p3343
S'Python 2.7.3: /usr/bin/python'
p3344
sS'session'
p3345
g57
(g58
g59
NtRp3346
(dp3347
g62
(dp3348
sg64
(lp3349
g57
(g66
g59
NtRp3350
(dp3351
g62
(dp3352
g70
I5
ssg71
Nsg64
(lp3353
g57
(g73
g59
NtRp3354
(dp3355
g62
(dp3356
sg71
g3350
sg64
(lp3357
g57
(g78
g59
NtRp3358
(dp3359
g62
(dp3360
g82
g83
ssg71
g3354
sg64
(lp3361
S'flash'
p3362
asbag57
(g78
g59
NtRp3363
(dp3364
g62
(dp3365
g89
g90
ssg71
g3354
sg64
(lp3366
S':'
asbag57
(g78
g59
NtRp3367
(dp3368
g62
(dp3369
sg71
g3354
sg64
(lp3370
g57
(g58
g59
NtRp3371
(dp3372
g62
(dp3373
g70
I5
ssg71
g3367
sg64
(lp3374
S'None'
p3375
asbasbasbasbasbsS'etype'
p3376
S"<type 'exceptions.AttributeError'>"
p3377
sS'date'
p3378
S'Mon Mar  4 15:55:40 2013'
p3379
sS'response'
p3380
g57
(g58
g59
NtRp3381
(dp3382
g62
(dp3383
sg64
(lp3384
g57
(g66
g59
NtRp3385
(dp3386
g62
(dp3387
g70
I5
ssg71
Nsg64
(lp3388
g57
(g73
g59
NtRp3389
(dp3390
g62
(dp3391
sg71
g3385
sg64
(lp3392
g57
(g78
g59
NtRp3393
(dp3394
g62
(dp3395
g82
g83
ssg71
g3389
sg64
(lp3396
g168
asbag57
(g78
g59
NtRp3397
(dp3398
g62
(dp3399
g89
g90
ssg71
g3389
sg64
(lp3400
S':'
asbag57
(g78
g59
NtRp3401
(dp3402
g62
(dp3403
sg71
g3389
sg64
(lp3404
g57
(g58
g59
NtRp3405
(dp3406
g62
(dp3407
g70
I5
ssg71
g3401
sg64
(lp3408
S'<cStringIO.StringO object at 0x8d3e6a0>'
p3409
asbasbasbag57
(g73
g59
NtRp3410
(dp3411
g62
(dp3412
sg71
g3385
sg64
(lp3413
g57
(g78
g59
NtRp3414
(dp3415
g62
(dp3416
g82
g83
ssg71
g3410
sg64
(lp3417
g256
asbag57
(g78
g59
NtRp3418
(dp3419
g62
(dp3420
g89
g90
ssg71
g3410
sg64
(lp3421
S':'
asbag57
(g78
g59
NtRp3422
(dp3423
g62
(dp3424
sg71
g3410
sg64
(lp3425
g57
(g58
g59
NtRp3426
(dp3427
g62
(dp3428
g70
I5
ssg71
g3422
sg64
(lp3429
g57
(g66
g59
NtRp3430
(dp3431
g62
(dp3432
g70
I4
ssg71
Nsg64
(lp3433
g57
(g73
g59
NtRp3434
(dp3435
g62
(dp3436
sg71
g3430
sg64
(lp3437
g57
(g78
g59
NtRp3438
(dp3439
g62
(dp3440
g82
g83
ssg71
g3434
sg64
(lp3441
S'session_id_dev_bootstrap_ch'
p3442
asbag57
(g78
g59
NtRp3443
(dp3444
g62
(dp3445
g89
g90
ssg71
g3434
sg64
(lp3446
S':'
asbag57
(g78
g59
NtRp3447
(dp3448
g62
(dp3449
sg71
g3434
sg64
(lp3450
g57
(g58
g59
NtRp3451
(dp3452
g62
(dp3453
g70
I4
ssg71
g3447
sg64
(lp3454
g488
ag57
(g66
g59
NtRp3455
(dp3456
g62
(dp3457
g70
I3
ssg71
Nsg64
(lp3458
g57
(g73
g59
NtRp3459
(dp3460
g62
(dp3461
sg71
g3455
sg64
(lp3462
g57
(g78
g59
NtRp3463
(dp3464
g62
(dp3465
g82
g83
ssg71
g3459
sg64
(lp3466
g307
asbag57
(g78
g59
NtRp3467
(dp3468
g62
(dp3469
g89
g90
ssg71
g3459
sg64
(lp3470
S':'
asbag57
(g78
g59
NtRp3471
(dp3472
g62
(dp3473
sg71
g3459
sg64
(lp3474
g57
(g58
g59
NtRp3475
(dp3476
g62
(dp3477
g70
I3
ssg71
g3471
sg64
(lp3478
S''
asbasbasbag57
(g73
g59
NtRp3479
(dp3480
g62
(dp3481
sg71
g3455
sg64
(lp3482
g57
(g78
g59
NtRp3483
(dp3484
g62
(dp3485
g82
g83
ssg71
g3479
sg64
(lp3486
g328
asbag57
(g78
g59
NtRp3487
(dp3488
g62
(dp3489
g89
g90
ssg71
g3479
sg64
(lp3490
S':'
asbag57
(g78
g59
NtRp3491
(dp3492
g62
(dp3493
sg71
g3479
sg64
(lp3494
g57
(g58
g59
NtRp3495
(dp3496
g62
(dp3497
g70
I3
ssg71
g3491
sg64
(lp3498
S''
asbasbasbag57
(g73
g59
NtRp3499
(dp3500
g62
(dp3501
sg71
g3455
sg64
(lp3502
g57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
g82
g83
ssg71
g3499
sg64
(lp3506
g349
asbag57
(g78
g59
NtRp3507
(dp3508
g62
(dp3509
g89
g90
ssg71
g3499
sg64
(lp3510
S':'
asbag57
(g78
g59
NtRp3511
(dp3512
g62
(dp3513
sg71
g3499
sg64
(lp3514
g57
(g58
g59
NtRp3515
(dp3516
g62
(dp3517
g70
I3
ssg71
g3511
sg64
(lp3518
S''
asbasbasbag57
(g73
g59
NtRp3519
(dp3520
g62
(dp3521
sg71
g3455
sg64
(lp3522
g57
(g78
g59
NtRp3523
(dp3524
g62
(dp3525
g82
g83
ssg71
g3519
sg64
(lp3526
g370
asbag57
(g78
g59
NtRp3527
(dp3528
g62
(dp3529
g89
g90
ssg71
g3519
sg64
(lp3530
S':'
asbag57
(g78
g59
NtRp3531
(dp3532
g62
(dp3533
sg71
g3519
sg64
(lp3534
g57
(g58
g59
NtRp3535
(dp3536
g62
(dp3537
g70
I3
ssg71
g3531
sg64
(lp3538
S''
asbasbasbag57
(g73
g59
NtRp3539
(dp3540
g62
(dp3541
sg71
g3455
sg64
(lp3542
g57
(g78
g59
NtRp3543
(dp3544
g62
(dp3545
g82
g83
ssg71
g3539
sg64
(lp3546
g391
asbag57
(g78
g59
NtRp3547
(dp3548
g62
(dp3549
g89
g90
ssg71
g3539
sg64
(lp3550
S':'
asbag57
(g78
g59
NtRp3551
(dp3552
g62
(dp3553
sg71
g3539
sg64
(lp3554
g57
(g58
g59
NtRp3555
(dp3556
g62
(dp3557
g70
I3
ssg71
g3551
sg64
(lp3558
S''
asbasbasbag57
(g73
g59
NtRp3559
(dp3560
g62
(dp3561
sg71
g3455
sg64
(lp3562
g57
(g78
g59
NtRp3563
(dp3564
g62
(dp3565
g82
g83
ssg71
g3559
sg64
(lp3566
g412
asbag57
(g78
g59
NtRp3567
(dp3568
g62
(dp3569
g89
g90
ssg71
g3559
sg64
(lp3570
S':'
asbag57
(g78
g59
NtRp3571
(dp3572
g62
(dp3573
sg71
g3559
sg64
(lp3574
g57
(g58
g59
NtRp3575
(dp3576
g62
(dp3577
g70
I3
ssg71
g3571
sg64
(lp3578
S'/'
asbasbasbag57
(g73
g59
NtRp3579
(dp3580
g62
(dp3581
sg71
g3455
sg64
(lp3582
g57
(g78
g59
NtRp3583
(dp3584
g62
(dp3585
g82
g83
ssg71
g3579
sg64
(lp3586
g433
asbag57
(g78
g59
NtRp3587
(dp3588
g62
(dp3589
g89
g90
ssg71
g3579
sg64
(lp3590
S':'
asbag57
(g78
g59
NtRp3591
(dp3592
g62
(dp3593
sg71
g3579
sg64
(lp3594
g57
(g58
g59
NtRp3595
(dp3596
g62
(dp3597
g70
I3
ssg71
g3591
sg64
(lp3598
S''
asbasbasbag57
(g73
g59
NtRp3599
(dp3600
g62
(dp3601
sg71
g3455
sg64
(lp3602
g57
(g78
g59
NtRp3603
(dp3604
g62
(dp3605
g82
g83
ssg71
g3599
sg64
(lp3606
g454
asbag57
(g78
g59
NtRp3607
(dp3608
g62
(dp3609
g89
g90
ssg71
g3599
sg64
(lp3610
S':'
asbag57
(g78
g59
NtRp3611
(dp3612
g62
(dp3613
sg71
g3599
sg64
(lp3614
g57
(g58
g59
NtRp3615
(dp3616
g62
(dp3617
g70
I3
ssg71
g3611
sg64
(lp3618
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3619
(dp3620
g62
(dp3621
sg71
g3385
sg64
(lp3622
g57
(g78
g59
NtRp3623
(dp3624
g62
(dp3625
g82
g83
ssg71
g3619
sg64
(lp3626
S'delimiters'
p3627
asbag57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
g89
g90
ssg71
g3619
sg64
(lp3631
S':'
asbag57
(g78
g59
NtRp3632
(dp3633
g62
(dp3634
sg71
g3619
sg64
(lp3635
g57
(g58
g59
NtRp3636
(dp3637
g62
(dp3638
g70
I5
ssg71
g3632
sg64
(lp3639
g57
(g66
g59
NtRp3640
(dp3641
g62
(dp3642
g70
I4
ssg71
Nsg64
(lp3643
g57
(g73
g59
NtRp3644
(dp3645
g62
(dp3646
sg71
g3640
sg64
(lp3647
g57
(g78
g59
NtRp3648
(dp3649
g62
(dp3650
sg71
g3644
sg64
(lp3651
g57
(g58
g59
NtRp3652
(dp3653
g62
(dp3654
g70
I4
ssg71
g3648
sg64
(lp3655
S'{{'
p3656
asbasbasbag57
(g73
g59
NtRp3657
(dp3658
g62
(dp3659
sg71
g3640
sg64
(lp3660
g57
(g78
g59
NtRp3661
(dp3662
g62
(dp3663
sg71
g3657
sg64
(lp3664
g57
(g58
g59
NtRp3665
(dp3666
g62
(dp3667
g70
I4
ssg71
g3661
sg64
(lp3668
S'}}'
p3669
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3670
(dp3671
g62
(dp3672
sg71
g3385
sg64
(lp3673
g57
(g78
g59
NtRp3674
(dp3675
g62
(dp3676
g82
g83
ssg71
g3670
sg64
(lp3677
S'files'
p3678
asbag57
(g78
g59
NtRp3679
(dp3680
g62
(dp3681
g89
g90
ssg71
g3670
sg64
(lp3682
S':'
asbag57
(g78
g59
NtRp3683
(dp3684
g62
(dp3685
sg71
g3670
sg64
(lp3686
g57
(g58
g59
NtRp3687
(dp3688
g62
(dp3689
g70
I5
ssg71
g3683
sg64
(lp3690
g57
(g66
g59
NtRp3691
(dp3692
g62
(dp3693
g70
I4
ssg71
Nsg64
(lp3694
g57
(g73
g59
NtRp3695
(dp3696
g62
(dp3697
sg71
g3691
sg64
(lp3698
g57
(g78
g59
NtRp3699
(dp3700
g62
(dp3701
sg71
g3695
sg64
(lp3702
g57
(g58
g59
NtRp3703
(dp3704
g62
(dp3705
g70
I4
ssg71
g3699
sg64
(lp3706
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3707
asbasbasbag57
(g73
g59
NtRp3708
(dp3709
g62
(dp3710
sg71
g3691
sg64
(lp3711
g57
(g78
g59
NtRp3712
(dp3713
g62
(dp3714
sg71
g3708
sg64
(lp3715
g57
(g58
g59
NtRp3716
(dp3717
g62
(dp3718
g70
I4
ssg71
g3712
sg64
(lp3719
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3720
asbasbasbag57
(g73
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3691
sg64
(lp3724
g57
(g78
g59
NtRp3725
(dp3726
g62
(dp3727
sg71
g3721
sg64
(lp3728
g57
(g58
g59
NtRp3729
(dp3730
g62
(dp3731
g70
I4
ssg71
g3725
sg64
(lp3732
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3733
asbasbasbag57
(g73
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3691
sg64
(lp3737
g57
(g78
g59
NtRp3738
(dp3739
g62
(dp3740
sg71
g3734
sg64
(lp3741
g57
(g58
g59
NtRp3742
(dp3743
g62
(dp3744
g70
I4
ssg71
g3738
sg64
(lp3745
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3746
asbasbasbag57
(g73
g59
NtRp3747
(dp3748
g62
(dp3749
sg71
g3691
sg64
(lp3750
g57
(g78
g59
NtRp3751
(dp3752
g62
(dp3753
sg71
g3747
sg64
(lp3754
g57
(g58
g59
NtRp3755
(dp3756
g62
(dp3757
g70
I4
ssg71
g3751
sg64
(lp3758
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3759
asbasbasbag57
(g73
g59
NtRp3760
(dp3761
g62
(dp3762
sg71
g3691
sg64
(lp3763
g57
(g78
g59
NtRp3764
(dp3765
g62
(dp3766
sg71
g3760
sg64
(lp3767
g57
(g58
g59
NtRp3768
(dp3769
g62
(dp3770
g70
I4
ssg71
g3764
sg64
(lp3771
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3772
asbasbasbag57
(g73
g59
NtRp3773
(dp3774
g62
(dp3775
sg71
g3691
sg64
(lp3776
g57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
sg71
g3773
sg64
(lp3780
g57
(g58
g59
NtRp3781
(dp3782
g62
(dp3783
g70
I4
ssg71
g3777
sg64
(lp3784
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3785
asbasbasbag57
(g73
g59
NtRp3786
(dp3787
g62
(dp3788
sg71
g3691
sg64
(lp3789
g57
(g78
g59
NtRp3790
(dp3791
g62
(dp3792
sg71
g3786
sg64
(lp3793
g57
(g58
g59
NtRp3794
(dp3795
g62
(dp3796
g70
I4
ssg71
g3790
sg64
(lp3797
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3798
asbasbasbag57
(g73
g59
NtRp3799
(dp3800
g62
(dp3801
sg71
g3691
sg64
(lp3802
g57
(g78
g59
NtRp3803
(dp3804
g62
(dp3805
sg71
g3799
sg64
(lp3806
g57
(g58
g59
NtRp3807
(dp3808
g62
(dp3809
g70
I4
ssg71
g3803
sg64
(lp3810
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3811
asbasbasbag57
(g73
g59
NtRp3812
(dp3813
g62
(dp3814
sg71
g3691
sg64
(lp3815
g57
(g78
g59
NtRp3816
(dp3817
g62
(dp3818
sg71
g3812
sg64
(lp3819
g57
(g58
g59
NtRp3820
(dp3821
g62
(dp3822
g70
I4
ssg71
g3816
sg64
(lp3823
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3824
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3825
(dp3826
g62
(dp3827
sg71
g3385
sg64
(lp3828
g57
(g78
g59
NtRp3829
(dp3830
g62
(dp3831
g82
g83
ssg71
g3825
sg64
(lp3832
S'flash'
p3833
asbag57
(g78
g59
NtRp3834
(dp3835
g62
(dp3836
g89
g90
ssg71
g3825
sg64
(lp3837
S':'
asbag57
(g78
g59
NtRp3838
(dp3839
g62
(dp3840
sg71
g3825
sg64
(lp3841
g57
(g58
g59
NtRp3842
(dp3843
g62
(dp3844
g70
I5
ssg71
g3838
sg64
(lp3845
S''
asbasbasbag57
(g73
g59
NtRp3846
(dp3847
g62
(dp3848
sg71
g3385
sg64
(lp3849
g57
(g78
g59
NtRp3850
(dp3851
g62
(dp3852
g82
g83
ssg71
g3846
sg64
(lp3853
S'generic_patterns'
p3854
asbag57
(g78
g59
NtRp3855
(dp3856
g62
(dp3857
g89
g90
ssg71
g3846
sg64
(lp3858
S':'
asbag57
(g78
g59
NtRp3859
(dp3860
g62
(dp3861
sg71
g3846
sg64
(lp3862
g57
(g58
g59
NtRp3863
(dp3864
g62
(dp3865
g70
I5
ssg71
g3859
sg64
(lp3866
g57
(g66
g59
NtRp3867
(dp3868
g62
(dp3869
g70
I4
ssg71
Nsg64
(lp3870
g57
(g73
g59
NtRp3871
(dp3872
g62
(dp3873
sg71
g3867
sg64
(lp3874
g57
(g78
g59
NtRp3875
(dp3876
g62
(dp3877
sg71
g3871
sg64
(lp3878
g57
(g58
g59
NtRp3879
(dp3880
g62
(dp3881
g70
I4
ssg71
g3875
sg64
(lp3882
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3883
(dp3884
g62
(dp3885
sg71
g3385
sg64
(lp3886
g57
(g78
g59
NtRp3887
(dp3888
g62
(dp3889
g82
g83
ssg71
g3883
sg64
(lp3890
S'google_analytics_id'
p3891
asbag57
(g78
g59
NtRp3892
(dp3893
g62
(dp3894
g89
g90
ssg71
g3883
sg64
(lp3895
S':'
asbag57
(g78
g59
NtRp3896
(dp3897
g62
(dp3898
sg71
g3883
sg64
(lp3899
g57
(g58
g59
NtRp3900
(dp3901
g62
(dp3902
g70
I5
ssg71
g3896
sg64
(lp3903
S'None'
p3904
asbasbasbag57
(g73
g59
NtRp3905
(dp3906
g62
(dp3907
sg71
g3385
sg64
(lp3908
g57
(g78
g59
NtRp3909
(dp3910
g62
(dp3911
g82
g83
ssg71
g3905
sg64
(lp3912
S'headers'
p3913
asbag57
(g78
g59
NtRp3914
(dp3915
g62
(dp3916
g89
g90
ssg71
g3905
sg64
(lp3917
S':'
asbag57
(g78
g59
NtRp3918
(dp3919
g62
(dp3920
sg71
g3905
sg64
(lp3921
g57
(g58
g59
NtRp3922
(dp3923
g62
(dp3924
g70
I5
ssg71
g3918
sg64
(lp3925
g57
(g66
g59
NtRp3926
(dp3927
g62
(dp3928
g70
I4
ssg71
Nsg64
(lp3929
g57
(g73
g59
NtRp3930
(dp3931
g62
(dp3932
sg71
g3926
sg64
(lp3933
g57
(g78
g59
NtRp3934
(dp3935
g62
(dp3936
g82
g83
ssg71
g3930
sg64
(lp3937
S'X-Powered-By'
p3938
asbag57
(g78
g59
NtRp3939
(dp3940
g62
(dp3941
g89
g90
ssg71
g3930
sg64
(lp3942
S':'
asbag57
(g78
g59
NtRp3943
(dp3944
g62
(dp3945
sg71
g3930
sg64
(lp3946
g57
(g58
g59
NtRp3947
(dp3948
g62
(dp3949
g70
I4
ssg71
g3943
sg64
(lp3950
S'web2py'
p3951
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3952
(dp3953
g62
(dp3954
sg71
g3385
sg64
(lp3955
g57
(g78
g59
NtRp3956
(dp3957
g62
(dp3958
g82
g83
ssg71
g3952
sg64
(lp3959
S'menu'
p3960
asbag57
(g78
g59
NtRp3961
(dp3962
g62
(dp3963
g89
g90
ssg71
g3952
sg64
(lp3964
S':'
asbag57
(g78
g59
NtRp3965
(dp3966
g62
(dp3967
sg71
g3952
sg64
(lp3968
g57
(g58
g59
NtRp3969
(dp3970
g62
(dp3971
g70
I5
ssg71
g3965
sg64
(lp3972
g57
(g66
g59
NtRp3973
(dp3974
g62
(dp3975
g70
I4
ssg71
Nsg64
(lp3976
g57
(g73
g59
NtRp3977
(dp3978
g62
(dp3979
sg71
g3973
sg64
(lp3980
g57
(g78
g59
NtRp3981
(dp3982
g62
(dp3983
sg71
g3977
sg64
(lp3984
g57
(g58
g59
NtRp3985
(dp3986
g62
(dp3987
g70
I4
ssg71
g3981
sg64
(lp3988
g57
(g66
g59
NtRp3989
(dp3990
g62
(dp3991
g70
I3
ssg71
Nsg64
(lp3992
g57
(g73
g59
NtRp3993
(dp3994
g62
(dp3995
sg71
g3989
sg64
(lp3996
g57
(g78
g59
NtRp3997
(dp3998
g62
(dp3999
sg71
g3993
sg64
(lp4000
g57
(g58
g59
NtRp4001
(dp4002
g62
(dp4003
g70
I3
ssg71
g3997
sg64
(lp4004
cgluon.languages
lazyT_unpickle
p4005
(S't\x04\x00\x00\x00Home'
tRp4006
asbasbasbag57
(g73
g59
NtRp4007
(dp4008
g62
(dp4009
sg71
g3989
sg64
(lp4010
g57
(g78
g59
NtRp4011
(dp4012
g62
(dp4013
sg71
g4007
sg64
(lp4014
g57
(g58
g59
NtRp4015
(dp4016
g62
(dp4017
g70
I3
ssg71
g4011
sg64
(lp4018
g100
asbasbasbag57
(g73
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g3989
sg64
(lp4022
g57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
sg71
g4019
sg64
(lp4026
g57
(g58
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I3
ssg71
g4023
sg64
(lp4030
S'/DEV_bootstrap_ch/default/list_all_projects'
p4031
asbasbasbag57
(g73
g59
NtRp4032
(dp4033
g62
(dp4034
sg71
g3989
sg64
(lp4035
g57
(g78
g59
NtRp4036
(dp4037
g62
(dp4038
sg71
g4032
sg64
(lp4039
g57
(g58
g59
NtRp4040
(dp4041
g62
(dp4042
g70
I3
ssg71
g4036
sg64
(lp4043
g57
(g66
g59
NtRp4044
(dp4045
g62
(dp4046
g70
I2
ssg71
Nsg64
(lp4047
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4048
(dp4049
g62
(dp4050
sg71
g3385
sg64
(lp4051
g57
(g78
g59
NtRp4052
(dp4053
g62
(dp4054
g82
g83
ssg71
g4048
sg64
(lp4055
S'meta'
p4056
asbag57
(g78
g59
NtRp4057
(dp4058
g62
(dp4059
g89
g90
ssg71
g4048
sg64
(lp4060
S':'
asbag57
(g78
g59
NtRp4061
(dp4062
g62
(dp4063
sg71
g4048
sg64
(lp4064
g57
(g58
g59
NtRp4065
(dp4066
g62
(dp4067
g70
I5
ssg71
g4061
sg64
(lp4068
g57
(g66
g59
NtRp4069
(dp4070
g62
(dp4071
g70
I4
ssg71
Nsg64
(lp4072
g57
(g73
g59
NtRp4073
(dp4074
g62
(dp4075
sg71
g4069
sg64
(lp4076
g57
(g78
g59
NtRp4077
(dp4078
g62
(dp4079
g82
g83
ssg71
g4073
sg64
(lp4080
S'author'
p4081
asbag57
(g78
g59
NtRp4082
(dp4083
g62
(dp4084
g89
g90
ssg71
g4073
sg64
(lp4085
S':'
asbag57
(g78
g59
NtRp4086
(dp4087
g62
(dp4088
sg71
g4073
sg64
(lp4089
g57
(g58
g59
NtRp4090
(dp4091
g62
(dp4092
g70
I4
ssg71
g4086
sg64
(lp4093
S'Vikram Pudi <vikram@iiit.ac.in>'
p4094
asbasbasbag57
(g73
g59
NtRp4095
(dp4096
g62
(dp4097
sg71
g4069
sg64
(lp4098
g57
(g78
g59
NtRp4099
(dp4100
g62
(dp4101
g82
g83
ssg71
g4095
sg64
(lp4102
S'copyright'
p4103
asbag57
(g78
g59
NtRp4104
(dp4105
g62
(dp4106
g89
g90
ssg71
g4095
sg64
(lp4107
S':'
asbag57
(g78
g59
NtRp4108
(dp4109
g62
(dp4110
sg71
g4095
sg64
(lp4111
g57
(g58
g59
NtRp4112
(dp4113
g62
(dp4114
g70
I4
ssg71
g4108
sg64
(lp4115
S'Copyright 2011'
p4116
asbasbasbag57
(g73
g59
NtRp4117
(dp4118
g62
(dp4119
sg71
g4069
sg64
(lp4120
g57
(g78
g59
NtRp4121
(dp4122
g62
(dp4123
g82
g83
ssg71
g4117
sg64
(lp4124
S'description'
p4125
asbag57
(g78
g59
NtRp4126
(dp4127
g62
(dp4128
g89
g90
ssg71
g4117
sg64
(lp4129
S':'
asbag57
(g78
g59
NtRp4130
(dp4131
g62
(dp4132
sg71
g4117
sg64
(lp4133
g57
(g58
g59
NtRp4134
(dp4135
g62
(dp4136
g70
I4
ssg71
g4130
sg64
(lp4137
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4138
asbasbasbag57
(g73
g59
NtRp4139
(dp4140
g62
(dp4141
sg71
g4069
sg64
(lp4142
g57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
g82
g83
ssg71
g4139
sg64
(lp4146
S'generator'
p4147
asbag57
(g78
g59
NtRp4148
(dp4149
g62
(dp4150
g89
g90
ssg71
g4139
sg64
(lp4151
S':'
asbag57
(g78
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g4139
sg64
(lp4155
g57
(g58
g59
NtRp4156
(dp4157
g62
(dp4158
g70
I4
ssg71
g4152
sg64
(lp4159
S'Web2py Web Framework'
p4160
asbasbasbag57
(g73
g59
NtRp4161
(dp4162
g62
(dp4163
sg71
g4069
sg64
(lp4164
g57
(g78
g59
NtRp4165
(dp4166
g62
(dp4167
g82
g83
ssg71
g4161
sg64
(lp4168
S'keywords'
p4169
asbag57
(g78
g59
NtRp4170
(dp4171
g62
(dp4172
g89
g90
ssg71
g4161
sg64
(lp4173
S':'
asbag57
(g78
g59
NtRp4174
(dp4175
g62
(dp4176
sg71
g4161
sg64
(lp4177
g57
(g58
g59
NtRp4178
(dp4179
g62
(dp4180
g70
I4
ssg71
g4174
sg64
(lp4181
S'web2py, python, metabolome, metabolomics'
p4182
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4183
(dp4184
g62
(dp4185
sg71
g3385
sg64
(lp4186
g57
(g78
g59
NtRp4187
(dp4188
g62
(dp4189
g82
g83
ssg71
g4183
sg64
(lp4190
S'models_to_run'
p4191
asbag57
(g78
g59
NtRp4192
(dp4193
g62
(dp4194
g89
g90
ssg71
g4183
sg64
(lp4195
S':'
asbag57
(g78
g59
NtRp4196
(dp4197
g62
(dp4198
sg71
g4183
sg64
(lp4199
g57
(g58
g59
NtRp4200
(dp4201
g62
(dp4202
g70
I5
ssg71
g4196
sg64
(lp4203
g57
(g66
g59
NtRp4204
(dp4205
g62
(dp4206
g70
I4
ssg71
Nsg64
(lp4207
g57
(g73
g59
NtRp4208
(dp4209
g62
(dp4210
sg71
g4204
sg64
(lp4211
g57
(g78
g59
NtRp4212
(dp4213
g62
(dp4214
sg71
g4208
sg64
(lp4215
g57
(g58
g59
NtRp4216
(dp4217
g62
(dp4218
g70
I4
ssg71
g4212
sg64
(lp4219
S'^\\w+\\.py$'
p4220
asbasbasbag57
(g73
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4204
sg64
(lp4224
g57
(g78
g59
NtRp4225
(dp4226
g62
(dp4227
sg71
g4221
sg64
(lp4228
g57
(g58
g59
NtRp4229
(dp4230
g62
(dp4231
g70
I4
ssg71
g4225
sg64
(lp4232
S'^default/\\w+\\.py$'
p4233
asbasbasbag57
(g73
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4204
sg64
(lp4237
g57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4234
sg64
(lp4241
g57
(g58
g59
NtRp4242
(dp4243
g62
(dp4244
g70
I4
ssg71
g4238
sg64
(lp4245
S'^default/list_all_dev_projects/\\w+\\.py$'
p4246
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g3385
sg64
(lp4250
g57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
g82
g83
ssg71
g4247
sg64
(lp4254
S'postprocessing'
p4255
asbag57
(g78
g59
NtRp4256
(dp4257
g62
(dp4258
g89
g90
ssg71
g4247
sg64
(lp4259
S':'
asbag57
(g78
g59
NtRp4260
(dp4261
g62
(dp4262
sg71
g4247
sg64
(lp4263
g57
(g58
g59
NtRp4264
(dp4265
g62
(dp4266
g70
I5
ssg71
g4260
sg64
(lp4267
g57
(g66
g59
NtRp4268
(dp4269
g62
(dp4270
g70
I4
ssg71
Nsg64
(lp4271
sbasbasbasbag57
(g73
g59
NtRp4272
(dp4273
g62
(dp4274
sg71
g3385
sg64
(lp4275
g57
(g78
g59
NtRp4276
(dp4277
g62
(dp4278
g82
g83
ssg71
g4272
sg64
(lp4279
S'session_cookie_expires'
p4280
asbag57
(g78
g59
NtRp4281
(dp4282
g62
(dp4283
g89
g90
ssg71
g4272
sg64
(lp4284
S':'
asbag57
(g78
g59
NtRp4285
(dp4286
g62
(dp4287
sg71
g4272
sg64
(lp4288
g57
(g58
g59
NtRp4289
(dp4290
g62
(dp4291
g70
I5
ssg71
g4285
sg64
(lp4292
S'None'
p4293
asbasbasbag57
(g73
g59
NtRp4294
(dp4295
g62
(dp4296
sg71
g3385
sg64
(lp4297
g57
(g78
g59
NtRp4298
(dp4299
g62
(dp4300
g82
g83
ssg71
g4294
sg64
(lp4301
S'session_data_name'
p4302
asbag57
(g78
g59
NtRp4303
(dp4304
g62
(dp4305
g89
g90
ssg71
g4294
sg64
(lp4306
S':'
asbag57
(g78
g59
NtRp4307
(dp4308
g62
(dp4309
sg71
g4294
sg64
(lp4310
g57
(g58
g59
NtRp4311
(dp4312
g62
(dp4313
g70
I5
ssg71
g4307
sg64
(lp4314
S'session_data_dev_bootstrap_ch'
p4315
asbasbasbag57
(g73
g59
NtRp4316
(dp4317
g62
(dp4318
sg71
g3385
sg64
(lp4319
g57
(g78
g59
NtRp4320
(dp4321
g62
(dp4322
g82
g83
ssg71
g4316
sg64
(lp4323
S'session_file'
p4324
asbag57
(g78
g59
NtRp4325
(dp4326
g62
(dp4327
g89
g90
ssg71
g4316
sg64
(lp4328
S':'
asbag57
(g78
g59
NtRp4329
(dp4330
g62
(dp4331
sg71
g4316
sg64
(lp4332
g57
(g58
g59
NtRp4333
(dp4334
g62
(dp4335
g70
I5
ssg71
g4329
sg64
(lp4336
S"<open file '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a', mode 'rb+' at 0x8f5f8b8>"
p4337
asbasbasbag57
(g73
g59
NtRp4338
(dp4339
g62
(dp4340
sg71
g3385
sg64
(lp4341
g57
(g78
g59
NtRp4342
(dp4343
g62
(dp4344
g82
g83
ssg71
g4338
sg64
(lp4345
S'session_filename'
p4346
asbag57
(g78
g59
NtRp4347
(dp4348
g62
(dp4349
g89
g90
ssg71
g4338
sg64
(lp4350
S':'
asbag57
(g78
g59
NtRp4351
(dp4352
g62
(dp4353
sg71
g4338
sg64
(lp4354
g57
(g58
g59
NtRp4355
(dp4356
g62
(dp4357
g70
I5
ssg71
g4351
sg64
(lp4358
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a'
p4359
asbasbasbag57
(g73
g59
NtRp4360
(dp4361
g62
(dp4362
sg71
g3385
sg64
(lp4363
g57
(g78
g59
NtRp4364
(dp4365
g62
(dp4366
g82
g83
ssg71
g4360
sg64
(lp4367
S'session_id'
p4368
asbag57
(g78
g59
NtRp4369
(dp4370
g62
(dp4371
g89
g90
ssg71
g4360
sg64
(lp4372
S':'
asbag57
(g78
g59
NtRp4373
(dp4374
g62
(dp4375
sg71
g4360
sg64
(lp4376
g57
(g58
g59
NtRp4377
(dp4378
g62
(dp4379
g70
I5
ssg71
g4373
sg64
(lp4380
g488
asbasbasbag57
(g73
g59
NtRp4381
(dp4382
g62
(dp4383
sg71
g3385
sg64
(lp4384
g57
(g78
g59
NtRp4385
(dp4386
g62
(dp4387
g82
g83
ssg71
g4381
sg64
(lp4388
S'session_id_name'
p4389
asbag57
(g78
g59
NtRp4390
(dp4391
g62
(dp4392
g89
g90
ssg71
g4381
sg64
(lp4393
S':'
asbag57
(g78
g59
NtRp4394
(dp4395
g62
(dp4396
sg71
g4381
sg64
(lp4397
g57
(g58
g59
NtRp4398
(dp4399
g62
(dp4400
g70
I5
ssg71
g4394
sg64
(lp4401
g3442
asbasbasbag57
(g73
g59
NtRp4402
(dp4403
g62
(dp4404
sg71
g3385
sg64
(lp4405
g57
(g78
g59
NtRp4406
(dp4407
g62
(dp4408
g82
g83
ssg71
g4402
sg64
(lp4409
S'session_locked'
p4410
asbag57
(g78
g59
NtRp4411
(dp4412
g62
(dp4413
g89
g90
ssg71
g4402
sg64
(lp4414
S':'
asbag57
(g78
g59
NtRp4415
(dp4416
g62
(dp4417
sg71
g4402
sg64
(lp4418
g57
(g58
g59
NtRp4419
(dp4420
g62
(dp4421
g70
I5
ssg71
g4415
sg64
(lp4422
g1806
asbasbasbag57
(g73
g59
NtRp4423
(dp4424
g62
(dp4425
sg71
g3385
sg64
(lp4426
g57
(g78
g59
NtRp4427
(dp4428
g62
(dp4429
g82
g83
ssg71
g4423
sg64
(lp4430
S'session_new'
p4431
asbag57
(g78
g59
NtRp4432
(dp4433
g62
(dp4434
g89
g90
ssg71
g4423
sg64
(lp4435
S':'
asbag57
(g78
g59
NtRp4436
(dp4437
g62
(dp4438
sg71
g4423
sg64
(lp4439
g57
(g58
g59
NtRp4440
(dp4441
g62
(dp4442
g70
I5
ssg71
g4436
sg64
(lp4443
g100
asbasbasbag57
(g73
g59
NtRp4444
(dp4445
g62
(dp4446
sg71
g3385
sg64
(lp4447
g57
(g78
g59
NtRp4448
(dp4449
g62
(dp4450
g82
g83
ssg71
g4444
sg64
(lp4451
S'session_storage_type'
p4452
asbag57
(g78
g59
NtRp4453
(dp4454
g62
(dp4455
g89
g90
ssg71
g4444
sg64
(lp4456
S':'
asbag57
(g78
g59
NtRp4457
(dp4458
g62
(dp4459
sg71
g4444
sg64
(lp4460
g57
(g58
g59
NtRp4461
(dp4462
g62
(dp4463
g70
I5
ssg71
g4457
sg64
(lp4464
g3258
asbasbasbag57
(g73
g59
NtRp4465
(dp4466
g62
(dp4467
sg71
g3385
sg64
(lp4468
g57
(g78
g59
NtRp4469
(dp4470
g62
(dp4471
g82
g83
ssg71
g4465
sg64
(lp4472
S'status'
p4473
asbag57
(g78
g59
NtRp4474
(dp4475
g62
(dp4476
g89
g90
ssg71
g4465
sg64
(lp4477
S':'
asbag57
(g78
g59
NtRp4478
(dp4479
g62
(dp4480
sg71
g4465
sg64
(lp4481
g57
(g58
g59
NtRp4482
(dp4483
g62
(dp4484
g70
I5
ssg71
g4478
sg64
(lp4485
S'200'
p4486
asbasbasbag57
(g73
g59
NtRp4487
(dp4488
g62
(dp4489
sg71
g3385
sg64
(lp4490
g57
(g78
g59
NtRp4491
(dp4492
g62
(dp4493
g82
g83
ssg71
g4487
sg64
(lp4494
S'subtitle'
p4495
asbag57
(g78
g59
NtRp4496
(dp4497
g62
(dp4498
g89
g90
ssg71
g4487
sg64
(lp4499
S':'
asbag57
(g78
g59
NtRp4500
(dp4501
g62
(dp4502
sg71
g4487
sg64
(lp4503
g57
(g58
g59
NtRp4504
(dp4505
g62
(dp4506
g70
I5
ssg71
g4500
sg64
(lp4507
g4005
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4508
asbasbasbag57
(g73
g59
NtRp4509
(dp4510
g62
(dp4511
sg71
g3385
sg64
(lp4512
g57
(g78
g59
NtRp4513
(dp4514
g62
(dp4515
g82
g83
ssg71
g4509
sg64
(lp4516
S'title'
p4517
asbag57
(g78
g59
NtRp4518
(dp4519
g62
(dp4520
g89
g90
ssg71
g4509
sg64
(lp4521
S':'
asbag57
(g78
g59
NtRp4522
(dp4523
g62
(dp4524
sg71
g4509
sg64
(lp4525
g57
(g58
g59
NtRp4526
(dp4527
g62
(dp4528
g70
I5
ssg71
g4522
sg64
(lp4529
g122
asbasbasbag57
(g73
g59
NtRp4530
(dp4531
g62
(dp4532
sg71
g3385
sg64
(lp4533
g57
(g78
g59
NtRp4534
(dp4535
g62
(dp4536
g82
g83
ssg71
g4530
sg64
(lp4537
S'view'
p4538
asbag57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
g89
g90
ssg71
g4530
sg64
(lp4542
S':'
asbag57
(g78
g59
NtRp4543
(dp4544
g62
(dp4545
sg71
g4530
sg64
(lp4546
g57
(g58
g59
NtRp4547
(dp4548
g62
(dp4549
g70
I5
ssg71
g4543
sg64
(lp4550
S'default/list_all_dev_projects.html'
p4551
asbasbasbasbasbsS'locals'
p4552
(dp4553
ssS'traceback'
p4554
S'Traceback (most recent call last):\n  File "/home/anil/Downloads/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1148, in <module>\n  File "/home/anil/Downloads/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 292, in list_all_dev_projects\n    db.sample.experimentalist.default=auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p4555
s.