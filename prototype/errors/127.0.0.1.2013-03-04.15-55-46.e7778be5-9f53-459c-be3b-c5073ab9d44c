(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute 'id'"
p3
sS'layer'
p4
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.approval_status==1)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.approval_status==1)(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    dev_projects = db(db.project.project_status == 0)(db.project.project_coordinator==db.auth_user.id).select(db.project.ALL,db.auth_user.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n   # if \'sample\' in request.args and \'new\' in request.args:\n   #      count = db(db.sample.experiment==request.args[-3]).count()\n   #      if(count>0):\n   #        db.sample.replica.default = \'replicate\'\n   #       # db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n   #      else:\n   #        db.sample.replica.default = \'Original\'\n   #        db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy\',_href=URL("default","replicate",args=request.args[:]+[row.id])),\\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'aliqout\',_href=URL("default","duplicate",args=request.args[:]+["aliqout"]+[row.id])), \\\n           lambda row: A(\'biosource_\'+tes(row.id,\'biosource\'),_href=URL("default","router",args=getargs(row.id,args,"biosource"))), \\\n           lambda row: A(\'PGC_\'+tes(row.id,\'plant_growth_condition\'),_href=URL("default","router",args=getargs(row.id,args,"plant_growth_condition"))), \\\n           lambda row: A(\'treatment_\'+tes(row.id,\'treatments\'),_href=URL("default","router",args=getargs(row.id,args,"treatments"))), \\\n           lambda row: A(\'harvest_\'+tes(row.id,\'harvests\'),_href=URL("default","router",args=getargs(row.id,args,"harvests"))), \\\n           lambda row: A(\'Ext_\'+tes(row.id,\'extraction_preparation\'),_href=URL("default","router",args=getargs(row.id,args,"extraction_preparation"))), \\\n           lambda row: A(\'GC_\'+tes(row.id,\'gas_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"gas_chromatography"))), \\\n           lambda row: A(\'LC_\'+tes(row.id,\'liquid_chromatography\'),_href=URL("default","router",args=getargs(row.id,args,"liquid_chromatography"))), \\\n           lambda row: A(\'MS_\'+tes(row.id,\'mass_spectroscopy\'),_href=URL("default","router",args=getargs(row.id,args,"mass_spectroscopy"))), \\\n           lambda row: A(\'spectrophotometry_\'+tes(row.id,\'spectrophotometry\'),_href=URL("default","router",args=getargs(row.id,args,"spectrophotometry")))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter()\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a,table):\n    if db(db[table].sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args,table):\n    row = db(db[table].sample_name==a).select(db[table].id).first()\n    if row:\n        args=args+[table+".sample_name",a,"edit",table,row.id]\n        return args\n    else:\n        args = args+[table+".sample_name",a,"new",table]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \ndef duplicate():\n    if True:\n        rec = db(db.sample.id==request.args[-1]).select(db.sample.ALL).first()\n        rec.update(parent=rec.id,replica=str(request.args[-2]))\n        in_row = db.sample.insert(**db.sample._filter_fields(rec))\n        for tb in [\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\']:\n            row = db(db[tb].sample_name==request.args[-1]).select(db[tb].ALL).first()\n            if row:\n                row.update(sample_name = in_row.id)\n                db[tb].insert(**db[tb]._filter_fields(row)) \n        redirect(URL(\'list_all_dev_projects\',args=request.args[0:-2]))\n    redirect(URL(\'list_all_dev_projects\',args=[]))\n\n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args and \'new\' in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]      \n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   elif \'clear\' in request.args: \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.AttributeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.AttributeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.AttributeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.AttributeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.AttributeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.AttributeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.AttributeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.AttributeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.AttributeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.AttributeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.AttributeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.AttributeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.AttributeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.AttributeError object>"
p41
sS'args'
p42
S'("\'NoneType\' object has no attribute \'id\'",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.AttributeError object>'
p47
sS'__doc__'
p48
S"'Attribute not found.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.AttributeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"'NoneType' object has no attribute 'id'"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'view'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'project'
p185
asbasbasbag57
(g73
g59
NtRp186
(dp187
g62
(dp188
sg71
g143
sg64
(lp189
g57
(g78
g59
NtRp190
(dp191
g62
(dp192
sg71
g186
sg64
(lp193
g57
(g58
g59
NtRp194
(dp195
g62
(dp196
g70
I4
ssg71
g190
sg64
(lp197
S'5'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g67
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
g82
g83
ssg71
g198
sg64
(lp205
S'body'
p206
asbag57
(g78
g59
NtRp207
(dp208
g62
(dp209
g89
g90
ssg71
g198
sg64
(lp210
S':'
asbag57
(g78
g59
NtRp211
(dp212
g62
(dp213
sg71
g198
sg64
(lp214
g57
(g58
g59
NtRp215
(dp216
g62
(dp217
g70
I5
ssg71
g211
sg64
(lp218
S'<cStringIO.StringO object at 0xb0471140>'
p219
asbasbasbag57
(g73
g59
NtRp220
(dp221
g62
(dp222
sg71
g67
sg64
(lp223
g57
(g78
g59
NtRp224
(dp225
g62
(dp226
g82
g83
ssg71
g220
sg64
(lp227
S'cid'
p228
asbag57
(g78
g59
NtRp229
(dp230
g62
(dp231
g89
g90
ssg71
g220
sg64
(lp232
S':'
asbag57
(g78
g59
NtRp233
(dp234
g62
(dp235
sg71
g220
sg64
(lp236
g57
(g58
g59
NtRp237
(dp238
g62
(dp239
g70
I5
ssg71
g233
sg64
(lp240
S'None'
p241
asbasbasbag57
(g73
g59
NtRp242
(dp243
g62
(dp244
sg71
g67
sg64
(lp245
g57
(g78
g59
NtRp246
(dp247
g62
(dp248
g82
g83
ssg71
g242
sg64
(lp249
S'client'
p250
asbag57
(g78
g59
NtRp251
(dp252
g62
(dp253
g89
g90
ssg71
g242
sg64
(lp254
S':'
asbag57
(g78
g59
NtRp255
(dp256
g62
(dp257
sg71
g242
sg64
(lp258
g57
(g58
g59
NtRp259
(dp260
g62
(dp261
g70
I5
ssg71
g255
sg64
(lp262
S'127.0.0.1'
p263
asbasbasbag57
(g73
g59
NtRp264
(dp265
g62
(dp266
sg71
g67
sg64
(lp267
g57
(g78
g59
NtRp268
(dp269
g62
(dp270
g82
g83
ssg71
g264
sg64
(lp271
S'controller'
p272
asbag57
(g78
g59
NtRp273
(dp274
g62
(dp275
g89
g90
ssg71
g264
sg64
(lp276
S':'
asbag57
(g78
g59
NtRp277
(dp278
g62
(dp279
sg71
g264
sg64
(lp280
g57
(g58
g59
NtRp281
(dp282
g62
(dp283
g70
I5
ssg71
g277
sg64
(lp284
S'default'
p285
asbasbasbag57
(g73
g59
NtRp286
(dp287
g62
(dp288
sg71
g67
sg64
(lp289
g57
(g78
g59
NtRp290
(dp291
g62
(dp292
g82
g83
ssg71
g286
sg64
(lp293
S'cookies'
p294
asbag57
(g78
g59
NtRp295
(dp296
g62
(dp297
g89
g90
ssg71
g286
sg64
(lp298
S':'
asbag57
(g78
g59
NtRp299
(dp300
g62
(dp301
sg71
g286
sg64
(lp302
g57
(g58
g59
NtRp303
(dp304
g62
(dp305
g70
I5
ssg71
g299
sg64
(lp306
g57
(g66
g59
NtRp307
(dp308
g62
(dp309
g70
I4
ssg71
Nsg64
(lp310
g57
(g73
g59
NtRp311
(dp312
g62
(dp313
sg71
g307
sg64
(lp314
g57
(g78
g59
NtRp315
(dp316
g62
(dp317
g82
g83
ssg71
g311
sg64
(lp318
S'session_id_admin'
p319
asbag57
(g78
g59
NtRp320
(dp321
g62
(dp322
g89
g90
ssg71
g311
sg64
(lp323
S':'
asbag57
(g78
g59
NtRp324
(dp325
g62
(dp326
sg71
g311
sg64
(lp327
g57
(g58
g59
NtRp328
(dp329
g62
(dp330
g70
I4
ssg71
g324
sg64
(lp331
S'127.0.0.1-139d73ee-0525-46bf-aeb6-deeffe5cb9b3'
p332
ag57
(g66
g59
NtRp333
(dp334
g62
(dp335
g70
I3
ssg71
Nsg64
(lp336
g57
(g73
g59
NtRp337
(dp338
g62
(dp339
sg71
g333
sg64
(lp340
g57
(g78
g59
NtRp341
(dp342
g62
(dp343
g82
g83
ssg71
g337
sg64
(lp344
S'comment'
p345
asbag57
(g78
g59
NtRp346
(dp347
g62
(dp348
g89
g90
ssg71
g337
sg64
(lp349
S':'
asbag57
(g78
g59
NtRp350
(dp351
g62
(dp352
sg71
g337
sg64
(lp353
g57
(g58
g59
NtRp354
(dp355
g62
(dp356
g70
I3
ssg71
g350
sg64
(lp357
S''
asbasbasbag57
(g73
g59
NtRp358
(dp359
g62
(dp360
sg71
g333
sg64
(lp361
g57
(g78
g59
NtRp362
(dp363
g62
(dp364
g82
g83
ssg71
g358
sg64
(lp365
S'domain'
p366
asbag57
(g78
g59
NtRp367
(dp368
g62
(dp369
g89
g90
ssg71
g358
sg64
(lp370
S':'
asbag57
(g78
g59
NtRp371
(dp372
g62
(dp373
sg71
g358
sg64
(lp374
g57
(g58
g59
NtRp375
(dp376
g62
(dp377
g70
I3
ssg71
g371
sg64
(lp378
S''
asbasbasbag57
(g73
g59
NtRp379
(dp380
g62
(dp381
sg71
g333
sg64
(lp382
g57
(g78
g59
NtRp383
(dp384
g62
(dp385
g82
g83
ssg71
g379
sg64
(lp386
S'expires'
p387
asbag57
(g78
g59
NtRp388
(dp389
g62
(dp390
g89
g90
ssg71
g379
sg64
(lp391
S':'
asbag57
(g78
g59
NtRp392
(dp393
g62
(dp394
sg71
g379
sg64
(lp395
g57
(g58
g59
NtRp396
(dp397
g62
(dp398
g70
I3
ssg71
g392
sg64
(lp399
S''
asbasbasbag57
(g73
g59
NtRp400
(dp401
g62
(dp402
sg71
g333
sg64
(lp403
g57
(g78
g59
NtRp404
(dp405
g62
(dp406
g82
g83
ssg71
g400
sg64
(lp407
S'httponly'
p408
asbag57
(g78
g59
NtRp409
(dp410
g62
(dp411
g89
g90
ssg71
g400
sg64
(lp412
S':'
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
sg71
g400
sg64
(lp416
g57
(g58
g59
NtRp417
(dp418
g62
(dp419
g70
I3
ssg71
g413
sg64
(lp420
S''
asbasbasbag57
(g73
g59
NtRp421
(dp422
g62
(dp423
sg71
g333
sg64
(lp424
g57
(g78
g59
NtRp425
(dp426
g62
(dp427
g82
g83
ssg71
g421
sg64
(lp428
S'max-age'
p429
asbag57
(g78
g59
NtRp430
(dp431
g62
(dp432
g89
g90
ssg71
g421
sg64
(lp433
S':'
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
sg71
g421
sg64
(lp437
g57
(g58
g59
NtRp438
(dp439
g62
(dp440
g70
I3
ssg71
g434
sg64
(lp441
S''
asbasbasbag57
(g73
g59
NtRp442
(dp443
g62
(dp444
sg71
g333
sg64
(lp445
g57
(g78
g59
NtRp446
(dp447
g62
(dp448
g82
g83
ssg71
g442
sg64
(lp449
S'path'
p450
asbag57
(g78
g59
NtRp451
(dp452
g62
(dp453
g89
g90
ssg71
g442
sg64
(lp454
S':'
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
sg71
g442
sg64
(lp458
g57
(g58
g59
NtRp459
(dp460
g62
(dp461
g70
I3
ssg71
g455
sg64
(lp462
S''
asbasbasbag57
(g73
g59
NtRp463
(dp464
g62
(dp465
sg71
g333
sg64
(lp466
g57
(g78
g59
NtRp467
(dp468
g62
(dp469
g82
g83
ssg71
g463
sg64
(lp470
S'secure'
p471
asbag57
(g78
g59
NtRp472
(dp473
g62
(dp474
g89
g90
ssg71
g463
sg64
(lp475
S':'
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
sg71
g463
sg64
(lp479
g57
(g58
g59
NtRp480
(dp481
g62
(dp482
g70
I3
ssg71
g476
sg64
(lp483
S''
asbasbasbag57
(g73
g59
NtRp484
(dp485
g62
(dp486
sg71
g333
sg64
(lp487
g57
(g78
g59
NtRp488
(dp489
g62
(dp490
g82
g83
ssg71
g484
sg64
(lp491
S'version'
p492
asbag57
(g78
g59
NtRp493
(dp494
g62
(dp495
g89
g90
ssg71
g484
sg64
(lp496
S':'
asbag57
(g78
g59
NtRp497
(dp498
g62
(dp499
sg71
g484
sg64
(lp500
g57
(g58
g59
NtRp501
(dp502
g62
(dp503
g70
I3
ssg71
g497
sg64
(lp504
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp505
(dp506
g62
(dp507
sg71
g307
sg64
(lp508
g57
(g78
g59
NtRp509
(dp510
g62
(dp511
g82
g83
ssg71
g505
sg64
(lp512
S'session_id_dev_bootstrap_ch'
p513
asbag57
(g78
g59
NtRp514
(dp515
g62
(dp516
g89
g90
ssg71
g505
sg64
(lp517
S':'
asbag57
(g78
g59
NtRp518
(dp519
g62
(dp520
sg71
g505
sg64
(lp521
g57
(g58
g59
NtRp522
(dp523
g62
(dp524
g70
I4
ssg71
g518
sg64
(lp525
S'127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a'
p526
ag57
(g66
g59
NtRp527
(dp528
g62
(dp529
g70
I3
ssg71
Nsg64
(lp530
g57
(g73
g59
NtRp531
(dp532
g62
(dp533
sg71
g527
sg64
(lp534
g57
(g78
g59
NtRp535
(dp536
g62
(dp537
g82
g83
ssg71
g531
sg64
(lp538
g345
asbag57
(g78
g59
NtRp539
(dp540
g62
(dp541
g89
g90
ssg71
g531
sg64
(lp542
S':'
asbag57
(g78
g59
NtRp543
(dp544
g62
(dp545
sg71
g531
sg64
(lp546
g57
(g58
g59
NtRp547
(dp548
g62
(dp549
g70
I3
ssg71
g543
sg64
(lp550
S''
asbasbasbag57
(g73
g59
NtRp551
(dp552
g62
(dp553
sg71
g527
sg64
(lp554
g57
(g78
g59
NtRp555
(dp556
g62
(dp557
g82
g83
ssg71
g551
sg64
(lp558
g366
asbag57
(g78
g59
NtRp559
(dp560
g62
(dp561
g89
g90
ssg71
g551
sg64
(lp562
S':'
asbag57
(g78
g59
NtRp563
(dp564
g62
(dp565
sg71
g551
sg64
(lp566
g57
(g58
g59
NtRp567
(dp568
g62
(dp569
g70
I3
ssg71
g563
sg64
(lp570
S''
asbasbasbag57
(g73
g59
NtRp571
(dp572
g62
(dp573
sg71
g527
sg64
(lp574
g57
(g78
g59
NtRp575
(dp576
g62
(dp577
g82
g83
ssg71
g571
sg64
(lp578
g387
asbag57
(g78
g59
NtRp579
(dp580
g62
(dp581
g89
g90
ssg71
g571
sg64
(lp582
S':'
asbag57
(g78
g59
NtRp583
(dp584
g62
(dp585
sg71
g571
sg64
(lp586
g57
(g58
g59
NtRp587
(dp588
g62
(dp589
g70
I3
ssg71
g583
sg64
(lp590
S''
asbasbasbag57
(g73
g59
NtRp591
(dp592
g62
(dp593
sg71
g527
sg64
(lp594
g57
(g78
g59
NtRp595
(dp596
g62
(dp597
g82
g83
ssg71
g591
sg64
(lp598
g408
asbag57
(g78
g59
NtRp599
(dp600
g62
(dp601
g89
g90
ssg71
g591
sg64
(lp602
S':'
asbag57
(g78
g59
NtRp603
(dp604
g62
(dp605
sg71
g591
sg64
(lp606
g57
(g58
g59
NtRp607
(dp608
g62
(dp609
g70
I3
ssg71
g603
sg64
(lp610
S''
asbasbasbag57
(g73
g59
NtRp611
(dp612
g62
(dp613
sg71
g527
sg64
(lp614
g57
(g78
g59
NtRp615
(dp616
g62
(dp617
g82
g83
ssg71
g611
sg64
(lp618
g429
asbag57
(g78
g59
NtRp619
(dp620
g62
(dp621
g89
g90
ssg71
g611
sg64
(lp622
S':'
asbag57
(g78
g59
NtRp623
(dp624
g62
(dp625
sg71
g611
sg64
(lp626
g57
(g58
g59
NtRp627
(dp628
g62
(dp629
g70
I3
ssg71
g623
sg64
(lp630
S''
asbasbasbag57
(g73
g59
NtRp631
(dp632
g62
(dp633
sg71
g527
sg64
(lp634
g57
(g78
g59
NtRp635
(dp636
g62
(dp637
g82
g83
ssg71
g631
sg64
(lp638
g450
asbag57
(g78
g59
NtRp639
(dp640
g62
(dp641
g89
g90
ssg71
g631
sg64
(lp642
S':'
asbag57
(g78
g59
NtRp643
(dp644
g62
(dp645
sg71
g631
sg64
(lp646
g57
(g58
g59
NtRp647
(dp648
g62
(dp649
g70
I3
ssg71
g643
sg64
(lp650
S''
asbasbasbag57
(g73
g59
NtRp651
(dp652
g62
(dp653
sg71
g527
sg64
(lp654
g57
(g78
g59
NtRp655
(dp656
g62
(dp657
g82
g83
ssg71
g651
sg64
(lp658
g471
asbag57
(g78
g59
NtRp659
(dp660
g62
(dp661
g89
g90
ssg71
g651
sg64
(lp662
S':'
asbag57
(g78
g59
NtRp663
(dp664
g62
(dp665
sg71
g651
sg64
(lp666
g57
(g58
g59
NtRp667
(dp668
g62
(dp669
g70
I3
ssg71
g663
sg64
(lp670
S''
asbasbasbag57
(g73
g59
NtRp671
(dp672
g62
(dp673
sg71
g527
sg64
(lp674
g57
(g78
g59
NtRp675
(dp676
g62
(dp677
g82
g83
ssg71
g671
sg64
(lp678
g492
asbag57
(g78
g59
NtRp679
(dp680
g62
(dp681
g89
g90
ssg71
g671
sg64
(lp682
S':'
asbag57
(g78
g59
NtRp683
(dp684
g62
(dp685
sg71
g671
sg64
(lp686
g57
(g58
g59
NtRp687
(dp688
g62
(dp689
g70
I3
ssg71
g683
sg64
(lp690
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp691
(dp692
g62
(dp693
sg71
g307
sg64
(lp694
g57
(g78
g59
NtRp695
(dp696
g62
(dp697
g82
g83
ssg71
g691
sg64
(lp698
S'session_id_welcome'
p699
asbag57
(g78
g59
NtRp700
(dp701
g62
(dp702
g89
g90
ssg71
g691
sg64
(lp703
S':'
asbag57
(g78
g59
NtRp704
(dp705
g62
(dp706
sg71
g691
sg64
(lp707
g57
(g58
g59
NtRp708
(dp709
g62
(dp710
g70
I4
ssg71
g704
sg64
(lp711
S'127.0.0.1-73acd783-e52e-42fb-8ab7-4f6570d093df'
p712
ag57
(g66
g59
NtRp713
(dp714
g62
(dp715
g70
I3
ssg71
Nsg64
(lp716
g57
(g73
g59
NtRp717
(dp718
g62
(dp719
sg71
g713
sg64
(lp720
g57
(g78
g59
NtRp721
(dp722
g62
(dp723
g82
g83
ssg71
g717
sg64
(lp724
g345
asbag57
(g78
g59
NtRp725
(dp726
g62
(dp727
g89
g90
ssg71
g717
sg64
(lp728
S':'
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
sg71
g717
sg64
(lp732
g57
(g58
g59
NtRp733
(dp734
g62
(dp735
g70
I3
ssg71
g729
sg64
(lp736
S''
asbasbasbag57
(g73
g59
NtRp737
(dp738
g62
(dp739
sg71
g713
sg64
(lp740
g57
(g78
g59
NtRp741
(dp742
g62
(dp743
g82
g83
ssg71
g737
sg64
(lp744
g366
asbag57
(g78
g59
NtRp745
(dp746
g62
(dp747
g89
g90
ssg71
g737
sg64
(lp748
S':'
asbag57
(g78
g59
NtRp749
(dp750
g62
(dp751
sg71
g737
sg64
(lp752
g57
(g58
g59
NtRp753
(dp754
g62
(dp755
g70
I3
ssg71
g749
sg64
(lp756
S''
asbasbasbag57
(g73
g59
NtRp757
(dp758
g62
(dp759
sg71
g713
sg64
(lp760
g57
(g78
g59
NtRp761
(dp762
g62
(dp763
g82
g83
ssg71
g757
sg64
(lp764
g387
asbag57
(g78
g59
NtRp765
(dp766
g62
(dp767
g89
g90
ssg71
g757
sg64
(lp768
S':'
asbag57
(g78
g59
NtRp769
(dp770
g62
(dp771
sg71
g757
sg64
(lp772
g57
(g58
g59
NtRp773
(dp774
g62
(dp775
g70
I3
ssg71
g769
sg64
(lp776
S''
asbasbasbag57
(g73
g59
NtRp777
(dp778
g62
(dp779
sg71
g713
sg64
(lp780
g57
(g78
g59
NtRp781
(dp782
g62
(dp783
g82
g83
ssg71
g777
sg64
(lp784
g408
asbag57
(g78
g59
NtRp785
(dp786
g62
(dp787
g89
g90
ssg71
g777
sg64
(lp788
S':'
asbag57
(g78
g59
NtRp789
(dp790
g62
(dp791
sg71
g777
sg64
(lp792
g57
(g58
g59
NtRp793
(dp794
g62
(dp795
g70
I3
ssg71
g789
sg64
(lp796
S''
asbasbasbag57
(g73
g59
NtRp797
(dp798
g62
(dp799
sg71
g713
sg64
(lp800
g57
(g78
g59
NtRp801
(dp802
g62
(dp803
g82
g83
ssg71
g797
sg64
(lp804
g429
asbag57
(g78
g59
NtRp805
(dp806
g62
(dp807
g89
g90
ssg71
g797
sg64
(lp808
S':'
asbag57
(g78
g59
NtRp809
(dp810
g62
(dp811
sg71
g797
sg64
(lp812
g57
(g58
g59
NtRp813
(dp814
g62
(dp815
g70
I3
ssg71
g809
sg64
(lp816
S''
asbasbasbag57
(g73
g59
NtRp817
(dp818
g62
(dp819
sg71
g713
sg64
(lp820
g57
(g78
g59
NtRp821
(dp822
g62
(dp823
g82
g83
ssg71
g817
sg64
(lp824
g450
asbag57
(g78
g59
NtRp825
(dp826
g62
(dp827
g89
g90
ssg71
g817
sg64
(lp828
S':'
asbag57
(g78
g59
NtRp829
(dp830
g62
(dp831
sg71
g817
sg64
(lp832
g57
(g58
g59
NtRp833
(dp834
g62
(dp835
g70
I3
ssg71
g829
sg64
(lp836
S''
asbasbasbag57
(g73
g59
NtRp837
(dp838
g62
(dp839
sg71
g713
sg64
(lp840
g57
(g78
g59
NtRp841
(dp842
g62
(dp843
g82
g83
ssg71
g837
sg64
(lp844
g471
asbag57
(g78
g59
NtRp845
(dp846
g62
(dp847
g89
g90
ssg71
g837
sg64
(lp848
S':'
asbag57
(g78
g59
NtRp849
(dp850
g62
(dp851
sg71
g837
sg64
(lp852
g57
(g58
g59
NtRp853
(dp854
g62
(dp855
g70
I3
ssg71
g849
sg64
(lp856
S''
asbasbasbag57
(g73
g59
NtRp857
(dp858
g62
(dp859
sg71
g713
sg64
(lp860
g57
(g78
g59
NtRp861
(dp862
g62
(dp863
g82
g83
ssg71
g857
sg64
(lp864
g492
asbag57
(g78
g59
NtRp865
(dp866
g62
(dp867
g89
g90
ssg71
g857
sg64
(lp868
S':'
asbag57
(g78
g59
NtRp869
(dp870
g62
(dp871
sg71
g857
sg64
(lp872
g57
(g58
g59
NtRp873
(dp874
g62
(dp875
g70
I3
ssg71
g869
sg64
(lp876
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp877
(dp878
g62
(dp879
sg71
g67
sg64
(lp880
g57
(g78
g59
NtRp881
(dp882
g62
(dp883
g82
g83
ssg71
g877
sg64
(lp884
S'env'
p885
asbag57
(g78
g59
NtRp886
(dp887
g62
(dp888
g89
g90
ssg71
g877
sg64
(lp889
S':'
asbag57
(g78
g59
NtRp890
(dp891
g62
(dp892
sg71
g877
sg64
(lp893
g57
(g58
g59
NtRp894
(dp895
g62
(dp896
g70
I5
ssg71
g890
sg64
(lp897
g57
(g66
g59
NtRp898
(dp899
g62
(dp900
g70
I4
ssg71
Nsg64
(lp901
g57
(g73
g59
NtRp902
(dp903
g62
(dp904
sg71
g898
sg64
(lp905
g57
(g78
g59
NtRp906
(dp907
g62
(dp908
g82
g83
ssg71
g902
sg64
(lp909
S'app_folders'
p910
asbag57
(g78
g59
NtRp911
(dp912
g62
(dp913
g89
g90
ssg71
g902
sg64
(lp914
S':'
asbag57
(g78
g59
NtRp915
(dp916
g62
(dp917
sg71
g902
sg64
(lp918
g57
(g58
g59
NtRp919
(dp920
g62
(dp921
g70
I4
ssg71
g915
sg64
(lp922
S"set(['/home/anil/Downloads/web2py/applications/welcome/', '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p923
asbasbasbag57
(g73
g59
NtRp924
(dp925
g62
(dp926
sg71
g898
sg64
(lp927
g57
(g78
g59
NtRp928
(dp929
g62
(dp930
g82
g83
ssg71
g924
sg64
(lp931
S'applications_parent'
p932
asbag57
(g78
g59
NtRp933
(dp934
g62
(dp935
g89
g90
ssg71
g924
sg64
(lp936
S':'
asbag57
(g78
g59
NtRp937
(dp938
g62
(dp939
sg71
g924
sg64
(lp940
g57
(g58
g59
NtRp941
(dp942
g62
(dp943
g70
I4
ssg71
g937
sg64
(lp944
S'/home/anil/Downloads/web2py'
p945
asbasbasbag57
(g73
g59
NtRp946
(dp947
g62
(dp948
sg71
g898
sg64
(lp949
g57
(g78
g59
NtRp950
(dp951
g62
(dp952
g82
g83
ssg71
g946
sg64
(lp953
S'cmd_args'
p954
asbag57
(g78
g59
NtRp955
(dp956
g62
(dp957
g89
g90
ssg71
g946
sg64
(lp958
S':'
asbag57
(g78
g59
NtRp959
(dp960
g62
(dp961
sg71
g946
sg64
(lp962
g57
(g58
g59
NtRp963
(dp964
g62
(dp965
g70
I4
ssg71
g959
sg64
(lp966
g57
(g66
g59
NtRp967
(dp968
g62
(dp969
g70
I3
ssg71
Nsg64
(lp970
sbasbasbasbag57
(g73
g59
NtRp971
(dp972
g62
(dp973
sg71
g898
sg64
(lp974
g57
(g78
g59
NtRp975
(dp976
g62
(dp977
g82
g83
ssg71
g971
sg64
(lp978
S'cmd_options'
p979
asbag57
(g78
g59
NtRp980
(dp981
g62
(dp982
g89
g90
ssg71
g971
sg64
(lp983
S':'
asbag57
(g78
g59
NtRp984
(dp985
g62
(dp986
sg71
g971
sg64
(lp987
g57
(g58
g59
NtRp988
(dp989
g62
(dp990
g70
I4
ssg71
g984
sg64
(lp991
S"<Values at 0x8936a4c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p992
asbasbasbag57
(g73
g59
NtRp993
(dp994
g62
(dp995
sg71
g898
sg64
(lp996
g57
(g78
g59
NtRp997
(dp998
g62
(dp999
g82
g83
ssg71
g993
sg64
(lp1000
S'db_sessions'
p1001
asbag57
(g78
g59
NtRp1002
(dp1003
g62
(dp1004
g89
g90
ssg71
g993
sg64
(lp1005
S':'
asbag57
(g78
g59
NtRp1006
(dp1007
g62
(dp1008
sg71
g993
sg64
(lp1009
g57
(g58
g59
NtRp1010
(dp1011
g62
(dp1012
g70
I4
ssg71
g1006
sg64
(lp1013
S'set([])'
p1014
asbasbasbag57
(g73
g59
NtRp1015
(dp1016
g62
(dp1017
sg71
g898
sg64
(lp1018
g57
(g78
g59
NtRp1019
(dp1020
g62
(dp1021
g82
g83
ssg71
g1015
sg64
(lp1022
S'debugging'
p1023
asbag57
(g78
g59
NtRp1024
(dp1025
g62
(dp1026
g89
g90
ssg71
g1015
sg64
(lp1027
S':'
asbag57
(g78
g59
NtRp1028
(dp1029
g62
(dp1030
sg71
g1015
sg64
(lp1031
g57
(g58
g59
NtRp1032
(dp1033
g62
(dp1034
g70
I4
ssg71
g1028
sg64
(lp1035
g100
asbasbasbag57
(g73
g59
NtRp1036
(dp1037
g62
(dp1038
sg71
g898
sg64
(lp1039
g57
(g78
g59
NtRp1040
(dp1041
g62
(dp1042
g82
g83
ssg71
g1036
sg64
(lp1043
S'gluon_parent'
p1044
asbag57
(g78
g59
NtRp1045
(dp1046
g62
(dp1047
g89
g90
ssg71
g1036
sg64
(lp1048
S':'
asbag57
(g78
g59
NtRp1049
(dp1050
g62
(dp1051
sg71
g1036
sg64
(lp1052
g57
(g58
g59
NtRp1053
(dp1054
g62
(dp1055
g70
I4
ssg71
g1049
sg64
(lp1056
S'/home/anil/Downloads/web2py'
p1057
asbasbasbag57
(g73
g59
NtRp1058
(dp1059
g62
(dp1060
sg71
g898
sg64
(lp1061
g57
(g78
g59
NtRp1062
(dp1063
g62
(dp1064
g82
g83
ssg71
g1058
sg64
(lp1065
S'http_accept'
p1066
asbag57
(g78
g59
NtRp1067
(dp1068
g62
(dp1069
g89
g90
ssg71
g1058
sg64
(lp1070
S':'
asbag57
(g78
g59
NtRp1071
(dp1072
g62
(dp1073
sg71
g1058
sg64
(lp1074
g57
(g58
g59
NtRp1075
(dp1076
g62
(dp1077
g70
I4
ssg71
g1071
sg64
(lp1078
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p1079
asbasbasbag57
(g73
g59
NtRp1080
(dp1081
g62
(dp1082
sg71
g898
sg64
(lp1083
g57
(g78
g59
NtRp1084
(dp1085
g62
(dp1086
g82
g83
ssg71
g1080
sg64
(lp1087
S'http_accept_charset'
p1088
asbag57
(g78
g59
NtRp1089
(dp1090
g62
(dp1091
g89
g90
ssg71
g1080
sg64
(lp1092
S':'
asbag57
(g78
g59
NtRp1093
(dp1094
g62
(dp1095
sg71
g1080
sg64
(lp1096
g57
(g58
g59
NtRp1097
(dp1098
g62
(dp1099
g70
I4
ssg71
g1093
sg64
(lp1100
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p1101
asbasbasbag57
(g73
g59
NtRp1102
(dp1103
g62
(dp1104
sg71
g898
sg64
(lp1105
g57
(g78
g59
NtRp1106
(dp1107
g62
(dp1108
g82
g83
ssg71
g1102
sg64
(lp1109
S'http_accept_encoding'
p1110
asbag57
(g78
g59
NtRp1111
(dp1112
g62
(dp1113
g89
g90
ssg71
g1102
sg64
(lp1114
S':'
asbag57
(g78
g59
NtRp1115
(dp1116
g62
(dp1117
sg71
g1102
sg64
(lp1118
g57
(g58
g59
NtRp1119
(dp1120
g62
(dp1121
g70
I4
ssg71
g1115
sg64
(lp1122
S'gzip,deflate,sdch'
p1123
asbasbasbag57
(g73
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g898
sg64
(lp1127
g57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
g82
g83
ssg71
g1124
sg64
(lp1131
S'http_accept_language'
p1132
asbag57
(g78
g59
NtRp1133
(dp1134
g62
(dp1135
g89
g90
ssg71
g1124
sg64
(lp1136
S':'
asbag57
(g78
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g1124
sg64
(lp1140
g57
(g58
g59
NtRp1141
(dp1142
g62
(dp1143
g70
I4
ssg71
g1137
sg64
(lp1144
S'en-US,en;q=0.8'
p1145
asbasbasbag57
(g73
g59
NtRp1146
(dp1147
g62
(dp1148
sg71
g898
sg64
(lp1149
g57
(g78
g59
NtRp1150
(dp1151
g62
(dp1152
g82
g83
ssg71
g1146
sg64
(lp1153
S'http_connection'
p1154
asbag57
(g78
g59
NtRp1155
(dp1156
g62
(dp1157
g89
g90
ssg71
g1146
sg64
(lp1158
S':'
asbag57
(g78
g59
NtRp1159
(dp1160
g62
(dp1161
sg71
g1146
sg64
(lp1162
g57
(g58
g59
NtRp1163
(dp1164
g62
(dp1165
g70
I4
ssg71
g1159
sg64
(lp1166
S'keep-alive'
p1167
asbasbasbag57
(g73
g59
NtRp1168
(dp1169
g62
(dp1170
sg71
g898
sg64
(lp1171
g57
(g78
g59
NtRp1172
(dp1173
g62
(dp1174
g82
g83
ssg71
g1168
sg64
(lp1175
S'http_cookie'
p1176
asbag57
(g78
g59
NtRp1177
(dp1178
g62
(dp1179
g89
g90
ssg71
g1168
sg64
(lp1180
S':'
asbag57
(g78
g59
NtRp1181
(dp1182
g62
(dp1183
sg71
g1168
sg64
(lp1184
g57
(g58
g59
NtRp1185
(dp1186
g62
(dp1187
g70
I4
ssg71
g1181
sg64
(lp1188
S'session_id_welcome=127.0.0.1-73acd783-e52e-42fb-8ab7-4f6570d093df; session_id_dev_bootstrap_ch=127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a; session_id_admin=127.0.0.1-139d73ee-0525-46bf-aeb6-deeffe5cb9b3'
p1189
asbasbasbag57
(g73
g59
NtRp1190
(dp1191
g62
(dp1192
sg71
g898
sg64
(lp1193
g57
(g78
g59
NtRp1194
(dp1195
g62
(dp1196
g82
g83
ssg71
g1190
sg64
(lp1197
S'http_host'
p1198
asbag57
(g78
g59
NtRp1199
(dp1200
g62
(dp1201
g89
g90
ssg71
g1190
sg64
(lp1202
S':'
asbag57
(g78
g59
NtRp1203
(dp1204
g62
(dp1205
sg71
g1190
sg64
(lp1206
g57
(g58
g59
NtRp1207
(dp1208
g62
(dp1209
g70
I4
ssg71
g1203
sg64
(lp1210
S'127.0.0.1:8000'
p1211
asbasbasbag57
(g73
g59
NtRp1212
(dp1213
g62
(dp1214
sg71
g898
sg64
(lp1215
g57
(g78
g59
NtRp1216
(dp1217
g62
(dp1218
g82
g83
ssg71
g1212
sg64
(lp1219
S'http_referer'
p1220
asbag57
(g78
g59
NtRp1221
(dp1222
g62
(dp1223
g89
g90
ssg71
g1212
sg64
(lp1224
S':'
asbag57
(g78
g59
NtRp1225
(dp1226
g62
(dp1227
sg71
g1212
sg64
(lp1228
g57
(g58
g59
NtRp1229
(dp1230
g62
(dp1231
g70
I4
ssg71
g1225
sg64
(lp1232
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/5?_signature=184953c84482004fc5d24ec5108a55dce9c1b12f'
p1233
asbasbasbag57
(g73
g59
NtRp1234
(dp1235
g62
(dp1236
sg71
g898
sg64
(lp1237
g57
(g78
g59
NtRp1238
(dp1239
g62
(dp1240
g82
g83
ssg71
g1234
sg64
(lp1241
S'http_user_agent'
p1242
asbag57
(g78
g59
NtRp1243
(dp1244
g62
(dp1245
g89
g90
ssg71
g1234
sg64
(lp1246
S':'
asbag57
(g78
g59
NtRp1247
(dp1248
g62
(dp1249
sg71
g1234
sg64
(lp1250
g57
(g58
g59
NtRp1251
(dp1252
g62
(dp1253
g70
I4
ssg71
g1247
sg64
(lp1254
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1255
asbasbasbag57
(g73
g59
NtRp1256
(dp1257
g62
(dp1258
sg71
g898
sg64
(lp1259
g57
(g78
g59
NtRp1260
(dp1261
g62
(dp1262
g82
g83
ssg71
g1256
sg64
(lp1263
S'is_jython'
p1264
asbag57
(g78
g59
NtRp1265
(dp1266
g62
(dp1267
g89
g90
ssg71
g1256
sg64
(lp1268
S':'
asbag57
(g78
g59
NtRp1269
(dp1270
g62
(dp1271
sg71
g1256
sg64
(lp1272
g57
(g58
g59
NtRp1273
(dp1274
g62
(dp1275
g70
I4
ssg71
g1269
sg64
(lp1276
g100
asbasbasbag57
(g73
g59
NtRp1277
(dp1278
g62
(dp1279
sg71
g898
sg64
(lp1280
g57
(g78
g59
NtRp1281
(dp1282
g62
(dp1283
g82
g83
ssg71
g1277
sg64
(lp1284
S'is_pypy'
p1285
asbag57
(g78
g59
NtRp1286
(dp1287
g62
(dp1288
g89
g90
ssg71
g1277
sg64
(lp1289
S':'
asbag57
(g78
g59
NtRp1290
(dp1291
g62
(dp1292
sg71
g1277
sg64
(lp1293
g57
(g58
g59
NtRp1294
(dp1295
g62
(dp1296
g70
I4
ssg71
g1290
sg64
(lp1297
g100
asbasbasbag57
(g73
g59
NtRp1298
(dp1299
g62
(dp1300
sg71
g898
sg64
(lp1301
g57
(g78
g59
NtRp1302
(dp1303
g62
(dp1304
g82
g83
ssg71
g1298
sg64
(lp1305
S'local_hosts'
p1306
asbag57
(g78
g59
NtRp1307
(dp1308
g62
(dp1309
g89
g90
ssg71
g1298
sg64
(lp1310
S':'
asbag57
(g78
g59
NtRp1311
(dp1312
g62
(dp1313
sg71
g1298
sg64
(lp1314
g57
(g58
g59
NtRp1315
(dp1316
g62
(dp1317
g70
I4
ssg71
g1311
sg64
(lp1318
g57
(g66
g59
NtRp1319
(dp1320
g62
(dp1321
g70
I3
ssg71
Nsg64
(lp1322
g57
(g73
g59
NtRp1323
(dp1324
g62
(dp1325
sg71
g1319
sg64
(lp1326
g57
(g78
g59
NtRp1327
(dp1328
g62
(dp1329
sg71
g1323
sg64
(lp1330
g57
(g58
g59
NtRp1331
(dp1332
g62
(dp1333
g70
I3
ssg71
g1327
sg64
(lp1334
S'::1'
p1335
asbasbasbag57
(g73
g59
NtRp1336
(dp1337
g62
(dp1338
sg71
g1319
sg64
(lp1339
g57
(g78
g59
NtRp1340
(dp1341
g62
(dp1342
sg71
g1336
sg64
(lp1343
g57
(g58
g59
NtRp1344
(dp1345
g62
(dp1346
g70
I3
ssg71
g1340
sg64
(lp1347
S'127.0.1.1'
p1348
asbasbasbag57
(g73
g59
NtRp1349
(dp1350
g62
(dp1351
sg71
g1319
sg64
(lp1352
g57
(g78
g59
NtRp1353
(dp1354
g62
(dp1355
sg71
g1349
sg64
(lp1356
g57
(g58
g59
NtRp1357
(dp1358
g62
(dp1359
g70
I3
ssg71
g1353
sg64
(lp1360
S'::ffff:127.0.0.1'
p1361
asbasbasbag57
(g73
g59
NtRp1362
(dp1363
g62
(dp1364
sg71
g1319
sg64
(lp1365
g57
(g78
g59
NtRp1366
(dp1367
g62
(dp1368
sg71
g1362
sg64
(lp1369
g57
(g58
g59
NtRp1370
(dp1371
g62
(dp1372
g70
I3
ssg71
g1366
sg64
(lp1373
S'127.0.0.1'
p1374
asbasbasbag57
(g73
g59
NtRp1375
(dp1376
g62
(dp1377
sg71
g1319
sg64
(lp1378
g57
(g78
g59
NtRp1379
(dp1380
g62
(dp1381
sg71
g1375
sg64
(lp1382
g57
(g58
g59
NtRp1383
(dp1384
g62
(dp1385
g70
I3
ssg71
g1379
sg64
(lp1386
S'anil-Inspiron-1525'
p1387
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1388
(dp1389
g62
(dp1390
sg71
g898
sg64
(lp1391
g57
(g78
g59
NtRp1392
(dp1393
g62
(dp1394
g82
g83
ssg71
g1388
sg64
(lp1395
S'path_info'
p1396
asbag57
(g78
g59
NtRp1397
(dp1398
g62
(dp1399
g89
g90
ssg71
g1388
sg64
(lp1400
S':'
asbag57
(g78
g59
NtRp1401
(dp1402
g62
(dp1403
sg71
g1388
sg64
(lp1404
g57
(g58
g59
NtRp1405
(dp1406
g62
(dp1407
g70
I4
ssg71
g1401
sg64
(lp1408
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/view/project/5'
p1409
asbasbasbag57
(g73
g59
NtRp1410
(dp1411
g62
(dp1412
sg71
g898
sg64
(lp1413
g57
(g78
g59
NtRp1414
(dp1415
g62
(dp1416
g82
g83
ssg71
g1410
sg64
(lp1417
S'query_string'
p1418
asbag57
(g78
g59
NtRp1419
(dp1420
g62
(dp1421
g89
g90
ssg71
g1410
sg64
(lp1422
S':'
asbag57
(g78
g59
NtRp1423
(dp1424
g62
(dp1425
sg71
g1410
sg64
(lp1426
g57
(g58
g59
NtRp1427
(dp1428
g62
(dp1429
g70
I4
ssg71
g1423
sg64
(lp1430
S'_signature=00678786d2426b9d343a9f31bf932a52d47223cd'
p1431
asbasbasbag57
(g73
g59
NtRp1432
(dp1433
g62
(dp1434
sg71
g898
sg64
(lp1435
g57
(g78
g59
NtRp1436
(dp1437
g62
(dp1438
g82
g83
ssg71
g1432
sg64
(lp1439
S'remote_addr'
p1440
asbag57
(g78
g59
NtRp1441
(dp1442
g62
(dp1443
g89
g90
ssg71
g1432
sg64
(lp1444
S':'
asbag57
(g78
g59
NtRp1445
(dp1446
g62
(dp1447
sg71
g1432
sg64
(lp1448
g57
(g58
g59
NtRp1449
(dp1450
g62
(dp1451
g70
I4
ssg71
g1445
sg64
(lp1452
g263
asbasbasbag57
(g73
g59
NtRp1453
(dp1454
g62
(dp1455
sg71
g898
sg64
(lp1456
g57
(g78
g59
NtRp1457
(dp1458
g62
(dp1459
g82
g83
ssg71
g1453
sg64
(lp1460
S'remote_port'
p1461
asbag57
(g78
g59
NtRp1462
(dp1463
g62
(dp1464
g89
g90
ssg71
g1453
sg64
(lp1465
S':'
asbag57
(g78
g59
NtRp1466
(dp1467
g62
(dp1468
sg71
g1453
sg64
(lp1469
g57
(g58
g59
NtRp1470
(dp1471
g62
(dp1472
g70
I4
ssg71
g1466
sg64
(lp1473
S'43084'
p1474
asbasbasbag57
(g73
g59
NtRp1475
(dp1476
g62
(dp1477
sg71
g898
sg64
(lp1478
g57
(g78
g59
NtRp1479
(dp1480
g62
(dp1481
g82
g83
ssg71
g1475
sg64
(lp1482
S'request_method'
p1483
asbag57
(g78
g59
NtRp1484
(dp1485
g62
(dp1486
g89
g90
ssg71
g1475
sg64
(lp1487
S':'
asbag57
(g78
g59
NtRp1488
(dp1489
g62
(dp1490
sg71
g1475
sg64
(lp1491
g57
(g58
g59
NtRp1492
(dp1493
g62
(dp1494
g70
I4
ssg71
g1488
sg64
(lp1495
S'GET'
p1496
asbasbasbag57
(g73
g59
NtRp1497
(dp1498
g62
(dp1499
sg71
g898
sg64
(lp1500
g57
(g78
g59
NtRp1501
(dp1502
g62
(dp1503
g82
g83
ssg71
g1497
sg64
(lp1504
S'request_uri'
p1505
asbag57
(g78
g59
NtRp1506
(dp1507
g62
(dp1508
g89
g90
ssg71
g1497
sg64
(lp1509
S':'
asbag57
(g78
g59
NtRp1510
(dp1511
g62
(dp1512
sg71
g1497
sg64
(lp1513
g57
(g58
g59
NtRp1514
(dp1515
g62
(dp1516
g70
I4
ssg71
g1510
sg64
(lp1517
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/view/project/5?_signature=00678786d2426b9d343a9f31bf932a52d47223cd'
p1518
asbasbasbag57
(g73
g59
NtRp1519
(dp1520
g62
(dp1521
sg71
g898
sg64
(lp1522
g57
(g78
g59
NtRp1523
(dp1524
g62
(dp1525
g82
g83
ssg71
g1519
sg64
(lp1526
S'script_name'
p1527
asbag57
(g78
g59
NtRp1528
(dp1529
g62
(dp1530
g89
g90
ssg71
g1519
sg64
(lp1531
S':'
asbag57
(g78
g59
NtRp1532
(dp1533
g62
(dp1534
sg71
g1519
sg64
(lp1535
g57
(g58
g59
NtRp1536
(dp1537
g62
(dp1538
g70
I4
ssg71
g1532
sg64
(lp1539
S''
asbasbasbag57
(g73
g59
NtRp1540
(dp1541
g62
(dp1542
sg71
g898
sg64
(lp1543
g57
(g78
g59
NtRp1544
(dp1545
g62
(dp1546
g82
g83
ssg71
g1540
sg64
(lp1547
S'server_name'
p1548
asbag57
(g78
g59
NtRp1549
(dp1550
g62
(dp1551
g89
g90
ssg71
g1540
sg64
(lp1552
S':'
asbag57
(g78
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g1540
sg64
(lp1556
g57
(g58
g59
NtRp1557
(dp1558
g62
(dp1559
g70
I4
ssg71
g1553
sg64
(lp1560
S'anil-Inspiron-1525'
p1561
asbasbasbag57
(g73
g59
NtRp1562
(dp1563
g62
(dp1564
sg71
g898
sg64
(lp1565
g57
(g78
g59
NtRp1566
(dp1567
g62
(dp1568
g82
g83
ssg71
g1562
sg64
(lp1569
S'server_port'
p1570
asbag57
(g78
g59
NtRp1571
(dp1572
g62
(dp1573
g89
g90
ssg71
g1562
sg64
(lp1574
S':'
asbag57
(g78
g59
NtRp1575
(dp1576
g62
(dp1577
sg71
g1562
sg64
(lp1578
g57
(g58
g59
NtRp1579
(dp1580
g62
(dp1581
g70
I4
ssg71
g1575
sg64
(lp1582
S'8000'
p1583
asbasbasbag57
(g73
g59
NtRp1584
(dp1585
g62
(dp1586
sg71
g898
sg64
(lp1587
g57
(g78
g59
NtRp1588
(dp1589
g62
(dp1590
g82
g83
ssg71
g1584
sg64
(lp1591
S'server_protocol'
p1592
asbag57
(g78
g59
NtRp1593
(dp1594
g62
(dp1595
g89
g90
ssg71
g1584
sg64
(lp1596
S':'
asbag57
(g78
g59
NtRp1597
(dp1598
g62
(dp1599
sg71
g1584
sg64
(lp1600
g57
(g58
g59
NtRp1601
(dp1602
g62
(dp1603
g70
I4
ssg71
g1597
sg64
(lp1604
S'HTTP/1.1'
p1605
asbasbasbag57
(g73
g59
NtRp1606
(dp1607
g62
(dp1608
sg71
g898
sg64
(lp1609
g57
(g78
g59
NtRp1610
(dp1611
g62
(dp1612
g82
g83
ssg71
g1606
sg64
(lp1613
S'server_software'
p1614
asbag57
(g78
g59
NtRp1615
(dp1616
g62
(dp1617
g89
g90
ssg71
g1606
sg64
(lp1618
S':'
asbag57
(g78
g59
NtRp1619
(dp1620
g62
(dp1621
sg71
g1606
sg64
(lp1622
g57
(g58
g59
NtRp1623
(dp1624
g62
(dp1625
g70
I4
ssg71
g1619
sg64
(lp1626
S'Rocket 1.2.6'
p1627
asbasbasbag57
(g73
g59
NtRp1628
(dp1629
g62
(dp1630
sg71
g898
sg64
(lp1631
g57
(g78
g59
NtRp1632
(dp1633
g62
(dp1634
g82
g83
ssg71
g1628
sg64
(lp1635
S'web2py_path'
p1636
asbag57
(g78
g59
NtRp1637
(dp1638
g62
(dp1639
g89
g90
ssg71
g1628
sg64
(lp1640
S':'
asbag57
(g78
g59
NtRp1641
(dp1642
g62
(dp1643
sg71
g1628
sg64
(lp1644
g57
(g58
g59
NtRp1645
(dp1646
g62
(dp1647
g70
I4
ssg71
g1641
sg64
(lp1648
g945
asbasbasbag57
(g73
g59
NtRp1649
(dp1650
g62
(dp1651
sg71
g898
sg64
(lp1652
g57
(g78
g59
NtRp1653
(dp1654
g62
(dp1655
g82
g83
ssg71
g1649
sg64
(lp1656
S'web2py_version'
p1657
asbag57
(g78
g59
NtRp1658
(dp1659
g62
(dp1660
g89
g90
ssg71
g1649
sg64
(lp1661
S':'
asbag57
(g78
g59
NtRp1662
(dp1663
g62
(dp1664
sg71
g1649
sg64
(lp1665
g57
(g58
g59
NtRp1666
(dp1667
g62
(dp1668
g70
I4
ssg71
g1662
sg64
(lp1669
g57
(g66
g59
NtRp1670
(dp1671
g62
(dp1672
g70
I3
ssg71
Nsg64
(lp1673
g57
(g73
g59
NtRp1674
(dp1675
g62
(dp1676
sg71
g1670
sg64
(lp1677
g57
(g78
g59
NtRp1678
(dp1679
g62
(dp1680
sg71
g1674
sg64
(lp1681
g57
(g58
g59
NtRp1682
(dp1683
g62
(dp1684
g70
I3
ssg71
g1678
sg64
(lp1685
S'2'
asbasbasbag57
(g73
g59
NtRp1686
(dp1687
g62
(dp1688
sg71
g1670
sg64
(lp1689
g57
(g78
g59
NtRp1690
(dp1691
g62
(dp1692
sg71
g1686
sg64
(lp1693
g57
(g58
g59
NtRp1694
(dp1695
g62
(dp1696
g70
I3
ssg71
g1690
sg64
(lp1697
S'3'
asbasbasbag57
(g73
g59
NtRp1698
(dp1699
g62
(dp1700
sg71
g1670
sg64
(lp1701
g57
(g78
g59
NtRp1702
(dp1703
g62
(dp1704
sg71
g1698
sg64
(lp1705
g57
(g58
g59
NtRp1706
(dp1707
g62
(dp1708
g70
I3
ssg71
g1702
sg64
(lp1709
S'2'
asbasbasbag57
(g73
g59
NtRp1710
(dp1711
g62
(dp1712
sg71
g1670
sg64
(lp1713
g57
(g78
g59
NtRp1714
(dp1715
g62
(dp1716
sg71
g1710
sg64
(lp1717
g57
(g58
g59
NtRp1718
(dp1719
g62
(dp1720
g70
I3
ssg71
g1714
sg64
(lp1721
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1722
asbasbasbag57
(g73
g59
NtRp1723
(dp1724
g62
(dp1725
sg71
g1670
sg64
(lp1726
g57
(g78
g59
NtRp1727
(dp1728
g62
(dp1729
sg71
g1723
sg64
(lp1730
g57
(g58
g59
NtRp1731
(dp1732
g62
(dp1733
g70
I3
ssg71
g1727
sg64
(lp1734
S'stable'
p1735
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1736
(dp1737
g62
(dp1738
sg71
g898
sg64
(lp1739
g57
(g78
g59
NtRp1740
(dp1741
g62
(dp1742
g82
g83
ssg71
g1736
sg64
(lp1743
S'wsgi_errors'
p1744
asbag57
(g78
g59
NtRp1745
(dp1746
g62
(dp1747
g89
g90
ssg71
g1736
sg64
(lp1748
S':'
asbag57
(g78
g59
NtRp1749
(dp1750
g62
(dp1751
sg71
g1736
sg64
(lp1752
g57
(g58
g59
NtRp1753
(dp1754
g62
(dp1755
g70
I4
ssg71
g1749
sg64
(lp1756
S"<open file '<stderr>', mode 'w' at 0xb729e0d0>"
p1757
asbasbasbag57
(g73
g59
NtRp1758
(dp1759
g62
(dp1760
sg71
g898
sg64
(lp1761
g57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
g82
g83
ssg71
g1758
sg64
(lp1765
S'wsgi_file_wrapper'
p1766
asbag57
(g78
g59
NtRp1767
(dp1768
g62
(dp1769
g89
g90
ssg71
g1758
sg64
(lp1770
S':'
asbag57
(g78
g59
NtRp1771
(dp1772
g62
(dp1773
sg71
g1758
sg64
(lp1774
g57
(g58
g59
NtRp1775
(dp1776
g62
(dp1777
g70
I4
ssg71
g1771
sg64
(lp1778
S'<class wsgiref.util.FileWrapper at 0x88bfb6c>'
p1779
asbasbasbag57
(g73
g59
NtRp1780
(dp1781
g62
(dp1782
sg71
g898
sg64
(lp1783
g57
(g78
g59
NtRp1784
(dp1785
g62
(dp1786
g82
g83
ssg71
g1780
sg64
(lp1787
S'wsgi_input'
p1788
asbag57
(g78
g59
NtRp1789
(dp1790
g62
(dp1791
g89
g90
ssg71
g1780
sg64
(lp1792
S':'
asbag57
(g78
g59
NtRp1793
(dp1794
g62
(dp1795
sg71
g1780
sg64
(lp1796
g57
(g58
g59
NtRp1797
(dp1798
g62
(dp1799
g70
I4
ssg71
g1793
sg64
(lp1800
S'<socket._fileobject object at 0xad8884ac>'
p1801
asbasbasbag57
(g73
g59
NtRp1802
(dp1803
g62
(dp1804
sg71
g898
sg64
(lp1805
g57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
g82
g83
ssg71
g1802
sg64
(lp1809
S'wsgi_multiprocess'
p1810
asbag57
(g78
g59
NtRp1811
(dp1812
g62
(dp1813
g89
g90
ssg71
g1802
sg64
(lp1814
S':'
asbag57
(g78
g59
NtRp1815
(dp1816
g62
(dp1817
sg71
g1802
sg64
(lp1818
g57
(g58
g59
NtRp1819
(dp1820
g62
(dp1821
g70
I4
ssg71
g1815
sg64
(lp1822
g100
asbasbasbag57
(g73
g59
NtRp1823
(dp1824
g62
(dp1825
sg71
g898
sg64
(lp1826
g57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
g82
g83
ssg71
g1823
sg64
(lp1830
S'wsgi_multithread'
p1831
asbag57
(g78
g59
NtRp1832
(dp1833
g62
(dp1834
g89
g90
ssg71
g1823
sg64
(lp1835
S':'
asbag57
(g78
g59
NtRp1836
(dp1837
g62
(dp1838
sg71
g1823
sg64
(lp1839
g57
(g58
g59
NtRp1840
(dp1841
g62
(dp1842
g70
I4
ssg71
g1836
sg64
(lp1843
S'True'
p1844
asbasbasbag57
(g73
g59
NtRp1845
(dp1846
g62
(dp1847
sg71
g898
sg64
(lp1848
g57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
g82
g83
ssg71
g1845
sg64
(lp1852
S'wsgi_run_once'
p1853
asbag57
(g78
g59
NtRp1854
(dp1855
g62
(dp1856
g89
g90
ssg71
g1845
sg64
(lp1857
S':'
asbag57
(g78
g59
NtRp1858
(dp1859
g62
(dp1860
sg71
g1845
sg64
(lp1861
g57
(g58
g59
NtRp1862
(dp1863
g62
(dp1864
g70
I4
ssg71
g1858
sg64
(lp1865
g100
asbasbasbag57
(g73
g59
NtRp1866
(dp1867
g62
(dp1868
sg71
g898
sg64
(lp1869
g57
(g78
g59
NtRp1870
(dp1871
g62
(dp1872
g82
g83
ssg71
g1866
sg64
(lp1873
S'wsgi_url_scheme'
p1874
asbag57
(g78
g59
NtRp1875
(dp1876
g62
(dp1877
g89
g90
ssg71
g1866
sg64
(lp1878
S':'
asbag57
(g78
g59
NtRp1879
(dp1880
g62
(dp1881
sg71
g1866
sg64
(lp1882
g57
(g58
g59
NtRp1883
(dp1884
g62
(dp1885
g70
I4
ssg71
g1879
sg64
(lp1886
S'http'
p1887
asbasbasbag57
(g73
g59
NtRp1888
(dp1889
g62
(dp1890
sg71
g898
sg64
(lp1891
g57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
g82
g83
ssg71
g1888
sg64
(lp1895
S'wsgi_version'
p1896
asbag57
(g78
g59
NtRp1897
(dp1898
g62
(dp1899
g89
g90
ssg71
g1888
sg64
(lp1900
S':'
asbag57
(g78
g59
NtRp1901
(dp1902
g62
(dp1903
sg71
g1888
sg64
(lp1904
g57
(g58
g59
NtRp1905
(dp1906
g62
(dp1907
g70
I4
ssg71
g1901
sg64
(lp1908
g57
(g66
g59
NtRp1909
(dp1910
g62
(dp1911
g70
I3
ssg71
Nsg64
(lp1912
g57
(g73
g59
NtRp1913
(dp1914
g62
(dp1915
sg71
g1909
sg64
(lp1916
g57
(g78
g59
NtRp1917
(dp1918
g62
(dp1919
sg71
g1913
sg64
(lp1920
g57
(g58
g59
NtRp1921
(dp1922
g62
(dp1923
g70
I3
ssg71
g1917
sg64
(lp1924
S'1'
asbasbasbag57
(g73
g59
NtRp1925
(dp1926
g62
(dp1927
sg71
g1909
sg64
(lp1928
g57
(g78
g59
NtRp1929
(dp1930
g62
(dp1931
sg71
g1925
sg64
(lp1932
g57
(g58
g59
NtRp1933
(dp1934
g62
(dp1935
g70
I3
ssg71
g1929
sg64
(lp1936
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1937
(dp1938
g62
(dp1939
sg71
g67
sg64
(lp1940
g57
(g78
g59
NtRp1941
(dp1942
g62
(dp1943
g82
g83
ssg71
g1937
sg64
(lp1944
S'extension'
p1945
asbag57
(g78
g59
NtRp1946
(dp1947
g62
(dp1948
g89
g90
ssg71
g1937
sg64
(lp1949
S':'
asbag57
(g78
g59
NtRp1950
(dp1951
g62
(dp1952
sg71
g1937
sg64
(lp1953
g57
(g58
g59
NtRp1954
(dp1955
g62
(dp1956
g70
I5
ssg71
g1950
sg64
(lp1957
S'html'
p1958
asbasbasbag57
(g73
g59
NtRp1959
(dp1960
g62
(dp1961
sg71
g67
sg64
(lp1962
g57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
g82
g83
ssg71
g1959
sg64
(lp1966
S'folder'
p1967
asbag57
(g78
g59
NtRp1968
(dp1969
g62
(dp1970
g89
g90
ssg71
g1959
sg64
(lp1971
S':'
asbag57
(g78
g59
NtRp1972
(dp1973
g62
(dp1974
sg71
g1959
sg64
(lp1975
g57
(g58
g59
NtRp1976
(dp1977
g62
(dp1978
g70
I5
ssg71
g1972
sg64
(lp1979
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/'
p1980
asbasbasbag57
(g73
g59
NtRp1981
(dp1982
g62
(dp1983
sg71
g67
sg64
(lp1984
g57
(g78
g59
NtRp1985
(dp1986
g62
(dp1987
g82
g83
ssg71
g1981
sg64
(lp1988
S'function'
p1989
asbag57
(g78
g59
NtRp1990
(dp1991
g62
(dp1992
g89
g90
ssg71
g1981
sg64
(lp1993
S':'
asbag57
(g78
g59
NtRp1994
(dp1995
g62
(dp1996
sg71
g1981
sg64
(lp1997
g57
(g58
g59
NtRp1998
(dp1999
g62
(dp2000
g70
I5
ssg71
g1994
sg64
(lp2001
S'list_all_dev_projects'
p2002
asbasbasbag57
(g73
g59
NtRp2003
(dp2004
g62
(dp2005
sg71
g67
sg64
(lp2006
g57
(g78
g59
NtRp2007
(dp2008
g62
(dp2009
g82
g83
ssg71
g2003
sg64
(lp2010
S'get_vars'
p2011
asbag57
(g78
g59
NtRp2012
(dp2013
g62
(dp2014
g89
g90
ssg71
g2003
sg64
(lp2015
S':'
asbag57
(g78
g59
NtRp2016
(dp2017
g62
(dp2018
sg71
g2003
sg64
(lp2019
g57
(g58
g59
NtRp2020
(dp2021
g62
(dp2022
g70
I5
ssg71
g2016
sg64
(lp2023
g57
(g66
g59
NtRp2024
(dp2025
g62
(dp2026
g70
I4
ssg71
Nsg64
(lp2027
sbasbasbasbag57
(g73
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g67
sg64
(lp2031
g57
(g78
g59
NtRp2032
(dp2033
g62
(dp2034
g82
g83
ssg71
g2028
sg64
(lp2035
S'global_settings'
p2036
asbag57
(g78
g59
NtRp2037
(dp2038
g62
(dp2039
g89
g90
ssg71
g2028
sg64
(lp2040
S':'
asbag57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
sg71
g2028
sg64
(lp2044
g57
(g58
g59
NtRp2045
(dp2046
g62
(dp2047
g70
I5
ssg71
g2041
sg64
(lp2048
g57
(g66
g59
NtRp2049
(dp2050
g62
(dp2051
g70
I4
ssg71
Nsg64
(lp2052
g57
(g73
g59
NtRp2053
(dp2054
g62
(dp2055
sg71
g2049
sg64
(lp2056
g57
(g78
g59
NtRp2057
(dp2058
g62
(dp2059
g82
g83
ssg71
g2053
sg64
(lp2060
g910
asbag57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
g89
g90
ssg71
g2053
sg64
(lp2064
S':'
asbag57
(g78
g59
NtRp2065
(dp2066
g62
(dp2067
sg71
g2053
sg64
(lp2068
g57
(g58
g59
NtRp2069
(dp2070
g62
(dp2071
g70
I4
ssg71
g2065
sg64
(lp2072
S"set(['/home/anil/Downloads/web2py/applications/welcome/', '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/', '/home/anil/Downloads/web2py/applications/admin/'])"
p2073
asbasbasbag57
(g73
g59
NtRp2074
(dp2075
g62
(dp2076
sg71
g2049
sg64
(lp2077
g57
(g78
g59
NtRp2078
(dp2079
g62
(dp2080
g82
g83
ssg71
g2074
sg64
(lp2081
g932
asbag57
(g78
g59
NtRp2082
(dp2083
g62
(dp2084
g89
g90
ssg71
g2074
sg64
(lp2085
S':'
asbag57
(g78
g59
NtRp2086
(dp2087
g62
(dp2088
sg71
g2074
sg64
(lp2089
g57
(g58
g59
NtRp2090
(dp2091
g62
(dp2092
g70
I4
ssg71
g2086
sg64
(lp2093
g945
asbasbasbag57
(g73
g59
NtRp2094
(dp2095
g62
(dp2096
sg71
g2049
sg64
(lp2097
g57
(g78
g59
NtRp2098
(dp2099
g62
(dp2100
g82
g83
ssg71
g2094
sg64
(lp2101
g954
asbag57
(g78
g59
NtRp2102
(dp2103
g62
(dp2104
g89
g90
ssg71
g2094
sg64
(lp2105
S':'
asbag57
(g78
g59
NtRp2106
(dp2107
g62
(dp2108
sg71
g2094
sg64
(lp2109
g57
(g58
g59
NtRp2110
(dp2111
g62
(dp2112
g70
I4
ssg71
g2106
sg64
(lp2113
g57
(g66
g59
NtRp2114
(dp2115
g62
(dp2116
g70
I3
ssg71
Nsg64
(lp2117
sbasbasbasbag57
(g73
g59
NtRp2118
(dp2119
g62
(dp2120
sg71
g2049
sg64
(lp2121
g57
(g78
g59
NtRp2122
(dp2123
g62
(dp2124
g82
g83
ssg71
g2118
sg64
(lp2125
g979
asbag57
(g78
g59
NtRp2126
(dp2127
g62
(dp2128
g89
g90
ssg71
g2118
sg64
(lp2129
S':'
asbag57
(g78
g59
NtRp2130
(dp2131
g62
(dp2132
sg71
g2118
sg64
(lp2133
g57
(g58
g59
NtRp2134
(dp2135
g62
(dp2136
g70
I4
ssg71
g2130
sg64
(lp2137
S"<Values at 0x8936a4c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/Downloads/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2138
asbasbasbag57
(g73
g59
NtRp2139
(dp2140
g62
(dp2141
sg71
g2049
sg64
(lp2142
g57
(g78
g59
NtRp2143
(dp2144
g62
(dp2145
g82
g83
ssg71
g2139
sg64
(lp2146
g1001
asbag57
(g78
g59
NtRp2147
(dp2148
g62
(dp2149
g89
g90
ssg71
g2139
sg64
(lp2150
S':'
asbag57
(g78
g59
NtRp2151
(dp2152
g62
(dp2153
sg71
g2139
sg64
(lp2154
g57
(g58
g59
NtRp2155
(dp2156
g62
(dp2157
g70
I4
ssg71
g2151
sg64
(lp2158
S'set([])'
p2159
asbasbasbag57
(g73
g59
NtRp2160
(dp2161
g62
(dp2162
sg71
g2049
sg64
(lp2163
g57
(g78
g59
NtRp2164
(dp2165
g62
(dp2166
g82
g83
ssg71
g2160
sg64
(lp2167
g1023
asbag57
(g78
g59
NtRp2168
(dp2169
g62
(dp2170
g89
g90
ssg71
g2160
sg64
(lp2171
S':'
asbag57
(g78
g59
NtRp2172
(dp2173
g62
(dp2174
sg71
g2160
sg64
(lp2175
g57
(g58
g59
NtRp2176
(dp2177
g62
(dp2178
g70
I4
ssg71
g2172
sg64
(lp2179
g100
asbasbasbag57
(g73
g59
NtRp2180
(dp2181
g62
(dp2182
sg71
g2049
sg64
(lp2183
g57
(g78
g59
NtRp2184
(dp2185
g62
(dp2186
g82
g83
ssg71
g2180
sg64
(lp2187
g1044
asbag57
(g78
g59
NtRp2188
(dp2189
g62
(dp2190
g89
g90
ssg71
g2180
sg64
(lp2191
S':'
asbag57
(g78
g59
NtRp2192
(dp2193
g62
(dp2194
sg71
g2180
sg64
(lp2195
g57
(g58
g59
NtRp2196
(dp2197
g62
(dp2198
g70
I4
ssg71
g2192
sg64
(lp2199
g1057
asbasbasbag57
(g73
g59
NtRp2200
(dp2201
g62
(dp2202
sg71
g2049
sg64
(lp2203
g57
(g78
g59
NtRp2204
(dp2205
g62
(dp2206
g82
g83
ssg71
g2200
sg64
(lp2207
g1264
asbag57
(g78
g59
NtRp2208
(dp2209
g62
(dp2210
g89
g90
ssg71
g2200
sg64
(lp2211
S':'
asbag57
(g78
g59
NtRp2212
(dp2213
g62
(dp2214
sg71
g2200
sg64
(lp2215
g57
(g58
g59
NtRp2216
(dp2217
g62
(dp2218
g70
I4
ssg71
g2212
sg64
(lp2219
g100
asbasbasbag57
(g73
g59
NtRp2220
(dp2221
g62
(dp2222
sg71
g2049
sg64
(lp2223
g57
(g78
g59
NtRp2224
(dp2225
g62
(dp2226
g82
g83
ssg71
g2220
sg64
(lp2227
g1285
asbag57
(g78
g59
NtRp2228
(dp2229
g62
(dp2230
g89
g90
ssg71
g2220
sg64
(lp2231
S':'
asbag57
(g78
g59
NtRp2232
(dp2233
g62
(dp2234
sg71
g2220
sg64
(lp2235
g57
(g58
g59
NtRp2236
(dp2237
g62
(dp2238
g70
I4
ssg71
g2232
sg64
(lp2239
g100
asbasbasbag57
(g73
g59
NtRp2240
(dp2241
g62
(dp2242
sg71
g2049
sg64
(lp2243
g57
(g78
g59
NtRp2244
(dp2245
g62
(dp2246
g82
g83
ssg71
g2240
sg64
(lp2247
g1306
asbag57
(g78
g59
NtRp2248
(dp2249
g62
(dp2250
g89
g90
ssg71
g2240
sg64
(lp2251
S':'
asbag57
(g78
g59
NtRp2252
(dp2253
g62
(dp2254
sg71
g2240
sg64
(lp2255
g57
(g58
g59
NtRp2256
(dp2257
g62
(dp2258
g70
I4
ssg71
g2252
sg64
(lp2259
g57
(g66
g59
NtRp2260
(dp2261
g62
(dp2262
g70
I3
ssg71
Nsg64
(lp2263
g57
(g73
g59
NtRp2264
(dp2265
g62
(dp2266
sg71
g2260
sg64
(lp2267
g57
(g78
g59
NtRp2268
(dp2269
g62
(dp2270
sg71
g2264
sg64
(lp2271
g57
(g58
g59
NtRp2272
(dp2273
g62
(dp2274
g70
I3
ssg71
g2268
sg64
(lp2275
g1335
asbasbasbag57
(g73
g59
NtRp2276
(dp2277
g62
(dp2278
sg71
g2260
sg64
(lp2279
g57
(g78
g59
NtRp2280
(dp2281
g62
(dp2282
sg71
g2276
sg64
(lp2283
g57
(g58
g59
NtRp2284
(dp2285
g62
(dp2286
g70
I3
ssg71
g2280
sg64
(lp2287
g1348
asbasbasbag57
(g73
g59
NtRp2288
(dp2289
g62
(dp2290
sg71
g2260
sg64
(lp2291
g57
(g78
g59
NtRp2292
(dp2293
g62
(dp2294
sg71
g2288
sg64
(lp2295
g57
(g58
g59
NtRp2296
(dp2297
g62
(dp2298
g70
I3
ssg71
g2292
sg64
(lp2299
g1361
asbasbasbag57
(g73
g59
NtRp2300
(dp2301
g62
(dp2302
sg71
g2260
sg64
(lp2303
g57
(g78
g59
NtRp2304
(dp2305
g62
(dp2306
sg71
g2300
sg64
(lp2307
g57
(g58
g59
NtRp2308
(dp2309
g62
(dp2310
g70
I3
ssg71
g2304
sg64
(lp2311
g1374
asbasbasbag57
(g73
g59
NtRp2312
(dp2313
g62
(dp2314
sg71
g2260
sg64
(lp2315
g57
(g78
g59
NtRp2316
(dp2317
g62
(dp2318
sg71
g2312
sg64
(lp2319
g57
(g58
g59
NtRp2320
(dp2321
g62
(dp2322
g70
I3
ssg71
g2316
sg64
(lp2323
g1387
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2324
(dp2325
g62
(dp2326
sg71
g2049
sg64
(lp2327
g57
(g78
g59
NtRp2328
(dp2329
g62
(dp2330
g82
g83
ssg71
g2324
sg64
(lp2331
g1657
asbag57
(g78
g59
NtRp2332
(dp2333
g62
(dp2334
g89
g90
ssg71
g2324
sg64
(lp2335
S':'
asbag57
(g78
g59
NtRp2336
(dp2337
g62
(dp2338
sg71
g2324
sg64
(lp2339
g57
(g58
g59
NtRp2340
(dp2341
g62
(dp2342
g70
I4
ssg71
g2336
sg64
(lp2343
g57
(g66
g59
NtRp2344
(dp2345
g62
(dp2346
g70
I3
ssg71
Nsg64
(lp2347
g57
(g73
g59
NtRp2348
(dp2349
g62
(dp2350
sg71
g2344
sg64
(lp2351
g57
(g78
g59
NtRp2352
(dp2353
g62
(dp2354
sg71
g2348
sg64
(lp2355
g57
(g58
g59
NtRp2356
(dp2357
g62
(dp2358
g70
I3
ssg71
g2352
sg64
(lp2359
S'2'
asbasbasbag57
(g73
g59
NtRp2360
(dp2361
g62
(dp2362
sg71
g2344
sg64
(lp2363
g57
(g78
g59
NtRp2364
(dp2365
g62
(dp2366
sg71
g2360
sg64
(lp2367
g57
(g58
g59
NtRp2368
(dp2369
g62
(dp2370
g70
I3
ssg71
g2364
sg64
(lp2371
S'3'
asbasbasbag57
(g73
g59
NtRp2372
(dp2373
g62
(dp2374
sg71
g2344
sg64
(lp2375
g57
(g78
g59
NtRp2376
(dp2377
g62
(dp2378
sg71
g2372
sg64
(lp2379
g57
(g58
g59
NtRp2380
(dp2381
g62
(dp2382
g70
I3
ssg71
g2376
sg64
(lp2383
S'2'
asbasbasbag57
(g73
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2344
sg64
(lp2387
g57
(g78
g59
NtRp2388
(dp2389
g62
(dp2390
sg71
g2384
sg64
(lp2391
g57
(g58
g59
NtRp2392
(dp2393
g62
(dp2394
g70
I3
ssg71
g2388
sg64
(lp2395
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2396
asbasbasbag57
(g73
g59
NtRp2397
(dp2398
g62
(dp2399
sg71
g2344
sg64
(lp2400
g57
(g78
g59
NtRp2401
(dp2402
g62
(dp2403
sg71
g2397
sg64
(lp2404
g57
(g58
g59
NtRp2405
(dp2406
g62
(dp2407
g70
I3
ssg71
g2401
sg64
(lp2408
g1735
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2409
(dp2410
g62
(dp2411
sg71
g67
sg64
(lp2412
g57
(g78
g59
NtRp2413
(dp2414
g62
(dp2415
g82
g83
ssg71
g2409
sg64
(lp2416
S'is_https'
p2417
asbag57
(g78
g59
NtRp2418
(dp2419
g62
(dp2420
g89
g90
ssg71
g2409
sg64
(lp2421
S':'
asbag57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
sg71
g2409
sg64
(lp2425
g57
(g58
g59
NtRp2426
(dp2427
g62
(dp2428
g70
I5
ssg71
g2422
sg64
(lp2429
g100
asbasbasbag57
(g73
g59
NtRp2430
(dp2431
g62
(dp2432
sg71
g67
sg64
(lp2433
g57
(g78
g59
NtRp2434
(dp2435
g62
(dp2436
g82
g83
ssg71
g2430
sg64
(lp2437
S'is_local'
p2438
asbag57
(g78
g59
NtRp2439
(dp2440
g62
(dp2441
g89
g90
ssg71
g2430
sg64
(lp2442
S':'
asbag57
(g78
g59
NtRp2443
(dp2444
g62
(dp2445
sg71
g2430
sg64
(lp2446
g57
(g58
g59
NtRp2447
(dp2448
g62
(dp2449
g70
I5
ssg71
g2443
sg64
(lp2450
g1844
asbasbasbag57
(g73
g59
NtRp2451
(dp2452
g62
(dp2453
sg71
g67
sg64
(lp2454
g57
(g78
g59
NtRp2455
(dp2456
g62
(dp2457
g82
g83
ssg71
g2451
sg64
(lp2458
S'is_restful'
p2459
asbag57
(g78
g59
NtRp2460
(dp2461
g62
(dp2462
g89
g90
ssg71
g2451
sg64
(lp2463
S':'
asbag57
(g78
g59
NtRp2464
(dp2465
g62
(dp2466
sg71
g2451
sg64
(lp2467
g57
(g58
g59
NtRp2468
(dp2469
g62
(dp2470
g70
I5
ssg71
g2464
sg64
(lp2471
g100
asbasbasbag57
(g73
g59
NtRp2472
(dp2473
g62
(dp2474
sg71
g67
sg64
(lp2475
g57
(g78
g59
NtRp2476
(dp2477
g62
(dp2478
g82
g83
ssg71
g2472
sg64
(lp2479
S'now'
p2480
asbag57
(g78
g59
NtRp2481
(dp2482
g62
(dp2483
g89
g90
ssg71
g2472
sg64
(lp2484
S':'
asbag57
(g78
g59
NtRp2485
(dp2486
g62
(dp2487
sg71
g2472
sg64
(lp2488
g57
(g58
g59
NtRp2489
(dp2490
g62
(dp2491
g70
I5
ssg71
g2485
sg64
(lp2492
S'datetime.datetime(2013, 3, 4, 15, 55, 46, 421365)'
p2493
asbasbasbag57
(g73
g59
NtRp2494
(dp2495
g62
(dp2496
sg71
g67
sg64
(lp2497
g57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g82
g83
ssg71
g2494
sg64
(lp2501
S'post_vars'
p2502
asbag57
(g78
g59
NtRp2503
(dp2504
g62
(dp2505
g89
g90
ssg71
g2494
sg64
(lp2506
S':'
asbag57
(g78
g59
NtRp2507
(dp2508
g62
(dp2509
sg71
g2494
sg64
(lp2510
g57
(g58
g59
NtRp2511
(dp2512
g62
(dp2513
g70
I5
ssg71
g2507
sg64
(lp2514
g57
(g66
g59
NtRp2515
(dp2516
g62
(dp2517
g70
I4
ssg71
Nsg64
(lp2518
sbasbasbasbag57
(g73
g59
NtRp2519
(dp2520
g62
(dp2521
sg71
g67
sg64
(lp2522
g57
(g78
g59
NtRp2523
(dp2524
g62
(dp2525
g82
g83
ssg71
g2519
sg64
(lp2526
S'raw_args'
p2527
asbag57
(g78
g59
NtRp2528
(dp2529
g62
(dp2530
g89
g90
ssg71
g2519
sg64
(lp2531
S':'
asbag57
(g78
g59
NtRp2532
(dp2533
g62
(dp2534
sg71
g2519
sg64
(lp2535
g57
(g58
g59
NtRp2536
(dp2537
g62
(dp2538
g70
I5
ssg71
g2532
sg64
(lp2539
S'project/view/project/5'
p2540
asbasbasbag57
(g73
g59
NtRp2541
(dp2542
g62
(dp2543
sg71
g67
sg64
(lp2544
g57
(g78
g59
NtRp2545
(dp2546
g62
(dp2547
g82
g83
ssg71
g2541
sg64
(lp2548
S'raw_extension'
p2549
asbag57
(g78
g59
NtRp2550
(dp2551
g62
(dp2552
g89
g90
ssg71
g2541
sg64
(lp2553
S':'
asbag57
(g78
g59
NtRp2554
(dp2555
g62
(dp2556
sg71
g2541
sg64
(lp2557
g57
(g58
g59
NtRp2558
(dp2559
g62
(dp2560
g70
I5
ssg71
g2554
sg64
(lp2561
S'None'
p2562
asbasbasbag57
(g73
g59
NtRp2563
(dp2564
g62
(dp2565
sg71
g67
sg64
(lp2566
g57
(g78
g59
NtRp2567
(dp2568
g62
(dp2569
g82
g83
ssg71
g2563
sg64
(lp2570
S'url'
p2571
asbag57
(g78
g59
NtRp2572
(dp2573
g62
(dp2574
g89
g90
ssg71
g2563
sg64
(lp2575
S':'
asbag57
(g78
g59
NtRp2576
(dp2577
g62
(dp2578
sg71
g2563
sg64
(lp2579
g57
(g58
g59
NtRp2580
(dp2581
g62
(dp2582
g70
I5
ssg71
g2576
sg64
(lp2583
g1409
asbasbasbag57
(g73
g59
NtRp2584
(dp2585
g62
(dp2586
sg71
g67
sg64
(lp2587
g57
(g78
g59
NtRp2588
(dp2589
g62
(dp2590
g82
g83
ssg71
g2584
sg64
(lp2591
S'utcnow'
p2592
asbag57
(g78
g59
NtRp2593
(dp2594
g62
(dp2595
g89
g90
ssg71
g2584
sg64
(lp2596
S':'
asbag57
(g78
g59
NtRp2597
(dp2598
g62
(dp2599
sg71
g2584
sg64
(lp2600
g57
(g58
g59
NtRp2601
(dp2602
g62
(dp2603
g70
I5
ssg71
g2597
sg64
(lp2604
S'datetime.datetime(2013, 3, 4, 10, 25, 46, 421408)'
p2605
asbasbasbag57
(g73
g59
NtRp2606
(dp2607
g62
(dp2608
sg71
g67
sg64
(lp2609
g57
(g78
g59
NtRp2610
(dp2611
g62
(dp2612
g82
g83
ssg71
g2606
sg64
(lp2613
S'uuid'
p2614
asbag57
(g78
g59
NtRp2615
(dp2616
g62
(dp2617
g89
g90
ssg71
g2606
sg64
(lp2618
S':'
asbag57
(g78
g59
NtRp2619
(dp2620
g62
(dp2621
sg71
g2606
sg64
(lp2622
g57
(g58
g59
NtRp2623
(dp2624
g62
(dp2625
g70
I5
ssg71
g2619
sg64
(lp2626
S'DEV_bootstrap_ch/127.0.0.1.2013-03-04.15-55-46.e7778be5-9f53-459c-be3b-c5073ab9d44c'
p2627
asbasbasbag57
(g73
g59
NtRp2628
(dp2629
g62
(dp2630
sg71
g67
sg64
(lp2631
g57
(g78
g59
NtRp2632
(dp2633
g62
(dp2634
g82
g83
ssg71
g2628
sg64
(lp2635
S'vars'
p2636
asbag57
(g78
g59
NtRp2637
(dp2638
g62
(dp2639
g89
g90
ssg71
g2628
sg64
(lp2640
S':'
asbag57
(g78
g59
NtRp2641
(dp2642
g62
(dp2643
sg71
g2628
sg64
(lp2644
g57
(g58
g59
NtRp2645
(dp2646
g62
(dp2647
g70
I5
ssg71
g2641
sg64
(lp2648
g57
(g66
g59
NtRp2649
(dp2650
g62
(dp2651
g70
I4
ssg71
Nsg64
(lp2652
sbasbasbasbag57
(g73
g59
NtRp2653
(dp2654
g62
(dp2655
sg71
g67
sg64
(lp2656
g57
(g78
g59
NtRp2657
(dp2658
g62
(dp2659
g82
g83
ssg71
g2653
sg64
(lp2660
S'wsgi'
p2661
asbag57
(g78
g59
NtRp2662
(dp2663
g62
(dp2664
g89
g90
ssg71
g2653
sg64
(lp2665
S':'
asbag57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
sg71
g2653
sg64
(lp2669
g57
(g58
g59
NtRp2670
(dp2671
g62
(dp2672
g70
I5
ssg71
g2666
sg64
(lp2673
g57
(g66
g59
NtRp2674
(dp2675
g62
(dp2676
g70
I4
ssg71
Nsg64
(lp2677
g57
(g73
g59
NtRp2678
(dp2679
g62
(dp2680
sg71
g2674
sg64
(lp2681
g57
(g78
g59
NtRp2682
(dp2683
g62
(dp2684
g82
g83
ssg71
g2678
sg64
(lp2685
S'environ'
p2686
asbag57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g89
g90
ssg71
g2678
sg64
(lp2690
S':'
asbag57
(g78
g59
NtRp2691
(dp2692
g62
(dp2693
sg71
g2678
sg64
(lp2694
g57
(g58
g59
NtRp2695
(dp2696
g62
(dp2697
g70
I4
ssg71
g2691
sg64
(lp2698
g57
(g66
g59
NtRp2699
(dp2700
g62
(dp2701
g70
I3
ssg71
Nsg64
(lp2702
g57
(g73
g59
NtRp2703
(dp2704
g62
(dp2705
sg71
g2699
sg64
(lp2706
g57
(g78
g59
NtRp2707
(dp2708
g62
(dp2709
g82
g83
ssg71
g2703
sg64
(lp2710
S'HTTP_ACCEPT'
p2711
asbag57
(g78
g59
NtRp2712
(dp2713
g62
(dp2714
g89
g90
ssg71
g2703
sg64
(lp2715
S':'
asbag57
(g78
g59
NtRp2716
(dp2717
g62
(dp2718
sg71
g2703
sg64
(lp2719
g57
(g58
g59
NtRp2720
(dp2721
g62
(dp2722
g70
I3
ssg71
g2716
sg64
(lp2723
g1079
asbasbasbag57
(g73
g59
NtRp2724
(dp2725
g62
(dp2726
sg71
g2699
sg64
(lp2727
g57
(g78
g59
NtRp2728
(dp2729
g62
(dp2730
g82
g83
ssg71
g2724
sg64
(lp2731
S'HTTP_ACCEPT_CHARSET'
p2732
asbag57
(g78
g59
NtRp2733
(dp2734
g62
(dp2735
g89
g90
ssg71
g2724
sg64
(lp2736
S':'
asbag57
(g78
g59
NtRp2737
(dp2738
g62
(dp2739
sg71
g2724
sg64
(lp2740
g57
(g58
g59
NtRp2741
(dp2742
g62
(dp2743
g70
I3
ssg71
g2737
sg64
(lp2744
g1101
asbasbasbag57
(g73
g59
NtRp2745
(dp2746
g62
(dp2747
sg71
g2699
sg64
(lp2748
g57
(g78
g59
NtRp2749
(dp2750
g62
(dp2751
g82
g83
ssg71
g2745
sg64
(lp2752
S'HTTP_ACCEPT_ENCODING'
p2753
asbag57
(g78
g59
NtRp2754
(dp2755
g62
(dp2756
g89
g90
ssg71
g2745
sg64
(lp2757
S':'
asbag57
(g78
g59
NtRp2758
(dp2759
g62
(dp2760
sg71
g2745
sg64
(lp2761
g57
(g58
g59
NtRp2762
(dp2763
g62
(dp2764
g70
I3
ssg71
g2758
sg64
(lp2765
g1123
asbasbasbag57
(g73
g59
NtRp2766
(dp2767
g62
(dp2768
sg71
g2699
sg64
(lp2769
g57
(g78
g59
NtRp2770
(dp2771
g62
(dp2772
g82
g83
ssg71
g2766
sg64
(lp2773
S'HTTP_ACCEPT_LANGUAGE'
p2774
asbag57
(g78
g59
NtRp2775
(dp2776
g62
(dp2777
g89
g90
ssg71
g2766
sg64
(lp2778
S':'
asbag57
(g78
g59
NtRp2779
(dp2780
g62
(dp2781
sg71
g2766
sg64
(lp2782
g57
(g58
g59
NtRp2783
(dp2784
g62
(dp2785
g70
I3
ssg71
g2779
sg64
(lp2786
g1145
asbasbasbag57
(g73
g59
NtRp2787
(dp2788
g62
(dp2789
sg71
g2699
sg64
(lp2790
g57
(g78
g59
NtRp2791
(dp2792
g62
(dp2793
g82
g83
ssg71
g2787
sg64
(lp2794
S'HTTP_CONNECTION'
p2795
asbag57
(g78
g59
NtRp2796
(dp2797
g62
(dp2798
g89
g90
ssg71
g2787
sg64
(lp2799
S':'
asbag57
(g78
g59
NtRp2800
(dp2801
g62
(dp2802
sg71
g2787
sg64
(lp2803
g57
(g58
g59
NtRp2804
(dp2805
g62
(dp2806
g70
I3
ssg71
g2800
sg64
(lp2807
g1167
asbasbasbag57
(g73
g59
NtRp2808
(dp2809
g62
(dp2810
sg71
g2699
sg64
(lp2811
g57
(g78
g59
NtRp2812
(dp2813
g62
(dp2814
g82
g83
ssg71
g2808
sg64
(lp2815
S'HTTP_COOKIE'
p2816
asbag57
(g78
g59
NtRp2817
(dp2818
g62
(dp2819
g89
g90
ssg71
g2808
sg64
(lp2820
S':'
asbag57
(g78
g59
NtRp2821
(dp2822
g62
(dp2823
sg71
g2808
sg64
(lp2824
g57
(g58
g59
NtRp2825
(dp2826
g62
(dp2827
g70
I3
ssg71
g2821
sg64
(lp2828
g1189
asbasbasbag57
(g73
g59
NtRp2829
(dp2830
g62
(dp2831
sg71
g2699
sg64
(lp2832
g57
(g78
g59
NtRp2833
(dp2834
g62
(dp2835
g82
g83
ssg71
g2829
sg64
(lp2836
S'HTTP_HOST'
p2837
asbag57
(g78
g59
NtRp2838
(dp2839
g62
(dp2840
g89
g90
ssg71
g2829
sg64
(lp2841
S':'
asbag57
(g78
g59
NtRp2842
(dp2843
g62
(dp2844
sg71
g2829
sg64
(lp2845
g57
(g58
g59
NtRp2846
(dp2847
g62
(dp2848
g70
I3
ssg71
g2842
sg64
(lp2849
g1211
asbasbasbag57
(g73
g59
NtRp2850
(dp2851
g62
(dp2852
sg71
g2699
sg64
(lp2853
g57
(g78
g59
NtRp2854
(dp2855
g62
(dp2856
g82
g83
ssg71
g2850
sg64
(lp2857
S'HTTP_REFERER'
p2858
asbag57
(g78
g59
NtRp2859
(dp2860
g62
(dp2861
g89
g90
ssg71
g2850
sg64
(lp2862
S':'
asbag57
(g78
g59
NtRp2863
(dp2864
g62
(dp2865
sg71
g2850
sg64
(lp2866
g57
(g58
g59
NtRp2867
(dp2868
g62
(dp2869
g70
I3
ssg71
g2863
sg64
(lp2870
g1233
asbasbasbag57
(g73
g59
NtRp2871
(dp2872
g62
(dp2873
sg71
g2699
sg64
(lp2874
g57
(g78
g59
NtRp2875
(dp2876
g62
(dp2877
g82
g83
ssg71
g2871
sg64
(lp2878
S'HTTP_USER_AGENT'
p2879
asbag57
(g78
g59
NtRp2880
(dp2881
g62
(dp2882
g89
g90
ssg71
g2871
sg64
(lp2883
S':'
asbag57
(g78
g59
NtRp2884
(dp2885
g62
(dp2886
sg71
g2871
sg64
(lp2887
g57
(g58
g59
NtRp2888
(dp2889
g62
(dp2890
g70
I3
ssg71
g2884
sg64
(lp2891
g1255
asbasbasbag57
(g73
g59
NtRp2892
(dp2893
g62
(dp2894
sg71
g2699
sg64
(lp2895
g57
(g78
g59
NtRp2896
(dp2897
g62
(dp2898
g82
g83
ssg71
g2892
sg64
(lp2899
S'PATH_INFO'
p2900
asbag57
(g78
g59
NtRp2901
(dp2902
g62
(dp2903
g89
g90
ssg71
g2892
sg64
(lp2904
S':'
asbag57
(g78
g59
NtRp2905
(dp2906
g62
(dp2907
sg71
g2892
sg64
(lp2908
g57
(g58
g59
NtRp2909
(dp2910
g62
(dp2911
g70
I3
ssg71
g2905
sg64
(lp2912
g1409
asbasbasbag57
(g73
g59
NtRp2913
(dp2914
g62
(dp2915
sg71
g2699
sg64
(lp2916
g57
(g78
g59
NtRp2917
(dp2918
g62
(dp2919
g82
g83
ssg71
g2913
sg64
(lp2920
S'QUERY_STRING'
p2921
asbag57
(g78
g59
NtRp2922
(dp2923
g62
(dp2924
g89
g90
ssg71
g2913
sg64
(lp2925
S':'
asbag57
(g78
g59
NtRp2926
(dp2927
g62
(dp2928
sg71
g2913
sg64
(lp2929
g57
(g58
g59
NtRp2930
(dp2931
g62
(dp2932
g70
I3
ssg71
g2926
sg64
(lp2933
g1431
asbasbasbag57
(g73
g59
NtRp2934
(dp2935
g62
(dp2936
sg71
g2699
sg64
(lp2937
g57
(g78
g59
NtRp2938
(dp2939
g62
(dp2940
g82
g83
ssg71
g2934
sg64
(lp2941
S'REMOTE_ADDR'
p2942
asbag57
(g78
g59
NtRp2943
(dp2944
g62
(dp2945
g89
g90
ssg71
g2934
sg64
(lp2946
S':'
asbag57
(g78
g59
NtRp2947
(dp2948
g62
(dp2949
sg71
g2934
sg64
(lp2950
g57
(g58
g59
NtRp2951
(dp2952
g62
(dp2953
g70
I3
ssg71
g2947
sg64
(lp2954
g263
asbasbasbag57
(g73
g59
NtRp2955
(dp2956
g62
(dp2957
sg71
g2699
sg64
(lp2958
g57
(g78
g59
NtRp2959
(dp2960
g62
(dp2961
g82
g83
ssg71
g2955
sg64
(lp2962
S'REMOTE_PORT'
p2963
asbag57
(g78
g59
NtRp2964
(dp2965
g62
(dp2966
g89
g90
ssg71
g2955
sg64
(lp2967
S':'
asbag57
(g78
g59
NtRp2968
(dp2969
g62
(dp2970
sg71
g2955
sg64
(lp2971
g57
(g58
g59
NtRp2972
(dp2973
g62
(dp2974
g70
I3
ssg71
g2968
sg64
(lp2975
g1474
asbasbasbag57
(g73
g59
NtRp2976
(dp2977
g62
(dp2978
sg71
g2699
sg64
(lp2979
g57
(g78
g59
NtRp2980
(dp2981
g62
(dp2982
g82
g83
ssg71
g2976
sg64
(lp2983
S'REQUEST_METHOD'
p2984
asbag57
(g78
g59
NtRp2985
(dp2986
g62
(dp2987
g89
g90
ssg71
g2976
sg64
(lp2988
S':'
asbag57
(g78
g59
NtRp2989
(dp2990
g62
(dp2991
sg71
g2976
sg64
(lp2992
g57
(g58
g59
NtRp2993
(dp2994
g62
(dp2995
g70
I3
ssg71
g2989
sg64
(lp2996
g1496
asbasbasbag57
(g73
g59
NtRp2997
(dp2998
g62
(dp2999
sg71
g2699
sg64
(lp3000
g57
(g78
g59
NtRp3001
(dp3002
g62
(dp3003
g82
g83
ssg71
g2997
sg64
(lp3004
S'REQUEST_URI'
p3005
asbag57
(g78
g59
NtRp3006
(dp3007
g62
(dp3008
g89
g90
ssg71
g2997
sg64
(lp3009
S':'
asbag57
(g78
g59
NtRp3010
(dp3011
g62
(dp3012
sg71
g2997
sg64
(lp3013
g57
(g58
g59
NtRp3014
(dp3015
g62
(dp3016
g70
I3
ssg71
g3010
sg64
(lp3017
g1518
asbasbasbag57
(g73
g59
NtRp3018
(dp3019
g62
(dp3020
sg71
g2699
sg64
(lp3021
g57
(g78
g59
NtRp3022
(dp3023
g62
(dp3024
g82
g83
ssg71
g3018
sg64
(lp3025
S'SCRIPT_NAME'
p3026
asbag57
(g78
g59
NtRp3027
(dp3028
g62
(dp3029
g89
g90
ssg71
g3018
sg64
(lp3030
S':'
asbag57
(g78
g59
NtRp3031
(dp3032
g62
(dp3033
sg71
g3018
sg64
(lp3034
g57
(g58
g59
NtRp3035
(dp3036
g62
(dp3037
g70
I3
ssg71
g3031
sg64
(lp3038
S''
asbasbasbag57
(g73
g59
NtRp3039
(dp3040
g62
(dp3041
sg71
g2699
sg64
(lp3042
g57
(g78
g59
NtRp3043
(dp3044
g62
(dp3045
g82
g83
ssg71
g3039
sg64
(lp3046
S'SERVER_NAME'
p3047
asbag57
(g78
g59
NtRp3048
(dp3049
g62
(dp3050
g89
g90
ssg71
g3039
sg64
(lp3051
S':'
asbag57
(g78
g59
NtRp3052
(dp3053
g62
(dp3054
sg71
g3039
sg64
(lp3055
g57
(g58
g59
NtRp3056
(dp3057
g62
(dp3058
g70
I3
ssg71
g3052
sg64
(lp3059
g1561
asbasbasbag57
(g73
g59
NtRp3060
(dp3061
g62
(dp3062
sg71
g2699
sg64
(lp3063
g57
(g78
g59
NtRp3064
(dp3065
g62
(dp3066
g82
g83
ssg71
g3060
sg64
(lp3067
S'SERVER_PORT'
p3068
asbag57
(g78
g59
NtRp3069
(dp3070
g62
(dp3071
g89
g90
ssg71
g3060
sg64
(lp3072
S':'
asbag57
(g78
g59
NtRp3073
(dp3074
g62
(dp3075
sg71
g3060
sg64
(lp3076
g57
(g58
g59
NtRp3077
(dp3078
g62
(dp3079
g70
I3
ssg71
g3073
sg64
(lp3080
g1583
asbasbasbag57
(g73
g59
NtRp3081
(dp3082
g62
(dp3083
sg71
g2699
sg64
(lp3084
g57
(g78
g59
NtRp3085
(dp3086
g62
(dp3087
g82
g83
ssg71
g3081
sg64
(lp3088
S'SERVER_PROTOCOL'
p3089
asbag57
(g78
g59
NtRp3090
(dp3091
g62
(dp3092
g89
g90
ssg71
g3081
sg64
(lp3093
S':'
asbag57
(g78
g59
NtRp3094
(dp3095
g62
(dp3096
sg71
g3081
sg64
(lp3097
g57
(g58
g59
NtRp3098
(dp3099
g62
(dp3100
g70
I3
ssg71
g3094
sg64
(lp3101
g1605
asbasbasbag57
(g73
g59
NtRp3102
(dp3103
g62
(dp3104
sg71
g2699
sg64
(lp3105
g57
(g78
g59
NtRp3106
(dp3107
g62
(dp3108
g82
g83
ssg71
g3102
sg64
(lp3109
S'SERVER_SOFTWARE'
p3110
asbag57
(g78
g59
NtRp3111
(dp3112
g62
(dp3113
g89
g90
ssg71
g3102
sg64
(lp3114
S':'
asbag57
(g78
g59
NtRp3115
(dp3116
g62
(dp3117
sg71
g3102
sg64
(lp3118
g57
(g58
g59
NtRp3119
(dp3120
g62
(dp3121
g70
I3
ssg71
g3115
sg64
(lp3122
g1627
asbasbasbag57
(g73
g59
NtRp3123
(dp3124
g62
(dp3125
sg71
g2699
sg64
(lp3126
g57
(g78
g59
NtRp3127
(dp3128
g62
(dp3129
g82
g83
ssg71
g3123
sg64
(lp3130
S'wsgi.errors'
p3131
asbag57
(g78
g59
NtRp3132
(dp3133
g62
(dp3134
g89
g90
ssg71
g3123
sg64
(lp3135
S':'
asbag57
(g78
g59
NtRp3136
(dp3137
g62
(dp3138
sg71
g3123
sg64
(lp3139
g57
(g58
g59
NtRp3140
(dp3141
g62
(dp3142
g70
I3
ssg71
g3136
sg64
(lp3143
S"<open file '<stderr>', mode 'w' at 0xb729e0d0>"
p3144
asbasbasbag57
(g73
g59
NtRp3145
(dp3146
g62
(dp3147
sg71
g2699
sg64
(lp3148
g57
(g78
g59
NtRp3149
(dp3150
g62
(dp3151
g82
g83
ssg71
g3145
sg64
(lp3152
S'wsgi.file_wrapper'
p3153
asbag57
(g78
g59
NtRp3154
(dp3155
g62
(dp3156
g89
g90
ssg71
g3145
sg64
(lp3157
S':'
asbag57
(g78
g59
NtRp3158
(dp3159
g62
(dp3160
sg71
g3145
sg64
(lp3161
g57
(g58
g59
NtRp3162
(dp3163
g62
(dp3164
g70
I3
ssg71
g3158
sg64
(lp3165
S'<class wsgiref.util.FileWrapper at 0x88bfb6c>'
p3166
asbasbasbag57
(g73
g59
NtRp3167
(dp3168
g62
(dp3169
sg71
g2699
sg64
(lp3170
g57
(g78
g59
NtRp3171
(dp3172
g62
(dp3173
g82
g83
ssg71
g3167
sg64
(lp3174
S'wsgi.input'
p3175
asbag57
(g78
g59
NtRp3176
(dp3177
g62
(dp3178
g89
g90
ssg71
g3167
sg64
(lp3179
S':'
asbag57
(g78
g59
NtRp3180
(dp3181
g62
(dp3182
sg71
g3167
sg64
(lp3183
g57
(g58
g59
NtRp3184
(dp3185
g62
(dp3186
g70
I3
ssg71
g3180
sg64
(lp3187
S'<cStringIO.StringO object at 0xb0471140>'
p3188
asbasbasbag57
(g73
g59
NtRp3189
(dp3190
g62
(dp3191
sg71
g2699
sg64
(lp3192
g57
(g78
g59
NtRp3193
(dp3194
g62
(dp3195
g82
g83
ssg71
g3189
sg64
(lp3196
S'wsgi.multiprocess'
p3197
asbag57
(g78
g59
NtRp3198
(dp3199
g62
(dp3200
g89
g90
ssg71
g3189
sg64
(lp3201
S':'
asbag57
(g78
g59
NtRp3202
(dp3203
g62
(dp3204
sg71
g3189
sg64
(lp3205
g57
(g58
g59
NtRp3206
(dp3207
g62
(dp3208
g70
I3
ssg71
g3202
sg64
(lp3209
g100
asbasbasbag57
(g73
g59
NtRp3210
(dp3211
g62
(dp3212
sg71
g2699
sg64
(lp3213
g57
(g78
g59
NtRp3214
(dp3215
g62
(dp3216
g82
g83
ssg71
g3210
sg64
(lp3217
S'wsgi.multithread'
p3218
asbag57
(g78
g59
NtRp3219
(dp3220
g62
(dp3221
g89
g90
ssg71
g3210
sg64
(lp3222
S':'
asbag57
(g78
g59
NtRp3223
(dp3224
g62
(dp3225
sg71
g3210
sg64
(lp3226
g57
(g58
g59
NtRp3227
(dp3228
g62
(dp3229
g70
I3
ssg71
g3223
sg64
(lp3230
g1844
asbasbasbag57
(g73
g59
NtRp3231
(dp3232
g62
(dp3233
sg71
g2699
sg64
(lp3234
g57
(g78
g59
NtRp3235
(dp3236
g62
(dp3237
g82
g83
ssg71
g3231
sg64
(lp3238
S'wsgi.run_once'
p3239
asbag57
(g78
g59
NtRp3240
(dp3241
g62
(dp3242
g89
g90
ssg71
g3231
sg64
(lp3243
S':'
asbag57
(g78
g59
NtRp3244
(dp3245
g62
(dp3246
sg71
g3231
sg64
(lp3247
g57
(g58
g59
NtRp3248
(dp3249
g62
(dp3250
g70
I3
ssg71
g3244
sg64
(lp3251
g100
asbasbasbag57
(g73
g59
NtRp3252
(dp3253
g62
(dp3254
sg71
g2699
sg64
(lp3255
g57
(g78
g59
NtRp3256
(dp3257
g62
(dp3258
g82
g83
ssg71
g3252
sg64
(lp3259
S'wsgi.url_scheme'
p3260
asbag57
(g78
g59
NtRp3261
(dp3262
g62
(dp3263
g89
g90
ssg71
g3252
sg64
(lp3264
S':'
asbag57
(g78
g59
NtRp3265
(dp3266
g62
(dp3267
sg71
g3252
sg64
(lp3268
g57
(g58
g59
NtRp3269
(dp3270
g62
(dp3271
g70
I3
ssg71
g3265
sg64
(lp3272
g1887
asbasbasbag57
(g73
g59
NtRp3273
(dp3274
g62
(dp3275
sg71
g2699
sg64
(lp3276
g57
(g78
g59
NtRp3277
(dp3278
g62
(dp3279
g82
g83
ssg71
g3273
sg64
(lp3280
S'wsgi.version'
p3281
asbag57
(g78
g59
NtRp3282
(dp3283
g62
(dp3284
g89
g90
ssg71
g3273
sg64
(lp3285
S':'
asbag57
(g78
g59
NtRp3286
(dp3287
g62
(dp3288
sg71
g3273
sg64
(lp3289
g57
(g58
g59
NtRp3290
(dp3291
g62
(dp3292
g70
I3
ssg71
g3286
sg64
(lp3293
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3294
(lp3295
(dp3296
S'file'
p3297
S'/home/anil/Downloads/web2py/gluon/restricted.py'
p3298
sS'dump'
p3299
(dp3300
S'environment'
p3301
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3302
sS'ccode'
p3303
S'<code object <module> at 0x9070728, file "/home/...EV_bootstrap_ch/controllers/default.py", line 16>'
p3304
ssS'lnum'
p3305
I212
sS'lines'
p3306
(dp3307
I207
S'    try:'
p3308
sI208
S'        if isinstance(code, types.CodeType):'
p3309
sI209
S'            ccode = code'
p3310
sI210
S'        else:'
p3311
sI211
S'            ccode = compile2(code, layer)'
p3312
sI212
S'        exec ccode in environment'
p3313
sI213
S'    except HTTP:'
p3314
sI214
S'        raise'
p3315
sI215
S'    except RestrictedError:'
p3316
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3317
ssS'call'
p3318
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3319
sS'func'
p3320
S'restricted'
p3321
sa(dp3322
g3297
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3323
sg3299
(dp3324
sg3305
I1148
sg3306
(dp3325
I1137
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3326
sI1138
S'   """ per sample . takes id of the sample as the input """'
p3327
sI1139
S'   sid = request.args(0)'
p3328
sI1140
S'   sample = db(db.sample.id == sid).select().first()'
p3329
sI1141
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3330
sI1142
S'   form = SQLFORM(db.sample_files)'
p3331
sI1143
S'   form.vars.sample = sid'
p3332
sI1144
S'   return locals()'
p3333
sI1145
S''
sI1146
S''
ssg3318
S'()'
p3334
sg3320
S'<module>'
p3335
sa(dp3336
g3297
S'/home/anil/Downloads/web2py/gluon/globals.py'
p3337
sg3299
(dp3338
S'self'
p3339
S'undefined'
p3340
sS'f'
S'<function list_all_dev_projects>'
p3341
ssg3305
I193
sg3306
(dp3342
I192
S'        self._vars = None'
p3343
sI193
S'        self._caller = lambda f: f()'
p3344
sI194
S'        self._view_environment = None'
p3345
sI195
S'        self._custom_commit = None'
p3346
sI196
S'        self._custom_rollback = None'
p3347
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3348
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3349
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3350
sI191
S"        self.delimiters = ('{{', '}}')"
p3351
ssg3318
S'(f=<function list_all_dev_projects>)'
p3352
sg3320
S'<lambda>'
p3353
sa(dp3354
g3297
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3355
sg3299
(dp3356
S'auth.user.id'
p3357
g3340
sS'auth.user'
p3358
S'None'
p3359
sS'global auth'
p3360
S'<gluon.tools.Auth object>'
p3361
sS'db.sample.experimentalist.default'
p3362
S'None'
p3363
sS'global db'
p3364
S'<DAL uri="sqlite://storage.sqlite">'
p3365
sS'db.sample'
p3366
S'<Table sample (id,parent,experimentalist,name,co...iment,working_status,replica,publication_status)>'
p3367
sS'db.sample.experimentalist'
p3368
S'<gluon.dal.Field object>'
p3369
ssg3305
I292
sg3306
(dp3370
I288
S'def list_all_dev_projects():'
p3371
sI289
S'    response.menu = ['
p3372
sI290
S"    (T('Home'), False, URL('default','list_all_projects'), [])"
p3373
sI291
S'    ]'
p3374
sI292
S'    db.sample.experimentalist.default=auth.user.id'
p3375
sI293
S'    db.sample.experiment.writable = False'
p3376
sI294
S'    q1 = (db.project.project_status ==  0)'
p3377
sI295
S'    q2 = (db.sample.experimentalist == auth.user.id)'
p3378
sI296
S"    ck = {'project':q1,'sample':q2}"
p3379
sI287
S''
ssg3318
S'()'
p3380
sg3320
S'list_all_dev_projects'
p3381
sasS'pyver'
p3382
S'Python 2.7.3: /usr/bin/python'
p3383
sS'session'
p3384
g57
(g58
g59
NtRp3385
(dp3386
g62
(dp3387
sg64
(lp3388
g57
(g66
g59
NtRp3389
(dp3390
g62
(dp3391
g70
I5
ssg71
Nsg64
(lp3392
g57
(g73
g59
NtRp3393
(dp3394
g62
(dp3395
sg71
g3389
sg64
(lp3396
g57
(g78
g59
NtRp3397
(dp3398
g62
(dp3399
g82
g83
ssg71
g3393
sg64
(lp3400
S'flash'
p3401
asbag57
(g78
g59
NtRp3402
(dp3403
g62
(dp3404
g89
g90
ssg71
g3393
sg64
(lp3405
S':'
asbag57
(g78
g59
NtRp3406
(dp3407
g62
(dp3408
sg71
g3393
sg64
(lp3409
g57
(g58
g59
NtRp3410
(dp3411
g62
(dp3412
g70
I5
ssg71
g3406
sg64
(lp3413
S'None'
p3414
asbasbasbasbasbsS'etype'
p3415
S"<type 'exceptions.AttributeError'>"
p3416
sS'date'
p3417
S'Mon Mar  4 15:55:46 2013'
p3418
sS'response'
p3419
g57
(g58
g59
NtRp3420
(dp3421
g62
(dp3422
sg64
(lp3423
g57
(g66
g59
NtRp3424
(dp3425
g62
(dp3426
g70
I5
ssg71
Nsg64
(lp3427
g57
(g73
g59
NtRp3428
(dp3429
g62
(dp3430
sg71
g3424
sg64
(lp3431
g57
(g78
g59
NtRp3432
(dp3433
g62
(dp3434
g82
g83
ssg71
g3428
sg64
(lp3435
g206
asbag57
(g78
g59
NtRp3436
(dp3437
g62
(dp3438
g89
g90
ssg71
g3428
sg64
(lp3439
S':'
asbag57
(g78
g59
NtRp3440
(dp3441
g62
(dp3442
sg71
g3428
sg64
(lp3443
g57
(g58
g59
NtRp3444
(dp3445
g62
(dp3446
g70
I5
ssg71
g3440
sg64
(lp3447
S'<cStringIO.StringO object at 0xad16e9a0>'
p3448
asbasbasbag57
(g73
g59
NtRp3449
(dp3450
g62
(dp3451
sg71
g3424
sg64
(lp3452
g57
(g78
g59
NtRp3453
(dp3454
g62
(dp3455
g82
g83
ssg71
g3449
sg64
(lp3456
g294
asbag57
(g78
g59
NtRp3457
(dp3458
g62
(dp3459
g89
g90
ssg71
g3449
sg64
(lp3460
S':'
asbag57
(g78
g59
NtRp3461
(dp3462
g62
(dp3463
sg71
g3449
sg64
(lp3464
g57
(g58
g59
NtRp3465
(dp3466
g62
(dp3467
g70
I5
ssg71
g3461
sg64
(lp3468
g57
(g66
g59
NtRp3469
(dp3470
g62
(dp3471
g70
I4
ssg71
Nsg64
(lp3472
g57
(g73
g59
NtRp3473
(dp3474
g62
(dp3475
sg71
g3469
sg64
(lp3476
g57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g82
g83
ssg71
g3473
sg64
(lp3480
S'session_id_dev_bootstrap_ch'
p3481
asbag57
(g78
g59
NtRp3482
(dp3483
g62
(dp3484
g89
g90
ssg71
g3473
sg64
(lp3485
S':'
asbag57
(g78
g59
NtRp3486
(dp3487
g62
(dp3488
sg71
g3473
sg64
(lp3489
g57
(g58
g59
NtRp3490
(dp3491
g62
(dp3492
g70
I4
ssg71
g3486
sg64
(lp3493
g526
ag57
(g66
g59
NtRp3494
(dp3495
g62
(dp3496
g70
I3
ssg71
Nsg64
(lp3497
g57
(g73
g59
NtRp3498
(dp3499
g62
(dp3500
sg71
g3494
sg64
(lp3501
g57
(g78
g59
NtRp3502
(dp3503
g62
(dp3504
g82
g83
ssg71
g3498
sg64
(lp3505
g345
asbag57
(g78
g59
NtRp3506
(dp3507
g62
(dp3508
g89
g90
ssg71
g3498
sg64
(lp3509
S':'
asbag57
(g78
g59
NtRp3510
(dp3511
g62
(dp3512
sg71
g3498
sg64
(lp3513
g57
(g58
g59
NtRp3514
(dp3515
g62
(dp3516
g70
I3
ssg71
g3510
sg64
(lp3517
S''
asbasbasbag57
(g73
g59
NtRp3518
(dp3519
g62
(dp3520
sg71
g3494
sg64
(lp3521
g57
(g78
g59
NtRp3522
(dp3523
g62
(dp3524
g82
g83
ssg71
g3518
sg64
(lp3525
g366
asbag57
(g78
g59
NtRp3526
(dp3527
g62
(dp3528
g89
g90
ssg71
g3518
sg64
(lp3529
S':'
asbag57
(g78
g59
NtRp3530
(dp3531
g62
(dp3532
sg71
g3518
sg64
(lp3533
g57
(g58
g59
NtRp3534
(dp3535
g62
(dp3536
g70
I3
ssg71
g3530
sg64
(lp3537
S''
asbasbasbag57
(g73
g59
NtRp3538
(dp3539
g62
(dp3540
sg71
g3494
sg64
(lp3541
g57
(g78
g59
NtRp3542
(dp3543
g62
(dp3544
g82
g83
ssg71
g3538
sg64
(lp3545
g387
asbag57
(g78
g59
NtRp3546
(dp3547
g62
(dp3548
g89
g90
ssg71
g3538
sg64
(lp3549
S':'
asbag57
(g78
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3538
sg64
(lp3553
g57
(g58
g59
NtRp3554
(dp3555
g62
(dp3556
g70
I3
ssg71
g3550
sg64
(lp3557
S''
asbasbasbag57
(g73
g59
NtRp3558
(dp3559
g62
(dp3560
sg71
g3494
sg64
(lp3561
g57
(g78
g59
NtRp3562
(dp3563
g62
(dp3564
g82
g83
ssg71
g3558
sg64
(lp3565
g408
asbag57
(g78
g59
NtRp3566
(dp3567
g62
(dp3568
g89
g90
ssg71
g3558
sg64
(lp3569
S':'
asbag57
(g78
g59
NtRp3570
(dp3571
g62
(dp3572
sg71
g3558
sg64
(lp3573
g57
(g58
g59
NtRp3574
(dp3575
g62
(dp3576
g70
I3
ssg71
g3570
sg64
(lp3577
S''
asbasbasbag57
(g73
g59
NtRp3578
(dp3579
g62
(dp3580
sg71
g3494
sg64
(lp3581
g57
(g78
g59
NtRp3582
(dp3583
g62
(dp3584
g82
g83
ssg71
g3578
sg64
(lp3585
g429
asbag57
(g78
g59
NtRp3586
(dp3587
g62
(dp3588
g89
g90
ssg71
g3578
sg64
(lp3589
S':'
asbag57
(g78
g59
NtRp3590
(dp3591
g62
(dp3592
sg71
g3578
sg64
(lp3593
g57
(g58
g59
NtRp3594
(dp3595
g62
(dp3596
g70
I3
ssg71
g3590
sg64
(lp3597
S''
asbasbasbag57
(g73
g59
NtRp3598
(dp3599
g62
(dp3600
sg71
g3494
sg64
(lp3601
g57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
g82
g83
ssg71
g3598
sg64
(lp3605
g450
asbag57
(g78
g59
NtRp3606
(dp3607
g62
(dp3608
g89
g90
ssg71
g3598
sg64
(lp3609
S':'
asbag57
(g78
g59
NtRp3610
(dp3611
g62
(dp3612
sg71
g3598
sg64
(lp3613
g57
(g58
g59
NtRp3614
(dp3615
g62
(dp3616
g70
I3
ssg71
g3610
sg64
(lp3617
S'/'
asbasbasbag57
(g73
g59
NtRp3618
(dp3619
g62
(dp3620
sg71
g3494
sg64
(lp3621
g57
(g78
g59
NtRp3622
(dp3623
g62
(dp3624
g82
g83
ssg71
g3618
sg64
(lp3625
g471
asbag57
(g78
g59
NtRp3626
(dp3627
g62
(dp3628
g89
g90
ssg71
g3618
sg64
(lp3629
S':'
asbag57
(g78
g59
NtRp3630
(dp3631
g62
(dp3632
sg71
g3618
sg64
(lp3633
g57
(g58
g59
NtRp3634
(dp3635
g62
(dp3636
g70
I3
ssg71
g3630
sg64
(lp3637
S''
asbasbasbag57
(g73
g59
NtRp3638
(dp3639
g62
(dp3640
sg71
g3494
sg64
(lp3641
g57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
g82
g83
ssg71
g3638
sg64
(lp3645
g492
asbag57
(g78
g59
NtRp3646
(dp3647
g62
(dp3648
g89
g90
ssg71
g3638
sg64
(lp3649
S':'
asbag57
(g78
g59
NtRp3650
(dp3651
g62
(dp3652
sg71
g3638
sg64
(lp3653
g57
(g58
g59
NtRp3654
(dp3655
g62
(dp3656
g70
I3
ssg71
g3650
sg64
(lp3657
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3658
(dp3659
g62
(dp3660
sg71
g3424
sg64
(lp3661
g57
(g78
g59
NtRp3662
(dp3663
g62
(dp3664
g82
g83
ssg71
g3658
sg64
(lp3665
S'delimiters'
p3666
asbag57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g89
g90
ssg71
g3658
sg64
(lp3670
S':'
asbag57
(g78
g59
NtRp3671
(dp3672
g62
(dp3673
sg71
g3658
sg64
(lp3674
g57
(g58
g59
NtRp3675
(dp3676
g62
(dp3677
g70
I5
ssg71
g3671
sg64
(lp3678
g57
(g66
g59
NtRp3679
(dp3680
g62
(dp3681
g70
I4
ssg71
Nsg64
(lp3682
g57
(g73
g59
NtRp3683
(dp3684
g62
(dp3685
sg71
g3679
sg64
(lp3686
g57
(g78
g59
NtRp3687
(dp3688
g62
(dp3689
sg71
g3683
sg64
(lp3690
g57
(g58
g59
NtRp3691
(dp3692
g62
(dp3693
g70
I4
ssg71
g3687
sg64
(lp3694
S'{{'
p3695
asbasbasbag57
(g73
g59
NtRp3696
(dp3697
g62
(dp3698
sg71
g3679
sg64
(lp3699
g57
(g78
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3696
sg64
(lp3703
g57
(g58
g59
NtRp3704
(dp3705
g62
(dp3706
g70
I4
ssg71
g3700
sg64
(lp3707
S'}}'
p3708
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3709
(dp3710
g62
(dp3711
sg71
g3424
sg64
(lp3712
g57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
g82
g83
ssg71
g3709
sg64
(lp3716
S'files'
p3717
asbag57
(g78
g59
NtRp3718
(dp3719
g62
(dp3720
g89
g90
ssg71
g3709
sg64
(lp3721
S':'
asbag57
(g78
g59
NtRp3722
(dp3723
g62
(dp3724
sg71
g3709
sg64
(lp3725
g57
(g58
g59
NtRp3726
(dp3727
g62
(dp3728
g70
I5
ssg71
g3722
sg64
(lp3729
g57
(g66
g59
NtRp3730
(dp3731
g62
(dp3732
g70
I4
ssg71
Nsg64
(lp3733
g57
(g73
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3730
sg64
(lp3737
g57
(g78
g59
NtRp3738
(dp3739
g62
(dp3740
sg71
g3734
sg64
(lp3741
g57
(g58
g59
NtRp3742
(dp3743
g62
(dp3744
g70
I4
ssg71
g3738
sg64
(lp3745
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p3746
asbasbasbag57
(g73
g59
NtRp3747
(dp3748
g62
(dp3749
sg71
g3730
sg64
(lp3750
g57
(g78
g59
NtRp3751
(dp3752
g62
(dp3753
sg71
g3747
sg64
(lp3754
g57
(g58
g59
NtRp3755
(dp3756
g62
(dp3757
g70
I4
ssg71
g3751
sg64
(lp3758
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p3759
asbasbasbag57
(g73
g59
NtRp3760
(dp3761
g62
(dp3762
sg71
g3730
sg64
(lp3763
g57
(g78
g59
NtRp3764
(dp3765
g62
(dp3766
sg71
g3760
sg64
(lp3767
g57
(g58
g59
NtRp3768
(dp3769
g62
(dp3770
g70
I4
ssg71
g3764
sg64
(lp3771
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p3772
asbasbasbag57
(g73
g59
NtRp3773
(dp3774
g62
(dp3775
sg71
g3730
sg64
(lp3776
g57
(g78
g59
NtRp3777
(dp3778
g62
(dp3779
sg71
g3773
sg64
(lp3780
g57
(g58
g59
NtRp3781
(dp3782
g62
(dp3783
g70
I4
ssg71
g3777
sg64
(lp3784
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p3785
asbasbasbag57
(g73
g59
NtRp3786
(dp3787
g62
(dp3788
sg71
g3730
sg64
(lp3789
g57
(g78
g59
NtRp3790
(dp3791
g62
(dp3792
sg71
g3786
sg64
(lp3793
g57
(g58
g59
NtRp3794
(dp3795
g62
(dp3796
g70
I4
ssg71
g3790
sg64
(lp3797
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p3798
asbasbasbag57
(g73
g59
NtRp3799
(dp3800
g62
(dp3801
sg71
g3730
sg64
(lp3802
g57
(g78
g59
NtRp3803
(dp3804
g62
(dp3805
sg71
g3799
sg64
(lp3806
g57
(g58
g59
NtRp3807
(dp3808
g62
(dp3809
g70
I4
ssg71
g3803
sg64
(lp3810
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p3811
asbasbasbag57
(g73
g59
NtRp3812
(dp3813
g62
(dp3814
sg71
g3730
sg64
(lp3815
g57
(g78
g59
NtRp3816
(dp3817
g62
(dp3818
sg71
g3812
sg64
(lp3819
g57
(g58
g59
NtRp3820
(dp3821
g62
(dp3822
g70
I4
ssg71
g3816
sg64
(lp3823
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p3824
asbasbasbag57
(g73
g59
NtRp3825
(dp3826
g62
(dp3827
sg71
g3730
sg64
(lp3828
g57
(g78
g59
NtRp3829
(dp3830
g62
(dp3831
sg71
g3825
sg64
(lp3832
g57
(g58
g59
NtRp3833
(dp3834
g62
(dp3835
g70
I4
ssg71
g3829
sg64
(lp3836
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p3837
asbasbasbag57
(g73
g59
NtRp3838
(dp3839
g62
(dp3840
sg71
g3730
sg64
(lp3841
g57
(g78
g59
NtRp3842
(dp3843
g62
(dp3844
sg71
g3838
sg64
(lp3845
g57
(g58
g59
NtRp3846
(dp3847
g62
(dp3848
g70
I4
ssg71
g3842
sg64
(lp3849
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p3850
asbasbasbag57
(g73
g59
NtRp3851
(dp3852
g62
(dp3853
sg71
g3730
sg64
(lp3854
g57
(g78
g59
NtRp3855
(dp3856
g62
(dp3857
sg71
g3851
sg64
(lp3858
g57
(g58
g59
NtRp3859
(dp3860
g62
(dp3861
g70
I4
ssg71
g3855
sg64
(lp3862
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p3863
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3864
(dp3865
g62
(dp3866
sg71
g3424
sg64
(lp3867
g57
(g78
g59
NtRp3868
(dp3869
g62
(dp3870
g82
g83
ssg71
g3864
sg64
(lp3871
S'flash'
p3872
asbag57
(g78
g59
NtRp3873
(dp3874
g62
(dp3875
g89
g90
ssg71
g3864
sg64
(lp3876
S':'
asbag57
(g78
g59
NtRp3877
(dp3878
g62
(dp3879
sg71
g3864
sg64
(lp3880
g57
(g58
g59
NtRp3881
(dp3882
g62
(dp3883
g70
I5
ssg71
g3877
sg64
(lp3884
S''
asbasbasbag57
(g73
g59
NtRp3885
(dp3886
g62
(dp3887
sg71
g3424
sg64
(lp3888
g57
(g78
g59
NtRp3889
(dp3890
g62
(dp3891
g82
g83
ssg71
g3885
sg64
(lp3892
S'generic_patterns'
p3893
asbag57
(g78
g59
NtRp3894
(dp3895
g62
(dp3896
g89
g90
ssg71
g3885
sg64
(lp3897
S':'
asbag57
(g78
g59
NtRp3898
(dp3899
g62
(dp3900
sg71
g3885
sg64
(lp3901
g57
(g58
g59
NtRp3902
(dp3903
g62
(dp3904
g70
I5
ssg71
g3898
sg64
(lp3905
g57
(g66
g59
NtRp3906
(dp3907
g62
(dp3908
g70
I4
ssg71
Nsg64
(lp3909
g57
(g73
g59
NtRp3910
(dp3911
g62
(dp3912
sg71
g3906
sg64
(lp3913
g57
(g78
g59
NtRp3914
(dp3915
g62
(dp3916
sg71
g3910
sg64
(lp3917
g57
(g58
g59
NtRp3918
(dp3919
g62
(dp3920
g70
I4
ssg71
g3914
sg64
(lp3921
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3922
(dp3923
g62
(dp3924
sg71
g3424
sg64
(lp3925
g57
(g78
g59
NtRp3926
(dp3927
g62
(dp3928
g82
g83
ssg71
g3922
sg64
(lp3929
S'google_analytics_id'
p3930
asbag57
(g78
g59
NtRp3931
(dp3932
g62
(dp3933
g89
g90
ssg71
g3922
sg64
(lp3934
S':'
asbag57
(g78
g59
NtRp3935
(dp3936
g62
(dp3937
sg71
g3922
sg64
(lp3938
g57
(g58
g59
NtRp3939
(dp3940
g62
(dp3941
g70
I5
ssg71
g3935
sg64
(lp3942
S'None'
p3943
asbasbasbag57
(g73
g59
NtRp3944
(dp3945
g62
(dp3946
sg71
g3424
sg64
(lp3947
g57
(g78
g59
NtRp3948
(dp3949
g62
(dp3950
g82
g83
ssg71
g3944
sg64
(lp3951
S'headers'
p3952
asbag57
(g78
g59
NtRp3953
(dp3954
g62
(dp3955
g89
g90
ssg71
g3944
sg64
(lp3956
S':'
asbag57
(g78
g59
NtRp3957
(dp3958
g62
(dp3959
sg71
g3944
sg64
(lp3960
g57
(g58
g59
NtRp3961
(dp3962
g62
(dp3963
g70
I5
ssg71
g3957
sg64
(lp3964
g57
(g66
g59
NtRp3965
(dp3966
g62
(dp3967
g70
I4
ssg71
Nsg64
(lp3968
g57
(g73
g59
NtRp3969
(dp3970
g62
(dp3971
sg71
g3965
sg64
(lp3972
g57
(g78
g59
NtRp3973
(dp3974
g62
(dp3975
g82
g83
ssg71
g3969
sg64
(lp3976
S'X-Powered-By'
p3977
asbag57
(g78
g59
NtRp3978
(dp3979
g62
(dp3980
g89
g90
ssg71
g3969
sg64
(lp3981
S':'
asbag57
(g78
g59
NtRp3982
(dp3983
g62
(dp3984
sg71
g3969
sg64
(lp3985
g57
(g58
g59
NtRp3986
(dp3987
g62
(dp3988
g70
I4
ssg71
g3982
sg64
(lp3989
S'web2py'
p3990
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3991
(dp3992
g62
(dp3993
sg71
g3424
sg64
(lp3994
g57
(g78
g59
NtRp3995
(dp3996
g62
(dp3997
g82
g83
ssg71
g3991
sg64
(lp3998
S'menu'
p3999
asbag57
(g78
g59
NtRp4000
(dp4001
g62
(dp4002
g89
g90
ssg71
g3991
sg64
(lp4003
S':'
asbag57
(g78
g59
NtRp4004
(dp4005
g62
(dp4006
sg71
g3991
sg64
(lp4007
g57
(g58
g59
NtRp4008
(dp4009
g62
(dp4010
g70
I5
ssg71
g4004
sg64
(lp4011
g57
(g66
g59
NtRp4012
(dp4013
g62
(dp4014
g70
I4
ssg71
Nsg64
(lp4015
g57
(g73
g59
NtRp4016
(dp4017
g62
(dp4018
sg71
g4012
sg64
(lp4019
g57
(g78
g59
NtRp4020
(dp4021
g62
(dp4022
sg71
g4016
sg64
(lp4023
g57
(g58
g59
NtRp4024
(dp4025
g62
(dp4026
g70
I4
ssg71
g4020
sg64
(lp4027
g57
(g66
g59
NtRp4028
(dp4029
g62
(dp4030
g70
I3
ssg71
Nsg64
(lp4031
g57
(g73
g59
NtRp4032
(dp4033
g62
(dp4034
sg71
g4028
sg64
(lp4035
g57
(g78
g59
NtRp4036
(dp4037
g62
(dp4038
sg71
g4032
sg64
(lp4039
g57
(g58
g59
NtRp4040
(dp4041
g62
(dp4042
g70
I3
ssg71
g4036
sg64
(lp4043
cgluon.languages
lazyT_unpickle
p4044
(S't\x04\x00\x00\x00Home'
tRp4045
asbasbasbag57
(g73
g59
NtRp4046
(dp4047
g62
(dp4048
sg71
g4028
sg64
(lp4049
g57
(g78
g59
NtRp4050
(dp4051
g62
(dp4052
sg71
g4046
sg64
(lp4053
g57
(g58
g59
NtRp4054
(dp4055
g62
(dp4056
g70
I3
ssg71
g4050
sg64
(lp4057
g100
asbasbasbag57
(g73
g59
NtRp4058
(dp4059
g62
(dp4060
sg71
g4028
sg64
(lp4061
g57
(g78
g59
NtRp4062
(dp4063
g62
(dp4064
sg71
g4058
sg64
(lp4065
g57
(g58
g59
NtRp4066
(dp4067
g62
(dp4068
g70
I3
ssg71
g4062
sg64
(lp4069
S'/DEV_bootstrap_ch/default/list_all_projects'
p4070
asbasbasbag57
(g73
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g4028
sg64
(lp4074
g57
(g78
g59
NtRp4075
(dp4076
g62
(dp4077
sg71
g4071
sg64
(lp4078
g57
(g58
g59
NtRp4079
(dp4080
g62
(dp4081
g70
I3
ssg71
g4075
sg64
(lp4082
g57
(g66
g59
NtRp4083
(dp4084
g62
(dp4085
g70
I2
ssg71
Nsg64
(lp4086
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4087
(dp4088
g62
(dp4089
sg71
g3424
sg64
(lp4090
g57
(g78
g59
NtRp4091
(dp4092
g62
(dp4093
g82
g83
ssg71
g4087
sg64
(lp4094
S'meta'
p4095
asbag57
(g78
g59
NtRp4096
(dp4097
g62
(dp4098
g89
g90
ssg71
g4087
sg64
(lp4099
S':'
asbag57
(g78
g59
NtRp4100
(dp4101
g62
(dp4102
sg71
g4087
sg64
(lp4103
g57
(g58
g59
NtRp4104
(dp4105
g62
(dp4106
g70
I5
ssg71
g4100
sg64
(lp4107
g57
(g66
g59
NtRp4108
(dp4109
g62
(dp4110
g70
I4
ssg71
Nsg64
(lp4111
g57
(g73
g59
NtRp4112
(dp4113
g62
(dp4114
sg71
g4108
sg64
(lp4115
g57
(g78
g59
NtRp4116
(dp4117
g62
(dp4118
g82
g83
ssg71
g4112
sg64
(lp4119
S'author'
p4120
asbag57
(g78
g59
NtRp4121
(dp4122
g62
(dp4123
g89
g90
ssg71
g4112
sg64
(lp4124
S':'
asbag57
(g78
g59
NtRp4125
(dp4126
g62
(dp4127
sg71
g4112
sg64
(lp4128
g57
(g58
g59
NtRp4129
(dp4130
g62
(dp4131
g70
I4
ssg71
g4125
sg64
(lp4132
S'Vikram Pudi <vikram@iiit.ac.in>'
p4133
asbasbasbag57
(g73
g59
NtRp4134
(dp4135
g62
(dp4136
sg71
g4108
sg64
(lp4137
g57
(g78
g59
NtRp4138
(dp4139
g62
(dp4140
g82
g83
ssg71
g4134
sg64
(lp4141
S'copyright'
p4142
asbag57
(g78
g59
NtRp4143
(dp4144
g62
(dp4145
g89
g90
ssg71
g4134
sg64
(lp4146
S':'
asbag57
(g78
g59
NtRp4147
(dp4148
g62
(dp4149
sg71
g4134
sg64
(lp4150
g57
(g58
g59
NtRp4151
(dp4152
g62
(dp4153
g70
I4
ssg71
g4147
sg64
(lp4154
S'Copyright 2011'
p4155
asbasbasbag57
(g73
g59
NtRp4156
(dp4157
g62
(dp4158
sg71
g4108
sg64
(lp4159
g57
(g78
g59
NtRp4160
(dp4161
g62
(dp4162
g82
g83
ssg71
g4156
sg64
(lp4163
S'description'
p4164
asbag57
(g78
g59
NtRp4165
(dp4166
g62
(dp4167
g89
g90
ssg71
g4156
sg64
(lp4168
S':'
asbag57
(g78
g59
NtRp4169
(dp4170
g62
(dp4171
sg71
g4156
sg64
(lp4172
g57
(g58
g59
NtRp4173
(dp4174
g62
(dp4175
g70
I4
ssg71
g4169
sg64
(lp4176
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4177
asbasbasbag57
(g73
g59
NtRp4178
(dp4179
g62
(dp4180
sg71
g4108
sg64
(lp4181
g57
(g78
g59
NtRp4182
(dp4183
g62
(dp4184
g82
g83
ssg71
g4178
sg64
(lp4185
S'generator'
p4186
asbag57
(g78
g59
NtRp4187
(dp4188
g62
(dp4189
g89
g90
ssg71
g4178
sg64
(lp4190
S':'
asbag57
(g78
g59
NtRp4191
(dp4192
g62
(dp4193
sg71
g4178
sg64
(lp4194
g57
(g58
g59
NtRp4195
(dp4196
g62
(dp4197
g70
I4
ssg71
g4191
sg64
(lp4198
S'Web2py Web Framework'
p4199
asbasbasbag57
(g73
g59
NtRp4200
(dp4201
g62
(dp4202
sg71
g4108
sg64
(lp4203
g57
(g78
g59
NtRp4204
(dp4205
g62
(dp4206
g82
g83
ssg71
g4200
sg64
(lp4207
S'keywords'
p4208
asbag57
(g78
g59
NtRp4209
(dp4210
g62
(dp4211
g89
g90
ssg71
g4200
sg64
(lp4212
S':'
asbag57
(g78
g59
NtRp4213
(dp4214
g62
(dp4215
sg71
g4200
sg64
(lp4216
g57
(g58
g59
NtRp4217
(dp4218
g62
(dp4219
g70
I4
ssg71
g4213
sg64
(lp4220
S'web2py, python, metabolome, metabolomics'
p4221
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4222
(dp4223
g62
(dp4224
sg71
g3424
sg64
(lp4225
g57
(g78
g59
NtRp4226
(dp4227
g62
(dp4228
g82
g83
ssg71
g4222
sg64
(lp4229
S'models_to_run'
p4230
asbag57
(g78
g59
NtRp4231
(dp4232
g62
(dp4233
g89
g90
ssg71
g4222
sg64
(lp4234
S':'
asbag57
(g78
g59
NtRp4235
(dp4236
g62
(dp4237
sg71
g4222
sg64
(lp4238
g57
(g58
g59
NtRp4239
(dp4240
g62
(dp4241
g70
I5
ssg71
g4235
sg64
(lp4242
g57
(g66
g59
NtRp4243
(dp4244
g62
(dp4245
g70
I4
ssg71
Nsg64
(lp4246
g57
(g73
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g4243
sg64
(lp4250
g57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4247
sg64
(lp4254
g57
(g58
g59
NtRp4255
(dp4256
g62
(dp4257
g70
I4
ssg71
g4251
sg64
(lp4258
S'^\\w+\\.py$'
p4259
asbasbasbag57
(g73
g59
NtRp4260
(dp4261
g62
(dp4262
sg71
g4243
sg64
(lp4263
g57
(g78
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g4260
sg64
(lp4267
g57
(g58
g59
NtRp4268
(dp4269
g62
(dp4270
g70
I4
ssg71
g4264
sg64
(lp4271
S'^default/\\w+\\.py$'
p4272
asbasbasbag57
(g73
g59
NtRp4273
(dp4274
g62
(dp4275
sg71
g4243
sg64
(lp4276
g57
(g78
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g4273
sg64
(lp4280
g57
(g58
g59
NtRp4281
(dp4282
g62
(dp4283
g70
I4
ssg71
g4277
sg64
(lp4284
S'^default/list_all_dev_projects/\\w+\\.py$'
p4285
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4286
(dp4287
g62
(dp4288
sg71
g3424
sg64
(lp4289
g57
(g78
g59
NtRp4290
(dp4291
g62
(dp4292
g82
g83
ssg71
g4286
sg64
(lp4293
S'postprocessing'
p4294
asbag57
(g78
g59
NtRp4295
(dp4296
g62
(dp4297
g89
g90
ssg71
g4286
sg64
(lp4298
S':'
asbag57
(g78
g59
NtRp4299
(dp4300
g62
(dp4301
sg71
g4286
sg64
(lp4302
g57
(g58
g59
NtRp4303
(dp4304
g62
(dp4305
g70
I5
ssg71
g4299
sg64
(lp4306
g57
(g66
g59
NtRp4307
(dp4308
g62
(dp4309
g70
I4
ssg71
Nsg64
(lp4310
sbasbasbasbag57
(g73
g59
NtRp4311
(dp4312
g62
(dp4313
sg71
g3424
sg64
(lp4314
g57
(g78
g59
NtRp4315
(dp4316
g62
(dp4317
g82
g83
ssg71
g4311
sg64
(lp4318
S'session_cookie_expires'
p4319
asbag57
(g78
g59
NtRp4320
(dp4321
g62
(dp4322
g89
g90
ssg71
g4311
sg64
(lp4323
S':'
asbag57
(g78
g59
NtRp4324
(dp4325
g62
(dp4326
sg71
g4311
sg64
(lp4327
g57
(g58
g59
NtRp4328
(dp4329
g62
(dp4330
g70
I5
ssg71
g4324
sg64
(lp4331
S'None'
p4332
asbasbasbag57
(g73
g59
NtRp4333
(dp4334
g62
(dp4335
sg71
g3424
sg64
(lp4336
g57
(g78
g59
NtRp4337
(dp4338
g62
(dp4339
g82
g83
ssg71
g4333
sg64
(lp4340
S'session_data_name'
p4341
asbag57
(g78
g59
NtRp4342
(dp4343
g62
(dp4344
g89
g90
ssg71
g4333
sg64
(lp4345
S':'
asbag57
(g78
g59
NtRp4346
(dp4347
g62
(dp4348
sg71
g4333
sg64
(lp4349
g57
(g58
g59
NtRp4350
(dp4351
g62
(dp4352
g70
I5
ssg71
g4346
sg64
(lp4353
S'session_data_dev_bootstrap_ch'
p4354
asbasbasbag57
(g73
g59
NtRp4355
(dp4356
g62
(dp4357
sg71
g3424
sg64
(lp4358
g57
(g78
g59
NtRp4359
(dp4360
g62
(dp4361
g82
g83
ssg71
g4355
sg64
(lp4362
S'session_file'
p4363
asbag57
(g78
g59
NtRp4364
(dp4365
g62
(dp4366
g89
g90
ssg71
g4355
sg64
(lp4367
S':'
asbag57
(g78
g59
NtRp4368
(dp4369
g62
(dp4370
sg71
g4355
sg64
(lp4371
g57
(g58
g59
NtRp4372
(dp4373
g62
(dp4374
g70
I5
ssg71
g4368
sg64
(lp4375
S"<open file '/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a', mode 'rb+' at 0xadb7e5f8>"
p4376
asbasbasbag57
(g73
g59
NtRp4377
(dp4378
g62
(dp4379
sg71
g3424
sg64
(lp4380
g57
(g78
g59
NtRp4381
(dp4382
g62
(dp4383
g82
g83
ssg71
g4377
sg64
(lp4384
S'session_filename'
p4385
asbag57
(g78
g59
NtRp4386
(dp4387
g62
(dp4388
g89
g90
ssg71
g4377
sg64
(lp4389
S':'
asbag57
(g78
g59
NtRp4390
(dp4391
g62
(dp4392
sg71
g4377
sg64
(lp4393
g57
(g58
g59
NtRp4394
(dp4395
g62
(dp4396
g70
I5
ssg71
g4390
sg64
(lp4397
S'/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-01de8466-7178-49c5-a040-65d31f60870a'
p4398
asbasbasbag57
(g73
g59
NtRp4399
(dp4400
g62
(dp4401
sg71
g3424
sg64
(lp4402
g57
(g78
g59
NtRp4403
(dp4404
g62
(dp4405
g82
g83
ssg71
g4399
sg64
(lp4406
S'session_id'
p4407
asbag57
(g78
g59
NtRp4408
(dp4409
g62
(dp4410
g89
g90
ssg71
g4399
sg64
(lp4411
S':'
asbag57
(g78
g59
NtRp4412
(dp4413
g62
(dp4414
sg71
g4399
sg64
(lp4415
g57
(g58
g59
NtRp4416
(dp4417
g62
(dp4418
g70
I5
ssg71
g4412
sg64
(lp4419
g526
asbasbasbag57
(g73
g59
NtRp4420
(dp4421
g62
(dp4422
sg71
g3424
sg64
(lp4423
g57
(g78
g59
NtRp4424
(dp4425
g62
(dp4426
g82
g83
ssg71
g4420
sg64
(lp4427
S'session_id_name'
p4428
asbag57
(g78
g59
NtRp4429
(dp4430
g62
(dp4431
g89
g90
ssg71
g4420
sg64
(lp4432
S':'
asbag57
(g78
g59
NtRp4433
(dp4434
g62
(dp4435
sg71
g4420
sg64
(lp4436
g57
(g58
g59
NtRp4437
(dp4438
g62
(dp4439
g70
I5
ssg71
g4433
sg64
(lp4440
g3481
asbasbasbag57
(g73
g59
NtRp4441
(dp4442
g62
(dp4443
sg71
g3424
sg64
(lp4444
g57
(g78
g59
NtRp4445
(dp4446
g62
(dp4447
g82
g83
ssg71
g4441
sg64
(lp4448
S'session_locked'
p4449
asbag57
(g78
g59
NtRp4450
(dp4451
g62
(dp4452
g89
g90
ssg71
g4441
sg64
(lp4453
S':'
asbag57
(g78
g59
NtRp4454
(dp4455
g62
(dp4456
sg71
g4441
sg64
(lp4457
g57
(g58
g59
NtRp4458
(dp4459
g62
(dp4460
g70
I5
ssg71
g4454
sg64
(lp4461
g1844
asbasbasbag57
(g73
g59
NtRp4462
(dp4463
g62
(dp4464
sg71
g3424
sg64
(lp4465
g57
(g78
g59
NtRp4466
(dp4467
g62
(dp4468
g82
g83
ssg71
g4462
sg64
(lp4469
S'session_new'
p4470
asbag57
(g78
g59
NtRp4471
(dp4472
g62
(dp4473
g89
g90
ssg71
g4462
sg64
(lp4474
S':'
asbag57
(g78
g59
NtRp4475
(dp4476
g62
(dp4477
sg71
g4462
sg64
(lp4478
g57
(g58
g59
NtRp4479
(dp4480
g62
(dp4481
g70
I5
ssg71
g4475
sg64
(lp4482
g100
asbasbasbag57
(g73
g59
NtRp4483
(dp4484
g62
(dp4485
sg71
g3424
sg64
(lp4486
g57
(g78
g59
NtRp4487
(dp4488
g62
(dp4489
g82
g83
ssg71
g4483
sg64
(lp4490
S'session_storage_type'
p4491
asbag57
(g78
g59
NtRp4492
(dp4493
g62
(dp4494
g89
g90
ssg71
g4483
sg64
(lp4495
S':'
asbag57
(g78
g59
NtRp4496
(dp4497
g62
(dp4498
sg71
g4483
sg64
(lp4499
g57
(g58
g59
NtRp4500
(dp4501
g62
(dp4502
g70
I5
ssg71
g4496
sg64
(lp4503
g3297
asbasbasbag57
(g73
g59
NtRp4504
(dp4505
g62
(dp4506
sg71
g3424
sg64
(lp4507
g57
(g78
g59
NtRp4508
(dp4509
g62
(dp4510
g82
g83
ssg71
g4504
sg64
(lp4511
S'status'
p4512
asbag57
(g78
g59
NtRp4513
(dp4514
g62
(dp4515
g89
g90
ssg71
g4504
sg64
(lp4516
S':'
asbag57
(g78
g59
NtRp4517
(dp4518
g62
(dp4519
sg71
g4504
sg64
(lp4520
g57
(g58
g59
NtRp4521
(dp4522
g62
(dp4523
g70
I5
ssg71
g4517
sg64
(lp4524
S'200'
p4525
asbasbasbag57
(g73
g59
NtRp4526
(dp4527
g62
(dp4528
sg71
g3424
sg64
(lp4529
g57
(g78
g59
NtRp4530
(dp4531
g62
(dp4532
g82
g83
ssg71
g4526
sg64
(lp4533
S'subtitle'
p4534
asbag57
(g78
g59
NtRp4535
(dp4536
g62
(dp4537
g89
g90
ssg71
g4526
sg64
(lp4538
S':'
asbag57
(g78
g59
NtRp4539
(dp4540
g62
(dp4541
sg71
g4526
sg64
(lp4542
g57
(g58
g59
NtRp4543
(dp4544
g62
(dp4545
g70
I5
ssg71
g4539
sg64
(lp4546
g4044
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4547
asbasbasbag57
(g73
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g3424
sg64
(lp4551
g57
(g78
g59
NtRp4552
(dp4553
g62
(dp4554
g82
g83
ssg71
g4548
sg64
(lp4555
S'title'
p4556
asbag57
(g78
g59
NtRp4557
(dp4558
g62
(dp4559
g89
g90
ssg71
g4548
sg64
(lp4560
S':'
asbag57
(g78
g59
NtRp4561
(dp4562
g62
(dp4563
sg71
g4548
sg64
(lp4564
g57
(g58
g59
NtRp4565
(dp4566
g62
(dp4567
g70
I5
ssg71
g4561
sg64
(lp4568
g122
asbasbasbag57
(g73
g59
NtRp4569
(dp4570
g62
(dp4571
sg71
g3424
sg64
(lp4572
g57
(g78
g59
NtRp4573
(dp4574
g62
(dp4575
g82
g83
ssg71
g4569
sg64
(lp4576
S'view'
p4577
asbag57
(g78
g59
NtRp4578
(dp4579
g62
(dp4580
g89
g90
ssg71
g4569
sg64
(lp4581
S':'
asbag57
(g78
g59
NtRp4582
(dp4583
g62
(dp4584
sg71
g4569
sg64
(lp4585
g57
(g58
g59
NtRp4586
(dp4587
g62
(dp4588
g70
I5
ssg71
g4582
sg64
(lp4589
S'default/list_all_dev_projects.html'
p4590
asbasbasbasbasbsS'locals'
p4591
(dp4592
ssS'traceback'
p4593
S'Traceback (most recent call last):\n  File "/home/anil/Downloads/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1148, in <module>\n  File "/home/anil/Downloads/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/Downloads/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 292, in list_all_dev_projects\n    db.sample.experimentalist.default=auth.user.id\nAttributeError: \'NoneType\' object has no attribute \'id\'\n'
p4594
s.