(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> router() takes no arguments (1 given)"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n########################## Tips\n#http://stackoverflow.com/questions/12354353/duplicate-a-record-and-its-references-in-web2py\n\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args[0:5]\n    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]\n    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    s={\'sample\':lambda ids : redirect(URL(\'default\', \'mapping_multiple\', vars=dict(id=ids)))}\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'],selectable = s) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef tes(a):\n    if db(db.biosource.sample_name==a).count()==0:\n     return "add"\n    else:\n        return "edit"\n    return "add"\ndef getargs(a,args):\n    row = db(db.biosource.sample_name==a).select(db.biosource.id).first()\n    if row:\n        args=args+["biosource.sample_name",a,"edit","biosource",row.id]\n        return args\n    else:\n        args = args+["biosource.sample_name",a,"new","biosource"]\n        return args\n\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router():\n    l=request.args\n    if \'biosource\' in l:\n      redirect(URL(\'insert_biosource\',args = l))\n    elif \'plant_growth_condition\' in l:\n      redirect(URL(\'insert_pgc\',args = l))\n    elif \'treatments\' in l:\n      redirect(URL(\'insert_treatments\',args = l))\n    elif \'harvests\' in l:\n      redirect(URL(\'insert_harvests\',args = l))\n    elif \'extraction_preparation\' in l:\n      redirect(URL(\'insert_ep\',args = l))\n    elif \'gas_chromatography\' in l:\n        redirect(URL(\'insert_gc\',args = l))\n    elif \'liquid_chromatography\' in l:\n        redirect(URL(\'insert_lc\',args = l))\n    elif \'mass_spectroscopy\' in l:\n        redirect(URL(\'insert_ms\',args = l))\n    elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n    elif \'sample\' in l and \'view\' in l:\t\t\n        redirect(URL(\'sample\',args=l))\n    else:\n        return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S"('router() takes no arguments (1 given)',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'router() takes no arguments (1 given)'
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g143
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
sg71
g210
sg64
(lp217
g57
(g58
g59
NtRp218
(dp219
g62
(dp220
g70
I4
ssg71
g214
sg64
(lp221
S'biosource.sample_name'
p222
asbasbasbag57
(g73
g59
NtRp223
(dp224
g62
(dp225
sg71
g143
sg64
(lp226
g57
(g78
g59
NtRp227
(dp228
g62
(dp229
sg71
g223
sg64
(lp230
g57
(g58
g59
NtRp231
(dp232
g62
(dp233
g70
I4
ssg71
g227
sg64
(lp234
S'3'
asbasbasbag57
(g73
g59
NtRp235
(dp236
g62
(dp237
sg71
g143
sg64
(lp238
g57
(g78
g59
NtRp239
(dp240
g62
(dp241
sg71
g235
sg64
(lp242
g57
(g58
g59
NtRp243
(dp244
g62
(dp245
g70
I4
ssg71
g239
sg64
(lp246
S'new'
p247
asbasbasbag57
(g73
g59
NtRp248
(dp249
g62
(dp250
sg71
g143
sg64
(lp251
g57
(g78
g59
NtRp252
(dp253
g62
(dp254
sg71
g248
sg64
(lp255
g57
(g58
g59
NtRp256
(dp257
g62
(dp258
g70
I4
ssg71
g252
sg64
(lp259
S'biosource'
p260
asbasbasbasbasbasbasbag57
(g73
g59
NtRp261
(dp262
g62
(dp263
sg71
g67
sg64
(lp264
g57
(g78
g59
NtRp265
(dp266
g62
(dp267
g82
g83
ssg71
g261
sg64
(lp268
S'body'
p269
asbag57
(g78
g59
NtRp270
(dp271
g62
(dp272
g89
g90
ssg71
g261
sg64
(lp273
S':'
asbag57
(g78
g59
NtRp274
(dp275
g62
(dp276
sg71
g261
sg64
(lp277
g57
(g58
g59
NtRp278
(dp279
g62
(dp280
g70
I5
ssg71
g274
sg64
(lp281
S'<cStringIO.StringO object at 0xb0458f00>'
p282
asbasbasbag57
(g73
g59
NtRp283
(dp284
g62
(dp285
sg71
g67
sg64
(lp286
g57
(g78
g59
NtRp287
(dp288
g62
(dp289
g82
g83
ssg71
g283
sg64
(lp290
S'cid'
p291
asbag57
(g78
g59
NtRp292
(dp293
g62
(dp294
g89
g90
ssg71
g283
sg64
(lp295
S':'
asbag57
(g78
g59
NtRp296
(dp297
g62
(dp298
sg71
g283
sg64
(lp299
g57
(g58
g59
NtRp300
(dp301
g62
(dp302
g70
I5
ssg71
g296
sg64
(lp303
S'None'
p304
asbasbasbag57
(g73
g59
NtRp305
(dp306
g62
(dp307
sg71
g67
sg64
(lp308
g57
(g78
g59
NtRp309
(dp310
g62
(dp311
g82
g83
ssg71
g305
sg64
(lp312
S'client'
p313
asbag57
(g78
g59
NtRp314
(dp315
g62
(dp316
g89
g90
ssg71
g305
sg64
(lp317
S':'
asbag57
(g78
g59
NtRp318
(dp319
g62
(dp320
sg71
g305
sg64
(lp321
g57
(g58
g59
NtRp322
(dp323
g62
(dp324
g70
I5
ssg71
g318
sg64
(lp325
S'127.0.0.1'
p326
asbasbasbag57
(g73
g59
NtRp327
(dp328
g62
(dp329
sg71
g67
sg64
(lp330
g57
(g78
g59
NtRp331
(dp332
g62
(dp333
g82
g83
ssg71
g327
sg64
(lp334
S'controller'
p335
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
g89
g90
ssg71
g327
sg64
(lp339
S':'
asbag57
(g78
g59
NtRp340
(dp341
g62
(dp342
sg71
g327
sg64
(lp343
g57
(g58
g59
NtRp344
(dp345
g62
(dp346
g70
I5
ssg71
g340
sg64
(lp347
S'default'
p348
asbasbasbag57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g67
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'cookies'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I5
ssg71
g362
sg64
(lp369
g57
(g66
g59
NtRp370
(dp371
g62
(dp372
g70
I4
ssg71
Nsg64
(lp373
g57
(g73
g59
NtRp374
(dp375
g62
(dp376
sg71
g370
sg64
(lp377
g57
(g78
g59
NtRp378
(dp379
g62
(dp380
g82
g83
ssg71
g374
sg64
(lp381
S'session_id_admin'
p382
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
g89
g90
ssg71
g374
sg64
(lp386
S':'
asbag57
(g78
g59
NtRp387
(dp388
g62
(dp389
sg71
g374
sg64
(lp390
g57
(g58
g59
NtRp391
(dp392
g62
(dp393
g70
I4
ssg71
g387
sg64
(lp394
S'127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb'
p395
ag57
(g66
g59
NtRp396
(dp397
g62
(dp398
g70
I3
ssg71
Nsg64
(lp399
g57
(g73
g59
NtRp400
(dp401
g62
(dp402
sg71
g396
sg64
(lp403
g57
(g78
g59
NtRp404
(dp405
g62
(dp406
g82
g83
ssg71
g400
sg64
(lp407
S'comment'
p408
asbag57
(g78
g59
NtRp409
(dp410
g62
(dp411
g89
g90
ssg71
g400
sg64
(lp412
S':'
asbag57
(g78
g59
NtRp413
(dp414
g62
(dp415
sg71
g400
sg64
(lp416
g57
(g58
g59
NtRp417
(dp418
g62
(dp419
g70
I3
ssg71
g413
sg64
(lp420
S''
asbasbasbag57
(g73
g59
NtRp421
(dp422
g62
(dp423
sg71
g396
sg64
(lp424
g57
(g78
g59
NtRp425
(dp426
g62
(dp427
g82
g83
ssg71
g421
sg64
(lp428
S'domain'
p429
asbag57
(g78
g59
NtRp430
(dp431
g62
(dp432
g89
g90
ssg71
g421
sg64
(lp433
S':'
asbag57
(g78
g59
NtRp434
(dp435
g62
(dp436
sg71
g421
sg64
(lp437
g57
(g58
g59
NtRp438
(dp439
g62
(dp440
g70
I3
ssg71
g434
sg64
(lp441
S''
asbasbasbag57
(g73
g59
NtRp442
(dp443
g62
(dp444
sg71
g396
sg64
(lp445
g57
(g78
g59
NtRp446
(dp447
g62
(dp448
g82
g83
ssg71
g442
sg64
(lp449
S'expires'
p450
asbag57
(g78
g59
NtRp451
(dp452
g62
(dp453
g89
g90
ssg71
g442
sg64
(lp454
S':'
asbag57
(g78
g59
NtRp455
(dp456
g62
(dp457
sg71
g442
sg64
(lp458
g57
(g58
g59
NtRp459
(dp460
g62
(dp461
g70
I3
ssg71
g455
sg64
(lp462
S''
asbasbasbag57
(g73
g59
NtRp463
(dp464
g62
(dp465
sg71
g396
sg64
(lp466
g57
(g78
g59
NtRp467
(dp468
g62
(dp469
g82
g83
ssg71
g463
sg64
(lp470
S'httponly'
p471
asbag57
(g78
g59
NtRp472
(dp473
g62
(dp474
g89
g90
ssg71
g463
sg64
(lp475
S':'
asbag57
(g78
g59
NtRp476
(dp477
g62
(dp478
sg71
g463
sg64
(lp479
g57
(g58
g59
NtRp480
(dp481
g62
(dp482
g70
I3
ssg71
g476
sg64
(lp483
S''
asbasbasbag57
(g73
g59
NtRp484
(dp485
g62
(dp486
sg71
g396
sg64
(lp487
g57
(g78
g59
NtRp488
(dp489
g62
(dp490
g82
g83
ssg71
g484
sg64
(lp491
S'max-age'
p492
asbag57
(g78
g59
NtRp493
(dp494
g62
(dp495
g89
g90
ssg71
g484
sg64
(lp496
S':'
asbag57
(g78
g59
NtRp497
(dp498
g62
(dp499
sg71
g484
sg64
(lp500
g57
(g58
g59
NtRp501
(dp502
g62
(dp503
g70
I3
ssg71
g497
sg64
(lp504
S''
asbasbasbag57
(g73
g59
NtRp505
(dp506
g62
(dp507
sg71
g396
sg64
(lp508
g57
(g78
g59
NtRp509
(dp510
g62
(dp511
g82
g83
ssg71
g505
sg64
(lp512
S'path'
p513
asbag57
(g78
g59
NtRp514
(dp515
g62
(dp516
g89
g90
ssg71
g505
sg64
(lp517
S':'
asbag57
(g78
g59
NtRp518
(dp519
g62
(dp520
sg71
g505
sg64
(lp521
g57
(g58
g59
NtRp522
(dp523
g62
(dp524
g70
I3
ssg71
g518
sg64
(lp525
S''
asbasbasbag57
(g73
g59
NtRp526
(dp527
g62
(dp528
sg71
g396
sg64
(lp529
g57
(g78
g59
NtRp530
(dp531
g62
(dp532
g82
g83
ssg71
g526
sg64
(lp533
S'secure'
p534
asbag57
(g78
g59
NtRp535
(dp536
g62
(dp537
g89
g90
ssg71
g526
sg64
(lp538
S':'
asbag57
(g78
g59
NtRp539
(dp540
g62
(dp541
sg71
g526
sg64
(lp542
g57
(g58
g59
NtRp543
(dp544
g62
(dp545
g70
I3
ssg71
g539
sg64
(lp546
S''
asbasbasbag57
(g73
g59
NtRp547
(dp548
g62
(dp549
sg71
g396
sg64
(lp550
g57
(g78
g59
NtRp551
(dp552
g62
(dp553
g82
g83
ssg71
g547
sg64
(lp554
S'version'
p555
asbag57
(g78
g59
NtRp556
(dp557
g62
(dp558
g89
g90
ssg71
g547
sg64
(lp559
S':'
asbag57
(g78
g59
NtRp560
(dp561
g62
(dp562
sg71
g547
sg64
(lp563
g57
(g58
g59
NtRp564
(dp565
g62
(dp566
g70
I3
ssg71
g560
sg64
(lp567
S''
asbasbasbasbasbasbasbag57
(g73
g59
NtRp568
(dp569
g62
(dp570
sg71
g370
sg64
(lp571
g57
(g78
g59
NtRp572
(dp573
g62
(dp574
g82
g83
ssg71
g568
sg64
(lp575
S'session_id_dev_bootstrap_ch'
p576
asbag57
(g78
g59
NtRp577
(dp578
g62
(dp579
g89
g90
ssg71
g568
sg64
(lp580
S':'
asbag57
(g78
g59
NtRp581
(dp582
g62
(dp583
sg71
g568
sg64
(lp584
g57
(g58
g59
NtRp585
(dp586
g62
(dp587
g70
I4
ssg71
g581
sg64
(lp588
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p589
ag57
(g66
g59
NtRp590
(dp591
g62
(dp592
g70
I3
ssg71
Nsg64
(lp593
g57
(g73
g59
NtRp594
(dp595
g62
(dp596
sg71
g590
sg64
(lp597
g57
(g78
g59
NtRp598
(dp599
g62
(dp600
g82
g83
ssg71
g594
sg64
(lp601
g408
asbag57
(g78
g59
NtRp602
(dp603
g62
(dp604
g89
g90
ssg71
g594
sg64
(lp605
S':'
asbag57
(g78
g59
NtRp606
(dp607
g62
(dp608
sg71
g594
sg64
(lp609
g57
(g58
g59
NtRp610
(dp611
g62
(dp612
g70
I3
ssg71
g606
sg64
(lp613
S''
asbasbasbag57
(g73
g59
NtRp614
(dp615
g62
(dp616
sg71
g590
sg64
(lp617
g57
(g78
g59
NtRp618
(dp619
g62
(dp620
g82
g83
ssg71
g614
sg64
(lp621
g429
asbag57
(g78
g59
NtRp622
(dp623
g62
(dp624
g89
g90
ssg71
g614
sg64
(lp625
S':'
asbag57
(g78
g59
NtRp626
(dp627
g62
(dp628
sg71
g614
sg64
(lp629
g57
(g58
g59
NtRp630
(dp631
g62
(dp632
g70
I3
ssg71
g626
sg64
(lp633
S''
asbasbasbag57
(g73
g59
NtRp634
(dp635
g62
(dp636
sg71
g590
sg64
(lp637
g57
(g78
g59
NtRp638
(dp639
g62
(dp640
g82
g83
ssg71
g634
sg64
(lp641
g450
asbag57
(g78
g59
NtRp642
(dp643
g62
(dp644
g89
g90
ssg71
g634
sg64
(lp645
S':'
asbag57
(g78
g59
NtRp646
(dp647
g62
(dp648
sg71
g634
sg64
(lp649
g57
(g58
g59
NtRp650
(dp651
g62
(dp652
g70
I3
ssg71
g646
sg64
(lp653
S''
asbasbasbag57
(g73
g59
NtRp654
(dp655
g62
(dp656
sg71
g590
sg64
(lp657
g57
(g78
g59
NtRp658
(dp659
g62
(dp660
g82
g83
ssg71
g654
sg64
(lp661
g471
asbag57
(g78
g59
NtRp662
(dp663
g62
(dp664
g89
g90
ssg71
g654
sg64
(lp665
S':'
asbag57
(g78
g59
NtRp666
(dp667
g62
(dp668
sg71
g654
sg64
(lp669
g57
(g58
g59
NtRp670
(dp671
g62
(dp672
g70
I3
ssg71
g666
sg64
(lp673
S''
asbasbasbag57
(g73
g59
NtRp674
(dp675
g62
(dp676
sg71
g590
sg64
(lp677
g57
(g78
g59
NtRp678
(dp679
g62
(dp680
g82
g83
ssg71
g674
sg64
(lp681
g492
asbag57
(g78
g59
NtRp682
(dp683
g62
(dp684
g89
g90
ssg71
g674
sg64
(lp685
S':'
asbag57
(g78
g59
NtRp686
(dp687
g62
(dp688
sg71
g674
sg64
(lp689
g57
(g58
g59
NtRp690
(dp691
g62
(dp692
g70
I3
ssg71
g686
sg64
(lp693
S''
asbasbasbag57
(g73
g59
NtRp694
(dp695
g62
(dp696
sg71
g590
sg64
(lp697
g57
(g78
g59
NtRp698
(dp699
g62
(dp700
g82
g83
ssg71
g694
sg64
(lp701
g513
asbag57
(g78
g59
NtRp702
(dp703
g62
(dp704
g89
g90
ssg71
g694
sg64
(lp705
S':'
asbag57
(g78
g59
NtRp706
(dp707
g62
(dp708
sg71
g694
sg64
(lp709
g57
(g58
g59
NtRp710
(dp711
g62
(dp712
g70
I3
ssg71
g706
sg64
(lp713
S''
asbasbasbag57
(g73
g59
NtRp714
(dp715
g62
(dp716
sg71
g590
sg64
(lp717
g57
(g78
g59
NtRp718
(dp719
g62
(dp720
g82
g83
ssg71
g714
sg64
(lp721
g534
asbag57
(g78
g59
NtRp722
(dp723
g62
(dp724
g89
g90
ssg71
g714
sg64
(lp725
S':'
asbag57
(g78
g59
NtRp726
(dp727
g62
(dp728
sg71
g714
sg64
(lp729
g57
(g58
g59
NtRp730
(dp731
g62
(dp732
g70
I3
ssg71
g726
sg64
(lp733
S''
asbasbasbag57
(g73
g59
NtRp734
(dp735
g62
(dp736
sg71
g590
sg64
(lp737
g57
(g78
g59
NtRp738
(dp739
g62
(dp740
g82
g83
ssg71
g734
sg64
(lp741
g555
asbag57
(g78
g59
NtRp742
(dp743
g62
(dp744
g89
g90
ssg71
g734
sg64
(lp745
S':'
asbag57
(g78
g59
NtRp746
(dp747
g62
(dp748
sg71
g734
sg64
(lp749
g57
(g58
g59
NtRp750
(dp751
g62
(dp752
g70
I3
ssg71
g746
sg64
(lp753
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp754
(dp755
g62
(dp756
sg71
g67
sg64
(lp757
g57
(g78
g59
NtRp758
(dp759
g62
(dp760
g82
g83
ssg71
g754
sg64
(lp761
S'env'
p762
asbag57
(g78
g59
NtRp763
(dp764
g62
(dp765
g89
g90
ssg71
g754
sg64
(lp766
S':'
asbag57
(g78
g59
NtRp767
(dp768
g62
(dp769
sg71
g754
sg64
(lp770
g57
(g58
g59
NtRp771
(dp772
g62
(dp773
g70
I5
ssg71
g767
sg64
(lp774
g57
(g66
g59
NtRp775
(dp776
g62
(dp777
g70
I4
ssg71
Nsg64
(lp778
g57
(g73
g59
NtRp779
(dp780
g62
(dp781
sg71
g775
sg64
(lp782
g57
(g78
g59
NtRp783
(dp784
g62
(dp785
g82
g83
ssg71
g779
sg64
(lp786
S'app_folders'
p787
asbag57
(g78
g59
NtRp788
(dp789
g62
(dp790
g89
g90
ssg71
g779
sg64
(lp791
S':'
asbag57
(g78
g59
NtRp792
(dp793
g62
(dp794
sg71
g779
sg64
(lp795
g57
(g58
g59
NtRp796
(dp797
g62
(dp798
g70
I4
ssg71
g792
sg64
(lp799
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p800
asbasbasbag57
(g73
g59
NtRp801
(dp802
g62
(dp803
sg71
g775
sg64
(lp804
g57
(g78
g59
NtRp805
(dp806
g62
(dp807
g82
g83
ssg71
g801
sg64
(lp808
S'applications_parent'
p809
asbag57
(g78
g59
NtRp810
(dp811
g62
(dp812
g89
g90
ssg71
g801
sg64
(lp813
S':'
asbag57
(g78
g59
NtRp814
(dp815
g62
(dp816
sg71
g801
sg64
(lp817
g57
(g58
g59
NtRp818
(dp819
g62
(dp820
g70
I4
ssg71
g814
sg64
(lp821
S'/home/anil/bootstrap/web2py'
p822
asbasbasbag57
(g73
g59
NtRp823
(dp824
g62
(dp825
sg71
g775
sg64
(lp826
g57
(g78
g59
NtRp827
(dp828
g62
(dp829
g82
g83
ssg71
g823
sg64
(lp830
S'cmd_args'
p831
asbag57
(g78
g59
NtRp832
(dp833
g62
(dp834
g89
g90
ssg71
g823
sg64
(lp835
S':'
asbag57
(g78
g59
NtRp836
(dp837
g62
(dp838
sg71
g823
sg64
(lp839
g57
(g58
g59
NtRp840
(dp841
g62
(dp842
g70
I4
ssg71
g836
sg64
(lp843
g57
(g66
g59
NtRp844
(dp845
g62
(dp846
g70
I3
ssg71
Nsg64
(lp847
sbasbasbasbag57
(g73
g59
NtRp848
(dp849
g62
(dp850
sg71
g775
sg64
(lp851
g57
(g78
g59
NtRp852
(dp853
g62
(dp854
g82
g83
ssg71
g848
sg64
(lp855
S'cmd_options'
p856
asbag57
(g78
g59
NtRp857
(dp858
g62
(dp859
g89
g90
ssg71
g848
sg64
(lp860
S':'
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
sg71
g848
sg64
(lp864
g57
(g58
g59
NtRp865
(dp866
g62
(dp867
g70
I4
ssg71
g861
sg64
(lp868
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p869
asbasbasbag57
(g73
g59
NtRp870
(dp871
g62
(dp872
sg71
g775
sg64
(lp873
g57
(g78
g59
NtRp874
(dp875
g62
(dp876
g82
g83
ssg71
g870
sg64
(lp877
S'db_sessions'
p878
asbag57
(g78
g59
NtRp879
(dp880
g62
(dp881
g89
g90
ssg71
g870
sg64
(lp882
S':'
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
sg71
g870
sg64
(lp886
g57
(g58
g59
NtRp887
(dp888
g62
(dp889
g70
I4
ssg71
g883
sg64
(lp890
S'set([])'
p891
asbasbasbag57
(g73
g59
NtRp892
(dp893
g62
(dp894
sg71
g775
sg64
(lp895
g57
(g78
g59
NtRp896
(dp897
g62
(dp898
g82
g83
ssg71
g892
sg64
(lp899
S'debugging'
p900
asbag57
(g78
g59
NtRp901
(dp902
g62
(dp903
g89
g90
ssg71
g892
sg64
(lp904
S':'
asbag57
(g78
g59
NtRp905
(dp906
g62
(dp907
sg71
g892
sg64
(lp908
g57
(g58
g59
NtRp909
(dp910
g62
(dp911
g70
I4
ssg71
g905
sg64
(lp912
g100
asbasbasbag57
(g73
g59
NtRp913
(dp914
g62
(dp915
sg71
g775
sg64
(lp916
g57
(g78
g59
NtRp917
(dp918
g62
(dp919
g82
g83
ssg71
g913
sg64
(lp920
S'gluon_parent'
p921
asbag57
(g78
g59
NtRp922
(dp923
g62
(dp924
g89
g90
ssg71
g913
sg64
(lp925
S':'
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
sg71
g913
sg64
(lp929
g57
(g58
g59
NtRp930
(dp931
g62
(dp932
g70
I4
ssg71
g926
sg64
(lp933
S'/home/anil/bootstrap/web2py'
p934
asbasbasbag57
(g73
g59
NtRp935
(dp936
g62
(dp937
sg71
g775
sg64
(lp938
g57
(g78
g59
NtRp939
(dp940
g62
(dp941
g82
g83
ssg71
g935
sg64
(lp942
S'http_accept'
p943
asbag57
(g78
g59
NtRp944
(dp945
g62
(dp946
g89
g90
ssg71
g935
sg64
(lp947
S':'
asbag57
(g78
g59
NtRp948
(dp949
g62
(dp950
sg71
g935
sg64
(lp951
g57
(g58
g59
NtRp952
(dp953
g62
(dp954
g70
I4
ssg71
g948
sg64
(lp955
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p956
asbasbasbag57
(g73
g59
NtRp957
(dp958
g62
(dp959
sg71
g775
sg64
(lp960
g57
(g78
g59
NtRp961
(dp962
g62
(dp963
g82
g83
ssg71
g957
sg64
(lp964
S'http_accept_charset'
p965
asbag57
(g78
g59
NtRp966
(dp967
g62
(dp968
g89
g90
ssg71
g957
sg64
(lp969
S':'
asbag57
(g78
g59
NtRp970
(dp971
g62
(dp972
sg71
g957
sg64
(lp973
g57
(g58
g59
NtRp974
(dp975
g62
(dp976
g70
I4
ssg71
g970
sg64
(lp977
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p978
asbasbasbag57
(g73
g59
NtRp979
(dp980
g62
(dp981
sg71
g775
sg64
(lp982
g57
(g78
g59
NtRp983
(dp984
g62
(dp985
g82
g83
ssg71
g979
sg64
(lp986
S'http_accept_encoding'
p987
asbag57
(g78
g59
NtRp988
(dp989
g62
(dp990
g89
g90
ssg71
g979
sg64
(lp991
S':'
asbag57
(g78
g59
NtRp992
(dp993
g62
(dp994
sg71
g979
sg64
(lp995
g57
(g58
g59
NtRp996
(dp997
g62
(dp998
g70
I4
ssg71
g992
sg64
(lp999
S'gzip,deflate,sdch'
p1000
asbasbasbag57
(g73
g59
NtRp1001
(dp1002
g62
(dp1003
sg71
g775
sg64
(lp1004
g57
(g78
g59
NtRp1005
(dp1006
g62
(dp1007
g82
g83
ssg71
g1001
sg64
(lp1008
S'http_accept_language'
p1009
asbag57
(g78
g59
NtRp1010
(dp1011
g62
(dp1012
g89
g90
ssg71
g1001
sg64
(lp1013
S':'
asbag57
(g78
g59
NtRp1014
(dp1015
g62
(dp1016
sg71
g1001
sg64
(lp1017
g57
(g58
g59
NtRp1018
(dp1019
g62
(dp1020
g70
I4
ssg71
g1014
sg64
(lp1021
S'en-US,en;q=0.8'
p1022
asbasbasbag57
(g73
g59
NtRp1023
(dp1024
g62
(dp1025
sg71
g775
sg64
(lp1026
g57
(g78
g59
NtRp1027
(dp1028
g62
(dp1029
g82
g83
ssg71
g1023
sg64
(lp1030
S'http_connection'
p1031
asbag57
(g78
g59
NtRp1032
(dp1033
g62
(dp1034
g89
g90
ssg71
g1023
sg64
(lp1035
S':'
asbag57
(g78
g59
NtRp1036
(dp1037
g62
(dp1038
sg71
g1023
sg64
(lp1039
g57
(g58
g59
NtRp1040
(dp1041
g62
(dp1042
g70
I4
ssg71
g1036
sg64
(lp1043
S'keep-alive'
p1044
asbasbasbag57
(g73
g59
NtRp1045
(dp1046
g62
(dp1047
sg71
g775
sg64
(lp1048
g57
(g78
g59
NtRp1049
(dp1050
g62
(dp1051
g82
g83
ssg71
g1045
sg64
(lp1052
S'http_cookie'
p1053
asbag57
(g78
g59
NtRp1054
(dp1055
g62
(dp1056
g89
g90
ssg71
g1045
sg64
(lp1057
S':'
asbag57
(g78
g59
NtRp1058
(dp1059
g62
(dp1060
sg71
g1045
sg64
(lp1061
g57
(g58
g59
NtRp1062
(dp1063
g62
(dp1064
g70
I4
ssg71
g1058
sg64
(lp1065
S'session_id_admin=127.0.0.1-7913f622-9f6f-44d0-ab66-1bae5c64cadb; session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p1066
asbasbasbag57
(g73
g59
NtRp1067
(dp1068
g62
(dp1069
sg71
g775
sg64
(lp1070
g57
(g78
g59
NtRp1071
(dp1072
g62
(dp1073
g82
g83
ssg71
g1067
sg64
(lp1074
S'http_host'
p1075
asbag57
(g78
g59
NtRp1076
(dp1077
g62
(dp1078
g89
g90
ssg71
g1067
sg64
(lp1079
S':'
asbag57
(g78
g59
NtRp1080
(dp1081
g62
(dp1082
sg71
g1067
sg64
(lp1083
g57
(g58
g59
NtRp1084
(dp1085
g62
(dp1086
g70
I4
ssg71
g1080
sg64
(lp1087
S'127.0.0.1:8000'
p1088
asbasbasbag57
(g73
g59
NtRp1089
(dp1090
g62
(dp1091
sg71
g775
sg64
(lp1092
g57
(g78
g59
NtRp1093
(dp1094
g62
(dp1095
g82
g83
ssg71
g1089
sg64
(lp1096
S'http_referer'
p1097
asbag57
(g78
g59
NtRp1098
(dp1099
g62
(dp1100
g89
g90
ssg71
g1089
sg64
(lp1101
S':'
asbag57
(g78
g59
NtRp1102
(dp1103
g62
(dp1104
sg71
g1089
sg64
(lp1105
g57
(g58
g59
NtRp1106
(dp1107
g62
(dp1108
g70
I4
ssg71
g1102
sg64
(lp1109
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3?_signature=0c83e0c22b50c48f4bf5baa1535f7338ea71f099'
p1110
asbasbasbag57
(g73
g59
NtRp1111
(dp1112
g62
(dp1113
sg71
g775
sg64
(lp1114
g57
(g78
g59
NtRp1115
(dp1116
g62
(dp1117
g82
g83
ssg71
g1111
sg64
(lp1118
S'http_user_agent'
p1119
asbag57
(g78
g59
NtRp1120
(dp1121
g62
(dp1122
g89
g90
ssg71
g1111
sg64
(lp1123
S':'
asbag57
(g78
g59
NtRp1124
(dp1125
g62
(dp1126
sg71
g1111
sg64
(lp1127
g57
(g58
g59
NtRp1128
(dp1129
g62
(dp1130
g70
I4
ssg71
g1124
sg64
(lp1131
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.10 Safari/537.31'
p1132
asbasbasbag57
(g73
g59
NtRp1133
(dp1134
g62
(dp1135
sg71
g775
sg64
(lp1136
g57
(g78
g59
NtRp1137
(dp1138
g62
(dp1139
g82
g83
ssg71
g1133
sg64
(lp1140
S'is_jython'
p1141
asbag57
(g78
g59
NtRp1142
(dp1143
g62
(dp1144
g89
g90
ssg71
g1133
sg64
(lp1145
S':'
asbag57
(g78
g59
NtRp1146
(dp1147
g62
(dp1148
sg71
g1133
sg64
(lp1149
g57
(g58
g59
NtRp1150
(dp1151
g62
(dp1152
g70
I4
ssg71
g1146
sg64
(lp1153
g100
asbasbasbag57
(g73
g59
NtRp1154
(dp1155
g62
(dp1156
sg71
g775
sg64
(lp1157
g57
(g78
g59
NtRp1158
(dp1159
g62
(dp1160
g82
g83
ssg71
g1154
sg64
(lp1161
S'is_pypy'
p1162
asbag57
(g78
g59
NtRp1163
(dp1164
g62
(dp1165
g89
g90
ssg71
g1154
sg64
(lp1166
S':'
asbag57
(g78
g59
NtRp1167
(dp1168
g62
(dp1169
sg71
g1154
sg64
(lp1170
g57
(g58
g59
NtRp1171
(dp1172
g62
(dp1173
g70
I4
ssg71
g1167
sg64
(lp1174
g100
asbasbasbag57
(g73
g59
NtRp1175
(dp1176
g62
(dp1177
sg71
g775
sg64
(lp1178
g57
(g78
g59
NtRp1179
(dp1180
g62
(dp1181
g82
g83
ssg71
g1175
sg64
(lp1182
S'local_hosts'
p1183
asbag57
(g78
g59
NtRp1184
(dp1185
g62
(dp1186
g89
g90
ssg71
g1175
sg64
(lp1187
S':'
asbag57
(g78
g59
NtRp1188
(dp1189
g62
(dp1190
sg71
g1175
sg64
(lp1191
g57
(g58
g59
NtRp1192
(dp1193
g62
(dp1194
g70
I4
ssg71
g1188
sg64
(lp1195
g57
(g66
g59
NtRp1196
(dp1197
g62
(dp1198
g70
I3
ssg71
Nsg64
(lp1199
g57
(g73
g59
NtRp1200
(dp1201
g62
(dp1202
sg71
g1196
sg64
(lp1203
g57
(g78
g59
NtRp1204
(dp1205
g62
(dp1206
sg71
g1200
sg64
(lp1207
g57
(g58
g59
NtRp1208
(dp1209
g62
(dp1210
g70
I3
ssg71
g1204
sg64
(lp1211
S'::1'
p1212
asbasbasbag57
(g73
g59
NtRp1213
(dp1214
g62
(dp1215
sg71
g1196
sg64
(lp1216
g57
(g78
g59
NtRp1217
(dp1218
g62
(dp1219
sg71
g1213
sg64
(lp1220
g57
(g58
g59
NtRp1221
(dp1222
g62
(dp1223
g70
I3
ssg71
g1217
sg64
(lp1224
S'127.0.1.1'
p1225
asbasbasbag57
(g73
g59
NtRp1226
(dp1227
g62
(dp1228
sg71
g1196
sg64
(lp1229
g57
(g78
g59
NtRp1230
(dp1231
g62
(dp1232
sg71
g1226
sg64
(lp1233
g57
(g58
g59
NtRp1234
(dp1235
g62
(dp1236
g70
I3
ssg71
g1230
sg64
(lp1237
S'::ffff:127.0.0.1'
p1238
asbasbasbag57
(g73
g59
NtRp1239
(dp1240
g62
(dp1241
sg71
g1196
sg64
(lp1242
g57
(g78
g59
NtRp1243
(dp1244
g62
(dp1245
sg71
g1239
sg64
(lp1246
g57
(g58
g59
NtRp1247
(dp1248
g62
(dp1249
g70
I3
ssg71
g1243
sg64
(lp1250
S'127.0.0.1'
p1251
asbasbasbag57
(g73
g59
NtRp1252
(dp1253
g62
(dp1254
sg71
g1196
sg64
(lp1255
g57
(g78
g59
NtRp1256
(dp1257
g62
(dp1258
sg71
g1252
sg64
(lp1259
g57
(g58
g59
NtRp1260
(dp1261
g62
(dp1262
g70
I3
ssg71
g1256
sg64
(lp1263
S'anil-Inspiron-1525'
p1264
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1265
(dp1266
g62
(dp1267
sg71
g775
sg64
(lp1268
g57
(g78
g59
NtRp1269
(dp1270
g62
(dp1271
g82
g83
ssg71
g1265
sg64
(lp1272
S'path_info'
p1273
asbag57
(g78
g59
NtRp1274
(dp1275
g62
(dp1276
g89
g90
ssg71
g1265
sg64
(lp1277
S':'
asbag57
(g78
g59
NtRp1278
(dp1279
g62
(dp1280
sg71
g1265
sg64
(lp1281
g57
(g58
g59
NtRp1282
(dp1283
g62
(dp1284
g70
I4
ssg71
g1278
sg64
(lp1285
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/new/biosource'
p1286
asbasbasbag57
(g73
g59
NtRp1287
(dp1288
g62
(dp1289
sg71
g775
sg64
(lp1290
g57
(g78
g59
NtRp1291
(dp1292
g62
(dp1293
g82
g83
ssg71
g1287
sg64
(lp1294
S'query_string'
p1295
asbag57
(g78
g59
NtRp1296
(dp1297
g62
(dp1298
g89
g90
ssg71
g1287
sg64
(lp1299
S':'
asbag57
(g78
g59
NtRp1300
(dp1301
g62
(dp1302
sg71
g1287
sg64
(lp1303
g57
(g58
g59
NtRp1304
(dp1305
g62
(dp1306
g70
I4
ssg71
g1300
sg64
(lp1307
S'_signature=2d8d2e966c623c6931123670d7e75aeb77452985'
p1308
asbasbasbag57
(g73
g59
NtRp1309
(dp1310
g62
(dp1311
sg71
g775
sg64
(lp1312
g57
(g78
g59
NtRp1313
(dp1314
g62
(dp1315
g82
g83
ssg71
g1309
sg64
(lp1316
S'remote_addr'
p1317
asbag57
(g78
g59
NtRp1318
(dp1319
g62
(dp1320
g89
g90
ssg71
g1309
sg64
(lp1321
S':'
asbag57
(g78
g59
NtRp1322
(dp1323
g62
(dp1324
sg71
g1309
sg64
(lp1325
g57
(g58
g59
NtRp1326
(dp1327
g62
(dp1328
g70
I4
ssg71
g1322
sg64
(lp1329
g326
asbasbasbag57
(g73
g59
NtRp1330
(dp1331
g62
(dp1332
sg71
g775
sg64
(lp1333
g57
(g78
g59
NtRp1334
(dp1335
g62
(dp1336
g82
g83
ssg71
g1330
sg64
(lp1337
S'remote_port'
p1338
asbag57
(g78
g59
NtRp1339
(dp1340
g62
(dp1341
g89
g90
ssg71
g1330
sg64
(lp1342
S':'
asbag57
(g78
g59
NtRp1343
(dp1344
g62
(dp1345
sg71
g1330
sg64
(lp1346
g57
(g58
g59
NtRp1347
(dp1348
g62
(dp1349
g70
I4
ssg71
g1343
sg64
(lp1350
S'42940'
p1351
asbasbasbag57
(g73
g59
NtRp1352
(dp1353
g62
(dp1354
sg71
g775
sg64
(lp1355
g57
(g78
g59
NtRp1356
(dp1357
g62
(dp1358
g82
g83
ssg71
g1352
sg64
(lp1359
S'request_method'
p1360
asbag57
(g78
g59
NtRp1361
(dp1362
g62
(dp1363
g89
g90
ssg71
g1352
sg64
(lp1364
S':'
asbag57
(g78
g59
NtRp1365
(dp1366
g62
(dp1367
sg71
g1352
sg64
(lp1368
g57
(g58
g59
NtRp1369
(dp1370
g62
(dp1371
g70
I4
ssg71
g1365
sg64
(lp1372
S'GET'
p1373
asbasbasbag57
(g73
g59
NtRp1374
(dp1375
g62
(dp1376
sg71
g775
sg64
(lp1377
g57
(g78
g59
NtRp1378
(dp1379
g62
(dp1380
g82
g83
ssg71
g1374
sg64
(lp1381
S'request_uri'
p1382
asbag57
(g78
g59
NtRp1383
(dp1384
g62
(dp1385
g89
g90
ssg71
g1374
sg64
(lp1386
S':'
asbag57
(g78
g59
NtRp1387
(dp1388
g62
(dp1389
sg71
g1374
sg64
(lp1390
g57
(g58
g59
NtRp1391
(dp1392
g62
(dp1393
g70
I4
ssg71
g1387
sg64
(lp1394
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/new/biosource?_signature=2d8d2e966c623c6931123670d7e75aeb77452985'
p1395
asbasbasbag57
(g73
g59
NtRp1396
(dp1397
g62
(dp1398
sg71
g775
sg64
(lp1399
g57
(g78
g59
NtRp1400
(dp1401
g62
(dp1402
g82
g83
ssg71
g1396
sg64
(lp1403
S'script_name'
p1404
asbag57
(g78
g59
NtRp1405
(dp1406
g62
(dp1407
g89
g90
ssg71
g1396
sg64
(lp1408
S':'
asbag57
(g78
g59
NtRp1409
(dp1410
g62
(dp1411
sg71
g1396
sg64
(lp1412
g57
(g58
g59
NtRp1413
(dp1414
g62
(dp1415
g70
I4
ssg71
g1409
sg64
(lp1416
S''
asbasbasbag57
(g73
g59
NtRp1417
(dp1418
g62
(dp1419
sg71
g775
sg64
(lp1420
g57
(g78
g59
NtRp1421
(dp1422
g62
(dp1423
g82
g83
ssg71
g1417
sg64
(lp1424
S'server_name'
p1425
asbag57
(g78
g59
NtRp1426
(dp1427
g62
(dp1428
g89
g90
ssg71
g1417
sg64
(lp1429
S':'
asbag57
(g78
g59
NtRp1430
(dp1431
g62
(dp1432
sg71
g1417
sg64
(lp1433
g57
(g58
g59
NtRp1434
(dp1435
g62
(dp1436
g70
I4
ssg71
g1430
sg64
(lp1437
S'anil-Inspiron-1525'
p1438
asbasbasbag57
(g73
g59
NtRp1439
(dp1440
g62
(dp1441
sg71
g775
sg64
(lp1442
g57
(g78
g59
NtRp1443
(dp1444
g62
(dp1445
g82
g83
ssg71
g1439
sg64
(lp1446
S'server_port'
p1447
asbag57
(g78
g59
NtRp1448
(dp1449
g62
(dp1450
g89
g90
ssg71
g1439
sg64
(lp1451
S':'
asbag57
(g78
g59
NtRp1452
(dp1453
g62
(dp1454
sg71
g1439
sg64
(lp1455
g57
(g58
g59
NtRp1456
(dp1457
g62
(dp1458
g70
I4
ssg71
g1452
sg64
(lp1459
S'8000'
p1460
asbasbasbag57
(g73
g59
NtRp1461
(dp1462
g62
(dp1463
sg71
g775
sg64
(lp1464
g57
(g78
g59
NtRp1465
(dp1466
g62
(dp1467
g82
g83
ssg71
g1461
sg64
(lp1468
S'server_protocol'
p1469
asbag57
(g78
g59
NtRp1470
(dp1471
g62
(dp1472
g89
g90
ssg71
g1461
sg64
(lp1473
S':'
asbag57
(g78
g59
NtRp1474
(dp1475
g62
(dp1476
sg71
g1461
sg64
(lp1477
g57
(g58
g59
NtRp1478
(dp1479
g62
(dp1480
g70
I4
ssg71
g1474
sg64
(lp1481
S'HTTP/1.1'
p1482
asbasbasbag57
(g73
g59
NtRp1483
(dp1484
g62
(dp1485
sg71
g775
sg64
(lp1486
g57
(g78
g59
NtRp1487
(dp1488
g62
(dp1489
g82
g83
ssg71
g1483
sg64
(lp1490
S'server_software'
p1491
asbag57
(g78
g59
NtRp1492
(dp1493
g62
(dp1494
g89
g90
ssg71
g1483
sg64
(lp1495
S':'
asbag57
(g78
g59
NtRp1496
(dp1497
g62
(dp1498
sg71
g1483
sg64
(lp1499
g57
(g58
g59
NtRp1500
(dp1501
g62
(dp1502
g70
I4
ssg71
g1496
sg64
(lp1503
S'Rocket 1.2.6'
p1504
asbasbasbag57
(g73
g59
NtRp1505
(dp1506
g62
(dp1507
sg71
g775
sg64
(lp1508
g57
(g78
g59
NtRp1509
(dp1510
g62
(dp1511
g82
g83
ssg71
g1505
sg64
(lp1512
S'web2py_path'
p1513
asbag57
(g78
g59
NtRp1514
(dp1515
g62
(dp1516
g89
g90
ssg71
g1505
sg64
(lp1517
S':'
asbag57
(g78
g59
NtRp1518
(dp1519
g62
(dp1520
sg71
g1505
sg64
(lp1521
g57
(g58
g59
NtRp1522
(dp1523
g62
(dp1524
g70
I4
ssg71
g1518
sg64
(lp1525
g822
asbasbasbag57
(g73
g59
NtRp1526
(dp1527
g62
(dp1528
sg71
g775
sg64
(lp1529
g57
(g78
g59
NtRp1530
(dp1531
g62
(dp1532
g82
g83
ssg71
g1526
sg64
(lp1533
S'web2py_version'
p1534
asbag57
(g78
g59
NtRp1535
(dp1536
g62
(dp1537
g89
g90
ssg71
g1526
sg64
(lp1538
S':'
asbag57
(g78
g59
NtRp1539
(dp1540
g62
(dp1541
sg71
g1526
sg64
(lp1542
g57
(g58
g59
NtRp1543
(dp1544
g62
(dp1545
g70
I4
ssg71
g1539
sg64
(lp1546
g57
(g66
g59
NtRp1547
(dp1548
g62
(dp1549
g70
I3
ssg71
Nsg64
(lp1550
g57
(g73
g59
NtRp1551
(dp1552
g62
(dp1553
sg71
g1547
sg64
(lp1554
g57
(g78
g59
NtRp1555
(dp1556
g62
(dp1557
sg71
g1551
sg64
(lp1558
g57
(g58
g59
NtRp1559
(dp1560
g62
(dp1561
g70
I3
ssg71
g1555
sg64
(lp1562
S'2'
asbasbasbag57
(g73
g59
NtRp1563
(dp1564
g62
(dp1565
sg71
g1547
sg64
(lp1566
g57
(g78
g59
NtRp1567
(dp1568
g62
(dp1569
sg71
g1563
sg64
(lp1570
g57
(g58
g59
NtRp1571
(dp1572
g62
(dp1573
g70
I3
ssg71
g1567
sg64
(lp1574
S'3'
asbasbasbag57
(g73
g59
NtRp1575
(dp1576
g62
(dp1577
sg71
g1547
sg64
(lp1578
g57
(g78
g59
NtRp1579
(dp1580
g62
(dp1581
sg71
g1575
sg64
(lp1582
g57
(g58
g59
NtRp1583
(dp1584
g62
(dp1585
g70
I3
ssg71
g1579
sg64
(lp1586
S'2'
asbasbasbag57
(g73
g59
NtRp1587
(dp1588
g62
(dp1589
sg71
g1547
sg64
(lp1590
g57
(g78
g59
NtRp1591
(dp1592
g62
(dp1593
sg71
g1587
sg64
(lp1594
g57
(g58
g59
NtRp1595
(dp1596
g62
(dp1597
g70
I3
ssg71
g1591
sg64
(lp1598
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1599
asbasbasbag57
(g73
g59
NtRp1600
(dp1601
g62
(dp1602
sg71
g1547
sg64
(lp1603
g57
(g78
g59
NtRp1604
(dp1605
g62
(dp1606
sg71
g1600
sg64
(lp1607
g57
(g58
g59
NtRp1608
(dp1609
g62
(dp1610
g70
I3
ssg71
g1604
sg64
(lp1611
S'stable'
p1612
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1613
(dp1614
g62
(dp1615
sg71
g775
sg64
(lp1616
g57
(g78
g59
NtRp1617
(dp1618
g62
(dp1619
g82
g83
ssg71
g1613
sg64
(lp1620
S'wsgi_errors'
p1621
asbag57
(g78
g59
NtRp1622
(dp1623
g62
(dp1624
g89
g90
ssg71
g1613
sg64
(lp1625
S':'
asbag57
(g78
g59
NtRp1626
(dp1627
g62
(dp1628
sg71
g1613
sg64
(lp1629
g57
(g58
g59
NtRp1630
(dp1631
g62
(dp1632
g70
I4
ssg71
g1626
sg64
(lp1633
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p1634
asbasbasbag57
(g73
g59
NtRp1635
(dp1636
g62
(dp1637
sg71
g775
sg64
(lp1638
g57
(g78
g59
NtRp1639
(dp1640
g62
(dp1641
g82
g83
ssg71
g1635
sg64
(lp1642
S'wsgi_file_wrapper'
p1643
asbag57
(g78
g59
NtRp1644
(dp1645
g62
(dp1646
g89
g90
ssg71
g1635
sg64
(lp1647
S':'
asbag57
(g78
g59
NtRp1648
(dp1649
g62
(dp1650
sg71
g1635
sg64
(lp1651
g57
(g58
g59
NtRp1652
(dp1653
g62
(dp1654
g70
I4
ssg71
g1648
sg64
(lp1655
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p1656
asbasbasbag57
(g73
g59
NtRp1657
(dp1658
g62
(dp1659
sg71
g775
sg64
(lp1660
g57
(g78
g59
NtRp1661
(dp1662
g62
(dp1663
g82
g83
ssg71
g1657
sg64
(lp1664
S'wsgi_input'
p1665
asbag57
(g78
g59
NtRp1666
(dp1667
g62
(dp1668
g89
g90
ssg71
g1657
sg64
(lp1669
S':'
asbag57
(g78
g59
NtRp1670
(dp1671
g62
(dp1672
sg71
g1657
sg64
(lp1673
g57
(g58
g59
NtRp1674
(dp1675
g62
(dp1676
g70
I4
ssg71
g1670
sg64
(lp1677
S'<socket._fileobject object at 0xaff8816c>'
p1678
asbasbasbag57
(g73
g59
NtRp1679
(dp1680
g62
(dp1681
sg71
g775
sg64
(lp1682
g57
(g78
g59
NtRp1683
(dp1684
g62
(dp1685
g82
g83
ssg71
g1679
sg64
(lp1686
S'wsgi_multiprocess'
p1687
asbag57
(g78
g59
NtRp1688
(dp1689
g62
(dp1690
g89
g90
ssg71
g1679
sg64
(lp1691
S':'
asbag57
(g78
g59
NtRp1692
(dp1693
g62
(dp1694
sg71
g1679
sg64
(lp1695
g57
(g58
g59
NtRp1696
(dp1697
g62
(dp1698
g70
I4
ssg71
g1692
sg64
(lp1699
g100
asbasbasbag57
(g73
g59
NtRp1700
(dp1701
g62
(dp1702
sg71
g775
sg64
(lp1703
g57
(g78
g59
NtRp1704
(dp1705
g62
(dp1706
g82
g83
ssg71
g1700
sg64
(lp1707
S'wsgi_multithread'
p1708
asbag57
(g78
g59
NtRp1709
(dp1710
g62
(dp1711
g89
g90
ssg71
g1700
sg64
(lp1712
S':'
asbag57
(g78
g59
NtRp1713
(dp1714
g62
(dp1715
sg71
g1700
sg64
(lp1716
g57
(g58
g59
NtRp1717
(dp1718
g62
(dp1719
g70
I4
ssg71
g1713
sg64
(lp1720
S'True'
p1721
asbasbasbag57
(g73
g59
NtRp1722
(dp1723
g62
(dp1724
sg71
g775
sg64
(lp1725
g57
(g78
g59
NtRp1726
(dp1727
g62
(dp1728
g82
g83
ssg71
g1722
sg64
(lp1729
S'wsgi_run_once'
p1730
asbag57
(g78
g59
NtRp1731
(dp1732
g62
(dp1733
g89
g90
ssg71
g1722
sg64
(lp1734
S':'
asbag57
(g78
g59
NtRp1735
(dp1736
g62
(dp1737
sg71
g1722
sg64
(lp1738
g57
(g58
g59
NtRp1739
(dp1740
g62
(dp1741
g70
I4
ssg71
g1735
sg64
(lp1742
g100
asbasbasbag57
(g73
g59
NtRp1743
(dp1744
g62
(dp1745
sg71
g775
sg64
(lp1746
g57
(g78
g59
NtRp1747
(dp1748
g62
(dp1749
g82
g83
ssg71
g1743
sg64
(lp1750
S'wsgi_url_scheme'
p1751
asbag57
(g78
g59
NtRp1752
(dp1753
g62
(dp1754
g89
g90
ssg71
g1743
sg64
(lp1755
S':'
asbag57
(g78
g59
NtRp1756
(dp1757
g62
(dp1758
sg71
g1743
sg64
(lp1759
g57
(g58
g59
NtRp1760
(dp1761
g62
(dp1762
g70
I4
ssg71
g1756
sg64
(lp1763
S'http'
p1764
asbasbasbag57
(g73
g59
NtRp1765
(dp1766
g62
(dp1767
sg71
g775
sg64
(lp1768
g57
(g78
g59
NtRp1769
(dp1770
g62
(dp1771
g82
g83
ssg71
g1765
sg64
(lp1772
S'wsgi_version'
p1773
asbag57
(g78
g59
NtRp1774
(dp1775
g62
(dp1776
g89
g90
ssg71
g1765
sg64
(lp1777
S':'
asbag57
(g78
g59
NtRp1778
(dp1779
g62
(dp1780
sg71
g1765
sg64
(lp1781
g57
(g58
g59
NtRp1782
(dp1783
g62
(dp1784
g70
I4
ssg71
g1778
sg64
(lp1785
g57
(g66
g59
NtRp1786
(dp1787
g62
(dp1788
g70
I3
ssg71
Nsg64
(lp1789
g57
(g73
g59
NtRp1790
(dp1791
g62
(dp1792
sg71
g1786
sg64
(lp1793
g57
(g78
g59
NtRp1794
(dp1795
g62
(dp1796
sg71
g1790
sg64
(lp1797
g57
(g58
g59
NtRp1798
(dp1799
g62
(dp1800
g70
I3
ssg71
g1794
sg64
(lp1801
S'1'
asbasbasbag57
(g73
g59
NtRp1802
(dp1803
g62
(dp1804
sg71
g1786
sg64
(lp1805
g57
(g78
g59
NtRp1806
(dp1807
g62
(dp1808
sg71
g1802
sg64
(lp1809
g57
(g58
g59
NtRp1810
(dp1811
g62
(dp1812
g70
I3
ssg71
g1806
sg64
(lp1813
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1814
(dp1815
g62
(dp1816
sg71
g67
sg64
(lp1817
g57
(g78
g59
NtRp1818
(dp1819
g62
(dp1820
g82
g83
ssg71
g1814
sg64
(lp1821
S'extension'
p1822
asbag57
(g78
g59
NtRp1823
(dp1824
g62
(dp1825
g89
g90
ssg71
g1814
sg64
(lp1826
S':'
asbag57
(g78
g59
NtRp1827
(dp1828
g62
(dp1829
sg71
g1814
sg64
(lp1830
g57
(g58
g59
NtRp1831
(dp1832
g62
(dp1833
g70
I5
ssg71
g1827
sg64
(lp1834
S'html'
p1835
asbasbasbag57
(g73
g59
NtRp1836
(dp1837
g62
(dp1838
sg71
g67
sg64
(lp1839
g57
(g78
g59
NtRp1840
(dp1841
g62
(dp1842
g82
g83
ssg71
g1836
sg64
(lp1843
S'folder'
p1844
asbag57
(g78
g59
NtRp1845
(dp1846
g62
(dp1847
g89
g90
ssg71
g1836
sg64
(lp1848
S':'
asbag57
(g78
g59
NtRp1849
(dp1850
g62
(dp1851
sg71
g1836
sg64
(lp1852
g57
(g58
g59
NtRp1853
(dp1854
g62
(dp1855
g70
I5
ssg71
g1849
sg64
(lp1856
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1857
asbasbasbag57
(g73
g59
NtRp1858
(dp1859
g62
(dp1860
sg71
g67
sg64
(lp1861
g57
(g78
g59
NtRp1862
(dp1863
g62
(dp1864
g82
g83
ssg71
g1858
sg64
(lp1865
S'function'
p1866
asbag57
(g78
g59
NtRp1867
(dp1868
g62
(dp1869
g89
g90
ssg71
g1858
sg64
(lp1870
S':'
asbag57
(g78
g59
NtRp1871
(dp1872
g62
(dp1873
sg71
g1858
sg64
(lp1874
g57
(g58
g59
NtRp1875
(dp1876
g62
(dp1877
g70
I5
ssg71
g1871
sg64
(lp1878
S'list_all_dev_projects'
p1879
asbasbasbag57
(g73
g59
NtRp1880
(dp1881
g62
(dp1882
sg71
g67
sg64
(lp1883
g57
(g78
g59
NtRp1884
(dp1885
g62
(dp1886
g82
g83
ssg71
g1880
sg64
(lp1887
S'get_vars'
p1888
asbag57
(g78
g59
NtRp1889
(dp1890
g62
(dp1891
g89
g90
ssg71
g1880
sg64
(lp1892
S':'
asbag57
(g78
g59
NtRp1893
(dp1894
g62
(dp1895
sg71
g1880
sg64
(lp1896
g57
(g58
g59
NtRp1897
(dp1898
g62
(dp1899
g70
I5
ssg71
g1893
sg64
(lp1900
g57
(g66
g59
NtRp1901
(dp1902
g62
(dp1903
g70
I4
ssg71
Nsg64
(lp1904
sbasbasbasbag57
(g73
g59
NtRp1905
(dp1906
g62
(dp1907
sg71
g67
sg64
(lp1908
g57
(g78
g59
NtRp1909
(dp1910
g62
(dp1911
g82
g83
ssg71
g1905
sg64
(lp1912
S'global_settings'
p1913
asbag57
(g78
g59
NtRp1914
(dp1915
g62
(dp1916
g89
g90
ssg71
g1905
sg64
(lp1917
S':'
asbag57
(g78
g59
NtRp1918
(dp1919
g62
(dp1920
sg71
g1905
sg64
(lp1921
g57
(g58
g59
NtRp1922
(dp1923
g62
(dp1924
g70
I5
ssg71
g1918
sg64
(lp1925
g57
(g66
g59
NtRp1926
(dp1927
g62
(dp1928
g70
I4
ssg71
Nsg64
(lp1929
g57
(g73
g59
NtRp1930
(dp1931
g62
(dp1932
sg71
g1926
sg64
(lp1933
g57
(g78
g59
NtRp1934
(dp1935
g62
(dp1936
g82
g83
ssg71
g1930
sg64
(lp1937
g787
asbag57
(g78
g59
NtRp1938
(dp1939
g62
(dp1940
g89
g90
ssg71
g1930
sg64
(lp1941
S':'
asbag57
(g78
g59
NtRp1942
(dp1943
g62
(dp1944
sg71
g1930
sg64
(lp1945
g57
(g58
g59
NtRp1946
(dp1947
g62
(dp1948
g70
I4
ssg71
g1942
sg64
(lp1949
S"set(['/home/anil/bootstrap/web2py/applications/admin/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap/', '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1950
asbasbasbag57
(g73
g59
NtRp1951
(dp1952
g62
(dp1953
sg71
g1926
sg64
(lp1954
g57
(g78
g59
NtRp1955
(dp1956
g62
(dp1957
g82
g83
ssg71
g1951
sg64
(lp1958
g809
asbag57
(g78
g59
NtRp1959
(dp1960
g62
(dp1961
g89
g90
ssg71
g1951
sg64
(lp1962
S':'
asbag57
(g78
g59
NtRp1963
(dp1964
g62
(dp1965
sg71
g1951
sg64
(lp1966
g57
(g58
g59
NtRp1967
(dp1968
g62
(dp1969
g70
I4
ssg71
g1963
sg64
(lp1970
g822
asbasbasbag57
(g73
g59
NtRp1971
(dp1972
g62
(dp1973
sg71
g1926
sg64
(lp1974
g57
(g78
g59
NtRp1975
(dp1976
g62
(dp1977
g82
g83
ssg71
g1971
sg64
(lp1978
g831
asbag57
(g78
g59
NtRp1979
(dp1980
g62
(dp1981
g89
g90
ssg71
g1971
sg64
(lp1982
S':'
asbag57
(g78
g59
NtRp1983
(dp1984
g62
(dp1985
sg71
g1971
sg64
(lp1986
g57
(g58
g59
NtRp1987
(dp1988
g62
(dp1989
g70
I4
ssg71
g1983
sg64
(lp1990
g57
(g66
g59
NtRp1991
(dp1992
g62
(dp1993
g70
I3
ssg71
Nsg64
(lp1994
sbasbasbasbag57
(g73
g59
NtRp1995
(dp1996
g62
(dp1997
sg71
g1926
sg64
(lp1998
g57
(g78
g59
NtRp1999
(dp2000
g62
(dp2001
g82
g83
ssg71
g1995
sg64
(lp2002
g856
asbag57
(g78
g59
NtRp2003
(dp2004
g62
(dp2005
g89
g90
ssg71
g1995
sg64
(lp2006
S':'
asbag57
(g78
g59
NtRp2007
(dp2008
g62
(dp2009
sg71
g1995
sg64
(lp2010
g57
(g58
g59
NtRp2011
(dp2012
g62
(dp2013
g70
I4
ssg71
g2007
sg64
(lp2014
S"<Values at 0x992be8c: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p2015
asbasbasbag57
(g73
g59
NtRp2016
(dp2017
g62
(dp2018
sg71
g1926
sg64
(lp2019
g57
(g78
g59
NtRp2020
(dp2021
g62
(dp2022
g82
g83
ssg71
g2016
sg64
(lp2023
g878
asbag57
(g78
g59
NtRp2024
(dp2025
g62
(dp2026
g89
g90
ssg71
g2016
sg64
(lp2027
S':'
asbag57
(g78
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g2016
sg64
(lp2031
g57
(g58
g59
NtRp2032
(dp2033
g62
(dp2034
g70
I4
ssg71
g2028
sg64
(lp2035
S'set([])'
p2036
asbasbasbag57
(g73
g59
NtRp2037
(dp2038
g62
(dp2039
sg71
g1926
sg64
(lp2040
g57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
g82
g83
ssg71
g2037
sg64
(lp2044
g900
asbag57
(g78
g59
NtRp2045
(dp2046
g62
(dp2047
g89
g90
ssg71
g2037
sg64
(lp2048
S':'
asbag57
(g78
g59
NtRp2049
(dp2050
g62
(dp2051
sg71
g2037
sg64
(lp2052
g57
(g58
g59
NtRp2053
(dp2054
g62
(dp2055
g70
I4
ssg71
g2049
sg64
(lp2056
g100
asbasbasbag57
(g73
g59
NtRp2057
(dp2058
g62
(dp2059
sg71
g1926
sg64
(lp2060
g57
(g78
g59
NtRp2061
(dp2062
g62
(dp2063
g82
g83
ssg71
g2057
sg64
(lp2064
g921
asbag57
(g78
g59
NtRp2065
(dp2066
g62
(dp2067
g89
g90
ssg71
g2057
sg64
(lp2068
S':'
asbag57
(g78
g59
NtRp2069
(dp2070
g62
(dp2071
sg71
g2057
sg64
(lp2072
g57
(g58
g59
NtRp2073
(dp2074
g62
(dp2075
g70
I4
ssg71
g2069
sg64
(lp2076
g934
asbasbasbag57
(g73
g59
NtRp2077
(dp2078
g62
(dp2079
sg71
g1926
sg64
(lp2080
g57
(g78
g59
NtRp2081
(dp2082
g62
(dp2083
g82
g83
ssg71
g2077
sg64
(lp2084
g1141
asbag57
(g78
g59
NtRp2085
(dp2086
g62
(dp2087
g89
g90
ssg71
g2077
sg64
(lp2088
S':'
asbag57
(g78
g59
NtRp2089
(dp2090
g62
(dp2091
sg71
g2077
sg64
(lp2092
g57
(g58
g59
NtRp2093
(dp2094
g62
(dp2095
g70
I4
ssg71
g2089
sg64
(lp2096
g100
asbasbasbag57
(g73
g59
NtRp2097
(dp2098
g62
(dp2099
sg71
g1926
sg64
(lp2100
g57
(g78
g59
NtRp2101
(dp2102
g62
(dp2103
g82
g83
ssg71
g2097
sg64
(lp2104
g1162
asbag57
(g78
g59
NtRp2105
(dp2106
g62
(dp2107
g89
g90
ssg71
g2097
sg64
(lp2108
S':'
asbag57
(g78
g59
NtRp2109
(dp2110
g62
(dp2111
sg71
g2097
sg64
(lp2112
g57
(g58
g59
NtRp2113
(dp2114
g62
(dp2115
g70
I4
ssg71
g2109
sg64
(lp2116
g100
asbasbasbag57
(g73
g59
NtRp2117
(dp2118
g62
(dp2119
sg71
g1926
sg64
(lp2120
g57
(g78
g59
NtRp2121
(dp2122
g62
(dp2123
g82
g83
ssg71
g2117
sg64
(lp2124
g1183
asbag57
(g78
g59
NtRp2125
(dp2126
g62
(dp2127
g89
g90
ssg71
g2117
sg64
(lp2128
S':'
asbag57
(g78
g59
NtRp2129
(dp2130
g62
(dp2131
sg71
g2117
sg64
(lp2132
g57
(g58
g59
NtRp2133
(dp2134
g62
(dp2135
g70
I4
ssg71
g2129
sg64
(lp2136
g57
(g66
g59
NtRp2137
(dp2138
g62
(dp2139
g70
I3
ssg71
Nsg64
(lp2140
g57
(g73
g59
NtRp2141
(dp2142
g62
(dp2143
sg71
g2137
sg64
(lp2144
g57
(g78
g59
NtRp2145
(dp2146
g62
(dp2147
sg71
g2141
sg64
(lp2148
g57
(g58
g59
NtRp2149
(dp2150
g62
(dp2151
g70
I3
ssg71
g2145
sg64
(lp2152
g1212
asbasbasbag57
(g73
g59
NtRp2153
(dp2154
g62
(dp2155
sg71
g2137
sg64
(lp2156
g57
(g78
g59
NtRp2157
(dp2158
g62
(dp2159
sg71
g2153
sg64
(lp2160
g57
(g58
g59
NtRp2161
(dp2162
g62
(dp2163
g70
I3
ssg71
g2157
sg64
(lp2164
g1225
asbasbasbag57
(g73
g59
NtRp2165
(dp2166
g62
(dp2167
sg71
g2137
sg64
(lp2168
g57
(g78
g59
NtRp2169
(dp2170
g62
(dp2171
sg71
g2165
sg64
(lp2172
g57
(g58
g59
NtRp2173
(dp2174
g62
(dp2175
g70
I3
ssg71
g2169
sg64
(lp2176
g1238
asbasbasbag57
(g73
g59
NtRp2177
(dp2178
g62
(dp2179
sg71
g2137
sg64
(lp2180
g57
(g78
g59
NtRp2181
(dp2182
g62
(dp2183
sg71
g2177
sg64
(lp2184
g57
(g58
g59
NtRp2185
(dp2186
g62
(dp2187
g70
I3
ssg71
g2181
sg64
(lp2188
g1251
asbasbasbag57
(g73
g59
NtRp2189
(dp2190
g62
(dp2191
sg71
g2137
sg64
(lp2192
g57
(g78
g59
NtRp2193
(dp2194
g62
(dp2195
sg71
g2189
sg64
(lp2196
g57
(g58
g59
NtRp2197
(dp2198
g62
(dp2199
g70
I3
ssg71
g2193
sg64
(lp2200
g1264
asbasbasbasbasbasbasbag57
(g73
g59
NtRp2201
(dp2202
g62
(dp2203
sg71
g1926
sg64
(lp2204
g57
(g78
g59
NtRp2205
(dp2206
g62
(dp2207
g82
g83
ssg71
g2201
sg64
(lp2208
g1534
asbag57
(g78
g59
NtRp2209
(dp2210
g62
(dp2211
g89
g90
ssg71
g2201
sg64
(lp2212
S':'
asbag57
(g78
g59
NtRp2213
(dp2214
g62
(dp2215
sg71
g2201
sg64
(lp2216
g57
(g58
g59
NtRp2217
(dp2218
g62
(dp2219
g70
I4
ssg71
g2213
sg64
(lp2220
g57
(g66
g59
NtRp2221
(dp2222
g62
(dp2223
g70
I3
ssg71
Nsg64
(lp2224
g57
(g73
g59
NtRp2225
(dp2226
g62
(dp2227
sg71
g2221
sg64
(lp2228
g57
(g78
g59
NtRp2229
(dp2230
g62
(dp2231
sg71
g2225
sg64
(lp2232
g57
(g58
g59
NtRp2233
(dp2234
g62
(dp2235
g70
I3
ssg71
g2229
sg64
(lp2236
S'2'
asbasbasbag57
(g73
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2221
sg64
(lp2240
g57
(g78
g59
NtRp2241
(dp2242
g62
(dp2243
sg71
g2237
sg64
(lp2244
g57
(g58
g59
NtRp2245
(dp2246
g62
(dp2247
g70
I3
ssg71
g2241
sg64
(lp2248
S'3'
asbasbasbag57
(g73
g59
NtRp2249
(dp2250
g62
(dp2251
sg71
g2221
sg64
(lp2252
g57
(g78
g59
NtRp2253
(dp2254
g62
(dp2255
sg71
g2249
sg64
(lp2256
g57
(g58
g59
NtRp2257
(dp2258
g62
(dp2259
g70
I3
ssg71
g2253
sg64
(lp2260
S'2'
asbasbasbag57
(g73
g59
NtRp2261
(dp2262
g62
(dp2263
sg71
g2221
sg64
(lp2264
g57
(g78
g59
NtRp2265
(dp2266
g62
(dp2267
sg71
g2261
sg64
(lp2268
g57
(g58
g59
NtRp2269
(dp2270
g62
(dp2271
g70
I3
ssg71
g2265
sg64
(lp2272
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2273
asbasbasbag57
(g73
g59
NtRp2274
(dp2275
g62
(dp2276
sg71
g2221
sg64
(lp2277
g57
(g78
g59
NtRp2278
(dp2279
g62
(dp2280
sg71
g2274
sg64
(lp2281
g57
(g58
g59
NtRp2282
(dp2283
g62
(dp2284
g70
I3
ssg71
g2278
sg64
(lp2285
g1612
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2286
(dp2287
g62
(dp2288
sg71
g67
sg64
(lp2289
g57
(g78
g59
NtRp2290
(dp2291
g62
(dp2292
g82
g83
ssg71
g2286
sg64
(lp2293
S'is_https'
p2294
asbag57
(g78
g59
NtRp2295
(dp2296
g62
(dp2297
g89
g90
ssg71
g2286
sg64
(lp2298
S':'
asbag57
(g78
g59
NtRp2299
(dp2300
g62
(dp2301
sg71
g2286
sg64
(lp2302
g57
(g58
g59
NtRp2303
(dp2304
g62
(dp2305
g70
I5
ssg71
g2299
sg64
(lp2306
g100
asbasbasbag57
(g73
g59
NtRp2307
(dp2308
g62
(dp2309
sg71
g67
sg64
(lp2310
g57
(g78
g59
NtRp2311
(dp2312
g62
(dp2313
g82
g83
ssg71
g2307
sg64
(lp2314
S'is_local'
p2315
asbag57
(g78
g59
NtRp2316
(dp2317
g62
(dp2318
g89
g90
ssg71
g2307
sg64
(lp2319
S':'
asbag57
(g78
g59
NtRp2320
(dp2321
g62
(dp2322
sg71
g2307
sg64
(lp2323
g57
(g58
g59
NtRp2324
(dp2325
g62
(dp2326
g70
I5
ssg71
g2320
sg64
(lp2327
g1721
asbasbasbag57
(g73
g59
NtRp2328
(dp2329
g62
(dp2330
sg71
g67
sg64
(lp2331
g57
(g78
g59
NtRp2332
(dp2333
g62
(dp2334
g82
g83
ssg71
g2328
sg64
(lp2335
S'is_restful'
p2336
asbag57
(g78
g59
NtRp2337
(dp2338
g62
(dp2339
g89
g90
ssg71
g2328
sg64
(lp2340
S':'
asbag57
(g78
g59
NtRp2341
(dp2342
g62
(dp2343
sg71
g2328
sg64
(lp2344
g57
(g58
g59
NtRp2345
(dp2346
g62
(dp2347
g70
I5
ssg71
g2341
sg64
(lp2348
g100
asbasbasbag57
(g73
g59
NtRp2349
(dp2350
g62
(dp2351
sg71
g67
sg64
(lp2352
g57
(g78
g59
NtRp2353
(dp2354
g62
(dp2355
g82
g83
ssg71
g2349
sg64
(lp2356
S'now'
p2357
asbag57
(g78
g59
NtRp2358
(dp2359
g62
(dp2360
g89
g90
ssg71
g2349
sg64
(lp2361
S':'
asbag57
(g78
g59
NtRp2362
(dp2363
g62
(dp2364
sg71
g2349
sg64
(lp2365
g57
(g58
g59
NtRp2366
(dp2367
g62
(dp2368
g70
I5
ssg71
g2362
sg64
(lp2369
S'datetime.datetime(2013, 2, 24, 23, 34, 15, 982570)'
p2370
asbasbasbag57
(g73
g59
NtRp2371
(dp2372
g62
(dp2373
sg71
g67
sg64
(lp2374
g57
(g78
g59
NtRp2375
(dp2376
g62
(dp2377
g82
g83
ssg71
g2371
sg64
(lp2378
S'post_vars'
p2379
asbag57
(g78
g59
NtRp2380
(dp2381
g62
(dp2382
g89
g90
ssg71
g2371
sg64
(lp2383
S':'
asbag57
(g78
g59
NtRp2384
(dp2385
g62
(dp2386
sg71
g2371
sg64
(lp2387
g57
(g58
g59
NtRp2388
(dp2389
g62
(dp2390
g70
I5
ssg71
g2384
sg64
(lp2391
g57
(g66
g59
NtRp2392
(dp2393
g62
(dp2394
g70
I4
ssg71
Nsg64
(lp2395
sbasbasbasbag57
(g73
g59
NtRp2396
(dp2397
g62
(dp2398
sg71
g67
sg64
(lp2399
g57
(g78
g59
NtRp2400
(dp2401
g62
(dp2402
g82
g83
ssg71
g2396
sg64
(lp2403
S'raw_args'
p2404
asbag57
(g78
g59
NtRp2405
(dp2406
g62
(dp2407
g89
g90
ssg71
g2396
sg64
(lp2408
S':'
asbag57
(g78
g59
NtRp2409
(dp2410
g62
(dp2411
sg71
g2396
sg64
(lp2412
g57
(g58
g59
NtRp2413
(dp2414
g62
(dp2415
g70
I5
ssg71
g2409
sg64
(lp2416
S'project/experiment.project/1/sample.experiment/1/biosource.sample_name/3/new/biosource'
p2417
asbasbasbag57
(g73
g59
NtRp2418
(dp2419
g62
(dp2420
sg71
g67
sg64
(lp2421
g57
(g78
g59
NtRp2422
(dp2423
g62
(dp2424
g82
g83
ssg71
g2418
sg64
(lp2425
S'raw_extension'
p2426
asbag57
(g78
g59
NtRp2427
(dp2428
g62
(dp2429
g89
g90
ssg71
g2418
sg64
(lp2430
S':'
asbag57
(g78
g59
NtRp2431
(dp2432
g62
(dp2433
sg71
g2418
sg64
(lp2434
g57
(g58
g59
NtRp2435
(dp2436
g62
(dp2437
g70
I5
ssg71
g2431
sg64
(lp2438
S'None'
p2439
asbasbasbag57
(g73
g59
NtRp2440
(dp2441
g62
(dp2442
sg71
g67
sg64
(lp2443
g57
(g78
g59
NtRp2444
(dp2445
g62
(dp2446
g82
g83
ssg71
g2440
sg64
(lp2447
S'url'
p2448
asbag57
(g78
g59
NtRp2449
(dp2450
g62
(dp2451
g89
g90
ssg71
g2440
sg64
(lp2452
S':'
asbag57
(g78
g59
NtRp2453
(dp2454
g62
(dp2455
sg71
g2440
sg64
(lp2456
g57
(g58
g59
NtRp2457
(dp2458
g62
(dp2459
g70
I5
ssg71
g2453
sg64
(lp2460
g1286
asbasbasbag57
(g73
g59
NtRp2461
(dp2462
g62
(dp2463
sg71
g67
sg64
(lp2464
g57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
g82
g83
ssg71
g2461
sg64
(lp2468
S'utcnow'
p2469
asbag57
(g78
g59
NtRp2470
(dp2471
g62
(dp2472
g89
g90
ssg71
g2461
sg64
(lp2473
S':'
asbag57
(g78
g59
NtRp2474
(dp2475
g62
(dp2476
sg71
g2461
sg64
(lp2477
g57
(g58
g59
NtRp2478
(dp2479
g62
(dp2480
g70
I5
ssg71
g2474
sg64
(lp2481
S'datetime.datetime(2013, 2, 24, 18, 4, 15, 982622)'
p2482
asbasbasbag57
(g73
g59
NtRp2483
(dp2484
g62
(dp2485
sg71
g67
sg64
(lp2486
g57
(g78
g59
NtRp2487
(dp2488
g62
(dp2489
g82
g83
ssg71
g2483
sg64
(lp2490
S'uuid'
p2491
asbag57
(g78
g59
NtRp2492
(dp2493
g62
(dp2494
g89
g90
ssg71
g2483
sg64
(lp2495
S':'
asbag57
(g78
g59
NtRp2496
(dp2497
g62
(dp2498
sg71
g2483
sg64
(lp2499
g57
(g58
g59
NtRp2500
(dp2501
g62
(dp2502
g70
I5
ssg71
g2496
sg64
(lp2503
S'DEV_bootstrap_ch/127.0.0.1.2013-02-24.23-34-15.be80e99c-03dc-462e-adf1-4ccb86b1b5f5'
p2504
asbasbasbag57
(g73
g59
NtRp2505
(dp2506
g62
(dp2507
sg71
g67
sg64
(lp2508
g57
(g78
g59
NtRp2509
(dp2510
g62
(dp2511
g82
g83
ssg71
g2505
sg64
(lp2512
S'vars'
p2513
asbag57
(g78
g59
NtRp2514
(dp2515
g62
(dp2516
g89
g90
ssg71
g2505
sg64
(lp2517
S':'
asbag57
(g78
g59
NtRp2518
(dp2519
g62
(dp2520
sg71
g2505
sg64
(lp2521
g57
(g58
g59
NtRp2522
(dp2523
g62
(dp2524
g70
I5
ssg71
g2518
sg64
(lp2525
g57
(g66
g59
NtRp2526
(dp2527
g62
(dp2528
g70
I4
ssg71
Nsg64
(lp2529
sbasbasbasbag57
(g73
g59
NtRp2530
(dp2531
g62
(dp2532
sg71
g67
sg64
(lp2533
g57
(g78
g59
NtRp2534
(dp2535
g62
(dp2536
g82
g83
ssg71
g2530
sg64
(lp2537
S'wsgi'
p2538
asbag57
(g78
g59
NtRp2539
(dp2540
g62
(dp2541
g89
g90
ssg71
g2530
sg64
(lp2542
S':'
asbag57
(g78
g59
NtRp2543
(dp2544
g62
(dp2545
sg71
g2530
sg64
(lp2546
g57
(g58
g59
NtRp2547
(dp2548
g62
(dp2549
g70
I5
ssg71
g2543
sg64
(lp2550
g57
(g66
g59
NtRp2551
(dp2552
g62
(dp2553
g70
I4
ssg71
Nsg64
(lp2554
g57
(g73
g59
NtRp2555
(dp2556
g62
(dp2557
sg71
g2551
sg64
(lp2558
g57
(g78
g59
NtRp2559
(dp2560
g62
(dp2561
g82
g83
ssg71
g2555
sg64
(lp2562
S'environ'
p2563
asbag57
(g78
g59
NtRp2564
(dp2565
g62
(dp2566
g89
g90
ssg71
g2555
sg64
(lp2567
S':'
asbag57
(g78
g59
NtRp2568
(dp2569
g62
(dp2570
sg71
g2555
sg64
(lp2571
g57
(g58
g59
NtRp2572
(dp2573
g62
(dp2574
g70
I4
ssg71
g2568
sg64
(lp2575
g57
(g66
g59
NtRp2576
(dp2577
g62
(dp2578
g70
I3
ssg71
Nsg64
(lp2579
g57
(g73
g59
NtRp2580
(dp2581
g62
(dp2582
sg71
g2576
sg64
(lp2583
g57
(g78
g59
NtRp2584
(dp2585
g62
(dp2586
g82
g83
ssg71
g2580
sg64
(lp2587
S'HTTP_ACCEPT'
p2588
asbag57
(g78
g59
NtRp2589
(dp2590
g62
(dp2591
g89
g90
ssg71
g2580
sg64
(lp2592
S':'
asbag57
(g78
g59
NtRp2593
(dp2594
g62
(dp2595
sg71
g2580
sg64
(lp2596
g57
(g58
g59
NtRp2597
(dp2598
g62
(dp2599
g70
I3
ssg71
g2593
sg64
(lp2600
g956
asbasbasbag57
(g73
g59
NtRp2601
(dp2602
g62
(dp2603
sg71
g2576
sg64
(lp2604
g57
(g78
g59
NtRp2605
(dp2606
g62
(dp2607
g82
g83
ssg71
g2601
sg64
(lp2608
S'HTTP_ACCEPT_CHARSET'
p2609
asbag57
(g78
g59
NtRp2610
(dp2611
g62
(dp2612
g89
g90
ssg71
g2601
sg64
(lp2613
S':'
asbag57
(g78
g59
NtRp2614
(dp2615
g62
(dp2616
sg71
g2601
sg64
(lp2617
g57
(g58
g59
NtRp2618
(dp2619
g62
(dp2620
g70
I3
ssg71
g2614
sg64
(lp2621
g978
asbasbasbag57
(g73
g59
NtRp2622
(dp2623
g62
(dp2624
sg71
g2576
sg64
(lp2625
g57
(g78
g59
NtRp2626
(dp2627
g62
(dp2628
g82
g83
ssg71
g2622
sg64
(lp2629
S'HTTP_ACCEPT_ENCODING'
p2630
asbag57
(g78
g59
NtRp2631
(dp2632
g62
(dp2633
g89
g90
ssg71
g2622
sg64
(lp2634
S':'
asbag57
(g78
g59
NtRp2635
(dp2636
g62
(dp2637
sg71
g2622
sg64
(lp2638
g57
(g58
g59
NtRp2639
(dp2640
g62
(dp2641
g70
I3
ssg71
g2635
sg64
(lp2642
g1000
asbasbasbag57
(g73
g59
NtRp2643
(dp2644
g62
(dp2645
sg71
g2576
sg64
(lp2646
g57
(g78
g59
NtRp2647
(dp2648
g62
(dp2649
g82
g83
ssg71
g2643
sg64
(lp2650
S'HTTP_ACCEPT_LANGUAGE'
p2651
asbag57
(g78
g59
NtRp2652
(dp2653
g62
(dp2654
g89
g90
ssg71
g2643
sg64
(lp2655
S':'
asbag57
(g78
g59
NtRp2656
(dp2657
g62
(dp2658
sg71
g2643
sg64
(lp2659
g57
(g58
g59
NtRp2660
(dp2661
g62
(dp2662
g70
I3
ssg71
g2656
sg64
(lp2663
g1022
asbasbasbag57
(g73
g59
NtRp2664
(dp2665
g62
(dp2666
sg71
g2576
sg64
(lp2667
g57
(g78
g59
NtRp2668
(dp2669
g62
(dp2670
g82
g83
ssg71
g2664
sg64
(lp2671
S'HTTP_CONNECTION'
p2672
asbag57
(g78
g59
NtRp2673
(dp2674
g62
(dp2675
g89
g90
ssg71
g2664
sg64
(lp2676
S':'
asbag57
(g78
g59
NtRp2677
(dp2678
g62
(dp2679
sg71
g2664
sg64
(lp2680
g57
(g58
g59
NtRp2681
(dp2682
g62
(dp2683
g70
I3
ssg71
g2677
sg64
(lp2684
g1044
asbasbasbag57
(g73
g59
NtRp2685
(dp2686
g62
(dp2687
sg71
g2576
sg64
(lp2688
g57
(g78
g59
NtRp2689
(dp2690
g62
(dp2691
g82
g83
ssg71
g2685
sg64
(lp2692
S'HTTP_COOKIE'
p2693
asbag57
(g78
g59
NtRp2694
(dp2695
g62
(dp2696
g89
g90
ssg71
g2685
sg64
(lp2697
S':'
asbag57
(g78
g59
NtRp2698
(dp2699
g62
(dp2700
sg71
g2685
sg64
(lp2701
g57
(g58
g59
NtRp2702
(dp2703
g62
(dp2704
g70
I3
ssg71
g2698
sg64
(lp2705
g1066
asbasbasbag57
(g73
g59
NtRp2706
(dp2707
g62
(dp2708
sg71
g2576
sg64
(lp2709
g57
(g78
g59
NtRp2710
(dp2711
g62
(dp2712
g82
g83
ssg71
g2706
sg64
(lp2713
S'HTTP_HOST'
p2714
asbag57
(g78
g59
NtRp2715
(dp2716
g62
(dp2717
g89
g90
ssg71
g2706
sg64
(lp2718
S':'
asbag57
(g78
g59
NtRp2719
(dp2720
g62
(dp2721
sg71
g2706
sg64
(lp2722
g57
(g58
g59
NtRp2723
(dp2724
g62
(dp2725
g70
I3
ssg71
g2719
sg64
(lp2726
g1088
asbasbasbag57
(g73
g59
NtRp2727
(dp2728
g62
(dp2729
sg71
g2576
sg64
(lp2730
g57
(g78
g59
NtRp2731
(dp2732
g62
(dp2733
g82
g83
ssg71
g2727
sg64
(lp2734
S'HTTP_REFERER'
p2735
asbag57
(g78
g59
NtRp2736
(dp2737
g62
(dp2738
g89
g90
ssg71
g2727
sg64
(lp2739
S':'
asbag57
(g78
g59
NtRp2740
(dp2741
g62
(dp2742
sg71
g2727
sg64
(lp2743
g57
(g58
g59
NtRp2744
(dp2745
g62
(dp2746
g70
I3
ssg71
g2740
sg64
(lp2747
g1110
asbasbasbag57
(g73
g59
NtRp2748
(dp2749
g62
(dp2750
sg71
g2576
sg64
(lp2751
g57
(g78
g59
NtRp2752
(dp2753
g62
(dp2754
g82
g83
ssg71
g2748
sg64
(lp2755
S'HTTP_USER_AGENT'
p2756
asbag57
(g78
g59
NtRp2757
(dp2758
g62
(dp2759
g89
g90
ssg71
g2748
sg64
(lp2760
S':'
asbag57
(g78
g59
NtRp2761
(dp2762
g62
(dp2763
sg71
g2748
sg64
(lp2764
g57
(g58
g59
NtRp2765
(dp2766
g62
(dp2767
g70
I3
ssg71
g2761
sg64
(lp2768
g1132
asbasbasbag57
(g73
g59
NtRp2769
(dp2770
g62
(dp2771
sg71
g2576
sg64
(lp2772
g57
(g78
g59
NtRp2773
(dp2774
g62
(dp2775
g82
g83
ssg71
g2769
sg64
(lp2776
S'PATH_INFO'
p2777
asbag57
(g78
g59
NtRp2778
(dp2779
g62
(dp2780
g89
g90
ssg71
g2769
sg64
(lp2781
S':'
asbag57
(g78
g59
NtRp2782
(dp2783
g62
(dp2784
sg71
g2769
sg64
(lp2785
g57
(g58
g59
NtRp2786
(dp2787
g62
(dp2788
g70
I3
ssg71
g2782
sg64
(lp2789
g1286
asbasbasbag57
(g73
g59
NtRp2790
(dp2791
g62
(dp2792
sg71
g2576
sg64
(lp2793
g57
(g78
g59
NtRp2794
(dp2795
g62
(dp2796
g82
g83
ssg71
g2790
sg64
(lp2797
S'QUERY_STRING'
p2798
asbag57
(g78
g59
NtRp2799
(dp2800
g62
(dp2801
g89
g90
ssg71
g2790
sg64
(lp2802
S':'
asbag57
(g78
g59
NtRp2803
(dp2804
g62
(dp2805
sg71
g2790
sg64
(lp2806
g57
(g58
g59
NtRp2807
(dp2808
g62
(dp2809
g70
I3
ssg71
g2803
sg64
(lp2810
g1308
asbasbasbag57
(g73
g59
NtRp2811
(dp2812
g62
(dp2813
sg71
g2576
sg64
(lp2814
g57
(g78
g59
NtRp2815
(dp2816
g62
(dp2817
g82
g83
ssg71
g2811
sg64
(lp2818
S'REMOTE_ADDR'
p2819
asbag57
(g78
g59
NtRp2820
(dp2821
g62
(dp2822
g89
g90
ssg71
g2811
sg64
(lp2823
S':'
asbag57
(g78
g59
NtRp2824
(dp2825
g62
(dp2826
sg71
g2811
sg64
(lp2827
g57
(g58
g59
NtRp2828
(dp2829
g62
(dp2830
g70
I3
ssg71
g2824
sg64
(lp2831
g326
asbasbasbag57
(g73
g59
NtRp2832
(dp2833
g62
(dp2834
sg71
g2576
sg64
(lp2835
g57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
g82
g83
ssg71
g2832
sg64
(lp2839
S'REMOTE_PORT'
p2840
asbag57
(g78
g59
NtRp2841
(dp2842
g62
(dp2843
g89
g90
ssg71
g2832
sg64
(lp2844
S':'
asbag57
(g78
g59
NtRp2845
(dp2846
g62
(dp2847
sg71
g2832
sg64
(lp2848
g57
(g58
g59
NtRp2849
(dp2850
g62
(dp2851
g70
I3
ssg71
g2845
sg64
(lp2852
g1351
asbasbasbag57
(g73
g59
NtRp2853
(dp2854
g62
(dp2855
sg71
g2576
sg64
(lp2856
g57
(g78
g59
NtRp2857
(dp2858
g62
(dp2859
g82
g83
ssg71
g2853
sg64
(lp2860
S'REQUEST_METHOD'
p2861
asbag57
(g78
g59
NtRp2862
(dp2863
g62
(dp2864
g89
g90
ssg71
g2853
sg64
(lp2865
S':'
asbag57
(g78
g59
NtRp2866
(dp2867
g62
(dp2868
sg71
g2853
sg64
(lp2869
g57
(g58
g59
NtRp2870
(dp2871
g62
(dp2872
g70
I3
ssg71
g2866
sg64
(lp2873
g1373
asbasbasbag57
(g73
g59
NtRp2874
(dp2875
g62
(dp2876
sg71
g2576
sg64
(lp2877
g57
(g78
g59
NtRp2878
(dp2879
g62
(dp2880
g82
g83
ssg71
g2874
sg64
(lp2881
S'REQUEST_URI'
p2882
asbag57
(g78
g59
NtRp2883
(dp2884
g62
(dp2885
g89
g90
ssg71
g2874
sg64
(lp2886
S':'
asbag57
(g78
g59
NtRp2887
(dp2888
g62
(dp2889
sg71
g2874
sg64
(lp2890
g57
(g58
g59
NtRp2891
(dp2892
g62
(dp2893
g70
I3
ssg71
g2887
sg64
(lp2894
g1395
asbasbasbag57
(g73
g59
NtRp2895
(dp2896
g62
(dp2897
sg71
g2576
sg64
(lp2898
g57
(g78
g59
NtRp2899
(dp2900
g62
(dp2901
g82
g83
ssg71
g2895
sg64
(lp2902
S'SCRIPT_NAME'
p2903
asbag57
(g78
g59
NtRp2904
(dp2905
g62
(dp2906
g89
g90
ssg71
g2895
sg64
(lp2907
S':'
asbag57
(g78
g59
NtRp2908
(dp2909
g62
(dp2910
sg71
g2895
sg64
(lp2911
g57
(g58
g59
NtRp2912
(dp2913
g62
(dp2914
g70
I3
ssg71
g2908
sg64
(lp2915
S''
asbasbasbag57
(g73
g59
NtRp2916
(dp2917
g62
(dp2918
sg71
g2576
sg64
(lp2919
g57
(g78
g59
NtRp2920
(dp2921
g62
(dp2922
g82
g83
ssg71
g2916
sg64
(lp2923
S'SERVER_NAME'
p2924
asbag57
(g78
g59
NtRp2925
(dp2926
g62
(dp2927
g89
g90
ssg71
g2916
sg64
(lp2928
S':'
asbag57
(g78
g59
NtRp2929
(dp2930
g62
(dp2931
sg71
g2916
sg64
(lp2932
g57
(g58
g59
NtRp2933
(dp2934
g62
(dp2935
g70
I3
ssg71
g2929
sg64
(lp2936
g1438
asbasbasbag57
(g73
g59
NtRp2937
(dp2938
g62
(dp2939
sg71
g2576
sg64
(lp2940
g57
(g78
g59
NtRp2941
(dp2942
g62
(dp2943
g82
g83
ssg71
g2937
sg64
(lp2944
S'SERVER_PORT'
p2945
asbag57
(g78
g59
NtRp2946
(dp2947
g62
(dp2948
g89
g90
ssg71
g2937
sg64
(lp2949
S':'
asbag57
(g78
g59
NtRp2950
(dp2951
g62
(dp2952
sg71
g2937
sg64
(lp2953
g57
(g58
g59
NtRp2954
(dp2955
g62
(dp2956
g70
I3
ssg71
g2950
sg64
(lp2957
g1460
asbasbasbag57
(g73
g59
NtRp2958
(dp2959
g62
(dp2960
sg71
g2576
sg64
(lp2961
g57
(g78
g59
NtRp2962
(dp2963
g62
(dp2964
g82
g83
ssg71
g2958
sg64
(lp2965
S'SERVER_PROTOCOL'
p2966
asbag57
(g78
g59
NtRp2967
(dp2968
g62
(dp2969
g89
g90
ssg71
g2958
sg64
(lp2970
S':'
asbag57
(g78
g59
NtRp2971
(dp2972
g62
(dp2973
sg71
g2958
sg64
(lp2974
g57
(g58
g59
NtRp2975
(dp2976
g62
(dp2977
g70
I3
ssg71
g2971
sg64
(lp2978
g1482
asbasbasbag57
(g73
g59
NtRp2979
(dp2980
g62
(dp2981
sg71
g2576
sg64
(lp2982
g57
(g78
g59
NtRp2983
(dp2984
g62
(dp2985
g82
g83
ssg71
g2979
sg64
(lp2986
S'SERVER_SOFTWARE'
p2987
asbag57
(g78
g59
NtRp2988
(dp2989
g62
(dp2990
g89
g90
ssg71
g2979
sg64
(lp2991
S':'
asbag57
(g78
g59
NtRp2992
(dp2993
g62
(dp2994
sg71
g2979
sg64
(lp2995
g57
(g58
g59
NtRp2996
(dp2997
g62
(dp2998
g70
I3
ssg71
g2992
sg64
(lp2999
g1504
asbasbasbag57
(g73
g59
NtRp3000
(dp3001
g62
(dp3002
sg71
g2576
sg64
(lp3003
g57
(g78
g59
NtRp3004
(dp3005
g62
(dp3006
g82
g83
ssg71
g3000
sg64
(lp3007
S'wsgi.errors'
p3008
asbag57
(g78
g59
NtRp3009
(dp3010
g62
(dp3011
g89
g90
ssg71
g3000
sg64
(lp3012
S':'
asbag57
(g78
g59
NtRp3013
(dp3014
g62
(dp3015
sg71
g3000
sg64
(lp3016
g57
(g58
g59
NtRp3017
(dp3018
g62
(dp3019
g70
I3
ssg71
g3013
sg64
(lp3020
S"<open file '<stderr>', mode 'w' at 0xb72df0d0>"
p3021
asbasbasbag57
(g73
g59
NtRp3022
(dp3023
g62
(dp3024
sg71
g2576
sg64
(lp3025
g57
(g78
g59
NtRp3026
(dp3027
g62
(dp3028
g82
g83
ssg71
g3022
sg64
(lp3029
S'wsgi.file_wrapper'
p3030
asbag57
(g78
g59
NtRp3031
(dp3032
g62
(dp3033
g89
g90
ssg71
g3022
sg64
(lp3034
S':'
asbag57
(g78
g59
NtRp3035
(dp3036
g62
(dp3037
sg71
g3022
sg64
(lp3038
g57
(g58
g59
NtRp3039
(dp3040
g62
(dp3041
g70
I3
ssg71
g3035
sg64
(lp3042
S'<class wsgiref.util.FileWrapper at 0x98b4b9c>'
p3043
asbasbasbag57
(g73
g59
NtRp3044
(dp3045
g62
(dp3046
sg71
g2576
sg64
(lp3047
g57
(g78
g59
NtRp3048
(dp3049
g62
(dp3050
g82
g83
ssg71
g3044
sg64
(lp3051
S'wsgi.input'
p3052
asbag57
(g78
g59
NtRp3053
(dp3054
g62
(dp3055
g89
g90
ssg71
g3044
sg64
(lp3056
S':'
asbag57
(g78
g59
NtRp3057
(dp3058
g62
(dp3059
sg71
g3044
sg64
(lp3060
g57
(g58
g59
NtRp3061
(dp3062
g62
(dp3063
g70
I3
ssg71
g3057
sg64
(lp3064
S'<cStringIO.StringO object at 0xb0458f00>'
p3065
asbasbasbag57
(g73
g59
NtRp3066
(dp3067
g62
(dp3068
sg71
g2576
sg64
(lp3069
g57
(g78
g59
NtRp3070
(dp3071
g62
(dp3072
g82
g83
ssg71
g3066
sg64
(lp3073
S'wsgi.multiprocess'
p3074
asbag57
(g78
g59
NtRp3075
(dp3076
g62
(dp3077
g89
g90
ssg71
g3066
sg64
(lp3078
S':'
asbag57
(g78
g59
NtRp3079
(dp3080
g62
(dp3081
sg71
g3066
sg64
(lp3082
g57
(g58
g59
NtRp3083
(dp3084
g62
(dp3085
g70
I3
ssg71
g3079
sg64
(lp3086
g100
asbasbasbag57
(g73
g59
NtRp3087
(dp3088
g62
(dp3089
sg71
g2576
sg64
(lp3090
g57
(g78
g59
NtRp3091
(dp3092
g62
(dp3093
g82
g83
ssg71
g3087
sg64
(lp3094
S'wsgi.multithread'
p3095
asbag57
(g78
g59
NtRp3096
(dp3097
g62
(dp3098
g89
g90
ssg71
g3087
sg64
(lp3099
S':'
asbag57
(g78
g59
NtRp3100
(dp3101
g62
(dp3102
sg71
g3087
sg64
(lp3103
g57
(g58
g59
NtRp3104
(dp3105
g62
(dp3106
g70
I3
ssg71
g3100
sg64
(lp3107
g1721
asbasbasbag57
(g73
g59
NtRp3108
(dp3109
g62
(dp3110
sg71
g2576
sg64
(lp3111
g57
(g78
g59
NtRp3112
(dp3113
g62
(dp3114
g82
g83
ssg71
g3108
sg64
(lp3115
S'wsgi.run_once'
p3116
asbag57
(g78
g59
NtRp3117
(dp3118
g62
(dp3119
g89
g90
ssg71
g3108
sg64
(lp3120
S':'
asbag57
(g78
g59
NtRp3121
(dp3122
g62
(dp3123
sg71
g3108
sg64
(lp3124
g57
(g58
g59
NtRp3125
(dp3126
g62
(dp3127
g70
I3
ssg71
g3121
sg64
(lp3128
g100
asbasbasbag57
(g73
g59
NtRp3129
(dp3130
g62
(dp3131
sg71
g2576
sg64
(lp3132
g57
(g78
g59
NtRp3133
(dp3134
g62
(dp3135
g82
g83
ssg71
g3129
sg64
(lp3136
S'wsgi.url_scheme'
p3137
asbag57
(g78
g59
NtRp3138
(dp3139
g62
(dp3140
g89
g90
ssg71
g3129
sg64
(lp3141
S':'
asbag57
(g78
g59
NtRp3142
(dp3143
g62
(dp3144
sg71
g3129
sg64
(lp3145
g57
(g58
g59
NtRp3146
(dp3147
g62
(dp3148
g70
I3
ssg71
g3142
sg64
(lp3149
g1764
asbasbasbag57
(g73
g59
NtRp3150
(dp3151
g62
(dp3152
sg71
g2576
sg64
(lp3153
g57
(g78
g59
NtRp3154
(dp3155
g62
(dp3156
g82
g83
ssg71
g3150
sg64
(lp3157
S'wsgi.version'
p3158
asbag57
(g78
g59
NtRp3159
(dp3160
g62
(dp3161
g89
g90
ssg71
g3150
sg64
(lp3162
S':'
asbag57
(g78
g59
NtRp3163
(dp3164
g62
(dp3165
sg71
g3150
sg64
(lp3166
g57
(g58
g59
NtRp3167
(dp3168
g62
(dp3169
g70
I3
ssg71
g3163
sg64
(lp3170
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p3171
(lp3172
(dp3173
S'file'
p3174
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p3175
sS'dump'
p3176
(dp3177
S'environment'
p3178
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p3179
sS'ccode'
p3180
S'<code object <module> at 0xb0328188, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p3181
ssS'lnum'
p3182
I212
sS'lines'
p3183
(dp3184
I207
S'    try:'
p3185
sI208
S'        if isinstance(code, types.CodeType):'
p3186
sI209
S'            ccode = code'
p3187
sI210
S'        else:'
p3188
sI211
S'            ccode = compile2(code, layer)'
p3189
sI212
S'        exec ccode in environment'
p3190
sI213
S'    except HTTP:'
p3191
sI214
S'        raise'
p3192
sI215
S'    except RestrictedError:'
p3193
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p3194
ssS'call'
p3195
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p3196
sS'func'
p3197
S'restricted'
p3198
sa(dp3199
g3174
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3200
sg3176
(dp3201
sg3182
I1126
sg3183
(dp3202
I1120
S'   form = SQLFORM(db.sample_files)'
p3203
sI1121
S'   form.vars.sample = sid'
p3204
sI1122
S'   return locals()'
p3205
sI1123
S''
sI1124
S''
sI1115
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p3206
sI1116
S'   """ per sample . takes id of the sample as the input """'
p3207
sI1117
S'   sid = request.args(0)'
p3208
sI1118
S'   sample = db(db.sample.id == sid).select().first()'
p3209
sI1119
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p3210
ssg3195
S'()'
p3211
sg3197
S'<module>'
p3212
sa(dp3213
g3174
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3214
sg3176
(dp3215
S'self'
p3216
S'undefined'
p3217
sS'f'
S'<function list_all_dev_projects>'
p3218
ssg3182
I193
sg3183
(dp3219
I192
S'        self._vars = None'
p3220
sI193
S'        self._caller = lambda f: f()'
p3221
sI194
S'        self._view_environment = None'
p3222
sI195
S'        self._custom_commit = None'
p3223
sI196
S'        self._custom_rollback = None'
p3224
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3225
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3226
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3227
sI191
S"        self.delimiters = ('{{', '}}')"
p3228
ssg3195
S'(f=<function list_all_dev_projects>)'
p3229
sg3197
S'<lambda>'
p3230
sa(dp3231
g3174
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3232
sg3176
(dp3233
S'global request'
p3234
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3235
sS'global router'
p3236
S'<function router>'
p3237
sS'request.args'
p3238
S"['project', 'experiment.project', '1', 'sample.e...'biosource.sample_name', '3', 'new', 'biosource']"
p3239
ssg3182
I321
sg3183
(dp3240
I320
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3241
sI321
S'     \trouter(request.args)'
p3242
sI322
S"    s={'sample':lambda ids : redirect(URL('default', 'mapping_multiple', vars=dict(id=ids)))}"
p3243
sI323
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'],selectable = s)"
p3244
sI324
S'    return locals()'
p3245
sI325
S''
sI316
S'    #args1=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],"biosource.sample_name","edit","biosource"]'
p3246
sI317
S'    l1=[lambda row: A(\'copy_\'+tes(row.id),_href=URL("default","router",args=getargs(row.id,args))),dict(header = \'name\',body = lambda row: A(\'copy\'+tes(row.id),_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id])))]'
p3247
sI318
S"    links={'sample':l1}"
p3248
sI319
S'#customized Views for certain forms using router'
p3249
ssg3195
S'()'
p3250
sg3197
S'list_all_dev_projects'
p3251
sasS'pyver'
p3252
S'Python 2.7.3: /usr/bin/python'
p3253
sS'session'
p3254
g57
(g58
g59
NtRp3255
(dp3256
g62
(dp3257
sg64
(lp3258
g57
(g66
g59
NtRp3259
(dp3260
g62
(dp3261
g70
I5
ssg71
Nsg64
(lp3262
g57
(g73
g59
NtRp3263
(dp3264
g62
(dp3265
sg71
g3259
sg64
(lp3266
g57
(g78
g59
NtRp3267
(dp3268
g62
(dp3269
g82
g83
ssg71
g3263
sg64
(lp3270
S'auth'
p3271
asbag57
(g78
g59
NtRp3272
(dp3273
g62
(dp3274
g89
g90
ssg71
g3263
sg64
(lp3275
S':'
asbag57
(g78
g59
NtRp3276
(dp3277
g62
(dp3278
sg71
g3263
sg64
(lp3279
g57
(g58
g59
NtRp3280
(dp3281
g62
(dp3282
g70
I5
ssg71
g3276
sg64
(lp3283
g57
(g66
g59
NtRp3284
(dp3285
g62
(dp3286
g70
I4
ssg71
Nsg64
(lp3287
g57
(g73
g59
NtRp3288
(dp3289
g62
(dp3290
sg71
g3284
sg64
(lp3291
g57
(g78
g59
NtRp3292
(dp3293
g62
(dp3294
g82
g83
ssg71
g3288
sg64
(lp3295
S'expiration'
p3296
asbag57
(g78
g59
NtRp3297
(dp3298
g62
(dp3299
g89
g90
ssg71
g3288
sg64
(lp3300
S':'
asbag57
(g78
g59
NtRp3301
(dp3302
g62
(dp3303
sg71
g3288
sg64
(lp3304
g57
(g58
g59
NtRp3305
(dp3306
g62
(dp3307
g70
I4
ssg71
g3301
sg64
(lp3308
S'2592000'
p3309
asbasbasbag57
(g73
g59
NtRp3310
(dp3311
g62
(dp3312
sg71
g3284
sg64
(lp3313
g57
(g78
g59
NtRp3314
(dp3315
g62
(dp3316
g82
g83
ssg71
g3310
sg64
(lp3317
S'hmac_key'
p3318
asbag57
(g78
g59
NtRp3319
(dp3320
g62
(dp3321
g89
g90
ssg71
g3310
sg64
(lp3322
S':'
asbag57
(g78
g59
NtRp3323
(dp3324
g62
(dp3325
sg71
g3310
sg64
(lp3326
g57
(g58
g59
NtRp3327
(dp3328
g62
(dp3329
g70
I4
ssg71
g3323
sg64
(lp3330
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3331
asbasbasbag57
(g73
g59
NtRp3332
(dp3333
g62
(dp3334
sg71
g3284
sg64
(lp3335
g57
(g78
g59
NtRp3336
(dp3337
g62
(dp3338
g82
g83
ssg71
g3332
sg64
(lp3339
S'last_visit'
p3340
asbag57
(g78
g59
NtRp3341
(dp3342
g62
(dp3343
g89
g90
ssg71
g3332
sg64
(lp3344
S':'
asbag57
(g78
g59
NtRp3345
(dp3346
g62
(dp3347
sg71
g3332
sg64
(lp3348
g57
(g58
g59
NtRp3349
(dp3350
g62
(dp3351
g70
I4
ssg71
g3345
sg64
(lp3352
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3353
asbasbasbag57
(g73
g59
NtRp3354
(dp3355
g62
(dp3356
sg71
g3284
sg64
(lp3357
g57
(g78
g59
NtRp3358
(dp3359
g62
(dp3360
g82
g83
ssg71
g3354
sg64
(lp3361
S'remember'
p3362
asbag57
(g78
g59
NtRp3363
(dp3364
g62
(dp3365
g89
g90
ssg71
g3354
sg64
(lp3366
S':'
asbag57
(g78
g59
NtRp3367
(dp3368
g62
(dp3369
sg71
g3354
sg64
(lp3370
g57
(g58
g59
NtRp3371
(dp3372
g62
(dp3373
g70
I4
ssg71
g3367
sg64
(lp3374
g1721
asbasbasbag57
(g73
g59
NtRp3375
(dp3376
g62
(dp3377
sg71
g3284
sg64
(lp3378
g57
(g78
g59
NtRp3379
(dp3380
g62
(dp3381
g82
g83
ssg71
g3375
sg64
(lp3382
S'user'
p3383
asbag57
(g78
g59
NtRp3384
(dp3385
g62
(dp3386
g89
g90
ssg71
g3375
sg64
(lp3387
S':'
asbag57
(g78
g59
NtRp3388
(dp3389
g62
(dp3390
sg71
g3375
sg64
(lp3391
g57
(g58
g59
NtRp3392
(dp3393
g62
(dp3394
g70
I4
ssg71
g3388
sg64
(lp3395
g57
(g66
g59
NtRp3396
(dp3397
g62
(dp3398
g70
I3
ssg71
Nsg64
(lp3399
g57
(g73
g59
NtRp3400
(dp3401
g62
(dp3402
sg71
g3396
sg64
(lp3403
g57
(g78
g59
NtRp3404
(dp3405
g62
(dp3406
g82
g83
ssg71
g3400
sg64
(lp3407
S'address'
p3408
asbag57
(g78
g59
NtRp3409
(dp3410
g62
(dp3411
g89
g90
ssg71
g3400
sg64
(lp3412
S':'
asbag57
(g78
g59
NtRp3413
(dp3414
g62
(dp3415
sg71
g3400
sg64
(lp3416
g57
(g58
g59
NtRp3417
(dp3418
g62
(dp3419
g70
I3
ssg71
g3413
sg64
(lp3420
S'a'
asbasbasbag57
(g73
g59
NtRp3421
(dp3422
g62
(dp3423
sg71
g3396
sg64
(lp3424
g57
(g78
g59
NtRp3425
(dp3426
g62
(dp3427
g82
g83
ssg71
g3421
sg64
(lp3428
S'affiliated_to'
p3429
asbag57
(g78
g59
NtRp3430
(dp3431
g62
(dp3432
g89
g90
ssg71
g3421
sg64
(lp3433
S':'
asbag57
(g78
g59
NtRp3434
(dp3435
g62
(dp3436
sg71
g3421
sg64
(lp3437
g57
(g58
g59
NtRp3438
(dp3439
g62
(dp3440
g70
I3
ssg71
g3434
sg64
(lp3441
S'a'
asbasbasbag57
(g73
g59
NtRp3442
(dp3443
g62
(dp3444
sg71
g3396
sg64
(lp3445
g57
(g78
g59
NtRp3446
(dp3447
g62
(dp3448
g82
g83
ssg71
g3442
sg64
(lp3449
S'city'
p3450
asbag57
(g78
g59
NtRp3451
(dp3452
g62
(dp3453
g89
g90
ssg71
g3442
sg64
(lp3454
S':'
asbag57
(g78
g59
NtRp3455
(dp3456
g62
(dp3457
sg71
g3442
sg64
(lp3458
g57
(g58
g59
NtRp3459
(dp3460
g62
(dp3461
g70
I3
ssg71
g3455
sg64
(lp3462
S'a'
asbasbasbag57
(g73
g59
NtRp3463
(dp3464
g62
(dp3465
sg71
g3396
sg64
(lp3466
g57
(g78
g59
NtRp3467
(dp3468
g62
(dp3469
g82
g83
ssg71
g3463
sg64
(lp3470
S'country'
p3471
asbag57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g89
g90
ssg71
g3463
sg64
(lp3475
S':'
asbag57
(g78
g59
NtRp3476
(dp3477
g62
(dp3478
sg71
g3463
sg64
(lp3479
g57
(g58
g59
NtRp3480
(dp3481
g62
(dp3482
g70
I3
ssg71
g3476
sg64
(lp3483
S'India'
p3484
asbasbasbag57
(g73
g59
NtRp3485
(dp3486
g62
(dp3487
sg71
g3396
sg64
(lp3488
g57
(g78
g59
NtRp3489
(dp3490
g62
(dp3491
g82
g83
ssg71
g3485
sg64
(lp3492
S'email'
p3493
asbag57
(g78
g59
NtRp3494
(dp3495
g62
(dp3496
g89
g90
ssg71
g3485
sg64
(lp3497
S':'
asbag57
(g78
g59
NtRp3498
(dp3499
g62
(dp3500
sg71
g3485
sg64
(lp3501
g57
(g58
g59
NtRp3502
(dp3503
g62
(dp3504
g70
I3
ssg71
g3498
sg64
(lp3505
S'anil.iiith@gmail.com'
p3506
asbasbasbag57
(g73
g59
NtRp3507
(dp3508
g62
(dp3509
sg71
g3396
sg64
(lp3510
g57
(g78
g59
NtRp3511
(dp3512
g62
(dp3513
g82
g83
ssg71
g3507
sg64
(lp3514
S'first_name'
p3515
asbag57
(g78
g59
NtRp3516
(dp3517
g62
(dp3518
g89
g90
ssg71
g3507
sg64
(lp3519
S':'
asbag57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
sg71
g3507
sg64
(lp3523
g57
(g58
g59
NtRp3524
(dp3525
g62
(dp3526
g70
I3
ssg71
g3520
sg64
(lp3527
S'anil'
p3528
asbasbasbag57
(g73
g59
NtRp3529
(dp3530
g62
(dp3531
sg71
g3396
sg64
(lp3532
g57
(g78
g59
NtRp3533
(dp3534
g62
(dp3535
g82
g83
ssg71
g3529
sg64
(lp3536
S'id'
p3537
asbag57
(g78
g59
NtRp3538
(dp3539
g62
(dp3540
g89
g90
ssg71
g3529
sg64
(lp3541
S':'
asbag57
(g78
g59
NtRp3542
(dp3543
g62
(dp3544
sg71
g3529
sg64
(lp3545
g57
(g58
g59
NtRp3546
(dp3547
g62
(dp3548
g70
I3
ssg71
g3542
sg64
(lp3549
S'2'
asbasbasbag57
(g73
g59
NtRp3550
(dp3551
g62
(dp3552
sg71
g3396
sg64
(lp3553
g57
(g78
g59
NtRp3554
(dp3555
g62
(dp3556
g82
g83
ssg71
g3550
sg64
(lp3557
S'last_name'
p3558
asbag57
(g78
g59
NtRp3559
(dp3560
g62
(dp3561
g89
g90
ssg71
g3550
sg64
(lp3562
S':'
asbag57
(g78
g59
NtRp3563
(dp3564
g62
(dp3565
sg71
g3550
sg64
(lp3566
g57
(g58
g59
NtRp3567
(dp3568
g62
(dp3569
g70
I3
ssg71
g3563
sg64
(lp3570
S'n'
asbasbasbag57
(g73
g59
NtRp3571
(dp3572
g62
(dp3573
sg71
g3396
sg64
(lp3574
g57
(g78
g59
NtRp3575
(dp3576
g62
(dp3577
g82
g83
ssg71
g3571
sg64
(lp3578
S'mobile'
p3579
asbag57
(g78
g59
NtRp3580
(dp3581
g62
(dp3582
g89
g90
ssg71
g3571
sg64
(lp3583
S':'
asbag57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
sg71
g3571
sg64
(lp3587
g57
(g58
g59
NtRp3588
(dp3589
g62
(dp3590
g70
I3
ssg71
g3584
sg64
(lp3591
S'1233'
p3592
asbasbasbag57
(g73
g59
NtRp3593
(dp3594
g62
(dp3595
sg71
g3396
sg64
(lp3596
g57
(g78
g59
NtRp3597
(dp3598
g62
(dp3599
g82
g83
ssg71
g3593
sg64
(lp3600
S'phone'
p3601
asbag57
(g78
g59
NtRp3602
(dp3603
g62
(dp3604
g89
g90
ssg71
g3593
sg64
(lp3605
S':'
asbag57
(g78
g59
NtRp3606
(dp3607
g62
(dp3608
sg71
g3593
sg64
(lp3609
g57
(g58
g59
NtRp3610
(dp3611
g62
(dp3612
g70
I3
ssg71
g3606
sg64
(lp3613
S'123'
p3614
asbasbasbag57
(g73
g59
NtRp3615
(dp3616
g62
(dp3617
sg71
g3396
sg64
(lp3618
g57
(g78
g59
NtRp3619
(dp3620
g62
(dp3621
g82
g83
ssg71
g3615
sg64
(lp3622
S'position'
p3623
asbag57
(g78
g59
NtRp3624
(dp3625
g62
(dp3626
g89
g90
ssg71
g3615
sg64
(lp3627
S':'
asbag57
(g78
g59
NtRp3628
(dp3629
g62
(dp3630
sg71
g3615
sg64
(lp3631
g57
(g58
g59
NtRp3632
(dp3633
g62
(dp3634
g70
I3
ssg71
g3628
sg64
(lp3635
S'0'
asbasbasbag57
(g73
g59
NtRp3636
(dp3637
g62
(dp3638
sg71
g3396
sg64
(lp3639
g57
(g78
g59
NtRp3640
(dp3641
g62
(dp3642
g82
g83
ssg71
g3636
sg64
(lp3643
S'postal_code'
p3644
asbag57
(g78
g59
NtRp3645
(dp3646
g62
(dp3647
g89
g90
ssg71
g3636
sg64
(lp3648
S':'
asbag57
(g78
g59
NtRp3649
(dp3650
g62
(dp3651
sg71
g3636
sg64
(lp3652
g57
(g58
g59
NtRp3653
(dp3654
g62
(dp3655
g70
I3
ssg71
g3649
sg64
(lp3656
S'123'
p3657
asbasbasbag57
(g73
g59
NtRp3658
(dp3659
g62
(dp3660
sg71
g3396
sg64
(lp3661
g57
(g78
g59
NtRp3662
(dp3663
g62
(dp3664
g82
g83
ssg71
g3658
sg64
(lp3665
S'registration_at'
p3666
asbag57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g89
g90
ssg71
g3658
sg64
(lp3670
S':'
asbag57
(g78
g59
NtRp3671
(dp3672
g62
(dp3673
sg71
g3658
sg64
(lp3674
g57
(g58
g59
NtRp3675
(dp3676
g62
(dp3677
g70
I3
ssg71
g3671
sg64
(lp3678
S'0'
asbasbasbag57
(g73
g59
NtRp3679
(dp3680
g62
(dp3681
sg71
g3396
sg64
(lp3682
g57
(g78
g59
NtRp3683
(dp3684
g62
(dp3685
g82
g83
ssg71
g3679
sg64
(lp3686
S'registration_id'
p3687
asbag57
(g78
g59
NtRp3688
(dp3689
g62
(dp3690
g89
g90
ssg71
g3679
sg64
(lp3691
S':'
asbag57
(g78
g59
NtRp3692
(dp3693
g62
(dp3694
sg71
g3679
sg64
(lp3695
g57
(g58
g59
NtRp3696
(dp3697
g62
(dp3698
g70
I3
ssg71
g3692
sg64
(lp3699
S''
asbasbasbag57
(g73
g59
NtRp3700
(dp3701
g62
(dp3702
sg71
g3396
sg64
(lp3703
g57
(g78
g59
NtRp3704
(dp3705
g62
(dp3706
g82
g83
ssg71
g3700
sg64
(lp3707
S'registration_key'
p3708
asbag57
(g78
g59
NtRp3709
(dp3710
g62
(dp3711
g89
g90
ssg71
g3700
sg64
(lp3712
S':'
asbag57
(g78
g59
NtRp3713
(dp3714
g62
(dp3715
sg71
g3700
sg64
(lp3716
g57
(g58
g59
NtRp3717
(dp3718
g62
(dp3719
g70
I3
ssg71
g3713
sg64
(lp3720
S''
asbasbasbag57
(g73
g59
NtRp3721
(dp3722
g62
(dp3723
sg71
g3396
sg64
(lp3724
g57
(g78
g59
NtRp3725
(dp3726
g62
(dp3727
g82
g83
ssg71
g3721
sg64
(lp3728
S'reset_password_key'
p3729
asbag57
(g78
g59
NtRp3730
(dp3731
g62
(dp3732
g89
g90
ssg71
g3721
sg64
(lp3733
S':'
asbag57
(g78
g59
NtRp3734
(dp3735
g62
(dp3736
sg71
g3721
sg64
(lp3737
g57
(g58
g59
NtRp3738
(dp3739
g62
(dp3740
g70
I3
ssg71
g3734
sg64
(lp3741
S''
asbasbasbag57
(g73
g59
NtRp3742
(dp3743
g62
(dp3744
sg71
g3396
sg64
(lp3745
g57
(g78
g59
NtRp3746
(dp3747
g62
(dp3748
g82
g83
ssg71
g3742
sg64
(lp3749
S'title'
p3750
asbag57
(g78
g59
NtRp3751
(dp3752
g62
(dp3753
g89
g90
ssg71
g3742
sg64
(lp3754
S':'
asbag57
(g78
g59
NtRp3755
(dp3756
g62
(dp3757
sg71
g3742
sg64
(lp3758
g57
(g58
g59
NtRp3759
(dp3760
g62
(dp3761
g70
I3
ssg71
g3755
sg64
(lp3762
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3763
(dp3764
g62
(dp3765
sg71
g3284
sg64
(lp3766
g57
(g78
g59
NtRp3767
(dp3768
g62
(dp3769
g82
g83
ssg71
g3763
sg64
(lp3770
S'user_groups'
p3771
asbag57
(g78
g59
NtRp3772
(dp3773
g62
(dp3774
g89
g90
ssg71
g3763
sg64
(lp3775
S':'
asbag57
(g78
g59
NtRp3776
(dp3777
g62
(dp3778
sg71
g3763
sg64
(lp3779
g57
(g58
g59
NtRp3780
(dp3781
g62
(dp3782
g70
I4
ssg71
g3776
sg64
(lp3783
g57
(g66
g59
NtRp3784
(dp3785
g62
(dp3786
g70
I3
ssg71
Nsg64
(lp3787
g57
(g73
g59
NtRp3788
(dp3789
g62
(dp3790
sg71
g3784
sg64
(lp3791
g57
(g78
g59
NtRp3792
(dp3793
g62
(dp3794
g82
g83
ssg71
g3788
sg64
(lp3795
S'9'
asbag57
(g78
g59
NtRp3796
(dp3797
g62
(dp3798
g89
g90
ssg71
g3788
sg64
(lp3799
S':'
asbag57
(g78
g59
NtRp3800
(dp3801
g62
(dp3802
sg71
g3788
sg64
(lp3803
g57
(g58
g59
NtRp3804
(dp3805
g62
(dp3806
g70
I3
ssg71
g3800
sg64
(lp3807
S'user_2'
p3808
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3809
(dp3810
g62
(dp3811
sg71
g3259
sg64
(lp3812
g57
(g78
g59
NtRp3813
(dp3814
g62
(dp3815
g82
g83
ssg71
g3809
sg64
(lp3816
S'flash'
p3817
asbag57
(g78
g59
NtRp3818
(dp3819
g62
(dp3820
g89
g90
ssg71
g3809
sg64
(lp3821
S':'
asbag57
(g78
g59
NtRp3822
(dp3823
g62
(dp3824
sg71
g3809
sg64
(lp3825
g57
(g58
g59
NtRp3826
(dp3827
g62
(dp3828
g70
I5
ssg71
g3822
sg64
(lp3829
S'None'
p3830
asbasbasbag57
(g73
g59
NtRp3831
(dp3832
g62
(dp3833
sg71
g3259
sg64
(lp3834
g57
(g78
g59
NtRp3835
(dp3836
g62
(dp3837
g82
g83
ssg71
g3831
sg64
(lp3838
S'last_orderby'
p3839
asbag57
(g78
g59
NtRp3840
(dp3841
g62
(dp3842
g89
g90
ssg71
g3831
sg64
(lp3843
S':'
asbag57
(g78
g59
NtRp3844
(dp3845
g62
(dp3846
sg71
g3831
sg64
(lp3847
g57
(g58
g59
NtRp3848
(dp3849
g62
(dp3850
g70
I5
ssg71
g3844
sg64
(lp3851
S'None'
p3852
asbasbasbag57
(g73
g59
NtRp3853
(dp3854
g62
(dp3855
sg71
g3259
sg64
(lp3856
g57
(g78
g59
NtRp3857
(dp3858
g62
(dp3859
g82
g83
ssg71
g3853
sg64
(lp3860
S'last_query'
p3861
asbag57
(g78
g59
NtRp3862
(dp3863
g62
(dp3864
g89
g90
ssg71
g3853
sg64
(lp3865
S':'
asbag57
(g78
g59
NtRp3866
(dp3867
g62
(dp3868
sg71
g3853
sg64
(lp3869
g57
(g58
g59
NtRp3870
(dp3871
g62
(dp3872
g70
I5
ssg71
g3866
sg64
(lp3873
S'db.project.id>0'
p3874
asbasbasbasbasbsS'etype'
p3875
S"<type 'exceptions.TypeError'>"
p3876
sS'date'
p3877
S'Sun Feb 24 23:34:16 2013'
p3878
sS'response'
p3879
g57
(g58
g59
NtRp3880
(dp3881
g62
(dp3882
sg64
(lp3883
g57
(g66
g59
NtRp3884
(dp3885
g62
(dp3886
g70
I5
ssg71
Nsg64
(lp3887
g57
(g73
g59
NtRp3888
(dp3889
g62
(dp3890
sg71
g3884
sg64
(lp3891
g57
(g78
g59
NtRp3892
(dp3893
g62
(dp3894
g82
g83
ssg71
g3888
sg64
(lp3895
g269
asbag57
(g78
g59
NtRp3896
(dp3897
g62
(dp3898
g89
g90
ssg71
g3888
sg64
(lp3899
S':'
asbag57
(g78
g59
NtRp3900
(dp3901
g62
(dp3902
sg71
g3888
sg64
(lp3903
g57
(g58
g59
NtRp3904
(dp3905
g62
(dp3906
g70
I5
ssg71
g3900
sg64
(lp3907
S'<cStringIO.StringO object at 0xb04582e0>'
p3908
asbasbasbag57
(g73
g59
NtRp3909
(dp3910
g62
(dp3911
sg71
g3884
sg64
(lp3912
g57
(g78
g59
NtRp3913
(dp3914
g62
(dp3915
g82
g83
ssg71
g3909
sg64
(lp3916
g357
asbag57
(g78
g59
NtRp3917
(dp3918
g62
(dp3919
g89
g90
ssg71
g3909
sg64
(lp3920
S':'
asbag57
(g78
g59
NtRp3921
(dp3922
g62
(dp3923
sg71
g3909
sg64
(lp3924
g57
(g58
g59
NtRp3925
(dp3926
g62
(dp3927
g70
I5
ssg71
g3921
sg64
(lp3928
g57
(g66
g59
NtRp3929
(dp3930
g62
(dp3931
g70
I4
ssg71
Nsg64
(lp3932
g57
(g73
g59
NtRp3933
(dp3934
g62
(dp3935
sg71
g3929
sg64
(lp3936
g57
(g78
g59
NtRp3937
(dp3938
g62
(dp3939
g82
g83
ssg71
g3933
sg64
(lp3940
S'session_id_dev_bootstrap_ch'
p3941
asbag57
(g78
g59
NtRp3942
(dp3943
g62
(dp3944
g89
g90
ssg71
g3933
sg64
(lp3945
S':'
asbag57
(g78
g59
NtRp3946
(dp3947
g62
(dp3948
sg71
g3933
sg64
(lp3949
g57
(g58
g59
NtRp3950
(dp3951
g62
(dp3952
g70
I4
ssg71
g3946
sg64
(lp3953
g589
ag57
(g66
g59
NtRp3954
(dp3955
g62
(dp3956
g70
I3
ssg71
Nsg64
(lp3957
g57
(g73
g59
NtRp3958
(dp3959
g62
(dp3960
sg71
g3954
sg64
(lp3961
g57
(g78
g59
NtRp3962
(dp3963
g62
(dp3964
g82
g83
ssg71
g3958
sg64
(lp3965
g408
asbag57
(g78
g59
NtRp3966
(dp3967
g62
(dp3968
g89
g90
ssg71
g3958
sg64
(lp3969
S':'
asbag57
(g78
g59
NtRp3970
(dp3971
g62
(dp3972
sg71
g3958
sg64
(lp3973
g57
(g58
g59
NtRp3974
(dp3975
g62
(dp3976
g70
I3
ssg71
g3970
sg64
(lp3977
S''
asbasbasbag57
(g73
g59
NtRp3978
(dp3979
g62
(dp3980
sg71
g3954
sg64
(lp3981
g57
(g78
g59
NtRp3982
(dp3983
g62
(dp3984
g82
g83
ssg71
g3978
sg64
(lp3985
g429
asbag57
(g78
g59
NtRp3986
(dp3987
g62
(dp3988
g89
g90
ssg71
g3978
sg64
(lp3989
S':'
asbag57
(g78
g59
NtRp3990
(dp3991
g62
(dp3992
sg71
g3978
sg64
(lp3993
g57
(g58
g59
NtRp3994
(dp3995
g62
(dp3996
g70
I3
ssg71
g3990
sg64
(lp3997
S''
asbasbasbag57
(g73
g59
NtRp3998
(dp3999
g62
(dp4000
sg71
g3954
sg64
(lp4001
g57
(g78
g59
NtRp4002
(dp4003
g62
(dp4004
g82
g83
ssg71
g3998
sg64
(lp4005
g450
asbag57
(g78
g59
NtRp4006
(dp4007
g62
(dp4008
g89
g90
ssg71
g3998
sg64
(lp4009
S':'
asbag57
(g78
g59
NtRp4010
(dp4011
g62
(dp4012
sg71
g3998
sg64
(lp4013
g57
(g58
g59
NtRp4014
(dp4015
g62
(dp4016
g70
I3
ssg71
g4010
sg64
(lp4017
S'2592000'
p4018
asbasbasbag57
(g73
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g3954
sg64
(lp4022
g57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
g82
g83
ssg71
g4019
sg64
(lp4026
g471
asbag57
(g78
g59
NtRp4027
(dp4028
g62
(dp4029
g89
g90
ssg71
g4019
sg64
(lp4030
S':'
asbag57
(g78
g59
NtRp4031
(dp4032
g62
(dp4033
sg71
g4019
sg64
(lp4034
g57
(g58
g59
NtRp4035
(dp4036
g62
(dp4037
g70
I3
ssg71
g4031
sg64
(lp4038
S''
asbasbasbag57
(g73
g59
NtRp4039
(dp4040
g62
(dp4041
sg71
g3954
sg64
(lp4042
g57
(g78
g59
NtRp4043
(dp4044
g62
(dp4045
g82
g83
ssg71
g4039
sg64
(lp4046
g492
asbag57
(g78
g59
NtRp4047
(dp4048
g62
(dp4049
g89
g90
ssg71
g4039
sg64
(lp4050
S':'
asbag57
(g78
g59
NtRp4051
(dp4052
g62
(dp4053
sg71
g4039
sg64
(lp4054
g57
(g58
g59
NtRp4055
(dp4056
g62
(dp4057
g70
I3
ssg71
g4051
sg64
(lp4058
S''
asbasbasbag57
(g73
g59
NtRp4059
(dp4060
g62
(dp4061
sg71
g3954
sg64
(lp4062
g57
(g78
g59
NtRp4063
(dp4064
g62
(dp4065
g82
g83
ssg71
g4059
sg64
(lp4066
g513
asbag57
(g78
g59
NtRp4067
(dp4068
g62
(dp4069
g89
g90
ssg71
g4059
sg64
(lp4070
S':'
asbag57
(g78
g59
NtRp4071
(dp4072
g62
(dp4073
sg71
g4059
sg64
(lp4074
g57
(g58
g59
NtRp4075
(dp4076
g62
(dp4077
g70
I3
ssg71
g4071
sg64
(lp4078
S'/'
asbasbasbag57
(g73
g59
NtRp4079
(dp4080
g62
(dp4081
sg71
g3954
sg64
(lp4082
g57
(g78
g59
NtRp4083
(dp4084
g62
(dp4085
g82
g83
ssg71
g4079
sg64
(lp4086
g534
asbag57
(g78
g59
NtRp4087
(dp4088
g62
(dp4089
g89
g90
ssg71
g4079
sg64
(lp4090
S':'
asbag57
(g78
g59
NtRp4091
(dp4092
g62
(dp4093
sg71
g4079
sg64
(lp4094
g57
(g58
g59
NtRp4095
(dp4096
g62
(dp4097
g70
I3
ssg71
g4091
sg64
(lp4098
S''
asbasbasbag57
(g73
g59
NtRp4099
(dp4100
g62
(dp4101
sg71
g3954
sg64
(lp4102
g57
(g78
g59
NtRp4103
(dp4104
g62
(dp4105
g82
g83
ssg71
g4099
sg64
(lp4106
g555
asbag57
(g78
g59
NtRp4107
(dp4108
g62
(dp4109
g89
g90
ssg71
g4099
sg64
(lp4110
S':'
asbag57
(g78
g59
NtRp4111
(dp4112
g62
(dp4113
sg71
g4099
sg64
(lp4114
g57
(g58
g59
NtRp4115
(dp4116
g62
(dp4117
g70
I3
ssg71
g4111
sg64
(lp4118
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4119
(dp4120
g62
(dp4121
sg71
g3884
sg64
(lp4122
g57
(g78
g59
NtRp4123
(dp4124
g62
(dp4125
g82
g83
ssg71
g4119
sg64
(lp4126
S'delimiters'
p4127
asbag57
(g78
g59
NtRp4128
(dp4129
g62
(dp4130
g89
g90
ssg71
g4119
sg64
(lp4131
S':'
asbag57
(g78
g59
NtRp4132
(dp4133
g62
(dp4134
sg71
g4119
sg64
(lp4135
g57
(g58
g59
NtRp4136
(dp4137
g62
(dp4138
g70
I5
ssg71
g4132
sg64
(lp4139
g57
(g66
g59
NtRp4140
(dp4141
g62
(dp4142
g70
I4
ssg71
Nsg64
(lp4143
g57
(g73
g59
NtRp4144
(dp4145
g62
(dp4146
sg71
g4140
sg64
(lp4147
g57
(g78
g59
NtRp4148
(dp4149
g62
(dp4150
sg71
g4144
sg64
(lp4151
g57
(g58
g59
NtRp4152
(dp4153
g62
(dp4154
g70
I4
ssg71
g4148
sg64
(lp4155
S'{{'
p4156
asbasbasbag57
(g73
g59
NtRp4157
(dp4158
g62
(dp4159
sg71
g4140
sg64
(lp4160
g57
(g78
g59
NtRp4161
(dp4162
g62
(dp4163
sg71
g4157
sg64
(lp4164
g57
(g58
g59
NtRp4165
(dp4166
g62
(dp4167
g70
I4
ssg71
g4161
sg64
(lp4168
S'}}'
p4169
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4170
(dp4171
g62
(dp4172
sg71
g3884
sg64
(lp4173
g57
(g78
g59
NtRp4174
(dp4175
g62
(dp4176
g82
g83
ssg71
g4170
sg64
(lp4177
S'files'
p4178
asbag57
(g78
g59
NtRp4179
(dp4180
g62
(dp4181
g89
g90
ssg71
g4170
sg64
(lp4182
S':'
asbag57
(g78
g59
NtRp4183
(dp4184
g62
(dp4185
sg71
g4170
sg64
(lp4186
g57
(g58
g59
NtRp4187
(dp4188
g62
(dp4189
g70
I5
ssg71
g4183
sg64
(lp4190
g57
(g66
g59
NtRp4191
(dp4192
g62
(dp4193
g70
I4
ssg71
Nsg64
(lp4194
g57
(g73
g59
NtRp4195
(dp4196
g62
(dp4197
sg71
g4191
sg64
(lp4198
g57
(g78
g59
NtRp4199
(dp4200
g62
(dp4201
sg71
g4195
sg64
(lp4202
g57
(g58
g59
NtRp4203
(dp4204
g62
(dp4205
g70
I4
ssg71
g4199
sg64
(lp4206
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4207
asbasbasbag57
(g73
g59
NtRp4208
(dp4209
g62
(dp4210
sg71
g4191
sg64
(lp4211
g57
(g78
g59
NtRp4212
(dp4213
g62
(dp4214
sg71
g4208
sg64
(lp4215
g57
(g58
g59
NtRp4216
(dp4217
g62
(dp4218
g70
I4
ssg71
g4212
sg64
(lp4219
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4220
asbasbasbag57
(g73
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g4191
sg64
(lp4224
g57
(g78
g59
NtRp4225
(dp4226
g62
(dp4227
sg71
g4221
sg64
(lp4228
g57
(g58
g59
NtRp4229
(dp4230
g62
(dp4231
g70
I4
ssg71
g4225
sg64
(lp4232
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4233
asbasbasbag57
(g73
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4191
sg64
(lp4237
g57
(g78
g59
NtRp4238
(dp4239
g62
(dp4240
sg71
g4234
sg64
(lp4241
g57
(g58
g59
NtRp4242
(dp4243
g62
(dp4244
g70
I4
ssg71
g4238
sg64
(lp4245
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4246
asbasbasbag57
(g73
g59
NtRp4247
(dp4248
g62
(dp4249
sg71
g4191
sg64
(lp4250
g57
(g78
g59
NtRp4251
(dp4252
g62
(dp4253
sg71
g4247
sg64
(lp4254
g57
(g58
g59
NtRp4255
(dp4256
g62
(dp4257
g70
I4
ssg71
g4251
sg64
(lp4258
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4259
asbasbasbag57
(g73
g59
NtRp4260
(dp4261
g62
(dp4262
sg71
g4191
sg64
(lp4263
g57
(g78
g59
NtRp4264
(dp4265
g62
(dp4266
sg71
g4260
sg64
(lp4267
g57
(g58
g59
NtRp4268
(dp4269
g62
(dp4270
g70
I4
ssg71
g4264
sg64
(lp4271
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4272
asbasbasbag57
(g73
g59
NtRp4273
(dp4274
g62
(dp4275
sg71
g4191
sg64
(lp4276
g57
(g78
g59
NtRp4277
(dp4278
g62
(dp4279
sg71
g4273
sg64
(lp4280
g57
(g58
g59
NtRp4281
(dp4282
g62
(dp4283
g70
I4
ssg71
g4277
sg64
(lp4284
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4285
asbasbasbag57
(g73
g59
NtRp4286
(dp4287
g62
(dp4288
sg71
g4191
sg64
(lp4289
g57
(g78
g59
NtRp4290
(dp4291
g62
(dp4292
sg71
g4286
sg64
(lp4293
g57
(g58
g59
NtRp4294
(dp4295
g62
(dp4296
g70
I4
ssg71
g4290
sg64
(lp4297
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4298
asbasbasbag57
(g73
g59
NtRp4299
(dp4300
g62
(dp4301
sg71
g4191
sg64
(lp4302
g57
(g78
g59
NtRp4303
(dp4304
g62
(dp4305
sg71
g4299
sg64
(lp4306
g57
(g58
g59
NtRp4307
(dp4308
g62
(dp4309
g70
I4
ssg71
g4303
sg64
(lp4310
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4311
asbasbasbag57
(g73
g59
NtRp4312
(dp4313
g62
(dp4314
sg71
g4191
sg64
(lp4315
g57
(g78
g59
NtRp4316
(dp4317
g62
(dp4318
sg71
g4312
sg64
(lp4319
g57
(g58
g59
NtRp4320
(dp4321
g62
(dp4322
g70
I4
ssg71
g4316
sg64
(lp4323
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4324
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4325
(dp4326
g62
(dp4327
sg71
g3884
sg64
(lp4328
g57
(g78
g59
NtRp4329
(dp4330
g62
(dp4331
g82
g83
ssg71
g4325
sg64
(lp4332
S'flash'
p4333
asbag57
(g78
g59
NtRp4334
(dp4335
g62
(dp4336
g89
g90
ssg71
g4325
sg64
(lp4337
S':'
asbag57
(g78
g59
NtRp4338
(dp4339
g62
(dp4340
sg71
g4325
sg64
(lp4341
g57
(g58
g59
NtRp4342
(dp4343
g62
(dp4344
g70
I5
ssg71
g4338
sg64
(lp4345
S''
asbasbasbag57
(g73
g59
NtRp4346
(dp4347
g62
(dp4348
sg71
g3884
sg64
(lp4349
g57
(g78
g59
NtRp4350
(dp4351
g62
(dp4352
g82
g83
ssg71
g4346
sg64
(lp4353
S'generic_patterns'
p4354
asbag57
(g78
g59
NtRp4355
(dp4356
g62
(dp4357
g89
g90
ssg71
g4346
sg64
(lp4358
S':'
asbag57
(g78
g59
NtRp4359
(dp4360
g62
(dp4361
sg71
g4346
sg64
(lp4362
g57
(g58
g59
NtRp4363
(dp4364
g62
(dp4365
g70
I5
ssg71
g4359
sg64
(lp4366
g57
(g66
g59
NtRp4367
(dp4368
g62
(dp4369
g70
I4
ssg71
Nsg64
(lp4370
g57
(g73
g59
NtRp4371
(dp4372
g62
(dp4373
sg71
g4367
sg64
(lp4374
g57
(g78
g59
NtRp4375
(dp4376
g62
(dp4377
sg71
g4371
sg64
(lp4378
g57
(g58
g59
NtRp4379
(dp4380
g62
(dp4381
g70
I4
ssg71
g4375
sg64
(lp4382
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4383
(dp4384
g62
(dp4385
sg71
g3884
sg64
(lp4386
g57
(g78
g59
NtRp4387
(dp4388
g62
(dp4389
g82
g83
ssg71
g4383
sg64
(lp4390
S'google_analytics_id'
p4391
asbag57
(g78
g59
NtRp4392
(dp4393
g62
(dp4394
g89
g90
ssg71
g4383
sg64
(lp4395
S':'
asbag57
(g78
g59
NtRp4396
(dp4397
g62
(dp4398
sg71
g4383
sg64
(lp4399
g57
(g58
g59
NtRp4400
(dp4401
g62
(dp4402
g70
I5
ssg71
g4396
sg64
(lp4403
S'None'
p4404
asbasbasbag57
(g73
g59
NtRp4405
(dp4406
g62
(dp4407
sg71
g3884
sg64
(lp4408
g57
(g78
g59
NtRp4409
(dp4410
g62
(dp4411
g82
g83
ssg71
g4405
sg64
(lp4412
S'headers'
p4413
asbag57
(g78
g59
NtRp4414
(dp4415
g62
(dp4416
g89
g90
ssg71
g4405
sg64
(lp4417
S':'
asbag57
(g78
g59
NtRp4418
(dp4419
g62
(dp4420
sg71
g4405
sg64
(lp4421
g57
(g58
g59
NtRp4422
(dp4423
g62
(dp4424
g70
I5
ssg71
g4418
sg64
(lp4425
g57
(g66
g59
NtRp4426
(dp4427
g62
(dp4428
g70
I4
ssg71
Nsg64
(lp4429
g57
(g73
g59
NtRp4430
(dp4431
g62
(dp4432
sg71
g4426
sg64
(lp4433
g57
(g78
g59
NtRp4434
(dp4435
g62
(dp4436
g82
g83
ssg71
g4430
sg64
(lp4437
S'X-Powered-By'
p4438
asbag57
(g78
g59
NtRp4439
(dp4440
g62
(dp4441
g89
g90
ssg71
g4430
sg64
(lp4442
S':'
asbag57
(g78
g59
NtRp4443
(dp4444
g62
(dp4445
sg71
g4430
sg64
(lp4446
g57
(g58
g59
NtRp4447
(dp4448
g62
(dp4449
g70
I4
ssg71
g4443
sg64
(lp4450
S'web2py'
p4451
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4452
(dp4453
g62
(dp4454
sg71
g3884
sg64
(lp4455
g57
(g78
g59
NtRp4456
(dp4457
g62
(dp4458
g82
g83
ssg71
g4452
sg64
(lp4459
S'menu'
p4460
asbag57
(g78
g59
NtRp4461
(dp4462
g62
(dp4463
g89
g90
ssg71
g4452
sg64
(lp4464
S':'
asbag57
(g78
g59
NtRp4465
(dp4466
g62
(dp4467
sg71
g4452
sg64
(lp4468
g57
(g58
g59
NtRp4469
(dp4470
g62
(dp4471
g70
I5
ssg71
g4465
sg64
(lp4472
g57
(g66
g59
NtRp4473
(dp4474
g62
(dp4475
g70
I4
ssg71
Nsg64
(lp4476
g57
(g73
g59
NtRp4477
(dp4478
g62
(dp4479
sg71
g4473
sg64
(lp4480
g57
(g78
g59
NtRp4481
(dp4482
g62
(dp4483
sg71
g4477
sg64
(lp4484
g57
(g58
g59
NtRp4485
(dp4486
g62
(dp4487
g70
I4
ssg71
g4481
sg64
(lp4488
g57
(g66
g59
NtRp4489
(dp4490
g62
(dp4491
g70
I3
ssg71
Nsg64
(lp4492
g57
(g73
g59
NtRp4493
(dp4494
g62
(dp4495
sg71
g4489
sg64
(lp4496
g57
(g78
g59
NtRp4497
(dp4498
g62
(dp4499
sg71
g4493
sg64
(lp4500
g57
(g58
g59
NtRp4501
(dp4502
g62
(dp4503
g70
I3
ssg71
g4497
sg64
(lp4504
cgluon.languages
lazyT_unpickle
p4505
(S't\x04\x00\x00\x00Home'
tRp4506
asbasbasbag57
(g73
g59
NtRp4507
(dp4508
g62
(dp4509
sg71
g4489
sg64
(lp4510
g57
(g78
g59
NtRp4511
(dp4512
g62
(dp4513
sg71
g4507
sg64
(lp4514
g57
(g58
g59
NtRp4515
(dp4516
g62
(dp4517
g70
I3
ssg71
g4511
sg64
(lp4518
g100
asbasbasbag57
(g73
g59
NtRp4519
(dp4520
g62
(dp4521
sg71
g4489
sg64
(lp4522
g57
(g78
g59
NtRp4523
(dp4524
g62
(dp4525
sg71
g4519
sg64
(lp4526
g57
(g58
g59
NtRp4527
(dp4528
g62
(dp4529
g70
I3
ssg71
g4523
sg64
(lp4530
S'/DEV_bootstrap_ch/default/list_all_projects'
p4531
asbasbasbag57
(g73
g59
NtRp4532
(dp4533
g62
(dp4534
sg71
g4489
sg64
(lp4535
g57
(g78
g59
NtRp4536
(dp4537
g62
(dp4538
sg71
g4532
sg64
(lp4539
g57
(g58
g59
NtRp4540
(dp4541
g62
(dp4542
g70
I3
ssg71
g4536
sg64
(lp4543
g57
(g66
g59
NtRp4544
(dp4545
g62
(dp4546
g70
I2
ssg71
Nsg64
(lp4547
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4548
(dp4549
g62
(dp4550
sg71
g3884
sg64
(lp4551
g57
(g78
g59
NtRp4552
(dp4553
g62
(dp4554
g82
g83
ssg71
g4548
sg64
(lp4555
S'meta'
p4556
asbag57
(g78
g59
NtRp4557
(dp4558
g62
(dp4559
g89
g90
ssg71
g4548
sg64
(lp4560
S':'
asbag57
(g78
g59
NtRp4561
(dp4562
g62
(dp4563
sg71
g4548
sg64
(lp4564
g57
(g58
g59
NtRp4565
(dp4566
g62
(dp4567
g70
I5
ssg71
g4561
sg64
(lp4568
g57
(g66
g59
NtRp4569
(dp4570
g62
(dp4571
g70
I4
ssg71
Nsg64
(lp4572
g57
(g73
g59
NtRp4573
(dp4574
g62
(dp4575
sg71
g4569
sg64
(lp4576
g57
(g78
g59
NtRp4577
(dp4578
g62
(dp4579
g82
g83
ssg71
g4573
sg64
(lp4580
S'author'
p4581
asbag57
(g78
g59
NtRp4582
(dp4583
g62
(dp4584
g89
g90
ssg71
g4573
sg64
(lp4585
S':'
asbag57
(g78
g59
NtRp4586
(dp4587
g62
(dp4588
sg71
g4573
sg64
(lp4589
g57
(g58
g59
NtRp4590
(dp4591
g62
(dp4592
g70
I4
ssg71
g4586
sg64
(lp4593
S'Vikram Pudi <vikram@iiit.ac.in>'
p4594
asbasbasbag57
(g73
g59
NtRp4595
(dp4596
g62
(dp4597
sg71
g4569
sg64
(lp4598
g57
(g78
g59
NtRp4599
(dp4600
g62
(dp4601
g82
g83
ssg71
g4595
sg64
(lp4602
S'copyright'
p4603
asbag57
(g78
g59
NtRp4604
(dp4605
g62
(dp4606
g89
g90
ssg71
g4595
sg64
(lp4607
S':'
asbag57
(g78
g59
NtRp4608
(dp4609
g62
(dp4610
sg71
g4595
sg64
(lp4611
g57
(g58
g59
NtRp4612
(dp4613
g62
(dp4614
g70
I4
ssg71
g4608
sg64
(lp4615
S'Copyright 2011'
p4616
asbasbasbag57
(g73
g59
NtRp4617
(dp4618
g62
(dp4619
sg71
g4569
sg64
(lp4620
g57
(g78
g59
NtRp4621
(dp4622
g62
(dp4623
g82
g83
ssg71
g4617
sg64
(lp4624
S'description'
p4625
asbag57
(g78
g59
NtRp4626
(dp4627
g62
(dp4628
g89
g90
ssg71
g4617
sg64
(lp4629
S':'
asbag57
(g78
g59
NtRp4630
(dp4631
g62
(dp4632
sg71
g4617
sg64
(lp4633
g57
(g58
g59
NtRp4634
(dp4635
g62
(dp4636
g70
I4
ssg71
g4630
sg64
(lp4637
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4638
asbasbasbag57
(g73
g59
NtRp4639
(dp4640
g62
(dp4641
sg71
g4569
sg64
(lp4642
g57
(g78
g59
NtRp4643
(dp4644
g62
(dp4645
g82
g83
ssg71
g4639
sg64
(lp4646
S'generator'
p4647
asbag57
(g78
g59
NtRp4648
(dp4649
g62
(dp4650
g89
g90
ssg71
g4639
sg64
(lp4651
S':'
asbag57
(g78
g59
NtRp4652
(dp4653
g62
(dp4654
sg71
g4639
sg64
(lp4655
g57
(g58
g59
NtRp4656
(dp4657
g62
(dp4658
g70
I4
ssg71
g4652
sg64
(lp4659
S'Web2py Web Framework'
p4660
asbasbasbag57
(g73
g59
NtRp4661
(dp4662
g62
(dp4663
sg71
g4569
sg64
(lp4664
g57
(g78
g59
NtRp4665
(dp4666
g62
(dp4667
g82
g83
ssg71
g4661
sg64
(lp4668
S'keywords'
p4669
asbag57
(g78
g59
NtRp4670
(dp4671
g62
(dp4672
g89
g90
ssg71
g4661
sg64
(lp4673
S':'
asbag57
(g78
g59
NtRp4674
(dp4675
g62
(dp4676
sg71
g4661
sg64
(lp4677
g57
(g58
g59
NtRp4678
(dp4679
g62
(dp4680
g70
I4
ssg71
g4674
sg64
(lp4681
S'web2py, python, metabolome, metabolomics'
p4682
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4683
(dp4684
g62
(dp4685
sg71
g3884
sg64
(lp4686
g57
(g78
g59
NtRp4687
(dp4688
g62
(dp4689
g82
g83
ssg71
g4683
sg64
(lp4690
S'models_to_run'
p4691
asbag57
(g78
g59
NtRp4692
(dp4693
g62
(dp4694
g89
g90
ssg71
g4683
sg64
(lp4695
S':'
asbag57
(g78
g59
NtRp4696
(dp4697
g62
(dp4698
sg71
g4683
sg64
(lp4699
g57
(g58
g59
NtRp4700
(dp4701
g62
(dp4702
g70
I5
ssg71
g4696
sg64
(lp4703
g57
(g66
g59
NtRp4704
(dp4705
g62
(dp4706
g70
I4
ssg71
Nsg64
(lp4707
g57
(g73
g59
NtRp4708
(dp4709
g62
(dp4710
sg71
g4704
sg64
(lp4711
g57
(g78
g59
NtRp4712
(dp4713
g62
(dp4714
sg71
g4708
sg64
(lp4715
g57
(g58
g59
NtRp4716
(dp4717
g62
(dp4718
g70
I4
ssg71
g4712
sg64
(lp4719
S'^\\w+\\.py$'
p4720
asbasbasbag57
(g73
g59
NtRp4721
(dp4722
g62
(dp4723
sg71
g4704
sg64
(lp4724
g57
(g78
g59
NtRp4725
(dp4726
g62
(dp4727
sg71
g4721
sg64
(lp4728
g57
(g58
g59
NtRp4729
(dp4730
g62
(dp4731
g70
I4
ssg71
g4725
sg64
(lp4732
S'^default/\\w+\\.py$'
p4733
asbasbasbag57
(g73
g59
NtRp4734
(dp4735
g62
(dp4736
sg71
g4704
sg64
(lp4737
g57
(g78
g59
NtRp4738
(dp4739
g62
(dp4740
sg71
g4734
sg64
(lp4741
g57
(g58
g59
NtRp4742
(dp4743
g62
(dp4744
g70
I4
ssg71
g4738
sg64
(lp4745
S'^default/list_all_dev_projects/\\w+\\.py$'
p4746
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4747
(dp4748
g62
(dp4749
sg71
g3884
sg64
(lp4750
g57
(g78
g59
NtRp4751
(dp4752
g62
(dp4753
g82
g83
ssg71
g4747
sg64
(lp4754
S'postprocessing'
p4755
asbag57
(g78
g59
NtRp4756
(dp4757
g62
(dp4758
g89
g90
ssg71
g4747
sg64
(lp4759
S':'
asbag57
(g78
g59
NtRp4760
(dp4761
g62
(dp4762
sg71
g4747
sg64
(lp4763
g57
(g58
g59
NtRp4764
(dp4765
g62
(dp4766
g70
I5
ssg71
g4760
sg64
(lp4767
g57
(g66
g59
NtRp4768
(dp4769
g62
(dp4770
g70
I4
ssg71
Nsg64
(lp4771
sbasbasbasbag57
(g73
g59
NtRp4772
(dp4773
g62
(dp4774
sg71
g3884
sg64
(lp4775
g57
(g78
g59
NtRp4776
(dp4777
g62
(dp4778
g82
g83
ssg71
g4772
sg64
(lp4779
S'session_cookie_expires'
p4780
asbag57
(g78
g59
NtRp4781
(dp4782
g62
(dp4783
g89
g90
ssg71
g4772
sg64
(lp4784
S':'
asbag57
(g78
g59
NtRp4785
(dp4786
g62
(dp4787
sg71
g4772
sg64
(lp4788
g57
(g58
g59
NtRp4789
(dp4790
g62
(dp4791
g70
I5
ssg71
g4785
sg64
(lp4792
S'None'
p4793
asbasbasbag57
(g73
g59
NtRp4794
(dp4795
g62
(dp4796
sg71
g3884
sg64
(lp4797
g57
(g78
g59
NtRp4798
(dp4799
g62
(dp4800
g82
g83
ssg71
g4794
sg64
(lp4801
S'session_data_name'
p4802
asbag57
(g78
g59
NtRp4803
(dp4804
g62
(dp4805
g89
g90
ssg71
g4794
sg64
(lp4806
S':'
asbag57
(g78
g59
NtRp4807
(dp4808
g62
(dp4809
sg71
g4794
sg64
(lp4810
g57
(g58
g59
NtRp4811
(dp4812
g62
(dp4813
g70
I5
ssg71
g4807
sg64
(lp4814
S'session_data_dev_bootstrap_ch'
p4815
asbasbasbag57
(g73
g59
NtRp4816
(dp4817
g62
(dp4818
sg71
g3884
sg64
(lp4819
g57
(g78
g59
NtRp4820
(dp4821
g62
(dp4822
g82
g83
ssg71
g4816
sg64
(lp4823
S'session_file'
p4824
asbag57
(g78
g59
NtRp4825
(dp4826
g62
(dp4827
g89
g90
ssg71
g4816
sg64
(lp4828
S':'
asbag57
(g78
g59
NtRp4829
(dp4830
g62
(dp4831
sg71
g4816
sg64
(lp4832
g57
(g58
g59
NtRp4833
(dp4834
g62
(dp4835
g70
I5
ssg71
g4829
sg64
(lp4836
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xadbaaa18>"
p4837
asbasbasbag57
(g73
g59
NtRp4838
(dp4839
g62
(dp4840
sg71
g3884
sg64
(lp4841
g57
(g78
g59
NtRp4842
(dp4843
g62
(dp4844
g82
g83
ssg71
g4838
sg64
(lp4845
S'session_filename'
p4846
asbag57
(g78
g59
NtRp4847
(dp4848
g62
(dp4849
g89
g90
ssg71
g4838
sg64
(lp4850
S':'
asbag57
(g78
g59
NtRp4851
(dp4852
g62
(dp4853
sg71
g4838
sg64
(lp4854
g57
(g58
g59
NtRp4855
(dp4856
g62
(dp4857
g70
I5
ssg71
g4851
sg64
(lp4858
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4859
asbasbasbag57
(g73
g59
NtRp4860
(dp4861
g62
(dp4862
sg71
g3884
sg64
(lp4863
g57
(g78
g59
NtRp4864
(dp4865
g62
(dp4866
g82
g83
ssg71
g4860
sg64
(lp4867
S'session_id'
p4868
asbag57
(g78
g59
NtRp4869
(dp4870
g62
(dp4871
g89
g90
ssg71
g4860
sg64
(lp4872
S':'
asbag57
(g78
g59
NtRp4873
(dp4874
g62
(dp4875
sg71
g4860
sg64
(lp4876
g57
(g58
g59
NtRp4877
(dp4878
g62
(dp4879
g70
I5
ssg71
g4873
sg64
(lp4880
g589
asbasbasbag57
(g73
g59
NtRp4881
(dp4882
g62
(dp4883
sg71
g3884
sg64
(lp4884
g57
(g78
g59
NtRp4885
(dp4886
g62
(dp4887
g82
g83
ssg71
g4881
sg64
(lp4888
S'session_id_name'
p4889
asbag57
(g78
g59
NtRp4890
(dp4891
g62
(dp4892
g89
g90
ssg71
g4881
sg64
(lp4893
S':'
asbag57
(g78
g59
NtRp4894
(dp4895
g62
(dp4896
sg71
g4881
sg64
(lp4897
g57
(g58
g59
NtRp4898
(dp4899
g62
(dp4900
g70
I5
ssg71
g4894
sg64
(lp4901
g3941
asbasbasbag57
(g73
g59
NtRp4902
(dp4903
g62
(dp4904
sg71
g3884
sg64
(lp4905
g57
(g78
g59
NtRp4906
(dp4907
g62
(dp4908
g82
g83
ssg71
g4902
sg64
(lp4909
S'session_locked'
p4910
asbag57
(g78
g59
NtRp4911
(dp4912
g62
(dp4913
g89
g90
ssg71
g4902
sg64
(lp4914
S':'
asbag57
(g78
g59
NtRp4915
(dp4916
g62
(dp4917
sg71
g4902
sg64
(lp4918
g57
(g58
g59
NtRp4919
(dp4920
g62
(dp4921
g70
I5
ssg71
g4915
sg64
(lp4922
g1721
asbasbasbag57
(g73
g59
NtRp4923
(dp4924
g62
(dp4925
sg71
g3884
sg64
(lp4926
g57
(g78
g59
NtRp4927
(dp4928
g62
(dp4929
g82
g83
ssg71
g4923
sg64
(lp4930
S'session_new'
p4931
asbag57
(g78
g59
NtRp4932
(dp4933
g62
(dp4934
g89
g90
ssg71
g4923
sg64
(lp4935
S':'
asbag57
(g78
g59
NtRp4936
(dp4937
g62
(dp4938
sg71
g4923
sg64
(lp4939
g57
(g58
g59
NtRp4940
(dp4941
g62
(dp4942
g70
I5
ssg71
g4936
sg64
(lp4943
g100
asbasbasbag57
(g73
g59
NtRp4944
(dp4945
g62
(dp4946
sg71
g3884
sg64
(lp4947
g57
(g78
g59
NtRp4948
(dp4949
g62
(dp4950
g82
g83
ssg71
g4944
sg64
(lp4951
S'session_storage_type'
p4952
asbag57
(g78
g59
NtRp4953
(dp4954
g62
(dp4955
g89
g90
ssg71
g4944
sg64
(lp4956
S':'
asbag57
(g78
g59
NtRp4957
(dp4958
g62
(dp4959
sg71
g4944
sg64
(lp4960
g57
(g58
g59
NtRp4961
(dp4962
g62
(dp4963
g70
I5
ssg71
g4957
sg64
(lp4964
g3174
asbasbasbag57
(g73
g59
NtRp4965
(dp4966
g62
(dp4967
sg71
g3884
sg64
(lp4968
g57
(g78
g59
NtRp4969
(dp4970
g62
(dp4971
g82
g83
ssg71
g4965
sg64
(lp4972
S'status'
p4973
asbag57
(g78
g59
NtRp4974
(dp4975
g62
(dp4976
g89
g90
ssg71
g4965
sg64
(lp4977
S':'
asbag57
(g78
g59
NtRp4978
(dp4979
g62
(dp4980
sg71
g4965
sg64
(lp4981
g57
(g58
g59
NtRp4982
(dp4983
g62
(dp4984
g70
I5
ssg71
g4978
sg64
(lp4985
S'200'
p4986
asbasbasbag57
(g73
g59
NtRp4987
(dp4988
g62
(dp4989
sg71
g3884
sg64
(lp4990
g57
(g78
g59
NtRp4991
(dp4992
g62
(dp4993
g82
g83
ssg71
g4987
sg64
(lp4994
S'subtitle'
p4995
asbag57
(g78
g59
NtRp4996
(dp4997
g62
(dp4998
g89
g90
ssg71
g4987
sg64
(lp4999
S':'
asbag57
(g78
g59
NtRp5000
(dp5001
g62
(dp5002
sg71
g4987
sg64
(lp5003
g57
(g58
g59
NtRp5004
(dp5005
g62
(dp5006
g70
I5
ssg71
g5000
sg64
(lp5007
g4505
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp5008
asbasbasbag57
(g73
g59
NtRp5009
(dp5010
g62
(dp5011
sg71
g3884
sg64
(lp5012
g57
(g78
g59
NtRp5013
(dp5014
g62
(dp5015
g82
g83
ssg71
g5009
sg64
(lp5016
g3750
asbag57
(g78
g59
NtRp5017
(dp5018
g62
(dp5019
g89
g90
ssg71
g5009
sg64
(lp5020
S':'
asbag57
(g78
g59
NtRp5021
(dp5022
g62
(dp5023
sg71
g5009
sg64
(lp5024
g57
(g58
g59
NtRp5025
(dp5026
g62
(dp5027
g70
I5
ssg71
g5021
sg64
(lp5028
g122
asbasbasbag57
(g73
g59
NtRp5029
(dp5030
g62
(dp5031
sg71
g3884
sg64
(lp5032
g57
(g78
g59
NtRp5033
(dp5034
g62
(dp5035
g82
g83
ssg71
g5029
sg64
(lp5036
S'view'
p5037
asbag57
(g78
g59
NtRp5038
(dp5039
g62
(dp5040
g89
g90
ssg71
g5029
sg64
(lp5041
S':'
asbag57
(g78
g59
NtRp5042
(dp5043
g62
(dp5044
sg71
g5029
sg64
(lp5045
g57
(g58
g59
NtRp5046
(dp5047
g62
(dp5048
g70
I5
ssg71
g5042
sg64
(lp5049
S'default/list_all_dev_projects.html'
p5050
asbasbasbasbasbsS'locals'
p5051
(dp5052
S'ck'
p5053
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p5054
sS'q1'
p5055
S"<Query (project.project_status = '0')>"
p5056
sS'q2'
p5057
S'<Query (sample.experimentalist = 2)>'
p5058
sS'links'
p5059
S"{'sample': [<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]}"
p5060
sS'addsample'
p5061
g1721
sg42
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p5062
sS'l1'
p5063
S"[<function <lambda>>, {'body': <function <lambda>>, 'header': 'name'}]"
p5064
sS'fi'
p5065
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p5066
sS'create_dict'
p5067
S"{'project': False, 'sample': True}"
p5068
sS'edit_dict'
p5069
S"{'project': False}"
p5070
sS'delete_dict'
p5071
S"{'project': False}"
p5072
sssS'traceback'
p5073
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1126, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 321, in list_all_dev_projects\n    router(request.args)\nTypeError: router() takes no arguments (1 given)\n'
p5074
s.