(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> cannot concatenate 'str' and 'int' objects"
p3
sS'layer'
p4
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p5
sS'code'
p6
S'import rpy2.robjects as robjects\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    redirect(URL(\'default\',\'list_all_projects\'))\n    #redirect(URL(\'plugin_wiki\',\'page/home\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\ndef authenticate(uid,pid,func):   \n   result = db(db.role.user == uid)(db.role.project == pid).select(db.role.ALL)\n   myroles = [role_list[int(k.role)] for k in result]\n   is_coordinator = db(db.project.project_coordinator == uid).select(db.project.ALL)\n   if func == \'roles\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'You must be a project co-ordinator to manage roles\'\n\treturn error  \n   if func == \'add_project\':\n\tif len(is_coordinator):\n\t  error = \'\'\n\telse:\n\t   error = \'\'\n        return error\n   if func == \'add_sample\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'SignUp for  "Experimentalist Role" in this project to add a sample. Use Browser back button to navigate to Project View.\'\n        return error\n   if func == \'experimentalist\':\n\tif \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You must be an experimentalist to add the biosource information of a sample\'\n        return error\n   if func == \'my_samples\':\n\tif  \'experimentalist\' in myroles:\n\t  error = \'\'\n\telse:\n\t   error = \'You are not authorized to view this page\'\n        return error\n\ndef basic_groups(pid):\n    """ creates the basic groups on general basis or id basis """\n    if not pid:\n        for i in role_list:\n\t   auth.add_group(i,i) \n    else:\n        pid_groups = [str(pid)+\'#\'+i for i in role_list]\n\tfor k in pid_groups:\n\t   auth.add_group(k,k)\n    return locals()\t   \n\n\ndef add_project():\n    error = authenticate(auth.user.id,\'\',\'add_project\')\n    form = SQLFORM(db.project,fields=[\'name\',\'code\',\'start_date\',\'project_description\',\'project_literature_reference\',\'project_journal_name\',\'project_publication_date\',\'project_pubmed_id\'],showid=False)\n    form.vars.project_coordinator = auth.user.id\n    if form.process().accepted:\n       response.flash =\'accepted\'\n       result = db(db.project.name == form.vars.name).select(db.project.ALL).first()\n       basic_groups(result.id)\n       db.role.insert(user=auth.user.id,project=result.id,role=6,approval_status=1,member_since=now)\n       redirect(URL(\'project_viewer\',args = form.vars.id))\n    elif form.errors:\n       response.flash = \'errors\'\n    return locals()\n\ndef remove_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """takes an id and removes the project """ \n    pid  = request.args(0)\n    pid_groups = [str(pid)+\'#\'+i for i in role_list]\n    for z in pid_groups:\n\tpgid = auth.id_group(z)\n\tauth.del_group(pgid)\n    del db.project[pid]\n    return locals()\n\ndef add_experiment():\n    grid = SQLFORM.grid(db.experiment)\n    return locals()\n\ndef new_affiliation():\n    form = SQLFORM(db.affiliation)\n    return locals()\n\ndef edit_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    crud.settings.update_next = URL(\'project_viewer\',args=request.args)\n    form=crud.update(db.project,request.args(0),deletable=False)\n    return locals();\n \n@auth.requires_login()\ndef project_viewer():\n    pid = request.args[-1]\n    project=db(db.project.id==pid).select(db.project.ALL).first()\n    cord = db(db.auth_user.id==project.project_coordinator).select(db.auth_user.ALL).first()\n    \n    if authenticate(auth.user.id,\'\',\'roles\') == \'\':\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'Grant Role\'),False,URL(\'roles\',args=project.id)),\n      (T(\'Edit Project\'),False,URL(\'edit_project\',args=project.id)),\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n    else :\n      response.menu = [\n      (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n      (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args[-1]),[\n      (T(\'SignUP\'),False,URL(\'reg_project\',args=project.id))]\n      )\n      ]\n      \n    if project.project_status == \'1\':\n      response.menu+= [\n      (T(\'Published Samples\'), False,URL(\'list_all_pub_samples\',args=(pid)),[])\n      ]\n    elif authenticate(auth.user.id,pid,\'add_sample\')==\'\':\n        response.menu+= [\n        (T(\'Samples\'), False,URL(\'my_samples\',args=(pid)),[\n        (T(\'My Samples\'), False,URL(\'my_samples\',args=(pid))),\n        ])\n        ]\n      \n    users=db(db.role.project==pid)(db.role.project == db.project.id)(db.role.user==db.auth_user.id).select(db.role.ALL,db.auth_user.ALL)\n    is_coordinator = \'\'\n    myroles = \'\'\n    if auth.user:\n      is_coordinator = db(db.project.id == pid)(db.project.project_coordinator == auth.user.id).select(db.project.ALL).first()\n      result = db(db.role.user == auth.user.id)(db.role.project == pid).select(db.role.ALL)\n      myroles = [role_list[int(k.role)] for k in result]\n      \n    return locals()\n\n\ndef add_sample():\n  """ creates a exp on an project basis and should continue to fill the bio source data """\n  """ available to the experimentalist """ \n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  if \'new\' in request.args:\n   pid = request.args[-3]\n  else:\n   pid = request.args(0)\n  error = authenticate(auth.user.id,pid,\'add_sample\') \n  form = SQLFORM(db.sample,fields=[\'name\',\'code\',\'description\',\'scientific_name\'],showid=False)\n#added a field project in sample table\n#added two more fields in form insert root/replica etc and scientific name\n  if form.validate():\n      i = db.sample.insert(experimentalist=auth.user.id,name=form.vars.name,code=form.vars.code ,description=form.vars.description,experiment=pid,scientific_name=form.vars.scientific_name,working_status=1,publication_status=0)\n      response.flash = \'sample has been created\'\n      redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',pid])) \n      # redirect to the sample creation \n  elif form.errors:\n      response.flash = \'Form has errors\'\n  return locals()\n\ndef sample_viewer():\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   i = request.args[-1]\n   if \'view\' in request.args: \n\tform = SQLFORM(db.sample, i,readonly =True,showid=False)\n   if \'edit\' in request.args: \n\tform = SQLFORM(db.sample, i,showid=False)\n   if form.process().accepted:\n\tresponse.flash = \'form accepted\'\n\tredirect(URL(\'list_all_dev_projects\',args = request.args[0:-3])) \n   elif form.errors:\n\tresponse.flash = \'form has errors\'\n   return dict(form=form)\n\ndef list_all_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'index\'), [])\n    #(T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    #(T(\'Project\'), False, URL(\'default\',\'list_all_projects\'), [(T(\'Add Project\'),False,URL(\'default\',\'add_project\'))])\n    ]\n    form=FORM(\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    form.elements(\'input[type=submit]\')[0]["_value"] = "Search"\n    if form.accepts(request,session):\n      redirect(URL(\'grid?keywords=tomato\')) \n    \n    #form=FORM(\'\',INPUT(_name=\'name\') ,INPUT(_type=\'submit\'))\n    #if form.process().accepted:\n      #redirect(URL(\'grid\')) \n    pub_projects = db(db.project.project_status == 1).select(db.project.ALL)\n    dev_projects = db(db.project.project_status == 0).select(db.project.ALL)\n    authenticated = \'no\'\n    if auth.user:\n     authenticated = authenticate(auth.user.id,\'\',\'add_project\')\n    pi = robjects.r[\'pi\']\n    return locals()\n\ndef grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.sample.id==db.biosource.sample_name))\n   #query=((db.project.project_status==0))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n   grid = SQLFORM.grid(query)\n   return locals() \n\ndef temp():\n   q1 = (db.project.project_status ==  0)\n   q2 = (db.sample.publication_status == True)\n   ck = {}\n   fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n   l1=[lambda row: A(\'View Post\',_href=URL("default","view",args=[row.id]))]\n   links={\'project\':l1}\n   grid = SQLFORM.smartgrid(db.project,ck,fields=fi,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n   return locals() \n\ndef list_all_pub_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    q1 = (db.project.project_status ==  1)\n    q2 = (db.sample.publication_status == True)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.raw_data_storage_information.sample_name]\n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n    \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=False,deletable=False,create = False,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'raw_data_storage_information\']) \n    \n    return locals()\n\ndef list_all_dev_projects():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    db.sample.experimentalist.default=auth.user.id\n    db.sample.experiment.writable = False\n    q1 = (db.project.project_status ==  0)\n    q2 = (db.sample.experimentalist == auth.user.id)\n    ck = {\'project\':q1,\'sample\':q2}\n    fi = [db.project.name,db.project.project_coordinator,db.project.start_date,db.project.project_status,db.experiment.code,db.sample.name,db.sample.code,db.sample.replica,db.sample.publication_status,db.biosource.sample_name,db.plant_growth_condition.sample_name,db.treatments.sample_name,db.harvests.sample_name,db.extraction_preparation.sample_name,db.gas_chromatography.sample_name,db.liquid_chromatography.sample_name,db.mass_spectroscopy.sample_name,db.spectrophotometry.sample_name,db.raw_data_storage_information.sample_name]\n    edit_dict = {\'project\':False}\n    delete_dict = {\'project\':False}\n#Allow only one original sample to be added in an experiment others are replicates\n    addsample = True\n    if \'sample\' in request.args and \'new\' in request.args:\n         count = db(db.sample.experiment==request.args[-3]).count()\n         if(count>0):\n           db.sample.replica.default = \'replicate\'\n           db.sample.replica.requires=IS_IN_SET([\'replicate\',\'alicot\'])\n         else:\n           db.sample.replica.default = \'Original\'\n           db.sample.replica.writable = False\n           \n    create_dict = {\'project\':False,\'sample\':addsample}\n#Links for replicating samples  \n    args= request.args\n    l1=[lambda row: A(\'copy\'+row.id,_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))]\n    links={\'sample\':l1}\n#customized Views for certain forms using router   \n    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n     \trouter(request.args)\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\']) \n    return locals()\n\n#gets table name and rowid as input and creates another row with same details as rowid recod has\ndef replicate():\n    if db(db.template.user==auth.user.id).count() == 0:\n       db.template.insert(user=auth.user.id, sample=request.args[-1])\n    else:   \n       db(db.template.user == auth.user.id).update(sample=request.args[-1])\n    redirect(URL(\'list_all_dev_projects\',args=request.args[0:-1]))\n    #Unique fields take care\n    #product.update(sampleid=\'temp\')\n    return() \n\ndef my_samples():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n    ]\n    """ all my samples in the project with permissions to edit delete publish/unpublish samples """\n    error = authenticate(auth.user.id,request.args(0),\'add_sample\') \n    l =  [\'project\',\'experiment.project\',request.args(0)]\n    if error == \'\':\n      redirect(URL(\'list_all_dev_projects\',args=l))\n    return locals()\n\ndef list_all_samples1():\n    proj_id = request.args(0)\n    pub_samples = db((db.sample.working_status == 1)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    dev_samples = db((db.sample.working_status == 0)&(db.sample.project == proj_id)).select(db.sample.ALL)\n    return locals()\n\ndef view_published_samples():\n    proj_id = request.args(0)\n    return locals() \n\ndef router(l):\n\tif \'biosource\' in l:\n\t  redirect(URL(\'insert_biosource\',args = l))\n\telif \'plant_growth_condition\' in l:\n\t  redirect(URL(\'insert_pgc\',args = l))\n\telif \'treatments\' in l:\n\t  redirect(URL(\'insert_treatments\',args = l))\n\telif \'harvests\' in l:\n\t  redirect(URL(\'insert_harvests\',args = l))\n\telif \'extraction_preparation\' in l:\n\t  redirect(URL(\'insert_ep\',args = l))\n\telif \'gas_chromatography\' in l:\n\t  redirect(URL(\'insert_gc\',args = l))\n\telif \'liquid_chromatography\' in l:\n\t  redirect(URL(\'insert_lc\',args = l))\n\telif \'mass_spectroscopy\' in l:\n\t  redirect(URL(\'insert_ms\',args = l))\n        elif \'raw_data_storage_information\' in l:\n          redirect(URL(\'insert_raw_data\',args = l))\n\telif \'sample\' in l and \'view\' in l:\t\t\n\t  redirect(URL(\'sample\',args=l))\n        else:\n          return()\n\n\'\'\'\telif \'sample\' in l and \'new\' in l:\t\t\n\t  redirect(URL(\'add_sample\',args = l))\n\telif \'sample\' in l:\t\t\n\t  redirect(URL(\'sample_viewer\',args = l))\n\telif \'project\' in l:\n\t  redirect(URL(\'project_viewer\',args=l))\n\telse : \n\t  redirect(URL(\'index\'))\'\'\'\n\ndef list_all_pub_samples():\n#    proj_id = request.args(0)\n#    pub = request.args(1) # if pub == 1 show published samples otherwise non published samples\n#   pub_query = (db.sample.working_status == 1 and db.sample.project == proj_id)\n#   unpub_query = (db.sample.working_status == 0 and db.sample.project == proj_id)\n#   pquery_dict = {\'sample\':pub_query}\n#   nquery_dict = {\'sample\':unpub_query}\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#       router(request.args)\n#    if \'view\' in request.args or \'edit\' in request.args or \'new\' in request.args:\n#     \trouter(request.args)\n    \n    """an argument to display published and non-published samples"""\n    """ request.args(0) - project  , request.args(1) published"""\n\n    redirect(URL(\'list_all_pub_projects\',args=[\'project\',\'experiment.project\',request.args(0)]))\n    \ndef list_all_dev_samples():\n   \n    redirect(URL(\'list_all_dev_projects\',args=[\'project\',\'sample.project\',request.args(0)]))\n    return locals()\n\ndef ajx_role():\n    """ an ajax call back which takes care of insert , update and delete in the roles table """\n    rid = request.args(1)\n    if request.args(0) == \'accept\':\n       row = db(db.role.id == rid).update(approval_status = 1)\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.add_membership(gid,result.user)\n    if request.args(0) == \'unblock\':\n       del db.role[rid] \n    if request.args(0) == \'block\':\n       row = db(db.role.id == rid).update(approval_status = 2)\n    if request.args(0) == \'delete\' or request.args(0) == \'deny\':\n       result = db(db.role.id == rid).select(db.role.ALL).first()\n       gid = auth.id_group(role_list[int(result.role)])\n       auth.del_membership(gid,result.user)\n       del db.role[rid] \n    return locals()\n\ndef reg_project():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ takes an id for the project and registers """\n    import datetime\n    now = datetime.datetime.now()\n    """ already requested """\n    pid = request.args(0)\n    ptitle = db(db.project.id == pid).select(db.project.ALL).first()\n    form = SQLFORM(db.role,fields=[\'role\'],showid=False)\n    if form.validate():\n       requested = db(db.role.user == auth.user.id)(db.role.project == pid)(db.role.approval_status == 0)(db.role.role==form.vars.role).count()\n       if requested == 0: \n        db.role.insert(user=auth.user.id,approval_status=0,project=pid,member_since=now,role=form.vars.role)\n        response.flash = \'accepted\'\n       else:\n        response.flash = \'You already hold the applied role\' \n    return locals() \n\ndef ajx_publish():\n    """ an ajax call back which takes care of publication status """\n    eid = request.args(1)\n    if request.args(0) == \'publish\':\n     row = db(db.project.id == eid).update(project_status = "1")\n    elif request.args(0) == \'unpublish\':\n     row = db(db.project.id == eid).update(project_status = "0")\n    redirect(URL(\'project_viewer\',args = eid))\n    return locals() \n\ndef roles():\n    response.menu = [\n    (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), []),\n    (T(\'Project\'), False, URL(\'default\',\'project_viewer\',args=request.args),[])\n    ]\n    """ complete interface for managing roles for a particular project"""\n    """ should be accessible to only project co-ordinators """\n    pid = request.args(0)\n    error = authenticate(auth.user.id,pid,\'roles\')\n    accepted = db(db.auth_user.id == db.role.user)(db.role.approval_status == 1)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    pending = db(db.auth_user.id == db.role.user)(db.role.approval_status == 0)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    blocked = db(db.auth_user.id == db.role.user)(db.role.approval_status == 2)(db.role.project == pid).select(db.role.ALL,db.auth_user.ALL)\n    return locals()\n   \ndef home_page():\n    """ home page for a user , shows list of projects he is working on and his past work """\n    uid = request.args(0)\n    #my roles \n    \n    roles = db(db.role.user == uid)(db.role.project == db.project.id).select(db.role.ALL,db.project.name) \n    myroles = [role_list[int(p.role.role)] for p in roles]\n    k = {}\n    """\n    is_coordinator = db(db.project.project_coordinator==uid).select(db.project.ALL)\n    coordinating_projects = [row.name for row in is_coordinator]\n    value=\'\'\n    for p in coordinating_projects:\n       value = value + \',\'+ p\n\t  \n    k[6] = value[1:] """\n    for row in roles:\n       if row.role.role not in k:\n          k[row.role.role] = row.project.name\n       else:\n          k[row.role.role] = k[row.role.role] + \',\' + row.project.name\n    com_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    incom_exps = db(db.sample.working_status == 1)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    pub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == True)(db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    unpub_exps = db(db.sample.working_status == 0)(db.sample.publication_status == False) (db.sample.experimentalist == uid)(db.sample.project == db.project.id).select(db.sample.ALL,db.project.id,db.project.name,orderby=db.sample.code)\n    for p in k:\n       list_projects = k[p].split(\',\')\n       proj = \'\' \n       for d in list_projects:\n          res = db(db.project.name == d).select(db.project.ALL).first()\n          cat = \'\'\n          if res:\n             cat = A(res.name,_href=URL(\'project_viewer\',args=res.id))\n          if proj == \'\':\n             proj=SPAN(cat)\n          else:\n           proj = SPAN(proj,\',\',cat)\n       k[p] = proj \n    return locals()\n\ndef download():\n    return response.download(request, db)\n\ndef insert_biosource():\n#prepopulating records  \n   if \'clear\' not in request.args:    \n    trows = db(db.template.user==auth.user.id).select()\n    count = db(db.template.user==auth.user.id).count()\n    if count > 0:\n     rows = db(db.biosource.sample_name==trows[0].sample).select()\n     count1 = db(db.biosource.sample_name==trows[0].sample).count()\n     if count1 > 0:\n      row = rows[0]\n      for fieldname in db.biosource.fields:\n       if fieldname!=\'id\': \n        db.biosource[fieldname].default=row[fieldname]\n   else : \n    request.args.pop()\n   #result = db(db.sample.id == request.args[-3]).select(db.sample.ALL).first()\n#  error = authenticate(auth.user.id,result.project,\'insert_biosource\')\n   response.menu = [\n   (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n   ]\n   redirect_args = request.args[0:-3]\n   form = SQLFORM(db.biosource)\n   if \'view\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],readonly = True,showid=False)\t  \n   elif \'edit\' in request.args: \n\t       form=SQLFORM(db.biosource,request.args[-1],showid=False)\n   elif \'new\' in request.args:\n               db.biosource.sample_name.readable = False \n               hid = {}   \n\t       form=SQLFORM(db.biosource,showid=False)\n\t       form.vars.sample_name = request.args[-3]\n \t       redirect_args = request.args[0:-4]\n   i=1\n   f1=form[0][:i+2]\n   fs1=form[0][i+2:i+7]\n   f2=form[0][i+7:]\n   form[0]=TABLE(TABLE(f1),\n      FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n   if form.process().accepted:\n     redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n     response.flash="Inserted entry"\n   return locals()\n\ndef insert_pgc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.plant_growth_condition.sample_name==trows[0].sample).select()\n    count1 = db(db.plant_growth_condition.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.plant_growth_condition.fields:\n      if fieldname!=\'id\': \n       db.plant_growth_condition[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.plant_growth_condition) \n  if \'view\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n\tform=SQLFORM(db.plant_growth_condition,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.plant_growth_condition.sample_name.readable = False \n\tform=SQLFORM(db.plant_growth_condition,showid=False)\n        form.vars.sample_name = request.args[-3]\n\tredirect_args = request.args[0:-2]\t \n  i=1\n  fs1=form[0][:i+5]\n  fss1=form[0][i+5:i+9]\n  fss2=form[0][i+9:i+10]\n  fss3=form[0][i+10:i+15]\n  f2=form[0][i+15:i+18]\n  fs2=form[0][i+18:i+21]\n  fs3=form[0][i+21:i+27]\n  f3=form[0][i+27:]\n  t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n  t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n  t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n  t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n  form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n  if form.process().accepted:\n    redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n    response.flash="form accepted"\n# redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  else:\n    response.flsh="form has some errors"\n  return locals()\n\ndef insert_ep():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.extraction_preparation.sample_name==trows[0].sample).select()\n    count1 = db(db.extraction_preparation.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.extraction_preparation.fields:\n      if fieldname!=\'id\': \n       db.extraction_preparation[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.extraction_preparation,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.extraction_preparation.sample_name.readable=False\n       form=SQLFORM(db.extraction_preparation,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:i+8]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][i+8:i+12])))))\n  t2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][i+12:])))\n  form[0]=TABLE(FIELDSET(t1,t2))\n  if form.process().accepted:\n       response.flash="Inserted entry"\n       redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_treatments():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.treatments.sample_name==trows[0].sample).select()\n    count1 = db(db.treatments.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.treatments.fields:\n      if fieldname!=\'id\': \n       db.treatments[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.treatments,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.treatments.sample_name.readable=False\n       form=SQLFORM(db.treatments,showid=False)\n       form.vars.sample_name = request.args[-3] \n       redirect_args = request.args[0:-2]\t \n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n  form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\ndef insert_harvests():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.harvests.sample_name==trows[0].sample).select()\n    count1 = db(db.harvests.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.harvests.fields:\n      if fieldname!=\'id\': \n       db.harvests[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n       form=SQLFORM(db.harvests,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n       db.harvests.sample_name.readable=False\n       form=SQLFORM(db.harvests,showid=False)\n       form.vars.sample_name = request.args[-3]\n       redirect_args = request.args[0:-2]\n  i=1\t \n  t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n  form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n  return locals()\n\t  \t\ndef insert_gc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.gas_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.gas_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.gas_chromatography.fields:\n      if fieldname!=\'id\': \n       db.gas_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n\tform=SQLFORM(db.gas_chromatography,request.args[-1],readonly = True,pload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n        form=SQLFORM(db.gas_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n        db.gas_chromatography.sample_name.readable=False\n        redirect_args = request.args[0:-2]\t \n        form=SQLFORM(db.gas_chromatography,showid=False)\n        form.vars.sample_name = request.args[-3]\n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n\tresponse.flash="Inserted entry"\n\tredirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#       redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_lc():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.liquid_chromatography.sample_name==trows[0].sample).select()\n    count1 = db(db.liquid_chromatography.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.liquid_chromatography.fields:\n      if fieldname!=\'id\': \n       db.liquid_chromatography[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  form = SQLFORM(db.liquid_chromatography)\n  if \'view\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  if \'edit\' in request.args: \n      form=SQLFORM(db.liquid_chromatography,request.args[-1],upload=URL(\'download\'),showid=False)\n  if \'new\' in request.args:\n      db.liquid_chromatography.sample_name.readable=False\n      redirect_args = request.args[0:-2]\t \n      form=SQLFORM(db.liquid_chromatography,showid=False)\n      form.vars.sample_name = request.args[-3] \n  j=1\n  t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n  t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n  i=15\n  t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n  t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n  t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n  t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n  t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n  t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n  form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n  if form.process().accepted:\n      response.flash="Inserted entry"\n      redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     redirect(URL(\'list_all_samples\',args=[\'sample\'])) \n  return locals()\n\ndef insert_ms():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.mass_spectroscopy.sample_name==trows[0].sample).select()\n    count1 = db(db.mass_spectroscopy.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.mass_spectroscopy.fields:\n      if fieldname!=\'id\': \n       db.mass_spectroscopy[fieldname].default=row[fieldname]\n  #result = db(db.sample.id == request.args[-1]).select(db.sample.ALL).first()\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.mass_spectroscopy,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.mass_spectroscopy.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.mass_spectroscopy,showid=False)\n    form.vars.sample_name = request.args[-3]\n  i=1\n  t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n  t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n  t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n  t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n  t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n  form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_raw_data():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.raw_data_storage_information.sample_name==trows[0].sample).select()\n    count1 = db(db.raw_data_storage_information.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.raw_data_storage_information.fields:\n      if fieldname!=\'id\': \n       db.raw_data_storage_information[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.raw_data_storage_information,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.raw_data_storage_information.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.raw_data_storage_information,showid=False)\n    form.vars.sample_name = request.args[-3]\n    form.vars.email_id_of_person=auth.user.email \n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\ndef insert_spectrophotometry():\n#prepopulating records  \n  trows = db(db.template.user==auth.user.id).select()\n  count = db(db.template.user==auth.user.id).count()\n  if count > 0:\n    rows = db(db.spectrophotometry.sample_name==trows[0].sample).select()\n    count1 = db(db.spectrophotometry.sample_name==trows[0].sample).count()\n    if count1 > 0:\n     row = rows[0]\n     for fieldname in db.spectrophotometry.fields:\n      if fieldname!=\'id\': \n       db.spectrophotometry[fieldname].default=row[fieldname]\n  response.menu = [\n  (T(\'Home\'), False, URL(\'default\',\'list_all_projects\'), [])\n  ]\n  redirect_args = request.args[0:-3]\t \n  if \'view\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],readonly = True,upload=URL(\'download\'),showid=False)\n  elif \'edit\' in request.args: \n    form=SQLFORM(db.spectrophotometry,request.args[-1],upload=URL(\'download\'),showid=False)\n  elif \'new\' in request.args:\n    db.spectrophotometry.sample_name.readable=False\n    redirect_args = request.args[0:-2]\t \n    form=SQLFORM(db.spectrophotometry,showid=False)\n    form.vars.sample_name = request.args[-3]\n  if form.process().accepted:\n      \tresponse.flash="Inserted entry"\n        redirect(URL(\'list_all_dev_projects\',args=redirect_args)) \n#     \tredirect(URL(\'list_all_samples\'),args=[\'sample\']) \n  return locals()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\n#def drop_tables():\n    #are you sure you want to do this?\n    #for t in [\'auth_user\',\'auth_group\', \'auth_membership\', \'auth_permission\', \'auth_event\',\'sample\',\'biosource\',\'affiliation\',\'project\',\'role\',\'template\',\'experiment\',\'project_meta\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'feedback\',\'sample_files\']:\n    #    db[t].drop()\n    # pass\n    #return \n\ndef show_feedback():\n    grid = SQLFORM.smartgrid(db.feedback)\n    return locals()\n\n \ndef post_feedback():\n    """ allows to post feedback to the table feedback """ \n    past_feeds = db(db.feedback.feedback_on == request.env.http_referer).select(db.feedback.feedback_body,db.feedback.id)\n    form = SQLFORM(db.feedback,fields=[\'feedback_body\'],labels={\'feedback_body\':\'Your feedback about this page\'})\n    feedback_by = \'\'\n    if form.validate():\n\tif auth.user:\n            feedback_by = auth.user.id\n        else:\n\t   feedback_by = \'\'\n\tdb.feedback.insert(feedback_on=request.env.http_referer,feedback_body=form.vars.feedback_body,feedback_by=feedback_by)\n\tresponse.flash = "feedback has been duly noted and will be taken care of "\n    return locals()\n\n\ndef user_viewer():\n   """shows the user details """\n   uid = request.args(0)\n   record = db.auth_user(uid)\n   form = SQLFORM(db.auth_user,record,readonly=True,showid=False,fields=[\'first_name\',\'last_name\',\'email\',\'affiliated_to\',\'phone\',\'mobile\',\'city\'])\n   return locals()\n\n\ndef dict_dump(obj,inp):\n  ans = \'<dl class="dl-horizontal">\'\n  for key in inp.keys():\n     add = \'<dt>\'+str(inp[key])+\'</dt>\'+\'<dd>\'+str(obj[key])+\'</dd>\'\n     ans = ans+add\n  return ans\t\n\n\ndef sample():\n  """gets all the information regarding a sample in a single page """\n  sid = request.args[-1]\n  sample = db(db.sample.id == sid).select(db.sample.ALL).first()\n  user = db(db.auth_user.id == sample.experimentalist).select(db.auth_user.ALL).first()\n  experiment = db(db.experiment.id == sample.experiment).select(db.experiment.ALL).first()\n  biosource = db(db.biosource.sample_name == sid).select(db.biosource.ALL)\n  plant_growth = db(db.plant_growth_condition.sample_name == sid).select(db.plant_growth_condition.ALL)\n  treatment = db(db.treatments.sample_name == sid).select(db.treatments.ALL)\n  harvest = db(db.harvests.sample_name == sid).select(db.harvests.ALL)\n  extraction_preparation = db(db.extraction_preparation.sample_name == sid).select(db.extraction_preparation.ALL)\n  gc = db(db.gas_chromatography.sample_name == sid).select(db.gas_chromatography.ALL)\n  lc = db(db.liquid_chromatography.sample_name == sid).select(db.liquid_chromatography.ALL)\n  ms = db(db.mass_spectroscopy.sample_name == sid).select(db.mass_spectroscopy.ALL)\n  raw_storage = db(db.raw_data_storage_information.sample_name == sid).select(db.raw_data_storage_information.ALL)\n  biosource_forms = [] #a list of forms\n  for each in biosource:\n\tform = SQLFORM(db.biosource,each.id,showid=False,readonly=True)\n\ti=1\n\tf1=form[0][:i+2]\n\tfs1=form[0][i+2:i+7]\n\tf2=form[0][i+7:]\n\tform[0]=TABLE(TABLE(f1),FIELDSET(TAG.legend("Genotype"),TABLE(fs1)),TABLE(f2))\n\tbiosource_forms.append(form[0])\n        \n  pgc_forms = []\n  for each in plant_growth:\n     form = SQLFORM(db.plant_growth_condition,each.id,showid=False,readonly=True)\n     i=1\n     fs1=form[0][:i+5]\n     fss1=form[0][i+5:i+9]\n     fss2=form[0][i+9:i+10]\n     fss3=form[0][i+10:i+15]\n     f2=form[0][i+15:i+18]\n     fs2=form[0][i+18:i+21]\n     fs3=form[0][i+21:i+27]\n     f3=form[0][i+27:]\n     t2=TABLE(FIELDSET(TAG.legend("Growth Support"),TABLE(fs1)))\n     t3=TABLE(FIELDSET(TAG.legend("Location"),TABLE(FIELDSET(TAG.legend("Field trail"),TABLE(fss1))),TABLE(fss2),TABLE(FIELDSET(TAG.legend("Green house"),TABLE(fss3)))))\n     t4=TABLE(FIELDSET(TAG.legend("Nutritional Regime"),TABLE(fs2)))\n     t5=TABLE(FIELDSET(TAG.legend("Date of Plant Establishment(YYYY-MM-DD)"),TABLE(fs3)))\n     form[0]=TABLE(FIELDSET(t2,t3,TABLE(f2),t4,t5,TABLE(f3)))\n     pgc_forms.append(form[0])\n  \n  treatment_forms = []\n  for each in treatment:\n     form = SQLFORM(db.treatments,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Treatment Factor"),TABLE(form[0][:i+3])))\n     form[0]=TABLE(FIELDSET(t1,TABLE(form[0][i+3:])))\n\n\n  harvest_forms = []\n  for each in harvest:\n     form = SQLFORM(db.harvests,each.id,showid=False,readonly=True)\n     i=1\n     t1=TABLE(FIELDSET(TAG.legend("Sample Storage"),TABLE(form[0][i+7:])))\n     form[0]=TABLE(FIELDSET(TABLE(form[0][:i+7]),t1))\n     harvest_forms.append(form[0])\n\n  gc_forms = []\n  for each in gc:\n     form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n     j=1\n     t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n     t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n     i=15\n     t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n     t2=TABLE(FIELDSET(TAG.legend("DERIVATIZATION"),TABLE(form[0][i+4:i+8])))\n     t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+8:i+15])))\n     t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+15:i+23])))\n     t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+23:i+30])))\n     t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+30:i+33]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+33:i+37])))))\n     t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+37:])))\n     form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t2,t3,t4,t5,t6,t7))\n\n     gc_forms.append(form[0])\n \n  lc_forms = []\n  \n  for each in lc:\n    form = SQLFORM(db.gas_chromatography,each.id,showid=False,readonly=True)\n    j=1\n    t_ep_1=TABLE(FIELDSET(TAG.legend("SAMPLE EXTRACTION"),TABLE(form[0][:j+7]),TABLE(FIELDSET(TAG.legend("Extract Storage:"),TABLE(form[0][j+7:j+11])))))\n    t_ep_2=TABLE(FIELDSET(TAG.legend("SAMPLE PREPARATION"),TABLE(form[0][j+11:15])))\n    i=15\n    t1=TABLE(FIELDSET(TAG.legend("CHROMATOGRAPHY INSTRUMENTAL"),TABLE(form[0][15:i+4])))\n    t3=TABLE(FIELDSET(TAG.legend("AUTO-INJECTOR DETAILS"),TABLE(form[0][i+4:i+11])))\n    t4=TABLE(FIELDSET(TAG.legend("SEPERATION COLUMN AND PRE/GUARD COLUMN"),TABLE(form[0][i+11:i+19])))\n    t5=TABLE(FIELDSET(TAG.legend("SEPERATION PARAMETERS"),TABLE(form[0][i+19:i+26])))\n    t6=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+26:i+29]),TABLE(FIELDSET(TAG.legend("Cycle per"),TABLE(form[0][i+29:i+33])))))\n    t7=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+33:])))\n    form[0]=TABLE(FIELDSET(t_ep_1,t_ep_2,t1,t3,t4,t5,t6,t7))\n    lc_forms.append(form[0])\n \n  ms_forms = []\n  for each in ms:\n    form = SQLFORM(db.mass_spectroscopy,each.id,showid=False,readonly=True)\n    i=1\n    t1=TABLE(FIELDSET(TAG.legend("INSTRUMENTAL DETAILS"),TABLE(form[0][:i+4])))\n    t2=TABLE(FIELDSET(TAG.legend("IONISATION SOURCE"),TABLE(form[0][i+4:i+10])))\n    t3=TABLE(FIELDSET(TAG.legend("MASS ANALYZER"),TABLE(form[0][i+10:i+18]),TABLE(FIELDSET(TAG.legend("Lock spray"),TABLE(form[0][i+18:i+22]))),TABLE(form[0][i+22:i+23])))\n    t4=TABLE(FIELDSET(TAG.legend("QUALITY CONTROL"),TABLE(form[0][i+23:i+27])))\n    t5=TABLE(FIELDSET(TAG.legend("DATA ACQUISITION"),TABLE(form[0][i+27:])))\n    form[0]=TABLE(FIELDSET(t1,t2,t3,t4,t5))  \n    ms_forms.append(form[0])\n\n  raw_forms = []\n  for each in raw_storage:\n     form = SQLFORM(db.raw_data_storage_information,each.id,showid=False,readonly=True)\n     raw_forms.append(form[0])\n\n\n  return locals() \n\n#def grid():\n  # query=((db.project.project_status==0)&(db.experiment.project==db.project.id)&(db.sample.experiment==db.experiment.id)&(db.biosource.sample_name==db.sample.id))\n   #query=((db.sample.project==db.project.id)&(db.project.id>0))\n   #query=((db.project.id>0)&(db.sample.project==db.project.id)&((db.sample.id==db.biosource.sample_name)&(db.sample.id==db.plant_growth_condition.sample_name)))\n#   query=((db.sample.experiment==db.experiment.id)&((db.sample.id==db.biosource.sample_name)|(db.sample.id==db.plant_growth_condition.sample_name)))\n#   grid = SQLFORM.grid(query)\n#   return locals()\n\n\ndef search():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n      redirect(URL(\'sample\',args=form.vars.name)) \n    return locals()\n    \ndef multiple_files():\n   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """\n   """ per sample . takes id of the sample as the input """\n   sid = request.args(0)\n   sample = db(db.sample.id == sid).select().first() \n   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)\n   form = SQLFORM(db.sample_files)\n   form.vars.sample = sid\n   return locals()\n\n\n\nresponse._vars=response._caller(list_all_dev_projects)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.TypeError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.TypeError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.TypeError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.TypeError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.TypeError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.TypeError object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.TypeError object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.TypeError object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.TypeError object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.TypeError object>"
p31
sS'__class__'
p32
S"<type 'exceptions.TypeError'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.TypeError object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.TypeError object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.TypeError object>"
p41
sS'args'
p42
S'("cannot concatenate \'str\' and \'int\' objects",)'
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.TypeError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument type.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.TypeError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S"cannot concatenate 'str' and 'int' objects"
p55
sS'request'
p56
ccopy_reg
_reconstructor
p57
(cgluon.html
BEAUTIFY
p58
c__builtin__
object
p59
NtRp60
(dp61
S'attributes'
p62
(dp63
sS'components'
p64
(lp65
g57
(cgluon.html
TABLE
p66
g59
NtRp67
(dp68
g62
(dp69
S'level'
p70
I5
ssS'parent'
p71
Nsg64
(lp72
g57
(cgluon.html
TR
p73
g59
NtRp74
(dp75
g62
(dp76
sg71
g67
sg64
(lp77
g57
(cgluon.html
TD
p78
g59
NtRp79
(dp80
g62
(dp81
S'_style'
p82
S'font-weight:bold;vertical-align:top'
p83
ssg71
g74
sg64
(lp84
S'ajax'
p85
asbag57
(g78
g59
NtRp86
(dp87
g62
(dp88
S'_valign'
p89
S'top'
p90
ssg71
g74
sg64
(lp91
S':'
asbag57
(g78
g59
NtRp92
(dp93
g62
(dp94
sg71
g74
sg64
(lp95
g57
(g58
g59
NtRp96
(dp97
g62
(dp98
g70
I5
ssg71
g92
sg64
(lp99
S'False'
p100
asbasbasbag57
(g73
g59
NtRp101
(dp102
g62
(dp103
sg71
g67
sg64
(lp104
g57
(g78
g59
NtRp105
(dp106
g62
(dp107
g82
g83
ssg71
g101
sg64
(lp108
S'application'
p109
asbag57
(g78
g59
NtRp110
(dp111
g62
(dp112
g89
g90
ssg71
g101
sg64
(lp113
S':'
asbag57
(g78
g59
NtRp114
(dp115
g62
(dp116
sg71
g101
sg64
(lp117
g57
(g58
g59
NtRp118
(dp119
g62
(dp120
g70
I5
ssg71
g114
sg64
(lp121
S'DEV_bootstrap_ch'
p122
asbasbasbag57
(g73
g59
NtRp123
(dp124
g62
(dp125
sg71
g67
sg64
(lp126
g57
(g78
g59
NtRp127
(dp128
g62
(dp129
g82
g83
ssg71
g123
sg64
(lp130
g42
asbag57
(g78
g59
NtRp131
(dp132
g62
(dp133
g89
g90
ssg71
g123
sg64
(lp134
S':'
asbag57
(g78
g59
NtRp135
(dp136
g62
(dp137
sg71
g123
sg64
(lp138
g57
(g58
g59
NtRp139
(dp140
g62
(dp141
g70
I5
ssg71
g135
sg64
(lp142
g57
(g66
g59
NtRp143
(dp144
g62
(dp145
g70
I4
ssg71
Nsg64
(lp146
g57
(g73
g59
NtRp147
(dp148
g62
(dp149
sg71
g143
sg64
(lp150
g57
(g78
g59
NtRp151
(dp152
g62
(dp153
sg71
g147
sg64
(lp154
g57
(g58
g59
NtRp155
(dp156
g62
(dp157
g70
I4
ssg71
g151
sg64
(lp158
S'project'
p159
asbasbasbag57
(g73
g59
NtRp160
(dp161
g62
(dp162
sg71
g143
sg64
(lp163
g57
(g78
g59
NtRp164
(dp165
g62
(dp166
sg71
g160
sg64
(lp167
g57
(g58
g59
NtRp168
(dp169
g62
(dp170
g70
I4
ssg71
g164
sg64
(lp171
S'experiment.project'
p172
asbasbasbag57
(g73
g59
NtRp173
(dp174
g62
(dp175
sg71
g143
sg64
(lp176
g57
(g78
g59
NtRp177
(dp178
g62
(dp179
sg71
g173
sg64
(lp180
g57
(g58
g59
NtRp181
(dp182
g62
(dp183
g70
I4
ssg71
g177
sg64
(lp184
S'1'
asbasbasbag57
(g73
g59
NtRp185
(dp186
g62
(dp187
sg71
g143
sg64
(lp188
g57
(g78
g59
NtRp189
(dp190
g62
(dp191
sg71
g185
sg64
(lp192
g57
(g58
g59
NtRp193
(dp194
g62
(dp195
g70
I4
ssg71
g189
sg64
(lp196
S'sample.experiment'
p197
asbasbasbag57
(g73
g59
NtRp198
(dp199
g62
(dp200
sg71
g143
sg64
(lp201
g57
(g78
g59
NtRp202
(dp203
g62
(dp204
sg71
g198
sg64
(lp205
g57
(g58
g59
NtRp206
(dp207
g62
(dp208
g70
I4
ssg71
g202
sg64
(lp209
S'1'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp210
(dp211
g62
(dp212
sg71
g67
sg64
(lp213
g57
(g78
g59
NtRp214
(dp215
g62
(dp216
g82
g83
ssg71
g210
sg64
(lp217
S'body'
p218
asbag57
(g78
g59
NtRp219
(dp220
g62
(dp221
g89
g90
ssg71
g210
sg64
(lp222
S':'
asbag57
(g78
g59
NtRp223
(dp224
g62
(dp225
sg71
g210
sg64
(lp226
g57
(g58
g59
NtRp227
(dp228
g62
(dp229
g70
I5
ssg71
g223
sg64
(lp230
S'<cStringIO.StringO object at 0xadf6e4a0>'
p231
asbasbasbag57
(g73
g59
NtRp232
(dp233
g62
(dp234
sg71
g67
sg64
(lp235
g57
(g78
g59
NtRp236
(dp237
g62
(dp238
g82
g83
ssg71
g232
sg64
(lp239
S'cid'
p240
asbag57
(g78
g59
NtRp241
(dp242
g62
(dp243
g89
g90
ssg71
g232
sg64
(lp244
S':'
asbag57
(g78
g59
NtRp245
(dp246
g62
(dp247
sg71
g232
sg64
(lp248
g57
(g58
g59
NtRp249
(dp250
g62
(dp251
g70
I5
ssg71
g245
sg64
(lp252
S'None'
p253
asbasbasbag57
(g73
g59
NtRp254
(dp255
g62
(dp256
sg71
g67
sg64
(lp257
g57
(g78
g59
NtRp258
(dp259
g62
(dp260
g82
g83
ssg71
g254
sg64
(lp261
S'client'
p262
asbag57
(g78
g59
NtRp263
(dp264
g62
(dp265
g89
g90
ssg71
g254
sg64
(lp266
S':'
asbag57
(g78
g59
NtRp267
(dp268
g62
(dp269
sg71
g254
sg64
(lp270
g57
(g58
g59
NtRp271
(dp272
g62
(dp273
g70
I5
ssg71
g267
sg64
(lp274
S'127.0.0.1'
p275
asbasbasbag57
(g73
g59
NtRp276
(dp277
g62
(dp278
sg71
g67
sg64
(lp279
g57
(g78
g59
NtRp280
(dp281
g62
(dp282
g82
g83
ssg71
g276
sg64
(lp283
S'controller'
p284
asbag57
(g78
g59
NtRp285
(dp286
g62
(dp287
g89
g90
ssg71
g276
sg64
(lp288
S':'
asbag57
(g78
g59
NtRp289
(dp290
g62
(dp291
sg71
g276
sg64
(lp292
g57
(g58
g59
NtRp293
(dp294
g62
(dp295
g70
I5
ssg71
g289
sg64
(lp296
S'default'
p297
asbasbasbag57
(g73
g59
NtRp298
(dp299
g62
(dp300
sg71
g67
sg64
(lp301
g57
(g78
g59
NtRp302
(dp303
g62
(dp304
g82
g83
ssg71
g298
sg64
(lp305
S'cookies'
p306
asbag57
(g78
g59
NtRp307
(dp308
g62
(dp309
g89
g90
ssg71
g298
sg64
(lp310
S':'
asbag57
(g78
g59
NtRp311
(dp312
g62
(dp313
sg71
g298
sg64
(lp314
g57
(g58
g59
NtRp315
(dp316
g62
(dp317
g70
I5
ssg71
g311
sg64
(lp318
g57
(g66
g59
NtRp319
(dp320
g62
(dp321
g70
I4
ssg71
Nsg64
(lp322
g57
(g73
g59
NtRp323
(dp324
g62
(dp325
sg71
g319
sg64
(lp326
g57
(g78
g59
NtRp327
(dp328
g62
(dp329
g82
g83
ssg71
g323
sg64
(lp330
S'session_id_dev_bootstrap_ch'
p331
asbag57
(g78
g59
NtRp332
(dp333
g62
(dp334
g89
g90
ssg71
g323
sg64
(lp335
S':'
asbag57
(g78
g59
NtRp336
(dp337
g62
(dp338
sg71
g323
sg64
(lp339
g57
(g58
g59
NtRp340
(dp341
g62
(dp342
g70
I4
ssg71
g336
sg64
(lp343
S'127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p344
ag57
(g66
g59
NtRp345
(dp346
g62
(dp347
g70
I3
ssg71
Nsg64
(lp348
g57
(g73
g59
NtRp349
(dp350
g62
(dp351
sg71
g345
sg64
(lp352
g57
(g78
g59
NtRp353
(dp354
g62
(dp355
g82
g83
ssg71
g349
sg64
(lp356
S'comment'
p357
asbag57
(g78
g59
NtRp358
(dp359
g62
(dp360
g89
g90
ssg71
g349
sg64
(lp361
S':'
asbag57
(g78
g59
NtRp362
(dp363
g62
(dp364
sg71
g349
sg64
(lp365
g57
(g58
g59
NtRp366
(dp367
g62
(dp368
g70
I3
ssg71
g362
sg64
(lp369
S''
asbasbasbag57
(g73
g59
NtRp370
(dp371
g62
(dp372
sg71
g345
sg64
(lp373
g57
(g78
g59
NtRp374
(dp375
g62
(dp376
g82
g83
ssg71
g370
sg64
(lp377
S'domain'
p378
asbag57
(g78
g59
NtRp379
(dp380
g62
(dp381
g89
g90
ssg71
g370
sg64
(lp382
S':'
asbag57
(g78
g59
NtRp383
(dp384
g62
(dp385
sg71
g370
sg64
(lp386
g57
(g58
g59
NtRp387
(dp388
g62
(dp389
g70
I3
ssg71
g383
sg64
(lp390
S''
asbasbasbag57
(g73
g59
NtRp391
(dp392
g62
(dp393
sg71
g345
sg64
(lp394
g57
(g78
g59
NtRp395
(dp396
g62
(dp397
g82
g83
ssg71
g391
sg64
(lp398
S'expires'
p399
asbag57
(g78
g59
NtRp400
(dp401
g62
(dp402
g89
g90
ssg71
g391
sg64
(lp403
S':'
asbag57
(g78
g59
NtRp404
(dp405
g62
(dp406
sg71
g391
sg64
(lp407
g57
(g58
g59
NtRp408
(dp409
g62
(dp410
g70
I3
ssg71
g404
sg64
(lp411
S''
asbasbasbag57
(g73
g59
NtRp412
(dp413
g62
(dp414
sg71
g345
sg64
(lp415
g57
(g78
g59
NtRp416
(dp417
g62
(dp418
g82
g83
ssg71
g412
sg64
(lp419
S'httponly'
p420
asbag57
(g78
g59
NtRp421
(dp422
g62
(dp423
g89
g90
ssg71
g412
sg64
(lp424
S':'
asbag57
(g78
g59
NtRp425
(dp426
g62
(dp427
sg71
g412
sg64
(lp428
g57
(g58
g59
NtRp429
(dp430
g62
(dp431
g70
I3
ssg71
g425
sg64
(lp432
S''
asbasbasbag57
(g73
g59
NtRp433
(dp434
g62
(dp435
sg71
g345
sg64
(lp436
g57
(g78
g59
NtRp437
(dp438
g62
(dp439
g82
g83
ssg71
g433
sg64
(lp440
S'max-age'
p441
asbag57
(g78
g59
NtRp442
(dp443
g62
(dp444
g89
g90
ssg71
g433
sg64
(lp445
S':'
asbag57
(g78
g59
NtRp446
(dp447
g62
(dp448
sg71
g433
sg64
(lp449
g57
(g58
g59
NtRp450
(dp451
g62
(dp452
g70
I3
ssg71
g446
sg64
(lp453
S''
asbasbasbag57
(g73
g59
NtRp454
(dp455
g62
(dp456
sg71
g345
sg64
(lp457
g57
(g78
g59
NtRp458
(dp459
g62
(dp460
g82
g83
ssg71
g454
sg64
(lp461
S'path'
p462
asbag57
(g78
g59
NtRp463
(dp464
g62
(dp465
g89
g90
ssg71
g454
sg64
(lp466
S':'
asbag57
(g78
g59
NtRp467
(dp468
g62
(dp469
sg71
g454
sg64
(lp470
g57
(g58
g59
NtRp471
(dp472
g62
(dp473
g70
I3
ssg71
g467
sg64
(lp474
S''
asbasbasbag57
(g73
g59
NtRp475
(dp476
g62
(dp477
sg71
g345
sg64
(lp478
g57
(g78
g59
NtRp479
(dp480
g62
(dp481
g82
g83
ssg71
g475
sg64
(lp482
S'secure'
p483
asbag57
(g78
g59
NtRp484
(dp485
g62
(dp486
g89
g90
ssg71
g475
sg64
(lp487
S':'
asbag57
(g78
g59
NtRp488
(dp489
g62
(dp490
sg71
g475
sg64
(lp491
g57
(g58
g59
NtRp492
(dp493
g62
(dp494
g70
I3
ssg71
g488
sg64
(lp495
S''
asbasbasbag57
(g73
g59
NtRp496
(dp497
g62
(dp498
sg71
g345
sg64
(lp499
g57
(g78
g59
NtRp500
(dp501
g62
(dp502
g82
g83
ssg71
g496
sg64
(lp503
S'version'
p504
asbag57
(g78
g59
NtRp505
(dp506
g62
(dp507
g89
g90
ssg71
g496
sg64
(lp508
S':'
asbag57
(g78
g59
NtRp509
(dp510
g62
(dp511
sg71
g496
sg64
(lp512
g57
(g58
g59
NtRp513
(dp514
g62
(dp515
g70
I3
ssg71
g509
sg64
(lp516
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp517
(dp518
g62
(dp519
sg71
g67
sg64
(lp520
g57
(g78
g59
NtRp521
(dp522
g62
(dp523
g82
g83
ssg71
g517
sg64
(lp524
S'env'
p525
asbag57
(g78
g59
NtRp526
(dp527
g62
(dp528
g89
g90
ssg71
g517
sg64
(lp529
S':'
asbag57
(g78
g59
NtRp530
(dp531
g62
(dp532
sg71
g517
sg64
(lp533
g57
(g58
g59
NtRp534
(dp535
g62
(dp536
g70
I5
ssg71
g530
sg64
(lp537
g57
(g66
g59
NtRp538
(dp539
g62
(dp540
g70
I4
ssg71
Nsg64
(lp541
g57
(g73
g59
NtRp542
(dp543
g62
(dp544
sg71
g538
sg64
(lp545
g57
(g78
g59
NtRp546
(dp547
g62
(dp548
g82
g83
ssg71
g542
sg64
(lp549
S'app_folders'
p550
asbag57
(g78
g59
NtRp551
(dp552
g62
(dp553
g89
g90
ssg71
g542
sg64
(lp554
S':'
asbag57
(g78
g59
NtRp555
(dp556
g62
(dp557
sg71
g542
sg64
(lp558
g57
(g58
g59
NtRp559
(dp560
g62
(dp561
g70
I4
ssg71
g555
sg64
(lp562
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p563
asbasbasbag57
(g73
g59
NtRp564
(dp565
g62
(dp566
sg71
g538
sg64
(lp567
g57
(g78
g59
NtRp568
(dp569
g62
(dp570
g82
g83
ssg71
g564
sg64
(lp571
S'applications_parent'
p572
asbag57
(g78
g59
NtRp573
(dp574
g62
(dp575
g89
g90
ssg71
g564
sg64
(lp576
S':'
asbag57
(g78
g59
NtRp577
(dp578
g62
(dp579
sg71
g564
sg64
(lp580
g57
(g58
g59
NtRp581
(dp582
g62
(dp583
g70
I4
ssg71
g577
sg64
(lp584
S'/home/anil/bootstrap/web2py'
p585
asbasbasbag57
(g73
g59
NtRp586
(dp587
g62
(dp588
sg71
g538
sg64
(lp589
g57
(g78
g59
NtRp590
(dp591
g62
(dp592
g82
g83
ssg71
g586
sg64
(lp593
S'cmd_args'
p594
asbag57
(g78
g59
NtRp595
(dp596
g62
(dp597
g89
g90
ssg71
g586
sg64
(lp598
S':'
asbag57
(g78
g59
NtRp599
(dp600
g62
(dp601
sg71
g586
sg64
(lp602
g57
(g58
g59
NtRp603
(dp604
g62
(dp605
g70
I4
ssg71
g599
sg64
(lp606
g57
(g66
g59
NtRp607
(dp608
g62
(dp609
g70
I3
ssg71
Nsg64
(lp610
sbasbasbasbag57
(g73
g59
NtRp611
(dp612
g62
(dp613
sg71
g538
sg64
(lp614
g57
(g78
g59
NtRp615
(dp616
g62
(dp617
g82
g83
ssg71
g611
sg64
(lp618
S'cmd_options'
p619
asbag57
(g78
g59
NtRp620
(dp621
g62
(dp622
g89
g90
ssg71
g611
sg64
(lp623
S':'
asbag57
(g78
g59
NtRp624
(dp625
g62
(dp626
sg71
g611
sg64
(lp627
g57
(g58
g59
NtRp628
(dp629
g62
(dp630
g70
I4
ssg71
g624
sg64
(lp631
S"<Values at 0x9d7d0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p632
asbasbasbag57
(g73
g59
NtRp633
(dp634
g62
(dp635
sg71
g538
sg64
(lp636
g57
(g78
g59
NtRp637
(dp638
g62
(dp639
g82
g83
ssg71
g633
sg64
(lp640
S'db_sessions'
p641
asbag57
(g78
g59
NtRp642
(dp643
g62
(dp644
g89
g90
ssg71
g633
sg64
(lp645
S':'
asbag57
(g78
g59
NtRp646
(dp647
g62
(dp648
sg71
g633
sg64
(lp649
g57
(g58
g59
NtRp650
(dp651
g62
(dp652
g70
I4
ssg71
g646
sg64
(lp653
S'set([])'
p654
asbasbasbag57
(g73
g59
NtRp655
(dp656
g62
(dp657
sg71
g538
sg64
(lp658
g57
(g78
g59
NtRp659
(dp660
g62
(dp661
g82
g83
ssg71
g655
sg64
(lp662
S'debugging'
p663
asbag57
(g78
g59
NtRp664
(dp665
g62
(dp666
g89
g90
ssg71
g655
sg64
(lp667
S':'
asbag57
(g78
g59
NtRp668
(dp669
g62
(dp670
sg71
g655
sg64
(lp671
g57
(g58
g59
NtRp672
(dp673
g62
(dp674
g70
I4
ssg71
g668
sg64
(lp675
g100
asbasbasbag57
(g73
g59
NtRp676
(dp677
g62
(dp678
sg71
g538
sg64
(lp679
g57
(g78
g59
NtRp680
(dp681
g62
(dp682
g82
g83
ssg71
g676
sg64
(lp683
S'gluon_parent'
p684
asbag57
(g78
g59
NtRp685
(dp686
g62
(dp687
g89
g90
ssg71
g676
sg64
(lp688
S':'
asbag57
(g78
g59
NtRp689
(dp690
g62
(dp691
sg71
g676
sg64
(lp692
g57
(g58
g59
NtRp693
(dp694
g62
(dp695
g70
I4
ssg71
g689
sg64
(lp696
S'/home/anil/bootstrap/web2py'
p697
asbasbasbag57
(g73
g59
NtRp698
(dp699
g62
(dp700
sg71
g538
sg64
(lp701
g57
(g78
g59
NtRp702
(dp703
g62
(dp704
g82
g83
ssg71
g698
sg64
(lp705
S'http_accept'
p706
asbag57
(g78
g59
NtRp707
(dp708
g62
(dp709
g89
g90
ssg71
g698
sg64
(lp710
S':'
asbag57
(g78
g59
NtRp711
(dp712
g62
(dp713
sg71
g698
sg64
(lp714
g57
(g58
g59
NtRp715
(dp716
g62
(dp717
g70
I4
ssg71
g711
sg64
(lp718
S'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
p719
asbasbasbag57
(g73
g59
NtRp720
(dp721
g62
(dp722
sg71
g538
sg64
(lp723
g57
(g78
g59
NtRp724
(dp725
g62
(dp726
g82
g83
ssg71
g720
sg64
(lp727
S'http_accept_charset'
p728
asbag57
(g78
g59
NtRp729
(dp730
g62
(dp731
g89
g90
ssg71
g720
sg64
(lp732
S':'
asbag57
(g78
g59
NtRp733
(dp734
g62
(dp735
sg71
g720
sg64
(lp736
g57
(g58
g59
NtRp737
(dp738
g62
(dp739
g70
I4
ssg71
g733
sg64
(lp740
S'ISO-8859-1,utf-8;q=0.7,*;q=0.3'
p741
asbasbasbag57
(g73
g59
NtRp742
(dp743
g62
(dp744
sg71
g538
sg64
(lp745
g57
(g78
g59
NtRp746
(dp747
g62
(dp748
g82
g83
ssg71
g742
sg64
(lp749
S'http_accept_encoding'
p750
asbag57
(g78
g59
NtRp751
(dp752
g62
(dp753
g89
g90
ssg71
g742
sg64
(lp754
S':'
asbag57
(g78
g59
NtRp755
(dp756
g62
(dp757
sg71
g742
sg64
(lp758
g57
(g58
g59
NtRp759
(dp760
g62
(dp761
g70
I4
ssg71
g755
sg64
(lp762
S'gzip,deflate,sdch'
p763
asbasbasbag57
(g73
g59
NtRp764
(dp765
g62
(dp766
sg71
g538
sg64
(lp767
g57
(g78
g59
NtRp768
(dp769
g62
(dp770
g82
g83
ssg71
g764
sg64
(lp771
S'http_accept_language'
p772
asbag57
(g78
g59
NtRp773
(dp774
g62
(dp775
g89
g90
ssg71
g764
sg64
(lp776
S':'
asbag57
(g78
g59
NtRp777
(dp778
g62
(dp779
sg71
g764
sg64
(lp780
g57
(g58
g59
NtRp781
(dp782
g62
(dp783
g70
I4
ssg71
g777
sg64
(lp784
S'en-US,en;q=0.8'
p785
asbasbasbag57
(g73
g59
NtRp786
(dp787
g62
(dp788
sg71
g538
sg64
(lp789
g57
(g78
g59
NtRp790
(dp791
g62
(dp792
g82
g83
ssg71
g786
sg64
(lp793
S'http_connection'
p794
asbag57
(g78
g59
NtRp795
(dp796
g62
(dp797
g89
g90
ssg71
g786
sg64
(lp798
S':'
asbag57
(g78
g59
NtRp799
(dp800
g62
(dp801
sg71
g786
sg64
(lp802
g57
(g58
g59
NtRp803
(dp804
g62
(dp805
g70
I4
ssg71
g799
sg64
(lp806
S'keep-alive'
p807
asbasbasbag57
(g73
g59
NtRp808
(dp809
g62
(dp810
sg71
g538
sg64
(lp811
g57
(g78
g59
NtRp812
(dp813
g62
(dp814
g82
g83
ssg71
g808
sg64
(lp815
S'http_cookie'
p816
asbag57
(g78
g59
NtRp817
(dp818
g62
(dp819
g89
g90
ssg71
g808
sg64
(lp820
S':'
asbag57
(g78
g59
NtRp821
(dp822
g62
(dp823
sg71
g808
sg64
(lp824
g57
(g58
g59
NtRp825
(dp826
g62
(dp827
g70
I4
ssg71
g821
sg64
(lp828
S'session_id_dev_bootstrap_ch=127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p829
asbasbasbag57
(g73
g59
NtRp830
(dp831
g62
(dp832
sg71
g538
sg64
(lp833
g57
(g78
g59
NtRp834
(dp835
g62
(dp836
g82
g83
ssg71
g830
sg64
(lp837
S'http_host'
p838
asbag57
(g78
g59
NtRp839
(dp840
g62
(dp841
g89
g90
ssg71
g830
sg64
(lp842
S':'
asbag57
(g78
g59
NtRp843
(dp844
g62
(dp845
sg71
g830
sg64
(lp846
g57
(g58
g59
NtRp847
(dp848
g62
(dp849
g70
I4
ssg71
g843
sg64
(lp850
S'127.0.0.1:8000'
p851
asbasbasbag57
(g73
g59
NtRp852
(dp853
g62
(dp854
sg71
g538
sg64
(lp855
g57
(g78
g59
NtRp856
(dp857
g62
(dp858
g82
g83
ssg71
g852
sg64
(lp859
S'http_referer'
p860
asbag57
(g78
g59
NtRp861
(dp862
g62
(dp863
g89
g90
ssg71
g852
sg64
(lp864
S':'
asbag57
(g78
g59
NtRp865
(dp866
g62
(dp867
sg71
g852
sg64
(lp868
g57
(g58
g59
NtRp869
(dp870
g62
(dp871
g70
I4
ssg71
g865
sg64
(lp872
S'http://127.0.0.1:8000/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1'
p873
asbasbasbag57
(g73
g59
NtRp874
(dp875
g62
(dp876
sg71
g538
sg64
(lp877
g57
(g78
g59
NtRp878
(dp879
g62
(dp880
g82
g83
ssg71
g874
sg64
(lp881
S'http_user_agent'
p882
asbag57
(g78
g59
NtRp883
(dp884
g62
(dp885
g89
g90
ssg71
g874
sg64
(lp886
S':'
asbag57
(g78
g59
NtRp887
(dp888
g62
(dp889
sg71
g874
sg64
(lp890
g57
(g58
g59
NtRp891
(dp892
g62
(dp893
g70
I4
ssg71
g887
sg64
(lp894
S'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'
p895
asbasbasbag57
(g73
g59
NtRp896
(dp897
g62
(dp898
sg71
g538
sg64
(lp899
g57
(g78
g59
NtRp900
(dp901
g62
(dp902
g82
g83
ssg71
g896
sg64
(lp903
S'is_jython'
p904
asbag57
(g78
g59
NtRp905
(dp906
g62
(dp907
g89
g90
ssg71
g896
sg64
(lp908
S':'
asbag57
(g78
g59
NtRp909
(dp910
g62
(dp911
sg71
g896
sg64
(lp912
g57
(g58
g59
NtRp913
(dp914
g62
(dp915
g70
I4
ssg71
g909
sg64
(lp916
g100
asbasbasbag57
(g73
g59
NtRp917
(dp918
g62
(dp919
sg71
g538
sg64
(lp920
g57
(g78
g59
NtRp921
(dp922
g62
(dp923
g82
g83
ssg71
g917
sg64
(lp924
S'is_pypy'
p925
asbag57
(g78
g59
NtRp926
(dp927
g62
(dp928
g89
g90
ssg71
g917
sg64
(lp929
S':'
asbag57
(g78
g59
NtRp930
(dp931
g62
(dp932
sg71
g917
sg64
(lp933
g57
(g58
g59
NtRp934
(dp935
g62
(dp936
g70
I4
ssg71
g930
sg64
(lp937
g100
asbasbasbag57
(g73
g59
NtRp938
(dp939
g62
(dp940
sg71
g538
sg64
(lp941
g57
(g78
g59
NtRp942
(dp943
g62
(dp944
g82
g83
ssg71
g938
sg64
(lp945
S'local_hosts'
p946
asbag57
(g78
g59
NtRp947
(dp948
g62
(dp949
g89
g90
ssg71
g938
sg64
(lp950
S':'
asbag57
(g78
g59
NtRp951
(dp952
g62
(dp953
sg71
g938
sg64
(lp954
g57
(g58
g59
NtRp955
(dp956
g62
(dp957
g70
I4
ssg71
g951
sg64
(lp958
g57
(g66
g59
NtRp959
(dp960
g62
(dp961
g70
I3
ssg71
Nsg64
(lp962
g57
(g73
g59
NtRp963
(dp964
g62
(dp965
sg71
g959
sg64
(lp966
g57
(g78
g59
NtRp967
(dp968
g62
(dp969
sg71
g963
sg64
(lp970
g57
(g58
g59
NtRp971
(dp972
g62
(dp973
g70
I3
ssg71
g967
sg64
(lp974
S'::1'
p975
asbasbasbag57
(g73
g59
NtRp976
(dp977
g62
(dp978
sg71
g959
sg64
(lp979
g57
(g78
g59
NtRp980
(dp981
g62
(dp982
sg71
g976
sg64
(lp983
g57
(g58
g59
NtRp984
(dp985
g62
(dp986
g70
I3
ssg71
g980
sg64
(lp987
S'127.0.1.1'
p988
asbasbasbag57
(g73
g59
NtRp989
(dp990
g62
(dp991
sg71
g959
sg64
(lp992
g57
(g78
g59
NtRp993
(dp994
g62
(dp995
sg71
g989
sg64
(lp996
g57
(g58
g59
NtRp997
(dp998
g62
(dp999
g70
I3
ssg71
g993
sg64
(lp1000
S'::ffff:127.0.0.1'
p1001
asbasbasbag57
(g73
g59
NtRp1002
(dp1003
g62
(dp1004
sg71
g959
sg64
(lp1005
g57
(g78
g59
NtRp1006
(dp1007
g62
(dp1008
sg71
g1002
sg64
(lp1009
g57
(g58
g59
NtRp1010
(dp1011
g62
(dp1012
g70
I3
ssg71
g1006
sg64
(lp1013
S'127.0.0.1'
p1014
asbasbasbag57
(g73
g59
NtRp1015
(dp1016
g62
(dp1017
sg71
g959
sg64
(lp1018
g57
(g78
g59
NtRp1019
(dp1020
g62
(dp1021
sg71
g1015
sg64
(lp1022
g57
(g58
g59
NtRp1023
(dp1024
g62
(dp1025
g70
I3
ssg71
g1019
sg64
(lp1026
S'anil-Inspiron-1525'
p1027
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1028
(dp1029
g62
(dp1030
sg71
g538
sg64
(lp1031
g57
(g78
g59
NtRp1032
(dp1033
g62
(dp1034
g82
g83
ssg71
g1028
sg64
(lp1035
S'path_info'
p1036
asbag57
(g78
g59
NtRp1037
(dp1038
g62
(dp1039
g89
g90
ssg71
g1028
sg64
(lp1040
S':'
asbag57
(g78
g59
NtRp1041
(dp1042
g62
(dp1043
sg71
g1028
sg64
(lp1044
g57
(g58
g59
NtRp1045
(dp1046
g62
(dp1047
g70
I4
ssg71
g1041
sg64
(lp1048
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1'
p1049
asbasbasbag57
(g73
g59
NtRp1050
(dp1051
g62
(dp1052
sg71
g538
sg64
(lp1053
g57
(g78
g59
NtRp1054
(dp1055
g62
(dp1056
g82
g83
ssg71
g1050
sg64
(lp1057
S'query_string'
p1058
asbag57
(g78
g59
NtRp1059
(dp1060
g62
(dp1061
g89
g90
ssg71
g1050
sg64
(lp1062
S':'
asbag57
(g78
g59
NtRp1063
(dp1064
g62
(dp1065
sg71
g1050
sg64
(lp1066
g57
(g58
g59
NtRp1067
(dp1068
g62
(dp1069
g70
I4
ssg71
g1063
sg64
(lp1070
S'_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1071
asbasbasbag57
(g73
g59
NtRp1072
(dp1073
g62
(dp1074
sg71
g538
sg64
(lp1075
g57
(g78
g59
NtRp1076
(dp1077
g62
(dp1078
g82
g83
ssg71
g1072
sg64
(lp1079
S'remote_addr'
p1080
asbag57
(g78
g59
NtRp1081
(dp1082
g62
(dp1083
g89
g90
ssg71
g1072
sg64
(lp1084
S':'
asbag57
(g78
g59
NtRp1085
(dp1086
g62
(dp1087
sg71
g1072
sg64
(lp1088
g57
(g58
g59
NtRp1089
(dp1090
g62
(dp1091
g70
I4
ssg71
g1085
sg64
(lp1092
g275
asbasbasbag57
(g73
g59
NtRp1093
(dp1094
g62
(dp1095
sg71
g538
sg64
(lp1096
g57
(g78
g59
NtRp1097
(dp1098
g62
(dp1099
g82
g83
ssg71
g1093
sg64
(lp1100
S'remote_port'
p1101
asbag57
(g78
g59
NtRp1102
(dp1103
g62
(dp1104
g89
g90
ssg71
g1093
sg64
(lp1105
S':'
asbag57
(g78
g59
NtRp1106
(dp1107
g62
(dp1108
sg71
g1093
sg64
(lp1109
g57
(g58
g59
NtRp1110
(dp1111
g62
(dp1112
g70
I4
ssg71
g1106
sg64
(lp1113
S'60186'
p1114
asbasbasbag57
(g73
g59
NtRp1115
(dp1116
g62
(dp1117
sg71
g538
sg64
(lp1118
g57
(g78
g59
NtRp1119
(dp1120
g62
(dp1121
g82
g83
ssg71
g1115
sg64
(lp1122
S'request_method'
p1123
asbag57
(g78
g59
NtRp1124
(dp1125
g62
(dp1126
g89
g90
ssg71
g1115
sg64
(lp1127
S':'
asbag57
(g78
g59
NtRp1128
(dp1129
g62
(dp1130
sg71
g1115
sg64
(lp1131
g57
(g58
g59
NtRp1132
(dp1133
g62
(dp1134
g70
I4
ssg71
g1128
sg64
(lp1135
S'GET'
p1136
asbasbasbag57
(g73
g59
NtRp1137
(dp1138
g62
(dp1139
sg71
g538
sg64
(lp1140
g57
(g78
g59
NtRp1141
(dp1142
g62
(dp1143
g82
g83
ssg71
g1137
sg64
(lp1144
S'request_uri'
p1145
asbag57
(g78
g59
NtRp1146
(dp1147
g62
(dp1148
g89
g90
ssg71
g1137
sg64
(lp1149
S':'
asbag57
(g78
g59
NtRp1150
(dp1151
g62
(dp1152
sg71
g1137
sg64
(lp1153
g57
(g58
g59
NtRp1154
(dp1155
g62
(dp1156
g70
I4
ssg71
g1150
sg64
(lp1157
S'/DEV_bootstrap_ch/default/list_all_dev_projects/project/experiment.project/1/sample.experiment/1?_signature=7ef83f1a1fbc1478046ec45b38081f44f469294d'
p1158
asbasbasbag57
(g73
g59
NtRp1159
(dp1160
g62
(dp1161
sg71
g538
sg64
(lp1162
g57
(g78
g59
NtRp1163
(dp1164
g62
(dp1165
g82
g83
ssg71
g1159
sg64
(lp1166
S'script_name'
p1167
asbag57
(g78
g59
NtRp1168
(dp1169
g62
(dp1170
g89
g90
ssg71
g1159
sg64
(lp1171
S':'
asbag57
(g78
g59
NtRp1172
(dp1173
g62
(dp1174
sg71
g1159
sg64
(lp1175
g57
(g58
g59
NtRp1176
(dp1177
g62
(dp1178
g70
I4
ssg71
g1172
sg64
(lp1179
S''
asbasbasbag57
(g73
g59
NtRp1180
(dp1181
g62
(dp1182
sg71
g538
sg64
(lp1183
g57
(g78
g59
NtRp1184
(dp1185
g62
(dp1186
g82
g83
ssg71
g1180
sg64
(lp1187
S'server_name'
p1188
asbag57
(g78
g59
NtRp1189
(dp1190
g62
(dp1191
g89
g90
ssg71
g1180
sg64
(lp1192
S':'
asbag57
(g78
g59
NtRp1193
(dp1194
g62
(dp1195
sg71
g1180
sg64
(lp1196
g57
(g58
g59
NtRp1197
(dp1198
g62
(dp1199
g70
I4
ssg71
g1193
sg64
(lp1200
S'anil-Inspiron-1525'
p1201
asbasbasbag57
(g73
g59
NtRp1202
(dp1203
g62
(dp1204
sg71
g538
sg64
(lp1205
g57
(g78
g59
NtRp1206
(dp1207
g62
(dp1208
g82
g83
ssg71
g1202
sg64
(lp1209
S'server_port'
p1210
asbag57
(g78
g59
NtRp1211
(dp1212
g62
(dp1213
g89
g90
ssg71
g1202
sg64
(lp1214
S':'
asbag57
(g78
g59
NtRp1215
(dp1216
g62
(dp1217
sg71
g1202
sg64
(lp1218
g57
(g58
g59
NtRp1219
(dp1220
g62
(dp1221
g70
I4
ssg71
g1215
sg64
(lp1222
S'8000'
p1223
asbasbasbag57
(g73
g59
NtRp1224
(dp1225
g62
(dp1226
sg71
g538
sg64
(lp1227
g57
(g78
g59
NtRp1228
(dp1229
g62
(dp1230
g82
g83
ssg71
g1224
sg64
(lp1231
S'server_protocol'
p1232
asbag57
(g78
g59
NtRp1233
(dp1234
g62
(dp1235
g89
g90
ssg71
g1224
sg64
(lp1236
S':'
asbag57
(g78
g59
NtRp1237
(dp1238
g62
(dp1239
sg71
g1224
sg64
(lp1240
g57
(g58
g59
NtRp1241
(dp1242
g62
(dp1243
g70
I4
ssg71
g1237
sg64
(lp1244
S'HTTP/1.1'
p1245
asbasbasbag57
(g73
g59
NtRp1246
(dp1247
g62
(dp1248
sg71
g538
sg64
(lp1249
g57
(g78
g59
NtRp1250
(dp1251
g62
(dp1252
g82
g83
ssg71
g1246
sg64
(lp1253
S'server_software'
p1254
asbag57
(g78
g59
NtRp1255
(dp1256
g62
(dp1257
g89
g90
ssg71
g1246
sg64
(lp1258
S':'
asbag57
(g78
g59
NtRp1259
(dp1260
g62
(dp1261
sg71
g1246
sg64
(lp1262
g57
(g58
g59
NtRp1263
(dp1264
g62
(dp1265
g70
I4
ssg71
g1259
sg64
(lp1266
S'Rocket 1.2.6'
p1267
asbasbasbag57
(g73
g59
NtRp1268
(dp1269
g62
(dp1270
sg71
g538
sg64
(lp1271
g57
(g78
g59
NtRp1272
(dp1273
g62
(dp1274
g82
g83
ssg71
g1268
sg64
(lp1275
S'web2py_path'
p1276
asbag57
(g78
g59
NtRp1277
(dp1278
g62
(dp1279
g89
g90
ssg71
g1268
sg64
(lp1280
S':'
asbag57
(g78
g59
NtRp1281
(dp1282
g62
(dp1283
sg71
g1268
sg64
(lp1284
g57
(g58
g59
NtRp1285
(dp1286
g62
(dp1287
g70
I4
ssg71
g1281
sg64
(lp1288
g585
asbasbasbag57
(g73
g59
NtRp1289
(dp1290
g62
(dp1291
sg71
g538
sg64
(lp1292
g57
(g78
g59
NtRp1293
(dp1294
g62
(dp1295
g82
g83
ssg71
g1289
sg64
(lp1296
S'web2py_version'
p1297
asbag57
(g78
g59
NtRp1298
(dp1299
g62
(dp1300
g89
g90
ssg71
g1289
sg64
(lp1301
S':'
asbag57
(g78
g59
NtRp1302
(dp1303
g62
(dp1304
sg71
g1289
sg64
(lp1305
g57
(g58
g59
NtRp1306
(dp1307
g62
(dp1308
g70
I4
ssg71
g1302
sg64
(lp1309
g57
(g66
g59
NtRp1310
(dp1311
g62
(dp1312
g70
I3
ssg71
Nsg64
(lp1313
g57
(g73
g59
NtRp1314
(dp1315
g62
(dp1316
sg71
g1310
sg64
(lp1317
g57
(g78
g59
NtRp1318
(dp1319
g62
(dp1320
sg71
g1314
sg64
(lp1321
g57
(g58
g59
NtRp1322
(dp1323
g62
(dp1324
g70
I3
ssg71
g1318
sg64
(lp1325
S'2'
asbasbasbag57
(g73
g59
NtRp1326
(dp1327
g62
(dp1328
sg71
g1310
sg64
(lp1329
g57
(g78
g59
NtRp1330
(dp1331
g62
(dp1332
sg71
g1326
sg64
(lp1333
g57
(g58
g59
NtRp1334
(dp1335
g62
(dp1336
g70
I3
ssg71
g1330
sg64
(lp1337
S'3'
asbasbasbag57
(g73
g59
NtRp1338
(dp1339
g62
(dp1340
sg71
g1310
sg64
(lp1341
g57
(g78
g59
NtRp1342
(dp1343
g62
(dp1344
sg71
g1338
sg64
(lp1345
g57
(g58
g59
NtRp1346
(dp1347
g62
(dp1348
g70
I3
ssg71
g1342
sg64
(lp1349
S'2'
asbasbasbag57
(g73
g59
NtRp1350
(dp1351
g62
(dp1352
sg71
g1310
sg64
(lp1353
g57
(g78
g59
NtRp1354
(dp1355
g62
(dp1356
sg71
g1350
sg64
(lp1357
g57
(g58
g59
NtRp1358
(dp1359
g62
(dp1360
g70
I3
ssg71
g1354
sg64
(lp1361
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p1362
asbasbasbag57
(g73
g59
NtRp1363
(dp1364
g62
(dp1365
sg71
g1310
sg64
(lp1366
g57
(g78
g59
NtRp1367
(dp1368
g62
(dp1369
sg71
g1363
sg64
(lp1370
g57
(g58
g59
NtRp1371
(dp1372
g62
(dp1373
g70
I3
ssg71
g1367
sg64
(lp1374
S'stable'
p1375
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1376
(dp1377
g62
(dp1378
sg71
g538
sg64
(lp1379
g57
(g78
g59
NtRp1380
(dp1381
g62
(dp1382
g82
g83
ssg71
g1376
sg64
(lp1383
S'wsgi_errors'
p1384
asbag57
(g78
g59
NtRp1385
(dp1386
g62
(dp1387
g89
g90
ssg71
g1376
sg64
(lp1388
S':'
asbag57
(g78
g59
NtRp1389
(dp1390
g62
(dp1391
sg71
g1376
sg64
(lp1392
g57
(g58
g59
NtRp1393
(dp1394
g62
(dp1395
g70
I4
ssg71
g1389
sg64
(lp1396
S"<open file '<stderr>', mode 'w' at 0xb733c0d0>"
p1397
asbasbasbag57
(g73
g59
NtRp1398
(dp1399
g62
(dp1400
sg71
g538
sg64
(lp1401
g57
(g78
g59
NtRp1402
(dp1403
g62
(dp1404
g82
g83
ssg71
g1398
sg64
(lp1405
S'wsgi_file_wrapper'
p1406
asbag57
(g78
g59
NtRp1407
(dp1408
g62
(dp1409
g89
g90
ssg71
g1398
sg64
(lp1410
S':'
asbag57
(g78
g59
NtRp1411
(dp1412
g62
(dp1413
sg71
g1398
sg64
(lp1414
g57
(g58
g59
NtRp1415
(dp1416
g62
(dp1417
g70
I4
ssg71
g1411
sg64
(lp1418
S'<class wsgiref.util.FileWrapper at 0x9d06b9c>'
p1419
asbasbasbag57
(g73
g59
NtRp1420
(dp1421
g62
(dp1422
sg71
g538
sg64
(lp1423
g57
(g78
g59
NtRp1424
(dp1425
g62
(dp1426
g82
g83
ssg71
g1420
sg64
(lp1427
S'wsgi_input'
p1428
asbag57
(g78
g59
NtRp1429
(dp1430
g62
(dp1431
g89
g90
ssg71
g1420
sg64
(lp1432
S':'
asbag57
(g78
g59
NtRp1433
(dp1434
g62
(dp1435
sg71
g1420
sg64
(lp1436
g57
(g58
g59
NtRp1437
(dp1438
g62
(dp1439
g70
I4
ssg71
g1433
sg64
(lp1440
S'<socket._fileobject object at 0xae0775ac>'
p1441
asbasbasbag57
(g73
g59
NtRp1442
(dp1443
g62
(dp1444
sg71
g538
sg64
(lp1445
g57
(g78
g59
NtRp1446
(dp1447
g62
(dp1448
g82
g83
ssg71
g1442
sg64
(lp1449
S'wsgi_multiprocess'
p1450
asbag57
(g78
g59
NtRp1451
(dp1452
g62
(dp1453
g89
g90
ssg71
g1442
sg64
(lp1454
S':'
asbag57
(g78
g59
NtRp1455
(dp1456
g62
(dp1457
sg71
g1442
sg64
(lp1458
g57
(g58
g59
NtRp1459
(dp1460
g62
(dp1461
g70
I4
ssg71
g1455
sg64
(lp1462
g100
asbasbasbag57
(g73
g59
NtRp1463
(dp1464
g62
(dp1465
sg71
g538
sg64
(lp1466
g57
(g78
g59
NtRp1467
(dp1468
g62
(dp1469
g82
g83
ssg71
g1463
sg64
(lp1470
S'wsgi_multithread'
p1471
asbag57
(g78
g59
NtRp1472
(dp1473
g62
(dp1474
g89
g90
ssg71
g1463
sg64
(lp1475
S':'
asbag57
(g78
g59
NtRp1476
(dp1477
g62
(dp1478
sg71
g1463
sg64
(lp1479
g57
(g58
g59
NtRp1480
(dp1481
g62
(dp1482
g70
I4
ssg71
g1476
sg64
(lp1483
S'True'
p1484
asbasbasbag57
(g73
g59
NtRp1485
(dp1486
g62
(dp1487
sg71
g538
sg64
(lp1488
g57
(g78
g59
NtRp1489
(dp1490
g62
(dp1491
g82
g83
ssg71
g1485
sg64
(lp1492
S'wsgi_run_once'
p1493
asbag57
(g78
g59
NtRp1494
(dp1495
g62
(dp1496
g89
g90
ssg71
g1485
sg64
(lp1497
S':'
asbag57
(g78
g59
NtRp1498
(dp1499
g62
(dp1500
sg71
g1485
sg64
(lp1501
g57
(g58
g59
NtRp1502
(dp1503
g62
(dp1504
g70
I4
ssg71
g1498
sg64
(lp1505
g100
asbasbasbag57
(g73
g59
NtRp1506
(dp1507
g62
(dp1508
sg71
g538
sg64
(lp1509
g57
(g78
g59
NtRp1510
(dp1511
g62
(dp1512
g82
g83
ssg71
g1506
sg64
(lp1513
S'wsgi_url_scheme'
p1514
asbag57
(g78
g59
NtRp1515
(dp1516
g62
(dp1517
g89
g90
ssg71
g1506
sg64
(lp1518
S':'
asbag57
(g78
g59
NtRp1519
(dp1520
g62
(dp1521
sg71
g1506
sg64
(lp1522
g57
(g58
g59
NtRp1523
(dp1524
g62
(dp1525
g70
I4
ssg71
g1519
sg64
(lp1526
S'http'
p1527
asbasbasbag57
(g73
g59
NtRp1528
(dp1529
g62
(dp1530
sg71
g538
sg64
(lp1531
g57
(g78
g59
NtRp1532
(dp1533
g62
(dp1534
g82
g83
ssg71
g1528
sg64
(lp1535
S'wsgi_version'
p1536
asbag57
(g78
g59
NtRp1537
(dp1538
g62
(dp1539
g89
g90
ssg71
g1528
sg64
(lp1540
S':'
asbag57
(g78
g59
NtRp1541
(dp1542
g62
(dp1543
sg71
g1528
sg64
(lp1544
g57
(g58
g59
NtRp1545
(dp1546
g62
(dp1547
g70
I4
ssg71
g1541
sg64
(lp1548
g57
(g66
g59
NtRp1549
(dp1550
g62
(dp1551
g70
I3
ssg71
Nsg64
(lp1552
g57
(g73
g59
NtRp1553
(dp1554
g62
(dp1555
sg71
g1549
sg64
(lp1556
g57
(g78
g59
NtRp1557
(dp1558
g62
(dp1559
sg71
g1553
sg64
(lp1560
g57
(g58
g59
NtRp1561
(dp1562
g62
(dp1563
g70
I3
ssg71
g1557
sg64
(lp1564
S'1'
asbasbasbag57
(g73
g59
NtRp1565
(dp1566
g62
(dp1567
sg71
g1549
sg64
(lp1568
g57
(g78
g59
NtRp1569
(dp1570
g62
(dp1571
sg71
g1565
sg64
(lp1572
g57
(g58
g59
NtRp1573
(dp1574
g62
(dp1575
g70
I3
ssg71
g1569
sg64
(lp1576
S'0'
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp1577
(dp1578
g62
(dp1579
sg71
g67
sg64
(lp1580
g57
(g78
g59
NtRp1581
(dp1582
g62
(dp1583
g82
g83
ssg71
g1577
sg64
(lp1584
S'extension'
p1585
asbag57
(g78
g59
NtRp1586
(dp1587
g62
(dp1588
g89
g90
ssg71
g1577
sg64
(lp1589
S':'
asbag57
(g78
g59
NtRp1590
(dp1591
g62
(dp1592
sg71
g1577
sg64
(lp1593
g57
(g58
g59
NtRp1594
(dp1595
g62
(dp1596
g70
I5
ssg71
g1590
sg64
(lp1597
S'html'
p1598
asbasbasbag57
(g73
g59
NtRp1599
(dp1600
g62
(dp1601
sg71
g67
sg64
(lp1602
g57
(g78
g59
NtRp1603
(dp1604
g62
(dp1605
g82
g83
ssg71
g1599
sg64
(lp1606
S'folder'
p1607
asbag57
(g78
g59
NtRp1608
(dp1609
g62
(dp1610
g89
g90
ssg71
g1599
sg64
(lp1611
S':'
asbag57
(g78
g59
NtRp1612
(dp1613
g62
(dp1614
sg71
g1599
sg64
(lp1615
g57
(g58
g59
NtRp1616
(dp1617
g62
(dp1618
g70
I5
ssg71
g1612
sg64
(lp1619
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'
p1620
asbasbasbag57
(g73
g59
NtRp1621
(dp1622
g62
(dp1623
sg71
g67
sg64
(lp1624
g57
(g78
g59
NtRp1625
(dp1626
g62
(dp1627
g82
g83
ssg71
g1621
sg64
(lp1628
S'function'
p1629
asbag57
(g78
g59
NtRp1630
(dp1631
g62
(dp1632
g89
g90
ssg71
g1621
sg64
(lp1633
S':'
asbag57
(g78
g59
NtRp1634
(dp1635
g62
(dp1636
sg71
g1621
sg64
(lp1637
g57
(g58
g59
NtRp1638
(dp1639
g62
(dp1640
g70
I5
ssg71
g1634
sg64
(lp1641
S'list_all_dev_projects'
p1642
asbasbasbag57
(g73
g59
NtRp1643
(dp1644
g62
(dp1645
sg71
g67
sg64
(lp1646
g57
(g78
g59
NtRp1647
(dp1648
g62
(dp1649
g82
g83
ssg71
g1643
sg64
(lp1650
S'get_vars'
p1651
asbag57
(g78
g59
NtRp1652
(dp1653
g62
(dp1654
g89
g90
ssg71
g1643
sg64
(lp1655
S':'
asbag57
(g78
g59
NtRp1656
(dp1657
g62
(dp1658
sg71
g1643
sg64
(lp1659
g57
(g58
g59
NtRp1660
(dp1661
g62
(dp1662
g70
I5
ssg71
g1656
sg64
(lp1663
g57
(g66
g59
NtRp1664
(dp1665
g62
(dp1666
g70
I4
ssg71
Nsg64
(lp1667
sbasbasbasbag57
(g73
g59
NtRp1668
(dp1669
g62
(dp1670
sg71
g67
sg64
(lp1671
g57
(g78
g59
NtRp1672
(dp1673
g62
(dp1674
g82
g83
ssg71
g1668
sg64
(lp1675
S'global_settings'
p1676
asbag57
(g78
g59
NtRp1677
(dp1678
g62
(dp1679
g89
g90
ssg71
g1668
sg64
(lp1680
S':'
asbag57
(g78
g59
NtRp1681
(dp1682
g62
(dp1683
sg71
g1668
sg64
(lp1684
g57
(g58
g59
NtRp1685
(dp1686
g62
(dp1687
g70
I5
ssg71
g1681
sg64
(lp1688
g57
(g66
g59
NtRp1689
(dp1690
g62
(dp1691
g70
I4
ssg71
Nsg64
(lp1692
g57
(g73
g59
NtRp1693
(dp1694
g62
(dp1695
sg71
g1689
sg64
(lp1696
g57
(g78
g59
NtRp1697
(dp1698
g62
(dp1699
g82
g83
ssg71
g1693
sg64
(lp1700
g550
asbag57
(g78
g59
NtRp1701
(dp1702
g62
(dp1703
g89
g90
ssg71
g1693
sg64
(lp1704
S':'
asbag57
(g78
g59
NtRp1705
(dp1706
g62
(dp1707
sg71
g1693
sg64
(lp1708
g57
(g58
g59
NtRp1709
(dp1710
g62
(dp1711
g70
I4
ssg71
g1705
sg64
(lp1712
S"set(['/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/'])"
p1713
asbasbasbag57
(g73
g59
NtRp1714
(dp1715
g62
(dp1716
sg71
g1689
sg64
(lp1717
g57
(g78
g59
NtRp1718
(dp1719
g62
(dp1720
g82
g83
ssg71
g1714
sg64
(lp1721
g572
asbag57
(g78
g59
NtRp1722
(dp1723
g62
(dp1724
g89
g90
ssg71
g1714
sg64
(lp1725
S':'
asbag57
(g78
g59
NtRp1726
(dp1727
g62
(dp1728
sg71
g1714
sg64
(lp1729
g57
(g58
g59
NtRp1730
(dp1731
g62
(dp1732
g70
I4
ssg71
g1726
sg64
(lp1733
g585
asbasbasbag57
(g73
g59
NtRp1734
(dp1735
g62
(dp1736
sg71
g1689
sg64
(lp1737
g57
(g78
g59
NtRp1738
(dp1739
g62
(dp1740
g82
g83
ssg71
g1734
sg64
(lp1741
g594
asbag57
(g78
g59
NtRp1742
(dp1743
g62
(dp1744
g89
g90
ssg71
g1734
sg64
(lp1745
S':'
asbag57
(g78
g59
NtRp1746
(dp1747
g62
(dp1748
sg71
g1734
sg64
(lp1749
g57
(g58
g59
NtRp1750
(dp1751
g62
(dp1752
g70
I4
ssg71
g1746
sg64
(lp1753
g57
(g66
g59
NtRp1754
(dp1755
g62
(dp1756
g70
I3
ssg71
Nsg64
(lp1757
sbasbasbasbag57
(g73
g59
NtRp1758
(dp1759
g62
(dp1760
sg71
g1689
sg64
(lp1761
g57
(g78
g59
NtRp1762
(dp1763
g62
(dp1764
g82
g83
ssg71
g1758
sg64
(lp1765
g619
asbag57
(g78
g59
NtRp1766
(dp1767
g62
(dp1768
g89
g90
ssg71
g1758
sg64
(lp1769
S':'
asbag57
(g78
g59
NtRp1770
(dp1771
g62
(dp1772
sg71
g1758
sg64
(lp1773
g57
(g58
g59
NtRp1774
(dp1775
g62
(dp1776
g70
I4
ssg71
g1770
sg64
(lp1777
S"<Values at 0x9d7d0cc: {'verbose': False, 'ip': '127.0.0.1', 'with_scheduler': False, 'ips': [], 'shutdown_timeout': 5, 'taskbar': False, 'port': 8000, 'maxthreads': None, 'softcron': False, 'server_name': 'anil-Inspiron-1525', 'bpython': False, 'nogui': False, 'pid_filename': 'httpserver.pid', 'extcron': False, 'runcron': False, 'run_system_tests': False, 'test': None, 'folder': '/home/anil/bootstrap/web2py', 'config': '', 'import_models': False, 'winservice': '', 'shell': None, 'run': '', 'log_filename': 'httpserver.log', 'debuglevel': 30, 'args': [''], 'socket_timeout': 5, 'ssl_ca_certificate': None, 'scheduler': None, 'profiler_filename': None, 'ssl_private_key': '', 'scheduler_groups': None, 'password': '123', 'request_queue_size': 5, 'ssl_certificate': '', 'cronjob': False, 'numthreads': None, 'quiet': False, 'interfaces': None, 'minthreads': None, 'timeout': 10, 'plain': False, 'nobanner': False}>"
p1778
asbasbasbag57
(g73
g59
NtRp1779
(dp1780
g62
(dp1781
sg71
g1689
sg64
(lp1782
g57
(g78
g59
NtRp1783
(dp1784
g62
(dp1785
g82
g83
ssg71
g1779
sg64
(lp1786
g641
asbag57
(g78
g59
NtRp1787
(dp1788
g62
(dp1789
g89
g90
ssg71
g1779
sg64
(lp1790
S':'
asbag57
(g78
g59
NtRp1791
(dp1792
g62
(dp1793
sg71
g1779
sg64
(lp1794
g57
(g58
g59
NtRp1795
(dp1796
g62
(dp1797
g70
I4
ssg71
g1791
sg64
(lp1798
S'set([])'
p1799
asbasbasbag57
(g73
g59
NtRp1800
(dp1801
g62
(dp1802
sg71
g1689
sg64
(lp1803
g57
(g78
g59
NtRp1804
(dp1805
g62
(dp1806
g82
g83
ssg71
g1800
sg64
(lp1807
g663
asbag57
(g78
g59
NtRp1808
(dp1809
g62
(dp1810
g89
g90
ssg71
g1800
sg64
(lp1811
S':'
asbag57
(g78
g59
NtRp1812
(dp1813
g62
(dp1814
sg71
g1800
sg64
(lp1815
g57
(g58
g59
NtRp1816
(dp1817
g62
(dp1818
g70
I4
ssg71
g1812
sg64
(lp1819
g100
asbasbasbag57
(g73
g59
NtRp1820
(dp1821
g62
(dp1822
sg71
g1689
sg64
(lp1823
g57
(g78
g59
NtRp1824
(dp1825
g62
(dp1826
g82
g83
ssg71
g1820
sg64
(lp1827
g684
asbag57
(g78
g59
NtRp1828
(dp1829
g62
(dp1830
g89
g90
ssg71
g1820
sg64
(lp1831
S':'
asbag57
(g78
g59
NtRp1832
(dp1833
g62
(dp1834
sg71
g1820
sg64
(lp1835
g57
(g58
g59
NtRp1836
(dp1837
g62
(dp1838
g70
I4
ssg71
g1832
sg64
(lp1839
g697
asbasbasbag57
(g73
g59
NtRp1840
(dp1841
g62
(dp1842
sg71
g1689
sg64
(lp1843
g57
(g78
g59
NtRp1844
(dp1845
g62
(dp1846
g82
g83
ssg71
g1840
sg64
(lp1847
g904
asbag57
(g78
g59
NtRp1848
(dp1849
g62
(dp1850
g89
g90
ssg71
g1840
sg64
(lp1851
S':'
asbag57
(g78
g59
NtRp1852
(dp1853
g62
(dp1854
sg71
g1840
sg64
(lp1855
g57
(g58
g59
NtRp1856
(dp1857
g62
(dp1858
g70
I4
ssg71
g1852
sg64
(lp1859
g100
asbasbasbag57
(g73
g59
NtRp1860
(dp1861
g62
(dp1862
sg71
g1689
sg64
(lp1863
g57
(g78
g59
NtRp1864
(dp1865
g62
(dp1866
g82
g83
ssg71
g1860
sg64
(lp1867
g925
asbag57
(g78
g59
NtRp1868
(dp1869
g62
(dp1870
g89
g90
ssg71
g1860
sg64
(lp1871
S':'
asbag57
(g78
g59
NtRp1872
(dp1873
g62
(dp1874
sg71
g1860
sg64
(lp1875
g57
(g58
g59
NtRp1876
(dp1877
g62
(dp1878
g70
I4
ssg71
g1872
sg64
(lp1879
g100
asbasbasbag57
(g73
g59
NtRp1880
(dp1881
g62
(dp1882
sg71
g1689
sg64
(lp1883
g57
(g78
g59
NtRp1884
(dp1885
g62
(dp1886
g82
g83
ssg71
g1880
sg64
(lp1887
g946
asbag57
(g78
g59
NtRp1888
(dp1889
g62
(dp1890
g89
g90
ssg71
g1880
sg64
(lp1891
S':'
asbag57
(g78
g59
NtRp1892
(dp1893
g62
(dp1894
sg71
g1880
sg64
(lp1895
g57
(g58
g59
NtRp1896
(dp1897
g62
(dp1898
g70
I4
ssg71
g1892
sg64
(lp1899
g57
(g66
g59
NtRp1900
(dp1901
g62
(dp1902
g70
I3
ssg71
Nsg64
(lp1903
g57
(g73
g59
NtRp1904
(dp1905
g62
(dp1906
sg71
g1900
sg64
(lp1907
g57
(g78
g59
NtRp1908
(dp1909
g62
(dp1910
sg71
g1904
sg64
(lp1911
g57
(g58
g59
NtRp1912
(dp1913
g62
(dp1914
g70
I3
ssg71
g1908
sg64
(lp1915
g975
asbasbasbag57
(g73
g59
NtRp1916
(dp1917
g62
(dp1918
sg71
g1900
sg64
(lp1919
g57
(g78
g59
NtRp1920
(dp1921
g62
(dp1922
sg71
g1916
sg64
(lp1923
g57
(g58
g59
NtRp1924
(dp1925
g62
(dp1926
g70
I3
ssg71
g1920
sg64
(lp1927
g988
asbasbasbag57
(g73
g59
NtRp1928
(dp1929
g62
(dp1930
sg71
g1900
sg64
(lp1931
g57
(g78
g59
NtRp1932
(dp1933
g62
(dp1934
sg71
g1928
sg64
(lp1935
g57
(g58
g59
NtRp1936
(dp1937
g62
(dp1938
g70
I3
ssg71
g1932
sg64
(lp1939
g1001
asbasbasbag57
(g73
g59
NtRp1940
(dp1941
g62
(dp1942
sg71
g1900
sg64
(lp1943
g57
(g78
g59
NtRp1944
(dp1945
g62
(dp1946
sg71
g1940
sg64
(lp1947
g57
(g58
g59
NtRp1948
(dp1949
g62
(dp1950
g70
I3
ssg71
g1944
sg64
(lp1951
g1014
asbasbasbag57
(g73
g59
NtRp1952
(dp1953
g62
(dp1954
sg71
g1900
sg64
(lp1955
g57
(g78
g59
NtRp1956
(dp1957
g62
(dp1958
sg71
g1952
sg64
(lp1959
g57
(g58
g59
NtRp1960
(dp1961
g62
(dp1962
g70
I3
ssg71
g1956
sg64
(lp1963
g1027
asbasbasbasbasbasbasbag57
(g73
g59
NtRp1964
(dp1965
g62
(dp1966
sg71
g1689
sg64
(lp1967
g57
(g78
g59
NtRp1968
(dp1969
g62
(dp1970
g82
g83
ssg71
g1964
sg64
(lp1971
g1297
asbag57
(g78
g59
NtRp1972
(dp1973
g62
(dp1974
g89
g90
ssg71
g1964
sg64
(lp1975
S':'
asbag57
(g78
g59
NtRp1976
(dp1977
g62
(dp1978
sg71
g1964
sg64
(lp1979
g57
(g58
g59
NtRp1980
(dp1981
g62
(dp1982
g70
I4
ssg71
g1976
sg64
(lp1983
g57
(g66
g59
NtRp1984
(dp1985
g62
(dp1986
g70
I3
ssg71
Nsg64
(lp1987
g57
(g73
g59
NtRp1988
(dp1989
g62
(dp1990
sg71
g1984
sg64
(lp1991
g57
(g78
g59
NtRp1992
(dp1993
g62
(dp1994
sg71
g1988
sg64
(lp1995
g57
(g58
g59
NtRp1996
(dp1997
g62
(dp1998
g70
I3
ssg71
g1992
sg64
(lp1999
S'2'
asbasbasbag57
(g73
g59
NtRp2000
(dp2001
g62
(dp2002
sg71
g1984
sg64
(lp2003
g57
(g78
g59
NtRp2004
(dp2005
g62
(dp2006
sg71
g2000
sg64
(lp2007
g57
(g58
g59
NtRp2008
(dp2009
g62
(dp2010
g70
I3
ssg71
g2004
sg64
(lp2011
S'3'
asbasbasbag57
(g73
g59
NtRp2012
(dp2013
g62
(dp2014
sg71
g1984
sg64
(lp2015
g57
(g78
g59
NtRp2016
(dp2017
g62
(dp2018
sg71
g2012
sg64
(lp2019
g57
(g58
g59
NtRp2020
(dp2021
g62
(dp2022
g70
I3
ssg71
g2016
sg64
(lp2023
S'2'
asbasbasbag57
(g73
g59
NtRp2024
(dp2025
g62
(dp2026
sg71
g1984
sg64
(lp2027
g57
(g78
g59
NtRp2028
(dp2029
g62
(dp2030
sg71
g2024
sg64
(lp2031
g57
(g58
g59
NtRp2032
(dp2033
g62
(dp2034
g70
I3
ssg71
g2028
sg64
(lp2035
S'datetime.datetime(2012, 12, 17, 15, 3, 30)'
p2036
asbasbasbag57
(g73
g59
NtRp2037
(dp2038
g62
(dp2039
sg71
g1984
sg64
(lp2040
g57
(g78
g59
NtRp2041
(dp2042
g62
(dp2043
sg71
g2037
sg64
(lp2044
g57
(g58
g59
NtRp2045
(dp2046
g62
(dp2047
g70
I3
ssg71
g2041
sg64
(lp2048
g1375
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2049
(dp2050
g62
(dp2051
sg71
g67
sg64
(lp2052
g57
(g78
g59
NtRp2053
(dp2054
g62
(dp2055
g82
g83
ssg71
g2049
sg64
(lp2056
S'is_https'
p2057
asbag57
(g78
g59
NtRp2058
(dp2059
g62
(dp2060
g89
g90
ssg71
g2049
sg64
(lp2061
S':'
asbag57
(g78
g59
NtRp2062
(dp2063
g62
(dp2064
sg71
g2049
sg64
(lp2065
g57
(g58
g59
NtRp2066
(dp2067
g62
(dp2068
g70
I5
ssg71
g2062
sg64
(lp2069
g100
asbasbasbag57
(g73
g59
NtRp2070
(dp2071
g62
(dp2072
sg71
g67
sg64
(lp2073
g57
(g78
g59
NtRp2074
(dp2075
g62
(dp2076
g82
g83
ssg71
g2070
sg64
(lp2077
S'is_local'
p2078
asbag57
(g78
g59
NtRp2079
(dp2080
g62
(dp2081
g89
g90
ssg71
g2070
sg64
(lp2082
S':'
asbag57
(g78
g59
NtRp2083
(dp2084
g62
(dp2085
sg71
g2070
sg64
(lp2086
g57
(g58
g59
NtRp2087
(dp2088
g62
(dp2089
g70
I5
ssg71
g2083
sg64
(lp2090
g1484
asbasbasbag57
(g73
g59
NtRp2091
(dp2092
g62
(dp2093
sg71
g67
sg64
(lp2094
g57
(g78
g59
NtRp2095
(dp2096
g62
(dp2097
g82
g83
ssg71
g2091
sg64
(lp2098
S'is_restful'
p2099
asbag57
(g78
g59
NtRp2100
(dp2101
g62
(dp2102
g89
g90
ssg71
g2091
sg64
(lp2103
S':'
asbag57
(g78
g59
NtRp2104
(dp2105
g62
(dp2106
sg71
g2091
sg64
(lp2107
g57
(g58
g59
NtRp2108
(dp2109
g62
(dp2110
g70
I5
ssg71
g2104
sg64
(lp2111
g100
asbasbasbag57
(g73
g59
NtRp2112
(dp2113
g62
(dp2114
sg71
g67
sg64
(lp2115
g57
(g78
g59
NtRp2116
(dp2117
g62
(dp2118
g82
g83
ssg71
g2112
sg64
(lp2119
S'now'
p2120
asbag57
(g78
g59
NtRp2121
(dp2122
g62
(dp2123
g89
g90
ssg71
g2112
sg64
(lp2124
S':'
asbag57
(g78
g59
NtRp2125
(dp2126
g62
(dp2127
sg71
g2112
sg64
(lp2128
g57
(g58
g59
NtRp2129
(dp2130
g62
(dp2131
g70
I5
ssg71
g2125
sg64
(lp2132
S'datetime.datetime(2013, 2, 19, 18, 59, 33, 550407)'
p2133
asbasbasbag57
(g73
g59
NtRp2134
(dp2135
g62
(dp2136
sg71
g67
sg64
(lp2137
g57
(g78
g59
NtRp2138
(dp2139
g62
(dp2140
g82
g83
ssg71
g2134
sg64
(lp2141
S'post_vars'
p2142
asbag57
(g78
g59
NtRp2143
(dp2144
g62
(dp2145
g89
g90
ssg71
g2134
sg64
(lp2146
S':'
asbag57
(g78
g59
NtRp2147
(dp2148
g62
(dp2149
sg71
g2134
sg64
(lp2150
g57
(g58
g59
NtRp2151
(dp2152
g62
(dp2153
g70
I5
ssg71
g2147
sg64
(lp2154
g57
(g66
g59
NtRp2155
(dp2156
g62
(dp2157
g70
I4
ssg71
Nsg64
(lp2158
sbasbasbasbag57
(g73
g59
NtRp2159
(dp2160
g62
(dp2161
sg71
g67
sg64
(lp2162
g57
(g78
g59
NtRp2163
(dp2164
g62
(dp2165
g82
g83
ssg71
g2159
sg64
(lp2166
S'raw_args'
p2167
asbag57
(g78
g59
NtRp2168
(dp2169
g62
(dp2170
g89
g90
ssg71
g2159
sg64
(lp2171
S':'
asbag57
(g78
g59
NtRp2172
(dp2173
g62
(dp2174
sg71
g2159
sg64
(lp2175
g57
(g58
g59
NtRp2176
(dp2177
g62
(dp2178
g70
I5
ssg71
g2172
sg64
(lp2179
S'project/experiment.project/1/sample.experiment/1'
p2180
asbasbasbag57
(g73
g59
NtRp2181
(dp2182
g62
(dp2183
sg71
g67
sg64
(lp2184
g57
(g78
g59
NtRp2185
(dp2186
g62
(dp2187
g82
g83
ssg71
g2181
sg64
(lp2188
S'raw_extension'
p2189
asbag57
(g78
g59
NtRp2190
(dp2191
g62
(dp2192
g89
g90
ssg71
g2181
sg64
(lp2193
S':'
asbag57
(g78
g59
NtRp2194
(dp2195
g62
(dp2196
sg71
g2181
sg64
(lp2197
g57
(g58
g59
NtRp2198
(dp2199
g62
(dp2200
g70
I5
ssg71
g2194
sg64
(lp2201
S'None'
p2202
asbasbasbag57
(g73
g59
NtRp2203
(dp2204
g62
(dp2205
sg71
g67
sg64
(lp2206
g57
(g78
g59
NtRp2207
(dp2208
g62
(dp2209
g82
g83
ssg71
g2203
sg64
(lp2210
S'url'
p2211
asbag57
(g78
g59
NtRp2212
(dp2213
g62
(dp2214
g89
g90
ssg71
g2203
sg64
(lp2215
S':'
asbag57
(g78
g59
NtRp2216
(dp2217
g62
(dp2218
sg71
g2203
sg64
(lp2219
g57
(g58
g59
NtRp2220
(dp2221
g62
(dp2222
g70
I5
ssg71
g2216
sg64
(lp2223
g1049
asbasbasbag57
(g73
g59
NtRp2224
(dp2225
g62
(dp2226
sg71
g67
sg64
(lp2227
g57
(g78
g59
NtRp2228
(dp2229
g62
(dp2230
g82
g83
ssg71
g2224
sg64
(lp2231
S'utcnow'
p2232
asbag57
(g78
g59
NtRp2233
(dp2234
g62
(dp2235
g89
g90
ssg71
g2224
sg64
(lp2236
S':'
asbag57
(g78
g59
NtRp2237
(dp2238
g62
(dp2239
sg71
g2224
sg64
(lp2240
g57
(g58
g59
NtRp2241
(dp2242
g62
(dp2243
g70
I5
ssg71
g2237
sg64
(lp2244
S'datetime.datetime(2013, 2, 19, 13, 29, 33, 550461)'
p2245
asbasbasbag57
(g73
g59
NtRp2246
(dp2247
g62
(dp2248
sg71
g67
sg64
(lp2249
g57
(g78
g59
NtRp2250
(dp2251
g62
(dp2252
g82
g83
ssg71
g2246
sg64
(lp2253
S'uuid'
p2254
asbag57
(g78
g59
NtRp2255
(dp2256
g62
(dp2257
g89
g90
ssg71
g2246
sg64
(lp2258
S':'
asbag57
(g78
g59
NtRp2259
(dp2260
g62
(dp2261
sg71
g2246
sg64
(lp2262
g57
(g58
g59
NtRp2263
(dp2264
g62
(dp2265
g70
I5
ssg71
g2259
sg64
(lp2266
S'DEV_bootstrap_ch/127.0.0.1.2013-02-19.18-59-33.c63d330e-c723-4a72-9a0f-e2f0ae593a0e'
p2267
asbasbasbag57
(g73
g59
NtRp2268
(dp2269
g62
(dp2270
sg71
g67
sg64
(lp2271
g57
(g78
g59
NtRp2272
(dp2273
g62
(dp2274
g82
g83
ssg71
g2268
sg64
(lp2275
S'vars'
p2276
asbag57
(g78
g59
NtRp2277
(dp2278
g62
(dp2279
g89
g90
ssg71
g2268
sg64
(lp2280
S':'
asbag57
(g78
g59
NtRp2281
(dp2282
g62
(dp2283
sg71
g2268
sg64
(lp2284
g57
(g58
g59
NtRp2285
(dp2286
g62
(dp2287
g70
I5
ssg71
g2281
sg64
(lp2288
g57
(g66
g59
NtRp2289
(dp2290
g62
(dp2291
g70
I4
ssg71
Nsg64
(lp2292
g57
(g73
g59
NtRp2293
(dp2294
g62
(dp2295
sg71
g2289
sg64
(lp2296
g57
(g78
g59
NtRp2297
(dp2298
g62
(dp2299
g82
g83
ssg71
g2293
sg64
(lp2300
S'records'
p2301
asbag57
(g78
g59
NtRp2302
(dp2303
g62
(dp2304
g89
g90
ssg71
g2293
sg64
(lp2305
S':'
asbag57
(g78
g59
NtRp2306
(dp2307
g62
(dp2308
sg71
g2293
sg64
(lp2309
g57
(g58
g59
NtRp2310
(dp2311
g62
(dp2312
g70
I4
ssg71
g2306
sg64
(lp2313
g57
(g66
g59
NtRp2314
(dp2315
g62
(dp2316
g70
I3
ssg71
Nsg64
(lp2317
sbasbasbasbasbasbasbasbag57
(g73
g59
NtRp2318
(dp2319
g62
(dp2320
sg71
g67
sg64
(lp2321
g57
(g78
g59
NtRp2322
(dp2323
g62
(dp2324
g82
g83
ssg71
g2318
sg64
(lp2325
S'wsgi'
p2326
asbag57
(g78
g59
NtRp2327
(dp2328
g62
(dp2329
g89
g90
ssg71
g2318
sg64
(lp2330
S':'
asbag57
(g78
g59
NtRp2331
(dp2332
g62
(dp2333
sg71
g2318
sg64
(lp2334
g57
(g58
g59
NtRp2335
(dp2336
g62
(dp2337
g70
I5
ssg71
g2331
sg64
(lp2338
g57
(g66
g59
NtRp2339
(dp2340
g62
(dp2341
g70
I4
ssg71
Nsg64
(lp2342
g57
(g73
g59
NtRp2343
(dp2344
g62
(dp2345
sg71
g2339
sg64
(lp2346
g57
(g78
g59
NtRp2347
(dp2348
g62
(dp2349
g82
g83
ssg71
g2343
sg64
(lp2350
S'environ'
p2351
asbag57
(g78
g59
NtRp2352
(dp2353
g62
(dp2354
g89
g90
ssg71
g2343
sg64
(lp2355
S':'
asbag57
(g78
g59
NtRp2356
(dp2357
g62
(dp2358
sg71
g2343
sg64
(lp2359
g57
(g58
g59
NtRp2360
(dp2361
g62
(dp2362
g70
I4
ssg71
g2356
sg64
(lp2363
g57
(g66
g59
NtRp2364
(dp2365
g62
(dp2366
g70
I3
ssg71
Nsg64
(lp2367
g57
(g73
g59
NtRp2368
(dp2369
g62
(dp2370
sg71
g2364
sg64
(lp2371
g57
(g78
g59
NtRp2372
(dp2373
g62
(dp2374
g82
g83
ssg71
g2368
sg64
(lp2375
S'HTTP_ACCEPT'
p2376
asbag57
(g78
g59
NtRp2377
(dp2378
g62
(dp2379
g89
g90
ssg71
g2368
sg64
(lp2380
S':'
asbag57
(g78
g59
NtRp2381
(dp2382
g62
(dp2383
sg71
g2368
sg64
(lp2384
g57
(g58
g59
NtRp2385
(dp2386
g62
(dp2387
g70
I3
ssg71
g2381
sg64
(lp2388
g719
asbasbasbag57
(g73
g59
NtRp2389
(dp2390
g62
(dp2391
sg71
g2364
sg64
(lp2392
g57
(g78
g59
NtRp2393
(dp2394
g62
(dp2395
g82
g83
ssg71
g2389
sg64
(lp2396
S'HTTP_ACCEPT_CHARSET'
p2397
asbag57
(g78
g59
NtRp2398
(dp2399
g62
(dp2400
g89
g90
ssg71
g2389
sg64
(lp2401
S':'
asbag57
(g78
g59
NtRp2402
(dp2403
g62
(dp2404
sg71
g2389
sg64
(lp2405
g57
(g58
g59
NtRp2406
(dp2407
g62
(dp2408
g70
I3
ssg71
g2402
sg64
(lp2409
g741
asbasbasbag57
(g73
g59
NtRp2410
(dp2411
g62
(dp2412
sg71
g2364
sg64
(lp2413
g57
(g78
g59
NtRp2414
(dp2415
g62
(dp2416
g82
g83
ssg71
g2410
sg64
(lp2417
S'HTTP_ACCEPT_ENCODING'
p2418
asbag57
(g78
g59
NtRp2419
(dp2420
g62
(dp2421
g89
g90
ssg71
g2410
sg64
(lp2422
S':'
asbag57
(g78
g59
NtRp2423
(dp2424
g62
(dp2425
sg71
g2410
sg64
(lp2426
g57
(g58
g59
NtRp2427
(dp2428
g62
(dp2429
g70
I3
ssg71
g2423
sg64
(lp2430
g763
asbasbasbag57
(g73
g59
NtRp2431
(dp2432
g62
(dp2433
sg71
g2364
sg64
(lp2434
g57
(g78
g59
NtRp2435
(dp2436
g62
(dp2437
g82
g83
ssg71
g2431
sg64
(lp2438
S'HTTP_ACCEPT_LANGUAGE'
p2439
asbag57
(g78
g59
NtRp2440
(dp2441
g62
(dp2442
g89
g90
ssg71
g2431
sg64
(lp2443
S':'
asbag57
(g78
g59
NtRp2444
(dp2445
g62
(dp2446
sg71
g2431
sg64
(lp2447
g57
(g58
g59
NtRp2448
(dp2449
g62
(dp2450
g70
I3
ssg71
g2444
sg64
(lp2451
g785
asbasbasbag57
(g73
g59
NtRp2452
(dp2453
g62
(dp2454
sg71
g2364
sg64
(lp2455
g57
(g78
g59
NtRp2456
(dp2457
g62
(dp2458
g82
g83
ssg71
g2452
sg64
(lp2459
S'HTTP_CONNECTION'
p2460
asbag57
(g78
g59
NtRp2461
(dp2462
g62
(dp2463
g89
g90
ssg71
g2452
sg64
(lp2464
S':'
asbag57
(g78
g59
NtRp2465
(dp2466
g62
(dp2467
sg71
g2452
sg64
(lp2468
g57
(g58
g59
NtRp2469
(dp2470
g62
(dp2471
g70
I3
ssg71
g2465
sg64
(lp2472
g807
asbasbasbag57
(g73
g59
NtRp2473
(dp2474
g62
(dp2475
sg71
g2364
sg64
(lp2476
g57
(g78
g59
NtRp2477
(dp2478
g62
(dp2479
g82
g83
ssg71
g2473
sg64
(lp2480
S'HTTP_COOKIE'
p2481
asbag57
(g78
g59
NtRp2482
(dp2483
g62
(dp2484
g89
g90
ssg71
g2473
sg64
(lp2485
S':'
asbag57
(g78
g59
NtRp2486
(dp2487
g62
(dp2488
sg71
g2473
sg64
(lp2489
g57
(g58
g59
NtRp2490
(dp2491
g62
(dp2492
g70
I3
ssg71
g2486
sg64
(lp2493
g829
asbasbasbag57
(g73
g59
NtRp2494
(dp2495
g62
(dp2496
sg71
g2364
sg64
(lp2497
g57
(g78
g59
NtRp2498
(dp2499
g62
(dp2500
g82
g83
ssg71
g2494
sg64
(lp2501
S'HTTP_HOST'
p2502
asbag57
(g78
g59
NtRp2503
(dp2504
g62
(dp2505
g89
g90
ssg71
g2494
sg64
(lp2506
S':'
asbag57
(g78
g59
NtRp2507
(dp2508
g62
(dp2509
sg71
g2494
sg64
(lp2510
g57
(g58
g59
NtRp2511
(dp2512
g62
(dp2513
g70
I3
ssg71
g2507
sg64
(lp2514
g851
asbasbasbag57
(g73
g59
NtRp2515
(dp2516
g62
(dp2517
sg71
g2364
sg64
(lp2518
g57
(g78
g59
NtRp2519
(dp2520
g62
(dp2521
g82
g83
ssg71
g2515
sg64
(lp2522
S'HTTP_REFERER'
p2523
asbag57
(g78
g59
NtRp2524
(dp2525
g62
(dp2526
g89
g90
ssg71
g2515
sg64
(lp2527
S':'
asbag57
(g78
g59
NtRp2528
(dp2529
g62
(dp2530
sg71
g2515
sg64
(lp2531
g57
(g58
g59
NtRp2532
(dp2533
g62
(dp2534
g70
I3
ssg71
g2528
sg64
(lp2535
g873
asbasbasbag57
(g73
g59
NtRp2536
(dp2537
g62
(dp2538
sg71
g2364
sg64
(lp2539
g57
(g78
g59
NtRp2540
(dp2541
g62
(dp2542
g82
g83
ssg71
g2536
sg64
(lp2543
S'HTTP_USER_AGENT'
p2544
asbag57
(g78
g59
NtRp2545
(dp2546
g62
(dp2547
g89
g90
ssg71
g2536
sg64
(lp2548
S':'
asbag57
(g78
g59
NtRp2549
(dp2550
g62
(dp2551
sg71
g2536
sg64
(lp2552
g57
(g58
g59
NtRp2553
(dp2554
g62
(dp2555
g70
I3
ssg71
g2549
sg64
(lp2556
g895
asbasbasbag57
(g73
g59
NtRp2557
(dp2558
g62
(dp2559
sg71
g2364
sg64
(lp2560
g57
(g78
g59
NtRp2561
(dp2562
g62
(dp2563
g82
g83
ssg71
g2557
sg64
(lp2564
S'PATH_INFO'
p2565
asbag57
(g78
g59
NtRp2566
(dp2567
g62
(dp2568
g89
g90
ssg71
g2557
sg64
(lp2569
S':'
asbag57
(g78
g59
NtRp2570
(dp2571
g62
(dp2572
sg71
g2557
sg64
(lp2573
g57
(g58
g59
NtRp2574
(dp2575
g62
(dp2576
g70
I3
ssg71
g2570
sg64
(lp2577
g1049
asbasbasbag57
(g73
g59
NtRp2578
(dp2579
g62
(dp2580
sg71
g2364
sg64
(lp2581
g57
(g78
g59
NtRp2582
(dp2583
g62
(dp2584
g82
g83
ssg71
g2578
sg64
(lp2585
S'QUERY_STRING'
p2586
asbag57
(g78
g59
NtRp2587
(dp2588
g62
(dp2589
g89
g90
ssg71
g2578
sg64
(lp2590
S':'
asbag57
(g78
g59
NtRp2591
(dp2592
g62
(dp2593
sg71
g2578
sg64
(lp2594
g57
(g58
g59
NtRp2595
(dp2596
g62
(dp2597
g70
I3
ssg71
g2591
sg64
(lp2598
g1071
asbasbasbag57
(g73
g59
NtRp2599
(dp2600
g62
(dp2601
sg71
g2364
sg64
(lp2602
g57
(g78
g59
NtRp2603
(dp2604
g62
(dp2605
g82
g83
ssg71
g2599
sg64
(lp2606
S'REMOTE_ADDR'
p2607
asbag57
(g78
g59
NtRp2608
(dp2609
g62
(dp2610
g89
g90
ssg71
g2599
sg64
(lp2611
S':'
asbag57
(g78
g59
NtRp2612
(dp2613
g62
(dp2614
sg71
g2599
sg64
(lp2615
g57
(g58
g59
NtRp2616
(dp2617
g62
(dp2618
g70
I3
ssg71
g2612
sg64
(lp2619
g275
asbasbasbag57
(g73
g59
NtRp2620
(dp2621
g62
(dp2622
sg71
g2364
sg64
(lp2623
g57
(g78
g59
NtRp2624
(dp2625
g62
(dp2626
g82
g83
ssg71
g2620
sg64
(lp2627
S'REMOTE_PORT'
p2628
asbag57
(g78
g59
NtRp2629
(dp2630
g62
(dp2631
g89
g90
ssg71
g2620
sg64
(lp2632
S':'
asbag57
(g78
g59
NtRp2633
(dp2634
g62
(dp2635
sg71
g2620
sg64
(lp2636
g57
(g58
g59
NtRp2637
(dp2638
g62
(dp2639
g70
I3
ssg71
g2633
sg64
(lp2640
g1114
asbasbasbag57
(g73
g59
NtRp2641
(dp2642
g62
(dp2643
sg71
g2364
sg64
(lp2644
g57
(g78
g59
NtRp2645
(dp2646
g62
(dp2647
g82
g83
ssg71
g2641
sg64
(lp2648
S'REQUEST_METHOD'
p2649
asbag57
(g78
g59
NtRp2650
(dp2651
g62
(dp2652
g89
g90
ssg71
g2641
sg64
(lp2653
S':'
asbag57
(g78
g59
NtRp2654
(dp2655
g62
(dp2656
sg71
g2641
sg64
(lp2657
g57
(g58
g59
NtRp2658
(dp2659
g62
(dp2660
g70
I3
ssg71
g2654
sg64
(lp2661
g1136
asbasbasbag57
(g73
g59
NtRp2662
(dp2663
g62
(dp2664
sg71
g2364
sg64
(lp2665
g57
(g78
g59
NtRp2666
(dp2667
g62
(dp2668
g82
g83
ssg71
g2662
sg64
(lp2669
S'REQUEST_URI'
p2670
asbag57
(g78
g59
NtRp2671
(dp2672
g62
(dp2673
g89
g90
ssg71
g2662
sg64
(lp2674
S':'
asbag57
(g78
g59
NtRp2675
(dp2676
g62
(dp2677
sg71
g2662
sg64
(lp2678
g57
(g58
g59
NtRp2679
(dp2680
g62
(dp2681
g70
I3
ssg71
g2675
sg64
(lp2682
g1158
asbasbasbag57
(g73
g59
NtRp2683
(dp2684
g62
(dp2685
sg71
g2364
sg64
(lp2686
g57
(g78
g59
NtRp2687
(dp2688
g62
(dp2689
g82
g83
ssg71
g2683
sg64
(lp2690
S'SCRIPT_NAME'
p2691
asbag57
(g78
g59
NtRp2692
(dp2693
g62
(dp2694
g89
g90
ssg71
g2683
sg64
(lp2695
S':'
asbag57
(g78
g59
NtRp2696
(dp2697
g62
(dp2698
sg71
g2683
sg64
(lp2699
g57
(g58
g59
NtRp2700
(dp2701
g62
(dp2702
g70
I3
ssg71
g2696
sg64
(lp2703
S''
asbasbasbag57
(g73
g59
NtRp2704
(dp2705
g62
(dp2706
sg71
g2364
sg64
(lp2707
g57
(g78
g59
NtRp2708
(dp2709
g62
(dp2710
g82
g83
ssg71
g2704
sg64
(lp2711
S'SERVER_NAME'
p2712
asbag57
(g78
g59
NtRp2713
(dp2714
g62
(dp2715
g89
g90
ssg71
g2704
sg64
(lp2716
S':'
asbag57
(g78
g59
NtRp2717
(dp2718
g62
(dp2719
sg71
g2704
sg64
(lp2720
g57
(g58
g59
NtRp2721
(dp2722
g62
(dp2723
g70
I3
ssg71
g2717
sg64
(lp2724
g1201
asbasbasbag57
(g73
g59
NtRp2725
(dp2726
g62
(dp2727
sg71
g2364
sg64
(lp2728
g57
(g78
g59
NtRp2729
(dp2730
g62
(dp2731
g82
g83
ssg71
g2725
sg64
(lp2732
S'SERVER_PORT'
p2733
asbag57
(g78
g59
NtRp2734
(dp2735
g62
(dp2736
g89
g90
ssg71
g2725
sg64
(lp2737
S':'
asbag57
(g78
g59
NtRp2738
(dp2739
g62
(dp2740
sg71
g2725
sg64
(lp2741
g57
(g58
g59
NtRp2742
(dp2743
g62
(dp2744
g70
I3
ssg71
g2738
sg64
(lp2745
g1223
asbasbasbag57
(g73
g59
NtRp2746
(dp2747
g62
(dp2748
sg71
g2364
sg64
(lp2749
g57
(g78
g59
NtRp2750
(dp2751
g62
(dp2752
g82
g83
ssg71
g2746
sg64
(lp2753
S'SERVER_PROTOCOL'
p2754
asbag57
(g78
g59
NtRp2755
(dp2756
g62
(dp2757
g89
g90
ssg71
g2746
sg64
(lp2758
S':'
asbag57
(g78
g59
NtRp2759
(dp2760
g62
(dp2761
sg71
g2746
sg64
(lp2762
g57
(g58
g59
NtRp2763
(dp2764
g62
(dp2765
g70
I3
ssg71
g2759
sg64
(lp2766
g1245
asbasbasbag57
(g73
g59
NtRp2767
(dp2768
g62
(dp2769
sg71
g2364
sg64
(lp2770
g57
(g78
g59
NtRp2771
(dp2772
g62
(dp2773
g82
g83
ssg71
g2767
sg64
(lp2774
S'SERVER_SOFTWARE'
p2775
asbag57
(g78
g59
NtRp2776
(dp2777
g62
(dp2778
g89
g90
ssg71
g2767
sg64
(lp2779
S':'
asbag57
(g78
g59
NtRp2780
(dp2781
g62
(dp2782
sg71
g2767
sg64
(lp2783
g57
(g58
g59
NtRp2784
(dp2785
g62
(dp2786
g70
I3
ssg71
g2780
sg64
(lp2787
g1267
asbasbasbag57
(g73
g59
NtRp2788
(dp2789
g62
(dp2790
sg71
g2364
sg64
(lp2791
g57
(g78
g59
NtRp2792
(dp2793
g62
(dp2794
g82
g83
ssg71
g2788
sg64
(lp2795
S'wsgi.errors'
p2796
asbag57
(g78
g59
NtRp2797
(dp2798
g62
(dp2799
g89
g90
ssg71
g2788
sg64
(lp2800
S':'
asbag57
(g78
g59
NtRp2801
(dp2802
g62
(dp2803
sg71
g2788
sg64
(lp2804
g57
(g58
g59
NtRp2805
(dp2806
g62
(dp2807
g70
I3
ssg71
g2801
sg64
(lp2808
S"<open file '<stderr>', mode 'w' at 0xb733c0d0>"
p2809
asbasbasbag57
(g73
g59
NtRp2810
(dp2811
g62
(dp2812
sg71
g2364
sg64
(lp2813
g57
(g78
g59
NtRp2814
(dp2815
g62
(dp2816
g82
g83
ssg71
g2810
sg64
(lp2817
S'wsgi.file_wrapper'
p2818
asbag57
(g78
g59
NtRp2819
(dp2820
g62
(dp2821
g89
g90
ssg71
g2810
sg64
(lp2822
S':'
asbag57
(g78
g59
NtRp2823
(dp2824
g62
(dp2825
sg71
g2810
sg64
(lp2826
g57
(g58
g59
NtRp2827
(dp2828
g62
(dp2829
g70
I3
ssg71
g2823
sg64
(lp2830
S'<class wsgiref.util.FileWrapper at 0x9d06b9c>'
p2831
asbasbasbag57
(g73
g59
NtRp2832
(dp2833
g62
(dp2834
sg71
g2364
sg64
(lp2835
g57
(g78
g59
NtRp2836
(dp2837
g62
(dp2838
g82
g83
ssg71
g2832
sg64
(lp2839
S'wsgi.input'
p2840
asbag57
(g78
g59
NtRp2841
(dp2842
g62
(dp2843
g89
g90
ssg71
g2832
sg64
(lp2844
S':'
asbag57
(g78
g59
NtRp2845
(dp2846
g62
(dp2847
sg71
g2832
sg64
(lp2848
g57
(g58
g59
NtRp2849
(dp2850
g62
(dp2851
g70
I3
ssg71
g2845
sg64
(lp2852
S'<cStringIO.StringO object at 0xadf6e4a0>'
p2853
asbasbasbag57
(g73
g59
NtRp2854
(dp2855
g62
(dp2856
sg71
g2364
sg64
(lp2857
g57
(g78
g59
NtRp2858
(dp2859
g62
(dp2860
g82
g83
ssg71
g2854
sg64
(lp2861
S'wsgi.multiprocess'
p2862
asbag57
(g78
g59
NtRp2863
(dp2864
g62
(dp2865
g89
g90
ssg71
g2854
sg64
(lp2866
S':'
asbag57
(g78
g59
NtRp2867
(dp2868
g62
(dp2869
sg71
g2854
sg64
(lp2870
g57
(g58
g59
NtRp2871
(dp2872
g62
(dp2873
g70
I3
ssg71
g2867
sg64
(lp2874
g100
asbasbasbag57
(g73
g59
NtRp2875
(dp2876
g62
(dp2877
sg71
g2364
sg64
(lp2878
g57
(g78
g59
NtRp2879
(dp2880
g62
(dp2881
g82
g83
ssg71
g2875
sg64
(lp2882
S'wsgi.multithread'
p2883
asbag57
(g78
g59
NtRp2884
(dp2885
g62
(dp2886
g89
g90
ssg71
g2875
sg64
(lp2887
S':'
asbag57
(g78
g59
NtRp2888
(dp2889
g62
(dp2890
sg71
g2875
sg64
(lp2891
g57
(g58
g59
NtRp2892
(dp2893
g62
(dp2894
g70
I3
ssg71
g2888
sg64
(lp2895
g1484
asbasbasbag57
(g73
g59
NtRp2896
(dp2897
g62
(dp2898
sg71
g2364
sg64
(lp2899
g57
(g78
g59
NtRp2900
(dp2901
g62
(dp2902
g82
g83
ssg71
g2896
sg64
(lp2903
S'wsgi.run_once'
p2904
asbag57
(g78
g59
NtRp2905
(dp2906
g62
(dp2907
g89
g90
ssg71
g2896
sg64
(lp2908
S':'
asbag57
(g78
g59
NtRp2909
(dp2910
g62
(dp2911
sg71
g2896
sg64
(lp2912
g57
(g58
g59
NtRp2913
(dp2914
g62
(dp2915
g70
I3
ssg71
g2909
sg64
(lp2916
g100
asbasbasbag57
(g73
g59
NtRp2917
(dp2918
g62
(dp2919
sg71
g2364
sg64
(lp2920
g57
(g78
g59
NtRp2921
(dp2922
g62
(dp2923
g82
g83
ssg71
g2917
sg64
(lp2924
S'wsgi.url_scheme'
p2925
asbag57
(g78
g59
NtRp2926
(dp2927
g62
(dp2928
g89
g90
ssg71
g2917
sg64
(lp2929
S':'
asbag57
(g78
g59
NtRp2930
(dp2931
g62
(dp2932
sg71
g2917
sg64
(lp2933
g57
(g58
g59
NtRp2934
(dp2935
g62
(dp2936
g70
I3
ssg71
g2930
sg64
(lp2937
g1527
asbasbasbag57
(g73
g59
NtRp2938
(dp2939
g62
(dp2940
sg71
g2364
sg64
(lp2941
g57
(g78
g59
NtRp2942
(dp2943
g62
(dp2944
g82
g83
ssg71
g2938
sg64
(lp2945
S'wsgi.version'
p2946
asbag57
(g78
g59
NtRp2947
(dp2948
g62
(dp2949
g89
g90
ssg71
g2938
sg64
(lp2950
S':'
asbag57
(g78
g59
NtRp2951
(dp2952
g62
(dp2953
sg71
g2938
sg64
(lp2954
g57
(g58
g59
NtRp2955
(dp2956
g62
(dp2957
g70
I3
ssg71
g2951
sg64
(lp2958
S'1'
asbasbasbasbasbasbasbasbasbasbasbasbasbsS'frames'
p2959
(lp2960
(dp2961
S'file'
p2962
S'/home/anil/bootstrap/web2py/gluon/restricted.py'
p2963
sS'dump'
p2964
(dp2965
S'environment'
p2966
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p2967
sS'ccode'
p2968
S'<code object <module> at 0xad935a88, file "/home...DEV_bootstrap_ch/controllers/default.py", line 1>'
p2969
ssS'lnum'
p2970
I212
sS'lines'
p2971
(dp2972
I207
S'    try:'
p2973
sI208
S'        if isinstance(code, types.CodeType):'
p2974
sI209
S'            ccode = code'
p2975
sI210
S'        else:'
p2976
sI211
S'            ccode = compile2(code, layer)'
p2977
sI212
S'        exec ccode in environment'
p2978
sI213
S'    except HTTP:'
p2979
sI214
S'        raise'
p2980
sI215
S'    except RestrictedError:'
p2981
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p2982
ssS'call'
p2983
S"(code='import rpy2.robjects as robjects\\n# -*- coding: u...se._vars=response._caller(list_all_dev_projects)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py')"
p2984
sS'func'
p2985
S'restricted'
p2986
sa(dp2987
g2962
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p2988
sg2964
(dp2989
sg2970
I1104
sg2971
(dp2990
I1093
S'   """allows an experimentalist to add multiple images and files and displays it in the consolidated sample view form """'
p2991
sI1094
S'   """ per sample . takes id of the sample as the input """'
p2992
sI1095
S'   sid = request.args(0)'
p2993
sI1096
S'   sample = db(db.sample.id == sid).select().first()'
p2994
sI1097
S'   old = db(db.sample_files.sample == sid).select(db.sample_files.ALL)'
p2995
sI1098
S'   form = SQLFORM(db.sample_files)'
p2996
sI1099
S'   form.vars.sample = sid'
p2997
sI1100
S'   return locals()'
p2998
sI1101
S''
sI1102
S''
ssg2983
S'()'
p2999
sg2985
S'<module>'
p3000
sa(dp3001
g2962
S'/home/anil/bootstrap/web2py/gluon/globals.py'
p3002
sg2964
(dp3003
S'self'
p3004
S'undefined'
p3005
sS'f'
S'<function list_all_dev_projects>'
p3006
ssg2970
I193
sg2971
(dp3007
I192
S'        self._vars = None'
p3008
sI193
S'        self._caller = lambda f: f()'
p3009
sI194
S'        self._view_environment = None'
p3010
sI195
S'        self._custom_commit = None'
p3011
sI196
S'        self._custom_rollback = None'
p3012
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p3013
sI189
S'        self.files = []            # used by web2py_ajax.html'
p3014
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p3015
sI191
S"        self.delimiters = ('{{', '}}')"
p3016
ssg2983
S'(f=<function list_all_dev_projects>)'
p3017
sg2985
S'<lambda>'
p3018
sa(dp3019
g2962
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3020
sg2964
(dp3021
S'global grid'
p3022
S'<function grid>'
p3023
sS'ck'
p3024
S"{'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}"
p3025
sS'links'
p3026
S"{'sample': [<function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>]}"
p3027
sS'db.project'
p3028
S'<Table project (id,name,code,start_date,project_...name,project_publication_date,project_pubmed_id)>'
p3029
sS'global SQLFORM'
p3030
S"<class 'gluon.sqlhtml.SQLFORM'>"
p3031
sS'create'
p3032
g3005
sS'editable'
p3033
g3005
sS'linked_tables'
p3034
g3005
sS'deletable'
p3035
g3005
sS'fields'
p3036
g3005
sS'global db'
p3037
S'<DAL uri="sqlite://storage.sqlite">'
p3038
sS'fi'
p3039
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p3040
sS'SQLFORM.smartgrid'
p3041
S'<function smartgrid>'
p3042
sS'create_dict'
p3043
S"{'project': False, 'sample': True}"
p3044
sS'edit_dict'
p3045
S"{'project': False}"
p3046
sS'delete_dict'
p3047
S"{'project': False}"
p3048
ssg2970
I317
sg2971
(dp3049
I320
S'#gets table name and rowid as input and creates another row with same details as rowid recod has'
p3050
sI321
S'def replicate():'
p3051
sI312
S'    l1=[lambda row: A(\'copy\'+row.id,_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))]'
p3052
sI313
S"    links={'sample':l1}"
p3053
sI314
S'#customized Views for certain forms using router'
p3054
sI315
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3055
sI316
S'     \trouter(request.args)'
p3056
sI317
S"    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=['experiment','sample','biosource','plant_growth_condition','treatments','harvests','extraction_preparation','gas_chromatography','liquid_chromatography','mass_spectroscopy','spectrophotometry','raw_data_storage_information'])"
p3057
sI318
S'    return locals()'
p3058
sI319
S''
ssg2983
S'()'
p3059
sg2985
S'list_all_dev_projects'
p3060
sa(dp3061
g2962
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3062
sg2964
(dp3063
S'user_signature'
p3064
g1484
sS'kwargs'
p3065
S"{'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]}"
p3066
ssg2970
I2489
sg2971
(dp3067
I2484
S'                        A(SPAN(t), _class=trap_class(), _href=url('
p3068
sI2485
S'                          args=[args0, row[id_field_name]])))'
p3069
sI2486
S''
sI2487
S'        grid = SQLFORM.grid(query, args=request.args[:nargs], links=links,'
p3070
sI2488
S'                            links_in_grid=links_in_grid,'
p3071
sI2489
S'                            user_signature=user_signature, **kwargs)'
p3072
sI2490
S'        if isinstance(grid, DIV):'
p3073
sI2491
S"            header = table._plural + (field and ' for ' + field.name or '')"
p3074
sI2492
S'            breadcrumbs.append(LI(A(T(header), _class=trap_class(),'
p3075
sI2493
S"                                    _href=url()), _class='active w2p_grid_breadcrumb_elem'))"
p3076
ssg2983
S"(table=<Table sample (id,experimentalist,name,code,desc...iment,working_status,replica,publication_status)>, constraints={'project': <Query (project.project_status = '0')>, 'sample': <Query (sample.experimentalist = 2)>}, linked_tables=['experiment', 'sample', 'biosource', 'plant_growth_condition', 'treatments', 'harvests', 'extraction_preparation', 'gas_chromatography', 'liquid_chromatography', 'mass_spectroscopy', 'spectrophotometry', 'raw_data_storage_information'], links=[<function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, args=[], user_signature=True, divider='>', breadcrumbs_class='', **kwargs={'create': True, 'fields': [<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]})"
p3077
sg2985
S'smartgrid'
p3078
sa(dp3079
g2962
S'/home/anil/bootstrap/web2py/gluon/sqlhtml.py'
p3080
sg2964
(dp3081
S'link'
p3082
S'<function <lambda>>'
p3083
sS'row'
p3084
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3085
ssg2970
I2258
sg2971
(dp3086
I2253
S'                    toadd = []'
p3087
sI2254
S'                    for link in links:'
p3088
sI2255
S'                        if isinstance(link, dict):'
p3089
sI2256
S"                            toadd.append(TD(link['body'](row)))"
p3090
sI2257
S'                        else:'
p3091
sI2258
S'                            if link(row):'
p3092
sI2259
S'                                row_buttons.append(link(row))'
p3093
sI2260
S"                    if links_placement in ['right', 'both']:"
p3094
sI2261
S'                        trcols.extend(toadd)'
p3095
sI2262
S"                    if links_placement in ['left', 'both']:"
p3096
ssg2983
S"(query=<Query ((sample.experiment = 1) AND (sample.experimentalist = 2))>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], field_id=<gluon.dal.Field object>, left=None, headers={}, orderby=None, groupby=None, searchable=True, sortable=True, paginate=20, deletable=True, editable=True, details=True, selectable=None, create=True, csv=True, links=[<function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>, <function <lambda>>], links_in_grid=True, upload=<function <lambda>>, args=['project', 'experiment.project', '1', 'sample.experiment', '1'], user_signature=True, maxtextlengths={}, maxtextlength=20, onvalidation=None, oncreate=None, onupdate=None, ondelete=None, sorter_icons=(<gluon.html.XML object>, <gluon.html.XML object>), ui={'button': 'button btn', 'buttonadd': 'icon plus icon-plus', 'buttonback': 'icon leftarrow icon-arrow-left', 'buttondelete': 'icon trash icon-trash', 'buttonedit': 'icon pen icon-pencil', 'buttonexport': 'icon downarrow icon-download', 'buttontable': 'icon rightarrow icon-arrow-right', 'buttontext': 'buttontext button', 'buttonview': 'icon magnifier icon-zoom-in', 'content': '', ...}, showbuttontext=True, _class='web2py_grid', formname='web2py_grid', search_widget=<function <lambda>>, ignore_rw=False, formstyle='table3cols', exportclasses=None, formargs={}, createargs={}, editargs={}, viewargs={}, buttons_placement='right', links_placement='right')"
p3097
sg2985
S'grid'
p3098
sa(dp3099
g2962
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py'
p3100
sg2964
(dp3101
S'request.args'
p3102
S"['project', 'experiment.project', '1', 'sample.experiment', '1']"
p3103
sS'args'
p3104
g3005
sS'_href'
p3105
g3005
sS'global request'
p3106
S"<Storage {'function': 'list_all_dev_projects', '...s/DEV_bootstrap_ch/', 'post_vars': <Storage {}>}>"
p3107
sS'l1'
p3108
g3005
sS'global URL'
p3109
S'<function URL>'
p3110
sS'row.id'
p3111
S'2'
sS'global A'
p3112
S"<class 'gluon.html.A'>"
p3113
sS'row'
p3114
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p3115
ssg2970
I312
sg2971
(dp3116
I307
S'           db.sample.replica.writable = False'
p3117
sI308
S''
sI309
S"    create_dict = {'project':False,'sample':addsample}"
p3118
sI310
S'#Links for replicating samples'
p3119
sI311
S'    args= request.args'
p3120
sI312
S'    l1=[lambda row: A(\'copy\'+row.id,_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))]'
p3121
sI313
S"    links={'sample':l1}"
p3122
sI314
S'#customized Views for certain forms using router'
p3123
sI315
S"    if 'view' in request.args or 'edit' in request.args or 'new' in request.args:"
p3124
sI316
S'     \trouter(request.args)'
p3125
ssg2983
S"(row=<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>)"
p3126
sg2985
g3018
sasS'pyver'
p3127
S'Python 2.7.3: /usr/bin/python'
p3128
sS'session'
p3129
g57
(g58
g59
NtRp3130
(dp3131
g62
(dp3132
sg64
(lp3133
g57
(g66
g59
NtRp3134
(dp3135
g62
(dp3136
g70
I5
ssg71
Nsg64
(lp3137
g57
(g73
g59
NtRp3138
(dp3139
g62
(dp3140
sg71
g3134
sg64
(lp3141
g57
(g78
g59
NtRp3142
(dp3143
g62
(dp3144
g82
g83
ssg71
g3138
sg64
(lp3145
S'auth'
p3146
asbag57
(g78
g59
NtRp3147
(dp3148
g62
(dp3149
g89
g90
ssg71
g3138
sg64
(lp3150
S':'
asbag57
(g78
g59
NtRp3151
(dp3152
g62
(dp3153
sg71
g3138
sg64
(lp3154
g57
(g58
g59
NtRp3155
(dp3156
g62
(dp3157
g70
I5
ssg71
g3151
sg64
(lp3158
g57
(g66
g59
NtRp3159
(dp3160
g62
(dp3161
g70
I4
ssg71
Nsg64
(lp3162
g57
(g73
g59
NtRp3163
(dp3164
g62
(dp3165
sg71
g3159
sg64
(lp3166
g57
(g78
g59
NtRp3167
(dp3168
g62
(dp3169
g82
g83
ssg71
g3163
sg64
(lp3170
S'expiration'
p3171
asbag57
(g78
g59
NtRp3172
(dp3173
g62
(dp3174
g89
g90
ssg71
g3163
sg64
(lp3175
S':'
asbag57
(g78
g59
NtRp3176
(dp3177
g62
(dp3178
sg71
g3163
sg64
(lp3179
g57
(g58
g59
NtRp3180
(dp3181
g62
(dp3182
g70
I4
ssg71
g3176
sg64
(lp3183
S'2592000'
p3184
asbasbasbag57
(g73
g59
NtRp3185
(dp3186
g62
(dp3187
sg71
g3159
sg64
(lp3188
g57
(g78
g59
NtRp3189
(dp3190
g62
(dp3191
g82
g83
ssg71
g3185
sg64
(lp3192
S'hmac_key'
p3193
asbag57
(g78
g59
NtRp3194
(dp3195
g62
(dp3196
g89
g90
ssg71
g3185
sg64
(lp3197
S':'
asbag57
(g78
g59
NtRp3198
(dp3199
g62
(dp3200
sg71
g3185
sg64
(lp3201
g57
(g58
g59
NtRp3202
(dp3203
g62
(dp3204
g70
I4
ssg71
g3198
sg64
(lp3205
S'11fc622b-02bf-4f2a-8e07-fc63863907e8'
p3206
asbasbasbag57
(g73
g59
NtRp3207
(dp3208
g62
(dp3209
sg71
g3159
sg64
(lp3210
g57
(g78
g59
NtRp3211
(dp3212
g62
(dp3213
g82
g83
ssg71
g3207
sg64
(lp3214
S'last_visit'
p3215
asbag57
(g78
g59
NtRp3216
(dp3217
g62
(dp3218
g89
g90
ssg71
g3207
sg64
(lp3219
S':'
asbag57
(g78
g59
NtRp3220
(dp3221
g62
(dp3222
sg71
g3207
sg64
(lp3223
g57
(g58
g59
NtRp3224
(dp3225
g62
(dp3226
g70
I4
ssg71
g3220
sg64
(lp3227
S'datetime.datetime(2013, 2, 18, 0, 21, 50, 823546)'
p3228
asbasbasbag57
(g73
g59
NtRp3229
(dp3230
g62
(dp3231
sg71
g3159
sg64
(lp3232
g57
(g78
g59
NtRp3233
(dp3234
g62
(dp3235
g82
g83
ssg71
g3229
sg64
(lp3236
S'remember'
p3237
asbag57
(g78
g59
NtRp3238
(dp3239
g62
(dp3240
g89
g90
ssg71
g3229
sg64
(lp3241
S':'
asbag57
(g78
g59
NtRp3242
(dp3243
g62
(dp3244
sg71
g3229
sg64
(lp3245
g57
(g58
g59
NtRp3246
(dp3247
g62
(dp3248
g70
I4
ssg71
g3242
sg64
(lp3249
g1484
asbasbasbag57
(g73
g59
NtRp3250
(dp3251
g62
(dp3252
sg71
g3159
sg64
(lp3253
g57
(g78
g59
NtRp3254
(dp3255
g62
(dp3256
g82
g83
ssg71
g3250
sg64
(lp3257
S'user'
p3258
asbag57
(g78
g59
NtRp3259
(dp3260
g62
(dp3261
g89
g90
ssg71
g3250
sg64
(lp3262
S':'
asbag57
(g78
g59
NtRp3263
(dp3264
g62
(dp3265
sg71
g3250
sg64
(lp3266
g57
(g58
g59
NtRp3267
(dp3268
g62
(dp3269
g70
I4
ssg71
g3263
sg64
(lp3270
g57
(g66
g59
NtRp3271
(dp3272
g62
(dp3273
g70
I3
ssg71
Nsg64
(lp3274
g57
(g73
g59
NtRp3275
(dp3276
g62
(dp3277
sg71
g3271
sg64
(lp3278
g57
(g78
g59
NtRp3279
(dp3280
g62
(dp3281
g82
g83
ssg71
g3275
sg64
(lp3282
S'address'
p3283
asbag57
(g78
g59
NtRp3284
(dp3285
g62
(dp3286
g89
g90
ssg71
g3275
sg64
(lp3287
S':'
asbag57
(g78
g59
NtRp3288
(dp3289
g62
(dp3290
sg71
g3275
sg64
(lp3291
g57
(g58
g59
NtRp3292
(dp3293
g62
(dp3294
g70
I3
ssg71
g3288
sg64
(lp3295
S'a'
asbasbasbag57
(g73
g59
NtRp3296
(dp3297
g62
(dp3298
sg71
g3271
sg64
(lp3299
g57
(g78
g59
NtRp3300
(dp3301
g62
(dp3302
g82
g83
ssg71
g3296
sg64
(lp3303
S'affiliated_to'
p3304
asbag57
(g78
g59
NtRp3305
(dp3306
g62
(dp3307
g89
g90
ssg71
g3296
sg64
(lp3308
S':'
asbag57
(g78
g59
NtRp3309
(dp3310
g62
(dp3311
sg71
g3296
sg64
(lp3312
g57
(g58
g59
NtRp3313
(dp3314
g62
(dp3315
g70
I3
ssg71
g3309
sg64
(lp3316
S'a'
asbasbasbag57
(g73
g59
NtRp3317
(dp3318
g62
(dp3319
sg71
g3271
sg64
(lp3320
g57
(g78
g59
NtRp3321
(dp3322
g62
(dp3323
g82
g83
ssg71
g3317
sg64
(lp3324
S'city'
p3325
asbag57
(g78
g59
NtRp3326
(dp3327
g62
(dp3328
g89
g90
ssg71
g3317
sg64
(lp3329
S':'
asbag57
(g78
g59
NtRp3330
(dp3331
g62
(dp3332
sg71
g3317
sg64
(lp3333
g57
(g58
g59
NtRp3334
(dp3335
g62
(dp3336
g70
I3
ssg71
g3330
sg64
(lp3337
S'a'
asbasbasbag57
(g73
g59
NtRp3338
(dp3339
g62
(dp3340
sg71
g3271
sg64
(lp3341
g57
(g78
g59
NtRp3342
(dp3343
g62
(dp3344
g82
g83
ssg71
g3338
sg64
(lp3345
S'country'
p3346
asbag57
(g78
g59
NtRp3347
(dp3348
g62
(dp3349
g89
g90
ssg71
g3338
sg64
(lp3350
S':'
asbag57
(g78
g59
NtRp3351
(dp3352
g62
(dp3353
sg71
g3338
sg64
(lp3354
g57
(g58
g59
NtRp3355
(dp3356
g62
(dp3357
g70
I3
ssg71
g3351
sg64
(lp3358
S'India'
p3359
asbasbasbag57
(g73
g59
NtRp3360
(dp3361
g62
(dp3362
sg71
g3271
sg64
(lp3363
g57
(g78
g59
NtRp3364
(dp3365
g62
(dp3366
g82
g83
ssg71
g3360
sg64
(lp3367
S'email'
p3368
asbag57
(g78
g59
NtRp3369
(dp3370
g62
(dp3371
g89
g90
ssg71
g3360
sg64
(lp3372
S':'
asbag57
(g78
g59
NtRp3373
(dp3374
g62
(dp3375
sg71
g3360
sg64
(lp3376
g57
(g58
g59
NtRp3377
(dp3378
g62
(dp3379
g70
I3
ssg71
g3373
sg64
(lp3380
S'anil.iiith@gmail.com'
p3381
asbasbasbag57
(g73
g59
NtRp3382
(dp3383
g62
(dp3384
sg71
g3271
sg64
(lp3385
g57
(g78
g59
NtRp3386
(dp3387
g62
(dp3388
g82
g83
ssg71
g3382
sg64
(lp3389
S'first_name'
p3390
asbag57
(g78
g59
NtRp3391
(dp3392
g62
(dp3393
g89
g90
ssg71
g3382
sg64
(lp3394
S':'
asbag57
(g78
g59
NtRp3395
(dp3396
g62
(dp3397
sg71
g3382
sg64
(lp3398
g57
(g58
g59
NtRp3399
(dp3400
g62
(dp3401
g70
I3
ssg71
g3395
sg64
(lp3402
S'anil'
p3403
asbasbasbag57
(g73
g59
NtRp3404
(dp3405
g62
(dp3406
sg71
g3271
sg64
(lp3407
g57
(g78
g59
NtRp3408
(dp3409
g62
(dp3410
g82
g83
ssg71
g3404
sg64
(lp3411
S'id'
p3412
asbag57
(g78
g59
NtRp3413
(dp3414
g62
(dp3415
g89
g90
ssg71
g3404
sg64
(lp3416
S':'
asbag57
(g78
g59
NtRp3417
(dp3418
g62
(dp3419
sg71
g3404
sg64
(lp3420
g57
(g58
g59
NtRp3421
(dp3422
g62
(dp3423
g70
I3
ssg71
g3417
sg64
(lp3424
S'2'
asbasbasbag57
(g73
g59
NtRp3425
(dp3426
g62
(dp3427
sg71
g3271
sg64
(lp3428
g57
(g78
g59
NtRp3429
(dp3430
g62
(dp3431
g82
g83
ssg71
g3425
sg64
(lp3432
S'last_name'
p3433
asbag57
(g78
g59
NtRp3434
(dp3435
g62
(dp3436
g89
g90
ssg71
g3425
sg64
(lp3437
S':'
asbag57
(g78
g59
NtRp3438
(dp3439
g62
(dp3440
sg71
g3425
sg64
(lp3441
g57
(g58
g59
NtRp3442
(dp3443
g62
(dp3444
g70
I3
ssg71
g3438
sg64
(lp3445
S'n'
asbasbasbag57
(g73
g59
NtRp3446
(dp3447
g62
(dp3448
sg71
g3271
sg64
(lp3449
g57
(g78
g59
NtRp3450
(dp3451
g62
(dp3452
g82
g83
ssg71
g3446
sg64
(lp3453
S'mobile'
p3454
asbag57
(g78
g59
NtRp3455
(dp3456
g62
(dp3457
g89
g90
ssg71
g3446
sg64
(lp3458
S':'
asbag57
(g78
g59
NtRp3459
(dp3460
g62
(dp3461
sg71
g3446
sg64
(lp3462
g57
(g58
g59
NtRp3463
(dp3464
g62
(dp3465
g70
I3
ssg71
g3459
sg64
(lp3466
S'1233'
p3467
asbasbasbag57
(g73
g59
NtRp3468
(dp3469
g62
(dp3470
sg71
g3271
sg64
(lp3471
g57
(g78
g59
NtRp3472
(dp3473
g62
(dp3474
g82
g83
ssg71
g3468
sg64
(lp3475
S'phone'
p3476
asbag57
(g78
g59
NtRp3477
(dp3478
g62
(dp3479
g89
g90
ssg71
g3468
sg64
(lp3480
S':'
asbag57
(g78
g59
NtRp3481
(dp3482
g62
(dp3483
sg71
g3468
sg64
(lp3484
g57
(g58
g59
NtRp3485
(dp3486
g62
(dp3487
g70
I3
ssg71
g3481
sg64
(lp3488
S'123'
p3489
asbasbasbag57
(g73
g59
NtRp3490
(dp3491
g62
(dp3492
sg71
g3271
sg64
(lp3493
g57
(g78
g59
NtRp3494
(dp3495
g62
(dp3496
g82
g83
ssg71
g3490
sg64
(lp3497
S'position'
p3498
asbag57
(g78
g59
NtRp3499
(dp3500
g62
(dp3501
g89
g90
ssg71
g3490
sg64
(lp3502
S':'
asbag57
(g78
g59
NtRp3503
(dp3504
g62
(dp3505
sg71
g3490
sg64
(lp3506
g57
(g58
g59
NtRp3507
(dp3508
g62
(dp3509
g70
I3
ssg71
g3503
sg64
(lp3510
S'0'
asbasbasbag57
(g73
g59
NtRp3511
(dp3512
g62
(dp3513
sg71
g3271
sg64
(lp3514
g57
(g78
g59
NtRp3515
(dp3516
g62
(dp3517
g82
g83
ssg71
g3511
sg64
(lp3518
S'postal_code'
p3519
asbag57
(g78
g59
NtRp3520
(dp3521
g62
(dp3522
g89
g90
ssg71
g3511
sg64
(lp3523
S':'
asbag57
(g78
g59
NtRp3524
(dp3525
g62
(dp3526
sg71
g3511
sg64
(lp3527
g57
(g58
g59
NtRp3528
(dp3529
g62
(dp3530
g70
I3
ssg71
g3524
sg64
(lp3531
S'123'
p3532
asbasbasbag57
(g73
g59
NtRp3533
(dp3534
g62
(dp3535
sg71
g3271
sg64
(lp3536
g57
(g78
g59
NtRp3537
(dp3538
g62
(dp3539
g82
g83
ssg71
g3533
sg64
(lp3540
S'registration_at'
p3541
asbag57
(g78
g59
NtRp3542
(dp3543
g62
(dp3544
g89
g90
ssg71
g3533
sg64
(lp3545
S':'
asbag57
(g78
g59
NtRp3546
(dp3547
g62
(dp3548
sg71
g3533
sg64
(lp3549
g57
(g58
g59
NtRp3550
(dp3551
g62
(dp3552
g70
I3
ssg71
g3546
sg64
(lp3553
S'0'
asbasbasbag57
(g73
g59
NtRp3554
(dp3555
g62
(dp3556
sg71
g3271
sg64
(lp3557
g57
(g78
g59
NtRp3558
(dp3559
g62
(dp3560
g82
g83
ssg71
g3554
sg64
(lp3561
S'registration_id'
p3562
asbag57
(g78
g59
NtRp3563
(dp3564
g62
(dp3565
g89
g90
ssg71
g3554
sg64
(lp3566
S':'
asbag57
(g78
g59
NtRp3567
(dp3568
g62
(dp3569
sg71
g3554
sg64
(lp3570
g57
(g58
g59
NtRp3571
(dp3572
g62
(dp3573
g70
I3
ssg71
g3567
sg64
(lp3574
S''
asbasbasbag57
(g73
g59
NtRp3575
(dp3576
g62
(dp3577
sg71
g3271
sg64
(lp3578
g57
(g78
g59
NtRp3579
(dp3580
g62
(dp3581
g82
g83
ssg71
g3575
sg64
(lp3582
S'registration_key'
p3583
asbag57
(g78
g59
NtRp3584
(dp3585
g62
(dp3586
g89
g90
ssg71
g3575
sg64
(lp3587
S':'
asbag57
(g78
g59
NtRp3588
(dp3589
g62
(dp3590
sg71
g3575
sg64
(lp3591
g57
(g58
g59
NtRp3592
(dp3593
g62
(dp3594
g70
I3
ssg71
g3588
sg64
(lp3595
S''
asbasbasbag57
(g73
g59
NtRp3596
(dp3597
g62
(dp3598
sg71
g3271
sg64
(lp3599
g57
(g78
g59
NtRp3600
(dp3601
g62
(dp3602
g82
g83
ssg71
g3596
sg64
(lp3603
S'reset_password_key'
p3604
asbag57
(g78
g59
NtRp3605
(dp3606
g62
(dp3607
g89
g90
ssg71
g3596
sg64
(lp3608
S':'
asbag57
(g78
g59
NtRp3609
(dp3610
g62
(dp3611
sg71
g3596
sg64
(lp3612
g57
(g58
g59
NtRp3613
(dp3614
g62
(dp3615
g70
I3
ssg71
g3609
sg64
(lp3616
S''
asbasbasbag57
(g73
g59
NtRp3617
(dp3618
g62
(dp3619
sg71
g3271
sg64
(lp3620
g57
(g78
g59
NtRp3621
(dp3622
g62
(dp3623
g82
g83
ssg71
g3617
sg64
(lp3624
S'title'
p3625
asbag57
(g78
g59
NtRp3626
(dp3627
g62
(dp3628
g89
g90
ssg71
g3617
sg64
(lp3629
S':'
asbag57
(g78
g59
NtRp3630
(dp3631
g62
(dp3632
sg71
g3617
sg64
(lp3633
g57
(g58
g59
NtRp3634
(dp3635
g62
(dp3636
g70
I3
ssg71
g3630
sg64
(lp3637
S'0'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp3638
(dp3639
g62
(dp3640
sg71
g3159
sg64
(lp3641
g57
(g78
g59
NtRp3642
(dp3643
g62
(dp3644
g82
g83
ssg71
g3638
sg64
(lp3645
S'user_groups'
p3646
asbag57
(g78
g59
NtRp3647
(dp3648
g62
(dp3649
g89
g90
ssg71
g3638
sg64
(lp3650
S':'
asbag57
(g78
g59
NtRp3651
(dp3652
g62
(dp3653
sg71
g3638
sg64
(lp3654
g57
(g58
g59
NtRp3655
(dp3656
g62
(dp3657
g70
I4
ssg71
g3651
sg64
(lp3658
g57
(g66
g59
NtRp3659
(dp3660
g62
(dp3661
g70
I3
ssg71
Nsg64
(lp3662
g57
(g73
g59
NtRp3663
(dp3664
g62
(dp3665
sg71
g3659
sg64
(lp3666
g57
(g78
g59
NtRp3667
(dp3668
g62
(dp3669
g82
g83
ssg71
g3663
sg64
(lp3670
S'9'
asbag57
(g78
g59
NtRp3671
(dp3672
g62
(dp3673
g89
g90
ssg71
g3663
sg64
(lp3674
S':'
asbag57
(g78
g59
NtRp3675
(dp3676
g62
(dp3677
sg71
g3663
sg64
(lp3678
g57
(g58
g59
NtRp3679
(dp3680
g62
(dp3681
g70
I3
ssg71
g3675
sg64
(lp3682
S'user_2'
p3683
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3684
(dp3685
g62
(dp3686
sg71
g3134
sg64
(lp3687
g57
(g78
g59
NtRp3688
(dp3689
g62
(dp3690
g82
g83
ssg71
g3684
sg64
(lp3691
S'flash'
p3692
asbag57
(g78
g59
NtRp3693
(dp3694
g62
(dp3695
g89
g90
ssg71
g3684
sg64
(lp3696
S':'
asbag57
(g78
g59
NtRp3697
(dp3698
g62
(dp3699
sg71
g3684
sg64
(lp3700
g57
(g58
g59
NtRp3701
(dp3702
g62
(dp3703
g70
I5
ssg71
g3697
sg64
(lp3704
S'None'
p3705
asbasbasbag57
(g73
g59
NtRp3706
(dp3707
g62
(dp3708
sg71
g3134
sg64
(lp3709
g57
(g78
g59
NtRp3710
(dp3711
g62
(dp3712
g82
g83
ssg71
g3706
sg64
(lp3713
S'last_orderby'
p3714
asbag57
(g78
g59
NtRp3715
(dp3716
g62
(dp3717
g89
g90
ssg71
g3706
sg64
(lp3718
S':'
asbag57
(g78
g59
NtRp3719
(dp3720
g62
(dp3721
sg71
g3706
sg64
(lp3722
g57
(g58
g59
NtRp3723
(dp3724
g62
(dp3725
g70
I5
ssg71
g3719
sg64
(lp3726
S'None'
p3727
asbasbasbag57
(g73
g59
NtRp3728
(dp3729
g62
(dp3730
sg71
g3134
sg64
(lp3731
g57
(g78
g59
NtRp3732
(dp3733
g62
(dp3734
g82
g83
ssg71
g3728
sg64
(lp3735
S'last_query'
p3736
asbag57
(g78
g59
NtRp3737
(dp3738
g62
(dp3739
g89
g90
ssg71
g3728
sg64
(lp3740
S':'
asbag57
(g78
g59
NtRp3741
(dp3742
g62
(dp3743
sg71
g3728
sg64
(lp3744
g57
(g58
g59
NtRp3745
(dp3746
g62
(dp3747
g70
I5
ssg71
g3741
sg64
(lp3748
S'db.project.id>0'
p3749
asbasbasbasbasbsS'etype'
p3750
S"<type 'exceptions.TypeError'>"
p3751
sS'date'
p3752
S'Tue Feb 19 18:59:33 2013'
p3753
sS'response'
p3754
g57
(g58
g59
NtRp3755
(dp3756
g62
(dp3757
sg64
(lp3758
g57
(g66
g59
NtRp3759
(dp3760
g62
(dp3761
g70
I5
ssg71
Nsg64
(lp3762
g57
(g73
g59
NtRp3763
(dp3764
g62
(dp3765
sg71
g3759
sg64
(lp3766
g57
(g78
g59
NtRp3767
(dp3768
g62
(dp3769
g82
g83
ssg71
g3763
sg64
(lp3770
g218
asbag57
(g78
g59
NtRp3771
(dp3772
g62
(dp3773
g89
g90
ssg71
g3763
sg64
(lp3774
S':'
asbag57
(g78
g59
NtRp3775
(dp3776
g62
(dp3777
sg71
g3763
sg64
(lp3778
g57
(g58
g59
NtRp3779
(dp3780
g62
(dp3781
g70
I5
ssg71
g3775
sg64
(lp3782
S'<cStringIO.StringO object at 0xad57e480>'
p3783
asbasbasbag57
(g73
g59
NtRp3784
(dp3785
g62
(dp3786
sg71
g3759
sg64
(lp3787
g57
(g78
g59
NtRp3788
(dp3789
g62
(dp3790
g82
g83
ssg71
g3784
sg64
(lp3791
g306
asbag57
(g78
g59
NtRp3792
(dp3793
g62
(dp3794
g89
g90
ssg71
g3784
sg64
(lp3795
S':'
asbag57
(g78
g59
NtRp3796
(dp3797
g62
(dp3798
sg71
g3784
sg64
(lp3799
g57
(g58
g59
NtRp3800
(dp3801
g62
(dp3802
g70
I5
ssg71
g3796
sg64
(lp3803
g57
(g66
g59
NtRp3804
(dp3805
g62
(dp3806
g70
I4
ssg71
Nsg64
(lp3807
g57
(g73
g59
NtRp3808
(dp3809
g62
(dp3810
sg71
g3804
sg64
(lp3811
g57
(g78
g59
NtRp3812
(dp3813
g62
(dp3814
g82
g83
ssg71
g3808
sg64
(lp3815
S'session_id_dev_bootstrap_ch'
p3816
asbag57
(g78
g59
NtRp3817
(dp3818
g62
(dp3819
g89
g90
ssg71
g3808
sg64
(lp3820
S':'
asbag57
(g78
g59
NtRp3821
(dp3822
g62
(dp3823
sg71
g3808
sg64
(lp3824
g57
(g58
g59
NtRp3825
(dp3826
g62
(dp3827
g70
I4
ssg71
g3821
sg64
(lp3828
g344
ag57
(g66
g59
NtRp3829
(dp3830
g62
(dp3831
g70
I3
ssg71
Nsg64
(lp3832
g57
(g73
g59
NtRp3833
(dp3834
g62
(dp3835
sg71
g3829
sg64
(lp3836
g57
(g78
g59
NtRp3837
(dp3838
g62
(dp3839
g82
g83
ssg71
g3833
sg64
(lp3840
g357
asbag57
(g78
g59
NtRp3841
(dp3842
g62
(dp3843
g89
g90
ssg71
g3833
sg64
(lp3844
S':'
asbag57
(g78
g59
NtRp3845
(dp3846
g62
(dp3847
sg71
g3833
sg64
(lp3848
g57
(g58
g59
NtRp3849
(dp3850
g62
(dp3851
g70
I3
ssg71
g3845
sg64
(lp3852
S''
asbasbasbag57
(g73
g59
NtRp3853
(dp3854
g62
(dp3855
sg71
g3829
sg64
(lp3856
g57
(g78
g59
NtRp3857
(dp3858
g62
(dp3859
g82
g83
ssg71
g3853
sg64
(lp3860
g378
asbag57
(g78
g59
NtRp3861
(dp3862
g62
(dp3863
g89
g90
ssg71
g3853
sg64
(lp3864
S':'
asbag57
(g78
g59
NtRp3865
(dp3866
g62
(dp3867
sg71
g3853
sg64
(lp3868
g57
(g58
g59
NtRp3869
(dp3870
g62
(dp3871
g70
I3
ssg71
g3865
sg64
(lp3872
S''
asbasbasbag57
(g73
g59
NtRp3873
(dp3874
g62
(dp3875
sg71
g3829
sg64
(lp3876
g57
(g78
g59
NtRp3877
(dp3878
g62
(dp3879
g82
g83
ssg71
g3873
sg64
(lp3880
g399
asbag57
(g78
g59
NtRp3881
(dp3882
g62
(dp3883
g89
g90
ssg71
g3873
sg64
(lp3884
S':'
asbag57
(g78
g59
NtRp3885
(dp3886
g62
(dp3887
sg71
g3873
sg64
(lp3888
g57
(g58
g59
NtRp3889
(dp3890
g62
(dp3891
g70
I3
ssg71
g3885
sg64
(lp3892
S'2592000'
p3893
asbasbasbag57
(g73
g59
NtRp3894
(dp3895
g62
(dp3896
sg71
g3829
sg64
(lp3897
g57
(g78
g59
NtRp3898
(dp3899
g62
(dp3900
g82
g83
ssg71
g3894
sg64
(lp3901
g420
asbag57
(g78
g59
NtRp3902
(dp3903
g62
(dp3904
g89
g90
ssg71
g3894
sg64
(lp3905
S':'
asbag57
(g78
g59
NtRp3906
(dp3907
g62
(dp3908
sg71
g3894
sg64
(lp3909
g57
(g58
g59
NtRp3910
(dp3911
g62
(dp3912
g70
I3
ssg71
g3906
sg64
(lp3913
S''
asbasbasbag57
(g73
g59
NtRp3914
(dp3915
g62
(dp3916
sg71
g3829
sg64
(lp3917
g57
(g78
g59
NtRp3918
(dp3919
g62
(dp3920
g82
g83
ssg71
g3914
sg64
(lp3921
g441
asbag57
(g78
g59
NtRp3922
(dp3923
g62
(dp3924
g89
g90
ssg71
g3914
sg64
(lp3925
S':'
asbag57
(g78
g59
NtRp3926
(dp3927
g62
(dp3928
sg71
g3914
sg64
(lp3929
g57
(g58
g59
NtRp3930
(dp3931
g62
(dp3932
g70
I3
ssg71
g3926
sg64
(lp3933
S''
asbasbasbag57
(g73
g59
NtRp3934
(dp3935
g62
(dp3936
sg71
g3829
sg64
(lp3937
g57
(g78
g59
NtRp3938
(dp3939
g62
(dp3940
g82
g83
ssg71
g3934
sg64
(lp3941
g462
asbag57
(g78
g59
NtRp3942
(dp3943
g62
(dp3944
g89
g90
ssg71
g3934
sg64
(lp3945
S':'
asbag57
(g78
g59
NtRp3946
(dp3947
g62
(dp3948
sg71
g3934
sg64
(lp3949
g57
(g58
g59
NtRp3950
(dp3951
g62
(dp3952
g70
I3
ssg71
g3946
sg64
(lp3953
S'/'
asbasbasbag57
(g73
g59
NtRp3954
(dp3955
g62
(dp3956
sg71
g3829
sg64
(lp3957
g57
(g78
g59
NtRp3958
(dp3959
g62
(dp3960
g82
g83
ssg71
g3954
sg64
(lp3961
g483
asbag57
(g78
g59
NtRp3962
(dp3963
g62
(dp3964
g89
g90
ssg71
g3954
sg64
(lp3965
S':'
asbag57
(g78
g59
NtRp3966
(dp3967
g62
(dp3968
sg71
g3954
sg64
(lp3969
g57
(g58
g59
NtRp3970
(dp3971
g62
(dp3972
g70
I3
ssg71
g3966
sg64
(lp3973
S''
asbasbasbag57
(g73
g59
NtRp3974
(dp3975
g62
(dp3976
sg71
g3829
sg64
(lp3977
g57
(g78
g59
NtRp3978
(dp3979
g62
(dp3980
g82
g83
ssg71
g3974
sg64
(lp3981
g504
asbag57
(g78
g59
NtRp3982
(dp3983
g62
(dp3984
g89
g90
ssg71
g3974
sg64
(lp3985
S':'
asbag57
(g78
g59
NtRp3986
(dp3987
g62
(dp3988
sg71
g3974
sg64
(lp3989
g57
(g58
g59
NtRp3990
(dp3991
g62
(dp3992
g70
I3
ssg71
g3986
sg64
(lp3993
S''
asbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp3994
(dp3995
g62
(dp3996
sg71
g3759
sg64
(lp3997
g57
(g78
g59
NtRp3998
(dp3999
g62
(dp4000
g82
g83
ssg71
g3994
sg64
(lp4001
S'delimiters'
p4002
asbag57
(g78
g59
NtRp4003
(dp4004
g62
(dp4005
g89
g90
ssg71
g3994
sg64
(lp4006
S':'
asbag57
(g78
g59
NtRp4007
(dp4008
g62
(dp4009
sg71
g3994
sg64
(lp4010
g57
(g58
g59
NtRp4011
(dp4012
g62
(dp4013
g70
I5
ssg71
g4007
sg64
(lp4014
g57
(g66
g59
NtRp4015
(dp4016
g62
(dp4017
g70
I4
ssg71
Nsg64
(lp4018
g57
(g73
g59
NtRp4019
(dp4020
g62
(dp4021
sg71
g4015
sg64
(lp4022
g57
(g78
g59
NtRp4023
(dp4024
g62
(dp4025
sg71
g4019
sg64
(lp4026
g57
(g58
g59
NtRp4027
(dp4028
g62
(dp4029
g70
I4
ssg71
g4023
sg64
(lp4030
S'{{'
p4031
asbasbasbag57
(g73
g59
NtRp4032
(dp4033
g62
(dp4034
sg71
g4015
sg64
(lp4035
g57
(g78
g59
NtRp4036
(dp4037
g62
(dp4038
sg71
g4032
sg64
(lp4039
g57
(g58
g59
NtRp4040
(dp4041
g62
(dp4042
g70
I4
ssg71
g4036
sg64
(lp4043
S'}}'
p4044
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4045
(dp4046
g62
(dp4047
sg71
g3759
sg64
(lp4048
g57
(g78
g59
NtRp4049
(dp4050
g62
(dp4051
g82
g83
ssg71
g4045
sg64
(lp4052
S'files'
p4053
asbag57
(g78
g59
NtRp4054
(dp4055
g62
(dp4056
g89
g90
ssg71
g4045
sg64
(lp4057
S':'
asbag57
(g78
g59
NtRp4058
(dp4059
g62
(dp4060
sg71
g4045
sg64
(lp4061
g57
(g58
g59
NtRp4062
(dp4063
g62
(dp4064
g70
I5
ssg71
g4058
sg64
(lp4065
g57
(g66
g59
NtRp4066
(dp4067
g62
(dp4068
g70
I4
ssg71
Nsg64
(lp4069
g57
(g73
g59
NtRp4070
(dp4071
g62
(dp4072
sg71
g4066
sg64
(lp4073
g57
(g78
g59
NtRp4074
(dp4075
g62
(dp4076
sg71
g4070
sg64
(lp4077
g57
(g58
g59
NtRp4078
(dp4079
g62
(dp4080
g70
I4
ssg71
g4074
sg64
(lp4081
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/css/redmond/jquery-ui-1.8.5.custom.css'
p4082
asbasbasbag57
(g73
g59
NtRp4083
(dp4084
g62
(dp4085
sg71
g4066
sg64
(lp4086
g57
(g78
g59
NtRp4087
(dp4088
g62
(dp4089
sg71
g4083
sg64
(lp4090
g57
(g58
g59
NtRp4091
(dp4092
g62
(dp4093
g70
I4
ssg71
g4087
sg64
(lp4094
S'/DEV_bootstrap_ch/static/plugin_wiki/ui/js/jquery-ui-1.8.5.custom.min.js'
p4095
asbasbasbag57
(g73
g59
NtRp4096
(dp4097
g62
(dp4098
sg71
g4066
sg64
(lp4099
g57
(g78
g59
NtRp4100
(dp4101
g62
(dp4102
sg71
g4096
sg64
(lp4103
g57
(g58
g59
NtRp4104
(dp4105
g62
(dp4106
g70
I4
ssg71
g4100
sg64
(lp4107
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/ui.jqgrid.css'
p4108
asbasbasbag57
(g73
g59
NtRp4109
(dp4110
g62
(dp4111
sg71
g4066
sg64
(lp4112
g57
(g78
g59
NtRp4113
(dp4114
g62
(dp4115
sg71
g4109
sg64
(lp4116
g57
(g58
g59
NtRp4117
(dp4118
g62
(dp4119
g70
I4
ssg71
g4113
sg64
(lp4120
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/i18n/grid.locale-en.js'
p4121
asbasbasbag57
(g73
g59
NtRp4122
(dp4123
g62
(dp4124
sg71
g4066
sg64
(lp4125
g57
(g78
g59
NtRp4126
(dp4127
g62
(dp4128
sg71
g4122
sg64
(lp4129
g57
(g58
g59
NtRp4130
(dp4131
g62
(dp4132
g70
I4
ssg71
g4126
sg64
(lp4133
S'/DEV_bootstrap_ch/static/plugin_wiki/jqgrid/jquery.jqGrid.min.js'
p4134
asbasbasbag57
(g73
g59
NtRp4135
(dp4136
g62
(dp4137
sg71
g4066
sg64
(lp4138
g57
(g78
g59
NtRp4139
(dp4140
g62
(dp4141
sg71
g4135
sg64
(lp4142
g57
(g58
g59
NtRp4143
(dp4144
g62
(dp4145
g70
I4
ssg71
g4139
sg64
(lp4146
S'/DEV_bootstrap_ch/static/plugin_wiki/slideshow/jquery.cycle.min.js'
p4147
asbasbasbag57
(g73
g59
NtRp4148
(dp4149
g62
(dp4150
sg71
g4066
sg64
(lp4151
g57
(g78
g59
NtRp4152
(dp4153
g62
(dp4154
sg71
g4148
sg64
(lp4155
g57
(g58
g59
NtRp4156
(dp4157
g62
(dp4158
g70
I4
ssg71
g4152
sg64
(lp4159
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.css'
p4160
asbasbasbag57
(g73
g59
NtRp4161
(dp4162
g62
(dp4163
sg71
g4066
sg64
(lp4164
g57
(g78
g59
NtRp4165
(dp4166
g62
(dp4167
sg71
g4161
sg64
(lp4168
g57
(g58
g59
NtRp4169
(dp4170
g62
(dp4171
g70
I4
ssg71
g4165
sg64
(lp4172
S'/DEV_bootstrap_ch/static/plugin_wiki/multiselect/jquery.multiselect.js'
p4173
asbasbasbag57
(g73
g59
NtRp4174
(dp4175
g62
(dp4176
sg71
g4066
sg64
(lp4177
g57
(g78
g59
NtRp4178
(dp4179
g62
(dp4180
sg71
g4174
sg64
(lp4181
g57
(g58
g59
NtRp4182
(dp4183
g62
(dp4184
g70
I4
ssg71
g4178
sg64
(lp4185
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.css'
p4186
asbasbasbag57
(g73
g59
NtRp4187
(dp4188
g62
(dp4189
sg71
g4066
sg64
(lp4190
g57
(g78
g59
NtRp4191
(dp4192
g62
(dp4193
sg71
g4187
sg64
(lp4194
g57
(g58
g59
NtRp4195
(dp4196
g62
(dp4197
g70
I4
ssg71
g4191
sg64
(lp4198
S'/DEV_bootstrap_ch/static/plugin_wiki/rating/jquery.rating.js'
p4199
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4200
(dp4201
g62
(dp4202
sg71
g3759
sg64
(lp4203
g57
(g78
g59
NtRp4204
(dp4205
g62
(dp4206
g82
g83
ssg71
g4200
sg64
(lp4207
S'flash'
p4208
asbag57
(g78
g59
NtRp4209
(dp4210
g62
(dp4211
g89
g90
ssg71
g4200
sg64
(lp4212
S':'
asbag57
(g78
g59
NtRp4213
(dp4214
g62
(dp4215
sg71
g4200
sg64
(lp4216
g57
(g58
g59
NtRp4217
(dp4218
g62
(dp4219
g70
I5
ssg71
g4213
sg64
(lp4220
S''
asbasbasbag57
(g73
g59
NtRp4221
(dp4222
g62
(dp4223
sg71
g3759
sg64
(lp4224
g57
(g78
g59
NtRp4225
(dp4226
g62
(dp4227
g82
g83
ssg71
g4221
sg64
(lp4228
S'generic_patterns'
p4229
asbag57
(g78
g59
NtRp4230
(dp4231
g62
(dp4232
g89
g90
ssg71
g4221
sg64
(lp4233
S':'
asbag57
(g78
g59
NtRp4234
(dp4235
g62
(dp4236
sg71
g4221
sg64
(lp4237
g57
(g58
g59
NtRp4238
(dp4239
g62
(dp4240
g70
I5
ssg71
g4234
sg64
(lp4241
g57
(g66
g59
NtRp4242
(dp4243
g62
(dp4244
g70
I4
ssg71
Nsg64
(lp4245
g57
(g73
g59
NtRp4246
(dp4247
g62
(dp4248
sg71
g4242
sg64
(lp4249
g57
(g78
g59
NtRp4250
(dp4251
g62
(dp4252
sg71
g4246
sg64
(lp4253
g57
(g58
g59
NtRp4254
(dp4255
g62
(dp4256
g70
I4
ssg71
g4250
sg64
(lp4257
S'*'
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4258
(dp4259
g62
(dp4260
sg71
g3759
sg64
(lp4261
g57
(g78
g59
NtRp4262
(dp4263
g62
(dp4264
g82
g83
ssg71
g4258
sg64
(lp4265
S'google_analytics_id'
p4266
asbag57
(g78
g59
NtRp4267
(dp4268
g62
(dp4269
g89
g90
ssg71
g4258
sg64
(lp4270
S':'
asbag57
(g78
g59
NtRp4271
(dp4272
g62
(dp4273
sg71
g4258
sg64
(lp4274
g57
(g58
g59
NtRp4275
(dp4276
g62
(dp4277
g70
I5
ssg71
g4271
sg64
(lp4278
S'None'
p4279
asbasbasbag57
(g73
g59
NtRp4280
(dp4281
g62
(dp4282
sg71
g3759
sg64
(lp4283
g57
(g78
g59
NtRp4284
(dp4285
g62
(dp4286
g82
g83
ssg71
g4280
sg64
(lp4287
S'headers'
p4288
asbag57
(g78
g59
NtRp4289
(dp4290
g62
(dp4291
g89
g90
ssg71
g4280
sg64
(lp4292
S':'
asbag57
(g78
g59
NtRp4293
(dp4294
g62
(dp4295
sg71
g4280
sg64
(lp4296
g57
(g58
g59
NtRp4297
(dp4298
g62
(dp4299
g70
I5
ssg71
g4293
sg64
(lp4300
g57
(g66
g59
NtRp4301
(dp4302
g62
(dp4303
g70
I4
ssg71
Nsg64
(lp4304
g57
(g73
g59
NtRp4305
(dp4306
g62
(dp4307
sg71
g4301
sg64
(lp4308
g57
(g78
g59
NtRp4309
(dp4310
g62
(dp4311
g82
g83
ssg71
g4305
sg64
(lp4312
S'X-Powered-By'
p4313
asbag57
(g78
g59
NtRp4314
(dp4315
g62
(dp4316
g89
g90
ssg71
g4305
sg64
(lp4317
S':'
asbag57
(g78
g59
NtRp4318
(dp4319
g62
(dp4320
sg71
g4305
sg64
(lp4321
g57
(g58
g59
NtRp4322
(dp4323
g62
(dp4324
g70
I4
ssg71
g4318
sg64
(lp4325
S'web2py'
p4326
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4327
(dp4328
g62
(dp4329
sg71
g3759
sg64
(lp4330
g57
(g78
g59
NtRp4331
(dp4332
g62
(dp4333
g82
g83
ssg71
g4327
sg64
(lp4334
S'menu'
p4335
asbag57
(g78
g59
NtRp4336
(dp4337
g62
(dp4338
g89
g90
ssg71
g4327
sg64
(lp4339
S':'
asbag57
(g78
g59
NtRp4340
(dp4341
g62
(dp4342
sg71
g4327
sg64
(lp4343
g57
(g58
g59
NtRp4344
(dp4345
g62
(dp4346
g70
I5
ssg71
g4340
sg64
(lp4347
g57
(g66
g59
NtRp4348
(dp4349
g62
(dp4350
g70
I4
ssg71
Nsg64
(lp4351
g57
(g73
g59
NtRp4352
(dp4353
g62
(dp4354
sg71
g4348
sg64
(lp4355
g57
(g78
g59
NtRp4356
(dp4357
g62
(dp4358
sg71
g4352
sg64
(lp4359
g57
(g58
g59
NtRp4360
(dp4361
g62
(dp4362
g70
I4
ssg71
g4356
sg64
(lp4363
g57
(g66
g59
NtRp4364
(dp4365
g62
(dp4366
g70
I3
ssg71
Nsg64
(lp4367
g57
(g73
g59
NtRp4368
(dp4369
g62
(dp4370
sg71
g4364
sg64
(lp4371
g57
(g78
g59
NtRp4372
(dp4373
g62
(dp4374
sg71
g4368
sg64
(lp4375
g57
(g58
g59
NtRp4376
(dp4377
g62
(dp4378
g70
I3
ssg71
g4372
sg64
(lp4379
cgluon.languages
lazyT_unpickle
p4380
(S't\x04\x00\x00\x00Home'
tRp4381
asbasbasbag57
(g73
g59
NtRp4382
(dp4383
g62
(dp4384
sg71
g4364
sg64
(lp4385
g57
(g78
g59
NtRp4386
(dp4387
g62
(dp4388
sg71
g4382
sg64
(lp4389
g57
(g58
g59
NtRp4390
(dp4391
g62
(dp4392
g70
I3
ssg71
g4386
sg64
(lp4393
g100
asbasbasbag57
(g73
g59
NtRp4394
(dp4395
g62
(dp4396
sg71
g4364
sg64
(lp4397
g57
(g78
g59
NtRp4398
(dp4399
g62
(dp4400
sg71
g4394
sg64
(lp4401
g57
(g58
g59
NtRp4402
(dp4403
g62
(dp4404
g70
I3
ssg71
g4398
sg64
(lp4405
S'/DEV_bootstrap_ch/default/list_all_projects'
p4406
asbasbasbag57
(g73
g59
NtRp4407
(dp4408
g62
(dp4409
sg71
g4364
sg64
(lp4410
g57
(g78
g59
NtRp4411
(dp4412
g62
(dp4413
sg71
g4407
sg64
(lp4414
g57
(g58
g59
NtRp4415
(dp4416
g62
(dp4417
g70
I3
ssg71
g4411
sg64
(lp4418
g57
(g66
g59
NtRp4419
(dp4420
g62
(dp4421
g70
I2
ssg71
Nsg64
(lp4422
sbasbasbasbasbasbasbasbasbasbasbasbag57
(g73
g59
NtRp4423
(dp4424
g62
(dp4425
sg71
g3759
sg64
(lp4426
g57
(g78
g59
NtRp4427
(dp4428
g62
(dp4429
g82
g83
ssg71
g4423
sg64
(lp4430
S'meta'
p4431
asbag57
(g78
g59
NtRp4432
(dp4433
g62
(dp4434
g89
g90
ssg71
g4423
sg64
(lp4435
S':'
asbag57
(g78
g59
NtRp4436
(dp4437
g62
(dp4438
sg71
g4423
sg64
(lp4439
g57
(g58
g59
NtRp4440
(dp4441
g62
(dp4442
g70
I5
ssg71
g4436
sg64
(lp4443
g57
(g66
g59
NtRp4444
(dp4445
g62
(dp4446
g70
I4
ssg71
Nsg64
(lp4447
g57
(g73
g59
NtRp4448
(dp4449
g62
(dp4450
sg71
g4444
sg64
(lp4451
g57
(g78
g59
NtRp4452
(dp4453
g62
(dp4454
g82
g83
ssg71
g4448
sg64
(lp4455
S'author'
p4456
asbag57
(g78
g59
NtRp4457
(dp4458
g62
(dp4459
g89
g90
ssg71
g4448
sg64
(lp4460
S':'
asbag57
(g78
g59
NtRp4461
(dp4462
g62
(dp4463
sg71
g4448
sg64
(lp4464
g57
(g58
g59
NtRp4465
(dp4466
g62
(dp4467
g70
I4
ssg71
g4461
sg64
(lp4468
S'Vikram Pudi <vikram@iiit.ac.in>'
p4469
asbasbasbag57
(g73
g59
NtRp4470
(dp4471
g62
(dp4472
sg71
g4444
sg64
(lp4473
g57
(g78
g59
NtRp4474
(dp4475
g62
(dp4476
g82
g83
ssg71
g4470
sg64
(lp4477
S'copyright'
p4478
asbag57
(g78
g59
NtRp4479
(dp4480
g62
(dp4481
g89
g90
ssg71
g4470
sg64
(lp4482
S':'
asbag57
(g78
g59
NtRp4483
(dp4484
g62
(dp4485
sg71
g4470
sg64
(lp4486
g57
(g58
g59
NtRp4487
(dp4488
g62
(dp4489
g70
I4
ssg71
g4483
sg64
(lp4490
S'Copyright 2011'
p4491
asbasbasbag57
(g73
g59
NtRp4492
(dp4493
g62
(dp4494
sg71
g4444
sg64
(lp4495
g57
(g78
g59
NtRp4496
(dp4497
g62
(dp4498
g82
g83
ssg71
g4492
sg64
(lp4499
S'description'
p4500
asbag57
(g78
g59
NtRp4501
(dp4502
g62
(dp4503
g89
g90
ssg71
g4492
sg64
(lp4504
S':'
asbag57
(g78
g59
NtRp4505
(dp4506
g62
(dp4507
sg71
g4492
sg64
(lp4508
g57
(g58
g59
NtRp4509
(dp4510
g62
(dp4511
g70
I4
ssg71
g4505
sg64
(lp4512
S'Computational Core for Plant Metabolomics -- A project sanctioned by DBT, Govt. of India'
p4513
asbasbasbag57
(g73
g59
NtRp4514
(dp4515
g62
(dp4516
sg71
g4444
sg64
(lp4517
g57
(g78
g59
NtRp4518
(dp4519
g62
(dp4520
g82
g83
ssg71
g4514
sg64
(lp4521
S'generator'
p4522
asbag57
(g78
g59
NtRp4523
(dp4524
g62
(dp4525
g89
g90
ssg71
g4514
sg64
(lp4526
S':'
asbag57
(g78
g59
NtRp4527
(dp4528
g62
(dp4529
sg71
g4514
sg64
(lp4530
g57
(g58
g59
NtRp4531
(dp4532
g62
(dp4533
g70
I4
ssg71
g4527
sg64
(lp4534
S'Web2py Web Framework'
p4535
asbasbasbag57
(g73
g59
NtRp4536
(dp4537
g62
(dp4538
sg71
g4444
sg64
(lp4539
g57
(g78
g59
NtRp4540
(dp4541
g62
(dp4542
g82
g83
ssg71
g4536
sg64
(lp4543
S'keywords'
p4544
asbag57
(g78
g59
NtRp4545
(dp4546
g62
(dp4547
g89
g90
ssg71
g4536
sg64
(lp4548
S':'
asbag57
(g78
g59
NtRp4549
(dp4550
g62
(dp4551
sg71
g4536
sg64
(lp4552
g57
(g58
g59
NtRp4553
(dp4554
g62
(dp4555
g70
I4
ssg71
g4549
sg64
(lp4556
S'web2py, python, metabolome, metabolomics'
p4557
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4558
(dp4559
g62
(dp4560
sg71
g3759
sg64
(lp4561
g57
(g78
g59
NtRp4562
(dp4563
g62
(dp4564
g82
g83
ssg71
g4558
sg64
(lp4565
S'models_to_run'
p4566
asbag57
(g78
g59
NtRp4567
(dp4568
g62
(dp4569
g89
g90
ssg71
g4558
sg64
(lp4570
S':'
asbag57
(g78
g59
NtRp4571
(dp4572
g62
(dp4573
sg71
g4558
sg64
(lp4574
g57
(g58
g59
NtRp4575
(dp4576
g62
(dp4577
g70
I5
ssg71
g4571
sg64
(lp4578
g57
(g66
g59
NtRp4579
(dp4580
g62
(dp4581
g70
I4
ssg71
Nsg64
(lp4582
g57
(g73
g59
NtRp4583
(dp4584
g62
(dp4585
sg71
g4579
sg64
(lp4586
g57
(g78
g59
NtRp4587
(dp4588
g62
(dp4589
sg71
g4583
sg64
(lp4590
g57
(g58
g59
NtRp4591
(dp4592
g62
(dp4593
g70
I4
ssg71
g4587
sg64
(lp4594
S'^\\w+\\.py$'
p4595
asbasbasbag57
(g73
g59
NtRp4596
(dp4597
g62
(dp4598
sg71
g4579
sg64
(lp4599
g57
(g78
g59
NtRp4600
(dp4601
g62
(dp4602
sg71
g4596
sg64
(lp4603
g57
(g58
g59
NtRp4604
(dp4605
g62
(dp4606
g70
I4
ssg71
g4600
sg64
(lp4607
S'^default/\\w+\\.py$'
p4608
asbasbasbag57
(g73
g59
NtRp4609
(dp4610
g62
(dp4611
sg71
g4579
sg64
(lp4612
g57
(g78
g59
NtRp4613
(dp4614
g62
(dp4615
sg71
g4609
sg64
(lp4616
g57
(g58
g59
NtRp4617
(dp4618
g62
(dp4619
g70
I4
ssg71
g4613
sg64
(lp4620
S'^default/list_all_dev_projects/\\w+\\.py$'
p4621
asbasbasbasbasbasbasbag57
(g73
g59
NtRp4622
(dp4623
g62
(dp4624
sg71
g3759
sg64
(lp4625
g57
(g78
g59
NtRp4626
(dp4627
g62
(dp4628
g82
g83
ssg71
g4622
sg64
(lp4629
S'postprocessing'
p4630
asbag57
(g78
g59
NtRp4631
(dp4632
g62
(dp4633
g89
g90
ssg71
g4622
sg64
(lp4634
S':'
asbag57
(g78
g59
NtRp4635
(dp4636
g62
(dp4637
sg71
g4622
sg64
(lp4638
g57
(g58
g59
NtRp4639
(dp4640
g62
(dp4641
g70
I5
ssg71
g4635
sg64
(lp4642
g57
(g66
g59
NtRp4643
(dp4644
g62
(dp4645
g70
I4
ssg71
Nsg64
(lp4646
sbasbasbasbag57
(g73
g59
NtRp4647
(dp4648
g62
(dp4649
sg71
g3759
sg64
(lp4650
g57
(g78
g59
NtRp4651
(dp4652
g62
(dp4653
g82
g83
ssg71
g4647
sg64
(lp4654
S'session_cookie_expires'
p4655
asbag57
(g78
g59
NtRp4656
(dp4657
g62
(dp4658
g89
g90
ssg71
g4647
sg64
(lp4659
S':'
asbag57
(g78
g59
NtRp4660
(dp4661
g62
(dp4662
sg71
g4647
sg64
(lp4663
g57
(g58
g59
NtRp4664
(dp4665
g62
(dp4666
g70
I5
ssg71
g4660
sg64
(lp4667
S'None'
p4668
asbasbasbag57
(g73
g59
NtRp4669
(dp4670
g62
(dp4671
sg71
g3759
sg64
(lp4672
g57
(g78
g59
NtRp4673
(dp4674
g62
(dp4675
g82
g83
ssg71
g4669
sg64
(lp4676
S'session_data_name'
p4677
asbag57
(g78
g59
NtRp4678
(dp4679
g62
(dp4680
g89
g90
ssg71
g4669
sg64
(lp4681
S':'
asbag57
(g78
g59
NtRp4682
(dp4683
g62
(dp4684
sg71
g4669
sg64
(lp4685
g57
(g58
g59
NtRp4686
(dp4687
g62
(dp4688
g70
I5
ssg71
g4682
sg64
(lp4689
S'session_data_dev_bootstrap_ch'
p4690
asbasbasbag57
(g73
g59
NtRp4691
(dp4692
g62
(dp4693
sg71
g3759
sg64
(lp4694
g57
(g78
g59
NtRp4695
(dp4696
g62
(dp4697
g82
g83
ssg71
g4691
sg64
(lp4698
S'session_file'
p4699
asbag57
(g78
g59
NtRp4700
(dp4701
g62
(dp4702
g89
g90
ssg71
g4691
sg64
(lp4703
S':'
asbag57
(g78
g59
NtRp4704
(dp4705
g62
(dp4706
sg71
g4691
sg64
(lp4707
g57
(g58
g59
NtRp4708
(dp4709
g62
(dp4710
g70
I5
ssg71
g4704
sg64
(lp4711
S"<open file '/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510', mode 'rb+' at 0xaff8cb20>"
p4712
asbasbasbag57
(g73
g59
NtRp4713
(dp4714
g62
(dp4715
sg71
g3759
sg64
(lp4716
g57
(g78
g59
NtRp4717
(dp4718
g62
(dp4719
g82
g83
ssg71
g4713
sg64
(lp4720
S'session_filename'
p4721
asbag57
(g78
g59
NtRp4722
(dp4723
g62
(dp4724
g89
g90
ssg71
g4713
sg64
(lp4725
S':'
asbag57
(g78
g59
NtRp4726
(dp4727
g62
(dp4728
sg71
g4713
sg64
(lp4729
g57
(g58
g59
NtRp4730
(dp4731
g62
(dp4732
g70
I5
ssg71
g4726
sg64
(lp4733
S'/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/sessions/127.0.0.1-270b038b-df00-4d5c-949a-e87692880510'
p4734
asbasbasbag57
(g73
g59
NtRp4735
(dp4736
g62
(dp4737
sg71
g3759
sg64
(lp4738
g57
(g78
g59
NtRp4739
(dp4740
g62
(dp4741
g82
g83
ssg71
g4735
sg64
(lp4742
S'session_id'
p4743
asbag57
(g78
g59
NtRp4744
(dp4745
g62
(dp4746
g89
g90
ssg71
g4735
sg64
(lp4747
S':'
asbag57
(g78
g59
NtRp4748
(dp4749
g62
(dp4750
sg71
g4735
sg64
(lp4751
g57
(g58
g59
NtRp4752
(dp4753
g62
(dp4754
g70
I5
ssg71
g4748
sg64
(lp4755
g344
asbasbasbag57
(g73
g59
NtRp4756
(dp4757
g62
(dp4758
sg71
g3759
sg64
(lp4759
g57
(g78
g59
NtRp4760
(dp4761
g62
(dp4762
g82
g83
ssg71
g4756
sg64
(lp4763
S'session_id_name'
p4764
asbag57
(g78
g59
NtRp4765
(dp4766
g62
(dp4767
g89
g90
ssg71
g4756
sg64
(lp4768
S':'
asbag57
(g78
g59
NtRp4769
(dp4770
g62
(dp4771
sg71
g4756
sg64
(lp4772
g57
(g58
g59
NtRp4773
(dp4774
g62
(dp4775
g70
I5
ssg71
g4769
sg64
(lp4776
g3816
asbasbasbag57
(g73
g59
NtRp4777
(dp4778
g62
(dp4779
sg71
g3759
sg64
(lp4780
g57
(g78
g59
NtRp4781
(dp4782
g62
(dp4783
g82
g83
ssg71
g4777
sg64
(lp4784
S'session_locked'
p4785
asbag57
(g78
g59
NtRp4786
(dp4787
g62
(dp4788
g89
g90
ssg71
g4777
sg64
(lp4789
S':'
asbag57
(g78
g59
NtRp4790
(dp4791
g62
(dp4792
sg71
g4777
sg64
(lp4793
g57
(g58
g59
NtRp4794
(dp4795
g62
(dp4796
g70
I5
ssg71
g4790
sg64
(lp4797
g1484
asbasbasbag57
(g73
g59
NtRp4798
(dp4799
g62
(dp4800
sg71
g3759
sg64
(lp4801
g57
(g78
g59
NtRp4802
(dp4803
g62
(dp4804
g82
g83
ssg71
g4798
sg64
(lp4805
S'session_new'
p4806
asbag57
(g78
g59
NtRp4807
(dp4808
g62
(dp4809
g89
g90
ssg71
g4798
sg64
(lp4810
S':'
asbag57
(g78
g59
NtRp4811
(dp4812
g62
(dp4813
sg71
g4798
sg64
(lp4814
g57
(g58
g59
NtRp4815
(dp4816
g62
(dp4817
g70
I5
ssg71
g4811
sg64
(lp4818
g100
asbasbasbag57
(g73
g59
NtRp4819
(dp4820
g62
(dp4821
sg71
g3759
sg64
(lp4822
g57
(g78
g59
NtRp4823
(dp4824
g62
(dp4825
g82
g83
ssg71
g4819
sg64
(lp4826
S'session_storage_type'
p4827
asbag57
(g78
g59
NtRp4828
(dp4829
g62
(dp4830
g89
g90
ssg71
g4819
sg64
(lp4831
S':'
asbag57
(g78
g59
NtRp4832
(dp4833
g62
(dp4834
sg71
g4819
sg64
(lp4835
g57
(g58
g59
NtRp4836
(dp4837
g62
(dp4838
g70
I5
ssg71
g4832
sg64
(lp4839
g2962
asbasbasbag57
(g73
g59
NtRp4840
(dp4841
g62
(dp4842
sg71
g3759
sg64
(lp4843
g57
(g78
g59
NtRp4844
(dp4845
g62
(dp4846
g82
g83
ssg71
g4840
sg64
(lp4847
S'status'
p4848
asbag57
(g78
g59
NtRp4849
(dp4850
g62
(dp4851
g89
g90
ssg71
g4840
sg64
(lp4852
S':'
asbag57
(g78
g59
NtRp4853
(dp4854
g62
(dp4855
sg71
g4840
sg64
(lp4856
g57
(g58
g59
NtRp4857
(dp4858
g62
(dp4859
g70
I5
ssg71
g4853
sg64
(lp4860
S'200'
p4861
asbasbasbag57
(g73
g59
NtRp4862
(dp4863
g62
(dp4864
sg71
g3759
sg64
(lp4865
g57
(g78
g59
NtRp4866
(dp4867
g62
(dp4868
g82
g83
ssg71
g4862
sg64
(lp4869
S'subtitle'
p4870
asbag57
(g78
g59
NtRp4871
(dp4872
g62
(dp4873
g89
g90
ssg71
g4862
sg64
(lp4874
S':'
asbag57
(g78
g59
NtRp4875
(dp4876
g62
(dp4877
sg71
g4862
sg64
(lp4878
g57
(g58
g59
NtRp4879
(dp4880
g62
(dp4881
g70
I5
ssg71
g4875
sg64
(lp4882
g4380
(S's)\x00\x00\x00Computational Core for Plant Metabolomics'
tRp4883
asbasbasbag57
(g73
g59
NtRp4884
(dp4885
g62
(dp4886
sg71
g3759
sg64
(lp4887
g57
(g78
g59
NtRp4888
(dp4889
g62
(dp4890
g82
g83
ssg71
g4884
sg64
(lp4891
g3625
asbag57
(g78
g59
NtRp4892
(dp4893
g62
(dp4894
g89
g90
ssg71
g4884
sg64
(lp4895
S':'
asbag57
(g78
g59
NtRp4896
(dp4897
g62
(dp4898
sg71
g4884
sg64
(lp4899
g57
(g58
g59
NtRp4900
(dp4901
g62
(dp4902
g70
I5
ssg71
g4896
sg64
(lp4903
g122
asbasbasbag57
(g73
g59
NtRp4904
(dp4905
g62
(dp4906
sg71
g3759
sg64
(lp4907
g57
(g78
g59
NtRp4908
(dp4909
g62
(dp4910
g82
g83
ssg71
g4904
sg64
(lp4911
S'view'
p4912
asbag57
(g78
g59
NtRp4913
(dp4914
g62
(dp4915
g89
g90
ssg71
g4904
sg64
(lp4916
S':'
asbag57
(g78
g59
NtRp4917
(dp4918
g62
(dp4919
sg71
g4904
sg64
(lp4920
g57
(g58
g59
NtRp4921
(dp4922
g62
(dp4923
g70
I5
ssg71
g4917
sg64
(lp4924
S'default/list_all_dev_projects.html'
p4925
asbasbasbasbasbsS'locals'
p4926
(dp4927
S'row'
p4928
S"<Row {'publication_status': False, 'code': '32', 'replica': 'replicate', 'name': '12', 'id': 2}>"
p4929
sssS'traceback'
p4930
S'Traceback (most recent call last):\n  File "/home/anil/bootstrap/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 1104, in <module>\n  File "/home/anil/bootstrap/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 317, in list_all_dev_projects\n    grid = SQLFORM.smartgrid(db.project,ck,fields=fi,editable=edit_dict,create=create_dict,deletable=delete_dict,links=links,linked_tables=[\'experiment\',\'sample\',\'biosource\',\'plant_growth_condition\',\'treatments\',\'harvests\',\'extraction_preparation\',\'gas_chromatography\',\'liquid_chromatography\',\'mass_spectroscopy\',\'spectrophotometry\',\'raw_data_storage_information\'])\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2489, in smartgrid\n    user_signature=user_signature, **kwargs)\n  File "/home/anil/bootstrap/web2py/gluon/sqlhtml.py", line 2258, in grid\n    if link(row):\n  File "/home/anil/bootstrap/web2py/applications/DEV_bootstrap_ch/controllers/default.py", line 312, in <lambda>\n    l1=[lambda row: A(\'copy\'+row.id,_href=URL("default","replicate",args=[\'project\',request.args[1],request.args[2],request.args[3],request.args[4],row.id]))]\nTypeError: cannot concatenate \'str\' and \'int\' objects\n'
p4931
s.